digraph  {
n377 [label="QuantConnect.Algorithm.QCAlgorithm", span=""];
n378 [label="QuantConnect.Securities.Option.OptionStrategy", span=""];
n379 [label=optionLeg, span=""];
n0 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
n1 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="42-42"];
n2 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
n3 [cluster="System.Math.Abs(int)", label="Entry System.Math.Abs(int)", span="0-0"];
n4 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
n5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
n6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="53-53"];
n7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
n8 [cluster="System.Math.Abs(double)", label="Entry System.Math.Abs(double)", span="0-0"];
n9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
n10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", label="return Order(symbol, Math.Abs(quantity));", span="64-64"];
n11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
n12 [cluster="System.Math.Abs(decimal)", label="Entry System.Math.Abs(decimal)", span="0-0"];
n13 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
n14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="75-75"];
n15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
n16 [cluster="System.Math.Abs(float)", label="Entry System.Math.Abs(float)", span="0-0"];
n17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85"];
n18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1);", span="87-87"];
n19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85"];
n20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96"];
n21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1);", span="98-98"];
n22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96"];
n23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
n24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1m);", span="109-109"];
n25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
n26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
n27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", label="return Order(symbol, Math.Abs(quantity) * -1);", span="120-120"];
n28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
n29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
n30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", label="return Order(symbol, (decimal)quantity);", span="129-129"];
n31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
n32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
n33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", label="return MarketOrder(symbol, (decimal)quantity);", span="138-138"];
n34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
n35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
n36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", label="return MarketOrder(symbol, quantity);", span="147-147"];
n37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
n38 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158"];
n39 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="160-160"];
n40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158"];
n41 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
n42 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="173-173"];
n43 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
n44 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184"];
n45 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="186-186"];
n46 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184"];
n47 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="var security = Securities[symbol]", span="199-199"];
n49 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="205-205"];
n54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag, DefaultOrderProperties?.Clone())", span="214-214"];
n61 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="!asynchronous", span="233-233"];
n48 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="!security.Exchange.ExchangeOpen", span="203-203"];
n50 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="var anyNonDailySubscriptions = security.Subscriptions.Any(x => x.Resolution != Resolution.Daily)", span="206-206"];
n65 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272"];
n51 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="mooTicket.SubmitRequest.Response.IsSuccess && !anyNonDailySubscriptions", span="207-207"];
n52 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="209-209"];
n53 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="return mooTicket;", span="211-211"];
n66 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n75 [cluster="lambda expression", label="Entry lambda expression", span="206-206"];
n67 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1727-1727"];
n55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label=IsWarmingUp, span="217-217"];
n68 [cluster="QuantConnect.Interfaces.IOrderProperties.Clone()", label="Entry QuantConnect.Interfaces.IOrderProperties.Clone()", span="25-25"];
n69 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", span="1007-1007"];
n56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="219-219"];
n57 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="var preOrderCheckResponse = PreOrderChecks(request)", span="223-223"];
n59 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="226-226"];
n60 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="var ticket = Transactions.AddOrder(request)", span="230-230"];
n58 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="preOrderCheckResponse.IsError", span="224-224"];
n71 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625"];
n73 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="153-153"];
n62 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="Transactions.WaitForOrder(ticket.OrderId)", span="235-235"];
n63 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="return ticket;", span="238-238"];
n74 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="237-237"];
n64 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
n72 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="435-435"];
n70 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="444-444"];
n76 [cluster="lambda expression", label="x.Resolution != Resolution.Daily", span="206-206"];
n77 [cluster="lambda expression", label="Exit lambda expression", span="206-206"];
n78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
n79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="250-250"];
n80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
n81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
n82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="262-262"];
n83 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
n84 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", label="var security = Securities[symbol]", span="274-274"];
n85 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnOpen, security, quantity, tag, DefaultOrderProperties?.Clone())", span="275-275"];
n86 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", label="var response = PreOrderChecks(request)", span="276-276"];
n88 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="279-279"];
n89 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", label="return Transactions.AddOrder(request);", span="282-282"];
n87 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", label="response.IsError", span="277-277"];
n90 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272"];
n91 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
n92 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="294-294"];
n93 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
n94 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
n95 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304"];
n96 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="306-306"];
n97 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304"];
n98 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", label="var security = Securities[symbol]", span="318-318"];
n99 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag, DefaultOrderProperties?.Clone())", span="319-319"];
n100 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", label="var response = PreOrderChecks(request)", span="320-320"];
n102 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="323-323"];
n103 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", label="return Transactions.AddOrder(request);", span="326-326"];
n101 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", label="response.IsError", span="321-321"];
n104 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
n105 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
n106 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="339-339"];
n107 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
n108 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
n109 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350"];
n110 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="352-352"];
n111 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350"];
n112 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", label="var security = Securities[symbol]", span="365-365"];
n113 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", label="var request = CreateSubmitOrderRequest(OrderType.Limit, security, quantity, tag, limitPrice: limitPrice, properties: DefaultOrderProperties?.Clone())", span="366-366"];
n114 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", label="var response = PreOrderChecks(request)", span="367-367"];
n116 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="370-370"];
n117 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", label="return Transactions.AddOrder(request);", span="373-373"];
n115 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", label="response.IsError", span="368-368"];
n118 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
n119 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384"];
n120 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="386-386"];
n121 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384"];
n122 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
n123 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397"];
n124 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="399-399"];
n125 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397"];
n126 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", label="var security = Securities[symbol]", span="412-412"];
n127 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", label="var request = CreateSubmitOrderRequest(OrderType.StopMarket, security, quantity, tag, stopPrice: stopPrice, properties: DefaultOrderProperties?.Clone())", span="413-413"];
n128 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", label="var response = PreOrderChecks(request)", span="414-414"];
n130 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="417-417"];
n131 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", label="return Transactions.AddOrder(request);", span="420-420"];
n129 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", label="response.IsError", span="415-415"];
n132 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
n133 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
n134 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="434-434"];
n135 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
n136 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
n137 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
n138 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="448-448"];
n139 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
n140 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", label="var security = Securities[symbol]", span="462-462"];
n141 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", label="var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice, properties: DefaultOrderProperties?.Clone())", span="463-463"];
n142 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", label="var response = PreOrderChecks(request)", span="464-464"];
n144 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="467-467"];
n145 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", label="return Transactions.AddOrder(request);", span="471-471"];
n143 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", label="response.IsError", span="465-465"];
n146 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
n147 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
n148 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="var option = (Option)Securities[optionSymbol]", span="483-483"];
n149 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="var request = CreateSubmitOrderRequest(OrderType.OptionExercise, option, quantity, tag, DefaultOrderProperties?.Clone())", span="485-485"];
n156 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="!asynchronous", span="504-504"];
n150 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label=IsWarmingUp, span="488-488"];
n151 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="490-490"];
n152 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="var preOrderCheckResponse = PreOrderChecks(request)", span="494-494"];
n154 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="497-497"];
n155 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="var ticket = Transactions.AddOrder(request)", span="501-501"];
n153 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="preOrderCheckResponse.IsError", span="495-495"];
n157 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="Transactions.WaitForOrder(ticket.OrderId)", span="506-506"];
n158 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="return ticket;", span="509-509"];
n159 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
n160 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
n161 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", label="return Order(strategy, Math.Abs(quantity));", span="522-522"];
n162 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
n163 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542"];
n164 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531"];
n165 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", label="return Order(strategy, Math.Abs(quantity) * -1);", span="533-533"];
n166 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531"];
n167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", label="return GenerateOrders(strategy, quantity);", span="544-544"];
n168 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542"];
n169 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547"];
n170 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="var orders = new List<OrderTicket>()", span="549-549"];
n171 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="var strategyTag = strategy.Name + '' ('' + strategyQuantity.ToString() + '')''", span="552-552"];
n172 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="strategy.OptionLegs != null", span="555-555"];
n173 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="strategy.OptionLegs", span="557-557"];
n174 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="var optionSeq = Securities.Where(kv => kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike)", span="559-562"];
n219 [cluster="lambda expression", label="kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike", span="559-562"];
n176 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="var error = string.Format(''Couldn't find the option contract in algorithm securities list. Underlying: {0}, option {1}, strike {2}, expiration: {3}'',\r\n                                strategy.Underlying.ToString(), optionLeg.Right.ToString(), optionLeg.Strike.ToString(), optionLeg.Expiration.ToString())", span="566-567"];
n181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="var marketOrder = MarketOrder(option, optionLeg.Quantity * strategyQuantity, tag: strategyTag)", span="576-576"];
n184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="var limitOrder = LimitOrder(option, optionLeg.Quantity * strategyQuantity, optionLeg.OrderPrice, tag: strategyTag)", span="580-580"];
n187 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="strategy.UnderlyingLegs != null", span="590-590"];
n188 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="strategy.UnderlyingLegs", span="592-592"];
n189 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="!Securities.ContainsKey(strategy.Underlying)", span="594-594"];
n190 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="var error = string.Format(''Couldn't find the option contract underlying in algorithm securities list. Underlying: {0}'', strategy.Underlying.ToString())", span="596-596"];
n194 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="var marketOrder = MarketOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, tag: strategyTag)", span="603-603"];
n197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="var limitOrder = LimitOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, underlyingLeg.OrderPrice, tag: strategyTag)", span="607-607"];
n202 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="orders.Add(marketOrder)", span="577-577"];
n185 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="orders.Add(limitOrder)", span="581-581"];
n195 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="orders.Add(marketOrder)", span="604-604"];
n198 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="orders.Add(limitOrder)", span="608-608"];
n200 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="return orders;", span="615-615"];
n203 [cluster="int.ToString()", label="Entry int.ToString()", span="0-0"];
n179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="optionLeg.OrderType", span="573-573"];
n186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + optionLeg.OrderType.ToString());", span="584-584"];
n175 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="optionSeq.Count() != 1", span="564-564"];
n204 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n218 [cluster="lambda expression", label="Entry lambda expression", span="559-562"];
n178 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="var option = optionSeq.First().Key", span="571-571"];
n205 [cluster="Unk.Count", label="Entry Unk.Count", span=""];
n177 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="throw new InvalidOperationException(error);", span="568-568"];
n206 [cluster="QuantConnect.Symbol.ToString()", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
n207 [cluster="System.Enum.ToString()", label="Entry System.Enum.ToString()", span="0-0"];
n208 [cluster="decimal.ToString()", label="Entry decimal.ToString()", span="0-0"];
n209 [cluster="System.DateTime.ToString()", label="Entry System.DateTime.ToString()", span="0-0"];
n210 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
n212 [cluster="Unk.First", label="Entry Unk.First", span=""];
n180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="OrderType.Market", span="575-575"];
n183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="OrderType.Limit", span="579-579"];
n213 [cluster="Unk.MarketOrder", label="Entry Unk.MarketOrder", span=""];
n215 [cluster="Unk.LimitOrder", label="Entry Unk.LimitOrder", span=""];
n214 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n192 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="underlyingLeg.OrderType", span="600-600"];
n199 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + underlyingLeg.OrderType.ToString());", span="611-611"];
n216 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
n191 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="throw new InvalidOperationException(error);", span="597-597"];
n217 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n193 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="OrderType.Market", span="602-602"];
n196 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="OrderType.Limit", span="606-606"];
n201 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547"];
n211 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
n220 [cluster="lambda expression", label="Exit lambda expression", span="559-562"];
n221 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", label="var response = PreOrderChecksImpl(request)", span="627-627"];
n222 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", label="response.IsError", span="628-628"];
n226 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640"];
n223 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", label="Error(response.ErrorMessage)", span="630-630"];
n224 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", label="return response;", span="632-632"];
n227 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1752-1752"];
n225 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625"];
n228 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label=IsWarmingUp, span="642-642"];
n229 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.WarmingUp(request);", span="644-644"];
n231 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="!Securities.TryGetValue(request.Symbol, out security)", span="650-650"];
n232 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.MissingSecurity, ''You haven't requested '' + request.Symbol.ToString() + '' data. Add this with AddSecurity() in the Initialize() Method.'');", span="652-652"];
n233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="request.Quantity == 0", span="656-656"];
n234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.ZeroQuantity(request);", span="658-658"];
n235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="Math.Abs(request.Quantity) < security.SymbolProperties.LotSize", span="661-661"];
n236 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.OrderQuantityLessThanLoteSize, $''Unable to {request.OrderRequestType.ToString().ToLower()} order with id {request.OrderId} which quantity ({Math.Abs(request.Quantity)}) is less than lot size ({security.SymbolProperties.LotSize}).'');", span="663-663"];
n238 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="668-668"];
n240 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="674-674"];
n241 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="676-676"];
n242 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="request.OrderType == OrderType.OptionExercise && !security.Exchange.ExchangeOpen", span="680-680"];
n243 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="682-682"];
n245 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="687-687"];
n249 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.QuoteCurrencyRequired, request.Symbol.Value + '': requires '' + quoteCurrency + '' in the cashbook to trade.'');", span="695-695"];
n251 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.ConversionRateZero, request.Symbol.Value + '': requires '' + quoteCurrency + '' to have a non-zero conversion rate. This can be caused by lack of data.'');", span="699-699"];
n256 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' in the cashbook to trade.'');", span="709-709"];
n258 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexConversionRateZero, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' to have non-zero conversion rates. This can be caused by lack of data.'');", span="713-713"];
n260 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityHasNoData, ''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'');", span="720-720"];
n263 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="727-727"];
n264 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="request.OrderType == OrderType.OptionExercise", span="730-730"];
n266 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonExercisableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is not exercisable.'');", span="733-733"];
n268 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''The security with symbol ''' + request.Symbol.ToString() + ''' has a short option position. Only long option positions are exercisable.'');", span="736-736"];
n269 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="request.Quantity > security.Holdings.Quantity", span="738-738"];
n270 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''Cannot exercise more contracts of ''' + request.Symbol.ToString() + ''' than is currently available in the portfolio. '');", span="739-739"];
n271 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="request.Quantity <= 0.0m", span="741-741"];
n272 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="OrderResponse.ZeroQuantity(request)", span="742-742"];
n273 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="request.OrderType == OrderType.MarketOnClose", span="745-745"];
n277 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="755-755"];
n278 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="return OrderResponse.Success(request);", span="760-760"];
n230 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="Security security", span="649-649"];
n281 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
n237 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="!security.IsTradable", span="666-666"];
n239 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="var price = security.Price", span="671-671"];
n247 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="var quoteCurrency = security.QuoteCurrency.Symbol", span="692-692"];
n250 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="security.QuoteCurrency.ConversionRate == 0m", span="697-697"];
n252 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="security.Type == SecurityType.Forex || security.Type == SecurityType.Crypto", span="703-703"];
n254 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="var baseCurrency = ((IBaseCurrencySymbol)security).BaseCurrencySymbol", span="706-706"];
n259 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="!security.HasData", span="718-718"];
n265 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="security.Type != SecurityType.Option", span="732-732"];
n267 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="security.Holdings.IsShort", span="735-735"];
n274 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="747-747"];
n276 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="750-750"];
n244 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="price == 0", span="685-685"];
n246 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="Cash quoteCash", span="691-691"];
n248 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="!Portfolio.CashBook.TryGetValue(quoteCurrency, out quoteCash)", span="693-693"];
n285 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="235-235"];
n253 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="Cash baseCash", span="705-705"];
n255 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="707-707"];
n257 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="baseCash.ConversionRate == 0m", span="711-711"];
n261 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="Transactions.OrdersCount > _maxOrders", span="724-724"];
n262 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="Status = AlgorithmStatus.Stopped", span="726-726"];
n283 [cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154"];
n275 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="var latestSubmissionTime = nextMarketClose.Subtract(Orders.MarketOnCloseOrder.DefaultSubmissionTimeBuffer)", span="749-749"];
n286 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
n287 [cluster="System.DateTime.Subtract(System.TimeSpan)", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
n279 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640"];
n282 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
n288 [cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120"];
n284 [cluster="string.ToLower()", label="Entry string.ToLower()", span="0-0"];
n280 [cluster="QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", label="Entry QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", span="164-164"];
n289 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770"];
n290 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="var orderIdList = new List<int>()", span="772-772"];
n292 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="symbol != symbolToLiquidate && symbolToLiquidate != null", span="777-777"];
n302 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="Transactions.CancelOrder(order.Id, tag)", span="806-806"];
n304 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="var ticket = Order(symbol, -quantity - marketOrdersQuantity, tag: tag)", span="814-814"];
n291 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="Securities.Keys.OrderBy(x => x.Value)", span="774-774"];
n306 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="orderIdList.Add(ticket.OrderId)", span="817-817"];
n307 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="return orderIdList;", span="822-822"];
n309 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
n313 [cluster="lambda expression", label="Entry lambda expression", span="774-774"];
n293 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="var orders = Transactions.GetOpenOrders(symbol)", span="781-781"];
n294 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="var quantity = Portfolio[symbol].Quantity", span="784-784"];
n310 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="269-269"];
n295 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="787-787"];
n297 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label=orders, span="792-792"];
n303 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="quantity != 0", span="811-811"];
n296 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="var marketOrdersQuantity = 0m", span="791-791"];
n301 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="801-801"];
n298 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="order.Type == OrderType.Market", span="794-794"];
n299 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="var ticket = Transactions.GetOrderTicket(order.Id)", span="797-797"];
n300 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="ticket != null", span="798-798"];
n311 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="225-225"];
n312 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="173-173"];
n305 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="ticket.Status == OrderStatus.Filled", span="815-815"];
n308 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770"];
n314 [cluster="lambda expression", label="x.Value", span="774-774"];
n315 [cluster="lambda expression", label="Exit lambda expression", span="774-774"];
n316 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="829-829"];
n317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", label="!_locked", span="831-831"];
n318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", label="_maxOrders = max", span="833-833"];
n319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="829-829"];
n320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="844-844"];
n321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="846-846"];
n322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="844-844"];
n323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="885-885"];
n324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="857-857"];
n325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="859-859"];
n326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="857-857"];
n327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="870-870"];
n328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="872-872"];
n329 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="870-870"];
n330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="Security security", span="888-888"];
n331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="!Securities.TryGetValue(symbol, out security)", span="889-889"];
n332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="891-891"];
n334 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label=liquidateExistingHoldings, span="896-896"];
n338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="902-902"];
n340 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="Order(holdingSymbol, liquidationQuantity, false, tag)", span="906-906"];
n341 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="var quantity = CalculateOrderQuantity(symbol, percentage)", span="912-912"];
n343 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="MarketOrder(symbol, quantity, false, tag)", span="915-915"];
n333 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="return;", span="892-892"];
n335 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label=Portfolio, span="898-898"];
n336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="var holdingSymbol = kvp.Key", span="900-900"];
n337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="var holdings = kvp.Value", span="901-901"];
n339 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="var liquidationQuantity = CalculateOrderQuantity(holdingSymbol, 0m)", span="905-905"];
n345 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="938-938"];
n342 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="Math.Abs(quantity) > 0", span="913-913"];
n344 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="885-885"];
n346 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="925-925"];
n347 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", label="return CalculateOrderQuantity(symbol, (decimal)target);", span="927-927"];
n348 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="925-925"];
n349 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", label="var security = Securities[symbol]", span="940-940"];
n352 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", label="var targetPortfolioValue = target * Portfolio.TotalPortfolioValue", span="946-946"];
n350 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", label="security.Price == 0", span="943-943"];
n353 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", label="return security.BuyingPowerModel.GetMaximumOrderQuantityForTargetValue(Portfolio, security, targetPortfolioValue);", span="948-948"];
n351 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", label="return 0;", span="943-943"];
n354 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="938-938"];
n355 [cluster="QuantConnect.Securities.IBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="Entry QuantConnect.Securities.IBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="57-57"];
n356 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="962-962"];
n357 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", label="return Order(symbol, quantity, asynchronous, tag);", span="964-964"];
n358 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="962-962"];
n359 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="974-974"];
n360 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", label="return Order(symbol, quantity);", span="976-976"];
n361 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="974-974"];
n362 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="986-986"];
n363 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", label="return Order(symbol, (decimal)quantity);", span="988-988"];
n364 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="986-986"];
n365 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", label="Entry QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="996-996"];
n366 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", label="var exchangeHours = MarketHoursDatabase\r\n                .FromDataFolder()\r\n                .GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType)", span="998-1000"];
n367 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", label="var time = UtcTime.ConvertFromUtc(exchangeHours.TimeZone)", span="1002-1002"];
n370 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
n371 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="74-74"];
n368 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", label="return exchangeHours.IsOpen(time, false);", span="1004-1004"];
n372 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="605-605"];
n369 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", label="Exit QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="996-996"];
n373 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124"];
n374 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", label="return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag, properties);", span="1009-1009"];
n375 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", span="1007-1007"];
n376 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
d1 [cluster="QuantConnect.TestCashStrategy.Initialize()", color=green, community=0, label="32: SetStartDate(2013, 1, 1)", span="32-32"];
d69 [label="QuantConnect.TestCashStrategy", span=""];
d0 [cluster="QuantConnect.TestCashStrategy.Initialize()", label="Entry QuantConnect.TestCashStrategy.Initialize()", span="30-30"];
d2 [cluster="QuantConnect.TestCashStrategy.Initialize()", color=green, community=0, label="50: SetEndDate(2013, 12, 31)", span="33-33"];
d6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="445-445"];
d17 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 4, 1)", span="55-55"];
d3 [cluster="QuantConnect.TestCashStrategy.Initialize()", color=green, community=0, label="32: SetCash(100000)", span="34-34"];
d7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="470-470"];
d4 [cluster="QuantConnect.TestCashStrategy.Initialize()", color=green, community=0, label="50: AddData<CashType>(''CASH'')", span="35-35"];
d8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="412-412"];
d5 [cluster="QuantConnect.TestCashStrategy.Initialize()", label="Exit QuantConnect.TestCashStrategy.Initialize()", span="30-30"];
d9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="673-673"];
d18 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", color=green, community=0, label="23: Order(''CASH'', -50)", span="57-57"];
d37 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label=Exception, span="96-96"];
d39 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Exit QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", span="38-38"];
d41 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", span="194-194"];
d22 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", color=green, community=0, label="23: Order(''CASH'', 100)", span="65-65"];
d21 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 6, 1)", span="63-63"];
d31 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", color=green, community=0, label="32: Time == new DateTime(2013, 11, 1)", span="83-83"];
d29 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 10, 1)", span="79-79"];
d32 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Order(''CASH'', +50)", span="85-85"];
d33 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 12, 1)", span="87-87"];
d40 [cluster="System.DateTime.DateTime(int, int, int)", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
d11 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 1, 1)", span="43-43"];
d12 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Order(''CASH'', 100)", span="45-45"];
d13 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 2, 1)", span="47-47"];
d14 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Order(''CASH'', -50)", span="49-49"];
d15 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 3, 1)", span="51-51"];
d16 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Order(''CASH'', -100)", span="53-53"];
d19 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 5, 1)", span="59-59"];
d20 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Order(''CASH'', 50)", span="61-61"];
d23 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 7, 1)", span="67-67"];
d24 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Order(''CASH'', 50)", span="69-69"];
d25 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 8, 1)", span="71-71"];
d26 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Order(''CASH'', -50)", span="73-73"];
d27 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 9, 1)", span="75-75"];
d28 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Order(''CASH'', -100)", span="77-77"];
d30 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Order(''CASH'', -50)", span="81-81"];
d34 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Order(''CASH'', +100)", span="89-89"];
d35 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Time == new DateTime(2013, 12, 15)", span="91-91"];
d36 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Order(''CASH'', -50)", span="93-93"];
d38 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Debug(''Err: '' + err.Message)", span="98-98"];
d44 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", label="Plot(''Cash'', Portfolio.Cash)", span="107-107"];
d45 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", label="Plot(''PortfolioValue'', Portfolio.TotalPortfolioValue)", span="108-108"];
d46 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", label="Plot(''HoldingValue'', Portfolio[''CASH''].HoldingsValue)", span="109-109"];
d47 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", label="Plot(''HoldingQuantity'', Portfolio[''CASH''].Quantity)", span="110-110"];
d49 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", label="Debug(''Err: '' + err.Message)", span="114-114"];
d10 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", label="Entry QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", span="38-38"];
d42 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="710-710"];
d43 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", label="Entry QuantConnect.TestCashStrategy.OnEndOfDay()", span="103-103"];
d51 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="73-73"];
d48 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", label=Exception, span="112-112"];
d50 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", label="Exit QuantConnect.TestCashStrategy.OnEndOfDay()", span="103-103"];
d52 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", span="123-123"];
m0_165 [cluster="QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.CancelOrderRequest.CancelOrderRequest(System.DateTime, int, string)", span="38-38"];
m0_2 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="47-47"];
m0_3 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="BrokerageTransactionHandler.cs", label="return Enumerable.Empty<Slice>();", span="49-49"];
m0_4 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="47-47"];
m0_91 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", span="155-155"];
m0_92 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="158-158"];
m0_93 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="159-159"];
m0_101 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="173-173"];
m0_103 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="175-175"];
m0_94 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[Ticker]", span="162-162"];
m0_95 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var price = 1.12129m", span="163-163"];
m0_96 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="security.SetMarketPrice(new Tick(DateTime.Now, security.Symbol, price, price, price))", span="164-164"];
m0_97 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Limit, security.Type, security.Symbol, 1600, 1.12121212m, 1.12121212m, DateTime.Now, '''')", span="165-165"];
m0_98 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="168-168"];
m0_99 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="169-169"];
m0_104 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="178-178"];
m0_105 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsSuccess)", span="179-179"];
m0_100 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="170-170"];
m0_102 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.New)", span="174-174"];
m0_106 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Submitted)", span="180-180"];
m0_107 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.AreEqual(1000, orderTicket.Quantity)", span="182-182"];
m0_108 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.AreEqual(1.12121m, orderTicket.Get(OrderField.LimitPrice))", span="184-184"];
m0_109 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.LimitOrderPriceIsRounded()", span="155-155"];
m0_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="96-96"];
m0_0 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="43-43"];
m0_1 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="43-43"];
m0_14 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.EmptyHistoryProvider()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.EmptyHistoryProvider.EmptyHistoryProvider()", span="36-36"];
m0_182 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="309-309"];
m0_47 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderRequest(QuantConnect.Orders.OrderRequest)", span="689-689"];
m0_19 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", span="70-70"];
m0_20 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="73-73"];
m0_21 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="74-74"];
m0_27 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="86-86"];
m0_29 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="88-88"];
m0_22 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[Ticker]", span="77-77"];
m0_23 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, 1600, 0, 0, DateTime.Now, '''')", span="78-78"];
m0_24 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="81-81"];
m0_25 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="82-82"];
m0_30 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="91-91"];
m0_31 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsSuccess)", span="92-92"];
m0_26 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="83-83"];
m0_28 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.New)", span="87-87"];
m0_32 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Submitted)", span="93-93"];
m0_33 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.AreEqual(1000, orderTicket.Quantity)", span="95-95"];
m0_34 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsFlooredToNearestMultipleOfLotSizeWhenLongOrderIsRounded()", span="70-70"];
m0_40 [cluster="Mock<IOrderProcessor>.cstr", file="BrokerageTransactionHandler.cs", label="Entry Mock<IOrderProcessor>.cstr", span=""];
m0_166 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="235-235"];
m0_49 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="82-82"];
m0_50 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="82-82"];
m0_51 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="82-82"];
m0_70 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="111-111"];
m0_71 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="111-111"];
m0_72 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="111-111"];
m0_88 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="140-140"];
m0_89 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="140-140"];
m0_90 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="140-140"];
m0_113 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="169-169"];
m0_114 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="169-169"];
m0_115 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="169-169"];
m0_135 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="202-202"];
m0_136 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="202-202"];
m0_137 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="202-202"];
m0_167 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="m.GetOrderTicket(It.IsAny<int>())", span="235-235"];
m0_168 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="235-235"];
m0_110 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m0_41 [cluster="Unk.Setup", file="BrokerageTransactionHandler.cs", label="Entry Unk.Setup", span=""];
m0_45 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", span="176-176"];
m0_111 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="578-578"];
m0_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1401-1401"];
m0_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="142-142"];
m0_46 [cluster="Unk.IsTrue", file="BrokerageTransactionHandler.cs", label="Entry Unk.IsTrue", span=""];
m0_169 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", span="261-261"];
m0_170 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var algo = new QCAlgorithm()", span="263-263"];
m0_171 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="algo.SetBrokerageModel(BrokerageName.Default)", span="264-264"];
m0_172 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="algo.SetCash(100000)", span="265-265"];
m0_173 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var security = algo.AddSecurity(SecurityType.Crypto, ''BTCUSD'', Resolution.Hour, Market.GDAX, false, 3.3m, true)", span="269-269"];
m0_175 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="transactionHandler.Initialize(algo, new BacktestingBrokerage(algo), new BacktestingResultHandler())", span="273-273"];
m0_174 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="272-272"];
m0_176 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, 123.123456789m, 0, 0, DateTime.Now, '''')", span="276-276"];
m0_178 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var actual = transactionHandler.RoundOffOrder(order, security)", span="278-278"];
m0_177 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var order = Order.CreateOrder(orderRequest)", span="277-277"];
m0_179 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="Assert.AreEqual(123.12345678m, actual)", span="280-280"];
m0_180 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Long_Fractional_Orders()", span="261-261"];
m0_138 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", span="221-221"];
m0_139 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="224-224"];
m0_140 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="225-225"];
m0_148 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="239-239"];
m0_149 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="240-240"];
m0_154 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="transactionHandler.Process(cancelRequest)", span="247-247"];
m0_159 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="transactionHandler.HandleOrderRequest(cancelRequest)", span="253-253"];
m0_141 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[Ticker]", span="228-228"];
m0_142 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="var price = 1.12m", span="229-229"];
m0_143 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="security.SetMarketPrice(new Tick(DateTime.Now, security.Symbol, price, price, price))", span="230-230"];
m0_144 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Limit, security.Type, security.Symbol, 1000, 0, 1.11m, DateTime.Now, '''')", span="231-231"];
m0_145 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="234-234"];
m0_146 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="235-235"];
m0_150 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="241-241"];
m0_151 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsSuccess)", span="242-242"];
m0_147 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="236-236"];
m0_152 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Submitted)", span="243-243"];
m0_153 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="var cancelRequest = new CancelOrderRequest(DateTime.Now, orderTicket.OrderId, '''')", span="246-246"];
m0_158 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.CancelPending)", span="251-251"];
m0_163 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Canceled)", span="257-257"];
m0_155 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(cancelRequest.Response.IsProcessed)", span="248-248"];
m0_156 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(cancelRequest.Response.IsSuccess)", span="249-249"];
m0_157 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(cancelRequest.Status == OrderRequestStatus.Processing)", span="250-250"];
m0_160 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(cancelRequest.Response.IsProcessed)", span="254-254"];
m0_161 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(cancelRequest.Response.IsSuccess)", span="255-255"];
m0_162 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(cancelRequest.Status == OrderRequestStatus.Processed)", span="256-256"];
m0_164 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderCancellationTransitionsThroughCancelPendingStatus()", span="221-221"];
m0_52 [cluster="Unk.>", file="BrokerageTransactionHandler.cs", label="Entry Unk.>", span=""];
m0_73 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", span="128-128"];
m0_74 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="131-131"];
m0_75 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="132-132"];
m0_81 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="144-144"];
m0_83 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="146-146"];
m0_76 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[Ticker]", span="135-135"];
m0_77 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, 600, 0, 0, DateTime.Now, '''')", span="136-136"];
m0_78 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="139-139"];
m0_79 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="140-140"];
m0_84 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="149-149"];
m0_85 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsError)", span="150-150"];
m0_80 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="141-141"];
m0_82 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.New)", span="145-145"];
m0_86 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Invalid)", span="151-151"];
m0_87 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderIsNotPlacedWhenOrderIsLowerThanLotSize()", span="128-128"];
m0_43 [cluster="Unk.Returns", file="BrokerageTransactionHandler.cs", label="Entry Unk.Returns", span=""];
m0_53 [cluster="Unk.GetOrderTicket", file="BrokerageTransactionHandler.cs", label="Entry Unk.GetOrderTicket", span=""];
m0_36 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50"];
m0_196 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", span="307-307"];
m0_197 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var algo = new QCAlgorithm()", span="309-309"];
m0_198 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="algo.SetBrokerageModel(BrokerageName.Default)", span="310-310"];
m0_199 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="algo.SetCash(100000)", span="311-311"];
m0_200 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var security = algo.AddSecurity(SecurityType.Crypto, ''BTCUSD'', Resolution.Hour, Market.GDAX, false, 3.3m, true)", span="315-315"];
m0_202 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="transactionHandler.Initialize(algo, new BacktestingBrokerage(algo), new BacktestingResultHandler())", span="319-319"];
m0_201 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="318-318"];
m0_203 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, 0.000000009m, 0, 0, DateTime.Now, '''')", span="322-322"];
m0_205 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var actual = transactionHandler.RoundOffOrder(order, security)", span="324-324"];
m0_204 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var order = Order.CreateOrder(orderRequest)", span="323-323"];
m0_206 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="Assert.AreEqual(0, actual)", span="326-326"];
m0_207 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_LessThanLotSize_Fractional_Orders()", span="307-307"];
m0_48 [cluster="Unk.AreEqual", file="BrokerageTransactionHandler.cs", label="Entry Unk.AreEqual", span=""];
m0_112 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", span="217-217"];
m0_5 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="BrokerageTransactionHandler.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="978-978"];
m0_6 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", span="60-60"];
m0_7 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandler.cs", label="_algorithm = new QCAlgorithm { HistoryProvider = new EmptyHistoryProvider() }", span="62-62"];
m0_8 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandler.cs", label="_algorithm.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="63-63"];
m0_9 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandler.cs", label="_algorithm.SetCash(100000)", span="64-64"];
m0_10 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandler.cs", label="_algorithm.AddSecurity(SecurityType.Forex, Ticker)", span="65-65"];
m0_11 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandler.cs", label="_algorithm.SetFinishedWarmingUp()", span="66-66"];
m0_12 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.Initialize()", span="60-60"];
m0_44 [cluster="Unk.SetOrderProcessor", file="BrokerageTransactionHandler.cs", label="Entry Unk.SetOrderProcessor", span=""];
m0_39 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m0_184 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", span="284-284"];
m0_185 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var algo = new QCAlgorithm()", span="286-286"];
m0_186 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="algo.SetBrokerageModel(BrokerageName.Default)", span="287-287"];
m0_187 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="algo.SetCash(100000)", span="288-288"];
m0_188 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var security = algo.AddSecurity(SecurityType.Crypto, ''BTCUSD'', Resolution.Hour, Market.GDAX, false, 3.3m, true)", span="292-292"];
m0_190 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="transactionHandler.Initialize(algo, new BacktestingBrokerage(algo), new BacktestingResultHandler())", span="296-296"];
m0_189 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="295-295"];
m0_191 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, -123.123456789m, 0, 0, DateTime.Now, '''')", span="299-299"];
m0_193 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var actual = transactionHandler.RoundOffOrder(order, security)", span="301-301"];
m0_192 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="var order = Order.CreateOrder(orderRequest)", span="300-300"];
m0_194 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="Assert.AreEqual(-123.12345678m, actual)", span="303-303"];
m0_195 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.RoundOff_Short_Fractional_Orders()", span="284-284"];
m0_35 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler()", span="34-34"];
m0_37 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="179-179"];
m0_183 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="1111-1111"];
m0_116 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", span="188-188"];
m0_117 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="191-191"];
m0_118 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="192-192"];
m0_126 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="206-206"];
m0_128 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="208-208"];
m0_119 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[Ticker]", span="195-195"];
m0_120 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var price = 1.12129m", span="196-196"];
m0_121 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="security.SetMarketPrice(new Tick(DateTime.Now, security.Symbol, price, price, price))", span="197-197"];
m0_122 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.StopMarket, security.Type, security.Symbol, 1600, 1.12131212m, 1.12131212m, DateTime.Now, '''')", span="198-198"];
m0_123 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="201-201"];
m0_124 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="202-202"];
m0_129 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="211-211"];
m0_130 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsSuccess)", span="212-212"];
m0_125 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="203-203"];
m0_127 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.New)", span="207-207"];
m0_131 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Submitted)", span="213-213"];
m0_132 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.AreEqual(1000, orderTicket.Quantity)", span="215-215"];
m0_133 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.AreEqual(1.12131m, orderTicket.Get(OrderField.StopPrice))", span="217-217"];
m0_134 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.StopMarketOrderPriceIsRounded()", span="188-188"];
m0_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1371-1371"];
m0_42 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="200-200"];
m0_38 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="122-122"];
m0_54 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", span="99-99"];
m0_55 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="var transactionHandler = new BrokerageTransactionHandler()", span="102-102"];
m0_56 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="transactionHandler.Initialize(_algorithm, new BacktestingBrokerage(_algorithm), new BacktestingResultHandler())", span="103-103"];
m0_62 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderTicket = transactionHandler.Process(orderRequest)", span="115-115"];
m0_64 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="transactionHandler.HandleOrderRequest(orderRequest)", span="117-117"];
m0_57 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[Ticker]", span="106-106"];
m0_58 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderRequest = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, -1600, 0, 0, DateTime.Now, '''')", span="107-107"];
m0_59 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="var orderProcessorMock = new Mock<IOrderProcessor>()", span="110-110"];
m0_60 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="orderProcessorMock.Setup(m => m.GetOrderTicket(It.IsAny<int>())).Returns(new OrderTicket(_algorithm.Transactions, orderRequest))", span="111-111"];
m0_65 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsProcessed)", span="120-120"];
m0_66 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderRequest.Response.IsSuccess)", span="121-121"];
m0_61 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="_algorithm.Transactions.SetOrderProcessor(orderProcessorMock.Object)", span="112-112"];
m0_63 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.New)", span="116-116"];
m0_67 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.IsTrue(orderTicket.Status == OrderStatus.Submitted)", span="122-122"];
m0_68 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Assert.AreEqual(-1000, orderTicket.Quantity)", span="124-124"];
m0_69 [cluster="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests.OrderQuantityIsCeiledToNearestMultipleOfLotSizeWhenShortOrderIsRounded()", span="99-99"];
m0_208 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", span=""];
m1_46 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="CompositeIndicator.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m1_250 [cluster="string.Contains(string)", file="CompositeIndicator.cs", label="Entry string.Contains(string)", span="0-0"];
m1_109 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.Clear()", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.Clear()", span="70-70"];
m1_173 [cluster="Unk.Where", file="CompositeIndicator.cs", label="Entry Unk.Where", span=""];
m1_180 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.TotalQuantity()", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.TotalQuantity()", span="78-78"];
m1_35 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="CompositeIndicator.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m1_108 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.OrderBook(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.OrderBook(QuantConnect.Symbol)", span="62-62"];
m1_185 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m1_37 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", span="126-126"];
m1_38 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label=_streamLocked, span="132-132"];
m1_39 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="_messageBuffer.Enqueue(e)", span="134-134"];
m1_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="OnMessageImpl(sender, e)", span="143-143"];
m1_41 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label=Exception, span="138-138"];
m1_40 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="return;", span="135-135"];
m1_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="Log.Error(err)", span="140-140"];
m1_44 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", span="126-126"];
m1_261 [cluster="string.Substring(int, int)", file="CompositeIndicator.cs", label="Entry string.Substring(int, int)", span="0-0"];
m1_183 [cluster="OrderEvent.cstr", file="CompositeIndicator.cs", label="Entry OrderEvent.cstr", span=""];
m1_252 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", span="556-556"];
m1_263 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="int delay = 36000000", span="559-559"];
m1_265 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="var listener = Task.Factory.StartNew(() =>\r\n            {\r\n                OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''GDAXBrokerage.PollLatestTick: started polling for ticks: {symbol.Value.ToString()}''));\r\n                while (true)\r\n                {\r\n                    var rate = GetConversionRate(symbol.Value.Replace(''USD'', ''''));\r\n\r\n                    lock (_tickLocker)\r\n                    {\r\n                        var latest = new Tick\r\n                        {\r\n                            Value = rate,\r\n                            Time = DateTime.UtcNow,\r\n                            Symbol = symbol\r\n                        };\r\n                        Ticks.Add(latest);\r\n                    }\r\n\r\n                    Thread.Sleep(delay);\r\n                    if (token.IsCancellationRequested) break;\r\n                }\r\n                OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''PollLatestTick: stopped polling for ticks: {symbol.Value.ToString()}''));\r\n            }, token, TaskCreationOptions.LongRunning, TaskScheduler.Default)", span="561-583"];
m1_264 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="var token = _canceller.Token", span="560-560"];
m1_266 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", span="556-556"];
m1_113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", span="455-455"];
m1_224 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="CompositeIndicator.cs", label=_tickLocker, span="457-457"];
m1_225 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="CompositeIndicator.cs", label="Ticks.Add(new Tick\r\n                {\r\n                    AskPrice = askPrice,\r\n                    BidPrice = bidPrice,\r\n                    Value = (askPrice + bidPrice) / 2m,\r\n                    Time = DateTime.UtcNow,\r\n                    Symbol = symbol,\r\n                    TickType = TickType.Quote,\r\n                    AskSize = askSize,\r\n                    BidSize = bidSize\r\n                })", span="459-469"];
m1_226 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", span="455-455"];
m1_254 [cluster="Unk.ToArray", file="CompositeIndicator.cs", label="Entry Unk.ToArray", span=""];
m1_181 [cluster="Unk.TryGetValue", file="CompositeIndicator.cs", label="Entry Unk.TryGetValue", span=""];
m1_81 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", span="385-385"];
m1_190 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order completed with data {data}'')", span="387-387"];
m1_191 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="var message = JsonConvert.DeserializeObject<Messages.Done>(data, JsonSettings)", span="388-388"];
m1_192 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="message.Reason == ''canceled'' || message.RemainingSize > 0", span="391-391"];
m1_193 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order cancelled. Remaining {message.RemainingSize}'')", span="393-393"];
m1_195 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="var cached = CachedOrderIDs.Where(o => o.Value.BrokerId.Contains(message.OrderId)).ToList()", span="398-398"];
m1_197 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order could not locate order in cache with order id {message.OrderId}'')", span="402-402"];
m1_201 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1,\r\n                $''GDAXWebsocketsBrokerage.OrderDone: Encountered done message prior to match filling order brokerId: {message.OrderId} orderId: {orderId}''))", span="409-410"];
m1_203 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="var orderEvent = new OrderEvent\r\n            (\r\n                orderId, ConvertProductId(message.ProductId), message.Time, OrderStatus.Filled,\r\n                message.Side == ''sell'' ? OrderDirection.Sell : OrderDirection.Buy,\r\n                message.Price, message.Side == ''sell'' ? -split.TotalQuantity() : split.TotalQuantity(),\r\n                GetFee(order), ''GDAX Fill Event''\r\n            )", span="415-421"];
m1_194 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="return;", span="394-394"];
m1_196 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="cached.Count == 0 || cached[0].Value.Status == OrderStatus.Filled", span="400-400"];
m1_199 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="var orderId = cached[0].Key", span="406-406"];
m1_200 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="var order = cached[0].Value", span="407-407"];
m1_198 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="return;", span="403-403"];
m1_202 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="var split = FillSplit[orderId]", span="412-412"];
m1_205 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="CachedOrderIDs.TryRemove(orderId, out outOrder)", span="424-424"];
m1_204 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="Order outOrder", span="423-423"];
m1_206 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="OnOrderEvent(orderEvent)", span="426-426"];
m1_207 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", span="385-385"];
m1_268 [cluster="lambda expression", file="CompositeIndicator.cs", label="Entry lambda expression", span="561-583"];
m1_10 [cluster="lambda expression", file="CompositeIndicator.cs", label="Entry lambda expression", span="80-90"];
m1_11 [cluster="lambda expression", file="CompositeIndicator.cs", label="var tickers = new[]\r\n                {\r\n                    ''LTCUSD'', ''LTCEUR'', ''LTCBTC'',\r\n                    ''BTCUSD'', ''BTCEUR'', ''BTCGBP'',\r\n                    ''ETHBTC'', ''ETHUSD'', ''ETHEUR'',\r\n                    ''BCHBTC'', ''BCHUSD'', ''BCHEUR''\r\n                }", span="82-88"];
m1_12 [cluster="lambda expression", file="CompositeIndicator.cs", label="Subscribe(tickers.Select(ticker => Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)))", span="89-89"];
m1_13 [cluster="lambda expression", file="CompositeIndicator.cs", label="Exit lambda expression", span="80-90"];
m1_16 [cluster="lambda expression", file="CompositeIndicator.cs", label="Entry lambda expression", span="89-89"];
m1_17 [cluster="lambda expression", file="CompositeIndicator.cs", label="Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)", span="89-89"];
m1_18 [cluster="lambda expression", file="CompositeIndicator.cs", label="Exit lambda expression", span="89-89"];
m1_187 [cluster="lambda expression", file="CompositeIndicator.cs", label="o.Value.BrokerId.Contains(message.MakerOrderId) || o.Value.BrokerId.Contains(message.TakerOrderId)", span="317-317"];
m1_186 [cluster="lambda expression", file="CompositeIndicator.cs", label="Entry lambda expression", span="317-317"];
m1_188 [cluster="lambda expression", file="CompositeIndicator.cs", label="Exit lambda expression", span="317-317"];
m1_209 [cluster="lambda expression", file="CompositeIndicator.cs", label="o.Value.BrokerId.Contains(message.OrderId)", span="398-398"];
m1_208 [cluster="lambda expression", file="CompositeIndicator.cs", label="Entry lambda expression", span="398-398"];
m1_210 [cluster="lambda expression", file="CompositeIndicator.cs", label="Exit lambda expression", span="398-398"];
m1_258 [cluster="lambda expression", file="CompositeIndicator.cs", label="Entry lambda expression", span="518-518"];
m1_259 [cluster="lambda expression", file="CompositeIndicator.cs", label="s.Value.Symbol.Substring(0, 3) + ''-'' + s.Value.Symbol.Substring(3)", span="518-518"];
m1_260 [cluster="lambda expression", file="CompositeIndicator.cs", label="Exit lambda expression", span="518-518"];
m1_269 [cluster="lambda expression", file="CompositeIndicator.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''GDAXBrokerage.PollLatestTick: started polling for ticks: {symbol.Value.ToString()}''))", span="563-563"];
m1_271 [cluster="lambda expression", file="CompositeIndicator.cs", label="var rate = GetConversionRate(symbol.Value.Replace(''USD'', ''''))", span="566-566"];
m1_273 [cluster="lambda expression", file="CompositeIndicator.cs", label="var latest = new Tick\r\n                        {\r\n                            Value = rate,\r\n                            Time = DateTime.UtcNow,\r\n                            Symbol = symbol\r\n                        }", span="570-575"];
m1_277 [cluster="lambda expression", file="CompositeIndicator.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''PollLatestTick: stopped polling for ticks: {symbol.Value.ToString()}''))", span="582-582"];
m1_275 [cluster="lambda expression", file="CompositeIndicator.cs", label="Thread.Sleep(delay)", span="579-579"];
m1_276 [cluster="lambda expression", file="CompositeIndicator.cs", label="token.IsCancellationRequested", span="580-580"];
m1_270 [cluster="lambda expression", file="CompositeIndicator.cs", label=true, span="564-564"];
m1_272 [cluster="lambda expression", file="CompositeIndicator.cs", label=_tickLocker, span="568-568"];
m1_274 [cluster="lambda expression", file="CompositeIndicator.cs", label="Ticks.Add(latest)", span="576-576"];
m1_278 [cluster="lambda expression", file="CompositeIndicator.cs", label="Exit lambda expression", span="561-583"];
m1_211 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="434-434"];
m1_212 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="var req = new RestRequest($''/products/{ConvertSymbol(symbol)}/ticker'', Method.GET)", span="436-436"];
m1_217 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="return new Tick(tick.Time, symbol, tick.Bid, tick.Ask) { Quantity = tick.Volume };", span="444-444"];
m1_213 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="var response = RestClient.Execute(req)", span="437-437"];
m1_214 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="438-438"];
m1_215 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="throw new Exception($''GDAXBrokerage.GetTick: request failed: [{(int)response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="440-440"];
m1_216 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="var tick = JsonConvert.DeserializeObject<Messages.Tick>(response.Content)", span="443-443"];
m1_218 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="434-434"];
m1_78 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="CompositeIndicator.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m1_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="98-98"];
m1_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="CompositeIndicator.cs", label="Log.Trace(''GDAXBrokerage.Messaging.LockStream(): Locking Stream'')", span="100-100"];
m1_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="CompositeIndicator.cs", label="_streamLocked = true", span="101-101"];
m1_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="98-98"];
m1_77 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", span="260-260"];
m1_118 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="var message = JsonConvert.DeserializeObject<Messages.L2Update>(data)", span="264-264"];
m1_134 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="Log.Error(e, ''Data: '' + data)", span="302-302"];
m1_119 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="var symbol = ConvertProductId(message.ProductId)", span="266-266"];
m1_121 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="message.Changes", span="270-270"];
m1_120 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="var orderBook = _orderBooks[symbol]", span="268-268"];
m1_127 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="orderBook.RemoveBidRow(price)", span="279-279"];
m1_128 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="orderBook.UpdateBidRow(price, size)", span="283-283"];
m1_131 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="orderBook.RemoveAskRow(price)", span="290-290"];
m1_132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="orderBook.UpdateAskRow(price, size)", span="294-294"];
m1_122 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="var side = row[0]", span="272-272"];
m1_133 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label=Exception, span="300-300"];
m1_123 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="var price = Convert.ToDecimal(row[1], CultureInfo.InvariantCulture)", span="273-273"];
m1_124 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="var size = decimal.Parse(row[2], NumberStyles.Float, CultureInfo.InvariantCulture)", span="274-274"];
m1_125 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="side == ''buy''", span="275-275"];
m1_129 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="side == ''sell''", span="286-286"];
m1_126 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="size == 0", span="277-277"];
m1_130 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="size == 0", span="288-288"];
m1_135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="throw;", span="303-303"];
m1_136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", span="260-260"];
m1_82 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", span="307-307"];
m1_140 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="var message = JsonConvert.DeserializeObject<Messages.Matched>(data, JsonSettings)", span="309-309"];
m1_147 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="Log.Trace($''GDAXBrokerage.OrderMatch(): Match: {message.ProductId} {data}'')", span="327-327"];
m1_141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label=_isDataQueueHandler, span="311-311"];
m1_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="EmitTradeTick(message)", span="313-313"];
m1_143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="var cached = CachedOrderIDs\r\n                .Where(o => o.Value.BrokerId.Contains(message.MakerOrderId) || o.Value.BrokerId.Contains(message.TakerOrderId))\r\n                .ToList()", span="316-318"];
m1_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="var symbol = ConvertProductId(message.ProductId)", span="320-320"];
m1_153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="split.Add(message)", span="337-337"];
m1_154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="var status = Math.Abs(message.Size) == Math.Abs(order.Quantity) || Math.Abs(split.OrderQuantity) == Math.Abs(split.TotalQuantity())\r\n                ? OrderStatus.Filled : OrderStatus.PartiallyFilled", span="340-341"];
m1_156 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="order.BrokerId[0] == message.TakerOrderId", span="345-345"];
m1_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="direction = message.Side == ''sell'' ? OrderDirection.Buy : OrderDirection.Sell", span="347-347"];
m1_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="direction = message.Side == ''sell'' ? OrderDirection.Sell : OrderDirection.Buy", span="351-351"];
m1_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="var orderFee = totalOrderFee * Math.Abs(message.Size) / Math.Abs(order.Quantity)", span="362-362"];
m1_164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="var orderEvent = new OrderEvent\r\n            (\r\n                orderId, symbol, message.Time, status,\r\n                direction,\r\n                message.Price, direction == OrderDirection.Sell ? -message.Size : message.Size,\r\n                orderFee, $''GDAX Match Event {direction}''\r\n            )", span="364-370"];
m1_145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="cached.Count == 0", span="322-322"];
m1_148 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="var orderId = cached[0].Key", span="328-328"];
m1_149 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="var order = cached[0].Value", span="329-329"];
m1_146 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="return;", span="324-324"];
m1_150 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="!FillSplit.ContainsKey(orderId)", span="331-331"];
m1_151 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="FillSplit[orderId] = new GDAXFill(order)", span="333-333"];
m1_152 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="var split = FillSplit[orderId]", span="336-336"];
m1_160 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="!_orderFees.TryGetValue(orderId, out totalOrderFee)", span="355-355"];
m1_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="_orderFees[orderId] = totalOrderFee", span="358-358"];
m1_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="CachedOrderIDs.TryRemove(orderId, out outOrder)", span="376-376"];
m1_169 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="_orderFees.TryRemove(orderId, out outOrderFee)", span="379-379"];
m1_161 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="totalOrderFee = GetFee(order)", span="357-357"];
m1_155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="OrderDirection direction", span="343-343"];
m1_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="decimal totalOrderFee", span="354-354"];
m1_165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="orderEvent.Status == OrderStatus.Filled", span="373-373"];
m1_170 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="OnOrderEvent(orderEvent)", span="382-382"];
m1_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="Order outOrder", span="375-375"];
m1_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="decimal outOrderFee", span="378-378"];
m1_171 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", span="307-307"];
m1_176 [cluster="GDAXFill.cstr", file="CompositeIndicator.cs", label="Entry GDAXFill.cstr", span=""];
m1_9 [cluster="RestClient.cstr", file="CompositeIndicator.cs", label="Entry RestClient.cstr", span=""];
m1_235 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="496-496"];
m1_236 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label=symbols, span="498-498"];
m1_237 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="item.Value.Contains(''UNIVERSE'') ||\r\n                    item.SecurityType != SecurityType.Forex && item.SecurityType != SecurityType.Crypto", span="500-501"];
m1_241 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="var products = ChannelList.Select(s => s.Value.Symbol.Substring(0, 3) + ''-'' + s.Value.Symbol.Substring(3)).ToArray()", span="518-518"];
m1_238 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="!IsSubscribeAvailable(item)", span="506-506"];
m1_239 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="PollTick(item)", span="510-510"];
m1_240 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="this.ChannelList[item.Value] = new Channel { Name = item.Value, Symbol = item.Value }", span="514-514"];
m1_242 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="var payload = new\r\n            {\r\n                type = ''subscribe'',\r\n                product_ids = products,\r\n                channels = ChannelNames\r\n            }", span="520-525"];
m1_243 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="payload.product_ids.Length == 0", span="527-527"];
m1_245 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="var token = GetAuthenticationToken(JsonConvert.SerializeObject(payload), ''GET'', ''/users/self/verify'')", span="532-532"];
m1_246 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="var json = JsonConvert.SerializeObject(new\r\n            {\r\n                type = payload.type,\r\n                channels = payload.channels,\r\n                product_ids = payload.product_ids,\r\n                SignHeader = token.Signature,\r\n                KeyHeader = ApiKey,\r\n                PassHeader = _passPhrase,\r\n                TimeHeader = token.Timestamp\r\n            })", span="534-543"];
m1_244 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="return;", span="529-529"];
m1_247 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="WebSocket.Send(json)", span="545-545"];
m1_248 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.Subscribe: Sent subscribe.''))", span="548-548"];
m1_249 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="496-496"];
m1_256 [cluster="Unk.GetAuthenticationToken", file="CompositeIndicator.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m1_137 [cluster="Unk.ToDecimal", file="CompositeIndicator.cs", label="Entry Unk.ToDecimal", span=""];
m1_267 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", file="CompositeIndicator.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", span="0-0"];
m1_295 [cluster="Unk.SelectToken", file="CompositeIndicator.cs", label="Entry Unk.SelectToken", span=""];
m1_219 [cluster="RestRequest.cstr", file="CompositeIndicator.cs", label="Entry RestRequest.cstr", span=""];
m1_222 [cluster="System.Exception.Exception(string)", file="CompositeIndicator.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", span="151-151"];
m1_47 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="var raw = JsonConvert.DeserializeObject<Messages.BaseMessage>(e.Message, JsonSettings)", span="155-155"];
m1_52 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="OnSnapshot(e.Message)", span="165-165"];
m1_55 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="OnL2Update(e.Message)", span="170-170"];
m1_58 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="Log.Error($''GDAXBrokerage.OnMessage.error(): Data: {Environment.NewLine}{e.Message}'')", span="175-175"];
m1_59 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="var error = JsonConvert.DeserializeObject<Messages.Error>(e.Message, JsonSettings)", span="176-176"];
m1_63 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="OrderDone(e.Message)", span="182-182"];
m1_66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="OrderMatch(e.Message)", span="187-187"];
m1_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, (''GDAXWebsocketsBrokerage.OnMessage: Unexpected message format: '' + e.Message)))", span="196-196"];
m1_72 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, $''Parsing wss message failed. Data: {e.Message} Exception: {exception}''))", span="200-200"];
m1_48 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="157-157"];
m1_49 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="raw.Type == ''heartbeat''", span="159-159"];
m1_51 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="raw.Type == ''snapshot''", span="163-163"];
m1_54 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="raw.Type == ''l2update''", span="168-168"];
m1_57 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="raw.Type == ''error''", span="173-173"];
m1_62 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="raw.Type == ''done''", span="180-180"];
m1_65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="raw.Type == ''match''", span="185-185"];
m1_68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="raw.Type == ''open'' || raw.Type == ''change'' || raw.Type == ''received'' || raw.Type == ''subscriptions'' || raw.Type == ''last_match''", span="190-190"];
m1_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="return;", span="161-161"];
m1_53 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="return;", span="166-166"];
m1_56 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="return;", span="171-171"];
m1_60 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, $''GDAXBrokerage.OnMessage: {error.Message} {error.Reason}''))", span="177-177"];
m1_61 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="return;", span="178-178"];
m1_64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="return;", span="183-183"];
m1_67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="return;", span="188-188"];
m1_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="return;", span="193-193"];
m1_71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label=Exception, span="198-198"];
m1_73 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="throw;", span="201-201"];
m1_74 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", span="151-151"];
m1_175 [cluster="Unk.ContainsKey", file="CompositeIndicator.cs", label="Entry Unk.ContainsKey", span=""];
m1_281 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", span="586-586"];
m1_283 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="var response = RateClient.Execute(new RestSharp.RestRequest(Method.GET))", span="588-588"];
m1_288 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="var rate = raw.SelectToken(''rates.'' + currency).Value<decimal>()", span="596-596"];
m1_284 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="589-589"];
m1_285 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GetConversionRate: error returned from conversion rate service.''))", span="591-591"];
m1_287 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="var raw = JsonConvert.DeserializeObject<JObject>(response.Content)", span="595-595"];
m1_290 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GetConversionRate: zero value returned from conversion rate service.''))", span="599-599"];
m1_286 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="return 0;", span="592-592"];
m1_289 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="rate == 0", span="597-597"];
m1_292 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="return 1m / rate;", span="603-603"];
m1_291 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="return 0;", span="600-600"];
m1_293 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", span="586-586"];
m1_184 [cluster="Unk.TryRemove", file="CompositeIndicator.cs", label="Entry Unk.TryRemove", span=""];
m1_174 [cluster="Unk.ToList", file="CompositeIndicator.cs", label="Entry Unk.ToList", span=""];
m1_19 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="CompositeIndicator.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m1_298 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="CompositeIndicator.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m1_75 [cluster="Unk.>", file="CompositeIndicator.cs", label="Entry Unk.>", span=""];
m1_178 [cluster="Unk.Abs", file="CompositeIndicator.cs", label="Entry Unk.Abs", span=""];
m1_107 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CompositeIndicator.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_255 [cluster="Unk.SerializeObject", file="CompositeIndicator.cs", label="Entry Unk.SerializeObject", span=""];
m1_177 [cluster="Unk.Add", file="CompositeIndicator.cs", label="Entry Unk.Add", span=""];
m1_8 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="CompositeIndicator.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m1_112 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.UpdateAskRow(decimal, decimal)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.UpdateAskRow(decimal, decimal)", span="110-110"];
m1_280 [cluster="string.Replace(string, string)", file="CompositeIndicator.cs", label="Entry string.Replace(string, string)", span="0-0"];
m1_76 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", span="205-205"];
m1_83 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="var message = JsonConvert.DeserializeObject<Messages.Snapshot>(data)", span="209-209"];
m1_84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="var symbol = ConvertProductId(message.ProductId)", span="211-211"];
m1_91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="message.Bids", span="225-225"];
m1_95 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="message.Asks", span="231-231"];
m1_85 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="OrderBook orderBook", span="213-213"];
m1_86 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="!_orderBooks.TryGetValue(symbol, out orderBook)", span="214-214"];
m1_87 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="orderBook = new OrderBook(symbol)", span="216-216"];
m1_88 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="_orderBooks[symbol] = orderBook", span="217-217"];
m1_101 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="EmitQuoteTick(symbol, orderBook.BestBidPrice, orderBook.BestBidSize, orderBook.BestAskPrice, orderBook.BestAskSize)", span="242-242"];
m1_89 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="orderBook.BestBidAskUpdated -= OnBestBidAskUpdated", span="221-221"];
m1_90 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="orderBook.Clear()", span="222-222"];
m1_94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="orderBook.UpdateBidRow(price, size)", span="229-229"];
m1_98 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="orderBook.UpdateAskRow(price, size)", span="235-235"];
m1_99 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="orderBook.BestBidAskUpdated += OnBestBidAskUpdated", span="238-238"];
m1_92 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="var price = decimal.Parse(row[0], NumberStyles.Float, CultureInfo.InvariantCulture)", span="227-227"];
m1_93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="var size = decimal.Parse(row[1], NumberStyles.Float, CultureInfo.InvariantCulture)", span="228-228"];
m1_96 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="var price = decimal.Parse(row[0], NumberStyles.Float, CultureInfo.InvariantCulture)", span="233-233"];
m1_97 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="var size = decimal.Parse(row[1], NumberStyles.Float, CultureInfo.InvariantCulture)", span="234-234"];
m1_100 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label=_isDataQueueHandler, span="240-240"];
m1_102 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label=Exception, span="245-245"];
m1_103 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="Log.Error(e)", span="247-247"];
m1_104 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="throw;", span="248-248"];
m1_105 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", span="205-205"];
m1_80 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m1_282 [cluster="System.Threading.Thread.Sleep(int)", file="CompositeIndicator.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_262 [cluster="string.Substring(int)", file="CompositeIndicator.cs", label="Entry string.Substring(int)", span="0-0"];
m1_257 [cluster="Unk.Send", file="CompositeIndicator.cs", label="Entry Unk.Send", span=""];
m1_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="CompositeIndicator.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_221 [cluster="Unk.Execute", file="CompositeIndicator.cs", label="Entry Unk.Execute", span=""];
m1_253 [cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel.Channel()", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel.Channel()", span="313-313"];
m1_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="107-107"];
m1_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="CompositeIndicator.cs", label="Log.Trace(''GDAXBrokerage.Messaging.UnlockStream(): Processing Backlog...'')", span="109-109"];
m1_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="CompositeIndicator.cs", label="_messageBuffer.Any()", span="110-110"];
m1_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="CompositeIndicator.cs", label="WebSocketMessage e", span="112-112"];
m1_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="CompositeIndicator.cs", label="Log.Trace(''GDAXBrokerage.Messaging.UnlockStream(): Stream Unlocked.'')", span="116-116"];
m1_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="CompositeIndicator.cs", label="_messageBuffer.TryDequeue(out e)", span="113-113"];
m1_30 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="CompositeIndicator.cs", label="OnMessageImpl(this, e)", span="114-114"];
m1_32 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="CompositeIndicator.cs", label="_streamLocked = false", span="118-118"];
m1_33 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="107-107"];
m1_111 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.UpdateBidRow(decimal, decimal)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.UpdateBidRow(decimal, decimal)", span="89-89"];
m1_79 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m1_251 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", span="606-606"];
m1_296 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="return Regex.IsMatch(symbol.Value, SymbolMatching);", span="608-608"];
m1_297 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", span="606-606"];
m1_45 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="CompositeIndicator.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m1_0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", span="72-72"];
m1_1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="CompositeIndicator.cs", label="FillSplit = new ConcurrentDictionary<long, GDAXFill>()", span="75-75"];
m1_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="CompositeIndicator.cs", label="_passPhrase = passPhrase", span="76-76"];
m1_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="CompositeIndicator.cs", label="_algorithm = algorithm", span="77-77"];
m1_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="CompositeIndicator.cs", label="RateClient = new RestClient(''http://api.fixer.io/latest?base=usd'')", span="78-78"];
m1_5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="CompositeIndicator.cs", label="WebSocket.Open += (sender, args) =>\r\n            {\r\n                var tickers = new[]\r\n                {\r\n                    ''LTCUSD'', ''LTCEUR'', ''LTCBTC'',\r\n                    ''BTCUSD'', ''BTCEUR'', ''BTCGBP'',\r\n                    ''ETHBTC'', ''ETHUSD'', ''ETHEUR'',\r\n                    ''BCHBTC'', ''BCHUSD'', ''BCHEUR''\r\n                };\r\n                Subscribe(tickers.Select(ticker => Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)));\r\n            }", span="80-90"];
m1_6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="CompositeIndicator.cs", label="_isDataQueueHandler = this is GDAXDataQueueHandler", span="92-92"];
m1_7 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", span="72-72"];
m1_139 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.RemoveAskRow(decimal)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.RemoveAskRow(decimal)", span="153-153"];
m1_220 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="127-127"];
m1_228 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CompositeIndicator.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_229 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", span="476-476"];
m1_230 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="CompositeIndicator.cs", label="var symbol = ConvertProductId(message.ProductId)", span="478-478"];
m1_232 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="CompositeIndicator.cs", label="Ticks.Add(new Tick\r\n                {\r\n                    Value = message.Price,\r\n                    Time = DateTime.UtcNow,\r\n                    Symbol = symbol,\r\n                    TickType = TickType.Trade,\r\n                    Quantity = message.Size\r\n                })", span="482-489"];
m1_231 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="CompositeIndicator.cs", label=_tickLocker, span="480-480"];
m1_233 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", span="476-476"];
m1_234 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", span="117-117"];
m1_299 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="614-614"];
m1_300 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="WebSocket.IsOpen", span="616-616"];
m1_301 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="WebSocket.Send(JsonConvert.SerializeObject(new {type = ''unsubscribe'', channels = ChannelNames}))", span="618-618"];
m1_302 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="614-614"];
m1_110 [cluster="Unk.Parse", file="CompositeIndicator.cs", label="Entry Unk.Parse", span=""];
m1_138 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.RemoveBidRow(decimal)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.RemoveBidRow(decimal)", span="130-130"];
m1_189 [cluster="Unk.Contains", file="CompositeIndicator.cs", label="Entry Unk.Contains", span=""];
m1_294 [cluster="RestSharp.RestRequest.cstr", file="CompositeIndicator.cs", label="Entry RestSharp.RestRequest.cstr", span=""];
m1_223 [cluster="Tick.cstr", file="CompositeIndicator.cs", label="Entry Tick.cstr", span=""];
m1_182 [cluster="Unk.GetFee", file="CompositeIndicator.cs", label="Entry Unk.GetFee", span=""];
m1_24 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="CompositeIndicator.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m1_227 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="CompositeIndicator.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m1_279 [cluster="string.ToString()", file="CompositeIndicator.cs", label="Entry string.ToString()", span="0-0"];
m1_14 [cluster="Unk.Select", file="CompositeIndicator.cs", label="Entry Unk.Select", span=""];
m1_172 [cluster="Unk.EmitTradeTick", file="CompositeIndicator.cs", label="Entry Unk.EmitTradeTick", span=""];
m1_15 [cluster="Unk.Subscribe", file="CompositeIndicator.cs", label="Entry Unk.Subscribe", span=""];
m1_106 [cluster="Unk.ConvertProductId", file="CompositeIndicator.cs", label="Entry Unk.ConvertProductId", span=""];
m1_114 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="CompositeIndicator.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", span="252-252"];
m1_115 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="CompositeIndicator.cs", label=_isDataQueueHandler, span="254-254"];
m1_116 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="CompositeIndicator.cs", label="EmitQuoteTick(e.Symbol, e.BestBidPrice, e.BestBidSize, e.BestAskPrice, e.BestAskSize)", span="256-256"];
m1_117 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="CompositeIndicator.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", span="252-252"];
m1_303 [file="CompositeIndicator.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m1_304 [file="CompositeIndicator.cs", label=message, span=""];
m1_305 [file="CompositeIndicator.cs", label=message, span=""];
m1_306 [file="CompositeIndicator.cs", label="QuantConnect.Symbol", span=""];
m1_307 [file="CompositeIndicator.cs", label=delay, span=""];
m1_308 [file="CompositeIndicator.cs", label=token, span=""];
m2_15 [cluster="QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair(System.DateTime)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair(System.DateTime)", span="217-217"];
m2_85 [cluster="QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair(System.DateTime)", file="IndicatorExtensions.cs", label="Date = date.Date", span="219-219"];
m2_86 [cluster="QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair(System.DateTime)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair(System.DateTime)", span="217-217"];
m2_17 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", span="65-65"];
m2_18 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="int quantity = (int)(Portfolio.TotalPortfolioValue * 0.9m / data.Close)", span="69-69"];
m2_19 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="today.NiftyPrice = Convert.ToDouble(data.Close)", span="71-71"];
m2_20 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="today.Date == data.Time", span="72-72"];
m2_27 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="Convert.ToDouble(data.Open) >= highestNifty", span="92-92"];
m2_29 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="Debug(''LONG '' + code + '' Time: '' + Time.ToShortDateString() + '' Quantity: '' + quantity + '' Portfolio:'' + Portfolio[''NIFTY''].Quantity + '' Nifty: '' + data.Close + '' Buying Power: '' + Portfolio.TotalPortfolioValue)", span="95-95"];
m2_30 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="Convert.ToDouble(data.Open) <= lowestNifty", span="97-97"];
m2_32 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="Debug(''SHORT '' + code + '' Time: '' + Time.ToShortDateString() + '' Quantity: '' + quantity + '' Portfolio:'' + Portfolio[''NIFTY''].Quantity + '' Nifty: '' + data.Close + '' Buying Power: '' + Portfolio.TotalPortfolioValue)", span="100-100"];
m2_28 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="int code = Order(''NIFTY'', quantity - Portfolio[''NIFTY''].Quantity)", span="94-94"];
m2_31 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="int code = Order(''NIFTY'', -quantity - Portfolio[''NIFTY''].Quantity)", span="99-99"];
m2_21 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="prices.Add(today)", span="74-74"];
m2_24 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="double highestNifty = (from pair in prices select pair.NiftyPrice).Max()", span="83-83"];
m2_22 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="prices.Count > minimumCorrelationHistory", span="76-76"];
m2_23 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="prices.RemoveAt(0)", span="78-78"];
m2_25 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="double lowestNifty = (from pair in prices select pair.NiftyPrice).Min()", span="84-84"];
m2_26 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="Time.DayOfWeek == DayOfWeek.Wednesday", span="85-85"];
m2_33 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label=Exception, span="104-104"];
m2_34 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="Debug(''Error: '' + err.Message)", span="106-106"];
m2_35 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.Nifty)", span="65-65"];
m2_65 [cluster="string.Split(params char[])", file="IndicatorExtensions.cs", label="Entry string.Split(params char[])", span="0-0"];
m2_39 [cluster="Unk.Min", file="IndicatorExtensions.cs", label="Entry Unk.Min", span=""];
m2_43 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnEndOfDay()", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnEndOfDay()", span="112-112"];
m2_44 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnEndOfDay()", file="IndicatorExtensions.cs", label="Plot(''Nifty Closing Price'', today.NiftyPrice)", span="116-116"];
m2_45 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnEndOfDay()", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnEndOfDay()", span="112-112"];
m2_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", span="115-115"];
m2_66 [cluster="System.DateTime.Parse(string)", file="IndicatorExtensions.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m2_38 [cluster="Unk.Max", file="IndicatorExtensions.cs", label="Entry Unk.Max", span=""];
m2_68 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.DollarRupee()", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.DollarRupee.DollarRupee()", span="174-174"];
m2_69 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.DollarRupee()", file="IndicatorExtensions.cs", label="this.Symbol = ''USDINR''", span="176-176"];
m2_70 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.DollarRupee()", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.DollarRupee.DollarRupee()", span="174-174"];
m2_47 [cluster="QuantConnect.Algorithm.Examples.Nifty.Nifty()", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.Nifty.Nifty()", span="128-128"];
m2_48 [cluster="QuantConnect.Algorithm.Examples.Nifty.Nifty()", file="IndicatorExtensions.cs", label="this.Symbol = ''NIFTY''", span="130-130"];
m2_49 [cluster="QuantConnect.Algorithm.Examples.Nifty.Nifty()", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.Nifty.Nifty()", span="128-128"];
m2_71 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.DollarRupee.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="179-179"];
m2_72 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="return ''https://www.dropbox.com/s/m6ecmkg9aijwzy2/USDINR.csv?dl=1'';", span="181-181"];
m2_73 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.DollarRupee.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="179-179"];
m2_16 [cluster="System.Convert.ToDouble(decimal)", file="IndicatorExtensions.cs", label="Entry System.Convert.ToDouble(decimal)", span="0-0"];
m2_83 [cluster="QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair()", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair()", span="212-212"];
m2_84 [cluster="QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair()", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.CorrelationPair.CorrelationPair()", span="212-212"];
m2_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="445-445"];
m2_53 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="138-138"];
m2_54 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="Nifty index = new Nifty()", span="141-141"];
m2_55 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="string[] data = line.Split(',')", span="148-148"];
m2_56 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="index.Time = DateTime.Parse(data[0])", span="149-149"];
m2_57 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="index.Open = Convert.ToDecimal(data[1])", span="150-150"];
m2_58 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="index.High = Convert.ToDecimal(data[2])", span="151-151"];
m2_59 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="index.Low = Convert.ToDecimal(data[3])", span="152-152"];
m2_60 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="index.Close = Convert.ToDecimal(data[4])", span="153-153"];
m2_61 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="index.Symbol = ''NIFTY''", span="154-154"];
m2_62 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="index.Value = index.Close", span="155-155"];
m2_63 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="return index;", span="162-162"];
m2_64 [cluster="QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.Nifty.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="138-138"];
m2_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="710-710"];
m2_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="470-470"];
m2_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", span="194-194"];
m2_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="412-412"];
m2_37 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="IndicatorExtensions.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m2_36 [cluster="System.Collections.Generic.List<T>.Add(T)", file="IndicatorExtensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_11 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.DollarRupee)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.DollarRupee)", span="59-59"];
m2_12 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.DollarRupee)", file="IndicatorExtensions.cs", label="today = new CorrelationPair(data.Time)", span="61-61"];
m2_13 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.DollarRupee)", file="IndicatorExtensions.cs", label="today.CurrencyPrice = Convert.ToDouble(data.Close)", span="62-62"];
m2_14 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.DollarRupee)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.OnData(QuantConnect.Algorithm.Examples.DollarRupee)", span="59-59"];
m2_41 [cluster="System.DateTime.ToShortDateString()", file="IndicatorExtensions.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m2_50 [cluster="QuantConnect.Algorithm.Examples.Nifty.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.Nifty.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="133-133"];
m2_51 [cluster="QuantConnect.Algorithm.Examples.Nifty.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="return ''https://www.dropbox.com/s/rsmg44jr6wexn2h/CNXNIFTY.csv?dl=1'';", span="135-135"];
m2_52 [cluster="QuantConnect.Algorithm.Examples.Nifty.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.Nifty.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="133-133"];
m2_74 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.DollarRupee.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="184-184"];
m2_75 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="DollarRupee currency = new DollarRupee()", span="187-187"];
m2_76 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="string[] data = line.Split(',')", span="191-191"];
m2_77 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", color=red, community=0, file="IndicatorExtensions.cs", label="19: currency.Time = DateTime.Parse(data[0])", span="192-192"];
m2_78 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="currency.Close = Convert.ToDecimal(data[1])", span="193-193"];
m2_79 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="currency.Symbol = ''USDINR''", span="194-194"];
m2_80 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="currency.Value = currency.Close", span="195-195"];
m2_81 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="return currency;", span="202-202"];
m2_82 [cluster="QuantConnect.Algorithm.Examples.DollarRupee.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.DollarRupee.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="184-184"];
m2_0 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="IndicatorExtensions.cs", label="Entry QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", span="41-41"];
m2_1 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="IndicatorExtensions.cs", label="SetStartDate(2008, 1, 8)", span="43-43"];
m2_2 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="IndicatorExtensions.cs", label="SetEndDate(2014, 7, 25)", span="44-44"];
m2_3 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="IndicatorExtensions.cs", label="SetCash(100000)", span="47-47"];
m2_4 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="IndicatorExtensions.cs", label="AddData<DollarRupee>(''USDINR'')", span="50-50"];
m2_5 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="IndicatorExtensions.cs", label="AddData<Nifty>(''NIFTY'')", span="51-51"];
m2_6 [cluster="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", file="IndicatorExtensions.cs", label="Exit QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm.Initialize()", span="41-41"];
m2_67 [cluster="System.Convert.ToDecimal(string)", file="IndicatorExtensions.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m2_87 [file="IndicatorExtensions.cs", label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", span=""];
m2_88 [file="IndicatorExtensions.cs", label="QuantConnect.Algorithm.Examples.Nifty", span=""];
m2_89 [file="IndicatorExtensions.cs", label="QuantConnect.Algorithm.Examples.DollarRupee", span=""];
m2_90 [file="IndicatorExtensions.cs", label="QuantConnect.Algorithm.Examples.CorrelationPair", span=""];
m3_68 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", span="113-113"];
m3_69 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var left = new Identity(''left'')", span="115-115"];
m3_70 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var right = new Identity(''right'')", span="116-116"];
m3_72 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 1m)", span="119-119"];
m3_75 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 2m)", span="123-123"];
m3_77 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 3m)", span="126-126"];
m3_73 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="right.Update(DateTime.Today, 1m)", span="120-120"];
m3_79 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="right.Update(DateTime.Today, 4m)", span="129-129"];
m3_71 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var composite = left.Plus(right)", span="117-117"];
m3_74 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(2m, composite.Current.Value)", span="121-121"];
m3_76 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(2m, composite.Current.Value)", span="124-124"];
m3_78 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(2m, composite.Current.Value)", span="127-127"];
m3_80 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(7m, composite.Current.Value)", span="130-130"];
m3_81 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", span="113-113"];
m3_40 [cluster="QuantConnect.Indicators.Identity.Identity(string)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27"];
m3_113 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", span="176-176"];
m3_114 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="38: var left = new Identity(''left'')", span="178-178"];
m3_115 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="1: var right = new Identity(''right'')", span="179-179"];
m3_116 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="35: var composite = left.Over(right)", span="180-180"];
m3_119 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="5: left.Update(DateTime.Today, 1m)", span="184-184"];
m3_125 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="38: left.Update(DateTime.Today, 1m)", span="192-192"];
m3_121 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="5: right.Update(DateTime.Today, 0m)", span="186-186"];
m3_123 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="38: right.Update(DateTime.Today, 1m)", span="190-190"];
m3_117 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="38: var updatedEventFired = false", span="181-181"];
m3_118 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="6: composite.Updated += delegate { updatedEventFired = true; }", span="182-182"];
m3_120 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="1: Assert.IsFalse(updatedEventFired)", span="185-185"];
m3_124 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="1: Assert.IsFalse(updatedEventFired)", span="191-191"];
m3_126 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="38: Assert.IsTrue(updatedEventFired)", span="193-193"];
m3_122 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", color=green, community=0, file="IndicatorExtensionsTests.cs", label="1: Assert.IsFalse(updatedEventFired)", span="187-187"];
m3_127 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", span="176-176"];
m3_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", span="46-46"];
m3_9 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="Assert.IsFalse(first.IsReady)", span="40-40"];
m3_13 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="Assert.IsFalse(second.IsReady)", span="46-46"];
m3_12 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="Assert.IsTrue(first.IsReady)", span="45-45"];
m3_16 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="Assert.IsTrue(second.IsReady)", span="51-51"];
m3_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="IndicatorExtensionsTests.cs", label="Date = date", span="48-48"];
m3_8 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="first.Update(data1)", span="39-39"];
m3_10 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(0m, second.Current.Value)", span="41-41"];
m3_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="IndicatorExtensionsTests.cs", label="Source = source", span="49-49"];
m3_14 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(1.5m, second.Current.Value)", span="47-47"];
m3_11 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="first.Update(data2)", span="44-44"];
m3_15 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="first.Update(data3)", span="50-50"];
m3_17 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(1.5m, second.Current.Value)", span="52-52"];
m3_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", span="46-46"];
m3_18 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="first.Update(data4)", span="55-55"];
m3_4 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs", span=""];
m3_7 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="var data4 = new IndicatorDataPoint(DateTime.UtcNow, 4m)", span="36-36"];
m3_19 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(2.5m, second.Current.Value)", span="56-56"];
m3_5 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="var data2 = new IndicatorDataPoint(DateTime.UtcNow, 2m)", span="34-34"];
m3_6 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="var data3 = new IndicatorDataPoint(DateTime.UtcNow, 3m)", span="35-35"];
m3_20 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", span="25-25"];
m3_42 [cluster="lambda expression", file="IndicatorExtensionsTests.cs", label="Entry lambda expression", span="65-68"];
m3_129 [cluster="lambda expression", color=green, community=0, file="IndicatorExtensionsTests.cs", label="15: updatedEventFired = true", span="182-182"];
m3_128 [cluster="lambda expression", file="IndicatorExtensionsTests.cs", label="Entry lambda expression", span="182-182"];
m3_130 [cluster="lambda expression", file="IndicatorExtensionsTests.cs", label="Exit lambda expression", span="182-182"];
m3_43 [cluster="lambda expression", file="IndicatorExtensionsTests.cs", label="sma.Update(consolidated)", span="67-67"];
m3_44 [cluster="lambda expression", file="IndicatorExtensionsTests.cs", label="Exit lambda expression", span="65-68"];
m3_23 [cluster="TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", file="IndicatorExtensionsTests.cs", label="Entry TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", span="47-47"];
m3_26 [cluster="Unk.IsFalse", file="IndicatorExtensionsTests.cs", label="Entry Unk.IsFalse", span=""];
m3_131 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", span="197-197"];
m3_132 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var left = new Identity(''left'')", span="199-199"];
m3_133 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var right = new Identity(''right'')", span="200-200"];
m3_135 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 1m)", span="203-203"];
m3_138 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 2m)", span="207-207"];
m3_140 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 3m)", span="210-210"];
m3_136 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="right.Update(DateTime.Today, 1m)", span="204-204"];
m3_142 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="right.Update(DateTime.Today, 4m)", span="213-213"];
m3_134 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var composite = left.Times(right)", span="201-201"];
m3_137 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="205-205"];
m3_139 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="208-208"];
m3_141 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="211-211"];
m3_143 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(12m, composite.Current.Value)", span="214-214"];
m3_144 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", span="197-197"];
m3_24 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="40-40"];
m3_97 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="131-131"];
m3_112 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="175-175"];
m3_45 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", span="80-80"];
m3_46 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="var identity = new Identity(''identity'')", span="82-82"];
m3_50 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="identity.Update(DateTime.UtcNow, 1m)", span="89-89"];
m3_54 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="identity.Update(DateTime.UtcNow, 2m)", span="94-94"];
m3_58 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="identity.Update(DateTime.UtcNow, 3m)", span="99-99"];
m3_62 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="identity.Update(DateTime.UtcNow, 4m)", span="104-104"];
m3_53 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsFalse(sma.IsReady)", span="92-92"];
m3_57 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsFalse(sma.IsReady)", span="97-97"];
m3_61 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsFalse(sma.IsReady)", span="102-102"];
m3_52 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsFalse(delay.IsReady)", span="91-91"];
m3_56 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsFalse(delay.IsReady)", span="96-96"];
m3_51 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsTrue(identity.IsReady)", span="90-90"];
m3_55 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsTrue(identity.IsReady)", span="95-95"];
m3_59 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsTrue(identity.IsReady)", span="100-100"];
m3_63 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsTrue(identity.IsReady)", span="105-105"];
m3_65 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsTrue(sma.IsReady)", span="107-107"];
m3_60 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsTrue(delay.IsReady)", span="101-101"];
m3_64 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.IsTrue(delay.IsReady)", span="106-106"];
m3_47 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="var sma = new SimpleMovingAverage(2)", span="83-83"];
m3_49 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="sma.Of(delay.Of(identity))", span="87-87"];
m3_48 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="var delay = new Delay(2)", span="84-84"];
m3_66 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(1.5m, sma)", span="109-109"];
m3_67 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", span="80-80"];
m3_28 [cluster="Unk.IsTrue", file="IndicatorExtensionsTests.cs", label="Entry Unk.IsTrue", span=""];
m3_21 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", span="56-56"];
m3_98 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", span="155-155"];
m3_99 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var left = new Identity(''left'')", span="157-157"];
m3_100 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var right = new Identity(''right'')", span="158-158"];
m3_101 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var composite = left.Over(right)", span="159-159"];
m3_102 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 1m)", span="161-161"];
m3_105 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 2m)", span="165-165"];
m3_107 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 3m)", span="168-168"];
m3_103 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="right.Update(DateTime.Today, 1m)", span="162-162"];
m3_109 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="right.Update(DateTime.Today, 4m)", span="171-171"];
m3_104 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="163-163"];
m3_106 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="166-166"];
m3_108 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="169-169"];
m3_110 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(3m / 4m, composite.Current.Value)", span="172-172"];
m3_111 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", span="155-155"];
m3_145 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="219-219"];
m3_27 [cluster="Unk.AreEqual", file="IndicatorExtensionsTests.cs", label="Entry Unk.AreEqual", span=""];
m3_83 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", span="134-134"];
m3_84 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var left = new Identity(''left'')", span="136-136"];
m3_85 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var right = new Identity(''right'')", span="137-137"];
m3_87 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 1m)", span="140-140"];
m3_90 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 2m)", span="144-144"];
m3_92 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="left.Update(DateTime.Today, 3m)", span="147-147"];
m3_88 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="right.Update(DateTime.Today, 1m)", span="141-141"];
m3_94 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="right.Update(DateTime.Today, 4m)", span="150-150"];
m3_86 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="var composite = left.Minus(right)", span="138-138"];
m3_89 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(0m, composite.Current.Value)", span="142-142"];
m3_91 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(0m, composite.Current.Value)", span="145-145"];
m3_93 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(0m, composite.Current.Value)", span="148-148"];
m3_95 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(-1m, composite.Current.Value)", span="151-151"];
m3_96 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", span="134-134"];
m3_22 [cluster="QuantConnect.Indicators.Delay.Delay(int)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Indicators.Delay.Delay(int)", span="26-26"];
m3_25 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m3_82 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="87-87"];
m3_41 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="34-34"];
m3_29 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", span="60-60"];
m3_30 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="IndicatorExtensionsTests.cs", label="var identity = new Identity(''identity'')", span="62-62"];
m3_33 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="IndicatorExtensionsTests.cs", label="identity.Update(DateTime.UtcNow, 1m)", span="70-70"];
m3_34 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="IndicatorExtensionsTests.cs", label="identity.Update(DateTime.UtcNow, 2m)", span="71-71"];
m3_36 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="IndicatorExtensionsTests.cs", label="identity.Update(DateTime.UtcNow, 3m)", span="74-74"];
m3_35 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="IndicatorExtensionsTests.cs", label="Assert.IsFalse(sma.IsReady)", span="72-72"];
m3_37 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="IndicatorExtensionsTests.cs", label="Assert.IsTrue(sma.IsReady)", span="75-75"];
m3_31 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="IndicatorExtensionsTests.cs", label="var sma = new SimpleMovingAverage(3)", span="63-63"];
m3_32 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="IndicatorExtensionsTests.cs", label="identity.Updated += (sender, consolidated) =>\r\n            {\r\n                sma.Update(consolidated);\r\n            }", span="65-68"];
m3_38 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="IndicatorExtensionsTests.cs", label="Assert.AreEqual(2m, sma)", span="76-76"];
m3_39 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", span="60-60"];
m3_147 [file="IndicatorExtensionsTests.cs", label=object, span=""];
m3_148 [file="IndicatorExtensionsTests.cs", label="QuantConnect.Indicators.IndicatorDataPoint", span=""];
m3_146 [file="IndicatorExtensionsTests.cs", label=sma, span=""];
m4_0 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="IndicatorResult.cs", label="Entry QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45"];
m4_1 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="IndicatorResult.cs", label="Value = value", span="47-47"];
m4_2 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="IndicatorResult.cs", label="Status = status", span="48-48"];
m4_3 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="IndicatorResult.cs", label="Exit QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45"];
m4_4 [file="IndicatorResult.cs", label="QuantConnect.Indicators.IndicatorResult", span=""];
m6_10 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="ScheduledEventFactory.cs", label="Entry QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", span="123-123"];
m6_11 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="ScheduledEventFactory.cs", label="Message = message", span="125-125"];
m6_12 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="ScheduledEventFactory.cs", label="Data = data", span="126-126"];
m6_13 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="ScheduledEventFactory.cs", label="Subject = subject", span="127-127"];
m6_14 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="ScheduledEventFactory.cs", label="Address = address", span="128-128"];
m6_15 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="ScheduledEventFactory.cs", label="Exit QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", span="123-123"];
m6_6 [cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="ScheduledEventFactory.cs", label="Entry QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", span="84-84"];
m6_7 [cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="ScheduledEventFactory.cs", label="PhoneNumber = number", span="86-86"];
m6_8 [cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="ScheduledEventFactory.cs", label="Message = message", span="87-87"];
m6_9 [cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="ScheduledEventFactory.cs", label="Exit QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", span="84-84"];
m6_0 [cluster="QuantConnect.Notifications.Notification.Send()", file="ScheduledEventFactory.cs", label="Entry QuantConnect.Notifications.Notification.Send()", span="31-31"];
m6_1 [cluster="QuantConnect.Notifications.Notification.Send()", file="ScheduledEventFactory.cs", label="Exit QuantConnect.Notifications.Notification.Send()", span="31-31"];
m6_2 [cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="ScheduledEventFactory.cs", label="Entry QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", span="57-57"];
m6_3 [cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="ScheduledEventFactory.cs", label="Address = address", span="59-59"];
m6_4 [cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="ScheduledEventFactory.cs", label="Data = data", span="60-60"];
m6_5 [cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="ScheduledEventFactory.cs", label="Exit QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", span="57-57"];
m6_16 [file="ScheduledEventFactory.cs", label="QuantConnect.Notifications.NotificationWeb", span=""];
m6_17 [file="ScheduledEventFactory.cs", label="QuantConnect.Notifications.NotificationSms", span=""];
m6_18 [file="ScheduledEventFactory.cs", label="QuantConnect.Notifications.NotificationEmail", span=""];
m7_59 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="SecurityChanges.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m7_50 [cluster="MapFile.cstr", file="SecurityChanges.cs", label="Entry MapFile.cstr", span=""];
m7_49 [cluster="Unk.SafeMapFileRowRead", file="SecurityChanges.cs", label="Entry Unk.SafeMapFileRowRead", span=""];
m7_5 [cluster="SortedDictionary<DateTime, MapFileRow>.cstr", file="SecurityChanges.cs", label="Entry SortedDictionary<DateTime, MapFileRow>.cstr", span=""];
m7_36 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetEnumerator()", file="SecurityChanges.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.GetEnumerator()", span="128-128"];
m7_37 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetEnumerator()", file="SecurityChanges.cs", label="return _data.Values.GetEnumerator();", span="130-130"];
m7_38 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetEnumerator()", file="SecurityChanges.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.GetEnumerator()", span="128-128"];
m7_43 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMapFiles(string)", file="SecurityChanges.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.GetMapFiles(string)", span="152-152"];
m7_44 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMapFiles(string)", file="SecurityChanges.cs", label="return from file in Directory.EnumerateFiles(mapFileDirectory)\r\n                   where file.EndsWith(''.csv'')\r\n                   let permtick = Path.GetFileNameWithoutExtension(file)\r\n                   let fileRead = SafeMapFileRowRead(file)\r\n                   select new MapFile(permtick, fileRead);", span="154-158"];
m7_45 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMapFiles(string)", file="SecurityChanges.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.GetMapFiles(string)", span="152-152"];
m7_30 [cluster="QuantConnect.Data.Auxiliary.MapFileRow.Read(string, string)", file="SecurityChanges.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileRow.Read(string, string)", span="50-50"];
m7_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="SecurityChanges.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m7_8 [cluster="lambda expression", file="SecurityChanges.cs", label="Entry lambda expression", span="60-60"];
m7_9 [cluster="lambda expression", file="SecurityChanges.cs", label="x.Date", span="60-60"];
m7_10 [cluster="lambda expression", file="SecurityChanges.cs", label="Exit lambda expression", span="60-60"];
m7_18 [cluster="QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", file="SecurityChanges.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", span="84-84"];
m7_19 [cluster="QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", file="SecurityChanges.cs", label="_data.Count == 0", span="87-87"];
m7_21 [cluster="QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", file="SecurityChanges.cs", label="date < _data.Keys.First() || date > _data.Keys.Last()", span="92-92"];
m7_20 [cluster="QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", file="SecurityChanges.cs", label="return true;", span="89-89"];
m7_22 [cluster="QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", file="SecurityChanges.cs", label="return false;", span="95-95"];
m7_23 [cluster="QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", file="SecurityChanges.cs", label="return true;", span="97-97"];
m7_24 [cluster="QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", file="SecurityChanges.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", span="84-84"];
m7_31 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMapFilePath(string, string)", file="SecurityChanges.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.GetMapFilePath(string, string)", span="114-114"];
m7_32 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMapFilePath(string, string)", file="SecurityChanges.cs", label="return Path.Combine(Globals.CacheDataFolder, ''equity'', market, ''map_files'', permtick.ToLower() + ''.csv'');", span="116-116"];
m7_33 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMapFilePath(string, string)", file="SecurityChanges.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.GetMapFilePath(string, string)", span="114-114"];
m7_35 [cluster="System.IO.Path.Combine(params string[])", file="SecurityChanges.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m7_0 [cluster="QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", file="SecurityChanges.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", span="57-57"];
m7_1 [cluster="QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", file="SecurityChanges.cs", label="Permtick = permtick.ToUpper()", span="59-59"];
m7_2 [cluster="QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", file="SecurityChanges.cs", label="_data = new SortedDictionary<DateTime, MapFileRow>(data.Distinct().ToDictionary(x => x.Date))", span="60-60"];
m7_3 [cluster="QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", file="SecurityChanges.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", span="57-57"];
m7_11 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", file="SecurityChanges.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", span="68-68"];
m7_12 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", file="SecurityChanges.cs", label="var mappedSymbol = ''''", span="70-70"];
m7_14 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", file="SecurityChanges.cs", label="splitDate < searchDate", span="74-74"];
m7_13 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", file="SecurityChanges.cs", label="_data.Keys", span="72-72"];
m7_16 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", file="SecurityChanges.cs", label="return mappedSymbol;", span="78-78"];
m7_15 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", file="SecurityChanges.cs", label="mappedSymbol = _data[splitDate].MappedSymbol", span="75-75"];
m7_17 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", file="SecurityChanges.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", span="68-68"];
m7_34 [cluster="string.ToLower()", file="SecurityChanges.cs", label="Entry string.ToLower()", span="0-0"];
m7_57 [cluster="QuantConnect.Data.Auxiliary.MapFileRow.Read(string)", file="SecurityChanges.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileRow.Read(string)", span="61-61"];
m7_47 [cluster="string.EndsWith(string)", file="SecurityChanges.cs", label="Entry string.EndsWith(string)", span="0-0"];
m7_4 [cluster="string.ToUpper()", file="SecurityChanges.cs", label="Entry string.ToUpper()", span="0-0"];
m7_27 [cluster="QuantConnect.Data.Auxiliary.MapFile.Read(string, string)", file="SecurityChanges.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.Read(string, string)", span="103-103"];
m7_28 [cluster="QuantConnect.Data.Auxiliary.MapFile.Read(string, string)", file="SecurityChanges.cs", label="return new MapFile(permtick, MapFileRow.Read(permtick, market));", span="105-105"];
m7_29 [cluster="QuantConnect.Data.Auxiliary.MapFile.Read(string, string)", file="SecurityChanges.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.Read(string, string)", span="103-103"];
m7_58 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SecurityChanges.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m7_40 [cluster="QuantConnect.Data.Auxiliary.MapFile.System.Collections.IEnumerable.GetEnumerator()", file="SecurityChanges.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.System.Collections.IEnumerable.GetEnumerator()", span="140-140"];
m7_41 [cluster="QuantConnect.Data.Auxiliary.MapFile.System.Collections.IEnumerable.GetEnumerator()", file="SecurityChanges.cs", label="return GetEnumerator();", span="142-142"];
m7_42 [cluster="QuantConnect.Data.Auxiliary.MapFile.System.Collections.IEnumerable.GetEnumerator()", file="SecurityChanges.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.System.Collections.IEnumerable.GetEnumerator()", span="140-140"];
m7_48 [cluster="Unk.GetFileNameWithoutExtension", file="SecurityChanges.cs", label="Entry Unk.GetFileNameWithoutExtension", span=""];
m7_39 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.ValueCollection.GetEnumerator()", file="SecurityChanges.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.ValueCollection.GetEnumerator()", span="0-0"];
m7_46 [cluster="System.IO.Directory.EnumerateFiles(string)", file="SecurityChanges.cs", label="Entry System.IO.Directory.EnumerateFiles(string)", span="0-0"];
m7_51 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="SecurityChanges.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", span="164-164"];
m7_52 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="SecurityChanges.cs", label="return MapFileRow.Read(file).ToList();", span="168-168"];
m7_54 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="SecurityChanges.cs", label="Log.Error(err, ''File: '' + file)", span="172-172"];
m7_53 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="SecurityChanges.cs", label=Exception, span="170-170"];
m7_55 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="SecurityChanges.cs", label="return new List<MapFileRow>();", span="173-173"];
m7_56 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="SecurityChanges.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", span="164-164"];
m7_25 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="SecurityChanges.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m7_7 [cluster="Unk.ToDictionary", file="SecurityChanges.cs", label="Entry Unk.ToDictionary", span=""];
m7_6 [cluster="System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", file="SecurityChanges.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", span="0-0"];
m7_61 [file="SecurityChanges.cs", label="QuantConnect.Data.Auxiliary.MapFile", span=""];
m8_45 [cluster="QuantConnect.Data.UniverseSelection.Universe.GetSubscriptions(QuantConnect.Securities.Security)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.GetSubscriptions(QuantConnect.Securities.Security)", span="184-184"];
m8_46 [cluster="QuantConnect.Data.UniverseSelection.Universe.GetSubscriptions(QuantConnect.Securities.Security)", file="Universe.cs", label="return new[] {security.SubscriptionDataConfig};", span="186-186"];
m8_47 [cluster="QuantConnect.Data.UniverseSelection.Universe.GetSubscriptions(QuantConnect.Securities.Security)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.GetSubscriptions(QuantConnect.Securities.Security)", span="184-184"];
m8_57 [cluster="QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", span="254-254"];
m8_77 [cluster="QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Added = added", span="256-256"];
m8_78 [cluster="QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Security = security", span="257-257"];
m8_79 [cluster="QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", span="254-254"];
m8_41 [cluster="QuantConnect.Data.UniverseSelection.Universe.CreateSecurity(QuantConnect.Symbol, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.CreateSecurity(QuantConnect.Symbol, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase)", span="166-166"];
m8_42 [cluster="QuantConnect.Data.UniverseSelection.Universe.CreateSecurity(QuantConnect.Symbol, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase)", file="Universe.cs", label="return SecurityManager.CreateSecurity(algorithm.Portfolio, algorithm.SubscriptionManager, marketHoursDatabase, symbolPropertiesDatabase,\r\n                SecurityInitializer, symbol, UniverseSettings.Resolution, UniverseSettings.FillForward, UniverseSettings.Leverage,\r\n                UniverseSettings.ExtendedMarketHours, false, false, symbol.ID.SecurityType == SecurityType.Option);", span="169-171"];
m8_43 [cluster="QuantConnect.Data.UniverseSelection.Universe.CreateSecurity(QuantConnect.Symbol, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.CreateSecurity(QuantConnect.Symbol, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase)", span="166-166"];
m8_66 [cluster="QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.UnchangedUniverse()", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.UnchangedUniverse()", span="244-244"];
m8_67 [cluster="QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.UnchangedUniverse()", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.UnchangedUniverse()", span="244-244"];
m8_68 [cluster="QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.Generic.IEnumerable<QuantConnect.Symbol>.GetEnumerator()", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.Generic.IEnumerable<QuantConnect.Symbol>.GetEnumerator()", span="245-245"];
m8_69 [cluster="QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.Generic.IEnumerable<QuantConnect.Symbol>.GetEnumerator()", file="Universe.cs", label="yield break;", span="245-245"];
m8_70 [cluster="QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.Generic.IEnumerable<QuantConnect.Symbol>.GetEnumerator()", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.Generic.IEnumerable<QuantConnect.Symbol>.GetEnumerator()", span="245-245"];
m8_44 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="Universe.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", span="398-398"];
m8_71 [cluster="QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.Generic.IEnumerable<string>.GetEnumerator()", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.Generic.IEnumerable<string>.GetEnumerator()", span="246-246"];
m8_72 [cluster="QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.Generic.IEnumerable<string>.GetEnumerator()", file="Universe.cs", label="yield break;", span="246-246"];
m8_73 [cluster="QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.Generic.IEnumerable<string>.GetEnumerator()", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.Generic.IEnumerable<string>.GetEnumerator()", span="246-246"];
m8_48 [cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Securities.Security)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Securities.Security)", span="194-194"];
m8_49 [cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Securities.Security)", color=red, community=0, file="Universe.cs", label="20: return _securities.ContainsKey(security.Symbol);", span="196-196"];
m8_50 [cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Securities.Security)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Securities.Security)", span="194-194"];
m8_35 [cluster="object.ReferenceEquals(object, object)", file="Universe.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m8_3 [cluster="lambda expression", file="Universe.cs", label="Entry lambda expression", span="86-86"];
m8_0 [cluster="lambda expression", file="Universe.cs", label="Entry lambda expression", span="86-86"];
m8_1 [cluster="lambda expression", file="Universe.cs", label="x.Value.Security", span="86-86"];
m8_2 [cluster="lambda expression", file="Universe.cs", label="Exit lambda expression", span="86-86"];
m8_4 [cluster="lambda expression", file="Universe.cs", label="x.Symbol", span="86-86"];
m8_5 [cluster="lambda expression", file="Universe.cs", label="Exit lambda expression", span="86-86"];
m8_12 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="Universe.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m8_14 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="112-112"];
m8_15 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Member member", span="114-114"];
m8_16 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="_securities.TryGetValue(security.Symbol, out member)", span="115-115"];
m8_17 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="var timeInUniverse = utcTime - member.Added", span="117-117"];
m8_20 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="return false;", span="123-123"];
m8_18 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="timeInUniverse >= UniverseSettings.MinimumTimeInUniverse", span="118-118"];
m8_19 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="return true;", span="120-120"];
m8_21 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="112-112"];
m8_37 [cluster="Unk.Except", file="Universe.cs", label="Entry Unk.Except", span=""];
m8_59 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="224-224"];
m8_60 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="CanRemoveMember(utcTime, security)", span="226-226"];
m8_62 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="return _securities.TryRemove(security.Symbol, out member);", span="229-229"];
m8_61 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Member member", span="228-228"];
m8_63 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="return false;", span="231-231"];
m8_64 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="224-224"];
m8_52 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", span="206-206"];
m8_53 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="_securities.ContainsKey(security.Symbol)", span="208-208"];
m8_55 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="return _securities.TryAdd(security.Symbol, new Member(utcTime, security));", span="212-212"];
m8_54 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="return false;", span="210-210"];
m8_56 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", span="206-206"];
m8_58 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="Universe.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m8_22 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Universe.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m8_65 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="Universe.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m8_74 [cluster="QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.IEnumerable.GetEnumerator()", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.IEnumerable.GetEnumerator()", span="247-247"];
m8_75 [cluster="QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.IEnumerable.GetEnumerator()", file="Universe.cs", label="yield break;", span="247-247"];
m8_76 [cluster="QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.IEnumerable.GetEnumerator()", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.System.Collections.IEnumerable.GetEnumerator()", span="247-247"];
m8_13 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="Universe.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m8_23 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="132-132"];
m8_24 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="var result = SelectSymbols(utcTime, data)", span="134-134"];
m8_25 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="ReferenceEquals(result, Unchanged)", span="135-135"];
m8_27 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="var selections = result.ToHashSet()", span="140-140"];
m8_26 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="return Unchanged;", span="137-137"];
m8_28 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="var hasDiffs = _previousSelections.Except(selections).Union(selections.Except(_previousSelections)).Any()", span="141-141"];
m8_29 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="_previousSelections = selections", span="142-142"];
m8_32 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="return selections;", span="147-147"];
m8_30 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="!hasDiffs", span="143-143"];
m8_31 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="return Unchanged;", span="145-145"];
m8_33 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="132-132"];
m8_34 [cluster="QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="156-156"];
m8_40 [cluster="QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="156-156"];
m8_51 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="Universe.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m8_38 [cluster="Unk.Union", file="Universe.cs", label="Entry Unk.Union", span=""];
m8_36 [cluster="Unk.ToHashSet", file="Universe.cs", label="Entry Unk.ToHashSet", span=""];
m8_6 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", span="94-94"];
m8_7 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="_previousSelections = new HashSet<Symbol>()", span="96-96"];
m8_9 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="Configuration = config", span="99-99"];
m8_10 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="SecurityInitializer = securityInitializer ?? Securities.SecurityInitializer.Null", span="100-100"];
m8_8 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="_securities = new ConcurrentDictionary<Symbol, Member>()", span="97-97"];
m8_11 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", span="94-94"];
m8_80 [file="Universe.cs", label="QuantConnect.Data.UniverseSelection.Universe", span=""];
m8_81 [file="Universe.cs", label="QuantConnect.Data.UniverseSelection.Universe.Member", span=""];
m9_11 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 1, 1)", span="43-43"];
m9_12 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', 100)", span="45-45"];
m9_13 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 2, 1)", span="47-47"];
m9_14 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', -50)", span="49-49"];
m9_15 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 3, 1)", span="51-51"];
m9_16 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', -100)", span="53-53"];
m9_17 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 4, 1)", span="55-55"];
m9_18 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', -50)", span="57-57"];
m9_19 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 5, 1)", span="59-59"];
m9_20 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', 50)", span="61-61"];
m9_21 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 6, 1)", span="63-63"];
m9_22 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', 100)", span="65-65"];
m9_23 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 7, 1)", span="67-67"];
m9_24 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', 50)", span="69-69"];
m9_25 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 8, 1)", span="71-71"];
m9_26 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', -50)", span="73-73"];
m9_27 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 9, 1)", span="75-75"];
m9_28 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', -100)", span="77-77"];
m9_29 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 10, 1)", span="79-79"];
m9_30 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', -50)", span="81-81"];
m9_31 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 11, 1)", span="83-83"];
m9_32 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', +50)", span="85-85"];
m9_33 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 12, 1)", span="87-87"];
m9_34 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', +100)", span="89-89"];
m9_35 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Time == new DateTime(2013, 12, 15)", span="91-91"];
m9_36 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Order(''CASH'', -50)", span="93-93"];
m9_37 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label=Exception, span="96-96"];
m9_38 [cluster="QuantConnect.TestCashStrategy.OnData(QuantConnect.CashType)", file="UniverseSelection.cs", label="Debug(''Err: '' + err.Message)", span="98-98"];
m9_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="710-710"];
m9_59 [cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="UniverseSelection.cs", label="Entry QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="132-132"];
m9_60 [cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="UniverseSelection.cs", label="CashType cash = new CashType()", span="135-135"];
m9_61 [cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="UniverseSelection.cs", label="string[] data = line.Split(',')", span="139-139"];
m9_62 [cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="UniverseSelection.cs", label="cash.Time = DateTime.ParseExact(data[0], ''yyyy-MM-dd'', CultureInfo.InvariantCulture)", span="140-140"];
m9_63 [cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="UniverseSelection.cs", label="cash.Value = Convert.ToDecimal(data[1])", span="141-141"];
m9_64 [cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="UniverseSelection.cs", label="return cash;", span="145-145"];
m9_65 [cluster="QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="UniverseSelection.cs", label="Exit QuantConnect.CashType.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="132-132"];
m9_67 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="UniverseSelection.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m9_53 [cluster="QuantConnect.CashType.CashType()", file="UniverseSelection.cs", label="Entry QuantConnect.CashType.CashType()", span="122-122"];
m9_54 [cluster="QuantConnect.CashType.CashType()", file="UniverseSelection.cs", label="this.Symbol = ''CASH''", span="124-124"];
m9_55 [cluster="QuantConnect.CashType.CashType()", file="UniverseSelection.cs", label="Exit QuantConnect.CashType.CashType()", span="122-122"];
m9_40 [cluster="System.DateTime.DateTime(int, int, int)", file="UniverseSelection.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m9_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="73-73"];
m9_56 [cluster="QuantConnect.CashType.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="UniverseSelection.cs", label="Entry QuantConnect.CashType.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="127-127"];
m9_57 [cluster="QuantConnect.CashType.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="UniverseSelection.cs", label="return ''https://www.dropbox.com/s/oiliumoyqqj1ovl/2013-cash.csv?dl=1'';", span="129-129"];
m9_58 [cluster="QuantConnect.CashType.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="UniverseSelection.cs", label="Exit QuantConnect.CashType.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="127-127"];
m9_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="470-470"];
m9_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="673-673"];
m9_66 [cluster="string.Split(params char[])", file="UniverseSelection.cs", label="Entry string.Split(params char[])", span="0-0"];
m9_68 [cluster="System.Convert.ToDecimal(string)", file="UniverseSelection.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m9_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="445-445"];
m9_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", span="194-194"];
m9_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="412-412"];
m9_0 [cluster="QuantConnect.TestCashStrategy.Initialize()", file="UniverseSelection.cs", label="Entry QuantConnect.TestCashStrategy.Initialize()", span="30-30"];
m9_1 [cluster="QuantConnect.TestCashStrategy.Initialize()", file="UniverseSelection.cs", label="SetStartDate(2013, 1, 1)", span="32-32"];
m9_2 [cluster="QuantConnect.TestCashStrategy.Initialize()", file="UniverseSelection.cs", label="SetEndDate(2013, 12, 31)", span="33-33"];
m9_3 [cluster="QuantConnect.TestCashStrategy.Initialize()", file="UniverseSelection.cs", label="SetCash(100000)", span="34-34"];
m9_4 [cluster="QuantConnect.TestCashStrategy.Initialize()", file="UniverseSelection.cs", label="AddData<CashType>(''CASH'')", span="35-35"];
m9_5 [cluster="QuantConnect.TestCashStrategy.Initialize()", file="UniverseSelection.cs", label="Exit QuantConnect.TestCashStrategy.Initialize()", span="30-30"];
m9_43 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="UniverseSelection.cs", label="Entry QuantConnect.TestCashStrategy.OnEndOfDay()", span="103-103"];
m9_44 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="UniverseSelection.cs", label="Plot(''Cash'', Portfolio.Cash)", span="107-107"];
m9_45 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="UniverseSelection.cs", label="Plot(''PortfolioValue'', Portfolio.TotalPortfolioValue)", span="108-108"];
m9_46 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="UniverseSelection.cs", label="Plot(''HoldingValue'', Portfolio[''CASH''].HoldingsValue)", span="109-109"];
m9_47 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="UniverseSelection.cs", label="Plot(''HoldingQuantity'', Portfolio[''CASH''].Quantity)", span="110-110"];
m9_48 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="UniverseSelection.cs", label=Exception, span="112-112"];
m9_49 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="UniverseSelection.cs", label="Debug(''Err: '' + err.Message)", span="114-114"];
m9_50 [cluster="QuantConnect.TestCashStrategy.OnEndOfDay()", file="UniverseSelection.cs", label="Exit QuantConnect.TestCashStrategy.OnEndOfDay()", span="103-103"];
m9_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", span="123-123"];
m9_69 [file="UniverseSelection.cs", label="QuantConnect.TestCashStrategy", span=""];
m9_70 [file="UniverseSelection.cs", label="QuantConnect.CashType", span=""];
n377 -> n1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n54  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n56  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n96  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n112  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n114  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n116  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n120  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n124  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n131  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n134  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n140  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n145  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n148  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n151  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n152  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n154  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n155  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n157  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n161  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n165  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n174  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n184  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n189  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n194  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n197  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n221  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n223  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n228  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n231  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n248  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n255  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n261  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n263  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n276  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n291  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n293  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n294  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n299  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n302  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n304  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n317  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n318  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n321  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n328  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n331  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n332  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n335  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n339  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n341  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n343  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n347  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n349  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n352  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n353  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n357  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n360  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n363  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n367  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n377 -> n374  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n378 -> n219  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n379 -> n219  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
n4 -> n36  [key=0, style=solid];
n4 -> n0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
n4 -> n5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
n4 -> n9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
n4 -> n13  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
n4 -> n17  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
n4 -> n20  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
n4 -> n23  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
n4 -> n26  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
n4 -> n29  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
n4 -> n359  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
n4 -> n362  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
n4 -> n35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
n5 -> n6  [key=0, style=solid];
n5 -> n4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [key=2, style=dotted];
n6 -> n4  [key=2, style=dotted];
n7 -> n5  [color=blue, key=0, style=bold];
n9 -> n10  [key=0, style=solid];
n9 -> n4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=2, style=dotted];
n10 -> n4  [key=2, style=dotted];
n11 -> n9  [color=blue, key=0, style=bold];
n13 -> n14  [key=0, style=solid];
n13 -> n4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=2, style=dotted];
n14 -> n4  [key=2, style=dotted];
n15 -> n13  [color=blue, key=0, style=bold];
n17 -> n18  [key=0, style=solid];
n17 -> n4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
n18 -> n19  [key=0, style=solid];
n18 -> n3  [key=2, style=dotted];
n18 -> n4  [key=2, style=dotted];
n19 -> n17  [color=blue, key=0, style=bold];
n20 -> n21  [key=0, style=solid];
n20 -> n4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
n21 -> n22  [key=0, style=solid];
n21 -> n8  [key=2, style=dotted];
n21 -> n4  [key=2, style=dotted];
n22 -> n20  [color=blue, key=0, style=bold];
n23 -> n24  [key=0, style=solid];
n23 -> n4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
n24 -> n25  [key=0, style=solid];
n24 -> n16  [key=2, style=dotted];
n24 -> n4  [key=2, style=dotted];
n25 -> n23  [color=blue, key=0, style=bold];
n26 -> n27  [key=0, style=solid];
n26 -> n4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
n27 -> n28  [key=0, style=solid];
n27 -> n12  [key=2, style=dotted];
n27 -> n4  [key=2, style=dotted];
n28 -> n26  [color=blue, key=0, style=bold];
n29 -> n30  [key=0, style=solid];
n29 -> n4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
n30 -> n31  [key=0, style=solid];
n30 -> n4  [key=2, style=dotted];
n31 -> n29  [color=blue, key=0, style=bold];
n32 -> n33  [key=0, style=solid];
n32 -> n35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=2, style=dotted];
n34 -> n32  [color=blue, key=0, style=bold];
n35 -> n47  [key=0, style=solid];
n35 -> n49  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n35 -> n54  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n35 -> n61  [color=darkseagreen4, key=1, label=bool, style=dashed];
n35 -> n32  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
n35 -> n4  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
n35 -> n38  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n35 -> n41  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n35 -> n44  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n35 -> n323  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n35 -> n341  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
n35 -> n343  [color=darkorchid, key=3, label="Parameter variable bool asynchronous", style=bold];
n35 -> n60  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
n36 -> n37  [key=0, style=solid];
n36 -> n35  [key=2, style=dotted];
n37 -> n4  [color=blue, key=0, style=bold];
n38 -> n39  [key=0, style=solid];
n38 -> n35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
n38 -> n291  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
n38 -> n336  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
n38 -> n356  [color=darkorchid, key=3, label="Parameter variable bool asynchronous", style=bold];
n38 -> n289  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n38 -> n323  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n38 -> n339  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
n38 -> n343  [color=darkorchid, key=3, label="Parameter variable bool asynchronous", style=bold];
n39 -> n40  [key=0, style=solid];
n39 -> n35  [key=2, style=dotted];
n40 -> n38  [color=blue, key=0, style=bold];
n41 -> n42  [key=0, style=solid];
n41 -> n35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
n41 -> n171  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n42 -> n43  [key=0, style=solid];
n42 -> n35  [key=2, style=dotted];
n43 -> n41  [color=blue, key=0, style=bold];
n44 -> n45  [key=0, style=solid];
n44 -> n35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
n45 -> n46  [key=0, style=solid];
n45 -> n35  [key=2, style=dotted];
n46 -> n44  [color=blue, key=0, style=bold];
n47 -> n48  [key=0, style=solid];
n47 -> n49  [color=darkseagreen4, key=1, label=security, style=dashed];
n47 -> n50  [color=darkseagreen4, key=1, label=security, style=dashed];
n47 -> n54  [color=darkseagreen4, key=1, label=security, style=dashed];
n49 -> n50  [key=0, style=solid];
n49 -> n65  [key=2, style=dotted];
n49 -> n51  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
n49 -> n52  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
n49 -> n53  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
n54 -> n55  [key=0, style=solid];
n54 -> n68  [key=2, style=dotted];
n54 -> n69  [key=2, style=dotted];
n54 -> n56  [color=darkseagreen4, key=1, label=request, style=dashed];
n54 -> n57  [color=darkseagreen4, key=1, label=request, style=dashed];
n54 -> n59  [color=darkseagreen4, key=1, label=request, style=dashed];
n54 -> n60  [color=darkseagreen4, key=1, label=request, style=dashed];
n61 -> n62  [key=0, style=solid];
n61 -> n63  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n54  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n50 -> n66  [key=2, style=dotted];
n50 -> n75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n65 -> n84  [key=0, style=solid];
n65 -> n85  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n65 -> n78  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n65 -> n81  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n65 -> n35  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n51 -> n52  [key=0, style=solid];
n51 -> n53  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n67  [key=2, style=dotted];
n53 -> n64  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n55 -> n57  [key=0, style=solid];
n69 -> n374  [key=0, style=solid];
n69 -> n54  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
n69 -> n85  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
n69 -> n99  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
n69 -> n113  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
n69 -> n127  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
n69 -> n141  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
n69 -> n149  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
n69 -> n47  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n69 -> n84  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n69 -> n98  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n69 -> n112  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n69 -> n126  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n69 -> n140  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n69 -> n148  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n69 -> n35  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n69 -> n65  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n69 -> n94  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n69 -> n108  [color=darkorchid, key=3, label="Parameter variable decimal limitPrice", style=bold];
n69 -> n122  [color=darkorchid, key=3, label="Parameter variable decimal stopPrice", style=bold];
n69 -> n136  [color=darkorchid, key=3, label="Parameter variable decimal stopPrice", style=bold];
n69 -> n147  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n56 -> n64  [key=0, style=solid];
n56 -> n70  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n71  [key=2, style=dotted];
n57 -> n59  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
n59 -> n64  [key=0, style=solid];
n59 -> n72  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n73  [key=2, style=dotted];
n60 -> n62  [color=darkseagreen4, key=1, label=ticket, style=dashed];
n60 -> n63  [color=darkseagreen4, key=1, label=ticket, style=dashed];
n58 -> n59  [key=0, style=solid];
n58 -> n60  [key=0, style=solid];
n71 -> n221  [key=0, style=solid];
n71 -> n54  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
n71 -> n85  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
n71 -> n99  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
n71 -> n113  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
n71 -> n127  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
n71 -> n141  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
n71 -> n149  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
n62 -> n63  [key=0, style=solid];
n62 -> n74  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n64 -> n35  [color=blue, key=0, style=bold];
n76 -> n77  [key=0, style=solid];
n77 -> n75  [color=blue, key=0, style=bold];
n78 -> n79  [key=0, style=solid];
n78 -> n65  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnOpenOrder", style=bold];
n79 -> n80  [key=0, style=solid];
n79 -> n65  [key=2, style=dotted];
n80 -> n78  [color=blue, key=0, style=bold];
n81 -> n82  [key=0, style=solid];
n81 -> n65  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnOpenOrder", style=bold];
n82 -> n83  [key=0, style=solid];
n82 -> n65  [key=2, style=dotted];
n83 -> n81  [color=blue, key=0, style=bold];
n84 -> n85  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n85 -> n68  [key=2, style=dotted];
n85 -> n69  [key=2, style=dotted];
n85 -> n88  [color=darkseagreen4, key=1, label=request, style=dashed];
n85 -> n89  [color=darkseagreen4, key=1, label=request, style=dashed];
n86 -> n87  [key=0, style=solid];
n86 -> n71  [key=2, style=dotted];
n86 -> n88  [color=darkseagreen4, key=1, label=response, style=dashed];
n88 -> n90  [key=0, style=solid];
n88 -> n72  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n73  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n89  [key=0, style=solid];
n90 -> n65  [color=blue, key=0, style=bold];
n91 -> n92  [key=0, style=solid];
n91 -> n94  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnCloseOrder", style=bold];
n92 -> n93  [key=0, style=solid];
n92 -> n94  [key=2, style=dotted];
n93 -> n91  [color=blue, key=0, style=bold];
n94 -> n98  [key=0, style=solid];
n94 -> n99  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n94 -> n91  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n94 -> n95  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n95 -> n96  [key=0, style=solid];
n95 -> n94  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnCloseOrder", style=bold];
n96 -> n97  [key=0, style=solid];
n96 -> n94  [key=2, style=dotted];
n97 -> n95  [color=blue, key=0, style=bold];
n98 -> n99  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n68  [key=2, style=dotted];
n99 -> n69  [key=2, style=dotted];
n99 -> n102  [color=darkseagreen4, key=1, label=request, style=dashed];
n99 -> n103  [color=darkseagreen4, key=1, label=request, style=dashed];
n100 -> n101  [key=0, style=solid];
n100 -> n71  [key=2, style=dotted];
n100 -> n102  [color=darkseagreen4, key=1, label=response, style=dashed];
n102 -> n104  [key=0, style=solid];
n102 -> n72  [key=2, style=dotted];
n103 -> n104  [key=0, style=solid];
n103 -> n73  [key=2, style=dotted];
n101 -> n102  [key=0, style=solid];
n101 -> n103  [key=0, style=solid];
n104 -> n94  [color=blue, key=0, style=bold];
n105 -> n106  [key=0, style=solid];
n105 -> n108  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket LimitOrder", style=bold];
n105 -> n171  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n106 -> n107  [key=0, style=solid];
n106 -> n108  [key=2, style=dotted];
n107 -> n105  [color=blue, key=0, style=bold];
n108 -> n112  [key=0, style=solid];
n108 -> n113  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n108 -> n105  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n108 -> n109  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n109 -> n110  [key=0, style=solid];
n109 -> n108  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket LimitOrder", style=bold];
n110 -> n111  [key=0, style=solid];
n110 -> n108  [key=2, style=dotted];
n111 -> n109  [color=blue, key=0, style=bold];
n112 -> n113  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n113 -> n68  [key=2, style=dotted];
n113 -> n69  [key=2, style=dotted];
n113 -> n116  [color=darkseagreen4, key=1, label=request, style=dashed];
n113 -> n117  [color=darkseagreen4, key=1, label=request, style=dashed];
n114 -> n115  [key=0, style=solid];
n114 -> n71  [key=2, style=dotted];
n114 -> n116  [color=darkseagreen4, key=1, label=response, style=dashed];
n116 -> n118  [key=0, style=solid];
n116 -> n72  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n117 -> n73  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n117  [key=0, style=solid];
n118 -> n108  [color=blue, key=0, style=bold];
n119 -> n120  [key=0, style=solid];
n119 -> n122  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopMarketOrder", style=bold];
n120 -> n121  [key=0, style=solid];
n120 -> n122  [key=2, style=dotted];
n121 -> n119  [color=blue, key=0, style=bold];
n122 -> n126  [key=0, style=solid];
n122 -> n127  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n122 -> n119  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n122 -> n123  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n123 -> n124  [key=0, style=solid];
n123 -> n122  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopMarketOrder", style=bold];
n124 -> n125  [key=0, style=solid];
n124 -> n122  [key=2, style=dotted];
n125 -> n123  [color=blue, key=0, style=bold];
n126 -> n127  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n127 -> n68  [key=2, style=dotted];
n127 -> n69  [key=2, style=dotted];
n127 -> n130  [color=darkseagreen4, key=1, label=request, style=dashed];
n127 -> n131  [color=darkseagreen4, key=1, label=request, style=dashed];
n128 -> n129  [key=0, style=solid];
n128 -> n71  [key=2, style=dotted];
n128 -> n130  [color=darkseagreen4, key=1, label=response, style=dashed];
n130 -> n132  [key=0, style=solid];
n130 -> n72  [key=2, style=dotted];
n131 -> n132  [key=0, style=solid];
n131 -> n73  [key=2, style=dotted];
n129 -> n130  [key=0, style=solid];
n129 -> n131  [key=0, style=solid];
n132 -> n122  [color=blue, key=0, style=bold];
n133 -> n134  [key=0, style=solid];
n133 -> n136  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopLimitOrder", style=bold];
n134 -> n135  [key=0, style=solid];
n134 -> n136  [key=2, style=dotted];
n135 -> n133  [color=blue, key=0, style=bold];
n136 -> n140  [key=0, style=solid];
n136 -> n141  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n136 -> n133  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n136 -> n137  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n137 -> n138  [key=0, style=solid];
n137 -> n136  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopLimitOrder", style=bold];
n138 -> n139  [key=0, style=solid];
n138 -> n136  [key=2, style=dotted];
n139 -> n137  [color=blue, key=0, style=bold];
n140 -> n141  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n141 -> n68  [key=2, style=dotted];
n141 -> n69  [key=2, style=dotted];
n141 -> n144  [color=darkseagreen4, key=1, label=request, style=dashed];
n141 -> n145  [color=darkseagreen4, key=1, label=request, style=dashed];
n142 -> n143  [key=0, style=solid];
n142 -> n71  [key=2, style=dotted];
n142 -> n144  [color=darkseagreen4, key=1, label=response, style=dashed];
n144 -> n146  [key=0, style=solid];
n144 -> n72  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n73  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n145  [key=0, style=solid];
n146 -> n136  [color=blue, key=0, style=bold];
n147 -> n148  [key=0, style=solid];
n147 -> n149  [color=darkseagreen4, key=1, label=int, style=dashed];
n147 -> n156  [color=darkseagreen4, key=1, label=bool, style=dashed];
n147 -> n155  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket ExerciseOption", style=bold];
n148 -> n149  [key=0, style=solid];
n149 -> n150  [key=0, style=solid];
n149 -> n68  [key=2, style=dotted];
n149 -> n69  [key=2, style=dotted];
n149 -> n151  [color=darkseagreen4, key=1, label=request, style=dashed];
n149 -> n152  [color=darkseagreen4, key=1, label=request, style=dashed];
n149 -> n154  [color=darkseagreen4, key=1, label=request, style=dashed];
n149 -> n155  [color=darkseagreen4, key=1, label=request, style=dashed];
n156 -> n157  [key=0, style=solid];
n156 -> n158  [key=0, style=solid];
n150 -> n151  [key=0, style=solid];
n150 -> n152  [key=0, style=solid];
n151 -> n159  [key=0, style=solid];
n151 -> n70  [key=2, style=dotted];
n152 -> n153  [key=0, style=solid];
n152 -> n71  [key=2, style=dotted];
n152 -> n154  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
n154 -> n159  [key=0, style=solid];
n154 -> n72  [key=2, style=dotted];
n155 -> n156  [key=0, style=solid];
n155 -> n73  [key=2, style=dotted];
n155 -> n157  [color=darkseagreen4, key=1, label=ticket, style=dashed];
n155 -> n158  [color=darkseagreen4, key=1, label=ticket, style=dashed];
n153 -> n154  [key=0, style=solid];
n153 -> n155  [key=0, style=solid];
n157 -> n158  [key=0, style=solid];
n157 -> n74  [key=2, style=dotted];
n158 -> n159  [key=0, style=solid];
n159 -> n147  [color=blue, key=0, style=bold];
n160 -> n161  [key=0, style=solid];
n160 -> n163  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Buy", style=bold];
n161 -> n162  [key=0, style=solid];
n161 -> n3  [key=2, style=dotted];
n161 -> n163  [key=2, style=dotted];
n162 -> n160  [color=blue, key=0, style=bold];
n163 -> n167  [key=0, style=solid];
n163 -> n160  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Option.OptionStrategy strategy", style=bold];
n163 -> n164  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Option.OptionStrategy strategy", style=bold];
n163 -> n169  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Order", style=bold];
n164 -> n165  [key=0, style=solid];
n164 -> n163  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Sell", style=bold];
n165 -> n166  [key=0, style=solid];
n165 -> n3  [key=2, style=dotted];
n165 -> n163  [key=2, style=dotted];
n166 -> n164  [color=blue, key=0, style=bold];
n167 -> n168  [key=0, style=solid];
n167 -> n169  [key=2, style=dotted];
n168 -> n163  [color=blue, key=0, style=bold];
n169 -> n170  [key=0, style=solid];
n169 -> n171  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n172  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n173  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n174  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n219  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n176  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n181  [color=darkseagreen4, key=1, label=int, style=dashed];
n169 -> n184  [color=darkseagreen4, key=1, label=int, style=dashed];
n169 -> n187  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n188  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n189  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n190  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n194  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n197  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
n169 -> n163  [color=darkorchid, key=3, label="Parameter variable int strategyQuantity", style=bold];
n170 -> n171  [key=0, style=solid];
n170 -> n202  [key=2, style=dotted];
n170 -> n182  [color=darkseagreen4, key=1, label=orders, style=dashed];
n170 -> n185  [color=darkseagreen4, key=1, label=orders, style=dashed];
n170 -> n195  [color=darkseagreen4, key=1, label=orders, style=dashed];
n170 -> n198  [color=darkseagreen4, key=1, label=orders, style=dashed];
n170 -> n200  [color=darkseagreen4, key=1, label=orders, style=dashed];
n171 -> n172  [key=0, style=solid];
n171 -> n203  [key=2, style=dotted];
n171 -> n181  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
n171 -> n184  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
n171 -> n194  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
n171 -> n197  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
n172 -> n173  [key=0, style=solid];
n172 -> n187  [key=0, style=solid];
n173 -> n174  [key=0, style=solid];
n173 -> n187  [key=0, style=solid];
n173 -> n219  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
n173 -> n176  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
n173 -> n179  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
n173 -> n181  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
n173 -> n184  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
n173 -> n186  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
n174 -> n175  [key=0, style=solid];
n174 -> n204  [key=2, style=dotted];
n174 -> n218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n174 -> n178  [color=darkseagreen4, key=1, label=optionSeq, style=dashed];
n219 -> n220  [key=0, style=solid];
n219 -> n219  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
n176 -> n177  [key=0, style=solid];
n176 -> n206  [key=2, style=dotted];
n176 -> n207  [key=2, style=dotted];
n176 -> n208  [key=2, style=dotted];
n176 -> n209  [key=2, style=dotted];
n176 -> n210  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n213  [key=2, style=dotted];
n184 -> n185  [key=0, style=solid];
n184 -> n215  [key=2, style=dotted];
n187 -> n188  [key=0, style=solid];
n187 -> n200  [key=0, style=solid];
n188 -> n189  [key=0, style=solid];
n188 -> n200  [key=0, style=solid];
n188 -> n192  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
n188 -> n194  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
n188 -> n197  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
n188 -> n199  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
n189 -> n190  [key=0, style=solid];
n189 -> n192  [key=0, style=solid];
n189 -> n216  [key=2, style=dotted];
n190 -> n191  [key=0, style=solid];
n190 -> n206  [key=2, style=dotted];
n190 -> n217  [key=2, style=dotted];
n194 -> n195  [key=0, style=solid];
n194 -> n41  [key=2, style=dotted];
n197 -> n198  [key=0, style=solid];
n197 -> n105  [key=2, style=dotted];
n182 -> n173  [key=0, style=solid];
n182 -> n214  [key=2, style=dotted];
n185 -> n173  [key=0, style=solid];
n185 -> n214  [key=2, style=dotted];
n195 -> n188  [key=0, style=solid];
n195 -> n214  [key=2, style=dotted];
n198 -> n188  [key=0, style=solid];
n198 -> n214  [key=2, style=dotted];
n200 -> n201  [key=0, style=solid];
n179 -> n180  [key=0, style=solid];
n179 -> n183  [key=0, style=solid];
n179 -> n186  [key=0, style=solid];
n186 -> n201  [key=0, style=solid];
n186 -> n211  [key=2, style=dotted];
n186 -> n207  [key=2, style=dotted];
n175 -> n176  [key=0, style=solid];
n175 -> n178  [key=0, style=solid];
n175 -> n205  [key=2, style=dotted];
n218 -> n219  [key=0, style=solid];
n178 -> n179  [key=0, style=solid];
n178 -> n212  [key=2, style=dotted];
n178 -> n181  [color=darkseagreen4, key=1, label=option, style=dashed];
n178 -> n184  [color=darkseagreen4, key=1, label=option, style=dashed];
n177 -> n201  [key=0, style=solid];
n177 -> n211  [key=2, style=dotted];
n180 -> n181  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n192 -> n193  [key=0, style=solid];
n192 -> n196  [key=0, style=solid];
n192 -> n199  [key=0, style=solid];
n199 -> n201  [key=0, style=solid];
n199 -> n211  [key=2, style=dotted];
n199 -> n207  [key=2, style=dotted];
n191 -> n201  [key=0, style=solid];
n191 -> n211  [key=2, style=dotted];
n193 -> n194  [key=0, style=solid];
n196 -> n197  [key=0, style=solid];
n201 -> n169  [color=blue, key=0, style=bold];
n220 -> n218  [color=blue, key=0, style=bold];
n221 -> n222  [key=0, style=solid];
n221 -> n226  [key=2, style=dotted];
n221 -> n223  [color=darkseagreen4, key=1, label=response, style=dashed];
n221 -> n224  [color=darkseagreen4, key=1, label=response, style=dashed];
n222 -> n223  [key=0, style=solid];
n222 -> n224  [key=0, style=solid];
n226 -> n228  [key=0, style=solid];
n226 -> n229  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n231  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n232  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n233  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n234  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n235  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n236  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n238  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n240  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n241  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n242  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n243  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n245  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n249  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n251  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n256  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n260  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n263  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n264  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n266  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n268  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n269  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n270  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n271  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n272  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n273  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n277  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n278  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
n226 -> n71  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
n223 -> n224  [key=0, style=solid];
n223 -> n227  [key=2, style=dotted];
n224 -> n225  [key=0, style=solid];
n225 -> n71  [color=blue, key=0, style=bold];
n228 -> n229  [key=0, style=solid];
n228 -> n230  [key=0, style=solid];
n229 -> n279  [key=0, style=solid];
n229 -> n280  [key=2, style=dotted];
n231 -> n232  [key=0, style=solid];
n231 -> n233  [key=0, style=solid];
n231 -> n281  [key=2, style=dotted];
n231 -> n235  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n236  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n237  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n239  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n240  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n242  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n247  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n250  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n252  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n254  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n259  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n265  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n267  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n269  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n274  [color=darkseagreen4, key=1, label=security, style=dashed];
n231 -> n276  [color=darkseagreen4, key=1, label=security, style=dashed];
n232 -> n279  [key=0, style=solid];
n232 -> n206  [key=2, style=dotted];
n232 -> n282  [key=2, style=dotted];
n233 -> n234  [key=0, style=solid];
n233 -> n235  [key=0, style=solid];
n234 -> n279  [key=0, style=solid];
n234 -> n283  [key=2, style=dotted];
n235 -> n236  [key=0, style=solid];
n235 -> n237  [key=0, style=solid];
n235 -> n12  [key=2, style=dotted];
n236 -> n279  [key=0, style=solid];
n236 -> n207  [key=2, style=dotted];
n236 -> n284  [key=2, style=dotted];
n236 -> n12  [key=2, style=dotted];
n236 -> n282  [key=2, style=dotted];
n238 -> n279  [key=0, style=solid];
n238 -> n206  [key=2, style=dotted];
n238 -> n282  [key=2, style=dotted];
n240 -> n241  [key=0, style=solid];
n240 -> n242  [key=0, style=solid];
n241 -> n279  [key=0, style=solid];
n241 -> n282  [key=2, style=dotted];
n242 -> n243  [key=0, style=solid];
n242 -> n244  [key=0, style=solid];
n243 -> n279  [key=0, style=solid];
n243 -> n282  [key=2, style=dotted];
n245 -> n279  [key=0, style=solid];
n245 -> n206  [key=2, style=dotted];
n245 -> n282  [key=2, style=dotted];
n249 -> n279  [key=0, style=solid];
n249 -> n282  [key=2, style=dotted];
n251 -> n279  [key=0, style=solid];
n251 -> n282  [key=2, style=dotted];
n256 -> n279  [key=0, style=solid];
n256 -> n282  [key=2, style=dotted];
n258 -> n279  [key=0, style=solid];
n258 -> n282  [key=2, style=dotted];
n260 -> n279  [key=0, style=solid];
n260 -> n282  [key=2, style=dotted];
n263 -> n279  [key=0, style=solid];
n263 -> n217  [key=2, style=dotted];
n263 -> n282  [key=2, style=dotted];
n264 -> n265  [key=0, style=solid];
n264 -> n273  [key=0, style=solid];
n266 -> n279  [key=0, style=solid];
n266 -> n206  [key=2, style=dotted];
n266 -> n282  [key=2, style=dotted];
n268 -> n279  [key=0, style=solid];
n268 -> n206  [key=2, style=dotted];
n268 -> n282  [key=2, style=dotted];
n269 -> n270  [key=0, style=solid];
n269 -> n271  [key=0, style=solid];
n270 -> n279  [key=0, style=solid];
n270 -> n206  [key=2, style=dotted];
n270 -> n282  [key=2, style=dotted];
n271 -> n272  [key=0, style=solid];
n271 -> n273  [key=0, style=solid];
n272 -> n273  [key=0, style=solid];
n272 -> n283  [key=2, style=dotted];
n273 -> n274  [key=0, style=solid];
n273 -> n278  [key=0, style=solid];
n277 -> n279  [key=0, style=solid];
n277 -> n282  [key=2, style=dotted];
n278 -> n279  [key=0, style=solid];
n278 -> n288  [key=2, style=dotted];
n230 -> n231  [key=0, style=solid];
n237 -> n238  [key=0, style=solid];
n237 -> n239  [key=0, style=solid];
n239 -> n240  [key=0, style=solid];
n239 -> n244  [color=darkseagreen4, key=1, label=price, style=dashed];
n247 -> n248  [key=0, style=solid];
n247 -> n249  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
n247 -> n251  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
n247 -> n256  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
n247 -> n258  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
n250 -> n251  [key=0, style=solid];
n250 -> n252  [key=0, style=solid];
n252 -> n253  [key=0, style=solid];
n252 -> n259  [key=0, style=solid];
n254 -> n255  [key=0, style=solid];
n254 -> n256  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
n254 -> n258  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
n259 -> n260  [key=0, style=solid];
n259 -> n261  [key=0, style=solid];
n265 -> n266  [key=0, style=solid];
n265 -> n267  [key=0, style=solid];
n267 -> n268  [key=0, style=solid];
n267 -> n269  [key=0, style=solid];
n274 -> n275  [key=0, style=solid];
n274 -> n286  [key=2, style=dotted];
n276 -> n277  [key=0, style=solid];
n276 -> n278  [key=0, style=solid];
n244 -> n245  [key=0, style=solid];
n244 -> n246  [key=0, style=solid];
n246 -> n247  [key=0, style=solid];
n248 -> n249  [key=0, style=solid];
n248 -> n250  [key=0, style=solid];
n248 -> n285  [key=2, style=dotted];
n253 -> n254  [key=0, style=solid];
n255 -> n256  [key=0, style=solid];
n255 -> n257  [key=0, style=solid];
n255 -> n285  [key=2, style=dotted];
n257 -> n258  [key=0, style=solid];
n257 -> n259  [key=0, style=solid];
n261 -> n262  [key=0, style=solid];
n261 -> n264  [key=0, style=solid];
n262 -> n263  [key=0, style=solid];
n275 -> n276  [key=0, style=solid];
n275 -> n287  [key=2, style=dotted];
n279 -> n226  [color=blue, key=0, style=bold];
n289 -> n290  [key=0, style=solid];
n289 -> n292  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
n289 -> n302  [color=darkseagreen4, key=1, label=string, style=dashed];
n289 -> n304  [color=darkseagreen4, key=1, label=string, style=dashed];
n290 -> n291  [key=0, style=solid];
n290 -> n202  [key=2, style=dotted];
n290 -> n306  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
n290 -> n307  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
n292 -> n293  [key=0, style=solid];
n292 -> n291  [key=0, style=solid];
n302 -> n297  [key=0, style=solid];
n302 -> n312  [key=2, style=dotted];
n304 -> n305  [key=0, style=solid];
n304 -> n38  [key=2, style=dotted];
n304 -> n306  [color=darkseagreen4, key=1, label=ticket, style=dashed];
n291 -> n292  [key=0, style=solid];
n291 -> n307  [key=0, style=solid];
n291 -> n309  [key=2, style=dotted];
n291 -> n313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n291 -> n293  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n291 -> n294  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n291 -> n304  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n306 -> n291  [key=0, style=solid];
n306 -> n214  [key=2, style=dotted];
n307 -> n308  [key=0, style=solid];
n313 -> n314  [key=0, style=solid];
n293 -> n294  [key=0, style=solid];
n293 -> n310  [key=2, style=dotted];
n293 -> n295  [color=darkseagreen4, key=1, label=orders, style=dashed];
n293 -> n297  [color=darkseagreen4, key=1, label=orders, style=dashed];
n294 -> n295  [key=0, style=solid];
n294 -> n303  [color=darkseagreen4, key=1, label=quantity, style=dashed];
n294 -> n304  [color=darkseagreen4, key=1, label=quantity, style=dashed];
n295 -> n296  [key=0, style=solid];
n295 -> n291  [key=0, style=solid];
n297 -> n298  [key=0, style=solid];
n297 -> n303  [key=0, style=solid];
n297 -> n299  [color=darkseagreen4, key=1, label=order, style=dashed];
n297 -> n302  [color=darkseagreen4, key=1, label=order, style=dashed];
n303 -> n304  [key=0, style=solid];
n303 -> n291  [key=0, style=solid];
n296 -> n297  [key=0, style=solid];
n296 -> n301  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
n296 -> n304  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
n296 -> n296  [color=darkorchid, key=3, label="Local variable decimal marketOrdersQuantity", style=bold];
n301 -> n297  [key=0, style=solid];
n301 -> n301  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
n301 -> n304  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
n298 -> n299  [key=0, style=solid];
n298 -> n302  [key=0, style=solid];
n299 -> n300  [key=0, style=solid];
n299 -> n311  [key=2, style=dotted];
n299 -> n301  [color=darkseagreen4, key=1, label=ticket, style=dashed];
n300 -> n301  [key=0, style=solid];
n300 -> n297  [key=0, style=solid];
n305 -> n306  [key=0, style=solid];
n305 -> n291  [key=0, style=solid];
n308 -> n289  [color=blue, key=0, style=bold];
n314 -> n315  [key=0, style=solid];
n315 -> n313  [color=blue, key=0, style=bold];
n316 -> n317  [key=0, style=solid];
n316 -> n318  [color=darkseagreen4, key=1, label=int, style=dashed];
n317 -> n318  [key=0, style=solid];
n317 -> n319  [key=0, style=solid];
n318 -> n319  [key=0, style=solid];
n319 -> n316  [color=blue, key=0, style=bold];
n320 -> n321  [key=0, style=solid];
n321 -> n322  [key=0, style=solid];
n321 -> n323  [key=2, style=dotted];
n322 -> n320  [color=blue, key=0, style=bold];
n323 -> n330  [key=0, style=solid];
n323 -> n331  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
n323 -> n332  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
n323 -> n334  [color=darkseagreen4, key=1, label=bool, style=dashed];
n323 -> n338  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
n323 -> n340  [color=darkseagreen4, key=1, label=string, style=dashed];
n323 -> n341  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
n323 -> n343  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
n323 -> n320  [color=darkorchid, key=3, label="Parameter variable bool liquidateExistingHoldings", style=bold];
n323 -> n324  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n323 -> n327  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
n324 -> n325  [key=0, style=solid];
n325 -> n326  [key=0, style=solid];
n325 -> n323  [key=2, style=dotted];
n326 -> n324  [color=blue, key=0, style=bold];
n327 -> n328  [key=0, style=solid];
n328 -> n329  [key=0, style=solid];
n328 -> n323  [key=2, style=dotted];
n329 -> n327  [color=blue, key=0, style=bold];
n330 -> n331  [key=0, style=solid];
n331 -> n332  [key=0, style=solid];
n331 -> n334  [key=0, style=solid];
n331 -> n281  [key=2, style=dotted];
n332 -> n333  [key=0, style=solid];
n332 -> n206  [key=2, style=dotted];
n332 -> n227  [key=2, style=dotted];
n334 -> n335  [key=0, style=solid];
n334 -> n341  [key=0, style=solid];
n338 -> n339  [key=0, style=solid];
n338 -> n335  [key=0, style=solid];
n340 -> n335  [key=0, style=solid];
n340 -> n38  [key=2, style=dotted];
n341 -> n342  [key=0, style=solid];
n341 -> n345  [key=2, style=dotted];
n341 -> n343  [color=darkseagreen4, key=1, label=quantity, style=dashed];
n343 -> n344  [key=0, style=solid];
n343 -> n35  [key=2, style=dotted];
n333 -> n344  [key=0, style=solid];
n335 -> n336  [key=0, style=solid];
n335 -> n341  [key=0, style=solid];
n336 -> n337  [key=0, style=solid];
n336 -> n336  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n336 -> n338  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
n336 -> n339  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
n336 -> n340  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
n337 -> n338  [key=0, style=solid];
n337 -> n337  [color=darkseagreen4, key=1, label=kvp, style=dashed];
n339 -> n340  [key=0, style=solid];
n339 -> n345  [key=2, style=dotted];
n345 -> n349  [key=0, style=solid];
n345 -> n352  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n345 -> n336  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
n345 -> n323  [color=darkorchid, key=3, label="Parameter variable decimal target", style=bold];
n345 -> n346  [color=darkorchid, key=3, label="Parameter variable decimal target", style=bold];
n345 -> n296  [color=darkorchid, key=3, label="Parameter variable decimal target", style=bold];
n345 -> n54  [color=darkorchid, key=3, label="method methodReturn decimal CalculateOrderQuantity", style=bold];
n342 -> n343  [key=0, style=solid];
n342 -> n344  [key=0, style=solid];
n342 -> n12  [key=2, style=dotted];
n344 -> n323  [color=blue, key=0, style=bold];
n346 -> n347  [key=0, style=solid];
n346 -> n345  [color=darkorchid, key=3, label="method methodReturn decimal CalculateOrderQuantity", style=bold];
n347 -> n348  [key=0, style=solid];
n347 -> n345  [key=2, style=dotted];
n348 -> n346  [color=blue, key=0, style=bold];
n349 -> n350  [key=0, style=solid];
n349 -> n353  [color=darkseagreen4, key=1, label=security, style=dashed];
n352 -> n353  [key=0, style=solid];
n350 -> n351  [key=0, style=solid];
n350 -> n352  [key=0, style=solid];
n353 -> n354  [key=0, style=solid];
n353 -> n355  [key=2, style=dotted];
n351 -> n354  [key=0, style=solid];
n354 -> n345  [color=blue, key=0, style=bold];
n356 -> n357  [key=0, style=solid];
n356 -> n38  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
n357 -> n358  [key=0, style=solid];
n357 -> n38  [key=2, style=dotted];
n358 -> n356  [color=blue, key=0, style=bold];
n359 -> n360  [key=0, style=solid];
n359 -> n4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
n360 -> n361  [key=0, style=solid];
n360 -> n4  [key=2, style=dotted];
n361 -> n359  [color=blue, key=0, style=bold];
n362 -> n363  [key=0, style=solid];
n362 -> n4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
n363 -> n364  [key=0, style=solid];
n363 -> n4  [key=2, style=dotted];
n364 -> n362  [color=blue, key=0, style=bold];
n365 -> n366  [key=0, style=solid];
n366 -> n367  [key=0, style=solid];
n366 -> n370  [key=2, style=dotted];
n366 -> n371  [key=2, style=dotted];
n366 -> n368  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
n367 -> n368  [key=0, style=solid];
n367 -> n372  [key=2, style=dotted];
n368 -> n369  [key=0, style=solid];
n368 -> n373  [key=2, style=dotted];
n369 -> n365  [color=blue, key=0, style=bold];
n374 -> n375  [key=0, style=solid];
n374 -> n376  [key=2, style=dotted];
n375 -> n69  [color=blue, key=0, style=bold];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d6  [color=green, key=2, style=dotted];
d1 -> d17  [color=green, key=3, label="Field variable double? _confidence", style=bold];
d69 -> d1  [color=green, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d2  [color=green, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d3  [color=green, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d4  [color=green, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d18  [color=green, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d22  [color=green, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d31  [color=green, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d11  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d12  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d13  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d14  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d15  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d16  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d17  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d19  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d20  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d21  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d23  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d24  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d25  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d26  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d27  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d28  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d29  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d30  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d32  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d33  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d34  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d35  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d36  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d38  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d44  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d45  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d46  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d47  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d69 -> d49  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
d0 -> d1  [color=green, key=0, style=solid];
d0 -> d17  [color=darkorchid, key=3, label="Field variable System.TimeSpan _period", style=bold];
d2 -> d3  [color=green, key=0, style=solid];
d2 -> d7  [color=green, key=2, style=dotted];
d17 -> d18  [color=green, key=0, style=solid];
d17 -> d19  [key=0, style=solid];
d17 -> d40  [key=2, style=dotted];
d3 -> d4  [color=green, key=0, style=solid];
d3 -> d8  [color=green, key=2, style=dotted];
d4 -> d5  [color=green, key=0, style=solid];
d4 -> d9  [color=green, key=2, style=dotted];
d5 -> d0  [color=blue, key=0, style=bold];
d18 -> d37  [color=green, key=0, style=solid];
d18 -> d39  [color=green, key=0, style=solid];
d18 -> d41  [color=green, key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d39 -> d10  [color=blue, key=0, style=bold];
d22 -> d37  [color=green, key=0, style=solid];
d22 -> d39  [color=green, key=0, style=solid];
d22 -> d41  [color=green, key=2, style=dotted];
d21 -> d22  [color=green, key=0, style=solid];
d21 -> d23  [key=0, style=solid];
d21 -> d40  [key=2, style=dotted];
d31 -> d32  [color=green, key=0, style=solid];
d31 -> d33  [color=green, key=0, style=solid];
d31 -> d40  [color=green, key=2, style=dotted];
d29 -> d31  [color=green, key=0, style=solid];
d29 -> d30  [key=0, style=solid];
d29 -> d40  [key=2, style=dotted];
d32 -> d37  [key=0, style=solid];
d32 -> d39  [key=0, style=solid];
d32 -> d41  [key=2, style=dotted];
d33 -> d34  [key=0, style=solid];
d33 -> d35  [key=0, style=solid];
d33 -> d40  [key=2, style=dotted];
d11 -> d40  [key=2, style=dotted];
d11 -> d12  [key=0, style=solid];
d11 -> d13  [key=0, style=solid];
d12 -> d37  [key=0, style=solid];
d12 -> d39  [key=0, style=solid];
d12 -> d41  [key=2, style=dotted];
d13 -> d40  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d15  [key=0, style=solid];
d14 -> d37  [key=0, style=solid];
d14 -> d39  [key=0, style=solid];
d14 -> d41  [key=2, style=dotted];
d15 -> d17  [key=0, style=solid];
d15 -> d40  [key=2, style=dotted];
d15 -> d16  [key=0, style=solid];
d16 -> d37  [key=0, style=solid];
d16 -> d39  [key=0, style=solid];
d16 -> d41  [key=2, style=dotted];
d19 -> d21  [key=0, style=solid];
d19 -> d40  [key=2, style=dotted];
d19 -> d20  [key=0, style=solid];
d20 -> d37  [key=0, style=solid];
d20 -> d39  [key=0, style=solid];
d20 -> d41  [key=2, style=dotted];
d23 -> d40  [key=2, style=dotted];
d23 -> d24  [key=0, style=solid];
d23 -> d25  [key=0, style=solid];
d24 -> d37  [key=0, style=solid];
d24 -> d39  [key=0, style=solid];
d24 -> d41  [key=2, style=dotted];
d25 -> d40  [key=2, style=dotted];
d25 -> d26  [key=0, style=solid];
d25 -> d27  [key=0, style=solid];
d26 -> d37  [key=0, style=solid];
d26 -> d39  [key=0, style=solid];
d26 -> d41  [key=2, style=dotted];
d27 -> d29  [key=0, style=solid];
d27 -> d40  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d28 -> d37  [key=0, style=solid];
d28 -> d39  [key=0, style=solid];
d28 -> d41  [key=2, style=dotted];
d30 -> d37  [key=0, style=solid];
d30 -> d39  [key=0, style=solid];
d30 -> d41  [key=2, style=dotted];
d34 -> d37  [key=0, style=solid];
d34 -> d39  [key=0, style=solid];
d34 -> d41  [key=2, style=dotted];
d35 -> d37  [key=0, style=solid];
d35 -> d39  [key=0, style=solid];
d35 -> d40  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d36 -> d37  [key=0, style=solid];
d36 -> d39  [key=0, style=solid];
d36 -> d41  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d38 -> d42  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d44 -> d51  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d45 -> d51  [key=2, style=dotted];
d46 -> d47  [key=0, style=solid];
d46 -> d51  [key=2, style=dotted];
d47 -> d48  [key=0, style=solid];
d47 -> d50  [key=0, style=solid];
d47 -> d52  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d49 -> d42  [key=2, style=dotted];
d10 -> d11  [key=0, style=solid];
d43 -> d44  [key=0, style=solid];
d48 -> d49  [key=0, style=solid];
d50 -> d43  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=2, style=dotted];
m0_4 -> m0_2  [color=blue, key=0, style=bold];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_35  [key=2, style=dotted];
m0_92 -> m0_101  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_92 -> m0_103  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_36  [key=2, style=dotted];
m0_93 -> m0_37  [key=2, style=dotted];
m0_93 -> m0_38  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_45  [key=2, style=dotted];
m0_101 -> m0_106  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_101 -> m0_107  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_101 -> m0_108  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_47  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_94 -> m0_97  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_110  [key=2, style=dotted];
m0_96 -> m0_111  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_39  [key=2, style=dotted];
m0_97 -> m0_99  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_97 -> m0_101  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_97 -> m0_103  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_97 -> m0_104  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_97 -> m0_105  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_40  [key=2, style=dotted];
m0_98 -> m0_100  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_41  [key=2, style=dotted];
m0_99 -> m0_42  [key=2, style=dotted];
m0_99 -> m0_43  [key=2, style=dotted];
m0_99 -> m0_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_46  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_46  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_44  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_46  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_46  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_48  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_112  [key=2, style=dotted];
m0_108 -> m0_48  [key=2, style=dotted];
m0_109 -> m0_91  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_19 -> m0_20  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_35  [key=2, style=dotted];
m0_20 -> m0_27  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_20 -> m0_29  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_36  [key=2, style=dotted];
m0_21 -> m0_37  [key=2, style=dotted];
m0_21 -> m0_38  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_45  [key=2, style=dotted];
m0_27 -> m0_32  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_27 -> m0_33  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_47  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_39  [key=2, style=dotted];
m0_23 -> m0_25  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_23 -> m0_27  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_23 -> m0_29  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_23 -> m0_30  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_23 -> m0_31  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_40  [key=2, style=dotted];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_41  [key=2, style=dotted];
m0_25 -> m0_42  [key=2, style=dotted];
m0_25 -> m0_43  [key=2, style=dotted];
m0_25 -> m0_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_46  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_46  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_44  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_46  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_46  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_48  [key=2, style=dotted];
m0_34 -> m0_19  [color=blue, key=0, style=bold];
m0_166 -> m0_167  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [key=2, style=dotted];
m0_50 -> m0_53  [key=2, style=dotted];
m0_51 -> m0_49  [color=blue, key=0, style=bold];
m0_70 -> m0_71  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_52  [key=2, style=dotted];
m0_71 -> m0_53  [key=2, style=dotted];
m0_72 -> m0_70  [color=blue, key=0, style=bold];
m0_88 -> m0_89  [key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_52  [key=2, style=dotted];
m0_89 -> m0_53  [key=2, style=dotted];
m0_90 -> m0_88  [color=blue, key=0, style=bold];
m0_113 -> m0_114  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_52  [key=2, style=dotted];
m0_114 -> m0_53  [key=2, style=dotted];
m0_115 -> m0_113  [color=blue, key=0, style=bold];
m0_135 -> m0_136  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_52  [key=2, style=dotted];
m0_136 -> m0_53  [key=2, style=dotted];
m0_137 -> m0_135  [color=blue, key=0, style=bold];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_52  [key=2, style=dotted];
m0_167 -> m0_53  [key=2, style=dotted];
m0_168 -> m0_166  [color=blue, key=0, style=bold];
m0_169 -> m0_170  [key=0, style=solid];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_13  [key=2, style=dotted];
m0_170 -> m0_172  [color=darkseagreen4, key=1, label=algo, style=dashed];
m0_170 -> m0_173  [color=darkseagreen4, key=1, label=algo, style=dashed];
m0_170 -> m0_175  [color=darkseagreen4, key=1, label=algo, style=dashed];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_15  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> d8  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_181  [key=2, style=dotted];
m0_173 -> m0_176  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_173 -> m0_178  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_36  [key=2, style=dotted];
m0_175 -> m0_37  [key=2, style=dotted];
m0_175 -> m0_38  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_35  [key=2, style=dotted];
m0_174 -> m0_178  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_39  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_183  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_182  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_48  [key=2, style=dotted];
m0_180 -> m0_169  [color=blue, key=0, style=bold];
m0_138 -> m0_139  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_35  [key=2, style=dotted];
m0_139 -> m0_148  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_139 -> m0_149  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_139 -> m0_154  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_139 -> m0_159  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_36  [key=2, style=dotted];
m0_140 -> m0_37  [key=2, style=dotted];
m0_140 -> m0_38  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_45  [key=2, style=dotted];
m0_148 -> m0_152  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_148 -> m0_153  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_148 -> m0_158  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_148 -> m0_163  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_47  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_45  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_47  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_143  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_141 -> m0_144  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_142 -> m0_143  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_110  [key=2, style=dotted];
m0_143 -> m0_111  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_39  [key=2, style=dotted];
m0_144 -> m0_146  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_144 -> m0_148  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_144 -> m0_149  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_144 -> m0_150  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_144 -> m0_151  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_40  [key=2, style=dotted];
m0_145 -> m0_147  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_41  [key=2, style=dotted];
m0_146 -> m0_42  [key=2, style=dotted];
m0_146 -> m0_43  [key=2, style=dotted];
m0_146 -> m0_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_46  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_46  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_44  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_46  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_165  [key=2, style=dotted];
m0_153 -> m0_155  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m0_153 -> m0_156  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m0_153 -> m0_157  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m0_153 -> m0_159  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m0_153 -> m0_160  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m0_153 -> m0_161  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m0_153 -> m0_162  [color=darkseagreen4, key=1, label=cancelRequest, style=dashed];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_46  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_46  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_46  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_46  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_46  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_46  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_46  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_46  [key=2, style=dotted];
m0_164 -> m0_138  [color=blue, key=0, style=bold];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_35  [key=2, style=dotted];
m0_74 -> m0_81  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_74 -> m0_83  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_36  [key=2, style=dotted];
m0_75 -> m0_37  [key=2, style=dotted];
m0_75 -> m0_38  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_45  [key=2, style=dotted];
m0_81 -> m0_86  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_47  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_39  [key=2, style=dotted];
m0_77 -> m0_79  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_77 -> m0_81  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_77 -> m0_83  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_77 -> m0_84  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_77 -> m0_85  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_40  [key=2, style=dotted];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_41  [key=2, style=dotted];
m0_79 -> m0_42  [key=2, style=dotted];
m0_79 -> m0_43  [key=2, style=dotted];
m0_79 -> m0_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_46  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_46  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_44  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_46  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_46  [key=2, style=dotted];
m0_87 -> m0_73  [color=blue, key=0, style=bold];
m0_196 -> m0_197  [key=0, style=solid];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_13  [key=2, style=dotted];
m0_197 -> m0_199  [color=darkseagreen4, key=1, label=algo, style=dashed];
m0_197 -> m0_200  [color=darkseagreen4, key=1, label=algo, style=dashed];
m0_197 -> m0_202  [color=darkseagreen4, key=1, label=algo, style=dashed];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_15  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> d8  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_181  [key=2, style=dotted];
m0_200 -> m0_203  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_200 -> m0_205  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_36  [key=2, style=dotted];
m0_202 -> m0_37  [key=2, style=dotted];
m0_202 -> m0_38  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_35  [key=2, style=dotted];
m0_201 -> m0_205  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_39  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_183  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_182  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_48  [key=2, style=dotted];
m0_207 -> m0_196  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_13  [key=2, style=dotted];
m0_7 -> m0_14  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_15  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> d8  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_17  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_18  [key=2, style=dotted];
m0_12 -> m0_6  [color=blue, key=0, style=bold];
m0_184 -> m0_185  [key=0, style=solid];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_13  [key=2, style=dotted];
m0_185 -> m0_187  [color=darkseagreen4, key=1, label=algo, style=dashed];
m0_185 -> m0_188  [color=darkseagreen4, key=1, label=algo, style=dashed];
m0_185 -> m0_190  [color=darkseagreen4, key=1, label=algo, style=dashed];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_15  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> d8  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_181  [key=2, style=dotted];
m0_188 -> m0_191  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_188 -> m0_193  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_36  [key=2, style=dotted];
m0_190 -> m0_37  [key=2, style=dotted];
m0_190 -> m0_38  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_35  [key=2, style=dotted];
m0_189 -> m0_193  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_39  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_183  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_182  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_48  [key=2, style=dotted];
m0_195 -> m0_184  [color=blue, key=0, style=bold];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_35  [key=2, style=dotted];
m0_117 -> m0_126  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_117 -> m0_128  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_36  [key=2, style=dotted];
m0_118 -> m0_37  [key=2, style=dotted];
m0_118 -> m0_38  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_45  [key=2, style=dotted];
m0_126 -> m0_131  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_126 -> m0_132  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_126 -> m0_133  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_47  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_121  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_119 -> m0_122  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_120 -> m0_121  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_110  [key=2, style=dotted];
m0_121 -> m0_111  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_39  [key=2, style=dotted];
m0_122 -> m0_124  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_122 -> m0_126  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_122 -> m0_128  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_122 -> m0_129  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_122 -> m0_130  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_40  [key=2, style=dotted];
m0_123 -> m0_125  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_41  [key=2, style=dotted];
m0_124 -> m0_42  [key=2, style=dotted];
m0_124 -> m0_43  [key=2, style=dotted];
m0_124 -> m0_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_46  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_46  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_44  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_46  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_46  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_48  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_112  [key=2, style=dotted];
m0_133 -> m0_48  [key=2, style=dotted];
m0_134 -> m0_116  [color=blue, key=0, style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_35  [key=2, style=dotted];
m0_55 -> m0_62  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_55 -> m0_64  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_36  [key=2, style=dotted];
m0_56 -> m0_37  [key=2, style=dotted];
m0_56 -> m0_38  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_45  [key=2, style=dotted];
m0_62 -> m0_67  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_62 -> m0_68  [color=darkseagreen4, key=1, label=orderTicket, style=dashed];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_47  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_39  [key=2, style=dotted];
m0_58 -> m0_60  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_58 -> m0_62  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_58 -> m0_64  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_58 -> m0_65  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_58 -> m0_66  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_40  [key=2, style=dotted];
m0_59 -> m0_61  [color=darkseagreen4, key=1, label=orderProcessorMock, style=dashed];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_41  [key=2, style=dotted];
m0_60 -> m0_42  [key=2, style=dotted];
m0_60 -> m0_43  [key=2, style=dotted];
m0_60 -> m0_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_46  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_46  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_44  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_46  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_46  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_48  [key=2, style=dotted];
m0_69 -> m0_54  [color=blue, key=0, style=bold];
m0_208 -> m0_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_9  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_22  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_56  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_57  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_60  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_61  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_75  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_76  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_79  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_80  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_93  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_94  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_99  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_100  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_118  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_119  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_124  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_125  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_140  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_141  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_146  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m0_208 -> m0_147  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.BrokerageTransactionHandlerTests.BrokerageTransactionHandlerTests", style=dashed];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_37 -> m1_43  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_41  [key=0, style=solid];
m1_38 -> m1_43  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_45  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_36  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_40 -> m1_44  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_46  [key=2, style=dotted];
m1_44 -> m1_37  [color=blue, key=0, style=bold];
m1_252 -> m1_263  [key=0, style=solid];
m1_252 -> m1_265  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_252 -> m1_269  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_252 -> m1_271  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_252 -> m1_273  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_252 -> m1_277  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_252 -> m1_236  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_265  [color=darkseagreen4, key=1, label=delay, style=dashed];
m1_263 -> m1_275  [color=darkseagreen4, key=1, label=delay, style=dashed];
m1_263 -> m1_263  [color=darkorchid, key=3, label="Local variable int delay", style=bold];
m1_265 -> m1_266  [key=0, style=solid];
m1_265 -> m1_267  [key=2, style=dotted];
m1_265 -> m1_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_265 -> m1_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_265 -> m1_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_265 -> m1_265  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_265 -> m1_281  [color=darkorchid, key=3, label="Local variable decimal rate", style=bold];
m1_264 -> m1_265  [key=0, style=solid];
m1_266 -> m1_252  [color=blue, key=0, style=bold];
m1_113 -> m1_224  [key=0, style=solid];
m1_113 -> m1_225  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_113 -> m1_84  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m1_224 -> m1_225  [key=0, style=solid];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_227  [key=2, style=dotted];
m1_225 -> m1_228  [key=2, style=dotted];
m1_226 -> m1_113  [color=blue, key=0, style=bold];
m1_81 -> m1_190  [key=0, style=solid];
m1_81 -> m1_191  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_24  [key=2, style=dotted];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_75  [key=2, style=dotted];
m1_191 -> m1_193  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_191 -> m1_195  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_191 -> m1_209  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_191 -> m1_197  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_191 -> m1_201  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_191 -> m1_203  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_195  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_24  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_173  [key=2, style=dotted];
m1_195 -> m1_174  [key=2, style=dotted];
m1_195 -> m1_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_195 -> m1_199  [color=darkseagreen4, key=1, label=cached, style=dashed];
m1_195 -> m1_200  [color=darkseagreen4, key=1, label=cached, style=dashed];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_24  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_79  [key=2, style=dotted];
m1_201 -> m1_80  [key=2, style=dotted];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_183  [key=2, style=dotted];
m1_203 -> m1_106  [key=2, style=dotted];
m1_203 -> m1_180  [key=2, style=dotted];
m1_203 -> m1_182  [key=2, style=dotted];
m1_203 -> m1_206  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m1_194 -> m1_207  [key=0, style=solid];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_199  [key=0, style=solid];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_201  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_199 -> m1_202  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_199 -> m1_203  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_199 -> m1_205  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_203  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_198 -> m1_207  [key=0, style=solid];
m1_202 -> m1_203  [key=0, style=solid];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_184  [key=2, style=dotted];
m1_204 -> m1_205  [key=0, style=solid];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_185  [key=2, style=dotted];
m1_207 -> m1_81  [color=blue, key=0, style=bold];
m1_268 -> m1_269  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_12 -> m1_15  [key=2, style=dotted];
m1_12 -> m1_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_13 -> m1_10  [color=blue, key=0, style=bold];
m1_16 -> m1_17  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=2, style=dotted];
m1_18 -> m1_16  [color=blue, key=0, style=bold];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_189  [key=2, style=dotted];
m1_187 -> m1_187  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m1_186 -> m1_187  [key=0, style=solid];
m1_188 -> m1_186  [color=blue, key=0, style=bold];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_189  [key=2, style=dotted];
m1_209 -> m1_209  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m1_208 -> m1_209  [key=0, style=solid];
m1_210 -> m1_208  [color=blue, key=0, style=bold];
m1_258 -> m1_259  [key=0, style=solid];
m1_259 -> m1_260  [key=0, style=solid];
m1_259 -> m1_261  [key=2, style=dotted];
m1_259 -> m1_262  [key=2, style=dotted];
m1_259 -> m1_259  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel>", style=dashed];
m1_260 -> m1_258  [color=blue, key=0, style=bold];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_79  [key=2, style=dotted];
m1_269 -> m1_279  [key=2, style=dotted];
m1_269 -> m1_80  [key=2, style=dotted];
m1_271 -> m1_272  [key=0, style=solid];
m1_271 -> m1_280  [key=2, style=dotted];
m1_271 -> m1_281  [key=2, style=dotted];
m1_271 -> m1_273  [color=darkseagreen4, key=1, label=rate, style=dashed];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_227  [key=2, style=dotted];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_79  [key=2, style=dotted];
m1_277 -> m1_279  [key=2, style=dotted];
m1_277 -> m1_80  [key=2, style=dotted];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_282  [key=2, style=dotted];
m1_276 -> m1_270  [key=0, style=solid];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_276 -> m1_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_277  [key=0, style=solid];
m1_272 -> m1_273  [key=0, style=solid];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_228  [key=2, style=dotted];
m1_278 -> m1_268  [color=blue, key=0, style=bold];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_217  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_219  [key=2, style=dotted];
m1_212 -> m1_220  [key=2, style=dotted];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_223  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_221  [key=2, style=dotted];
m1_213 -> m1_215  [color=darkseagreen4, key=1, label=response, style=dashed];
m1_213 -> m1_216  [color=darkseagreen4, key=1, label=response, style=dashed];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_216  [key=0, style=solid];
m1_215 -> m1_218  [key=0, style=solid];
m1_215 -> m1_222  [key=2, style=dotted];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_75  [key=2, style=dotted];
m1_218 -> m1_211  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_24  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_20  [color=blue, key=0, style=bold];
m1_77 -> m1_118  [key=0, style=solid];
m1_77 -> m1_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_75  [key=2, style=dotted];
m1_118 -> m1_121  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_46  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_106  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_133  [key=0, style=solid];
m1_121 -> m1_136  [key=0, style=solid];
m1_121 -> m1_123  [color=darkseagreen4, key=1, label=row, style=dashed];
m1_121 -> m1_124  [color=darkseagreen4, key=1, label=row, style=dashed];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_127  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_120 -> m1_128  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_120 -> m1_131  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_120 -> m1_132  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_127 -> m1_121  [key=0, style=solid];
m1_127 -> m1_138  [key=2, style=dotted];
m1_128 -> m1_121  [key=0, style=solid];
m1_128 -> m1_111  [key=2, style=dotted];
m1_131 -> m1_121  [key=0, style=solid];
m1_131 -> m1_139  [key=2, style=dotted];
m1_132 -> m1_121  [key=0, style=solid];
m1_132 -> m1_112  [key=2, style=dotted];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_125  [color=darkseagreen4, key=1, label=side, style=dashed];
m1_122 -> m1_129  [color=darkseagreen4, key=1, label=side, style=dashed];
m1_133 -> m1_134  [key=0, style=solid];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_137  [key=2, style=dotted];
m1_123 -> m1_127  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_123 -> m1_128  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_123 -> m1_131  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_123 -> m1_132  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_110  [key=2, style=dotted];
m1_124 -> m1_126  [color=darkseagreen4, key=1, label=size, style=dashed];
m1_124 -> m1_128  [color=darkseagreen4, key=1, label=size, style=dashed];
m1_124 -> m1_130  [color=darkseagreen4, key=1, label=size, style=dashed];
m1_124 -> m1_132  [color=darkseagreen4, key=1, label=size, style=dashed];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_129  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_121  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_128  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_132  [key=0, style=solid];
m1_135 -> m1_136  [key=0, style=solid];
m1_136 -> m1_77  [color=blue, key=0, style=bold];
m1_82 -> m1_140  [key=0, style=solid];
m1_82 -> m1_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_75  [key=2, style=dotted];
m1_140 -> m1_142  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_143  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_187  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_144  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_147  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_153  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_154  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_156  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_157  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_158  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_163  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_164  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_24  [key=2, style=dotted];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_143  [key=0, style=solid];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_172  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_173  [key=2, style=dotted];
m1_143 -> m1_174  [key=2, style=dotted];
m1_143 -> m1_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_143 -> m1_145  [color=darkseagreen4, key=1, label=cached, style=dashed];
m1_143 -> m1_148  [color=darkseagreen4, key=1, label=cached, style=dashed];
m1_143 -> m1_149  [color=darkseagreen4, key=1, label=cached, style=dashed];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_106  [key=2, style=dotted];
m1_144 -> m1_164  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_177  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_178  [key=2, style=dotted];
m1_154 -> n12  [key=2, style=dotted];
m1_154 -> m1_180  [key=2, style=dotted];
m1_154 -> m1_164  [color=darkseagreen4, key=1, label=status, style=dashed];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_158  [key=0, style=solid];
m1_157 -> m1_159  [key=0, style=solid];
m1_157 -> m1_164  [color=darkseagreen4, key=1, label=direction, style=dashed];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_164  [color=darkseagreen4, key=1, label=direction, style=dashed];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_178  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_183  [key=2, style=dotted];
m1_164 -> m1_170  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_147  [key=0, style=solid];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_150  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_148 -> m1_151  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_148 -> m1_152  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_148 -> m1_160  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_148 -> m1_162  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_148 -> m1_164  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_148 -> m1_167  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_148 -> m1_169  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_149 -> m1_154  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_149 -> m1_156  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_149 -> m1_161  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_149 -> m1_163  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_146 -> m1_171  [key=0, style=solid];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_152  [key=0, style=solid];
m1_150 -> m1_175  [key=2, style=dotted];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_176  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_154  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_163  [key=0, style=solid];
m1_160 -> m1_181  [key=2, style=dotted];
m1_162 -> m1_163  [key=0, style=solid];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_184  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_184  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_182  [key=2, style=dotted];
m1_161 -> m1_163  [color=darkseagreen4, key=1, label=totalOrderFee, style=dashed];
m1_155 -> m1_156  [key=0, style=solid];
m1_159 -> m1_160  [key=0, style=solid];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_170  [key=0, style=solid];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_185  [key=2, style=dotted];
m1_166 -> m1_167  [key=0, style=solid];
m1_168 -> m1_169  [key=0, style=solid];
m1_171 -> m1_82  [color=blue, key=0, style=bold];
m1_235 -> m1_236  [key=0, style=solid];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_241  [key=0, style=solid];
m1_236 -> m1_238  [color=darkseagreen4, key=1, label=item, style=dashed];
m1_236 -> m1_239  [color=darkseagreen4, key=1, label=item, style=dashed];
m1_236 -> m1_240  [color=darkseagreen4, key=1, label=item, style=dashed];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_236  [key=0, style=solid];
m1_237 -> m1_250  [key=2, style=dotted];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_14  [key=2, style=dotted];
m1_241 -> m1_254  [key=2, style=dotted];
m1_241 -> m1_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_240  [key=0, style=solid];
m1_238 -> m1_251  [key=2, style=dotted];
m1_239 -> m1_236  [key=0, style=solid];
m1_239 -> m1_252  [key=2, style=dotted];
m1_240 -> m1_236  [key=0, style=solid];
m1_240 -> m1_253  [key=2, style=dotted];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_245  [color=darkseagreen4, key=1, label=payload, style=dashed];
m1_242 -> m1_246  [color=darkseagreen4, key=1, label=payload, style=dashed];
m1_243 -> m1_244  [key=0, style=solid];
m1_243 -> m1_245  [key=0, style=solid];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_255  [key=2, style=dotted];
m1_245 -> m1_256  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_255  [key=2, style=dotted];
m1_244 -> m1_249  [key=0, style=solid];
m1_247 -> m1_248  [key=0, style=solid];
m1_247 -> m1_257  [key=2, style=dotted];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_79  [key=2, style=dotted];
m1_248 -> m1_80  [key=2, style=dotted];
m1_249 -> m1_235  [color=blue, key=0, style=bold];
m1_36 -> m1_47  [key=0, style=solid];
m1_36 -> m1_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_58  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_59  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_28  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Brokerages.WebSocketMessage e", style=bold];
m1_36 -> m1_37  [color=darkorchid, key=3, label="Parameter variable object sender", style=bold];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_75  [key=2, style=dotted];
m1_47 -> m1_49  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_51  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_54  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_57  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_62  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_65  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_68  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_76  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_77  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_78  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_75  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_81  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_82  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_74  [key=0, style=solid];
m1_70 -> m1_79  [key=2, style=dotted];
m1_70 -> m1_80  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_79  [key=2, style=dotted];
m1_72 -> m1_80  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_51  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_54  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_57  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_62  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_65  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_68  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_70  [key=0, style=solid];
m1_50 -> m1_74  [key=0, style=solid];
m1_53 -> m1_74  [key=0, style=solid];
m1_56 -> m1_74  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_79  [key=2, style=dotted];
m1_60 -> m1_80  [key=2, style=dotted];
m1_61 -> m1_74  [key=0, style=solid];
m1_64 -> m1_74  [key=0, style=solid];
m1_67 -> m1_74  [key=0, style=solid];
m1_69 -> m1_74  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_36  [color=blue, key=0, style=bold];
m1_281 -> m1_283  [key=0, style=solid];
m1_281 -> m1_288  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_281 -> m1_286  [color=darkorchid, key=3, label="method methodReturn decimal GetConversionRate", style=bold];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_294  [key=2, style=dotted];
m1_283 -> m1_221  [key=2, style=dotted];
m1_283 -> m1_285  [color=darkseagreen4, key=1, label=response, style=dashed];
m1_283 -> m1_287  [color=darkseagreen4, key=1, label=response, style=dashed];
m1_283 -> m1_290  [color=darkseagreen4, key=1, label=response, style=dashed];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_295  [key=2, style=dotted];
m1_288 -> m1_75  [key=2, style=dotted];
m1_288 -> m1_292  [color=darkseagreen4, key=1, label=rate, style=dashed];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_287  [key=0, style=solid];
m1_285 -> m1_286  [key=0, style=solid];
m1_285 -> m1_79  [key=2, style=dotted];
m1_285 -> m1_80  [key=2, style=dotted];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_75  [key=2, style=dotted];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_79  [key=2, style=dotted];
m1_290 -> m1_80  [key=2, style=dotted];
m1_286 -> m1_293  [key=0, style=solid];
m1_289 -> m1_290  [key=0, style=solid];
m1_289 -> m1_292  [key=0, style=solid];
m1_292 -> m1_293  [key=0, style=solid];
m1_291 -> m1_293  [key=0, style=solid];
m1_293 -> m1_281  [color=blue, key=0, style=bold];
m1_76 -> m1_83  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_75  [key=2, style=dotted];
m1_83 -> m1_91  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_83 -> m1_95  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_106  [key=2, style=dotted];
m1_84 -> m1_86  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_84 -> m1_87  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_84 -> m1_88  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_84 -> m1_101  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_95  [key=0, style=solid];
m1_91 -> m1_93  [color=darkseagreen4, key=1, label=row, style=dashed];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_99  [key=0, style=solid];
m1_95 -> m1_97  [color=darkseagreen4, key=1, label=row, style=dashed];
m1_85 -> m1_86  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_89  [key=0, style=solid];
m1_86 -> m1_107  [key=2, style=dotted];
m1_86 -> m1_90  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_86 -> m1_94  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_86 -> m1_98  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_86 -> m1_99  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_86 -> m1_101  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_108  [key=2, style=dotted];
m1_87 -> m1_94  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_87 -> m1_98  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_87 -> m1_99  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_87 -> m1_101  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_88 -> m1_91  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_105  [key=0, style=solid];
m1_101 -> m1_113  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_109  [key=2, style=dotted];
m1_94 -> m1_91  [key=0, style=solid];
m1_94 -> m1_111  [key=2, style=dotted];
m1_98 -> m1_95  [key=0, style=solid];
m1_98 -> m1_112  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_110  [key=2, style=dotted];
m1_92 -> m1_94  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_110  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_110  [key=2, style=dotted];
m1_96 -> m1_98  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_110  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_102  [key=0, style=solid];
m1_100 -> m1_105  [key=0, style=solid];
m1_102 -> m1_103  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_46  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_105 -> m1_76  [color=blue, key=0, style=bold];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_24  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_31  [key=0, style=solid];
m1_27 -> m1_34  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_24  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_35  [key=2, style=dotted];
m1_30 -> m1_27  [key=0, style=solid];
m1_30 -> m1_36  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_25  [color=blue, key=0, style=bold];
m1_79 -> m1_0  [color=darkorchid, key=3, label="Field variable QuantConnect.Interfaces.IAlgorithm _algorithm", style=bold];
m1_251 -> m1_296  [key=0, style=solid];
m1_251 -> m1_236  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_298  [key=2, style=dotted];
m1_297 -> m1_251  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_0  [color=blue, key=0, style=bold];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_232  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.Messages.Matched", style=dashed];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_234  [key=2, style=dotted];
m1_230 -> m1_232  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_227  [key=2, style=dotted];
m1_232 -> m1_228  [key=2, style=dotted];
m1_231 -> m1_232  [key=0, style=solid];
m1_233 -> m1_229  [color=blue, key=0, style=bold];
m1_299 -> m1_300  [key=0, style=solid];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_302  [key=0, style=solid];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_255  [key=2, style=dotted];
m1_301 -> m1_257  [key=2, style=dotted];
m1_302 -> m1_299  [color=blue, key=0, style=bold];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs", style=dashed];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_117  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_113  [key=2, style=dotted];
m1_117 -> m1_114  [color=blue, key=0, style=bold];
m1_303 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_43  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_47  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_48  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_59  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_84  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_86  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_88  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_89  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_99  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_101  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_115  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_119  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_120  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_140  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_141  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_143  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_144  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_150  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_152  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_160  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_161  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_162  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_167  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_169  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_170  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_191  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_195  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_202  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_203  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_205  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_213  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_224  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_225  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_231  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_232  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_238  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_239  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_240  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_241  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_242  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_245  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_246  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_247  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_248  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_264  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_265  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_269  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_271  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_272  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_274  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_277  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_283  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_285  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_290  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_300  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_301  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_304 -> m1_187  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_305 -> m1_209  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_306 -> m1_269  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_306 -> m1_271  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_306 -> m1_273  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_306 -> m1_277  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_307 -> m1_275  [color=darkseagreen4, key=1, label=delay, style=dashed];
m1_308 -> m1_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_308 -> m1_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_15 -> m2_85  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_86 -> m2_15  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.Nifty", style=dashed];
m2_17 -> m2_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.Nifty", style=dashed];
m2_17 -> m2_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.Nifty", style=dashed];
m2_17 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.Nifty", style=dashed];
m2_17 -> m2_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.Nifty", style=dashed];
m2_17 -> m2_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.Nifty", style=dashed];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_28  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m2_18 -> m2_29  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m2_18 -> m2_31  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m2_18 -> m2_32  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_16  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_24  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_30  [key=0, style=solid];
m2_27 -> m2_16  [key=2, style=dotted];
m2_29 -> m2_33  [key=0, style=solid];
m2_29 -> m2_35  [key=0, style=solid];
m2_29 -> m2_41  [key=2, style=dotted];
m2_29 -> m2_42  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_33  [key=0, style=solid];
m2_30 -> m2_35  [key=0, style=solid];
m2_30 -> m2_16  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_35  [key=0, style=solid];
m2_32 -> m2_41  [key=2, style=dotted];
m2_32 -> m2_42  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_40  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_40  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_36  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_38  [key=2, style=dotted];
m2_24 -> m2_24  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_24 -> m2_27  [color=darkseagreen4, key=1, label=highestNifty, style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_37  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_39  [key=2, style=dotted];
m2_25 -> m2_25  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_25 -> m2_30  [color=darkseagreen4, key=1, label=lowestNifty, style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_33  [key=0, style=solid];
m2_26 -> m2_35  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_42  [key=2, style=dotted];
m2_35 -> m2_17  [color=blue, key=0, style=bold];
m2_43 -> m2_44  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_46  [key=2, style=dotted];
m2_45 -> m2_43  [color=blue, key=0, style=bold];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_70 -> m2_68  [color=blue, key=0, style=bold];
m2_47 -> m2_48  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_47  [color=blue, key=0, style=bold];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_73 -> m2_71  [color=blue, key=0, style=bold];
m2_83 -> m2_84  [key=0, style=solid];
m2_84 -> m2_83  [color=blue, key=0, style=bold];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_47  [key=2, style=dotted];
m2_54 -> m2_56  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_54 -> m2_57  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_54 -> m2_58  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_54 -> m2_59  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_54 -> m2_60  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_54 -> m2_61  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_54 -> m2_62  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_54 -> m2_63  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_65  [key=2, style=dotted];
m2_55 -> m2_57  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_55 -> m2_58  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_55 -> m2_59  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_55 -> m2_60  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_66  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_67  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_67  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_67  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_67  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_53  [color=blue, key=0, style=bold];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DollarRupee", style=dashed];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_15  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_11  [color=blue, key=0, style=bold];
m2_50 -> m2_51  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_52 -> m2_50  [color=blue, key=0, style=bold];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_68  [key=2, style=dotted];
m2_75 -> m2_77  [color=red, key=1, label=currency, style=dashed];
m2_75 -> m2_78  [color=darkseagreen4, key=1, label=currency, style=dashed];
m2_75 -> m2_79  [color=darkseagreen4, key=1, label=currency, style=dashed];
m2_75 -> m2_80  [color=darkseagreen4, key=1, label=currency, style=dashed];
m2_75 -> m2_81  [color=darkseagreen4, key=1, label=currency, style=dashed];
m2_76 -> m2_77  [color=red, key=0, style=solid];
m2_76 -> m2_65  [key=2, style=dotted];
m2_76 -> m2_78  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_77 -> m2_78  [color=red, key=0, style=solid];
m2_77 -> m2_66  [color=red, key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_67  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_82 -> m2_74  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> d9  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> d9  [key=2, style=dotted];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_87 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_87 -> m2_44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CustomDataNIFTYAlgorithm", style=dashed];
m2_88 -> m2_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.Nifty", style=dashed];
m2_89 -> m2_69  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.DollarRupee", style=dashed];
m2_90 -> m2_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.CorrelationPair", style=dashed];
m3_68 -> m3_69  [key=0, style=solid];
m3_69 -> m3_40  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_71  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_69 -> m3_72  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_69 -> m3_75  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_69 -> m3_77  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_70 -> m3_40  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_73  [color=darkseagreen4, key=1, label=right, style=dashed];
m3_70 -> m3_79  [color=darkseagreen4, key=1, label=right, style=dashed];
m3_72 -> m3_41  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_75 -> m3_41  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_77 -> m3_41  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_73 -> m3_41  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_79 -> m3_41  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_82  [key=2, style=dotted];
m3_71 -> m3_74  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_71 -> m3_76  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_71 -> m3_78  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_71 -> m3_80  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_27  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_27  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_27  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_27  [key=2, style=dotted];
m3_81 -> m3_68  [color=blue, key=0, style=bold];
m3_113 -> m3_114  [color=green, key=0, style=solid];
m3_114 -> m3_115  [color=green, key=0, style=solid];
m3_114 -> m3_40  [color=green, key=2, style=dotted];
m3_114 -> m3_116  [color=green, key=1, label=left, style=dashed];
m3_114 -> m3_119  [color=green, key=1, label=left, style=dashed];
m3_114 -> m3_125  [color=green, key=1, label=left, style=dashed];
m3_115 -> m3_116  [color=green, key=0, style=solid];
m3_115 -> m3_40  [color=green, key=2, style=dotted];
m3_115 -> m3_121  [color=green, key=1, label=right, style=dashed];
m3_115 -> m3_123  [color=green, key=1, label=right, style=dashed];
m3_116 -> m3_117  [color=green, key=0, style=solid];
m3_116 -> m3_112  [color=green, key=2, style=dotted];
m3_116 -> m3_118  [color=green, key=1, label=composite, style=dashed];
m3_119 -> m3_120  [color=green, key=0, style=solid];
m3_119 -> m3_41  [color=green, key=2, style=dotted];
m3_125 -> m3_126  [color=green, key=0, style=solid];
m3_125 -> m3_41  [color=green, key=2, style=dotted];
m3_121 -> m3_122  [color=green, key=0, style=solid];
m3_121 -> m3_41  [color=green, key=2, style=dotted];
m3_123 -> m3_124  [color=green, key=0, style=solid];
m3_123 -> m3_41  [color=green, key=2, style=dotted];
m3_117 -> m3_117  [color=green, key=3, label="Local variable bool updatedEventFired", style=bold];
m3_117 -> m3_118  [color=green, key=0, style=solid];
m3_118 -> m3_119  [color=green, key=0, style=solid];
m3_118 -> m3_147  [color=green, key=1, label="QuantConnect.Tests.Indicators.IndicatorExtensionsTests", style=dashed];
m3_118 -> m3_148  [color=green, key=1, label="QuantConnect.Tests.Indicators.IndicatorExtensionsTests", style=dashed];
m3_120 -> m3_121  [color=green, key=0, style=solid];
m3_120 -> m3_26  [color=green, key=2, style=dotted];
m3_124 -> m3_125  [color=green, key=0, style=solid];
m3_124 -> m3_26  [color=green, key=2, style=dotted];
m3_126 -> m3_127  [color=green, key=0, style=solid];
m3_126 -> m3_28  [color=green, key=2, style=dotted];
m3_122 -> m3_123  [color=green, key=0, style=solid];
m3_122 -> m3_26  [color=green, key=2, style=dotted];
m3_127 -> m3_113  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_9 -> m3_26  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_13 -> m3_26  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_12 -> m3_28  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_16 -> m3_28  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_1 -> m3_9  [color=darkseagreen4, key=1, label=first, style=dashed];
m3_1 -> m3_12  [color=darkseagreen4, key=1, label=first, style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_21  [key=2, style=dotted];
m3_1 -> m3_3  [color=darkseagreen4, key=1, label=first, style=dashed];
m3_1 -> m3_8  [color=darkseagreen4, key=1, label=first, style=dashed];
m3_1 -> m3_11  [color=darkseagreen4, key=1, label=first, style=dashed];
m3_1 -> m3_15  [color=darkseagreen4, key=1, label=first, style=dashed];
m3_1 -> m3_18  [color=darkseagreen4, key=1, label=first, style=dashed];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_25  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_27  [key=2, style=dotted];
m3_2 -> m3_13  [color=darkseagreen4, key=1, label=second, style=dashed];
m3_2 -> m3_16  [color=darkseagreen4, key=1, label=second, style=dashed];
m3_2 -> m3_10  [color=darkseagreen4, key=1, label=second, style=dashed];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_22  [key=2, style=dotted];
m3_2 -> m3_14  [color=darkseagreen4, key=1, label=second, style=dashed];
m3_2 -> m3_17  [color=darkseagreen4, key=1, label=second, style=dashed];
m3_2 -> m3_19  [color=darkseagreen4, key=1, label=second, style=dashed];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_27  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_25  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_25  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_27  [key=2, style=dotted];
m3_3 -> m3_23  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_25  [key=2, style=dotted];
m3_4 -> m3_8  [color=darkseagreen4, key=1, label=data1, style=dashed];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_24  [key=2, style=dotted];
m3_4 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs", style=dashed];
m3_4 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs", style=dashed];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_18  [color=darkseagreen4, key=1, label=data4, style=dashed];
m3_7 -> m3_24  [key=2, style=dotted];
m3_19 -> m3_27  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_5 -> m3_11  [color=darkseagreen4, key=1, label=data2, style=dashed];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_24  [key=2, style=dotted];
m3_6 -> m3_15  [color=darkseagreen4, key=1, label=data3, style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_24  [key=2, style=dotted];
m3_20 -> m3_0  [color=blue, key=0, style=bold];
m3_42 -> m3_43  [key=0, style=solid];
m3_129 -> m3_120  [color=green, key=1, label=updatedEventFired, style=dashed];
m3_129 -> m3_122  [color=green, key=1, label=updatedEventFired, style=dashed];
m3_129 -> m3_124  [color=green, key=1, label=updatedEventFired, style=dashed];
m3_129 -> m3_126  [color=green, key=1, label=updatedEventFired, style=dashed];
m3_129 -> m3_130  [color=green, key=0, style=solid];
m3_128 -> m3_129  [color=green, key=0, style=solid];
m3_130 -> m3_128  [color=blue, key=0, style=bold];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_25  [key=2, style=dotted];
m3_44 -> m3_42  [color=blue, key=0, style=bold];
m3_131 -> m3_132  [key=0, style=solid];
m3_132 -> m3_40  [key=2, style=dotted];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_134  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_132 -> m3_135  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_132 -> m3_138  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_132 -> m3_140  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_133 -> m3_40  [key=2, style=dotted];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_136  [color=darkseagreen4, key=1, label=right, style=dashed];
m3_133 -> m3_142  [color=darkseagreen4, key=1, label=right, style=dashed];
m3_135 -> m3_41  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_138 -> m3_41  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_140 -> m3_41  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_136 -> m3_41  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_142 -> m3_41  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_145  [key=2, style=dotted];
m3_134 -> m3_137  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_134 -> m3_139  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_134 -> m3_141  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_134 -> m3_143  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_27  [key=2, style=dotted];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_27  [key=2, style=dotted];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_27  [key=2, style=dotted];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_27  [key=2, style=dotted];
m3_144 -> m3_131  [color=blue, key=0, style=bold];
m3_45 -> m3_46  [key=0, style=solid];
m3_46 -> m3_40  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_49  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_46 -> m3_50  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_46 -> m3_51  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_46 -> m3_54  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_46 -> m3_55  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_46 -> m3_58  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_46 -> m3_59  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_46 -> m3_62  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_46 -> m3_63  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_50 -> m3_41  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_54 -> m3_41  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_58 -> m3_41  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_62 -> m3_41  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_53 -> m3_26  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_57 -> m3_26  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_61 -> m3_26  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_52 -> m3_26  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_56 -> m3_26  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_51 -> m3_28  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_55 -> m3_28  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_59 -> m3_28  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_63 -> m3_28  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_65 -> m3_28  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_60 -> m3_28  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_64 -> m3_28  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_47 -> m3_53  [color=darkseagreen4, key=1, label=sma, style=dashed];
m3_47 -> m3_57  [color=darkseagreen4, key=1, label=sma, style=dashed];
m3_47 -> m3_61  [color=darkseagreen4, key=1, label=sma, style=dashed];
m3_47 -> m3_65  [color=darkseagreen4, key=1, label=sma, style=dashed];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_21  [key=2, style=dotted];
m3_47 -> m3_49  [color=darkseagreen4, key=1, label=sma, style=dashed];
m3_47 -> m3_66  [color=darkseagreen4, key=1, label=sma, style=dashed];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_23  [key=2, style=dotted];
m3_48 -> m3_52  [color=darkseagreen4, key=1, label=delay, style=dashed];
m3_48 -> m3_56  [color=darkseagreen4, key=1, label=delay, style=dashed];
m3_48 -> m3_60  [color=darkseagreen4, key=1, label=delay, style=dashed];
m3_48 -> m3_64  [color=darkseagreen4, key=1, label=delay, style=dashed];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_22  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_27  [key=2, style=dotted];
m3_67 -> m3_45  [color=blue, key=0, style=bold];
m3_98 -> m3_99  [key=0, style=solid];
m3_99 -> m3_40  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_101  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_99 -> m3_102  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_99 -> m3_105  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_99 -> m3_107  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_100 -> m3_40  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_103  [color=darkseagreen4, key=1, label=right, style=dashed];
m3_100 -> m3_109  [color=darkseagreen4, key=1, label=right, style=dashed];
m3_101 -> m3_112  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_104  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_101 -> m3_106  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_101 -> m3_108  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_101 -> m3_110  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_102 -> m3_41  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_105 -> m3_41  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_107 -> m3_41  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_103 -> m3_41  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_109 -> m3_41  [key=2, style=dotted];
m3_109 -> m3_110  [key=0, style=solid];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_27  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_27  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_27  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_27  [key=2, style=dotted];
m3_111 -> m3_98  [color=blue, key=0, style=bold];
m3_83 -> m3_84  [key=0, style=solid];
m3_84 -> m3_40  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_86  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_84 -> m3_87  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_84 -> m3_90  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_84 -> m3_92  [color=darkseagreen4, key=1, label=left, style=dashed];
m3_85 -> m3_40  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_88  [color=darkseagreen4, key=1, label=right, style=dashed];
m3_85 -> m3_94  [color=darkseagreen4, key=1, label=right, style=dashed];
m3_87 -> m3_41  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_90 -> m3_41  [key=2, style=dotted];
m3_90 -> m3_91  [key=0, style=solid];
m3_92 -> m3_41  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_88 -> m3_41  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_94 -> m3_41  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_97  [key=2, style=dotted];
m3_86 -> m3_89  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_86 -> m3_91  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_86 -> m3_93  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_86 -> m3_95  [color=darkseagreen4, key=1, label=composite, style=dashed];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_27  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_27  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_27  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_27  [key=2, style=dotted];
m3_96 -> m3_83  [color=blue, key=0, style=bold];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_40  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_32  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_30 -> m3_33  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_30 -> m3_34  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_30 -> m3_36  [color=darkseagreen4, key=1, label=identity, style=dashed];
m3_33 -> m3_41  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_34 -> m3_41  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_36 -> m3_41  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_35 -> m3_26  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_37 -> m3_28  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_31 -> m3_35  [color=darkseagreen4, key=1, label=sma, style=dashed];
m3_31 -> m3_37  [color=darkseagreen4, key=1, label=sma, style=dashed];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_21  [key=2, style=dotted];
m3_31 -> m3_43  [color=darkseagreen4, key=1, label=sma, style=dashed];
m3_31 -> m3_38  [color=darkseagreen4, key=1, label=sma, style=dashed];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_43  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_27  [key=2, style=dotted];
m3_39 -> m3_29  [color=blue, key=0, style=bold];
m3_146 -> m3_43  [color=darkseagreen4, key=1, label=sma, style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorStatus", style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_4 -> m4_1  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorResult", style=dashed];
m4_4 -> m4_2  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorResult", style=dashed];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_10 -> m6_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_10 -> m6_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_15 -> m6_10  [color=blue, key=0, style=bold];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_6  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_4  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_2  [color=blue, key=0, style=bold];
m6_16 -> m6_3  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationWeb", style=dashed];
m6_16 -> m6_4  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationWeb", style=dashed];
m6_17 -> m6_7  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationSms", style=dashed];
m6_17 -> m6_8  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationSms", style=dashed];
m6_18 -> m6_11  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationEmail", style=dashed];
m6_18 -> m6_12  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationEmail", style=dashed];
m6_18 -> m6_13  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationEmail", style=dashed];
m6_18 -> m6_14  [color=darkseagreen4, key=1, label="QuantConnect.Notifications.NotificationEmail", style=dashed];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_39  [key=2, style=dotted];
m7_38 -> m7_36  [color=blue, key=0, style=bold];
m7_43 -> m7_44  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_46  [key=2, style=dotted];
m7_44 -> m7_47  [key=2, style=dotted];
m7_44 -> m7_48  [key=2, style=dotted];
m7_44 -> m7_49  [key=2, style=dotted];
m7_44 -> m7_50  [key=2, style=dotted];
m7_44 -> m7_44  [color=darkseagreen4, key=1, label=file, style=dashed];
m7_45 -> m7_43  [color=blue, key=0, style=bold];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_8  [color=blue, key=0, style=bold];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_21  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_21  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_23  [key=0, style=solid];
m7_21 -> m7_25  [key=2, style=dotted];
m7_21 -> m7_26  [key=2, style=dotted];
m7_20 -> m7_24  [key=0, style=solid];
m7_22 -> m7_24  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_24 -> m7_18  [color=blue, key=0, style=bold];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [key=2, style=dotted];
m7_32 -> m7_35  [key=2, style=dotted];
m7_33 -> m7_31  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>", style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_6  [key=2, style=dotted];
m7_2 -> m7_7  [key=2, style=dotted];
m7_2 -> m7_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_3 -> m7_0  [color=blue, key=0, style=bold];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_14  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_16  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_16  [key=0, style=solid];
m7_13 -> m7_15  [color=darkseagreen4, key=1, label=splitDate, style=dashed];
m7_16 -> m7_17  [key=0, style=solid];
m7_15 -> m7_16  [key=0, style=solid];
m7_17 -> m7_11  [color=blue, key=0, style=bold];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_0  [key=2, style=dotted];
m7_28 -> m7_30  [key=2, style=dotted];
m7_29 -> m7_27  [color=blue, key=0, style=bold];
m7_40 -> m7_41  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_36  [key=2, style=dotted];
m7_42 -> m7_40  [color=blue, key=0, style=bold];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_52 -> m7_56  [key=0, style=solid];
m7_52 -> m7_57  [key=2, style=dotted];
m7_52 -> m7_58  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_59  [key=2, style=dotted];
m7_53 -> m7_54  [key=0, style=solid];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> n202  [key=2, style=dotted];
m7_56 -> m7_51  [color=blue, key=0, style=bold];
m7_61 -> m7_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m7_61 -> m7_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m7_61 -> m7_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m7_61 -> m7_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m7_61 -> m7_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m7_61 -> m7_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m7_61 -> m7_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m7_61 -> m7_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m8_45 -> m8_46  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_47 -> m8_45  [color=blue, key=0, style=bold];
m8_57 -> m8_77  [key=0, style=solid];
m8_57 -> m8_78  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m8_77 -> m8_78  [key=0, style=solid];
m8_78 -> m8_79  [key=0, style=solid];
m8_79 -> m8_57  [color=blue, key=0, style=bold];
m8_41 -> m8_42  [key=0, style=solid];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_44  [key=2, style=dotted];
m8_43 -> m8_41  [color=blue, key=0, style=bold];
m8_66 -> m8_67  [key=0, style=solid];
m8_67 -> m8_66  [color=blue, key=0, style=bold];
m8_68 -> m8_69  [key=0, style=solid];
m8_69 -> m8_70  [key=0, style=solid];
m8_70 -> m8_68  [color=blue, key=0, style=bold];
m8_71 -> m8_72  [key=0, style=solid];
m8_72 -> m8_73  [key=0, style=solid];
m8_73 -> m8_71  [color=blue, key=0, style=bold];
m8_48 -> m8_49  [color=red, key=0, style=solid];
m8_49 -> m8_50  [color=red, key=0, style=solid];
m8_49 -> m8_51  [color=red, key=2, style=dotted];
m8_50 -> m8_48  [color=blue, key=0, style=bold];
m8_3 -> m8_4  [key=0, style=solid];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_1  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe.Member>", style=dashed];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_3  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m8_14 -> m8_17  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m8_14 -> m8_19  [color=darkorchid, key=3, label="method methodReturn bool CanRemoveMember", style=bold];
m8_14 -> m8_20  [color=darkorchid, key=3, label="method methodReturn bool CanRemoveMember", style=bold];
m8_14 -> m8_59  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_20  [key=0, style=solid];
m8_16 -> m8_22  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_20  [key=0, style=solid];
m8_19 -> m8_21  [key=0, style=solid];
m8_21 -> m8_14  [color=blue, key=0, style=bold];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_62  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m8_59 -> m8_20  [color=darkorchid, key=3, label="method methodReturn bool RemoveMember", style=bold];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_63  [key=0, style=solid];
m8_60 -> m8_14  [key=2, style=dotted];
m8_62 -> m8_64  [key=0, style=solid];
m8_62 -> m8_65  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_63 -> m8_64  [key=0, style=solid];
m8_64 -> m8_59  [color=blue, key=0, style=bold];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_55  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m8_52 -> m8_20  [color=darkorchid, key=3, label="method methodReturn bool AddMember", style=bold];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_55  [key=0, style=solid];
m8_53 -> m8_51  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_57  [key=2, style=dotted];
m8_55 -> m8_58  [key=2, style=dotted];
m8_54 -> m8_56  [key=0, style=solid];
m8_56 -> m8_52  [color=blue, key=0, style=bold];
m8_74 -> m8_75  [key=0, style=solid];
m8_75 -> m8_76  [key=0, style=solid];
m8_76 -> m8_74  [color=blue, key=0, style=bold];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_27  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Symbol> PerformSelection", style=bold];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_34  [key=2, style=dotted];
m8_24 -> m8_27  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_27  [key=0, style=solid];
m8_25 -> m8_35  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_36  [key=2, style=dotted];
m8_27 -> m8_29  [color=darkseagreen4, key=1, label=selections, style=dashed];
m8_27 -> m8_32  [color=darkseagreen4, key=1, label=selections, style=dashed];
m8_26 -> m8_33  [key=0, style=solid];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_37  [key=2, style=dotted];
m8_28 -> m8_38  [key=2, style=dotted];
m8_28 -> n66  [key=2, style=dotted];
m8_28 -> m8_30  [color=darkseagreen4, key=1, label=hasDiffs, style=dashed];
m8_29 -> m8_30  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_32  [key=0, style=solid];
m8_31 -> m8_33  [key=0, style=solid];
m8_33 -> m8_23  [color=blue, key=0, style=bold];
m8_34 -> m8_40  [key=0, style=solid];
m8_34 -> m8_23  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.UniverseSelection.BaseDataCollection data", style=bold];
m8_40 -> m8_34  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m8_6 -> m8_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityInitializer", style=dashed];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_12  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_13  [key=2, style=dotted];
m8_11 -> m8_6  [color=blue, key=0, style=bold];
m8_80 -> m8_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_49  [color=red, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_55  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_80 -> m8_62  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m8_81 -> m8_77  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe.Member", style=dashed];
m8_81 -> m8_78  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe.Member", style=dashed];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_13  [key=0, style=solid];
m9_11 -> m9_40  [key=2, style=dotted];
m9_12 -> m9_37  [key=0, style=solid];
m9_12 -> d39  [key=0, style=solid];
m9_12 -> m9_41  [key=2, style=dotted];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=0, style=solid];
m9_13 -> m9_40  [key=2, style=dotted];
m9_14 -> m9_37  [key=0, style=solid];
m9_14 -> d39  [key=0, style=solid];
m9_14 -> m9_41  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_17  [key=0, style=solid];
m9_15 -> m9_40  [key=2, style=dotted];
m9_16 -> m9_37  [key=0, style=solid];
m9_16 -> d39  [key=0, style=solid];
m9_16 -> m9_41  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=0, style=solid];
m9_17 -> m9_40  [key=2, style=dotted];
m9_18 -> m9_37  [key=0, style=solid];
m9_18 -> d39  [key=0, style=solid];
m9_18 -> m9_41  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_21  [key=0, style=solid];
m9_19 -> m9_40  [key=2, style=dotted];
m9_20 -> m9_37  [key=0, style=solid];
m9_20 -> d39  [key=0, style=solid];
m9_20 -> m9_41  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_23  [key=0, style=solid];
m9_21 -> m9_40  [key=2, style=dotted];
m9_22 -> m9_37  [key=0, style=solid];
m9_22 -> d39  [key=0, style=solid];
m9_22 -> m9_41  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=0, style=solid];
m9_23 -> m9_40  [key=2, style=dotted];
m9_24 -> m9_37  [key=0, style=solid];
m9_24 -> d39  [key=0, style=solid];
m9_24 -> m9_41  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=0, style=solid];
m9_25 -> m9_40  [key=2, style=dotted];
m9_26 -> m9_37  [key=0, style=solid];
m9_26 -> d39  [key=0, style=solid];
m9_26 -> m9_41  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [key=0, style=solid];
m9_27 -> m9_40  [key=2, style=dotted];
m9_28 -> m9_37  [key=0, style=solid];
m9_28 -> d39  [key=0, style=solid];
m9_28 -> m9_41  [key=2, style=dotted];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_31  [key=0, style=solid];
m9_29 -> m9_40  [key=2, style=dotted];
m9_30 -> m9_37  [key=0, style=solid];
m9_30 -> d39  [key=0, style=solid];
m9_30 -> m9_41  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=0, style=solid];
m9_31 -> m9_40  [key=2, style=dotted];
m9_32 -> m9_37  [key=0, style=solid];
m9_32 -> d39  [key=0, style=solid];
m9_32 -> m9_41  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_35  [key=0, style=solid];
m9_33 -> m9_40  [key=2, style=dotted];
m9_34 -> m9_37  [key=0, style=solid];
m9_34 -> d39  [key=0, style=solid];
m9_34 -> m9_41  [key=2, style=dotted];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_37  [key=0, style=solid];
m9_35 -> d39  [key=0, style=solid];
m9_35 -> m9_40  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> d39  [key=0, style=solid];
m9_36 -> m9_41  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_38 -> d39  [key=0, style=solid];
m9_38 -> m9_42  [key=2, style=dotted];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_53  [key=2, style=dotted];
m9_60 -> m9_62  [color=darkseagreen4, key=1, label=cash, style=dashed];
m9_60 -> m9_63  [color=darkseagreen4, key=1, label=cash, style=dashed];
m9_60 -> m9_64  [color=darkseagreen4, key=1, label=cash, style=dashed];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_66  [key=2, style=dotted];
m9_61 -> m9_63  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_67  [key=2, style=dotted];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_68  [key=2, style=dotted];
m9_64 -> m9_65  [key=0, style=solid];
m9_65 -> m9_59  [color=blue, key=0, style=bold];
m9_53 -> m9_54  [key=0, style=solid];
m9_54 -> m9_55  [key=0, style=solid];
m9_55 -> m9_53  [color=blue, key=0, style=bold];
m9_56 -> m9_57  [key=0, style=solid];
m9_57 -> m9_58  [key=0, style=solid];
m9_58 -> m9_56  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_6  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_7  [key=2, style=dotted];
m9_2 -> m9_12  [color=darkorchid, key=3, label="Field variable QuantConnect.Lean.Engine.DataFeeds.IDataFeed _dataFeed", style=bold];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_8  [key=2, style=dotted];
m9_3 -> m9_12  [color=darkorchid, key=3, label="Field variable QuantConnect.Interfaces.IAlgorithm _algorithm", style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_9  [key=2, style=dotted];
m9_5 -> m9_0  [color=blue, key=0, style=bold];
m9_43 -> m9_44  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_51  [key=2, style=dotted];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_51  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_51  [key=2, style=dotted];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_50  [key=0, style=solid];
m9_47 -> m9_52  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_42  [key=2, style=dotted];
m9_50 -> m9_43  [color=blue, key=0, style=bold];
m9_69 -> m9_1  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_2  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_3  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_4  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_11  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_12  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_13  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_14  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_15  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_16  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_17  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_18  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_19  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_20  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_21  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_22  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_23  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_24  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_25  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_26  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_27  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_28  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_29  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_30  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_31  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_32  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_33  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_34  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_35  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_36  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_38  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_44  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_45  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_46  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_47  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_69 -> m9_49  [color=darkseagreen4, key=1, label="QuantConnect.TestCashStrategy", style=dashed];
m9_70 -> m9_54  [color=darkseagreen4, key=1, label="QuantConnect.CashType", style=dashed];
}
