digraph  {
m0_9 [cluster="Unk.IsFalse", file="DataDictionary.cs", label="Entry Unk.IsFalse", span=""];
m0_0 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", file="DataDictionary.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", span="23-23"];
m0_1 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", color=green, community=0, file="DataDictionary.cs", label="0: Assert.IsTrue(typeof(Derived2).IsSubclassOfGeneric(typeof(Derived1)))", span="25-25"];
m0_2 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", file="DataDictionary.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", span="23-23"];
m0_5 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="DataDictionary.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", span="29-29"];
m0_6 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", color=green, community=0, file="DataDictionary.cs", label="0: Assert.IsTrue(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<int>)))", span="31-31"];
m0_7 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", color=green, community=0, file="DataDictionary.cs", label="0: Assert.IsFalse(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<bool>)))", span="32-32"];
m0_8 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="DataDictionary.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", span="29-29"];
m0_10 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="DataDictionary.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", span="36-36"];
m0_11 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", color=green, community=0, file="DataDictionary.cs", label="0: Assert.IsTrue(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<>)))", span="38-38"];
m0_12 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", color=green, community=0, file="DataDictionary.cs", label="0: Assert.IsTrue(typeof(Derived2).IsSubclassOfGeneric(typeof(Super<>)))", span="39-39"];
m0_13 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="DataDictionary.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", span="36-36"];
m0_3 [cluster="System.Type.IsSubclassOfGeneric(System.Type)", file="DataDictionary.cs", label="Entry System.Type.IsSubclassOfGeneric(System.Type)", span="359-359"];
m0_4 [cluster="Unk.IsTrue", file="DataDictionary.cs", label="Entry Unk.IsTrue", span=""];
m1_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.Subscription.MoveNext()", file="DividendAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Subscription.MoveNext()", span="130-130"];
m1_0 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", span="41-41"];
m1_1 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", file="DividendAlgorithm.cs", label="_brokerage = brokerage", span="43-43"];
m1_2 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", file="DividendAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", span="41-41"];
m1_16 [cluster="System.Collections.Generic.List<T>.List()", file="DividendAlgorithm.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_17 [cluster="QuantConnect.Interfaces.IBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="120-120"];
m1_43 [cluster="lambda expression", file="DividendAlgorithm.cs", label="Entry lambda expression", span="112-112"];
m1_44 [cluster="lambda expression", file="DividendAlgorithm.cs", label="request.FillForwardResolution.Value.ToTimeSpan()", span="112-112"];
m1_45 [cluster="lambda expression", file="DividendAlgorithm.cs", label="Exit lambda expression", span="112-112"];
m1_18 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="85-85"];
m1_22 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="var start = request.StartTimeUtc.ConvertFromUtc(request.ExchangeHours.TimeZone)", span="88-88"];
m1_23 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="var end = request.EndTimeUtc.ConvertFromUtc(request.ExchangeHours.TimeZone)", span="89-89"];
m1_24 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="var config = new SubscriptionDataConfig(request.DataType,\r\n                request.Symbol,\r\n                request.Resolution,\r\n                request.TimeZone,\r\n                request.ExchangeHours.TimeZone,\r\n                request.FillForwardResolution.HasValue,\r\n                request.IncludeExtendedMarketHours,\r\n                false,\r\n                request.IsCustomData,\r\n                null,\r\n                true,\r\n                request.DataNormalizationMode\r\n                )", span="91-103"];
m1_25 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="var security = new Security(request.ExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="105-105"];
m1_26 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="var reader = history.GetEnumerator()", span="107-107"];
m1_27 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="request.FillForwardResolution.HasValue", span="110-110"];
m1_28 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="var readOnlyRef = Ref.CreateReadOnly(() => request.FillForwardResolution.Value.ToTimeSpan())", span="112-112"];
m1_30 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="var timeZoneOffsetProvider = new TimeZoneOffsetProvider(security.Exchange.TimeZone, start, end)", span="116-116"];
m1_31 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="return new Subscription(null, security, config, reader, timeZoneOffsetProvider, start, end, false);", span="117-117"];
m1_29 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="reader = new FillForwardEnumerator(reader, security.Exchange, readOnlyRef, security.IsExtendedMarketHours, end, config.Increment)", span="113-113"];
m1_32 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="DividendAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="85-85"];
m1_34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161"];
m1_7 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="67-67"];
m1_8 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="DividendAlgorithm.cs", label="var subscriptions = new List<Subscription>()", span="70-70"];
m1_9 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="DividendAlgorithm.cs", label=requests, span="71-71"];
m1_14 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="DividendAlgorithm.cs", label="return CreateSliceEnumerableFromSubscriptions(subscriptions, sliceTimeZone);", span="79-79"];
m1_13 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="DividendAlgorithm.cs", label="subscriptions.Add(subscription)", span="76-76"];
m1_10 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="DividendAlgorithm.cs", label="var history = _brokerage.GetHistory(request)", span="73-73"];
m1_11 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="DividendAlgorithm.cs", label="var subscription = CreateSubscription(request, history)", span="74-74"];
m1_12 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="DividendAlgorithm.cs", label="subscription.MoveNext()", span="75-75"];
m1_15 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="DividendAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="67-67"];
m1_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.Subscription.Subscription(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.TimeZoneOffsetProvider, System.DateTime, System.DateTime, bool)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Subscription.Subscription(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.TimeZoneOffsetProvider, System.DateTime, System.DateTime, bool)", span="103-103"];
m1_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, QuantConnect.Util.IReadOnlyRef<System.TimeSpan>, bool, System.DateTime, System.TimeSpan)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, QuantConnect.Util.IReadOnlyRef<System.TimeSpan>, bool, System.DateTime, System.TimeSpan)", span="59-59"];
m1_3 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="55-55"];
m1_4 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="DividendAlgorithm.cs", label="_brokerage.Connect()", span="58-58"];
m1_5 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="DividendAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="55-55"];
m1_39 [cluster="QuantConnect.Util.Ref.CreateReadOnly<T>(System.Func<T>)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Util.Ref.CreateReadOnly<T>(System.Func<T>)", span="89-89"];
m1_38 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="DividendAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m1_35 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m1_37 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m1_6 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="DividendAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103"];
m1_21 [cluster="QuantConnect.Lean.Engine.HistoricalData.SynchronizingHistoryProvider.CreateSliceEnumerableFromSubscriptions(System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.SynchronizingHistoryProvider.CreateSliceEnumerableFromSubscriptions(System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone)", span="68-68"];
m1_20 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DividendAlgorithm.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_36 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="DividendAlgorithm.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m1_41 [cluster="QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", file="DividendAlgorithm.cs", label="Entry QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", span="51-51"];
m1_46 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="DividendAlgorithm.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="677-677"];
m1_33 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="DividendAlgorithm.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="559-559"];
m1_47 [file="DividendAlgorithm.cs", label="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider", span=""];
m1_48 [file="DividendAlgorithm.cs", label="QuantConnect.Data.HistoryRequest", span=""];
m4_16 [cluster="System.TimeSpan.FromSeconds(double)", file="Splits.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m4_19 [cluster="Unk.AreEqual", file="Splits.cs", label="Entry Unk.AreEqual", span=""];
m4_15 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="Splits.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m4_11 [cluster="System.DateTime.AddMinutes(double)", file="Splits.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m4_20 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="Splits.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", span="47-47"];
m4_21 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="Splits.cs", label="var start = new DateTime(2015, 10, 10, 13, 0, 0)", span="49-49"];
m4_22 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="Splits.cs", label="var data = new List<Tick>\r\n            {\r\n                new Tick {Time = start.AddMinutes(-1)},\r\n                new Tick {Time = start.AddSeconds(-1)},\r\n                new Tick {Time = start.AddSeconds(0)},\r\n                new Tick {Time = start.AddSeconds(1)},\r\n            }", span="50-56"];
m4_26 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="Splits.cs", label="Assert.AreEqual(start.AddSeconds(-1), fastForward.Current.Time)", span="62-62"];
m4_23 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="Splits.cs", label="var timeProvider = new ManualTimeProvider(start, TimeZones.Utc)", span="58-58"];
m4_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="Splits.cs", label="var fastForward = new FastForwardEnumerator(data.GetEnumerator(), timeProvider, TimeZones.Utc, TimeSpan.FromSeconds(1))", span="59-59"];
m4_25 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="Splits.cs", label="Assert.IsTrue(fastForward.MoveNext())", span="61-61"];
m4_27 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", file="Splits.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldDataAllowsEquals()", span="47-47"];
m4_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.ManualTimeProvider(System.DateTime, DateTimeZone)", file="Splits.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.ManualTimeProvider(System.DateTime, DateTimeZone)", span="47-47"];
m4_28 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="Splits.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", span="65-65"];
m4_29 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="Splits.cs", label="var start = new DateTime(2015, 10, 10, 13, 0, 0)", span="67-67"];
m4_30 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="Splits.cs", label="var data = new List<Tick>\r\n            {\r\n                new Tick {Time = start.AddMinutes(-1)},\r\n                new Tick {Time = start.AddSeconds(-1)},\r\n                new Tick {Time = start.AddSeconds(1)},\r\n                new Tick {Time = start.AddSeconds(0)},\r\n                new Tick {Time = start.AddSeconds(2)}\r\n            }", span="68-75"];
m4_34 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="Splits.cs", label="Assert.AreEqual(start.AddSeconds(1), fastForward.Current.Time)", span="81-81"];
m4_36 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="Splits.cs", label="Assert.AreEqual(start.AddSeconds(2), fastForward.Current.Time)", span="84-84"];
m4_31 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="Splits.cs", label="var timeProvider = new ManualTimeProvider(start, TimeZones.Utc)", span="77-77"];
m4_32 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="Splits.cs", label="var fastForward = new FastForwardEnumerator(data.GetEnumerator(), timeProvider, TimeZones.Utc, TimeSpan.FromSeconds(0.5))", span="78-78"];
m4_33 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="Splits.cs", label="Assert.IsTrue(fastForward.MoveNext())", span="80-80"];
m4_35 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="Splits.cs", label="Assert.IsTrue(fastForward.MoveNext())", span="83-83"];
m4_37 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", file="Splits.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FiltersOutPastData()", span="65-65"];
m4_18 [cluster="Unk.IsTrue", file="Splits.cs", label="Entry Unk.IsTrue", span=""];
m4_9 [cluster="System.Collections.Generic.List<T>.List()", file="Splits.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_10 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Splits.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m4_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", file="Splits.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", span="43-43"];
m4_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="Splits.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", span="57-57"];
m4_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="Splits.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", span="29-29"];
m4_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", color=green, community=0, file="Splits.cs", label="0: var start = new DateTime(2015, 10, 10, 13, 0, 0)", span="31-31"];
m4_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", color=green, community=0, file="Splits.cs", label="0: var data = new List<Tick>\r\n            {\r\n                new Tick {Time = start.AddMinutes(-1)},\r\n                new Tick {Time = start.AddSeconds(-1)},\r\n                new Tick {Time = start.AddSeconds(0)},\r\n                new Tick {Time = start.AddSeconds(1)},\r\n            }", span="32-38"];
m4_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", color=green, community=0, file="Splits.cs", label="0: var timeProvider = new ManualTimeProvider(start, TimeZones.Utc)", span="40-40"];
m4_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="Splits.cs", label="Assert.AreEqual(start, fastForward.Current.Time)", span="44-44"];
m4_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", color=green, community=0, file="Splits.cs", label="0: var fastForward = new FastForwardEnumerator(data.GetEnumerator(), timeProvider, TimeZones.Utc, TimeSpan.FromSeconds(0.5))", span="41-41"];
m4_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="Splits.cs", label="Assert.IsTrue(fastForward.MoveNext())", span="43-43"];
m4_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", file="Splits.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.FastForwardEnumeratorTests.FastForwardsOldData()", span="29-29"];
m4_12 [cluster="System.DateTime.AddSeconds(double)", file="Splits.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m4_8 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="Splits.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m5_0 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", file="Ticks.cs", label="Entry QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", span="31-31"];
m5_1 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", color=green, community=0, file="Ticks.cs", label="0: return 1m;", span="34-34"];
m5_2 [cluster="QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", file="Ticks.cs", label="Exit QuantConnect.Securities.CashBuyingPowerModel.GetLeverage(QuantConnect.Securities.Security)", span="31-31"];
m6_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.Subscription.MoveNext()", file="TradeBars.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Subscription.MoveNext()", span="130-130"];
m6_0 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", file="TradeBars.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", span="41-41"];
m6_1 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", color=red, community=0, file="TradeBars.cs", label="0: _brokerage = brokerage", span="43-43"];
m6_2 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", file="TradeBars.cs", label="Exit QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", span="41-41"];
m6_16 [cluster="System.Collections.Generic.List<T>.List()", file="TradeBars.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_17 [cluster="QuantConnect.Interfaces.IBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="TradeBars.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="120-120"];
m6_43 [cluster="lambda expression", file="TradeBars.cs", label="Entry lambda expression", span="112-112"];
m6_44 [cluster="lambda expression", color=red, community=0, file="TradeBars.cs", label="0: request.FillForwardResolution.Value.ToTimeSpan()", span="112-112"];
m6_45 [cluster="lambda expression", file="TradeBars.cs", label="Exit lambda expression", span="112-112"];
m6_18 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="TradeBars.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="85-85"];
m6_22 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=red, community=0, file="TradeBars.cs", label="0: var start = request.StartTimeUtc.ConvertFromUtc(request.ExchangeHours.TimeZone)", span="88-88"];
m6_23 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=red, community=0, file="TradeBars.cs", label="0: var end = request.EndTimeUtc.ConvertFromUtc(request.ExchangeHours.TimeZone)", span="89-89"];
m6_24 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=red, community=0, file="TradeBars.cs", label="0: var config = new SubscriptionDataConfig(request.DataType,\r\n                request.Symbol,\r\n                request.Resolution,\r\n                request.TimeZone,\r\n                request.ExchangeHours.TimeZone,\r\n                request.FillForwardResolution.HasValue,\r\n                request.IncludeExtendedMarketHours,\r\n                false,\r\n                request.IsCustomData,\r\n                null,\r\n                true,\r\n                request.DataNormalizationMode\r\n                )", span="91-103"];
m6_25 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=red, community=0, file="TradeBars.cs", label="0: var security = new Security(request.ExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="105-105"];
m6_26 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=red, community=0, file="TradeBars.cs", label="0: var reader = history.GetEnumerator()", span="107-107"];
m6_27 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=red, community=0, file="TradeBars.cs", label="0: request.FillForwardResolution.HasValue", span="110-110"];
m6_28 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=red, community=0, file="TradeBars.cs", label="0: var readOnlyRef = Ref.CreateReadOnly(() => request.FillForwardResolution.Value.ToTimeSpan())", span="112-112"];
m6_30 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=red, community=0, file="TradeBars.cs", label="0: var timeZoneOffsetProvider = new TimeZoneOffsetProvider(security.Exchange.TimeZone, start, end)", span="116-116"];
m6_31 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=red, community=0, file="TradeBars.cs", label="0: return new Subscription(null, security, config, reader, timeZoneOffsetProvider, start, end, false);", span="117-117"];
m6_29 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", color=red, community=0, file="TradeBars.cs", label="0: reader = new FillForwardEnumerator(reader, security.Exchange, readOnlyRef, security.IsExtendedMarketHours, end, config.Increment)", span="113-113"];
m6_32 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="TradeBars.cs", label="Exit QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="85-85"];
m6_34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="TradeBars.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161"];
m6_7 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="TradeBars.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="67-67"];
m6_8 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", color=red, community=0, file="TradeBars.cs", label="0: var subscriptions = new List<Subscription>()", span="70-70"];
m6_9 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", color=red, community=0, file="TradeBars.cs", label="0: requests", span="71-71"];
m6_14 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", color=red, community=0, file="TradeBars.cs", label="0: return CreateSliceEnumerableFromSubscriptions(subscriptions, sliceTimeZone);", span="79-79"];
m6_13 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", color=red, community=0, file="TradeBars.cs", label="0: subscriptions.Add(subscription)", span="76-76"];
m6_10 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", color=red, community=0, file="TradeBars.cs", label="0: var history = _brokerage.GetHistory(request)", span="73-73"];
m6_11 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", color=red, community=0, file="TradeBars.cs", label="0: var subscription = CreateSubscription(request, history)", span="74-74"];
m6_12 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", color=red, community=0, file="TradeBars.cs", label="0: subscription.MoveNext()", span="75-75"];
m6_15 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="TradeBars.cs", label="Exit QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="67-67"];
m6_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.Subscription.Subscription(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.TimeZoneOffsetProvider, System.DateTime, System.DateTime, bool)", file="TradeBars.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Subscription.Subscription(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.TimeZoneOffsetProvider, System.DateTime, System.DateTime, bool)", span="103-103"];
m6_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, QuantConnect.Util.IReadOnlyRef<System.TimeSpan>, bool, System.DateTime, System.TimeSpan)", file="TradeBars.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FillForwardEnumerator.FillForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.SecurityExchange, QuantConnect.Util.IReadOnlyRef<System.TimeSpan>, bool, System.DateTime, System.TimeSpan)", span="59-59"];
m6_3 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="TradeBars.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="55-55"];
m6_4 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", color=red, community=0, file="TradeBars.cs", label="0: _brokerage.Connect()", span="58-58"];
m6_5 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="TradeBars.cs", label="Exit QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="55-55"];
m6_39 [cluster="QuantConnect.Util.Ref.CreateReadOnly<T>(System.Func<T>)", file="TradeBars.cs", label="Entry QuantConnect.Util.Ref.CreateReadOnly<T>(System.Func<T>)", span="89-89"];
m6_38 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="TradeBars.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m6_35 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="TradeBars.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m6_37 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="TradeBars.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m6_6 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="TradeBars.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103"];
m6_21 [cluster="QuantConnect.Lean.Engine.HistoricalData.SynchronizingHistoryProvider.CreateSliceEnumerableFromSubscriptions(System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone)", file="TradeBars.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.SynchronizingHistoryProvider.CreateSliceEnumerableFromSubscriptions(System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone)", span="68-68"];
m6_20 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TradeBars.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_36 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="TradeBars.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m6_41 [cluster="QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", file="TradeBars.cs", label="Entry QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", span="51-51"];
m6_46 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="TradeBars.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="677-677"];
m6_33 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="TradeBars.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="559-559"];
m6_47 [file="TradeBars.cs", label="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider", span=""];
m6_48 [file="TradeBars.cs", label="QuantConnect.Data.HistoryRequest", span=""];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=2, style=dotted];
m0_1 -> m0_4  [color=green, key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_3  [color=green, key=2, style=dotted];
m0_6 -> m0_4  [color=green, key=2, style=dotted];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_3  [color=green, key=2, style=dotted];
m0_7 -> m0_9  [color=green, key=2, style=dotted];
m0_8 -> m0_5  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [color=green, key=0, style=solid];
m0_11 -> m0_12  [color=green, key=0, style=solid];
m0_11 -> m0_3  [color=green, key=2, style=dotted];
m0_11 -> m0_4  [color=green, key=2, style=dotted];
m0_12 -> m0_13  [color=green, key=0, style=solid];
m0_12 -> m0_3  [color=green, key=2, style=dotted];
m0_12 -> m0_4  [color=green, key=2, style=dotted];
m0_13 -> m0_10  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_43 -> m1_44  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=2, style=dotted];
m1_45 -> m1_43  [color=blue, key=0, style=bold];
m1_18 -> m1_22  [key=0, style=solid];
m1_18 -> m1_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_18 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_18 -> m1_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_18 -> m1_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m1_18 -> m1_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_18 -> m1_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_18 -> m1_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_33  [key=2, style=dotted];
m1_22 -> m1_30  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_22 -> m1_31  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_33  [key=2, style=dotted];
m1_23 -> m1_29  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_23 -> m1_30  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_23 -> m1_31  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_34  [key=2, style=dotted];
m1_24 -> m1_29  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_24 -> m1_31  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_35  [key=2, style=dotted];
m1_25 -> m1_36  [key=2, style=dotted];
m1_25 -> m1_37  [key=2, style=dotted];
m1_25 -> m1_29  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_25 -> m1_30  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_25 -> m1_31  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_38  [key=2, style=dotted];
m1_26 -> m1_29  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_26 -> m1_31  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_30  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_39  [key=2, style=dotted];
m1_28 -> m1_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_41  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_42  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_40  [key=2, style=dotted];
m1_29 -> m1_29  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_29 -> m1_31  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_32 -> m1_18  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>", style=dashed];
m1_7 -> m1_14  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_16  [key=2, style=dotted];
m1_8 -> m1_13  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m1_8 -> m1_14  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_14  [key=0, style=solid];
m1_9 -> m1_11  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_21  [key=2, style=dotted];
m1_13 -> m1_9  [key=0, style=solid];
m1_13 -> m1_20  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_17  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_18  [key=2, style=dotted];
m1_11 -> m1_13  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_19  [key=2, style=dotted];
m1_15 -> m1_7  [color=blue, key=0, style=bold];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_6  [key=2, style=dotted];
m1_5 -> m1_3  [color=blue, key=0, style=bold];
m1_47 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider", style=dashed];
m1_47 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider", style=dashed];
m1_47 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider", style=dashed];
m1_47 -> m1_14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider", style=dashed];
m1_48 -> m1_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_8  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [color=darkseagreen4, key=1, label=start, style=dashed];
m4_21 -> m4_26  [color=darkseagreen4, key=1, label=start, style=dashed];
m4_22 -> m4_9  [key=2, style=dotted];
m4_22 -> m4_10  [key=2, style=dotted];
m4_22 -> m4_11  [key=2, style=dotted];
m4_22 -> m4_12  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_24  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_26 -> m4_12  [key=2, style=dotted];
m4_26 -> m4_19  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_23 -> m4_13  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_24 -> m4_14  [key=2, style=dotted];
m4_24 -> m4_15  [key=2, style=dotted];
m4_24 -> m4_16  [key=2, style=dotted];
m4_24 -> m4_26  [color=darkseagreen4, key=1, label=fastForward, style=dashed];
m4_24 -> m4_25  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_17  [key=2, style=dotted];
m4_25 -> m4_18  [key=2, style=dotted];
m4_27 -> m4_20  [color=blue, key=0, style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_29 -> m4_8  [key=2, style=dotted];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_31  [color=darkseagreen4, key=1, label=start, style=dashed];
m4_29 -> m4_34  [color=darkseagreen4, key=1, label=start, style=dashed];
m4_29 -> m4_36  [color=darkseagreen4, key=1, label=start, style=dashed];
m4_30 -> m4_9  [key=2, style=dotted];
m4_30 -> m4_10  [key=2, style=dotted];
m4_30 -> m4_11  [key=2, style=dotted];
m4_30 -> m4_12  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_34 -> m4_12  [key=2, style=dotted];
m4_34 -> m4_19  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_36 -> m4_12  [key=2, style=dotted];
m4_36 -> m4_19  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_31 -> m4_13  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_14  [key=2, style=dotted];
m4_32 -> m4_15  [key=2, style=dotted];
m4_32 -> m4_16  [key=2, style=dotted];
m4_32 -> m4_34  [color=darkseagreen4, key=1, label=fastForward, style=dashed];
m4_32 -> m4_36  [color=darkseagreen4, key=1, label=fastForward, style=dashed];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_35  [color=darkseagreen4, key=1, label=fastForward, style=dashed];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_17  [key=2, style=dotted];
m4_33 -> m4_18  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_17  [key=2, style=dotted];
m4_35 -> m4_18  [key=2, style=dotted];
m4_37 -> m4_28  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_8  [color=green, key=2, style=dotted];
m4_1 -> m4_3  [color=green, key=1, label=start, style=dashed];
m4_1 -> m4_6  [color=green, key=1, label=start, style=dashed];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_9  [color=green, key=2, style=dotted];
m4_2 -> m4_10  [color=green, key=2, style=dotted];
m4_2 -> m4_11  [color=green, key=2, style=dotted];
m4_2 -> m4_12  [color=green, key=2, style=dotted];
m4_2 -> m4_4  [color=green, key=1, label=data, style=dashed];
m4_3 -> m4_4  [color=green, key=0, style=solid];
m4_3 -> m4_13  [color=green, key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_19  [key=2, style=dotted];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_4 -> m4_14  [color=green, key=2, style=dotted];
m4_4 -> m4_15  [color=green, key=2, style=dotted];
m4_4 -> m4_16  [color=green, key=2, style=dotted];
m4_4 -> m4_6  [color=green, key=1, label=fastForward, style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_17  [key=2, style=dotted];
m4_5 -> m4_18  [key=2, style=dotted];
m4_7 -> m4_0  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [color=red, key=0, style=solid];
m6_1 -> m6_2  [color=red, key=0, style=solid];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_43 -> m6_44  [color=red, key=0, style=solid];
m6_44 -> m6_45  [color=red, key=0, style=solid];
m6_44 -> m6_46  [color=red, key=2, style=dotted];
m6_45 -> m6_43  [color=blue, key=0, style=bold];
m6_18 -> m6_22  [color=red, key=0, style=solid];
m6_18 -> m6_23  [color=red, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m6_18 -> m6_24  [color=red, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m6_18 -> m6_25  [color=red, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m6_18 -> m6_26  [color=red, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m6_18 -> m6_27  [color=red, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m6_18 -> m6_28  [color=red, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m6_18 -> m6_44  [color=red, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m6_18 -> m6_9  [color=red, key=3, label="Parameter variable QuantConnect.Data.HistoryRequest request", style=bold];
m6_18 -> m6_10  [color=red, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> history", style=bold];
m6_22 -> m6_23  [color=red, key=0, style=solid];
m6_22 -> m6_33  [color=red, key=2, style=dotted];
m6_22 -> m6_30  [color=red, key=1, label=start, style=dashed];
m6_22 -> m6_31  [color=red, key=1, label=start, style=dashed];
m6_23 -> m6_24  [color=red, key=0, style=solid];
m6_23 -> m6_33  [color=red, key=2, style=dotted];
m6_23 -> m6_29  [color=red, key=1, label=end, style=dashed];
m6_23 -> m6_30  [color=red, key=1, label=end, style=dashed];
m6_23 -> m6_31  [color=red, key=1, label=end, style=dashed];
m6_24 -> m6_25  [color=red, key=0, style=solid];
m6_24 -> m6_34  [color=red, key=2, style=dotted];
m6_24 -> m6_29  [color=red, key=1, label=config, style=dashed];
m6_24 -> m6_31  [color=red, key=1, label=config, style=dashed];
m6_25 -> m6_26  [color=red, key=0, style=solid];
m6_25 -> m6_35  [color=red, key=2, style=dotted];
m6_25 -> m6_36  [color=red, key=2, style=dotted];
m6_25 -> m6_37  [color=red, key=2, style=dotted];
m6_25 -> m6_29  [color=red, key=1, label=security, style=dashed];
m6_25 -> m6_30  [color=red, key=1, label=security, style=dashed];
m6_25 -> m6_31  [color=red, key=1, label=security, style=dashed];
m6_26 -> m6_27  [color=red, key=0, style=solid];
m6_26 -> m6_38  [color=red, key=2, style=dotted];
m6_26 -> m6_29  [color=red, key=1, label=reader, style=dashed];
m6_26 -> m6_31  [color=red, key=1, label=reader, style=dashed];
m6_27 -> m6_28  [color=red, key=0, style=solid];
m6_27 -> m6_30  [color=red, key=0, style=solid];
m6_28 -> m6_29  [color=red, key=0, style=solid];
m6_28 -> m6_39  [color=red, key=2, style=dotted];
m6_28 -> m6_43  [color=red, key=1, label="lambda expression", style=dashed];
m6_30 -> m6_31  [color=red, key=0, style=solid];
m6_30 -> m6_41  [color=red, key=2, style=dotted];
m6_31 -> m6_32  [color=red, key=0, style=solid];
m6_31 -> m6_42  [color=red, key=2, style=dotted];
m6_29 -> m6_30  [color=red, key=0, style=solid];
m6_29 -> m6_40  [color=red, key=2, style=dotted];
m6_29 -> m6_29  [color=red, key=1, label=reader, style=dashed];
m6_29 -> m6_31  [color=red, key=1, label=reader, style=dashed];
m6_32 -> m6_18  [color=blue, key=0, style=bold];
m6_7 -> m6_8  [color=red, key=0, style=solid];
m6_7 -> m6_9  [color=red, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>", style=dashed];
m6_7 -> m6_14  [color=red, key=1, label=DateTimeZone, style=dashed];
m6_8 -> m6_9  [color=red, key=0, style=solid];
m6_8 -> m6_16  [color=red, key=2, style=dotted];
m6_8 -> m6_13  [color=red, key=1, label=subscriptions, style=dashed];
m6_8 -> m6_14  [color=red, key=1, label=subscriptions, style=dashed];
m6_9 -> m6_10  [color=red, key=0, style=solid];
m6_9 -> m6_14  [color=red, key=0, style=solid];
m6_9 -> m6_11  [color=red, key=1, label=request, style=dashed];
m6_14 -> m6_15  [color=red, key=0, style=solid];
m6_14 -> m6_21  [color=red, key=2, style=dotted];
m6_13 -> m6_9  [color=red, key=0, style=solid];
m6_13 -> m6_20  [color=red, key=2, style=dotted];
m6_10 -> m6_11  [color=red, key=0, style=solid];
m6_10 -> m6_17  [color=red, key=2, style=dotted];
m6_11 -> m6_12  [color=red, key=0, style=solid];
m6_11 -> m6_18  [color=red, key=2, style=dotted];
m6_11 -> m6_13  [color=red, key=1, label=subscription, style=dashed];
m6_12 -> m6_13  [color=red, key=0, style=solid];
m6_12 -> m6_19  [color=red, key=2, style=dotted];
m6_15 -> m6_7  [color=blue, key=0, style=bold];
m6_3 -> m6_4  [color=red, key=0, style=solid];
m6_4 -> m6_5  [color=red, key=0, style=solid];
m6_4 -> m6_6  [color=red, key=2, style=dotted];
m6_5 -> m6_3  [color=blue, key=0, style=bold];
m6_47 -> m6_1  [color=red, key=1, label="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider", style=dashed];
m6_47 -> m6_4  [color=red, key=1, label="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider", style=dashed];
m6_47 -> m6_10  [color=red, key=1, label="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider", style=dashed];
m6_47 -> m6_14  [color=red, key=1, label="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider", style=dashed];
m6_48 -> m6_44  [color=red, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
}
