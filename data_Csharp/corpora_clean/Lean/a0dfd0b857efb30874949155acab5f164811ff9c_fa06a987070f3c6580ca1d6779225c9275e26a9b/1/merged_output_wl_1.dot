digraph  {
m0_56 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", span="175-175"];
m0_77 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="BacktestResultPacket.cs", label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork),\r\n                new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, false, false, false),\r\n                new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="177-179"];
m0_78 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", span="175-175"];
m0_252 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="55-55"];
m0_76 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.GetOrderById(int)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.GetOrderById(int)", span="53-53"];
m0_140 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="313-313"];
m0_141 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="315-315"];
m0_144 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortMarketOrder(GetDefaultQuantity()), OrderStatus.Filled)", span="319-319"];
m0_145 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="322-322"];
m0_142 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace(''CLOSE FROM SHORT'')", span="316-316"];
m0_143 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="317-317"];
m0_146 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="313-313"];
m0_216 [cluster="object.Object()", file="BacktestResultPacket.cs", label="Entry object.Object()", span="0-0"];
m0_253 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="91-91"];
m0_50 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="196-196"];
m0_84 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="196-196"];
m0_75 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", span="392-392"];
m0_200 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", span="393-393"];
m0_201 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="395-395"];
m0_202 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="var qty = 1000000m", span="397-397"];
m0_205 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="Brokerage.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                lock (sync)\r\n                {\r\n                    remaining -= orderEvent.FillQuantity;\r\n                    Console.WriteLine(''Remaining: '' + remaining + '' FillQuantity: '' + orderEvent.FillQuantity);\r\n                    if (orderEvent.Status == OrderStatus.Filled)\r\n                    {\r\n                        manualResetEvent.Set();\r\n                    }\r\n                }\r\n            }", span="400-411"];
m0_209 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="manualResetEvent.WaitOne(2500)", span="419-419"];
m0_210 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="manualResetEvent.WaitOne(2500)", span="420-420"];
m0_211 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="manualResetEvent.WaitOne(2500)", span="421-421"];
m0_203 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="var remaining = qty", span="398-398"];
m0_207 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="var order = new MarketOrder(symbol, qty, DateTime.UtcNow) { Id = 1 }", span="415-415"];
m0_204 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="var sync = new object()", span="399-399"];
m0_206 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="var symbol = Symbols.EURUSD", span="414-414"];
m0_208 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="Brokerage.PlaceOrder(order)", span="416-416"];
m0_212 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="Console.WriteLine(''Remaining: '' + remaining)", span="423-423"];
m0_213 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="Assert.AreEqual(0, remaining)", span="424-424"];
m0_214 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", span="393-393"];
m0_74 [cluster="QuantConnect.Tests.Brokerages.SecurityProvider.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.SecurityProvider.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="52-52"];
m0_180 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", span="372-372"];
m0_181 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="374-374"];
m0_182 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="Log.Trace(''GET ACCOUNT HOLDINGS'')", span="375-375"];
m0_183 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="376-376"];
m0_184 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="var before = Brokerage.GetAccountHoldings()", span="377-377"];
m0_185 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="PlaceOrderWaitForStatus(new MarketOrder(Symbol, GetDefaultQuantity(), DateTime.Now))", span="379-379"];
m0_187 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="var beforeHoldings = before.FirstOrDefault(x => x.Symbol == Symbol)", span="383-383"];
m0_186 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="var after = Brokerage.GetAccountHoldings()", span="381-381"];
m0_188 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="var afterHoldings = after.FirstOrDefault(x => x.Symbol == Symbol)", span="384-384"];
m0_189 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="var beforeQuantity = beforeHoldings == null ? 0 : beforeHoldings.Quantity", span="386-386"];
m0_190 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="var afterQuantity = afterHoldings == null ? 0 : afterHoldings.Quantity", span="387-387"];
m0_191 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="Assert.AreEqual(GetDefaultQuantity(), afterQuantity - beforeQuantity)", span="389-389"];
m0_192 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", span="372-372"];
m0_18 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", span="76-76"];
m0_19 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="80-80"];
m0_20 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="81-81"];
m0_21 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BacktestResultPacket.cs", label="Log.Trace(''--- TEARDOWN ---'')", span="82-82"];
m0_22 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="83-83"];
m0_23 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="84-84"];
m0_24 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BacktestResultPacket.cs", label="Thread.Sleep(1000)", span="85-85"];
m0_25 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BacktestResultPacket.cs", label="CancelOpenOrders()", span="86-86"];
m0_26 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BacktestResultPacket.cs", label="LiquidateHoldings()", span="87-87"];
m0_27 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BacktestResultPacket.cs", label="Thread.Sleep(1000)", span="88-88"];
m0_28 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", span="76-76"];
m0_16 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", span="227-227"];
m0_100 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", color=red, community=0, file="BacktestResultPacket.cs", label="1: Log.Trace('''')", span="229-229"];
m0_101 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BacktestResultPacket.cs", label="Log.Trace(''CANCEL OPEN ORDERS'')", span="230-230"];
m0_102 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="231-231"];
m0_103 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BacktestResultPacket.cs", label="var openOrders = Brokerage.GetOpenOrders()", span="232-232"];
m0_104 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BacktestResultPacket.cs", label=openOrders, span="233-233"];
m0_105 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BacktestResultPacket.cs", label="Log.Trace(''Canceling: '' + openOrder)", span="235-235"];
m0_106 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BacktestResultPacket.cs", label="Brokerage.CancelOrder(openOrder)", span="236-236"];
m0_107 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", span="227-227"];
m0_274 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Entry lambda expression", span="496-514"];
m0_59 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace(''ORDER STATUS CHANGED: '' + args)", span="145-145"];
m0_61 [cluster="lambda expression", file="BacktestResultPacket.cs", label="args.Status == OrderStatus.Filled || args.Status == OrderStatus.PartiallyFilled", span="149-149"];
m0_62 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace(''FILL EVENT: '' + args.FillQuantity + '' units of '' + args.Symbol.ToString())", span="151-151"];
m0_64 [cluster="lambda expression", file="BacktestResultPacket.cs", label="_securityProvider.TryGetValue(args.Symbol, out security)", span="154-154"];
m0_65 [cluster="lambda expression", file="BacktestResultPacket.cs", label="var holding = _securityProvider[args.Symbol].Holdings", span="156-156"];
m0_66 [cluster="lambda expression", file="BacktestResultPacket.cs", label="holding.SetHoldings(args.FillPrice, holding.Quantity + args.FillQuantity)", span="157-157"];
m0_67 [cluster="lambda expression", file="BacktestResultPacket.cs", label="_securityProvider[args.Symbol] = CreateSecurity(args.Symbol)", span="161-161"];
m0_68 [cluster="lambda expression", file="BacktestResultPacket.cs", label="_securityProvider[args.Symbol].Holdings.SetHoldings(args.FillPrice, args.FillQuantity)", span="162-162"];
m0_69 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace(''--HOLDINGS: '' + _securityProvider[args.Symbol])", span="165-165"];
m0_70 [cluster="lambda expression", file="BacktestResultPacket.cs", label="var order = _orderProvider.GetOrderById(args.OrderId)", span="168-168"];
m0_71 [cluster="lambda expression", file="BacktestResultPacket.cs", label="order.Status = args.Status", span="169-169"];
m0_57 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Entry lambda expression", span="142-171"];
m0_58 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="144-144"];
m0_60 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="146-146"];
m0_72 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Exit lambda expression", span="142-171"];
m0_63 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Security security", span="153-153"];
m0_177 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Entry lambda expression", span="368-368"];
m0_178 [cluster="lambda expression", file="BacktestResultPacket.cs", label="x.Symbol == ''USD''", span="368-368"];
m0_179 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Exit lambda expression", span="368-368"];
m0_194 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Entry lambda expression", span="383-383"];
m0_197 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Entry lambda expression", span="384-384"];
m0_195 [cluster="lambda expression", file="BacktestResultPacket.cs", label="x.Symbol == Symbol", span="383-383"];
m0_196 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Exit lambda expression", span="383-383"];
m0_198 [cluster="lambda expression", file="BacktestResultPacket.cs", label="x.Symbol == Symbol", span="384-384"];
m0_199 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Exit lambda expression", span="384-384"];
m0_225 [cluster="lambda expression", file="BacktestResultPacket.cs", label="manualResetEvent.Set()", span="408-408"];
m0_221 [cluster="lambda expression", file="BacktestResultPacket.cs", label=sync, span="402-402"];
m0_222 [cluster="lambda expression", file="BacktestResultPacket.cs", label="remaining -= orderEvent.FillQuantity", span="404-404"];
m0_223 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Console.WriteLine(''Remaining: '' + remaining + '' FillQuantity: '' + orderEvent.FillQuantity)", span="405-405"];
m0_224 [cluster="lambda expression", file="BacktestResultPacket.cs", label="orderEvent.Status == OrderStatus.Filled", span="406-406"];
m0_220 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Entry lambda expression", span="400-411"];
m0_226 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Exit lambda expression", span="400-411"];
m0_258 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace(''ModifyOrderUntilFilled(): '' + order)", span="449-449"];
m0_256 [cluster="lambda expression", file="BacktestResultPacket.cs", label="filledResetEvent.Set()", span="445-445"];
m0_255 [cluster="lambda expression", file="BacktestResultPacket.cs", label="args.Status == OrderStatus.Filled", span="443-443"];
m0_257 [cluster="lambda expression", file="BacktestResultPacket.cs", label="args.Status == OrderStatus.Canceled || args.Status == OrderStatus.Invalid", span="447-447"];
m0_259 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Assert.Fail(''Unexpected order status: '' + args.Status)", span="450-450"];
m0_254 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Entry lambda expression", span="441-452"];
m0_260 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Exit lambda expression", span="441-452"];
m0_280 [cluster="lambda expression", file="BacktestResultPacket.cs", label="args.Status == expectedStatus", span="507-507"];
m0_279 [cluster="lambda expression", file="BacktestResultPacket.cs", label="requiredStatusEvent.Set()", span="504-504"];
m0_284 [cluster="lambda expression", file="BacktestResultPacket.cs", label="desiredStatusEvent.Set()", span="512-512"];
m0_275 [cluster="lambda expression", file="BacktestResultPacket.cs", label="args.Status == OrderStatus.Submitted || args.Status == OrderStatus.Invalid", span="499-499"];
m0_277 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace(''SUBMITTED: '' + args)", span="502-502"];
m0_282 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace(''EXPECTED: '' + args)", span="510-510"];
m0_276 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="501-501"];
m0_278 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="503-503"];
m0_281 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="509-509"];
m0_283 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="511-511"];
m0_285 [cluster="lambda expression", file="BacktestResultPacket.cs", label="Exit lambda expression", span="496-514"];
m0_73 [cluster="QuantConnect.Symbol.ToString()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m0_55 [cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="71-71"];
m0_81 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161"];
m0_124 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(decimal)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(decimal)", span="51-51"];
m0_134 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="304-304"];
m0_135 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="306-306"];
m0_138 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="309-309"];
m0_136 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace(''SHORT FROM ZERO'')", span="307-307"];
m0_137 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="308-308"];
m0_139 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="304-304"];
m0_147 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(decimal)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(decimal)", span="39-39"];
m0_219 [cluster="System.Console.WriteLine(string)", file="BacktestResultPacket.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_251 [cluster="System.Threading.EventWaitHandle.Reset()", file="BacktestResultPacket.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m0_215 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="BacktestResultPacket.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m0_158 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="344-344"];
m0_159 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="346-346"];
m0_162 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortMarketOrder(-GetDefaultQuantity()), OrderStatus.Filled)", span="350-350"];
m0_163 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="var order = PlaceOrderWaitForStatus(parameters.CreateLongOrder(2 * GetDefaultQuantity()), parameters.ExpectedStatus)", span="353-353"];
m0_164 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="parameters.ModifyUntilFilled", span="355-355"];
m0_165 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="ModifyOrderUntilFilled(order, parameters)", span="357-357"];
m0_160 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace(''LONG FROM SHORT'')", span="347-347"];
m0_161 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="348-348"];
m0_166 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="344-344"];
m0_117 [cluster="Unk.IsTrue", file="BacktestResultPacket.cs", label="Entry Unk.IsTrue", span=""];
m0_54 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.Add(QuantConnect.Orders.Order)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.Add(QuantConnect.Orders.Order)", span="42-42"];
m0_174 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77"];
m0_118 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="282-282"];
m0_119 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="284-284"];
m0_122 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="287-287"];
m0_120 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace(''LONG FROM ZERO'')", span="285-285"];
m0_121 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="286-286"];
m0_123 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="282-282"];
m0_217 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="84-84"];
m0_111 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", span="270-270"];
m0_112 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="BacktestResultPacket.cs", label="return 1;", span="272-272"];
m0_113 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", span="270-270"];
m0_85 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", span="202-202"];
m0_86 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.DisposeBrokerage(QuantConnect.Interfaces.IBrokerage)", span="202-202"];
m0_99 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", span="492-492"];
m0_261 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="var requiredStatusEvent = new ManualResetEvent(false)", span="494-494"];
m0_263 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="EventHandler<OrderEvent> brokerageOnOrderStatusChanged = (sender, args) =>\r\n            {\r\n                // no matter what, every order should fire at least one of these\r\n                if (args.Status == OrderStatus.Submitted || args.Status == OrderStatus.Invalid)\r\n                {\r\n                    Log.Trace('''');\r\n                    Log.Trace(''SUBMITTED: '' + args);\r\n                    Log.Trace('''');\r\n                    requiredStatusEvent.Set();\r\n                }\r\n                // make sure we fire the status we're expecting\r\n                if (args.Status == expectedStatus)\r\n                {\r\n                    Log.Trace('''');\r\n                    Log.Trace(''EXPECTED: '' + args);\r\n                    Log.Trace('''');\r\n                    desiredStatusEvent.Set();\r\n                }\r\n            }", span="496-514"];
m0_265 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="OrderProvider.Add(order)", span="518-518"];
m0_266 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="!Brokerage.PlaceOrder(order) && !allowFailedSubmission", span="519-519"];
m0_267 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="Assert.Fail(''Brokerage failed to place the order: '' + order)", span="521-521"];
m0_268 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="requiredStatusEvent.WaitOneAssertFail((int) (1000*secondsTimeout), ''Expected every order to fire a submitted or invalid status event'')", span="523-523"];
m0_269 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="desiredStatusEvent.WaitOneAssertFail((int) (1000*secondsTimeout), ''OrderStatus '' + expectedStatus + '' was not encountered within the timeout. Order Id:'' + order.Id)", span="524-524"];
m0_271 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="return order;", span="528-528"];
m0_262 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="var desiredStatusEvent = new ManualResetEvent(false)", span="495-495"];
m0_264 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="Brokerage.OrderStatusChanged += brokerageOnOrderStatusChanged", span="516-516"];
m0_270 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="Brokerage.OrderStatusChanged -= brokerageOnOrderStatusChanged", span="526-526"];
m0_272 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", span="492-492"];
m0_167 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", span="362-362"];
m0_168 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="364-364"];
m0_169 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BacktestResultPacket.cs", label="Log.Trace(''GET CASH BALANCE'')", span="365-365"];
m0_170 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="366-366"];
m0_171 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BacktestResultPacket.cs", label="var balance = Brokerage.GetCashBalance()", span="367-367"];
m0_172 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BacktestResultPacket.cs", label="Assert.AreEqual(1, balance.Count(x => x.Symbol == ''USD''))", span="368-368"];
m0_173 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", span="362-362"];
m0_80 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m0_53 [cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="65-65"];
m0_176 [cluster="Unk.AreEqual", file="BacktestResultPacket.cs", label="Entry Unk.AreEqual", span=""];
m0_193 [cluster="Unk.FirstOrDefault", file="BacktestResultPacket.cs", label="Entry Unk.FirstOrDefault", span=""];
m0_52 [cluster="Unk.Fail", file="BacktestResultPacket.cs", label="Entry Unk.Fail", span=""];
m0_125 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="291-291"];
m0_126 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="293-293"];
m0_129 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongMarketOrder(GetDefaultQuantity()), OrderStatus.Filled)", span="297-297"];
m0_130 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="300-300"];
m0_127 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace(''CLOSE FROM LONG'')", span="294-294"];
m0_128 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="295-295"];
m0_131 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="291-291"];
m0_148 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="326-326"];
m0_149 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="328-328"];
m0_152 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongMarketOrder(GetDefaultQuantity()))", span="332-332"];
m0_153 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="var order = PlaceOrderWaitForStatus(parameters.CreateShortOrder(2 * GetDefaultQuantity()), parameters.ExpectedStatus)", span="335-335"];
m0_154 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="parameters.ModifyUntilFilled", span="337-337"];
m0_155 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="ModifyOrderUntilFilled(order, parameters)", span="339-339"];
m0_150 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace(''SHORT FROM LONG'')", span="329-329"];
m0_151 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="330-330"];
m0_156 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="326-326"];
m0_15 [cluster="System.Threading.Thread.Sleep(int)", file="BacktestResultPacket.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m0_79 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m0_250 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="BacktestResultPacket.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m0_273 [cluster="System.Threading.WaitHandle.WaitOneAssertFail(int, string)", file="BacktestResultPacket.cs", label="Entry System.Threading.WaitHandle.WaitOneAssertFail(int, string)", span="32-32"];
m0_51 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103"];
m0_17 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", span="209-209"];
m0_87 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="211-211"];
m0_88 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label="Log.Trace(''LIQUIDATE HOLDINGS'')", span="212-212"];
m0_89 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="213-213"];
m0_90 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label="var holdings = Brokerage.GetAccountHoldings()", span="215-215"];
m0_91 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label=holdings, span="217-217"];
m0_92 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label="holding.Quantity == 0", span="219-219"];
m0_93 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label="Log.Trace(''Liquidating: '' + holding)", span="220-220"];
m0_94 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label="var order = new MarketOrder(holding.Symbol, (int)-holding.Quantity, DateTime.Now)", span="221-221"];
m0_95 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label="_orderProvider.Add(order)", span="222-222"];
m0_96 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label="PlaceOrderWaitForStatus(order, OrderStatus.Filled)", span="223-223"];
m0_97 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", span="209-209"];
m0_83 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m0_157 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", span="433-433"];
m0_228 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="order.Status == OrderStatus.Filled", span="435-435"];
m0_231 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="EventHandler<OrderEvent> brokerageOnOrderStatusChanged = (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    filledResetEvent.Set();\r\n                }\r\n                if (args.Status == OrderStatus.Canceled || args.Status == OrderStatus.Invalid)\r\n                {\r\n                    Log.Trace(''ModifyOrderUntilFilled(): '' + order);\r\n                    Assert.Fail(''Unexpected order status: '' + args.Status);\r\n                }\r\n            }", span="441-452"];
m0_234 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="Log.Trace(''MODIFY UNTIL FILLED: '' + order)", span="457-457"];
m0_237 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="!filledResetEvent.WaitOne(3000) && stopwatch.Elapsed.TotalSeconds < secondsTimeout", span="460-460"];
m0_239 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="order.Status == OrderStatus.PartiallyFilled", span="463-463"];
m0_240 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="var marketPrice = GetAskPrice(order.Symbol)", span="465-465"];
m0_242 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="var updateOrder = parameters.ModifyOrderToFill(Brokerage, order, marketPrice)", span="468-468"];
m0_244 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="order.Status == OrderStatus.Filled", span="471-471"];
m0_245 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="Log.Trace(''BrokerageTests.ModifyOrderUntilFilled(): '' + order)", span="473-473"];
m0_246 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="!Brokerage.UpdateOrder(order)", span="474-474"];
m0_229 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="return;", span="437-437"];
m0_230 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="var filledResetEvent = new ManualResetEvent(false)", span="440-440"];
m0_238 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="filledResetEvent.Reset()", span="462-462"];
m0_232 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="Brokerage.OrderStatusChanged += brokerageOnOrderStatusChanged", span="454-454"];
m0_248 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="Brokerage.OrderStatusChanged -= brokerageOnOrderStatusChanged", span="481-481"];
m0_233 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="456-456"];
m0_235 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="458-458"];
m0_236 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="var stopwatch = Stopwatch.StartNew()", span="459-459"];
m0_241 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="Log.Trace(''BrokerageTests.ModifyOrderUntilFilled(): Ask: '' + marketPrice)", span="466-466"];
m0_243 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label=updateOrder, span="469-469"];
m0_247 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="Assert.Fail(''Brokerage failed to update the order'')", span="476-476"];
m0_249 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", span="433-433"];
m0_82 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m0_108 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="98-98"];
m0_132 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(decimal)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(decimal)", span="35-35"];
m0_29 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", span="111-111"];
m0_30 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="113-113"];
m0_31 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Log.Trace(''- INITIALIZING BROKERAGE -'')", span="114-114"];
m0_32 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="115-115"];
m0_33 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="var brokerage = CreateBrokerage(OrderProvider, SecurityProvider)", span="117-117"];
m0_34 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="brokerage.Connect()", span="118-118"];
m0_35 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="!brokerage.IsConnected", span="120-120"];
m0_40 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="brokerage.GetOpenOrders()", span="128-128"];
m0_45 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="brokerage.GetAccountHoldings()", span="136-136"];
m0_47 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="brokerage.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                Log.Trace('''');\r\n                Log.Trace(''ORDER STATUS CHANGED: '' + args);\r\n                Log.Trace('''');\r\n\r\n                // we need to keep this maintained properly\r\n                if (args.Status == OrderStatus.Filled || args.Status == OrderStatus.PartiallyFilled)\r\n                {\r\n                    Log.Trace(''FILL EVENT: '' + args.FillQuantity + '' units of '' + args.Symbol.ToString());\r\n\r\n                    Security security;\r\n                    if (_securityProvider.TryGetValue(args.Symbol, out security))\r\n                    {\r\n                        var holding = _securityProvider[args.Symbol].Holdings;\r\n                        holding.SetHoldings(args.FillPrice, holding.Quantity + args.FillQuantity);\r\n                    }\r\n                    else\r\n                    {\r\n                        _securityProvider[args.Symbol] = CreateSecurity(args.Symbol);\r\n                        _securityProvider[args.Symbol].Holdings.SetHoldings(args.FillPrice, args.FillQuantity);\r\n                    }\r\n\r\n                    Log.Trace(''--HOLDINGS: '' + _securityProvider[args.Symbol]);\r\n\r\n                    // update order mapping\r\n                    var order = _orderProvider.GetOrderById(args.OrderId);\r\n                    order.Status = args.Status;\r\n                }\r\n            }", span="142-171"];
m0_48 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="return brokerage;", span="172-172"];
m0_36 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Assert.Fail(''Failed to connect to brokerage'')", span="122-122"];
m0_37 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="125-125"];
m0_38 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Log.Trace(''GET OPEN ORDERS'')", span="126-126"];
m0_39 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="127-127"];
m0_41 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="OrderProvider.Add(openOrder)", span="130-130"];
m0_42 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="133-133"];
m0_43 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Log.Trace(''GET ACCOUNT HOLDINGS'')", span="134-134"];
m0_44 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="135-135"];
m0_46 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="SecurityProvider[accountHolding.Symbol] = CreateSecurity(accountHolding.Symbol)", span="140-140"];
m0_49 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", span="111-111"];
m0_109 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", span="265-265"];
m0_110 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", span="265-265"];
m0_133 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(decimal)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(decimal)", span="47-47"];
m0_175 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="BacktestResultPacket.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m0_0 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", span="58-58"];
m0_1 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="60-60"];
m0_2 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="61-61"];
m0_3 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="Log.Trace(''--- SETUP ---'')", span="62-62"];
m0_4 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="63-63"];
m0_5 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="Log.Trace('''')", span="64-64"];
m0_6 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="_brokerage = null", span="66-66"];
m0_7 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="_orderProvider = null", span="67-67"];
m0_8 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="_securityProvider = null", span="68-68"];
m0_9 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="Thread.Sleep(1000)", span="69-69"];
m0_10 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="CancelOpenOrders()", span="70-70"];
m0_11 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="LiquidateHoldings()", span="71-71"];
m0_12 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="Thread.Sleep(1000)", span="72-72"];
m0_13 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", span="58-58"];
m0_14 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m0_218 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="BacktestResultPacket.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m0_227 [cluster="System.Threading.EventWaitHandle.Set()", file="BacktestResultPacket.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m0_98 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="BacktestResultPacket.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m0_114 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="BacktestResultPacket.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", span="276-276"];
m0_115 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="BacktestResultPacket.cs", label="Assert.IsTrue(Brokerage.IsConnected)", span="278-278"];
m0_116 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="BacktestResultPacket.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", span="276-276"];
m0_286 [file="BacktestResultPacket.cs", label="QuantConnect.Tests.Brokerages.BrokerageTests", span=""];
m0_287 [file="BacktestResultPacket.cs", label=sync, span=""];
m0_288 [file="BacktestResultPacket.cs", label=remaining, span=""];
m0_289 [file="BacktestResultPacket.cs", label=manualResetEvent, span=""];
m0_290 [file="BacktestResultPacket.cs", label=filledResetEvent, span=""];
m0_291 [file="BacktestResultPacket.cs", label="QuantConnect.Orders.Order", span=""];
m0_292 [file="BacktestResultPacket.cs", label=requiredStatusEvent, span=""];
m0_293 [file="BacktestResultPacket.cs", label="QuantConnect.Orders.OrderStatus", span=""];
m0_294 [file="BacktestResultPacket.cs", label=desiredStatusEvent, span=""];
m1_90 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var holdings = Brokerage.GetAccountHoldings()", span="215-215"];
m1_22 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="83-83"];
m1_61 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="args.Status == OrderStatus.Filled || args.Status == OrderStatus.PartiallyFilled", span="149-149"];
m1_28 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", span="76-76"];
m1_29 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", span="111-111"];
m1_30 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="113-113"];
m1_31 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''- INITIALIZING BROKERAGE -'')", span="114-114"];
m1_32 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="115-115"];
m1_33 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var brokerage = CreateBrokerage(OrderProvider, SecurityProvider)", span="117-117"];
m1_34 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="brokerage.Connect()", span="118-118"];
m1_35 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="!brokerage.IsConnected", span="120-120"];
m1_36 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Assert.Fail(''Failed to connect to brokerage'')", span="122-122"];
m1_37 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="125-125"];
m1_38 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''GET OPEN ORDERS'')", span="126-126"];
m1_39 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="127-127"];
m1_40 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="brokerage.GetOpenOrders()", span="128-128"];
m1_74 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.PollingOnTick(object, System.EventArgs)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="AppendConsole(runError.Message, Color.Red)", span="159-159"];
m1_100 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="229-229"];
m1_55 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="88-88"];
m1_92 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="holding.Quantity == 0", span="219-219"];
m1_94 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var order = new MarketOrder(holding.Symbol, (int)-holding.Quantity, DateTime.Now)", span="221-221"];
m1_95 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_orderProvider.Add(order)", span="222-222"];
m1_96 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="PlaceOrderWaitForStatus(order, OrderStatus.Filled)", span="223-223"];
m1_97 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", span="209-209"];
m1_147 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(decimal)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(decimal)", span="39-39"];
m1_81 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.PollingOnTick(object, System.EventArgs)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="log != null", span="169-169"];
m1_219 [cluster="System.Console.WriteLine(string)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m1_41 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="OrderProvider.Add(openOrder)", span="130-130"];
m1_134 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="304-304"];
m1_138 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="309-309"];
m1_137 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="308-308"];
m1_135 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="306-306"];
m1_136 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''SHORT FROM ZERO'')", span="307-307"];
m1_139 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="304-304"];
m1_117 [cluster="Unk.IsTrue", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry Unk.IsTrue", span=""];
m1_98 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m1_54 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="158-158"];
m1_53 [cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="65-65"];
m1_56 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", span="175-175"];
m1_111 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", span="270-270"];
m1_112 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="return 1;", span="272-272"];
m1_113 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", span="270-270"];
m1_80 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.PollingOnTick(object, System.EventArgs)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var log = message as LogPacket", span="168-168"];
m1_44 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="135-135"];
m1_62 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''FILL EVENT: '' + args.FillQuantity + '' units of '' + args.Symbol.ToString())", span="151-151"];
m1_63 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Security security", span="153-153"];
m1_64 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_securityProvider.TryGetValue(args.Symbol, out security)", span="154-154"];
m1_65 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var holding = _securityProvider[args.Symbol].Holdings", span="156-156"];
m1_66 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="holding.SetHoldings(args.FillPrice, holding.Quantity + args.FillQuantity)", span="157-157"];
m1_67 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_securityProvider[args.Symbol] = CreateSecurity(args.Symbol)", span="161-161"];
m1_72 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit lambda expression", span="142-171"];
m1_76 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.GetOrderById(int)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.GetOrderById(int)", span="53-53"];
m1_84 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="196-196"];
m1_68 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_securityProvider[args.Symbol].Holdings.SetHoldings(args.FillPrice, args.FillQuantity)", span="162-162"];
m1_69 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''--HOLDINGS: '' + _securityProvider[args.Symbol])", span="165-165"];
m1_70 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var order = _orderProvider.GetOrderById(args.OrderId)", span="168-168"];
m1_71 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="order.Status = args.Status", span="169-169"];
m1_75 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", span="392-392"];
m1_79 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m1_83 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m1_87 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="211-211"];
m1_88 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''LIQUIDATE HOLDINGS'')", span="212-212"];
m1_73 [cluster="QuantConnect.Symbol.ToString()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m1_77 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork),\r\n                new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, false, false, false),\r\n                new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="177-179"];
m1_78 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", span="175-175"];
m1_82 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m1_85 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.PollingOnTick(object, System.EventArgs)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="debug != null", span="174-174"];
m1_86 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.PollingOnTick(object, System.EventArgs)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="AppendConsole(debug.Message)", span="174-174"];
m1_89 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="213-213"];
m1_157 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", span="433-433"];
m1_232 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Brokerage.OrderStatusChanged += brokerageOnOrderStatusChanged", span="454-454"];
m1_240 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var marketPrice = GetAskPrice(order.Symbol)", span="465-465"];
m1_242 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var updateOrder = parameters.ModifyOrderToFill(Brokerage, order, marketPrice)", span="468-468"];
m1_246 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="!Brokerage.UpdateOrder(order)", span="474-474"];
m1_248 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Brokerage.OrderStatusChanged -= brokerageOnOrderStatusChanged", span="481-481"];
m1_231 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="EventHandler<OrderEvent> brokerageOnOrderStatusChanged = (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    filledResetEvent.Set();\r\n                }\r\n                if (args.Status == OrderStatus.Canceled || args.Status == OrderStatus.Invalid)\r\n                {\r\n                    Log.Trace(''ModifyOrderUntilFilled(): '' + order);\r\n                    Assert.Fail(''Unexpected order status: '' + args.Status);\r\n                }\r\n            }", span="441-452"];
m1_233 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="456-456"];
m1_239 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="order.Status == OrderStatus.PartiallyFilled", span="463-463"];
m1_241 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''BrokerageTests.ModifyOrderUntilFilled(): Ask: '' + marketPrice)", span="466-466"];
m1_243 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label=updateOrder, span="469-469"];
m1_245 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''BrokerageTests.ModifyOrderUntilFilled(): '' + order)", span="473-473"];
m1_247 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Assert.Fail(''Brokerage failed to update the order'')", span="476-476"];
m1_237 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="!filledResetEvent.WaitOne(3000) && stopwatch.Elapsed.TotalSeconds < secondsTimeout", span="460-460"];
m1_244 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="order.Status == OrderStatus.Filled", span="471-471"];
m1_234 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''MODIFY UNTIL FILLED: '' + order)", span="457-457"];
m1_235 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="458-458"];
m1_228 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="order.Status == OrderStatus.Filled", span="435-435"];
m1_230 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var filledResetEvent = new ManualResetEvent(false)", span="440-440"];
m1_238 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="filledResetEvent.Reset()", span="462-462"];
m1_236 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var stopwatch = Stopwatch.StartNew()", span="459-459"];
m1_229 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="return;", span="437-437"];
m1_249 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", span="433-433"];
m1_109 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", span="265-265"];
m1_110 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", span="265-265"];
m1_218 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m1_52 [cluster="Unk.Fail", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry Unk.Fail", span=""];
m1_26 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="LiquidateHoldings()", span="87-87"];
m1_50 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LaunchLean()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="return engine;", span="128-128"];
m1_16 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_polling = new Timer()", span="73-73"];
m1_103 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var openOrders = Brokerage.GetOpenOrders()", span="232-232"];
m1_106 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Brokerage.CancelOrder(openOrder)", span="236-236"];
m1_102 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BasicTemplateOptionStrategyAlgorithm.cs", label=engine, span=""];
m1_104 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BasicTemplateOptionStrategyAlgorithm.cs", label=openOrders, span="233-233"];
m1_105 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''Canceling: '' + openOrder)", span="235-235"];
m1_101 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="QuantConnect.Views.WinForms.LeanEngineWinForm", span=""];
m1_107 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", span="227-227"];
m1_254 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry lambda expression", span="441-452"];
m1_59 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''ORDER STATUS CHANGED: '' + args)", span="145-145"];
m1_58 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="144-144"];
m1_60 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="146-146"];
m1_195 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="x.Symbol == Symbol", span="383-383"];
m1_198 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="x.Symbol == Symbol", span="384-384"];
m1_57 [cluster="System.Threading.Thread.Start()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m1_194 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry lambda expression", span="383-383"];
m1_196 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit lambda expression", span="383-383"];
m1_197 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry lambda expression", span="384-384"];
m1_199 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit lambda expression", span="384-384"];
m1_222 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="remaining -= orderEvent.FillQuantity", span="404-404"];
m1_223 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Console.WriteLine(''Remaining: '' + remaining + '' FillQuantity: '' + orderEvent.FillQuantity)", span="405-405"];
m1_224 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="orderEvent.Status == OrderStatus.Filled", span="406-406"];
m1_258 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''ModifyOrderUntilFilled(): '' + order)", span="449-449"];
m1_277 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''SUBMITTED: '' + args)", span="502-502"];
m1_282 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''EXPECTED: '' + args)", span="510-510"];
m1_276 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="501-501"];
m1_278 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="503-503"];
m1_281 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="509-509"];
m1_283 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="511-511"];
m1_280 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="args.Status == expectedStatus", span="507-507"];
m1_177 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry lambda expression", span="368-368"];
m1_225 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="manualResetEvent.Set()", span="408-408"];
m1_221 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label=sync, span="402-402"];
m1_220 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry lambda expression", span="400-411"];
m1_226 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit lambda expression", span="400-411"];
m1_255 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="args.Status == OrderStatus.Filled", span="443-443"];
m1_257 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="args.Status == OrderStatus.Canceled || args.Status == OrderStatus.Invalid", span="447-447"];
m1_259 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Assert.Fail(''Unexpected order status: '' + args.Status)", span="450-450"];
m1_275 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="args.Status == OrderStatus.Submitted || args.Status == OrderStatus.Invalid", span="499-499"];
m1_274 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry lambda expression", span="496-514"];
m1_279 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="requiredStatusEvent.Set()", span="504-504"];
m1_284 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="desiredStatusEvent.Set()", span="512-512"];
m1_285 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit lambda expression", span="496-514"];
m1_179 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit lambda expression", span="368-368"];
m1_178 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="x.Symbol == ''USD''", span="368-368"];
m1_256 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="filledResetEvent.Set()", span="445-445"];
m1_260 [cluster="lambda expression", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit lambda expression", span="441-452"];
m1_215 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m1_217 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="84-84"];
m1_51 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LaunchLean()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Views.WinForms.LeanEngineWinForm.LaunchLean()", span="114-114"];
m1_132 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(decimal)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(decimal)", span="35-35"];
m1_133 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(decimal)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(decimal)", span="47-47"];
m1_0 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", span="47-47"];
m1_8 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", color=green, community=0, file="BasicTemplateOptionStrategyAlgorithm.cs", label="0: _console = new RichTextBox()", span="61-61"];
m1_7 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Icon = new Icon(''../../../lean.ico'')", span="58-58"];
m1_9 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_console.Parent = this", span="62-62"];
m1_6 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="WindowState = FormWindowState.Maximized", span="57-57"];
m1_10 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", color=red, community=0, file="BasicTemplateOptionStrategyAlgorithm.cs", label="0: _console.ReadOnly = true", span="63-63"];
m1_11 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_console.Multiline = true", span="64-64"];
m1_5 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="CenterToScreen()", span="56-56"];
m1_12 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_console.Location = new Point(0, 0)", span="65-65"];
m1_4 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", color=red, community=0, file="BasicTemplateOptionStrategyAlgorithm.cs", label="1: MinimumSize = new Size(1024, 768)", span="55-55"];
m1_1 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_resultsHandler = engine.AlgorithmHandlers.Results", span="50-50"];
m1_2 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Text = ''QuantConnect Lean Algorithmic Trading Engine: v'' + Constants.Version", span="53-53"];
m1_3 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Size = new Size(1024,768)", span="54-54"];
m1_13 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_console.Dock = DockStyle.Fill", span="66-66"];
m1_14 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_console.KeyUp += ConsoleOnKeyUp", span="67-67"];
m1_227 [cluster="System.Threading.EventWaitHandle.Set()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m1_24 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Thread.Sleep(1000)", span="85-85"];
m1_253 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="91-91"];
m1_91 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label=holdings, span="217-217"];
m1_252 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="55-55"];
m1_216 [cluster="object.Object()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry object.Object()", span="0-0"];
m1_25 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="CancelOpenOrders()", span="86-86"];
m1_21 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''--- TEARDOWN ---'')", span="82-82"];
m1_43 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''GET ACCOUNT HOLDINGS'')", span="134-134"];
m1_45 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="brokerage.GetAccountHoldings()", span="136-136"];
m1_46 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="SecurityProvider[accountHolding.Symbol] = CreateSecurity(accountHolding.Symbol)", span="140-140"];
m1_47 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="brokerage.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                Log.Trace('''');\r\n                Log.Trace(''ORDER STATUS CHANGED: '' + args);\r\n                Log.Trace('''');\r\n\r\n                // we need to keep this maintained properly\r\n                if (args.Status == OrderStatus.Filled || args.Status == OrderStatus.PartiallyFilled)\r\n                {\r\n                    Log.Trace(''FILL EVENT: '' + args.FillQuantity + '' units of '' + args.Symbol.ToString());\r\n\r\n                    Security security;\r\n                    if (_securityProvider.TryGetValue(args.Symbol, out security))\r\n                    {\r\n                        var holding = _securityProvider[args.Symbol].Holdings;\r\n                        holding.SetHoldings(args.FillPrice, holding.Quantity + args.FillQuantity);\r\n                    }\r\n                    else\r\n                    {\r\n                        _securityProvider[args.Symbol] = CreateSecurity(args.Symbol);\r\n                        _securityProvider[args.Symbol].Holdings.SetHoldings(args.FillPrice, args.FillQuantity);\r\n                    }\r\n\r\n                    Log.Trace(''--HOLDINGS: '' + _securityProvider[args.Symbol]);\r\n\r\n                    // update order mapping\r\n                    var order = _orderProvider.GetOrderById(args.OrderId);\r\n                    order.Status = args.Status;\r\n                }\r\n            }", span="142-171"];
m1_48 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="return brokerage;", span="172-172"];
m1_49 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", span="111-111"];
m1_180 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", span="372-372"];
m1_184 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var before = Brokerage.GetAccountHoldings()", span="377-377"];
m1_185 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="PlaceOrderWaitForStatus(new MarketOrder(Symbol, GetDefaultQuantity(), DateTime.Now))", span="379-379"];
m1_186 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var after = Brokerage.GetAccountHoldings()", span="381-381"];
m1_187 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var beforeHoldings = before.FirstOrDefault(x => x.Symbol == Symbol)", span="383-383"];
m1_188 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var afterHoldings = after.FirstOrDefault(x => x.Symbol == Symbol)", span="384-384"];
m1_191 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Assert.AreEqual(GetDefaultQuantity(), afterQuantity - beforeQuantity)", span="389-389"];
m1_183 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="376-376"];
m1_189 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var beforeQuantity = beforeHoldings == null ? 0 : beforeHoldings.Quantity", span="386-386"];
m1_190 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var afterQuantity = afterHoldings == null ? 0 : afterHoldings.Quantity", span="387-387"];
m1_181 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="374-374"];
m1_182 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''GET ACCOUNT HOLDINGS'')", span="375-375"];
m1_192 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", span="372-372"];
m1_42 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="133-133"];
m1_251 [cluster="System.Threading.EventWaitHandle.Reset()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m1_23 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="84-84"];
m1_118 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="282-282"];
m1_122 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="287-287"];
m1_121 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="286-286"];
m1_119 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="284-284"];
m1_120 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''LONG FROM ZERO'')", span="285-285"];
m1_123 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="282-282"];
m1_99 [cluster="RichTextBox.AppendText(string, Color)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry RichTextBox.AppendText(string, Color)", span="27-27"];
m1_264 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Brokerage.OrderStatusChanged += brokerageOnOrderStatusChanged", span="516-516"];
m1_265 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="OrderProvider.Add(order)", span="518-518"];
m1_266 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="!Brokerage.PlaceOrder(order) && !allowFailedSubmission", span="519-519"];
m1_270 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Brokerage.OrderStatusChanged -= brokerageOnOrderStatusChanged", span="526-526"];
m1_263 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="EventHandler<OrderEvent> brokerageOnOrderStatusChanged = (sender, args) =>\r\n            {\r\n                // no matter what, every order should fire at least one of these\r\n                if (args.Status == OrderStatus.Submitted || args.Status == OrderStatus.Invalid)\r\n                {\r\n                    Log.Trace('''');\r\n                    Log.Trace(''SUBMITTED: '' + args);\r\n                    Log.Trace('''');\r\n                    requiredStatusEvent.Set();\r\n                }\r\n                // make sure we fire the status we're expecting\r\n                if (args.Status == expectedStatus)\r\n                {\r\n                    Log.Trace('''');\r\n                    Log.Trace(''EXPECTED: '' + args);\r\n                    Log.Trace('''');\r\n                    desiredStatusEvent.Set();\r\n                }\r\n            }", span="496-514"];
m1_267 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Assert.Fail(''Brokerage failed to place the order: '' + order)", span="521-521"];
m1_268 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="requiredStatusEvent.WaitOneAssertFail((int) (1000*secondsTimeout), ''Expected every order to fire a submitted or invalid status event'')", span="523-523"];
m1_269 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="desiredStatusEvent.WaitOneAssertFail((int) (1000*secondsTimeout), ''OrderStatus '' + expectedStatus + '' was not encountered within the timeout. Order Id:'' + order.Id)", span="524-524"];
m1_271 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="return order;", span="528-528"];
m1_261 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var requiredStatusEvent = new ManualResetEvent(false)", span="494-494"];
m1_262 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var desiredStatusEvent = new ManualResetEvent(false)", span="495-495"];
m1_272 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", span="492-492"];
m1_167 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", span="362-362"];
m1_171 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var balance = Brokerage.GetCashBalance()", span="367-367"];
m1_170 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="366-366"];
m1_172 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Assert.AreEqual(1, balance.Count(x => x.Symbol == ''USD''))", span="368-368"];
m1_168 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="364-364"];
m1_169 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''GET CASH BALANCE'')", span="365-365"];
m1_173 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", span="362-362"];
m1_176 [cluster="Unk.AreEqual", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry Unk.AreEqual", span=""];
m1_193 [cluster="Unk.FirstOrDefault", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry Unk.FirstOrDefault", span=""];
m1_148 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="326-326"];
m1_152 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongMarketOrder(GetDefaultQuantity()))", span="332-332"];
m1_153 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var order = PlaceOrderWaitForStatus(parameters.CreateShortOrder(2 * GetDefaultQuantity()), parameters.ExpectedStatus)", span="335-335"];
m1_155 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="ModifyOrderUntilFilled(order, parameters)", span="339-339"];
m1_151 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="330-330"];
m1_154 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="parameters.ModifyUntilFilled", span="337-337"];
m1_149 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="328-328"];
m1_150 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''SHORT FROM LONG'')", span="329-329"];
m1_156 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="326-326"];
m1_250 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m1_93 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''Liquidating: '' + holding)", span="220-220"];
m1_175 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m1_27 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Thread.Sleep(1000)", span="88-88"];
m1_140 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="313-313"];
m1_144 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortMarketOrder(GetDefaultQuantity()), OrderStatus.Filled)", span="319-319"];
m1_145 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="322-322"];
m1_143 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="317-317"];
m1_141 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="315-315"];
m1_142 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''CLOSE FROM SHORT'')", span="316-316"];
m1_146 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="313-313"];
m1_200 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", span="393-393"];
m1_205 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Brokerage.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                lock (sync)\r\n                {\r\n                    remaining -= orderEvent.FillQuantity;\r\n                    Console.WriteLine(''Remaining: '' + remaining + '' FillQuantity: '' + orderEvent.FillQuantity);\r\n                    if (orderEvent.Status == OrderStatus.Filled)\r\n                    {\r\n                        manualResetEvent.Set();\r\n                    }\r\n                }\r\n            }", span="400-411"];
m1_208 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Brokerage.PlaceOrder(order)", span="416-416"];
m1_201 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="395-395"];
m1_203 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var remaining = qty", span="398-398"];
m1_204 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var sync = new object()", span="399-399"];
m1_206 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var symbol = Symbols.EURUSD", span="414-414"];
m1_207 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var order = new MarketOrder(symbol, qty, DateTime.UtcNow) { Id = 1 }", span="415-415"];
m1_209 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="manualResetEvent.WaitOne(2500)", span="419-419"];
m1_213 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Assert.AreEqual(0, remaining)", span="424-424"];
m1_202 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var qty = 1000000m", span="397-397"];
m1_210 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="manualResetEvent.WaitOne(2500)", span="420-420"];
m1_211 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="manualResetEvent.WaitOne(2500)", span="421-421"];
m1_212 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Console.WriteLine(''Remaining: '' + remaining)", span="423-423"];
m1_214 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", span="393-393"];
m1_18 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_polling.Tick += PollingOnTick", span="75-75"];
m1_19 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="_polling.Start()", span="76-76"];
m1_20 [cluster="QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Views.WinForms.LeanEngineWinForm.LeanEngineWinForm(QuantConnect.Lean.Engine.Engine)", span="47-47"];
m1_124 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(decimal)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(decimal)", span="51-51"];
m1_158 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="344-344"];
m1_162 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortMarketOrder(-GetDefaultQuantity()), OrderStatus.Filled)", span="350-350"];
m1_163 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="var order = PlaceOrderWaitForStatus(parameters.CreateLongOrder(2 * GetDefaultQuantity()), parameters.ExpectedStatus)", span="353-353"];
m1_165 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="ModifyOrderUntilFilled(order, parameters)", span="357-357"];
m1_161 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="348-348"];
m1_164 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="parameters.ModifyUntilFilled", span="355-355"];
m1_159 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="346-346"];
m1_160 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''LONG FROM SHORT'')", span="347-347"];
m1_166 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="344-344"];
m1_125 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="291-291"];
m1_129 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongMarketOrder(GetDefaultQuantity()), OrderStatus.Filled)", span="297-297"];
m1_130 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="300-300"];
m1_128 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="295-295"];
m1_126 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace('''')", span="293-293"];
m1_127 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Log.Trace(''CLOSE FROM LONG'')", span="294-294"];
m1_131 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="291-291"];
m1_15 [cluster="System.Threading.Thread.Sleep(int)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_17 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", span="209-209"];
m1_273 [cluster="System.Threading.WaitHandle.WaitOneAssertFail(int, string)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry System.Threading.WaitHandle.WaitOneAssertFail(int, string)", span="32-32"];
m1_108 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="98-98"];
m1_174 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77"];
m1_114 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", span="276-276"];
m1_115 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Assert.IsTrue(Brokerage.IsConnected)", span="278-278"];
m1_116 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="BasicTemplateOptionStrategyAlgorithm.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", span="276-276"];
m1_286 [file="BasicTemplateOptionStrategyAlgorithm.cs", label="QuantConnect.Tests.Brokerages.BrokerageTests", span=""];
m1_288 [file="BasicTemplateOptionStrategyAlgorithm.cs", label=remaining, span=""];
m1_291 [file="BasicTemplateOptionStrategyAlgorithm.cs", label="QuantConnect.Orders.Order", span=""];
m1_293 [file="BasicTemplateOptionStrategyAlgorithm.cs", label="QuantConnect.Orders.OrderStatus", span=""];
m1_289 [file="BasicTemplateOptionStrategyAlgorithm.cs", label=manualResetEvent, span=""];
m1_287 [file="BasicTemplateOptionStrategyAlgorithm.cs", label=sync, span=""];
m1_292 [file="BasicTemplateOptionStrategyAlgorithm.cs", label=requiredStatusEvent, span=""];
m1_294 [file="BasicTemplateOptionStrategyAlgorithm.cs", label=desiredStatusEvent, span=""];
m1_290 [file="BasicTemplateOptionStrategyAlgorithm.cs", label=filledResetEvent, span=""];
m2_32 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", span="115-115"];
m2_0 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="51-51"];
m2_1 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BasicTemplateOptionTradesAlgorithm.cs", label="_algorithm = algorithm", span="54-54"];
m2_2 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BasicTemplateOptionTradesAlgorithm.cs", label="_resultHandler =  resultHandler", span="55-55"];
m2_3 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=green, community=0, file="BasicTemplateOptionTradesAlgorithm.cs", label="0: Add(ScheduledEventFactory.EveryAlgorithmEndOfDay(_algorithm, _resultHandler, _algorithm.StartDate, _algorithm.EndDate, ScheduledEvent.AlgorithmEndOfDayDelta))", span="58-58"];
m2_4 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=red, community=0, file="BasicTemplateOptionTradesAlgorithm.cs", label="0: _algorithm.Securities.Values.Where(x => !x.IsInternalFeed())", span="61-61"];
m2_5 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=red, community=0, file="BasicTemplateOptionTradesAlgorithm.cs", label="0: Add(ScheduledEventFactory.EverySecurityEndOfDay(_algorithm, _resultHandler, security, algorithm.StartDate, _algorithm.EndDate, ScheduledEvent.SecurityEndOfDayDelta))", span="63-63"];
m2_6 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=red, community=0, file="BasicTemplateOptionTradesAlgorithm.cs", label="0: _scheduledEvents", span="66-66"];
m2_8 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", color=red, community=0, file="BasicTemplateOptionTradesAlgorithm.cs", label="0: scheduledEvent.Value.IsLoggingEnabled = Log.DebuggingEnabled", span="71-71"];
m2_7 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BasicTemplateOptionTradesAlgorithm.cs", label="scheduledEvent.Value.SkipEventsUntil(algorithm.UtcTime)", span="69-69"];
m2_9 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="51-51"];
m2_42 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label=ScheduledEventException, span="140-140"];
m2_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1089-1089"];
m2_14 [cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", span="183-183"];
m2_34 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.SetTime(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="scheduledEvent.Value.Scan(time)", span="120-120"];
m2_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1165-1165"];
m2_21 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionTradesAlgorithm.cs", label="OptionChain chain", span="61-61"];
m2_22 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0, file="BasicTemplateOptionTradesAlgorithm.cs", label="0: slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="62-62"];
m2_23 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionTradesAlgorithm.cs", label="var contract = chain\r\n                        .OrderBy(x => Math.Abs(chain.Underlying.Price - x.Strike))\r\n                        .ThenByDescending(x => x.Expiry)\r\n                        .FirstOrDefault()", span="65-68"];
m2_25 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionTradesAlgorithm.cs", label="MarketOrder(contract.Symbol, 1)", span="72-72"];
m2_24 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionTradesAlgorithm.cs", label="contract != null", span="70-70"];
m2_26 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Liquidate()", span="78-78"];
m2_46 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="_algorithm.RunTimeError = new Exception(errorMessage)", span="150-150"];
m2_47 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", span="128-128"];
m2_48 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="482-482"];
m2_19 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", span="57-57"];
m2_20 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionTradesAlgorithm.cs", label="!Portfolio.Invested", span="59-59"];
m2_27 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", span="105-105"];
m2_28 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", color=red, community=0, file="BasicTemplateOptionTradesAlgorithm.cs", label="0: ScheduledEvent scheduledEvent", span="107-107"];
m2_29 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.Remove(string)", file="BasicTemplateOptionTradesAlgorithm.cs", label="_scheduledEvents.TryRemove(name, out scheduledEvent)", span="108-108"];
m2_30 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m2_15 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m2_40 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="_algorithm.SetDateTime(scheduledEvent.Value.NextEventUtcTime)", span="134-134"];
m2_39 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="scheduledEvent.Value.NextEventUtcTime < time", span="132-132"];
m2_43 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="var errorMessage = $''BacktestingRealTimeHandler.Run(): There was an error in a scheduled event {scheduledEvent.Key}. The error was {scheduledEventException.ScheduledEventExceptionMessage}''", span="142-142"];
m2_41 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="scheduledEvent.Value.Scan(scheduledEvent.Value.NextEventUtcTime)", span="138-138"];
m2_44 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Log.Error(errorMessage)", span="144-144"];
m2_45 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="_resultHandler.RuntimeError(errorMessage)", span="146-146"];
m2_16 [cluster="System.TimeSpan.FromDays(double)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m2_17 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="315-315"];
m2_49 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="169-169"];
m2_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1414-1414"];
m2_51 [cluster="System.Exception.Exception(string)", file="BasicTemplateOptionTradesAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", span=""];
m2_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m2_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m2_10 [cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="64-64"];
m2_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m2_36 [cluster="decimal.ToString(string)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry decimal.ToString(string)", span="0-0"];
m2_38 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label=_scheduledEvents, span="130-130"];
m2_50 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="135-135"];
m2_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="1046-1046"];
m2_37 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.ScanPastEvents(System.DateTime)", span="128-128"];
m2_52 [file="BasicTemplateOptionTradesAlgorithm.cs", label=chain, span=""];
m2_54 [file="BasicTemplateOptionTradesAlgorithm.cs", label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", span=""];
m3_54 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="Charting.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m3_111 [cluster="System.TimeSpan.FromHours(double)", file="Charting.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m3_106 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Charting.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_59 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.DateTime, System.Action, bool)", span="49-49"];
m3_130 [cluster="System.Collections.Generic.List<T>.Clear()", file="Charting.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m3_7 [cluster="System.Collections.Generic.List<T>.List()", file="Charting.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_73 [cluster="lambda expression", file="Charting.cs", label="Entry lambda expression", span="225-237"];
m3_63 [cluster="lambda expression", file="Charting.cs", label="_algorithm.OnEndOfDay(symbol)", span="209-209"];
m3_64 [cluster="lambda expression", file="Charting.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event({0}) for Day({1})'', symbol, _time.ToShortDateString()))", span="210-210"];
m3_66 [cluster="lambda expression", file="Charting.cs", label="_resultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace)", span="214-214"];
m3_67 [cluster="lambda expression", file="Charting.cs", label="Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message)", span="215-215"];
m3_77 [cluster="lambda expression", file="Charting.cs", label="_resultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace)", span="234-234"];
m3_78 [cluster="lambda expression", file="Charting.cs", label="Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message)", span="235-235"];
m3_62 [cluster="lambda expression", file="Charting.cs", label="Entry lambda expression", span="205-217"];
m3_65 [cluster="lambda expression", file="Charting.cs", label=Exception, span="212-212"];
m3_68 [cluster="lambda expression", file="Charting.cs", label="Exit lambda expression", span="205-217"];
m3_74 [cluster="lambda expression", file="Charting.cs", label="_algorithm.OnEndOfDay()", span="229-229"];
m3_75 [cluster="lambda expression", file="Charting.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event() for Day({0})'', _time.ToShortDateString()))", span="230-230"];
m3_76 [cluster="lambda expression", file="Charting.cs", label=Exception, span="232-232"];
m3_79 [cluster="lambda expression", file="Charting.cs", label="Exit lambda expression", span="225-237"];
m3_121 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", span="333-333"];
m3_122 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="Charting.cs", label="var i = 0", span="335-335"];
m3_123 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="Charting.cs", label="i < _events.Count", span="335-335"];
m3_124 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="Charting.cs", label="_events[i].Reset()", span="337-337"];
m3_125 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="Charting.cs", label="i++", span="335-335"];
m3_126 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ResetEvents()", span="333-333"];
m3_37 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Charting.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m3_36 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", span="167-167"];
m3_38 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="_algorithm.Securities.Values", span="170-170"];
m3_39 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="DateTime? endOfDayEventTime = null", span="172-172"];
m3_50 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="var endOfDay = DateTime.Today.AddHours(23.967)", span="222-222"];
m3_40 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="!security.IsDynamicallyLoadedData", span="174-174"];
m3_41 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="_today[security.Type].Status == ''open''", span="177-177"];
m3_42 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="endOfDayEventTime = _today[security.Type].Open.End.Subtract(_endOfDayDelta)", span="179-179"];
m3_43 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="endOfDayEventTime = DateTime.Now.Date + security.Exchange.MarketClose.Subtract(_endOfDayDelta)", span="185-185"];
m3_47 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.SetupEvents(): Skipping Setup of EOD Event for {0} because time has passed.'', security.Symbol))", span="200-200"];
m3_48 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="var symbol = security.Symbol", span="204-204"];
m3_44 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="endOfDayEventTime.HasValue", span="189-189"];
m3_45 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="DateTime.Now < endOfDayEventTime.Value", span="192-192"];
m3_46 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.SetupEvents(): Setup EOD Event for {0}'', endOfDayEventTime.Value.ToString(''u'')))", span="195-195"];
m3_49 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="AddEvent(new RealTimeEvent(endOfDayEventTime.Value, () =>\r\n                    {\r\n                        try\r\n                        {\r\n                            _algorithm.OnEndOfDay(symbol);\r\n                            Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event({0}) for Day({1})'', symbol, _time.ToShortDateString()));\r\n                        }\r\n                        catch (Exception err)\r\n                        {\r\n                            _resultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace);\r\n                            Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message);\r\n                        }\r\n                    }, true))", span="205-217"];
m3_51 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="DateTime.Now < endOfDay", span="223-223"];
m3_52 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="AddEvent(new RealTimeEvent(endOfDay, () =>\r\n                {\r\n                    try\r\n                    {\r\n                        _algorithm.OnEndOfDay();\r\n                        Log.Trace(string.Format(''LiveTradingRealTimeHandler: Fired On End of Day Event() for Day({0})'', _time.ToShortDateString()));\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        _resultHandler.RuntimeError(''Runtime error in OnEndOfDay event: '' + err.Message, err.StackTrace);\r\n                        Log.Error(''LiveTradingRealTimeHandler.SetupEvents.Trigger OnEndOfDay(): '' + err.Message);\r\n                    }\r\n                }, true))", span="225-237"];
m3_53 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEndOfDayEvent()", span="167-167"];
m3_108 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="Charting.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_0 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="93-93"];
m3_1 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="Charting.cs", label="_algorithm = algorithm", span="96-96"];
m3_4 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="Charting.cs", label="_resultHandler = resultHandler", span="99-99"];
m3_5 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="Charting.cs", label="_api = api", span="100-100"];
m3_2 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="Charting.cs", label="_events = new List<RealTimeEvent>()", span="97-97"];
m3_3 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="Charting.cs", label="_today = new Dictionary<SecurityType, MarketToday>()", span="98-98"];
m3_6 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="93-93"];
m3_109 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", file="Charting.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", span="79-79"];
m3_135 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="369-369"];
m3_136 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="Charting.cs", label="_exitTriggered = true", span="371-371"];
m3_137 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="369-369"];
m3_24 [cluster="System.Convert.ToInt32(double)", file="Charting.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m3_23 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="Charting.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="290-290"];
m3_56 [cluster="System.DateTime.ToString(string)", file="Charting.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m3_35 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="244-244"];
m3_81 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_today.Clear()", span="246-246"];
m3_86 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_today[security.Type] = _api.MarketToday(date, security.Type)", span="259-259"];
m3_82 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_algorithm.SubscriptionManager.Subscriptions", span="249-249"];
m3_83 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="var security = _algorithm.Securities[sub.Symbol]", span="251-251"];
m3_91 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = TimeSpan.FromHours(0)", span="273-273"];
m3_92 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = TimeSpan.FromHours(0)", span="274-274"];
m3_93 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="sub.ExtendedMarketHours", span="276-276"];
m3_94 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Equity].PreMarket.Start.TimeOfDay", span="278-278"];
m3_95 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Equity].PostMarket.End.TimeOfDay", span="279-279"];
m3_96 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="Log.Trace(\r\n                                string.Format(\r\n                                    ''LiveTradingRealTimeHandler.SetupEvents(Equity): Extended market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                    sub.Symbol, _today[SecurityType.Equity].PreMarket.Start,\r\n                                    _today[SecurityType.Equity].PostMarket.End))", span="280-284"];
m3_97 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Equity].Open.Start.TimeOfDay", span="288-288"];
m3_98 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Equity].Open.End.TimeOfDay", span="289-289"];
m3_99 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="Log.Trace(\r\n                                string.Format(\r\n                                    ''LiveTradingRealTimeHandler.SetupEvents(Equity): Normal market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                    sub.Symbol, _today[SecurityType.Equity].Open.Start, _today[SecurityType.Equity].Open.End))", span="290-293"];
m3_101 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketOpen = _today[SecurityType.Forex].Open.Start.TimeOfDay", span="298-298"];
m3_102 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_algorithm.Securities[sub.Symbol].Exchange.MarketClose = _today[SecurityType.Forex].Open.End.TimeOfDay", span="299-299"];
m3_103 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="Log.Trace(\r\n                            string.Format(\r\n                                ''LiveTradingRealTimeHandler.SetupEvents(Forex): Normal market hours set: Symbol: {0} Start: {1} End: {2}'',\r\n                                sub.Symbol, _today[SecurityType.Forex].Open.Start, _today[SecurityType.Forex].Open.End))", span="300-303"];
m3_84 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="!_today.ContainsKey(security.Type)", span="254-254"];
m3_85 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_today.Add(security.Type, new MarketToday())", span="257-257"];
m3_87 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="Log.Trace(\r\n                        string.Format(\r\n                            ''LiveTradingRealTimeHandler.SetupEvents(): Daily Market Hours Setup for Security Type: {0} Start: {1} Stop: {2}'',\r\n                            security.Type, _today[security.Type].Open.Start, _today[security.Type].Open.End))", span="260-263"];
m3_88 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="security.Type", span="267-267"];
m3_89 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="SecurityType.Equity", span="269-269"];
m3_100 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="SecurityType.Forex", span="297-297"];
m3_90 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="_today[SecurityType.Equity].Status != ''open''", span="271-271"];
m3_104 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="244-244"];
m3_69 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", file="Charting.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="269-269"];
m3_21 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", span="144-144"];
m3_28 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="Charting.cs", label="ClearEvents()", span="149-149"];
m3_29 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="Charting.cs", label="RefreshMarketHoursToday(date)", span="152-152"];
m3_30 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="Charting.cs", label="SetupEndOfDayEvent()", span="155-155"];
m3_31 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="Charting.cs", label=Exception, span="157-157"];
m3_32 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="Charting.cs", label="Log.Error(''LiveTradingRealTimeHandler.SetupEvents(): '' + err.Message)", span="159-159"];
m3_33 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetupEvents(System.DateTime)", span="144-144"];
m3_27 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", span="312-312"];
m3_112 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="Charting.cs", label="var i = 0", span="314-314"];
m3_113 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="Charting.cs", label="i < _events.Count", span="314-314"];
m3_114 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="Charting.cs", label="_events[i].Scan(_time)", span="316-316"];
m3_115 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="Charting.cs", label="i++", span="314-314"];
m3_116 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanEvents()", span="312-312"];
m3_60 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="324-324"];
m3_118 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="Charting.cs", label="_events.Add(newEvent)", span="326-326"];
m3_119 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.AddEvent(QuantConnect.Lean.Engine.RealTime.RealTimeEvent)", span="324-324"];
m3_117 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", span="61-61"];
m3_55 [cluster="System.TimeSpan.Subtract(System.TimeSpan)", file="Charting.cs", label="Entry System.TimeSpan.Subtract(System.TimeSpan)", span="0-0"];
m3_61 [cluster="System.DateTime.AddHours(double)", file="Charting.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m3_9 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="107-107"];
m3_10 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="_isActive = true", span="110-110"];
m3_11 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="_time = DateTime.Now", span="111-111"];
m3_12 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="SetupEvents(DateTime.Now)", span="114-114"];
m3_13 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="!_exitTriggered", span="117-117"];
m3_14 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="var nextSecond = DateTime.Now.RoundUp(TimeSpan.FromSeconds(1))", span="120-120"];
m3_19 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="_isActive = false", span="131-131"];
m3_15 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="var delay = Convert.ToInt32((nextSecond - DateTime.Now).TotalMilliseconds)", span="121-121"];
m3_16 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="Thread.Sleep(delay < 0 ? 1 : delay)", span="122-122"];
m3_17 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="SetTime(DateTime.Now)", span="125-125"];
m3_18 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="ScanEvents()", span="128-128"];
m3_20 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="107-107"];
m3_57 [cluster="string.Format(string, object)", file="Charting.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_127 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", span="91-91"];
m3_25 [cluster="System.Threading.Thread.Sleep(int)", file="Charting.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m3_34 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", span="344-344"];
m3_128 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", file="Charting.cs", label="_events.Clear()", span="346-346"];
m3_129 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ClearEvents()", span="344-344"];
m3_107 [cluster="QuantConnect.Packets.MarketToday.MarketToday()", file="Charting.cs", label="Entry QuantConnect.Packets.MarketToday.MarketToday()", span="59-59"];
m3_105 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="Charting.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m3_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Charting.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_110 [cluster="string.Format(string, object, object, object)", file="Charting.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m3_120 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Charting.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_70 [cluster="System.DateTime.ToShortDateString()", file="Charting.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m3_26 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="353-353"];
m3_131 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="Charting.cs", label="_time.Date != time.Date", span="356-356"];
m3_132 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="Charting.cs", label="SetupEvents(time)", span="359-359"];
m3_133 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="Charting.cs", label="_time = time", span="363-363"];
m3_134 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="353-353"];
m3_80 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="Charting.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="264-264"];
m3_71 [cluster="string.Format(string, object, object)", file="Charting.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m3_58 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Charting.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
m3_22 [cluster="System.TimeSpan.FromSeconds(double)", file="Charting.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m3_72 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="125-125"];
m3_138 [file="Charting.cs", label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span=""];
m3_139 [file="Charting.cs", label=symbol, span=""];
m4_75 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", span="228-228"];
m4_84 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="DefaultAlphaHandler.cs", label="var types = new List<string>()", span="230-230"];
m4_86 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: assemblyTypes = assembly.GetTypes()", span="236-236"];
m4_85 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="DefaultAlphaHandler.cs", label="Type[] assemblyTypes", span="233-233"];
m4_94 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="DefaultAlphaHandler.cs", label="return types;", span="263-263"];
m4_87 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", color=green, community=0, file="DefaultAlphaHandler.cs", label="1: ReflectionTypeLoadException", span="238-238"];
m4_89 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="DefaultAlphaHandler.cs", label="assemblyTypes != null && assemblyTypes.Length > 0", span="243-243"];
m4_88 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="DefaultAlphaHandler.cs", label="assemblyTypes = e.Types", span="240-240"];
m4_90 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="DefaultAlphaHandler.cs", label="types = (from t in assemblyTypes\r\n                             where t.IsClass                                    // require class\r\n                             where !t.IsAbstract                                // require concrete impl\r\n                             where AlgorithmInterfaceType.IsAssignableFrom(t)   // require derived from IAlgorithm\r\n                             where t.FullName != AlgorithmBaseTypeFullName      // require not equal to QuantConnect.QCAlgorithm\r\n                             where t.GetConstructor(Type.EmptyTypes) != null    // require default ctor\r\n                             select t.FullName).ToList()", span="245-251"];
m4_91 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="DefaultAlphaHandler.cs", label="Log.Error(''API.GetExtendedTypeNames(): No types found in assembly.'')", span="255-255"];
m4_92 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="DefaultAlphaHandler.cs", label=Exception, span="258-258"];
m4_93 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="DefaultAlphaHandler.cs", label="Log.Error(''API.GetExtendedTypeNames(): '' + err.Message + '' Inner: '' + err.InnerException)", span="260-260"];
m4_95 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="DefaultAlphaHandler.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", span="228-228"];
m4_128 [cluster="int.ToString(string)", file="DefaultAlphaHandler.cs", label="Entry int.ToString(string)", span="0-0"];
m4_98 [cluster="Unk.IsAssignableFrom", file="DefaultAlphaHandler.cs", label="Entry Unk.IsAssignableFrom", span=""];
m4_96 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultAlphaHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_80 [cluster="object.GetType()", file="DefaultAlphaHandler.cs", label="Entry object.GetType()", span="0-0"];
m4_76 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultAlphaHandler.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m4_130 [cluster="System.AppDomain.CreateDomain(string, System.Security.Policy.Evidence, System.AppDomainSetup)", file="DefaultAlphaHandler.cs", label="Entry System.AppDomain.CreateDomain(string, System.Security.Policy.Evidence, System.AppDomainSetup)", span="0-0"];
m4_5 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="DefaultAlphaHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m4_69 [cluster="string.Substring(int, int)", file="DefaultAlphaHandler.cs", label="Entry string.Substring(int, int)", span="0-0"];
m4_115 [cluster="lambda expression", file="DefaultAlphaHandler.cs", label="Entry lambda expression", span="280-283"];
m4_2 [cluster="lambda expression", file="DefaultAlphaHandler.cs", label="Entry lambda expression", span="62-62"];
m4_3 [cluster="lambda expression", file="DefaultAlphaHandler.cs", label="names.SingleOrDefault()", span="62-62"];
m4_4 [cluster="lambda expression", file="DefaultAlphaHandler.cs", label="Exit lambda expression", span="62-62"];
m4_116 [cluster="lambda expression", file="DefaultAlphaHandler.cs", label="success = TryCreateAlgorithmInstance(assemblyPath, out instance, out error)", span="282-282"];
m4_117 [cluster="lambda expression", file="DefaultAlphaHandler.cs", label="Exit lambda expression", span="280-283"];
m4_19 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="109-109"];
m4_20 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="1: algorithmInstance = null", span="112-112"];
m4_22 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: !File.Exists(assemblyPath)", span="116-116"];
m4_26 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="var mdbFilename = assemblyPath + ''.mdb''", span="131-131"];
m4_27 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="var pdbFilename = assemblyPath.Substring(0, assemblyPath.Length - 4) + ''.pdb''", span="132-132"];
m4_35 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="assembly = Assembly.LoadFrom(assemblyPath)", span="149-149"];
m4_37 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="var assemblyBytes = File.ReadAllBytes(assemblyPath)", span="154-154"];
m4_21 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="errorMessage = ''''", span="113-113"];
m4_23 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="return false;", span="118-118"];
m4_24 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="byte[] debugInformationBytes = null", span="127-127"];
m4_25 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label=TryLoadDebugInformation, span="128-128"];
m4_33 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="debugInformationBytes == null", span="146-146"];
m4_38 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="assembly = Assembly.Load(assemblyBytes, debugInformationBytes)", span="155-155"];
m4_32 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="Assembly assembly", span="145-145"];
m4_30 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="File.Exists(mdbFilename)", span="138-138"];
m4_31 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: debugInformationBytes = File.ReadAllBytes(mdbFilename)", span="140-140"];
m4_28 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="File.Exists(pdbFilename)", span="133-133"];
m4_29 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="debugInformationBytes = File.ReadAllBytes(pdbFilename)", span="135-135"];
m4_34 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="Log.Trace(''Loader.CreateInstance(): Loading only the algorithm assembly'')", span="148-148"];
m4_36 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="Log.Trace(''Loader.CreateInstance(): Loading debug information with algorithm'')", span="153-153"];
m4_39 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="assembly == null", span="157-157"];
m4_43 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="1: var types = GetExtendedTypeNames(assembly)", span="165-165"];
m4_55 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="1: algorithmInstance = (IAlgorithm)assembly.CreateInstance(types[0], true)", span="189-189"];
m4_40 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="errorMessage = ''Assembly is null.''", span="159-159"];
m4_41 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="Log.Error(''Loader.CreateInstance(): Assembly is null'')", span="160-160"];
m4_42 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="1: return false;", span="161-161"];
m4_44 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: Log.Trace(''Loader.CreateInstance(): Assembly types: '' + string.Join('','', types))", span="166-166"];
m4_45 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: types.Count == 0", span="169-169"];
m4_49 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: types.Count > 1", span="176-176"];
m4_50 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: types[0] = _multipleTypeNameResolverFunction.Invoke(types)", span="179-179"];
m4_51 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: string.IsNullOrEmpty(types[0])", span="181-181"];
m4_46 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: errorMessage = ''Algorithm type was not found.''", span="171-171"];
m4_47 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: Log.Error(''Loader.CreateInstance(): Types array empty, no algorithm type found.'')", span="172-172"];
m4_48 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="1: return false;", span="173-173"];
m4_52 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: errorMessage = ''Unable to resolve multiple algorithm types to a single type.''", span="183-183"];
m4_53 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="0: Log.Error(''Loader.CreateInstance(): Failed resolving multiple algorithm types to a single type.'')", span="184-184"];
m4_54 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="DefaultAlphaHandler.cs", label="1: return false;", span="185-185"];
m4_56 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=red, community=0, file="DefaultAlphaHandler.cs", label="0: algorithmInstance != null", span="193-193"];
m4_57 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=red, community=0, file="DefaultAlphaHandler.cs", label="0: Log.Trace(''Loader.TryCreateAlgorithmInstance(): Loaded '' + algorithmInstance.GetType().Name)", span="195-195"];
m4_66 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="return algorithmInstance != null;", span="211-211"];
m4_58 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=red, community=0, file="DefaultAlphaHandler.cs", label="1: ReflectionTypeLoadException", span="199-199"];
m4_62 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label=Exception, span="204-204"];
m4_59 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=red, community=0, file="DefaultAlphaHandler.cs", label="0: Log.Error(''Loader.CreateInstance(1): '' + err.LoaderExceptions[0])", span="201-201"];
m4_60 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="err.InnerException != null", span="202-202"];
m4_61 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="errorMessage = err.InnerException.Message", span="202-202"];
m4_63 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="Log.Error(''Loader.CreateInstance(2): '' + err.Message)", span="206-206"];
m4_64 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="err.InnerException != null", span="207-207"];
m4_65 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="errorMessage = err.InnerException.Message", span="207-207"];
m4_67 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="109-109"];
m4_74 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m4_99 [cluster="Unk.GetConstructor", file="DefaultAlphaHandler.cs", label="Entry Unk.GetConstructor", span=""];
m4_81 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly, string)", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly, string)", span="218-218"];
m4_82 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly, string)", file="DefaultAlphaHandler.cs", label="return GetExtendedTypeNames(assembly);", span="220-220"];
m4_83 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly, string)", file="DefaultAlphaHandler.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly, string)", span="218-218"];
m4_113 [cluster="QuantConnect.Isolator.Isolator()", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m4_126 [cluster="System.Guid.ToString()", file="DefaultAlphaHandler.cs", label="Entry System.Guid.ToString()", span="0-0"];
m4_101 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="273-273"];
m4_102 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="IAlgorithm instance = null", span="275-275"];
m4_106 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="var complete = isolator.ExecuteWithTimeLimit(_loaderTimeLimit, () =>\r\n            {\r\n                success = TryCreateAlgorithmInstance(assemblyPath, out instance, out error);\r\n            })", span="280-283"];
m4_103 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="var error = string.Empty", span="276-276"];
m4_104 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="var success = false", span="278-278"];
m4_105 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="var isolator = new Isolator()", span="279-279"];
m4_107 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="algorithmInstance = instance", span="285-285"];
m4_108 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="errorMessage = error", span="286-286"];
m4_109 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="!complete", span="289-289"];
m4_110 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="errorMessage = ''Failed to create algorithm instance within 10 seconds. Try re-building algorithm. '' + error", span="291-291"];
m4_111 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="return complete && success && algorithmInstance != null;", span="294-294"];
m4_112 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="DefaultAlphaHandler.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="273-273"];
m4_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DefaultAlphaHandler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_72 [cluster="System.Reflection.Assembly.LoadFrom(string)", file="DefaultAlphaHandler.cs", label="Entry System.Reflection.Assembly.LoadFrom(string)", span="0-0"];
m4_100 [cluster="Unk.ToList", file="DefaultAlphaHandler.cs", label="Entry Unk.ToList", span=""];
m4_114 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="141-141"];
m4_127 [cluster="string.GetHashCode()", file="DefaultAlphaHandler.cs", label="Entry string.GetHashCode()", span="0-0"];
m4_68 [cluster="System.IO.File.Exists(string)", file="DefaultAlphaHandler.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m4_125 [cluster="System.Guid.NewGuid()", file="DefaultAlphaHandler.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m4_131 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Unload()", span="324-324"];
m4_132 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="DefaultAlphaHandler.cs", label="appDomain != null", span="325-325"];
m4_133 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="DefaultAlphaHandler.cs", label="AppDomain.Unload(appDomain)", span="327-327"];
m4_134 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="DefaultAlphaHandler.cs", label="appDomain = null", span="328-328"];
m4_135 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="DefaultAlphaHandler.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.Unload()", span="324-324"];
m4_0 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader()", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader()", span="61-61"];
m4_1 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader()", file="DefaultAlphaHandler.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.Loader()", span="61-61"];
m4_97 [cluster="System.Reflection.Assembly.GetTypes()", file="DefaultAlphaHandler.cs", label="Entry System.Reflection.Assembly.GetTypes()", span="0-0"];
m4_73 [cluster="System.Reflection.Assembly.Load(byte[], byte[])", file="DefaultAlphaHandler.cs", label="Entry System.Reflection.Assembly.Load(byte[], byte[])", span="0-0"];
m4_77 [cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultAlphaHandler.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_13 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateInstance<T>(string, string, out T, out string)", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.CreateInstance<T>(string, string, out T, out string)", span="94-94"];
m4_14 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateInstance<T>(string, string, out T, out string)", file="DefaultAlphaHandler.cs", label="IAlgorithm algorithm", span="96-96"];
m4_15 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateInstance<T>(string, string, out T, out string)", file="DefaultAlphaHandler.cs", label="bool success = TryCreateAlgorithmInstance(assemblyPath, out algorithm, out errorMessage)", span="97-97"];
m4_16 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateInstance<T>(string, string, out T, out string)", file="DefaultAlphaHandler.cs", label="algorithmInstance = (T) algorithm", span="98-98"];
m4_17 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateInstance<T>(string, string, out T, out string)", file="DefaultAlphaHandler.cs", label="return success;", span="99-99"];
m4_18 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateInstance<T>(string, string, out T, out string)", file="DefaultAlphaHandler.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.CreateInstance<T>(string, string, out T, out string)", span="94-94"];
m4_79 [cluster="System.Reflection.Assembly.CreateInstance(string, bool)", file="DefaultAlphaHandler.cs", label="Entry System.Reflection.Assembly.CreateInstance(string, bool)", span="0-0"];
m4_129 [cluster="System.AppDomainSetup.AppDomainSetup()", file="DefaultAlphaHandler.cs", label="Entry System.AppDomainSetup.AppDomainSetup()", span="0-0"];
m4_136 [cluster="System.AppDomain.Unload(System.AppDomain)", file="DefaultAlphaHandler.cs", label="Entry System.AppDomain.Unload(System.AppDomain)", span="0-0"];
m4_70 [cluster="System.IO.File.ReadAllBytes(string)", file="DefaultAlphaHandler.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m4_78 [cluster="string.IsNullOrEmpty(string)", file="DefaultAlphaHandler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_118 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateAppDomain(string)", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.CreateAppDomain(string)", span="303-303"];
m4_119 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateAppDomain(string)", file="DefaultAlphaHandler.cs", label="string.IsNullOrEmpty(appDomainName)", span="306-306"];
m4_122 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateAppDomain(string)", file="DefaultAlphaHandler.cs", label="appDomain = AppDomain.CreateDomain(appDomainName, null, domainSetup)", span="314-314"];
m4_120 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateAppDomain(string)", file="DefaultAlphaHandler.cs", label="appDomainName = ''qclibrary'' + Guid.NewGuid().ToString().GetHashCode().ToString(''x'')", span="307-307"];
m4_121 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateAppDomain(string)", file="DefaultAlphaHandler.cs", label="var domainSetup = new AppDomainSetup()", span="311-311"];
m4_123 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateAppDomain(string)", file="DefaultAlphaHandler.cs", label="return appDomain;", span="315-315"];
m4_124 [cluster="QuantConnect.AlgorithmFactory.Loader.CreateAppDomain(string)", file="DefaultAlphaHandler.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.CreateAppDomain(string)", span="303-303"];
m4_71 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
m4_6 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="DefaultAlphaHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="79-79"];
m4_7 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="DefaultAlphaHandler.cs", label="multipleTypeNameResolverFunction == null", span="81-81"];
m4_9 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="DefaultAlphaHandler.cs", label="_loaderTimeLimit = loaderTimeLimit", span="86-86"];
m4_10 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="DefaultAlphaHandler.cs", label="_multipleTypeNameResolverFunction = multipleTypeNameResolverFunction", span="87-87"];
m4_8 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="DefaultAlphaHandler.cs", label="throw new ArgumentNullException(''multipleTypeNameResolverFunction'');", span="83-83"];
m4_11 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="DefaultAlphaHandler.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="79-79"];
m4_137 [file="DefaultAlphaHandler.cs", label="QuantConnect.AlgorithmFactory.Loader", span=""];
m4_138 [file="DefaultAlphaHandler.cs", label=string, span=""];
m6_36 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="91-91"];
m6_37 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="91-91"];
m6_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1428-1428"];
m6_16 [cluster="System.TimeSpan.FromDays(double)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m6_19 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="55-55"];
m6_20 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="!Portfolio.Invested", span="57-57"];
m6_21 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="slice.OptionChains", span="59-59"];
m6_24 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="slice.Time.Date == new DateTime(2014, 06, 05) && contract.OpenInterest != 50", span="67-67"];
m6_26 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="slice.Time.Date == new DateTime(2014, 06, 06) && contract.OpenInterest != 70", span="71-71"];
m6_28 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="slice.Time.Date == new DateTime(2014, 06, 06)", span="75-75"];
m6_22 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="chain.Value", span="61-61"];
m6_23 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="contract.Symbol.ID.StrikePrice == 72.5m &&\r\n                            contract.Symbol.ID.OptionRight == OptionRight.Call &&\r\n                            contract.Symbol.ID.Date == new DateTime(2016, 01, 15)", span="63-65"];
m6_29 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="MarketOrder(contract.Symbol, 1)", span="77-77"];
m6_30 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="MarketOnCloseOrder(contract.Symbol, -1)", span="78-78"];
m6_25 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="throw new Exception(''Regression test failed: current open interest was not correctly loaded and is not equal to 50'');", span="69-69"];
m6_27 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="throw new Exception(''Regression test failed: current open interest was not correctly loaded and is not equal to 70'');", span="73-73"];
m6_31 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="55-55"];
m6_33 [cluster="System.Exception.Exception(string)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m6_15 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m6_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1414-1414"];
m6_0 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", span="33-33"];
m6_1 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OptionOpenInterestRegressionAlgorithm.cs", label="SetStartDate(2014, 06, 05)", span="36-36"];
m6_2 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OptionOpenInterestRegressionAlgorithm.cs", label="SetEndDate(2014, 06, 06)", span="37-37"];
m6_3 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OptionOpenInterestRegressionAlgorithm.cs", label="SetCash(1000000)", span="38-38"];
m6_4 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", color=red, community=0, file="OptionOpenInterestRegressionAlgorithm.cs", label="0: var equity = AddEquity(UnderlyingTicker)", span="40-40"];
m6_5 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", color=red, community=0, file="OptionOpenInterestRegressionAlgorithm.cs", label="0: var option = AddOption(UnderlyingTicker)", span="41-41"];
m6_6 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", color=red, community=0, file="OptionOpenInterestRegressionAlgorithm.cs", label="0: equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="43-43"];
m6_8 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", color=red, community=0, file="OptionOpenInterestRegressionAlgorithm.cs", label="0: SetBenchmark(equity.Symbol)", span="48-48"];
m6_7 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OptionOpenInterestRegressionAlgorithm.cs", label="option.SetFilter(-10, +10, TimeSpan.Zero, TimeSpan.FromDays(365 * 2))", span="45-45"];
m6_9 [cluster="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", file="OptionOpenInterestRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm.Initialize()", span="33-33"];
m6_17 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="315-315"];
m6_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1165-1165"];
m6_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="1046-1046"];
m6_32 [cluster="System.DateTime.DateTime(int, int, int)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m6_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m6_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m6_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1140-1140"];
m6_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="OptionOpenInterestRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1089-1089"];
m6_38 [file="OptionOpenInterestRegressionAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", span=""];
m7_40 [cluster="Unk.Where", file="OptionRenameRegressionAlgorithm.cs", label="Entry Unk.Where", span=""];
m7_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1428-1428"];
m7_18 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="58-58"];
m7_19 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="!Portfolio.Invested", span="60-60"];
m7_22 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0, file="OptionRenameRegressionAlgorithm.cs", label="0: slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="65-65"];
m7_33 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0, file="OptionRenameRegressionAlgorithm.cs", label="0: slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="99-99"];
m7_20 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="Time.Day == 28 && Time.Hour > 9 && Time.Minute > 0", span="62-62"];
m7_30 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="Time.Day == 2 && Time.Hour > 14 && Time.Minute > 0", span="92-92"];
m7_21 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="OptionChain chain", span="64-64"];
m7_23 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="var contract =\r\n                            chain.OrderBy(x => x.Expiry)\r\n                            .Where(x => x.Right == OptionRight.Call && x.Strike == 33 && x.Expiry.Date == new DateTime(2013, 08, 17))\r\n                            .FirstOrDefault()", span="67-70"];
m7_24 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="contract != null", span="72-72"];
m7_25 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="Buy(contract.Symbol, 1)", span="75-75"];
m7_26 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="var underlyingSymbol = contract.Symbol.Underlying", span="78-78"];
m7_28 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="contract.AskPrice != 1.1m", span="82-82"];
m7_27 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="Buy(underlyingSymbol, 100)", span="79-79"];
m7_29 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="throw new Exception(''Regression test failed: current ask price was not loaded from NWSA backtest file and is not $1.1'');", span="84-84"];
m7_31 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="OptionRenameRegressionAlgorithm.cs", label="0: Liquidate()", span="95-95"];
m7_32 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="OptionChain chain", span="98-98"];
m7_34 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="var contract =\r\n                            chain.OrderBy(x => x.Expiry)\r\n                            .Where(x => x.Right == OptionRight.Call && x.Strike == 33 && x.Expiry.Date == new DateTime(2013, 08, 17))\r\n                            .FirstOrDefault()", span="101-104"];
m7_35 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="contract.BidPrice != 0.05m", span="106-106"];
m7_36 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="throw new Exception(''Regression test failed: current bid price was not loaded from FOXA file and is not $0.05'');", span="108-108"];
m7_37 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionRenameRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="58-58"];
m7_55 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="Entry lambda expression", span="103-103"];
m7_45 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="Entry lambda expression", span="68-68"];
m7_48 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="Entry lambda expression", span="69-69"];
m7_52 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="Entry lambda expression", span="102-102"];
m7_46 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="x.Expiry", span="68-68"];
m7_47 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="Exit lambda expression", span="68-68"];
m7_49 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="x.Right == OptionRight.Call && x.Strike == 33 && x.Expiry.Date == new DateTime(2013, 08, 17)", span="69-69"];
m7_50 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="Exit lambda expression", span="69-69"];
m7_53 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="x.Expiry", span="102-102"];
m7_54 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="Exit lambda expression", span="102-102"];
m7_56 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="x.Right == OptionRight.Call && x.Strike == 33 && x.Expiry.Date == new DateTime(2013, 08, 17)", span="103-103"];
m7_57 [cluster="lambda expression", file="OptionRenameRegressionAlgorithm.cs", label="Exit lambda expression", span="103-103"];
m7_58 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="120-120"];
m7_59 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionRenameRegressionAlgorithm.cs", label="Log(orderEvent.ToString())", span="122-122"];
m7_60 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionRenameRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="120-120"];
m7_43 [cluster="System.Exception.Exception(string)", file="OptionRenameRegressionAlgorithm.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m7_51 [cluster="System.DateTime.DateTime(int, int, int)", file="OptionRenameRegressionAlgorithm.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m7_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1414-1414"];
m7_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1140-1140"];
m7_41 [cluster="Unk.FirstOrDefault", file="OptionRenameRegressionAlgorithm.cs", label="Entry Unk.FirstOrDefault", span=""];
m7_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1719-1719"];
m7_16 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="315-315"];
m7_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1165-1165"];
m7_38 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m7_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="OptionRenameRegressionAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m7_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m7_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1089-1089"];
m7_42 [cluster="Unk.Buy", file="OptionRenameRegressionAlgorithm.cs", label="Entry Unk.Buy", span=""];
m7_15 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m7_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="1046-1046"];
m7_61 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="169-169"];
m7_0 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="OptionRenameRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", span="35-35"];
m7_1 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="OptionRenameRegressionAlgorithm.cs", label="SetStartDate(2013, 06, 28)", span="38-38"];
m7_2 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="OptionRenameRegressionAlgorithm.cs", label="SetEndDate(2013, 07, 02)", span="39-39"];
m7_3 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=green, community=0, file="OptionRenameRegressionAlgorithm.cs", label="0: SetCash(1000000)", span="40-40"];
m7_4 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=red, community=0, file="OptionRenameRegressionAlgorithm.cs", label="0: var equity = AddEquity(UnderlyingTicker)", span="42-42"];
m7_5 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=red, community=0, file="OptionRenameRegressionAlgorithm.cs", label="0: var option = AddOption(UnderlyingTicker)", span="43-43"];
m7_6 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=red, community=0, file="OptionRenameRegressionAlgorithm.cs", label="0: equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="45-45"];
m7_8 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=red, community=0, file="OptionRenameRegressionAlgorithm.cs", label="0: SetBenchmark(equity.Symbol)", span="51-51"];
m7_7 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="OptionRenameRegressionAlgorithm.cs", label="option.SetFilter(-1, +1, TimeSpan.Zero, TimeSpan.MaxValue)", span="48-48"];
m7_9 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="OptionRenameRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", span="35-35"];
m7_63 [file="OptionRenameRegressionAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", span=""];
m8_419 [cluster="QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", span="33-33"];
m8_317 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", span="489-489"];
m8_320 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="493-493"];
m8_318 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="491-491"];
m8_319 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="492-492"];
m8_321 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="494-494"];
m8_325 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="500-500"];
m8_326 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="502-502"];
m8_327 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.AAPL].Holdings.Quantity)", span="503-503"];
m8_322 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="496-496"];
m8_323 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, 100)", span="497-497"];
m8_324 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="499-499"];
m8_328 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", span="489-489"];
m8_505 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", span="735-735"];
m8_510 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="741-741"];
m8_507 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="738-738"];
m8_508 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="739-739"];
m8_509 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="740-740"];
m8_511 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="743-743"];
m8_514 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(192 * 100)", span="748-748"];
m8_525 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="764-764"];
m8_527 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="769-769"];
m8_530 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="774-774"];
m8_528 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="770-770"];
m8_529 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="771-771"];
m8_515 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="750-750"];
m8_516 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="751-751"];
m8_506 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="737-737"];
m8_517 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="752-752"];
m8_518 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="753-753"];
m8_519 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="755-755"];
m8_520 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="756-756"];
m8_522 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="758-758"];
m8_526 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="768-768"];
m8_513 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="745-745"];
m8_521 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="757-757"];
m8_512 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="744-744"];
m8_524 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="762-762"];
m8_523 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="760-760"];
m8_531 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCallAddsUnderlyingPositionReducesCash()", span="735-735"];
m8_420 [cluster="System.TimeSpan.FromHours(double)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m8_532 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="96-96"];
m8_0 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", span="35-35"];
m8_1 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=green, community=0, file="OptionSplitRegressionAlgorithm.cs", label="0: SetStartDate(2013, 06, 28)", span="38-38"];
m8_2 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="SetEndDate(2013, 07, 02)", span="39-39"];
m8_3 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="SetCash(1000000)", span="40-40"];
m8_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", color=green, community=0, file="OptionSplitRegressionAlgorithm.cs", label="0: Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1089-1089"];
m8_7 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="option.SetFilter(-1, +1, TimeSpan.Zero, TimeSpan.MaxValue)", span="48-48"];
m8_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1165-1165"];
m8_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1414-1414"];
m8_20 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Time.Day == 28 && Time.Hour > 9 && Time.Minute > 0", span="62-62"];
m8_21 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="OptionChain chain", span="64-64"];
m8_4 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=red, community=0, file="OptionSplitRegressionAlgorithm.cs", label="1: var equity = AddEquity(UnderlyingTicker)", span="42-42"];
m8_5 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=red, community=0, file="OptionSplitRegressionAlgorithm.cs", label="0: var option = AddOption(UnderlyingTicker)", span="43-43"];
m8_15 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m8_16 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="315-315"];
m8_6 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", color=red, community=0, file="OptionSplitRegressionAlgorithm.cs", label="0: equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="45-45"];
m8_8 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="SetBenchmark(equity.Symbol)", span="51-51"];
m8_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1140-1140"];
m8_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1428-1428"];
m8_19 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="!Portfolio.Invested", span="60-60"];
m8_22 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="65-65"];
m8_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="1046-1046"];
m8_9 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.Initialize()", span="35-35"];
m8_18 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="58-58"];
m8_23 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0, file="OptionSplitRegressionAlgorithm.cs", label="0: var contract =\r\n                            chain.OrderBy(x => x.Expiry)\r\n                            .Where(x => x.Right == OptionRight.Call && x.Strike == 33 && x.Expiry.Date == new DateTime(2013, 08, 17))\r\n                            .FirstOrDefault()", span="67-70"];
m8_259 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", span="405-405"];
m8_262 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="409-409"];
m8_260 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="407-407"];
m8_261 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="408-408"];
m8_263 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="410-410"];
m8_266 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fillBuy)", span="415-415"];
m8_267 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="417-417"];
m8_270 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fillSell)", span="421-421"];
m8_271 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="423-423"];
m8_268 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="418-418"];
m8_272 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="424-424"];
m8_264 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.Fut_SPY_Feb19_2016, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Future, Symbols.Fut_SPY_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="412-412"];
m8_265 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fillBuy = new OrderEvent(1, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 100, 100, 0)", span="414-414"];
m8_269 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fillSell = new OrderEvent(2, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell, 100, -100, 0)", span="420-420"];
m8_273 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesDoesntAddToCash()", span="405-405"];
m8_115 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="86-86"];
m8_465 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", span="678-678"];
m8_473 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="687-687"];
m8_469 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="683-683"];
m8_470 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="684-684"];
m8_472 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="686-686"];
m8_474 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.CashBook[''USD''].SetAmount(amount)", span="688-688"];
m8_488 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="706-706"];
m8_490 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="710-710"];
m8_493 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="715-715"];
m8_499 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="725-725"];
m8_502 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="730-730"];
m8_476 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="691-691"];
m8_468 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="int quantity = (int)(amount * leverage)", span="682-682"];
m8_477 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var security = securities[Symbols.AAPL]", span="692-692"];
m8_471 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var orderProcessor = new OrderProcessor()", span="685-685"];
m8_467 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="int amount = 1000", span="681-681"];
m8_475 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="690-690"];
m8_483 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = sellPrice, FillQuantity = -quantity }", span="700-700"];
m8_487 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="704-704"];
m8_489 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var newOrder = new MarketOrder(Symbols.AAPL, -1, time.AddSeconds(1)) { Price = sellPrice }", span="709-709"];
m8_491 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsFalse(sufficientCapital)", span="711-711"];
m8_492 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="newOrder = new MarketOrder(Symbols.AAPL, quantity, time.AddSeconds(1)) { Price = sellPrice }", span="714-714"];
m8_494 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsTrue(sufficientCapital)", span="716-716"];
m8_498 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="newOrder = new MarketOrder(Symbols.AAPL, quantity, time.AddSeconds(1)) { Price = highPrice }", span="724-724"];
m8_500 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsTrue(sufficientCapital)", span="726-726"];
m8_501 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="newOrder = new MarketOrder(Symbols.AAPL, quantity + 1, time.AddSeconds(1)) { Price = highPrice }", span="729-729"];
m8_503 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsFalse(sufficientCapital)", span="731-731"];
m8_481 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, sellPrice, sellPrice, sellPrice, sellPrice, 1))", span="697-697"];
m8_497 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, highPrice, highPrice, highPrice, highPrice, 1))", span="721-721"];
m8_495 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="time = time.AddDays(1)", span="719-719"];
m8_478 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetLeverage(leverage)", span="693-693"];
m8_466 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="decimal leverage = 2m", span="680-680"];
m8_482 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var order = new MarketOrder(Symbols.AAPL, -quantity, time) { Price = sellPrice }", span="699-699"];
m8_485 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="702-702"];
m8_484 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddOrder(order)", span="701-701"];
m8_480 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="decimal sellPrice = 1m", span="696-696"];
m8_486 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="request.SetOrderId(0)", span="703-703"];
m8_479 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="var time = DateTime.Now", span="695-695"];
m8_496 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="decimal highPrice = sellPrice * 2", span="720-720"];
m8_504 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyShortCoverZeroLong()", span="678-678"];
m8_1074 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m8_118 [cluster="System.Console.WriteLine(string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m8_36 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="throw new Exception(''Regression test failed: current bid price was not loaded from FOXA file and is not $0.05'');", span="108-108"];
m8_213 [cluster="Unk.IsTrue", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.IsTrue", span=""];
m8_27 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Buy(underlyingSymbol, 100)", span="79-79"];
m8_535 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="51-51"];
m8_197 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", span="1533-1533"];
m8_699 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", span="993-993"];
m8_704 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="999-999"];
m8_701 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="996-996"];
m8_702 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="997-997"];
m8_703 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="998-998"];
m8_705 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1001-1001"];
m8_708 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(192 * 100)", span="1006-1006"];
m8_719 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1023-1023"];
m8_721 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1029-1029"];
m8_724 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1034-1034"];
m8_722 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="1030-1030"];
m8_723 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="1031-1031"];
m8_709 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1008-1008"];
m8_710 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1009-1009"];
m8_700 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="995-995"];
m8_711 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="1010-1010"];
m8_712 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1012-1012"];
m8_713 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1013-1013"];
m8_715 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1015-1015"];
m8_720 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1028-1028"];
m8_707 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1003-1003"];
m8_714 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1014-1014"];
m8_706 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1002-1002"];
m8_717 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1020-1020"];
m8_718 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="1021-1021"];
m8_716 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1017-1017"];
m8_725 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPutAssignmentAddsUnderlyingPositionReducesCash()", span="993-993"];
m8_541 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292"];
m8_205 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m8_421 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m8_35 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="contract.BidPrice != 0.05m", span="106-106"];
m8_216 [cluster="Unk.GreaterOrEqual", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.GreaterOrEqual", span=""];
m8_274 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="474-474"];
m8_37 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="58-58"];
m8_542 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m8_111 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m8_1102 [cluster="Unk.Where", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.Where", span=""];
m8_40 [cluster="System.DateTime.AddDays(double)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m8_211 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="303-303"];
m8_113 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m8_206 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="118-118"];
m8_940 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", span="1330-1330"];
m8_945 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1336-1336"];
m8_942 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1333-1333"];
m8_943 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1334-1334"];
m8_944 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1335-1335"];
m8_946 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1338-1338"];
m8_949 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash((195 - 192) * 100)", span="1343-1343"];
m8_962 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1362-1362"];
m8_964 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1367-1367"];
m8_965 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1368-1368"];
m8_966 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1371-1371"];
m8_950 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1345-1345"];
m8_951 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1346-1346"];
m8_941 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="1332-1332"];
m8_952 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1347-1347"];
m8_953 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="1348-1348"];
m8_954 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1350-1350"];
m8_955 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1351-1351"];
m8_957 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1353-1353"];
m8_963 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1366-1366"];
m8_948 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1340-1340"];
m8_956 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1352-1352"];
m8_947 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1339-1339"];
m8_960 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1359-1359"];
m8_961 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="1360-1360"];
m8_958 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1354-1354"];
m8_959 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1356-1356"];
m8_967 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledCallAssignmentReducesCash()", span="1330-1330"];
m8_1095 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="1556-1556"];
m8_45 [cluster="Unk.ProcessFill", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.ProcessFill", span=""];
m8_48 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="66-76"];
m8_52 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="80-80"];
m8_55 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="111-111"];
m8_46 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="66-76"];
m8_47 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue, \r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0m)", span="66-76"];
m8_49 [cluster="OrderEvent.cstr", file="OptionSplitRegressionAlgorithm.cs", label="Entry OrderEvent.cstr", span=""];
m8_50 [cluster="Unk.>", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.>", span=""];
m8_53 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="80-80"];
m8_54 [cluster="decimal.Parse(string, System.IFormatProvider)", file="OptionSplitRegressionAlgorithm.cs", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m8_56 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="string fillsFile = ''TestData\\test_forex_fills.xml''", span="116-116"];
m8_57 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="string equityFile = ''TestData\\test_forex_equity.xml''", span="117-117"];
m8_51 [cluster="System.DateTime.DateTime(int, int, int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m8_119 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="121-131"];
m8_122 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="135-135"];
m8_125 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="139-139"];
m8_128 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="143-143"];
m8_121 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="121-131"];
m8_120 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0)", span="121-131"];
m8_124 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="135-135"];
m8_123 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="135-135"];
m8_127 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="139-139"];
m8_126 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="139-139"];
m8_130 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="143-143"];
m8_129 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="143-143"];
m8_544 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="757-757"];
m8_574 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="799-799"];
m8_605 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="840-840"];
m8_634 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="881-881"];
m8_664 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="925-925"];
m8_696 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="966-966"];
m8_726 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="1014-1014"];
m8_756 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="1059-1059"];
m8_785 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="1105-1105"];
m8_814 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="1146-1146"];
m8_843 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="1186-1186"];
m8_937 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="1310-1310"];
m8_968 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="1352-1352"];
m8_999 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="1396-1396"];
m8_1030 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="1442-1442"];
m8_1061 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Entry lambda expression", span="1488-1488"];
m8_546 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="757-757"];
m8_545 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="757-757"];
m8_576 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="799-799"];
m8_575 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="799-799"];
m8_607 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="840-840"];
m8_606 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="840-840"];
m8_636 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="881-881"];
m8_635 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="881-881"];
m8_666 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="925-925"];
m8_665 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="925-925"];
m8_698 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="966-966"];
m8_697 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="966-966"];
m8_728 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="1014-1014"];
m8_727 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="1014-1014"];
m8_758 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="1059-1059"];
m8_757 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="1059-1059"];
m8_787 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="1105-1105"];
m8_786 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="1105-1105"];
m8_816 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="1146-1146"];
m8_815 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="1146-1146"];
m8_845 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="1186-1186"];
m8_844 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="1186-1186"];
m8_939 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="1310-1310"];
m8_938 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="1310-1310"];
m8_970 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="1352-1352"];
m8_969 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="1352-1352"];
m8_1001 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="1396-1396"];
m8_1000 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="1396-1396"];
m8_1032 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="1442-1442"];
m8_1031 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="1442-1442"];
m8_1063 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="1488-1488"];
m8_1062 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label=true, span="1488-1488"];
m8_1096 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="x.BrokerId.Contains(brokerageId)", span="1556-1556"];
m8_1097 [cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs", label="Exit lambda expression", span="1556-1556"];
m8_42 [cluster="Unk.Buy", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.Buy", span=""];
m8_329 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", span="507-507"];
m8_332 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="511-511"];
m8_330 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="509-509"];
m8_331 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="510-510"];
m8_333 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="512-512"];
m8_338 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="519-519"];
m8_339 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="521-521"];
m8_337 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-100, securities[Symbols.AAPL].Holdings.Quantity)", span="518-518"];
m8_340 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-200, securities[Symbols.AAPL].Holdings.Quantity)", span="522-522"];
m8_334 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="514-514"];
m8_335 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, -100)", span="515-515"];
m8_336 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue,  OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="517-517"];
m8_341 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", span="507-507"];
m8_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m8_608 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", span="862-862"];
m8_613 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="868-868"];
m8_610 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="865-865"];
m8_611 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="866-866"];
m8_612 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="867-867"];
m8_614 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="870-870"];
m8_617 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="873-873"];
m8_627 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="888-888"];
m8_629 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(192 * 100, portfolio.Cash)", span="894-894"];
m8_632 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="899-899"];
m8_630 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-100, newUnderlyingHoldings.Quantity)", span="895-895"];
m8_631 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="896-896"];
m8_618 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="875-875"];
m8_619 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="876-876"];
m8_609 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="864-864"];
m8_620 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="877-877"];
m8_621 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="879-879"];
m8_622 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="880-880"];
m8_624 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="882-882"];
m8_628 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="893-893"];
m8_616 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="872-872"];
m8_623 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="881-881"];
m8_615 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="871-871"];
m8_626 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="886-886"];
m8_625 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="884-884"];
m8_633 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExercisePutAddsUnderlyingPositionAddsCash()", span="862-862"];
m8_1106 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", span="1564-1564"];
m8_1108 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="OptionSplitRegressionAlgorithm.cs", label="_tickets.TryGetValue(orderId, out ticket)", span="1567-1567"];
m8_1107 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="OptionSplitRegressionAlgorithm.cs", label="OrderTicket ticket", span="1566-1566"];
m8_1109 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="OptionSplitRegressionAlgorithm.cs", label="return ticket;", span="1568-1568"];
m8_1110 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", span="1564-1564"];
m8_68 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="152-152"];
m8_60 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="120-120"];
m8_61 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="169-169"];
m8_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1719-1719"];
m8_63 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", span=""];
m8_66 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="150-150"];
m8_67 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="151-151"];
m8_69 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(equity[0])", span="153-153"];
m8_70 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.CashBook.Add(''MCH'', mchQuantity[0], 0)", span="154-154"];
m8_71 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.CashBook.Add(''JWB'', jwbQuantity[0], 0)", span="155-155"];
m8_72 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var jwbCash = portfolio.CashBook[''JWB'']", span="157-157"];
m8_73 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var mchCash = portfolio.CashBook[''MCH'']", span="158-158"];
m8_74 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var usdCash = portfolio.CashBook[''USD'']", span="159-159"];
m8_87 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.CashBook.EnsureCurrencyDataFeeds(securities, subscriptions, MarketHoursDatabase.FromDataFolder(), SymbolPropertiesDatabase.FromDataFolder(), DefaultBrokerageModel.DefaultMarketMap)", span="177-177"];
m8_102 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="210-210"];
m8_103 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="Console.WriteLine(i + 1 + ''   '' + portfolio.TotalPortfolioValue.ToString(''C''))", span="221-221"];
m8_104 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual((double) mchQuantity[i + 1], (double)portfolio.CashBook[''MCH''].Amount)", span="223-223"];
m8_105 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual((double) jwbQuantity[i + 1], (double)portfolio.CashBook[''JWB''].Amount)", span="224-224"];
m8_64 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(fills.Count + 1, equity.Count)", span="146-146"];
m8_95 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual((double)mchJwb, (double)(mchUsd*usdJwb), 1e-10)", span="190-190"];
m8_59 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionSplitRegressionAlgorithm.cs", label="Log(orderEvent.ToString())", span="122-122"];
m8_89 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="i < fills.Count", span="179-179"];
m8_90 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var fill = fills[i]", span="182-182"];
m8_58 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="120-120"];
m8_65 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="149-149"];
m8_75 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var mchJwbSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, jwbCash, subscriptions.Add(MCHJWB, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(jwbCash.Symbol))", span="161-161"];
m8_77 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var mchUsdSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, usdCash, subscriptions.Add(MCHUSD, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(usdCash.Symbol))", span="163-163"];
m8_79 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var usdJwbSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, mchCash, subscriptions.Add(USDJWB, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(mchCash.Symbol))", span="165-165"];
m8_84 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(mchJwbSecurity)", span="173-173"];
m8_85 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(usdJwbSecurity)", span="174-174"];
m8_86 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(mchUsdSecurity)", span="175-175"];
m8_96 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="jwbCash.Update(new IndicatorDataPoint(MCHJWB, time, mchJwb))", span="194-194"];
m8_98 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="mchCash.Update(new IndicatorDataPoint(JWBUSD, time, usdJwb))", span="196-196"];
m8_97 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="usdCash.Update(new IndicatorDataPoint(MCHUSD, time, mchUsd))", span="195-195"];
m8_88 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="int i = 0", span="179-179"];
m8_100 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label=updateData, span="205-205"];
m8_106 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="i++", span="179-179"];
m8_99 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var updateData = new Dictionary<Security, BaseData>\r\n                {\r\n                    {mchJwbSecurity, new IndicatorDataPoint(MCHJWB, time, mchJwb)},\r\n                    {mchUsdSecurity, new IndicatorDataPoint(MCHUSD, time, mchUsd)},\r\n                    {usdJwbSecurity, new IndicatorDataPoint(JWBUSD, time, usdJwb)}\r\n                }", span="198-203"];
m8_101 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="kvp.Key.SetMarketPrice(kvp.Value)", span="207-207"];
m8_92 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="decimal mchJwb = i + 1", span="187-187"];
m8_93 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="decimal mchUsd = (i + 1)/(i + 2m)", span="188-188"];
m8_94 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="decimal usdJwb = i + 2", span="189-189"];
m8_91 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="var time = DateTime.Today.AddDays(i)", span="183-183"];
m8_76 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="mchJwbSecurity.SetLeverage(10m)", span="162-162"];
m8_78 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="mchUsdSecurity.SetLeverage(10m)", span="164-164"];
m8_80 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="usdJwbSecurity.SetLeverage(10m)", span="166-166"];
m8_81 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="mchJwbSecurity.TransactionModel = new SecurityTransactionModel()", span="169-169"];
m8_82 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="mchUsdSecurity.TransactionModel = new SecurityTransactionModel()", span="170-170"];
m8_83 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="usdJwbSecurity.TransactionModel = new SecurityTransactionModel()", span="171-171"];
m8_107 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="111-111"];
m8_108 [cluster="Unk.Add", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.Add", span=""];
m8_695 [cluster="QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="33-33"];
m8_209 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="531-531"];
m8_1076 [cluster="System.Enum.ToString()", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.Enum.ToString()", span="0-0"];
m8_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", span="66-66"];
m8_817 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", span="1166-1166"];
m8_822 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1172-1172"];
m8_819 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1169-1169"];
m8_820 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1170-1170"];
m8_821 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1171-1171"];
m8_823 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1174-1174"];
m8_826 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="1177-1177"];
m8_838 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="1194-1194"];
m8_839 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual((192 - 189) * 100, portfolio.Cash)", span="1198-1198"];
m8_840 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1199-1199"];
m8_841 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1202-1202"];
m8_827 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1179-1179"];
m8_828 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1180-1180"];
m8_818 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="1168-1168"];
m8_829 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1181-1181"];
m8_830 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="1182-1182"];
m8_831 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1184-1184"];
m8_832 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1185-1185"];
m8_834 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1187-1187"];
m8_825 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1176-1176"];
m8_833 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1186-1186"];
m8_824 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1175-1175"];
m8_837 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="1192-1192"];
m8_835 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1188-1188"];
m8_836 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1190-1190"];
m8_842 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledPutAddsCash()", span="1166-1166"];
m8_31 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="Liquidate()", span="95-95"];
m8_39 [cluster="Unk.SetCash", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.SetCash", span=""];
m8_533 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", span="25-25"];
m8_41 [cluster="Unk.FirstOrDefault", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.FirstOrDefault", span=""];
m8_361 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", span="549-549"];
m8_364 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="553-553"];
m8_362 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="551-551"];
m8_363 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="552-552"];
m8_365 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(10000)", span="554-554"];
m8_366 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.CashBook.Add(''BTC'', 0, 4000.01m)", span="555-555"];
m8_367 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.BTCUSD, new QuantConnect.Securities.Crypto.Crypto(SecurityExchangeHours, portfolio.CashBook[''USD''], CreateTradeBarDataConfig(SecurityType.Crypto, \r\n                Symbols.BTCUSD), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="557-558"];
m8_370 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(10000, portfolio.Cash)", span="561-561"];
m8_373 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="565-565"];
m8_375 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(10000, portfolio.Cash)", span="567-567"];
m8_376 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(2, portfolio.CashBook[''BTC''].Amount)", span="568-568"];
m8_377 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(1999.98, portfolio.CashBook[''USD''].Amount)", span="569-569"];
m8_369 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="560-560"];
m8_374 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(2, security.Holdings.Quantity)", span="566-566"];
m8_368 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var security = securities[Symbols.BTCUSD]", span="559-559"];
m8_371 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.BTCUSD, 2, DateTime.MinValue))", span="563-563"];
m8_372 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var fill = new OrderEvent(1, Symbols.BTCUSD, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 4000.01m, 2, orderFee)", span="564-564"];
m8_378 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CryptoFillUpdatesCashCorrectly()", span="549-549"];
m8_33 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="99-99"];
m8_207 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="200-200"];
m8_26 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="var underlyingSymbol = contract.Symbol.Underlying", span="78-78"];
m8_1002 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", span="1420-1420"];
m8_1007 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1426-1426"];
m8_1004 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1423-1423"];
m8_1005 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1424-1424"];
m8_1006 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1425-1425"];
m8_1008 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1428-1428"];
m8_1011 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash((192 - 189) * 100)", span="1433-1433"];
m8_1024 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1453-1453"];
m8_1026 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1458-1458"];
m8_1027 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1459-1459"];
m8_1028 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1462-1462"];
m8_1012 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1435-1435"];
m8_1013 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1436-1436"];
m8_1003 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="1422-1422"];
m8_1014 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1437-1437"];
m8_1015 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="1438-1438"];
m8_1016 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1440-1440"];
m8_1017 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1441-1441"];
m8_1019 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1443-1443"];
m8_1025 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1457-1457"];
m8_1010 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1430-1430"];
m8_1018 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1442-1442"];
m8_1009 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1429-1429"];
m8_1022 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1449-1449"];
m8_1023 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="1451-1451"];
m8_1020 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1444-1444"];
m8_1021 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1446-1446"];
m8_1029 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledPutAssignmentReducesCash()", span="1420-1420"];
m8_788 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", span="1125-1125"];
m8_793 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1131-1131"];
m8_790 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1128-1128"];
m8_791 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1129-1129"];
m8_792 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1130-1130"];
m8_794 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1133-1133"];
m8_797 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="1137-1137"];
m8_809 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="1154-1154"];
m8_810 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1158-1158"];
m8_811 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1159-1159"];
m8_812 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1162-1162"];
m8_798 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1139-1139"];
m8_799 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1140-1140"];
m8_789 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="1127-1127"];
m8_800 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 190 })", span="1141-1141"];
m8_801 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="1142-1142"];
m8_802 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="1144-1144"];
m8_803 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1145-1145"];
m8_805 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1147-1147"];
m8_796 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1135-1135"];
m8_804 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1146-1146"];
m8_795 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1134-1134"];
m8_808 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="1152-1152"];
m8_806 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1148-1148"];
m8_807 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1150-1150"];
m8_813 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseOTMCashSettledCallAddsNoCash()", span="1125-1125"];
m8_201 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m8_911 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", span="1290-1290"];
m8_916 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1296-1296"];
m8_913 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1293-1293"];
m8_914 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1294-1294"];
m8_915 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1295-1295"];
m8_917 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1298-1298"];
m8_920 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="1301-1301"];
m8_932 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="1318-1318"];
m8_933 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual((195 - 192) * 100, portfolio.Cash)", span="1322-1322"];
m8_934 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1323-1323"];
m8_935 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(1, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1326-1326"];
m8_921 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1303-1303"];
m8_922 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1304-1304"];
m8_912 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="1292-1292"];
m8_923 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1305-1305"];
m8_924 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 2)", span="1306-1306"];
m8_925 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1308-1308"];
m8_926 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1309-1309"];
m8_928 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1311-1311"];
m8_919 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1300-1300"];
m8_927 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1310-1310"];
m8_918 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1299-1299"];
m8_931 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="1316-1316"];
m8_929 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1312-1312"];
m8_930 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1314-1314"];
m8_936 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCashSettledCallAddsSomeCash()", span="1290-1290"];
m8_667 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", span="946-946"];
m8_672 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="952-952"];
m8_669 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="949-949"];
m8_670 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="950-950"];
m8_671 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="951-951"];
m8_673 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="954-954"];
m8_676 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="957-957"];
m8_688 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="976-976"];
m8_690 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(192 * 100, portfolio.Cash)", span="984-984"];
m8_693 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="989-989"];
m8_691 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-100, newUnderlyingHoldings.Quantity)", span="985-985"];
m8_692 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="986-986"];
m8_677 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="959-959"];
m8_678 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="960-960"];
m8_668 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="948-948"];
m8_679 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -1)", span="961-961"];
m8_680 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="962-962"];
m8_681 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="964-964"];
m8_682 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="965-965"];
m8_684 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="967-967"];
m8_689 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="983-983"];
m8_675 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="956-956"];
m8_683 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="966-966"];
m8_674 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="955-955"];
m8_686 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="972-972"];
m8_687 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="974-974"];
m8_685 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="969-969"];
m8_694 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCallAssignmentAddsUnderlyingPositionAddsCash()", span="946-946"];
m8_112 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="93-93"];
m8_1075 [cluster="System.NotImplementedException.NotImplementedException(string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m8_208 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", span="1542-1542"];
m8_1083 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="OptionSplitRegressionAlgorithm.cs", label="_tickets[ticket.OrderId] = ticket", span="1544-1544"];
m8_1084 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", span="1542-1542"];
m8_1091 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="1554-1554"];
m8_1092 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="OptionSplitRegressionAlgorithm.cs", label="return _orders.Values.FirstOrDefault(x => x.BrokerId.Contains(brokerageId));", span="1556-1556"];
m8_1093 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="1554-1554"];
m8_577 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", span="819-819"];
m8_582 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="825-825"];
m8_579 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="822-822"];
m8_580 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="823-823"];
m8_581 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="824-824"];
m8_583 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="827-827"];
m8_586 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="831-831"];
m8_598 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="848-848"];
m8_600 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="853-853"];
m8_603 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="858-858"];
m8_601 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.Quantity)", span="854-854"];
m8_602 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.AveragePrice)", span="855-855"];
m8_587 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="833-833"];
m8_588 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="834-834"];
m8_578 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="821-821"];
m8_589 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="835-835"];
m8_590 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 2000 })", span="836-836"];
m8_591 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="838-838"];
m8_592 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="839-839"];
m8_594 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="841-841"];
m8_599 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="852-852"];
m8_585 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="829-829"];
m8_593 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="840-840"];
m8_584 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="828-828"];
m8_597 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="846-846"];
m8_595 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="842-842"];
m8_596 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="844-844"];
m8_604 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CashSettledExerciseOTMPutDoesntChangeAnything()", span="819-819"];
m8_276 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", span="428-428"];
m8_279 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="432-432"];
m8_277 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="430-430"];
m8_278 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="431-431"];
m8_280 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="433-433"];
m8_283 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fillBuy)", span="438-438"];
m8_284 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="440-440"];
m8_287 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fillSell)", span="444-444"];
m8_288 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-100 * 50, portfolio.Cash)", span="446-446"];
m8_285 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="441-441"];
m8_289 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.Quantity)", span="447-447"];
m8_281 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.Fut_SPY_Feb19_2016, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Future, Symbols.Fut_SPY_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), new SymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 50, 0.01m, 1)))", span="435-435"];
m8_282 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="var fillBuy = new OrderEvent(1, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 100, 100, 0)", span="437-437"];
m8_286 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="var fillSell = new OrderEvent(2, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell, 99, -100, 0)", span="443-443"];
m8_290 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsToCashOnClose()", span="428-428"];
m8_43 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52"];
m8_214 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="543-543"];
m8_536 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="36-36"];
m8_1080 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", span="72-72"];
m8_109 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m8_28 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="contract.AskPrice != 1.1m", span="82-82"];
m8_1094 [cluster="Unk.FirstOrDefault", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.FirstOrDefault", span=""];
m8_198 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374"];
m8_637 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", span="903-903"];
m8_642 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="909-909"];
m8_639 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="906-906"];
m8_640 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="907-907"];
m8_641 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="908-908"];
m8_643 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="911-911"];
m8_646 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(192 * 100)", span="916-916"];
m8_657 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="932-932"];
m8_659 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="937-937"];
m8_662 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(1, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="942-942"];
m8_660 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="938-938"];
m8_661 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="939-939"];
m8_647 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="918-918"];
m8_648 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="919-919"];
m8_638 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="905-905"];
m8_649 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 2)", span="920-920"];
m8_650 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 200 })", span="921-921"];
m8_651 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="923-923"];
m8_652 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="924-924"];
m8_654 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="926-926"];
m8_658 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="936-936"];
m8_645 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="913-913"];
m8_653 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="925-925"];
m8_644 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="912-912"];
m8_656 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="930-930"];
m8_655 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="928-928"];
m8_663 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.PartialExerciseCallAddsUnderlyingPositionReducesCash()", span="903-903"];
m8_202 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m8_1098 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m8_417 [cluster="QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="258-258"];
m8_543 [cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33"];
m8_1099 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="1559-1559"];
m8_1100 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="OptionSplitRegressionAlgorithm.cs", label="return _tickets.Values.Where(filter ?? (x => true));", span="1561-1561"];
m8_1101 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="1559-1559"];
m8_759 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", span="1084-1084"];
m8_764 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1090-1090"];
m8_761 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1087-1087"];
m8_762 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1088-1088"];
m8_763 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1089-1089"];
m8_765 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1092-1092"];
m8_768 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="1096-1096"];
m8_780 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="1113-1113"];
m8_781 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual((195 - 192) * 100, portfolio.Cash)", span="1117-1117"];
m8_782 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1118-1118"];
m8_783 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1121-1121"];
m8_769 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1098-1098"];
m8_770 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1099-1099"];
m8_760 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="1086-1086"];
m8_771 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1100-1100"];
m8_772 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 1)", span="1101-1101"];
m8_773 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 1, 0, 0, securities.UtcTime, ''''))", span="1103-1103"];
m8_774 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1104-1104"];
m8_776 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1106-1106"];
m8_767 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1094-1094"];
m8_775 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1105-1105"];
m8_766 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1093-1093"];
m8_779 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="1111-1111"];
m8_777 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1107-1107"];
m8_778 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1109-1109"];
m8_784 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.FullExerciseCashSettledCallAddsCash()", span="1084-1084"];
m8_131 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="232-232"];
m8_138 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="240-240"];
m8_134 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="236-236"];
m8_135 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="237-237"];
m8_137 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="239-239"];
m8_139 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.CashBook[''USD''].SetAmount(quantity)", span="241-241"];
m8_153 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(portfolio.CashBook[''USD''].Amount, fill.FillPrice*fill.FillQuantity)", span="258-258"];
m8_154 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="260-260"];
m8_155 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.MarginRemaining)", span="262-262"];
m8_156 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="263-263"];
m8_157 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(quantity, portfolio.TotalPortfolioValue)", span="264-264"];
m8_159 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="268-268"];
m8_164 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(quantity, portfolio.MarginRemaining)", span="277-277"];
m8_165 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="278-278"];
m8_166 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(quantity * 2, portfolio.TotalPortfolioValue)", span="279-279"];
m8_168 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, anotherOrder)", span="283-283"];
m8_173 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-quantity/2m, portfolio.MarginRemaining)", span="292-292"];
m8_174 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="293-293"];
m8_175 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(quantity/2m, portfolio.TotalPortfolioValue)", span="294-294"];
m8_177 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="299-299"];
m8_183 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="311-311"];
m8_189 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="321-321"];
m8_190 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.TotalPortfolioValue)", span="323-323"];
m8_191 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="325-325"];
m8_195 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.GreaterOrEqual(-portfolio.MarginRemaining, security.Price * marginCallOrders[0].Quantity)", span="329-329"];
m8_194 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-security.Holdings.Quantity, marginCallOrders[0].Quantity)", span="328-328"];
m8_179 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, marginCallOrders.Count)", span="301-301"];
m8_185 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, marginCallOrders.Count)", span="313-313"];
m8_141 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="244-244"];
m8_133 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="int quantity = (int) (1000*leverage)", span="235-235"];
m8_142 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var security = securities[Symbols.AAPL]", span="245-245"];
m8_136 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var orderProcessor = new OrderProcessor()", span="238-238"];
m8_140 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="243-243"];
m8_148 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="253-253"];
m8_152 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="257-257"];
m8_158 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var newOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) {Price = buyPrice}", span="267-267"];
m8_160 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsFalse(sufficientCapital)", span="269-269"];
m8_163 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, highPrice, highPrice, highPrice, highPrice, 1))", span="275-275"];
m8_167 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var anotherOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) { Price = highPrice }", span="282-282"];
m8_169 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsTrue(sufficientCapital)", span="284-284"];
m8_172 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="290-290"];
m8_176 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="bool issueMarginCallWarning", span="298-298"];
m8_178 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsFalse(issueMarginCallWarning)", span="300-300"];
m8_182 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, newPrice, newPrice, newPrice, newPrice, 1))", span="308-308"];
m8_184 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsTrue(issueMarginCallWarning)", span="312-312"];
m8_188 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="319-319"];
m8_192 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsTrue(issueMarginCallWarning)", span="326-326"];
m8_193 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreNotEqual(0, marginCallOrders.Count)", span="327-327"];
m8_146 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, buyPrice, buyPrice, buyPrice, buyPrice, 1))", span="250-250"];
m8_186 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="316-316"];
m8_180 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetLeverage(leverage * 2)", span="304-304"];
m8_161 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="time = time.AddDays(1)", span="273-273"];
m8_170 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="time = time.AddDays(1)", span="288-288"];
m8_143 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetLeverage(leverage)", span="246-246"];
m8_132 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="decimal leverage = 1m", span="234-234"];
m8_147 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var order = new MarketOrder(Symbols.AAPL, quantity, time) {Price = buyPrice}", span="252-252"];
m8_187 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="order = new MarketOrder(Symbols.AAPL, quantity, time) { Price = buyPrice }", span="318-318"];
m8_150 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="255-255"];
m8_149 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddOrder(order)", span="254-254"];
m8_145 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="decimal buyPrice = 1m", span="249-249"];
m8_151 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="request.SetOrderId(0)", span="256-256"];
m8_144 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="var time = DateTime.Now", span="248-248"];
m8_162 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="decimal highPrice = buyPrice * 2", span="274-274"];
m8_171 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="decimal lowPrice = buyPrice/2", span="289-289"];
m8_181 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="decimal newPrice = lowPrice + 0.01m", span="307-307"];
m8_196 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="232-232"];
m8_34 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="var contract =\r\n                            chain.OrderBy(x => x.Expiry)\r\n                            .Where(x => x.Right == OptionRight.Call && x.Strike == 33 && x.Expiry.Date == new DateTime(2013, 08, 17))\r\n                            .FirstOrDefault()", span="101-104"];
m8_1079 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="43-43"];
m8_24 [cluster="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionSplitRegressionAlgorithm.cs", label="contract != null", span="72-72"];
m8_200 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", span="1510-1510"];
m8_1064 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="type == SecurityType.Equity", span="1512-1512"];
m8_1065 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1513-1513"];
m8_1066 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="type == SecurityType.Forex", span="1514-1514"];
m8_1067 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1515-1515"];
m8_1068 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="type == SecurityType.Future", span="1516-1516"];
m8_1069 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1517-1517"];
m8_1070 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="type == SecurityType.Crypto", span="1518-1518"];
m8_1071 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="1519-1519"];
m8_1072 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="throw new NotImplementedException(type.ToString());", span="1520-1520"];
m8_1073 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", span="1510-1510"];
m8_291 [cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70"];
m8_537 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="49-49"];
m8_425 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", span="621-621"];
m8_433 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="630-630"];
m8_429 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="626-626"];
m8_430 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="627-627"];
m8_432 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="629-629"];
m8_434 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.CashBook[''USD''].SetAmount(amount)", span="631-631"];
m8_448 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="649-649"];
m8_450 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="653-653"];
m8_453 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="658-658"];
m8_459 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="668-668"];
m8_462 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="673-673"];
m8_436 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="634-634"];
m8_428 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="int quantity = (int)(amount * leverage)", span="625-625"];
m8_437 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="var security = securities[Symbols.AAPL]", span="635-635"];
m8_431 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="var orderProcessor = new OrderProcessor()", span="628-628"];
m8_427 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="int amount = 1000", span="624-624"];
m8_435 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="633-633"];
m8_443 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="643-643"];
m8_447 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="647-647"];
m8_449 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="var newOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) { Price = buyPrice }", span="652-652"];
m8_451 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsFalse(sufficientCapital)", span="654-654"];
m8_452 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="newOrder = new MarketOrder(Symbols.AAPL, -quantity, time.AddSeconds(1)) { Price = buyPrice }", span="657-657"];
m8_454 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsTrue(sufficientCapital)", span="659-659"];
m8_458 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="newOrder = new MarketOrder(Symbols.AAPL, -quantity, time.AddSeconds(1)) { Price = lowPrice }", span="667-667"];
m8_460 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsTrue(sufficientCapital)", span="669-669"];
m8_461 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="newOrder = new MarketOrder(Symbols.AAPL, -quantity - 1, time.AddSeconds(1)) { Price = lowPrice }", span="672-672"];
m8_463 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsFalse(sufficientCapital)", span="674-674"];
m8_441 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, buyPrice, buyPrice, buyPrice, buyPrice, 1))", span="640-640"];
m8_457 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="664-664"];
m8_455 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="time = time.AddDays(1)", span="662-662"];
m8_438 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="security.SetLeverage(leverage)", span="636-636"];
m8_426 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="decimal leverage = 2m", span="623-623"];
m8_442 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="var order = new MarketOrder(Symbols.AAPL, quantity, time) { Price = buyPrice }", span="642-642"];
m8_445 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="645-645"];
m8_444 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddOrder(order)", span="644-644"];
m8_440 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="decimal buyPrice = 1m", span="639-639"];
m8_446 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="request.SetOrderId(0)", span="646-646"];
m8_439 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="var time = DateTime.Now", span="638-638"];
m8_456 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="decimal lowPrice = buyPrice / 2", span="663-663"];
m8_464 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyLongSellZeroShort()", span="621-621"];
m8_258 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m8_539 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m8_538 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", span="1523-1523"];
m8_1077 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="return new OptionSymbolProperties(SymbolPropertiesDatabase.FromDataFolder().GetSymbolProperties(symbol.ID.Market, symbol, symbol.SecurityType, CashBook.AccountCurrency));", span="1525-1525"];
m8_1078 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.GetOptionSymbolProperties(QuantConnect.Symbol)", span="1523-1523"];
m8_1033 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", span="1466-1466"];
m8_1038 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1472-1472"];
m8_1035 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1469-1469"];
m8_1036 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1470-1470"];
m8_1037 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1471-1471"];
m8_1039 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1474-1474"];
m8_1042 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash((192 - 189) * 100)", span="1479-1479"];
m8_1055 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1498-1498"];
m8_1057 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1503-1503"];
m8_1058 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1504-1504"];
m8_1059 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-1, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1507-1507"];
m8_1043 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1481-1481"];
m8_1044 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1482-1482"];
m8_1034 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="1468-1468"];
m8_1045 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 189 })", span="1483-1483"];
m8_1046 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -2)", span="1484-1484"];
m8_1047 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1486-1486"];
m8_1048 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1487-1487"];
m8_1050 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1489-1489"];
m8_1056 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1502-1502"];
m8_1041 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1476-1476"];
m8_1049 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1488-1488"];
m8_1040 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1475-1475"];
m8_1053 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1495-1495"];
m8_1054 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="1496-1496"];
m8_1051 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1490-1490"];
m8_1052 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1492-1492"];
m8_1060 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialCashSettledPutAssignmentReducesSomeCash()", span="1466-1466"];
m8_117 [cluster="decimal.ToString(string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry decimal.ToString(string)", span="0-0"];
m8_380 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="573-573"];
m8_384 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="578-578"];
m8_382 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="576-576"];
m8_383 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="577-577"];
m8_385 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(1000)", span="579-579"];
m8_390 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(1000, portfolio.Cash)", span="584-584"];
m8_391 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="585-585"];
m8_395 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="591-591"];
m8_397 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-1, portfolio.Cash)", span="593-593"];
m8_398 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="594-594"];
m8_402 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="600-600"];
m8_404 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-2, portfolio.Cash)", span="602-602"];
m8_405 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="603-603"];
m8_407 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ScanForCashSettlement(timeUtc)", span="607-607"];
m8_408 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-2, portfolio.Cash)", span="608-608"];
m8_409 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="609-609"];
m8_413 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ScanForCashSettlement(timeUtc)", span="615-615"];
m8_414 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(998, portfolio.Cash)", span="616-616"];
m8_415 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="617-617"];
m8_389 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="583-583"];
m8_396 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(10, security.Holdings.Quantity)", span="592-592"];
m8_403 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="601-601"];
m8_386 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.AAPL, new QuantConnect.Securities.Equity.Equity(securityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="580-580"];
m8_381 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var securityExchangeHours = SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="575-575"];
m8_387 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var security = securities[Symbols.AAPL]", span="581-581"];
m8_392 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var timeUtc = new DateTime(2015, 10, 26, 15, 30, 0)", span="588-588"];
m8_394 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Buy, 100, 10, orderFee)", span="590-590"];
m8_399 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="timeUtc = timeUtc.AddDays(1)", span="597-597"];
m8_401 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="fill = new OrderEvent(2, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Sell, 100, -10, orderFee)", span="599-599"];
m8_406 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="timeUtc = timeUtc.AddDays(2)", span="606-606"];
m8_410 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var marketOpen = securityExchangeHours.MarketHours[timeUtc.DayOfWeek].GetMarketOpen(TimeSpan.Zero, false)", span="612-612"];
m8_412 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="timeUtc = timeUtc.AddDays(1).Date.Add(marketOpen.Value).ConvertToUtc(securityExchangeHours.TimeZone)", span="614-614"];
m8_388 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="security.SettlementModel = new DelayedSettlementModel(3, TimeSpan.FromHours(8))", span="582-582"];
m8_393 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var orderFee = security.FeeModel.GetOrderFee(security,new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="589-589"];
m8_400 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="598-598"];
m8_411 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsTrue(marketOpen.HasValue)", span="613-613"];
m8_416 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="573-573"];
m8_203 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m8_256 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m8_293 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", span="451-451"];
m8_296 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="455-455"];
m8_294 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="453-453"];
m8_295 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="454-454"];
m8_297 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="456-456"];
m8_300 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fillBuy)", span="461-461"];
m8_303 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fillSell)", span="466-466"];
m8_301 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100 * 100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.TotalSaleVolume)", span="463-463"];
m8_304 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(2 * 100 * 100, securities[Symbols.Fut_SPY_Feb19_2016].Holdings.TotalSaleVolume)", span="468-468"];
m8_298 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.Fut_SPY_Feb19_2016, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Future, Symbols.Fut_SPY_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), new SymbolProperties('''', CashBook.AccountCurrency.ToUpper(), 50, 0.01m, 1)))", span="458-458"];
m8_299 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="var fillBuy = new OrderEvent(1, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 100, 100, 0)", span="460-460"];
m8_302 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="var fillSell = new OrderEvent(2, Symbols.Fut_SPY_Feb19_2016, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell, 100, -100, 0)", span="465-465"];
m8_305 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.BuyingSellingFuturesAddsCorrectSales()", span="451-451"];
m8_1111 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="1571-1571"];
m8_1112 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="OptionSplitRegressionAlgorithm.cs", label="return _orders.Values.Where(filter ?? (x => true));", span="1573-1573"];
m8_1113 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="1571-1571"];
m8_306 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", span="472-472"];
m8_309 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="476-476"];
m8_307 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="474-474"];
m8_308 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="475-475"];
m8_310 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="477-477"];
m8_313 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="482-482"];
m8_314 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="484-484"];
m8_315 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-100, securities[Symbols.AAPL].Holdings.Quantity)", span="485-485"];
m8_311 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="479-479"];
m8_312 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="481-481"];
m8_316 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", span="472-472"];
m8_30 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m8_25 [cluster="Unk.Descendants", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.Descendants", span=""];
m8_29 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m8_32 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="91-91"];
m8_212 [cluster="Unk.IsFalse", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.IsFalse", span=""];
m8_275 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, decimal, decimal, string)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, decimal, decimal, string)", span="113-113"];
m8_424 [cluster="System.DateTime.Add(System.TimeSpan)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m8_878 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="43-43"];
m8_1090 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m8_199 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="117-117"];
m8_292 [cluster="string.ToUpper()", file="OptionSplitRegressionAlgorithm.cs", label="Entry string.ToUpper()", span="0-0"];
m8_1085 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="1547-1547"];
m8_1087 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="OptionSplitRegressionAlgorithm.cs", label="_orders.TryGetValue(orderId, out order)", span="1550-1550"];
m8_1086 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="OptionSplitRegressionAlgorithm.cs", label="Order order", span="1549-1549"];
m8_1088 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="OptionSplitRegressionAlgorithm.cs", label="return order;", span="1551-1551"];
m8_1089 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="1547-1547"];
m8_534 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50"];
m8_204 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="1537-1537"];
m8_1081 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="OptionSplitRegressionAlgorithm.cs", label="_orders[order.Id] = order", span="1539-1539"];
m8_1082 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="1537-1537"];
m8_422 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="830-830"];
m8_547 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", span="778-778"];
m8_552 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="784-784"];
m8_549 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="781-781"];
m8_550 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="782-782"];
m8_551 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="783-783"];
m8_553 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="786-786"];
m8_556 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="790-790"];
m8_567 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="806-806"];
m8_569 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="810-810"];
m8_572 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="815-815"];
m8_570 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.Quantity)", span="811-811"];
m8_571 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, newUnderlyingHoldings.AveragePrice)", span="812-812"];
m8_557 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="792-792"];
m8_558 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="793-793"];
m8_548 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="780-780"];
m8_559 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 100)", span="794-794"];
m8_560 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new Tick { Value = 20 })", span="795-795"];
m8_561 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, 100, 0, 0, securities.UtcTime, ''''))", span="797-797"];
m8_562 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="798-798"];
m8_564 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="800-800"];
m8_568 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="809-809"];
m8_555 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="788-788"];
m8_563 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="799-799"];
m8_554 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="787-787"];
m8_566 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="804-804"];
m8_565 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="802-802"];
m8_573 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ExerciseOTMCallDoesntChangeAnything()", span="778-778"];
m8_114 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78"];
m8_110 [cluster="QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", span="37-37"];
m8_379 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m8_217 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="333-333"];
m8_222 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="339-339"];
m8_218 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="335-335"];
m8_219 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="336-336"];
m8_221 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="338-338"];
m8_223 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.CashBook[''USD''].SetAmount(1000)", span="340-340"];
m8_224 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.CashBook.Add(''EUR'',  1000, 1.1m)", span="341-341"];
m8_225 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.CashBook.Add(''GBP'', -1000, 2.0m)", span="342-342"];
m8_226 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var eurCash = portfolio.CashBook[''EUR'']", span="344-344"];
m8_227 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var gbpCash = portfolio.CashBook[''GBP'']", span="345-345"];
m8_228 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var usdCash = portfolio.CashBook[''USD'']", span="346-346"];
m8_250 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, acceptedOrder)", span="396-396"];
m8_253 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, rejectedOrder)", span="400-400"];
m8_231 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(new Security(SecurityExchangeHours, config1, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="350-350"];
m8_236 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, usdCash, config2, SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="360-360"];
m8_241 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, gbpCash, config3, SymbolProperties.GetDefault(gbpCash.Symbol)))", span="370-370"];
m8_232 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.AAPL].SetLeverage(2m)", span="351-351"];
m8_233 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, 100)", span="352-352"];
m8_234 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.AAPL].SetMarketPrice(new TradeBar{Time = time, Value = 100})", span="353-353"];
m8_237 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.EURUSD].SetLeverage(100m)", span="361-361"];
m8_238 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.EURUSD].Holdings.SetHoldings(1.1m, 1000)", span="362-362"];
m8_239 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.EURUSD].SetMarketPrice(new TradeBar { Time = time, Value = 1.1m })", span="363-363"];
m8_242 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.EURGBP].SetLeverage(100m)", span="371-371"];
m8_243 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.EURGBP].Holdings.SetHoldings(1m, 1000)", span="372-372"];
m8_244 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.EURGBP].SetMarketPrice(new TradeBar { Time = time, Value = 1m })", span="373-373"];
m8_220 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var orderProcessor = new OrderProcessor()", span="337-337"];
m8_229 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var time = DateTime.Now", span="348-348"];
m8_249 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="395-395"];
m8_245 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var acceptedOrder = new MarketOrder(Symbols.AAPL, 101, DateTime.Now) { Price = 100 }", span="391-391"];
m8_251 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsTrue(sufficientCapital)", span="397-397"];
m8_252 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var rejectedOrder = new MarketOrder(Symbols.AAPL, 102, DateTime.Now) { Price = 100 }", span="399-399"];
m8_254 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsFalse(sufficientCapital)", span="401-401"];
m8_230 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var config1 = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="349-349"];
m8_235 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var config2 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD)", span="359-359"];
m8_240 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var config3 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURGBP)", span="369-369"];
m8_246 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddOrder(acceptedOrder)", span="392-392"];
m8_247 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="var request = new SubmitOrderRequest(OrderType.Market, acceptedOrder.SecurityType, acceptedOrder.Symbol, acceptedOrder.Quantity, 0, 0, acceptedOrder.Time, null)", span="393-393"];
m8_248 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="request.SetOrderId(0)", span="394-394"];
m8_255 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="333-333"];
m8_342 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="526-526"];
m8_345 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="530-530"];
m8_343 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="528-528"];
m8_344 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="529-529"];
m8_346 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(1000)", span="531-531"];
m8_347 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.CashBook.Add(''EUR'', 0, 1.1000m)", span="532-532"];
m8_348 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.EURUSD, new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, portfolio.CashBook[''USD''], CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="534-534"];
m8_351 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(1000, portfolio.Cash)", span="537-537"];
m8_354 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.ProcessFill(fill)", span="541-541"];
m8_356 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(998, portfolio.Cash)", span="543-543"];
m8_357 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100, portfolio.CashBook[''EUR''].Amount)", span="544-544"];
m8_358 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(888, portfolio.CashBook[''USD''].Amount)", span="545-545"];
m8_350 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="536-536"];
m8_355 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100, security.Holdings.Quantity)", span="542-542"];
m8_349 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var security = securities[Symbols.EURUSD]", span="535-535"];
m8_352 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.EURUSD, 100, DateTime.MinValue))", span="539-539"];
m8_353 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="var fill = new OrderEvent(1, Symbols.EURUSD, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 1.1000m, 100, orderFee)", span="540-540"];
m8_359 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="526-526"];
m8_540 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144"];
m8_210 [cluster="System.DateTime.AddSeconds(double)", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m8_360 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m8_116 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="OptionSplitRegressionAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_879 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", span="1248-1248"];
m8_884 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1254-1254"];
m8_881 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1251-1251"];
m8_882 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1252-1252"];
m8_883 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="var orderProcessor = new OrderProcessor()", span="1253-1253"];
m8_885 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="var time = DateTime.Now", span="1256-1256"];
m8_888 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(1000)", span="1260-1260"];
m8_900 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1275-1275"];
m8_908 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1285-1285"];
m8_889 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1262-1262"];
m8_890 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1263-1263"];
m8_880 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="1250-1250"];
m8_886 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1257-1257"];
m8_891 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1264-1264"];
m8_892 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -10)", span="1265-1265"];
m8_893 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1267-1267"];
m8_894 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1268-1268"];
m8_902 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 150 })", span="1278-1278"];
m8_887 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="1258-1258"];
m8_896 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddOrder(order)", span="1271-1271"];
m8_899 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1274-1274"];
m8_904 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddOrder(order)", span="1281-1281"];
m8_907 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1284-1284"];
m8_895 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="var order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, -10, time.AddSeconds(1))", span="1270-1270"];
m8_903 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, -10, time.AddSeconds(1))", span="1280-1280"];
m8_901 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsFalse(sufficientCapital)", span="1276-1276"];
m8_909 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsTrue(sufficientCapital)", span="1286-1286"];
m8_897 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1272-1272"];
m8_905 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1282-1282"];
m8_898 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="request.SetOrderId(0)", span="1273-1273"];
m8_906 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="request.SetOrderId(0)", span="1283-1283"];
m8_910 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionAssignment()", span="1248-1248"];
m8_257 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m8_215 [cluster="Unk.AreNotEqual", file="OptionSplitRegressionAlgorithm.cs", label="Entry Unk.AreNotEqual", span=""];
m8_846 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", span="1206-1206"];
m8_851 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1212-1212"];
m8_848 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1209-1209"];
m8_849 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1210-1210"];
m8_850 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="var orderProcessor = new OrderProcessor()", span="1211-1211"];
m8_852 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="var time = DateTime.Now", span="1214-1214"];
m8_855 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(1000)", span="1218-1218"];
m8_867 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1233-1233"];
m8_875 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, order)", span="1243-1243"];
m8_856 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1220-1220"];
m8_857 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1221-1221"];
m8_847 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="1208-1208"];
m8_853 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1215-1215"];
m8_858 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 195 })", span="1222-1222"];
m8_859 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, 10)", span="1223-1223"];
m8_860 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1225-1225"];
m8_861 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1226-1226"];
m8_869 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 150 })", span="1236-1236"];
m8_854 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="1216-1216"];
m8_863 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddOrder(order)", span="1229-1229"];
m8_866 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1232-1232"];
m8_871 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddOrder(order)", span="1239-1239"];
m8_874 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="1242-1242"];
m8_862 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="var order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, 10, time.AddSeconds(1))", span="1228-1228"];
m8_870 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="order = new OptionExerciseOrder(Symbols.SPY_C_192_Feb19_2016, 10, time.AddSeconds(1))", span="1238-1238"];
m8_868 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsFalse(sufficientCapital)", span="1234-1234"];
m8_876 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.IsTrue(sufficientCapital)", span="1244-1244"];
m8_864 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1230-1230"];
m8_872 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, order.Quantity, 0, 0, order.Time, null)", span="1240-1240"];
m8_865 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="request.SetOrderId(0)", span="1231-1231"];
m8_873 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="request.SetOrderId(0)", span="1241-1241"];
m8_877 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyOnOptionExercise()", span="1206-1206"];
m8_423 [cluster="QuantConnect.Securities.LocalMarketHours.GetMarketOpen(System.TimeSpan, bool)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.LocalMarketHours.GetMarketOpen(System.TimeSpan, bool)", span="172-172"];
m8_971 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", span="1375-1375"];
m8_976 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1381-1381"];
m8_973 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1378-1378"];
m8_974 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1379-1379"];
m8_975 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1380-1380"];
m8_977 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1383-1383"];
m8_980 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(0)", span="1387-1387"];
m8_993 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1407-1407"];
m8_995 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1412-1412"];
m8_996 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY].Holdings.Quantity)", span="1413-1413"];
m8_997 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, securities[Symbols.SPY_C_192_Feb19_2016].Holdings.Quantity)", span="1416-1416"];
m8_981 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1389-1389"];
m8_982 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_C_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_C_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_C_192_Feb19_2016)))", span="1390-1390"];
m8_972 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="1377-1377"];
m8_983 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY].SetMarketPrice(new TradeBar { Time = securities.UtcTime, Symbol = Symbols.SPY, Close = 10 })", span="1391-1391"];
m8_984 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_C_192_Feb19_2016].Holdings.SetHoldings(1, -100)", span="1392-1392"];
m8_985 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_C_192_Feb19_2016, -100, 0, 0, securities.UtcTime, ''''))", span="1394-1394"];
m8_986 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_C_192_Feb19_2016]", span="1395-1395"];
m8_988 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1397-1397"];
m8_994 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1411-1411"];
m8_979 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1385-1385"];
m8_987 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1396-1396"];
m8_978 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1384-1384"];
m8_991 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1403-1403"];
m8_992 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="1405-1405"];
m8_989 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="option.ExerciseSettlement = SettlementType.Cash", span="1398-1398"];
m8_990 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1400-1400"];
m8_998 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalCashSettledOTMCallAssignmentDoesntChangeAnything()", span="1375-1375"];
m8_729 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", span="1038-1038"];
m8_734 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="1044-1044"];
m8_731 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="var securities = new SecurityManager(TimeKeeper)", span="1041-1041"];
m8_732 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="var transactions = new SecurityTransactionManager(securities)", span="1042-1042"];
m8_733 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="var transactionHandler = new BacktestingTransactionHandler()", span="1043-1043"];
m8_735 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="algorithm.Securities = securities", span="1046-1046"];
m8_738 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="portfolio.SetCash(192 * 100)", span="1051-1051"];
m8_749 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="portfolioModel.ProcessFill(portfolio, option, fill)", span="1069-1069"];
m8_751 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(0, portfolio.Cash)", span="1075-1075"];
m8_754 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(-1, securities[Symbols.SPY_P_192_Feb19_2016].Holdings.Quantity)", span="1080-1080"];
m8_752 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(100, newUnderlyingHoldings.Quantity)", span="1076-1076"];
m8_753 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="Assert.AreEqual(192.0, newUnderlyingHoldings.AveragePrice)", span="1077-1077"];
m8_739 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="1053-1053"];
m8_740 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="securities.Add(Symbols.SPY_P_192_Feb19_2016, new Option(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.SPY_P_192_Feb19_2016), new Cash(CashBook.AccountCurrency, 0, 1m), GetOptionSymbolProperties(Symbols.SPY_P_192_Feb19_2016)))", span="1054-1054"];
m8_730 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="var algorithm = new QCAlgorithm()", span="1040-1040"];
m8_741 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="securities[Symbols.SPY_P_192_Feb19_2016].Holdings.SetHoldings(1, -2)", span="1055-1055"];
m8_742 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.AddOrder(new SubmitOrderRequest(OrderType.OptionExercise, SecurityType.Option, Symbols.SPY_P_192_Feb19_2016, -1, 0, 0, securities.UtcTime, ''''))", span="1057-1057"];
m8_743 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="var option = (Option)securities[Symbols.SPY_P_192_Feb19_2016]", span="1058-1058"];
m8_745 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="option.Underlying = securities[Symbols.SPY]", span="1060-1060"];
m8_750 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="var newUnderlyingHoldings = securities[Symbols.SPY].Holdings", span="1074-1074"];
m8_737 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="transactions.SetOrderProcessor(transactionHandler)", span="1048-1048"];
m8_744 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="var order = (OptionExerciseOrder)transactions.GetOrders(x => true).First()", span="1059-1059"];
m8_736 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="transactionHandler.Initialize(algorithm, new BacktestingBrokerage(algorithm), new TestResultHandler(Console.WriteLine))", span="1047-1047"];
m8_747 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="var portfolioModel = (OptionPortfolioModel)option.PortfolioModel", span="1065-1065"];
m8_748 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label=fills, span="1067-1067"];
m8_746 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="var fills = option.OptionExerciseModel.OptionExercise(option, order)", span="1062-1062"];
m8_755 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", file="OptionSplitRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.InternalPartialPutAssignmentAddsUnderlyingPositionReduces()", span="1038-1038"];
m8_418 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="OptionSplitRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="65-65"];
m8_1121 [file="OptionSplitRegressionAlgorithm.cs", label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", span=""];
m8_1122 [file="OptionSplitRegressionAlgorithm.cs", label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", span=""];
m8_1123 [file="OptionSplitRegressionAlgorithm.cs", label=string, span=""];
m9_43 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="153-153"];
m9_44 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="ticket.Cancel(''Tradier Brokerage cancels open orders on reverse split symbols'')", span="153-153"];
m9_45 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="153-153"];
m9_0 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.TradierBrokerageModel(QuantConnect.AccountType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.TradierBrokerageModel(QuantConnect.AccountType)", span="39-39"];
m9_1 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.TradierBrokerageModel(QuantConnect.AccountType)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.TradierBrokerageModel.TradierBrokerageModel(QuantConnect.AccountType)", span="39-39"];
m9_51 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="176-176"];
m9_52 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="return new ConstantFeeModel(1m);", span="178-178"];
m9_53 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.TradierBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="176-176"];
m9_15 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m9_50 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.ImmediateFillModel()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.ImmediateFillModel()", span="26-26"];
m9_42 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="130-130"];
m9_33 [cluster="QuantConnect.Securities.Security.GetLastData()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="585-585"];
m9_55 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="186-186"];
m9_56 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="return new ConstantSlippageModel(0);", span="188-188"];
m9_57 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.TradierBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="186-186"];
m9_2 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="55-55"];
m9_3 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="message = null", span="57-57"];
m9_4 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="var securityType = order.SecurityType", span="59-59"];
m9_8 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="order.Type == OrderType.MarketOnOpen || order.Type == OrderType.MarketOnClose", span="69-69"];
m9_11 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="!CanExecuteOrder(security, order)", span="78-78"];
m9_5 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="securityType != SecurityType.Equity", span="60-60"];
m9_6 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''This model only supports equities.''\r\n                    )", span="62-64"];
m9_7 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="return false;", span="66-66"];
m9_9 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''Tradier brokerage only supports Market orders. MarketOnOpen and MarketOnClose orders not supported.''\r\n                    )", span="71-73"];
m9_10 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="return false;", span="75-75"];
m9_12 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ExtendedMarket'',\r\n                    ''Tradier does not support extended market hours trading.  Your order will be processed at market open.''\r\n                    )", span="80-82"];
m9_13 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="return true;", span="86-86"];
m9_14 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="55-55"];
m9_47 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="166-166"];
m9_48 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="return new ImmediateFillModel();", span="168-168"];
m9_49 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.TradierBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="166-166"];
m9_46 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="264-264"];
m9_35 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="147-147"];
m9_36 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="QCAlgorithm.Trading.cs", label="var splitFactor = split.SplitFactor", span="150-150"];
m9_38 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="QCAlgorithm.Trading.cs", label="tickets.ForEach(ticket => ticket.Cancel(''Tradier Brokerage cancels open orders on reverse split symbols''))", span="153-153"];
m9_39 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="QCAlgorithm.Trading.cs", label="base.ApplySplit(tickets, split)", span="157-157"];
m9_37 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="QCAlgorithm.Trading.cs", label="splitFactor > 1.0m", span="151-151"];
m9_40 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.TradierBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="147-147"];
m9_54 [cluster="QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", span="31-31"];
m9_32 [cluster="QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", span="86-86"];
m9_16 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="124-124"];
m9_24 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="EquityExchange.SetLocalDateTimeFrontier(security.Exchange.LocalTime)", span="126-126"];
m9_25 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="var cache = security.GetLastData()", span="128-128"];
m9_26 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="cache == null", span="129-129"];
m9_28 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="!EquityExchange.IsOpenDuringBar(cache.Time, cache.EndTime, false)", span="135-135"];
m9_27 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="return false;", span="131-131"];
m9_29 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="return false;", span="137-137"];
m9_30 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="return true;", span="139-139"];
m9_31 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="124-124"];
m9_41 [cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0"];
m9_17 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="97-97"];
m9_18 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="message = null", span="99-99"];
m9_19 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="request.Quantity != null && request.Quantity != order.Quantity", span="102-102"];
m9_20 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''UpdateRejected'',\r\n                    ''Traider does not support updating order quantities.''\r\n                    )", span="104-106"];
m9_22 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="return true;", span="111-111"];
m9_21 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="return false;", span="108-108"];
m9_23 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Brokerages.TradierBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="97-97"];
m9_58 [cluster="QuantConnect.Orders.Slippage.ConstantSlippageModel.ConstantSlippageModel(decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.Slippage.ConstantSlippageModel.ConstantSlippageModel(decimal)", span="30-30"];
m9_34 [cluster="QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", span="115-115"];
m9_59 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Brokerages.TradierBrokerageModel", span=""];
m10_62 [cluster="lambda expression", file="SubscriptionCollection.cs", label="Entry lambda expression", span="168-168"];
m10_63 [cluster="lambda expression", color=red, community=0, file="SubscriptionCollection.cs", label="0: x.Key.TickType", span="168-168"];
m10_64 [cluster="lambda expression", file="SubscriptionCollection.cs", label="Exit lambda expression", span="168-168"];
m10_3 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="SubscriptionCollection.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m10_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="89-89"];
m10_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="91-91"];
m10_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="!_subscriptions.TryGetValue(configuration.Symbol, out dictionary)", span="92-92"];
m10_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="return dictionary.TryGetValue(configuration, out subscription);", span="98-98"];
m10_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="subscription = null", span="94-94"];
m10_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="return false;", span="95-95"];
m10_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="89-89"];
m10_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", span="144-144"];
m10_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="146-146"];
m10_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="!_subscriptions.TryRemove(symbol, out dictionary)", span="147-147"];
m10_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="subscriptions = null", span="149-149"];
m10_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="subscriptions = dictionary.Values", span="153-153"];
m10_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="return false;", span="150-150"];
m10_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="return true;", span="154-154"];
m10_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", span="144-144"];
m10_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", span="34-34"];
m10_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", file="SubscriptionCollection.cs", label="_subscriptions = new ConcurrentDictionary<Symbol, ConcurrentDictionary<SubscriptionDataConfig, Subscription>>()", span="36-36"];
m10_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", span="34-34"];
m10_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="71-71"];
m10_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="73-73"];
m10_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="!_subscriptions.TryGetValue(subscription.Configuration.Symbol, out dictionary)", span="74-74"];
m10_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="_subscriptions[subscription.Configuration.Symbol] = dictionary", span="77-77"];
m10_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="return dictionary.TryAdd(subscription.Configuration, subscription);", span="80-80"];
m10_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="dictionary = new ConcurrentDictionary<SubscriptionDataConfig, Subscription>()", span="76-76"];
m10_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="71-71"];
m10_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", span="163-163"];
m10_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", color=red, community=0, file="SubscriptionCollection.cs", label="0: _subscriptions", span="165-165"];
m10_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", file="SubscriptionCollection.cs", label="yield return subscription;", span="171-171"];
m10_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", color=red, community=0, file="SubscriptionCollection.cs", label="0: var subscriptionsByConfig = subscriptionsBySymbol.Value", span="167-167"];
m10_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", color=red, community=0, file="SubscriptionCollection.cs", label="0: subscriptionsByConfig.OrderBy(x => x.Key.TickType)", span="168-168"];
m10_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", color=red, community=0, file="SubscriptionCollection.cs", label="0: var subscription = kvp.Value", span="170-170"];
m10_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", span="163-163"];
m10_22 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="SubscriptionCollection.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m10_61 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="SubscriptionCollection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m10_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.ContainsAny(QuantConnect.Symbol)", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.ContainsAny(QuantConnect.Symbol)", span="60-60"];
m10_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.ContainsAny(QuantConnect.Symbol)", file="SubscriptionCollection.cs", label="return _subscriptions.ContainsKey(symbol);", span="62-62"];
m10_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.ContainsAny(QuantConnect.Symbol)", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.ContainsAny(QuantConnect.Symbol)", span="60-60"];
m10_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", span="107-107"];
m10_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="109-109"];
m10_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="!_subscriptions.TryGetValue(symbol, out dictionary)", span="110-110"];
m10_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="subscriptions = null", span="112-112"];
m10_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="subscriptions = dictionary.Values", span="116-116"];
m10_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="return false;", span="113-113"];
m10_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="return true;", span="117-117"];
m10_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", span="107-107"];
m10_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", span="182-182"];
m10_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", file="SubscriptionCollection.cs", label="return GetEnumerator();", span="184-184"];
m10_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", span="182-182"];
m10_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="126-126"];
m10_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="128-128"];
m10_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="!_subscriptions.TryGetValue(configuration.Symbol, out dictionary)", span="129-129"];
m10_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="return dictionary.TryRemove(configuration, out subscription);", span="135-135"];
m10_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="subscription = null", span="131-131"];
m10_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="return false;", span="132-132"];
m10_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="126-126"];
m10_11 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="SubscriptionCollection.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m10_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="SubscriptionCollection.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", span="44-44"];
m10_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="SubscriptionCollection.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="46-46"];
m10_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="SubscriptionCollection.cs", label="!_subscriptions.TryGetValue(configuration.Symbol, out dictionary)", span="47-47"];
m10_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="SubscriptionCollection.cs", label="return dictionary.ContainsKey(configuration);", span="52-52"];
m10_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="SubscriptionCollection.cs", label="return false;", span="49-49"];
m10_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="SubscriptionCollection.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", span="44-44"];
m10_45 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="SubscriptionCollection.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m10_10 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SubscriptionCollection.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m10_68 [file="SubscriptionCollection.cs", label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", span=""];
m0_56 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=2, style=dotted];
m0_77 -> m0_80  [key=2, style=dotted];
m0_77 -> m0_81  [key=2, style=dotted];
m0_77 -> m0_82  [key=2, style=dotted];
m0_77 -> m0_83  [key=2, style=dotted];
m0_78 -> m0_56  [color=blue, key=0, style=bold];
m0_252 -> m0_252  [color=darkorchid, key=3, label="Property variable decimal Close", style=bold];
m0_252 -> m0_126  [color=darkorchid, key=3, label="Property variable decimal Close", style=bold];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_144  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_140 -> m0_145  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_14  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_111  [key=2, style=dotted];
m0_144 -> m0_147  [key=2, style=dotted];
m0_144 -> m0_99  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_111  [key=2, style=dotted];
m0_145 -> m0_124  [key=2, style=dotted];
m0_145 -> m0_99  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_14  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_14  [key=2, style=dotted];
m0_146 -> m0_140  [color=blue, key=0, style=bold];
m0_50 -> m0_84  [key=0, style=solid];
m0_84 -> m0_50  [color=blue, key=0, style=bold];
m0_200 -> m0_201  [key=0, style=solid];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_215  [key=2, style=dotted];
m0_201 -> m0_205  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m0_201 -> m0_225  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m0_201 -> m0_209  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m0_201 -> m0_210  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m0_201 -> m0_211  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_207  [color=darkseagreen4, key=1, label=qty, style=dashed];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_205  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m0_205 -> m0_222  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m0_205 -> m0_223  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_205 -> m0_224  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_218  [key=2, style=dotted];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_218  [key=2, style=dotted];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_218  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_205  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_98  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_216  [key=2, style=dotted];
m0_204 -> m0_221  [color=darkseagreen4, key=1, label=sync, style=dashed];
m0_206 -> m0_207  [key=0, style=solid];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_217  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_219  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_176  [key=2, style=dotted];
m0_214 -> m0_200  [color=blue, key=0, style=bold];
m0_180 -> m0_181  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_14  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_14  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_14  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_55  [key=2, style=dotted];
m0_184 -> m0_187  [color=darkseagreen4, key=1, label=before, style=dashed];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_98  [key=2, style=dotted];
m0_185 -> m0_111  [key=2, style=dotted];
m0_185 -> m0_99  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_193  [key=2, style=dotted];
m0_187 -> m0_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_187 -> m0_189  [color=darkseagreen4, key=1, label=beforeHoldings, style=dashed];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_55  [key=2, style=dotted];
m0_186 -> m0_188  [color=darkseagreen4, key=1, label=after, style=dashed];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_193  [key=2, style=dotted];
m0_188 -> m0_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_188 -> m0_190  [color=darkseagreen4, key=1, label=afterHoldings, style=dashed];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_191  [color=darkseagreen4, key=1, label=beforeQuantity, style=dashed];
m0_190 -> m0_191  [key=0, style=solid];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_111  [key=2, style=dotted];
m0_191 -> m0_176  [key=2, style=dotted];
m0_192 -> m0_180  [color=blue, key=0, style=bold];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_14  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_14  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_14  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_14  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_14  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_15  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_16  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_17  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_15  [key=2, style=dotted];
m0_28 -> m0_18  [color=blue, key=0, style=bold];
m0_16 -> m0_100  [color=red, key=0, style=solid];
m0_100 -> m0_101  [color=red, key=0, style=solid];
m0_100 -> m0_14  [color=red, key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_14  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_14  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_53  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_107  [key=0, style=solid];
m0_104 -> m0_106  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_14  [key=2, style=dotted];
m0_106 -> m0_104  [key=0, style=solid];
m0_106 -> m0_108  [key=2, style=dotted];
m0_107 -> m0_16  [color=blue, key=0, style=bold];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_277  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_274 -> m0_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_274 -> m0_282  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_14  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_72  [key=0, style=solid];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_73  [key=2, style=dotted];
m0_62 -> m0_14  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_67  [key=0, style=solid];
m0_64 -> m0_74  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_66 -> m0_69  [key=0, style=solid];
m0_66 -> m0_75  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_56  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_75  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_14  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_76  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_59  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_57 -> m0_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_57 -> m0_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_57 -> m0_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_57 -> m0_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_57 -> m0_66  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_57 -> m0_67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_57 -> m0_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_57 -> m0_69  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_57 -> m0_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_57 -> m0_71  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_14  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_14  [key=2, style=dotted];
m0_72 -> m0_57  [color=blue, key=0, style=bold];
m0_63 -> m0_64  [key=0, style=solid];
m0_177 -> m0_178  [key=0, style=solid];
m0_178 -> m0_179  [key=0, style=solid];
m0_179 -> m0_177  [color=blue, key=0, style=bold];
m0_194 -> m0_195  [key=0, style=solid];
m0_197 -> m0_198  [key=0, style=solid];
m0_195 -> m0_196  [key=0, style=solid];
m0_196 -> m0_194  [color=blue, key=0, style=bold];
m0_198 -> m0_199  [key=0, style=solid];
m0_199 -> m0_197  [color=blue, key=0, style=bold];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_227  [key=2, style=dotted];
m0_221 -> m0_222  [key=0, style=solid];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_222  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m0_222 -> m0_212  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m0_222 -> m0_213  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m0_222 -> m0_226  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_219  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_226  [key=0, style=solid];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_222  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_220 -> m0_223  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_220 -> m0_224  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_226 -> m0_220  [color=blue, key=0, style=bold];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_14  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_227  [key=2, style=dotted];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_257  [key=0, style=solid];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_260  [key=0, style=solid];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_52  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_257  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_254 -> m0_259  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_260 -> m0_254  [color=blue, key=0, style=bold];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_285  [key=0, style=solid];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_227  [key=2, style=dotted];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_227  [key=2, style=dotted];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_280  [key=0, style=solid];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_14  [key=2, style=dotted];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_14  [key=2, style=dotted];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_14  [key=2, style=dotted];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_14  [key=2, style=dotted];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_14  [key=2, style=dotted];
m0_283 -> m0_284  [key=0, style=solid];
m0_283 -> m0_14  [key=2, style=dotted];
m0_285 -> m0_274  [color=blue, key=0, style=bold];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_138  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_14  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_111  [key=2, style=dotted];
m0_138 -> m0_133  [key=2, style=dotted];
m0_138 -> m0_99  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_14  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_14  [key=2, style=dotted];
m0_139 -> m0_134  [color=blue, key=0, style=bold];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_162  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_158 -> m0_163  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_158 -> m0_164  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_158 -> m0_165  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_14  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_111  [key=2, style=dotted];
m0_162 -> m0_147  [key=2, style=dotted];
m0_162 -> m0_99  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_111  [key=2, style=dotted];
m0_163 -> m0_124  [key=2, style=dotted];
m0_163 -> m0_99  [key=2, style=dotted];
m0_163 -> m0_165  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_166  [key=0, style=solid];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_157  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_14  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_14  [key=2, style=dotted];
m0_166 -> m0_158  [color=blue, key=0, style=bold];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_14  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_111  [key=2, style=dotted];
m0_122 -> m0_124  [key=2, style=dotted];
m0_122 -> m0_99  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_14  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_14  [key=2, style=dotted];
m0_123 -> m0_118  [color=blue, key=0, style=bold];
m0_111 -> m0_112  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_113 -> m0_111  [color=blue, key=0, style=bold];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_85  [color=blue, key=0, style=bold];
m0_99 -> m0_261  [key=0, style=solid];
m0_99 -> m0_263  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m0_99 -> m0_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m0_99 -> m0_265  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_99 -> m0_266  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_99 -> m0_267  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_99 -> m0_268  [color=darkseagreen4, key=1, label=double, style=dashed];
m0_99 -> m0_269  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_99 -> m0_271  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_215  [key=2, style=dotted];
m0_261 -> m0_263  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m0_261 -> m0_279  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m0_261 -> m0_268  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_275  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_263 -> m0_277  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_263 -> m0_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_263 -> m0_282  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_263 -> m0_270  [color=darkseagreen4, key=1, label=brokerageOnOrderStatusChanged, style=dashed];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_54  [key=2, style=dotted];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_268  [key=0, style=solid];
m0_266 -> m0_217  [key=2, style=dotted];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_52  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_273  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_273  [key=2, style=dotted];
m0_271 -> m0_272  [key=0, style=solid];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_215  [key=2, style=dotted];
m0_262 -> m0_284  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
m0_262 -> m0_269  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
m0_264 -> m0_265  [key=0, style=solid];
m0_270 -> m0_271  [key=0, style=solid];
m0_272 -> m0_99  [color=blue, key=0, style=bold];
m0_167 -> m0_168  [key=0, style=solid];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_14  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_14  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_14  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_174  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_175  [key=2, style=dotted];
m0_172 -> m0_176  [key=2, style=dotted];
m0_172 -> m0_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_173 -> m0_167  [color=blue, key=0, style=bold];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_129  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_125 -> m0_130  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_14  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_111  [key=2, style=dotted];
m0_129 -> m0_132  [key=2, style=dotted];
m0_129 -> m0_99  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_111  [key=2, style=dotted];
m0_130 -> m0_133  [key=2, style=dotted];
m0_130 -> m0_99  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_14  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_14  [key=2, style=dotted];
m0_131 -> m0_125  [color=blue, key=0, style=bold];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_152  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_148 -> m0_153  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_148 -> m0_154  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_148 -> m0_155  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_14  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_111  [key=2, style=dotted];
m0_152 -> m0_132  [key=2, style=dotted];
m0_152 -> m0_99  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_111  [key=2, style=dotted];
m0_153 -> m0_133  [key=2, style=dotted];
m0_153 -> m0_99  [key=2, style=dotted];
m0_153 -> m0_155  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_156  [key=0, style=solid];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_157  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_14  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_14  [key=2, style=dotted];
m0_156 -> m0_148  [color=blue, key=0, style=bold];
m0_17 -> m0_87  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_14  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_14  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_14  [key=2, style=dotted];
m0_89 -> m0_47  [color=darkorchid, key=3, label="Parameter variable System.DateTime date", style=bold];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_55  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_97  [key=0, style=solid];
m0_91 -> m0_93  [color=darkseagreen4, key=1, label=holding, style=dashed];
m0_91 -> m0_94  [color=darkseagreen4, key=1, label=holding, style=dashed];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_91  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_14  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_98  [key=2, style=dotted];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_54  [key=2, style=dotted];
m0_96 -> m0_91  [key=0, style=solid];
m0_96 -> m0_99  [key=2, style=dotted];
m0_97 -> m0_17  [color=blue, key=0, style=bold];
m0_157 -> m0_228  [key=0, style=solid];
m0_157 -> m0_231  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_157 -> m0_258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_157 -> m0_234  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_157 -> m0_237  [color=darkseagreen4, key=1, label=double, style=dashed];
m0_157 -> m0_239  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_157 -> m0_240  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_157 -> m0_242  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_157 -> m0_244  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_157 -> m0_245  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_157 -> m0_246  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_230  [key=0, style=solid];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_255  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_231 -> m0_257  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_231 -> m0_259  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_231 -> m0_248  [color=darkseagreen4, key=1, label=brokerageOnOrderStatusChanged, style=dashed];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_14  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_248  [key=0, style=solid];
m0_237 -> m0_218  [key=2, style=dotted];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_237  [key=0, style=solid];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_109  [key=2, style=dotted];
m0_240 -> m0_242  [color=darkseagreen4, key=1, label=marketPrice, style=dashed];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_252  [key=2, style=dotted];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_248  [key=0, style=solid];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_14  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_237  [key=0, style=solid];
m0_246 -> m0_253  [key=2, style=dotted];
m0_229 -> m0_249  [key=0, style=solid];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_215  [key=2, style=dotted];
m0_230 -> m0_256  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m0_230 -> m0_237  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m0_230 -> m0_238  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_251  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_248 -> m0_249  [key=0, style=solid];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_14  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_14  [key=2, style=dotted];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_250  [key=2, style=dotted];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_14  [key=2, style=dotted];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_237  [key=0, style=solid];
m0_247 -> m0_237  [key=0, style=solid];
m0_247 -> m0_52  [key=2, style=dotted];
m0_249 -> m0_157  [color=blue, key=0, style=bold];
m0_132 -> m0_132  [color=darkorchid, key=3, label="Property variable long Volume", style=bold];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_14  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_14  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_14  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_50  [key=2, style=dotted];
m0_33 -> m0_35  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m0_33 -> m0_40  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m0_33 -> m0_45  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m0_33 -> m0_47  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m0_33 -> m0_48  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_51  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=0, style=solid];
m0_40 -> m0_53  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=0, style=solid];
m0_45 -> m0_55  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_59  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_47 -> m0_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_47 -> m0_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_47 -> m0_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_47 -> m0_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_47 -> m0_66  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_47 -> m0_67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_47 -> m0_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_47 -> m0_69  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_47 -> m0_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_47 -> m0_71  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_47 -> m0_47  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.BaseData Reader", style=bold];
m0_47 -> m0_89  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.BaseData Reader", style=bold];
m0_48 -> m0_49  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_52  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_14  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_14  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_14  [key=2, style=dotted];
m0_41 -> m0_40  [key=0, style=solid];
m0_41 -> m0_54  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_14  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_14  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_14  [key=2, style=dotted];
m0_46 -> m0_45  [key=0, style=solid];
m0_46 -> m0_56  [key=2, style=dotted];
m0_49 -> m0_29  [color=blue, key=0, style=bold];
m0_109 -> m0_110  [key=0, style=solid];
m0_110 -> m0_109  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_14  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_14  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_14  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_14  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_15  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_16  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_17  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_15  [key=2, style=dotted];
m0_13 -> m0_0  [color=blue, key=0, style=bold];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_117  [key=2, style=dotted];
m0_116 -> m0_114  [color=blue, key=0, style=bold];
m0_286 -> m0_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_41  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_46  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_47  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_64  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_65  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_67  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_68  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_69  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_70  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_90  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_95  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_96  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_103  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_106  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_115  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_129  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_130  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_138  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_144  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_145  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_152  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_153  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_155  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_162  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_163  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_165  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_171  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_184  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_185  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_186  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_187  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_195  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_188  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_198  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_191  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_205  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_208  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_232  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_242  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_246  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_248  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_264  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_265  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_266  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_286 -> m0_270  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m0_287 -> m0_221  [color=darkseagreen4, key=1, label=sync, style=dashed];
m0_288 -> m0_222  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m0_289 -> m0_225  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m0_290 -> m0_256  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m0_291 -> m0_258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m0_292 -> m0_279  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m0_293 -> m0_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m0_294 -> m0_284  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_55  [key=2, style=dotted];
m1_22 -> m1_14  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_72  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_18  [color=blue, key=0, style=bold];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_29 -> m1_33  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Interfaces.IBrokerage InitializeBrokerage", style=bold];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_41  [key=2, style=dotted];
m1_30 -> m1_14  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_42  [key=2, style=dotted];
m1_31 -> m1_14  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_42  [key=2, style=dotted];
m1_32 -> m1_14  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_42  [key=2, style=dotted];
m1_33 -> m1_50  [key=2, style=dotted];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m1_33 -> m1_40  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m1_33 -> m1_45  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m1_33 -> m1_47  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m1_33 -> m1_48  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_42  [key=2, style=dotted];
m1_34 -> m1_51  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_42  [key=2, style=dotted];
m1_35 -> m1_37  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_42  [key=2, style=dotted];
m1_36 -> m1_52  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_42  [key=2, style=dotted];
m1_37 -> m1_14  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_43  [key=2, style=dotted];
m1_38 -> m1_14  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_0  [key=2, style=dotted];
m1_39 -> m1_44  [key=2, style=dotted];
m1_39 -> m1_14  [key=2, style=dotted];
m1_40 -> m1_28  [color=blue, key=0, style=bold];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [key=0, style=solid];
m1_40 -> m1_53  [key=2, style=dotted];
m1_74 -> m1_65  [key=0, style=solid];
m1_74 -> m1_91  [key=2, style=dotted];
m1_100 -> m1_14  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_92 -> m1_94  [key=0, style=solid];
m1_92 -> m1_95  [color=darkseagreen4, key=1, label=Color, style=dashed];
m1_92 -> m1_91  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_98  [key=2, style=dotted];
m1_94 -> m1_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_94 -> m1_96  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_99  [key=2, style=dotted];
m1_95 -> m1_54  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_100  [key=2, style=dotted];
m1_96 -> m1_91  [key=0, style=solid];
m1_96 -> m1_99  [key=2, style=dotted];
m1_97 -> m1_92  [color=blue, key=0, style=bold];
m1_97 -> m1_17  [color=blue, key=0, style=bold];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_65  [key=0, style=solid];
m1_41 -> m1_40  [key=0, style=solid];
m1_41 -> m1_54  [key=2, style=dotted];
m1_134 -> m1_138  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_134 -> m1_135  [key=0, style=solid];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_111  [key=2, style=dotted];
m1_138 -> m1_133  [key=2, style=dotted];
m1_138 -> m1_99  [key=2, style=dotted];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_14  [key=2, style=dotted];
m1_135 -> m1_14  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_136 -> m1_14  [key=2, style=dotted];
m1_136 -> m1_137  [key=0, style=solid];
m1_139 -> m1_134  [color=blue, key=0, style=bold];
m1_56 -> m1_77  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_113 -> m1_111  [color=blue, key=0, style=bold];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_82  [color=darkseagreen4, key=1, label=log, style=dashed];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_14  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_73  [key=2, style=dotted];
m1_62 -> m1_14  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_66  [key=0, style=solid];
m1_64 -> m1_67  [key=0, style=solid];
m1_64 -> m1_74  [key=2, style=dotted];
m1_65 -> m1_89  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_89  [key=0, style=solid];
m1_66 -> m1_90  [key=2, style=dotted];
m1_66 -> m1_72  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_66 -> m1_76  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_66 -> m1_80  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_66 -> m1_84  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_66 -> m1_69  [key=0, style=solid];
m1_66 -> m1_75  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_69  [key=0, style=solid];
m1_67 -> m1_70  [key=0, style=solid];
m1_67 -> m1_71  [key=0, style=solid];
m1_67 -> m1_75  [key=0, style=solid];
m1_67 -> m1_79  [key=0, style=solid];
m1_67 -> m1_83  [key=0, style=solid];
m1_67 -> m1_87  [key=0, style=solid];
m1_67 -> m1_88  [key=0, style=solid];
m1_67 -> m1_56  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_74  [color=darkseagreen4, key=1, label=runError, style=dashed];
m1_72 -> m1_57  [color=blue, key=0, style=bold];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_78  [color=darkseagreen4, key=1, label=handledError, style=dashed];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_86  [color=darkseagreen4, key=1, label=debug, style=dashed];
m1_84 -> m1_50  [color=blue, key=0, style=bold];
m1_68 -> m1_65  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_75  [key=2, style=dotted];
m1_69 -> m1_65  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_14  [key=2, style=dotted];
m1_70 -> m1_65  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_76  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_87 -> m1_65  [key=0, style=solid];
m1_87 -> m1_14  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_93  [key=2, style=dotted];
m1_88 -> m1_14  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_65  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_65  [key=0, style=solid];
m1_77 -> m1_79  [key=2, style=dotted];
m1_77 -> m1_80  [key=2, style=dotted];
m1_77 -> m1_81  [key=2, style=dotted];
m1_77 -> m1_82  [key=2, style=dotted];
m1_77 -> m1_83  [key=2, style=dotted];
m1_78 -> m1_65  [key=0, style=solid];
m1_78 -> m1_91  [key=2, style=dotted];
m1_78 -> m1_56  [color=blue, key=0, style=bold];
m1_82 -> m1_65  [key=0, style=solid];
m1_82 -> m1_92  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_65  [key=0, style=solid];
m1_86 -> m1_65  [key=0, style=solid];
m1_86 -> m1_92  [key=2, style=dotted];
m1_89 -> m1_62  [color=blue, key=0, style=bold];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_14  [key=2, style=dotted];
m1_157 -> m1_153  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_157 -> m1_163  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_157 -> m1_240  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_157 -> m1_242  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_157 -> m1_246  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_157 -> m1_148  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Tests.Brokerages.OrderTestParameters parameters", style=bold];
m1_157 -> m1_228  [key=0, style=solid];
m1_157 -> m1_231  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_157 -> m1_258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_157 -> m1_234  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_157 -> m1_237  [color=darkseagreen4, key=1, label=double, style=dashed];
m1_157 -> m1_239  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_157 -> m1_244  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_157 -> m1_245  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_157 -> m1_158  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Tests.Brokerages.OrderTestParameters parameters", style=bold];
m1_232 -> m1_233  [key=0, style=solid];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_109  [key=2, style=dotted];
m1_240 -> m1_242  [color=darkseagreen4, key=1, label=marketPrice, style=dashed];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_252  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_237  [key=0, style=solid];
m1_246 -> m1_253  [key=2, style=dotted];
m1_248 -> m1_249  [key=0, style=solid];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_248  [color=darkseagreen4, key=1, label=brokerageOnOrderStatusChanged, style=dashed];
m1_231 -> m1_231  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Orders.OrderEvent> brokerageOnOrderStatusChanged", style=bold];
m1_231 -> m1_255  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_231 -> m1_257  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_231 -> m1_259  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_233 -> m1_14  [key=2, style=dotted];
m1_233 -> m1_234  [key=0, style=solid];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_237  [key=0, style=solid];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_14  [key=2, style=dotted];
m1_243 -> m1_244  [key=0, style=solid];
m1_243 -> m1_237  [key=0, style=solid];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_14  [key=2, style=dotted];
m1_247 -> m1_237  [key=0, style=solid];
m1_247 -> m1_52  [key=2, style=dotted];
m1_237 -> m1_248  [key=0, style=solid];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_218  [key=2, style=dotted];
m1_244 -> m1_248  [key=0, style=solid];
m1_244 -> m1_245  [key=0, style=solid];
m1_234 -> m1_14  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_235 -> m1_14  [key=2, style=dotted];
m1_235 -> m1_236  [key=0, style=solid];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_230  [key=0, style=solid];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_237  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m1_230 -> m1_215  [key=2, style=dotted];
m1_230 -> m1_256  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m1_230 -> m1_238  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_251  [key=2, style=dotted];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_250  [key=2, style=dotted];
m1_229 -> m1_249  [key=0, style=solid];
m1_249 -> m1_157  [color=blue, key=0, style=bold];
m1_109 -> m1_110  [key=0, style=solid];
m1_110 -> m1_109  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_17  [key=2, style=dotted];
m1_50 -> m1_84  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_16 -> m1_100  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_26  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_53  [key=2, style=dotted];
m1_106 -> m1_104  [key=0, style=solid];
m1_106 -> m1_108  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_14  [key=2, style=dotted];
m1_102 -> m1_59  [color=darkseagreen4, key=1, label=engine, style=dashed];
m1_104 -> m1_106  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_107  [key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_14  [key=2, style=dotted];
m1_101 -> m1_14  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_10  [color=red, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_12  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_13  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_16  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_17  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_18  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_19  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_74  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_78  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_82  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_86  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_95  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_101 -> m1_96  [color=darkseagreen4, key=1, label="QuantConnect.Views.WinForms.LeanEngineWinForm", style=dashed];
m1_107 -> m1_16  [color=blue, key=0, style=bold];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_257  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_254 -> m1_259  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_61  [key=2, style=dotted];
m1_59 -> m1_14  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_14  [key=2, style=dotted];
m1_60 -> m1_58  [color=blue, key=0, style=bold];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_14  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_198 -> m1_199  [key=0, style=solid];
m1_57 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_57 -> m1_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_57 -> m1_67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_57 -> m1_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_57 -> m1_69  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_57 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_57 -> m1_59  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_57 -> m1_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_57 -> m1_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_57 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_57 -> m1_71  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_57 -> m1_58  [key=0, style=solid];
m1_194 -> m1_195  [key=0, style=solid];
m1_196 -> m1_194  [color=blue, key=0, style=bold];
m1_197 -> m1_198  [key=0, style=solid];
m1_199 -> m1_197  [color=blue, key=0, style=bold];
m1_222 -> m1_222  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_212  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m1_222 -> m1_213  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m1_222 -> m1_226  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_219  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_226  [key=0, style=solid];
m1_258 -> m1_14  [key=2, style=dotted];
m1_258 -> m1_259  [key=0, style=solid];
m1_277 -> m1_14  [key=2, style=dotted];
m1_277 -> m1_278  [key=0, style=solid];
m1_282 -> m1_14  [key=2, style=dotted];
m1_282 -> m1_283  [key=0, style=solid];
m1_276 -> m1_14  [key=2, style=dotted];
m1_276 -> m1_277  [key=0, style=solid];
m1_278 -> m1_14  [key=2, style=dotted];
m1_278 -> m1_279  [key=0, style=solid];
m1_281 -> m1_14  [key=2, style=dotted];
m1_281 -> m1_282  [key=0, style=solid];
m1_283 -> m1_14  [key=2, style=dotted];
m1_283 -> m1_284  [key=0, style=solid];
m1_280 -> m1_281  [key=0, style=solid];
m1_280 -> m1_285  [key=0, style=solid];
m1_177 -> m1_178  [key=0, style=solid];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_227  [key=2, style=dotted];
m1_221 -> m1_222  [key=0, style=solid];
m1_220 -> m1_222  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_220 -> m1_223  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_220 -> m1_224  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_220 -> m1_221  [key=0, style=solid];
m1_226 -> m1_220  [color=blue, key=0, style=bold];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_257  [key=0, style=solid];
m1_257 -> m1_258  [key=0, style=solid];
m1_257 -> m1_260  [key=0, style=solid];
m1_259 -> m1_260  [key=0, style=solid];
m1_259 -> m1_52  [key=2, style=dotted];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_280  [key=0, style=solid];
m1_274 -> m1_277  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_274 -> m1_282  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_274 -> m1_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_274 -> m1_275  [key=0, style=solid];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_227  [key=2, style=dotted];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_227  [key=2, style=dotted];
m1_285 -> m1_274  [color=blue, key=0, style=bold];
m1_179 -> m1_177  [color=blue, key=0, style=bold];
m1_178 -> m1_179  [key=0, style=solid];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_227  [key=2, style=dotted];
m1_260 -> m1_254  [color=blue, key=0, style=bold];
m1_51 -> m1_43  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_8 -> m1_9  [color=green, key=0, style=solid];
m1_8 -> m1_24  [key=2, style=dotted];
m1_7 -> m1_8  [color=green, key=0, style=solid];
m1_7 -> m1_23  [key=2, style=dotted];
m1_9 -> m1_10  [color=red, key=0, style=solid];
m1_9 -> m1_15  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_10 -> m1_11  [color=red, key=0, style=solid];
m1_10 -> m1_16  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_17  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_14  [key=2, style=dotted];
m1_5 -> m1_22  [key=2, style=dotted];
m1_12 -> m1_15  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_25  [key=2, style=dotted];
m1_4 -> m1_5  [color=red, key=0, style=solid];
m1_4 -> m1_14  [key=2, style=dotted];
m1_4 -> m1_21  [color=red, key=2, style=dotted];
m1_1 -> m1_14  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_14  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_14  [key=2, style=dotted];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_3 -> m1_21  [key=2, style=dotted];
m1_13 -> m1_0  [color=blue, key=0, style=bold];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_15  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_97  [key=0, style=solid];
m1_91 -> m1_93  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_91 -> m1_94  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_16  [key=2, style=dotted];
m1_21 -> m1_14  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_43 -> m1_45  [key=0, style=solid];
m1_43 -> m1_14  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_52  [key=2, style=dotted];
m1_45 -> m1_47  [color=darkseagreen4, key=1, label=systemHandlers, style=dashed];
m1_45 -> m1_55  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_53  [key=2, style=dotted];
m1_46 -> m1_45  [key=0, style=solid];
m1_46 -> m1_56  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_54  [key=2, style=dotted];
m1_47 -> m1_55  [key=2, style=dotted];
m1_47 -> m1_59  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_47 -> m1_50  [color=darkseagreen4, key=1, label=engine, style=dashed];
m1_47 -> m1_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_47 -> m1_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_47 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_47 -> m1_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_47 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_47 -> m1_67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_47 -> m1_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_47 -> m1_69  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_47 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_47 -> m1_71  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_56  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_57  [key=2, style=dotted];
m1_49 -> m1_29  [color=blue, key=0, style=bold];
m1_180 -> m1_181  [key=0, style=solid];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_55  [key=2, style=dotted];
m1_184 -> m1_187  [color=darkseagreen4, key=1, label=before, style=dashed];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_98  [key=2, style=dotted];
m1_185 -> m1_111  [key=2, style=dotted];
m1_185 -> m1_99  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_55  [key=2, style=dotted];
m1_186 -> m1_188  [color=darkseagreen4, key=1, label=after, style=dashed];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_193  [key=2, style=dotted];
m1_187 -> m1_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_187 -> m1_189  [color=darkseagreen4, key=1, label=beforeHoldings, style=dashed];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_193  [key=2, style=dotted];
m1_188 -> m1_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_188 -> m1_190  [color=darkseagreen4, key=1, label=afterHoldings, style=dashed];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_111  [key=2, style=dotted];
m1_191 -> m1_176  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_14  [key=2, style=dotted];
m1_189 -> m1_191  [color=darkseagreen4, key=1, label=beforeQuantity, style=dashed];
m1_189 -> m1_190  [key=0, style=solid];
m1_190 -> m1_191  [key=0, style=solid];
m1_181 -> m1_14  [key=2, style=dotted];
m1_181 -> m1_182  [key=0, style=solid];
m1_182 -> m1_14  [key=2, style=dotted];
m1_182 -> m1_183  [key=0, style=solid];
m1_192 -> m1_180  [color=blue, key=0, style=bold];
m1_42 -> m1_14  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_14  [key=2, style=dotted];
m1_118 -> m1_122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_118 -> m1_119  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_111  [key=2, style=dotted];
m1_122 -> m1_124  [key=2, style=dotted];
m1_122 -> m1_99  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_14  [key=2, style=dotted];
m1_119 -> m1_14  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_120 -> m1_14  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_123 -> m1_118  [color=blue, key=0, style=bold];
m1_99 -> m1_96  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderStatus expectedStatus", style=bold];
m1_99 -> m1_265  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_99 -> m1_266  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_99 -> m1_94  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_99 -> m1_99  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.Order PlaceOrderWaitForStatus", style=bold];
m1_99 -> m1_261  [key=0, style=solid];
m1_99 -> m1_263  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m1_99 -> m1_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m1_99 -> m1_267  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_99 -> m1_268  [color=darkseagreen4, key=1, label=double, style=dashed];
m1_99 -> m1_269  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_99 -> m1_271  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_264 -> m1_265  [key=0, style=solid];
m1_265 -> m1_266  [key=0, style=solid];
m1_265 -> m1_54  [key=2, style=dotted];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_268  [key=0, style=solid];
m1_266 -> m1_217  [key=2, style=dotted];
m1_270 -> m1_271  [key=0, style=solid];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_270  [color=darkseagreen4, key=1, label=brokerageOnOrderStatusChanged, style=dashed];
m1_263 -> m1_263  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Orders.OrderEvent> brokerageOnOrderStatusChanged", style=bold];
m1_263 -> m1_275  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_263 -> m1_277  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_263 -> m1_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_263 -> m1_282  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_52  [key=2, style=dotted];
m1_268 -> m1_269  [key=0, style=solid];
m1_268 -> m1_273  [key=2, style=dotted];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_273  [key=2, style=dotted];
m1_271 -> m1_272  [key=0, style=solid];
m1_261 -> m1_263  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m1_261 -> m1_268  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_215  [key=2, style=dotted];
m1_261 -> m1_279  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m1_262 -> m1_263  [key=0, style=solid];
m1_262 -> m1_269  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
m1_262 -> m1_215  [key=2, style=dotted];
m1_262 -> m1_284  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
m1_272 -> m1_99  [color=blue, key=0, style=bold];
m1_167 -> m1_168  [key=0, style=solid];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_174  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_14  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_175  [key=2, style=dotted];
m1_172 -> m1_176  [key=2, style=dotted];
m1_172 -> m1_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_168 -> m1_14  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_169 -> m1_14  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_173 -> m1_167  [color=blue, key=0, style=bold];
m1_148 -> m1_152  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_148 -> m1_153  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_148 -> m1_155  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_154  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_111  [key=2, style=dotted];
m1_152 -> m1_132  [key=2, style=dotted];
m1_152 -> m1_99  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_111  [key=2, style=dotted];
m1_153 -> m1_133  [key=2, style=dotted];
m1_153 -> m1_99  [key=2, style=dotted];
m1_153 -> m1_155  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_157  [key=2, style=dotted];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_14  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_156  [key=0, style=solid];
m1_149 -> m1_14  [key=2, style=dotted];
m1_149 -> m1_150  [key=0, style=solid];
m1_150 -> m1_14  [key=2, style=dotted];
m1_150 -> m1_151  [key=0, style=solid];
m1_156 -> m1_148  [color=blue, key=0, style=bold];
m1_93 -> m1_14  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_27 -> m1_15  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_140 -> m1_144  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_140 -> m1_145  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_140 -> m1_141  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_111  [key=2, style=dotted];
m1_144 -> m1_147  [key=2, style=dotted];
m1_144 -> m1_99  [key=2, style=dotted];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_111  [key=2, style=dotted];
m1_145 -> m1_124  [key=2, style=dotted];
m1_145 -> m1_99  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_14  [key=2, style=dotted];
m1_141 -> m1_14  [key=2, style=dotted];
m1_141 -> m1_142  [key=0, style=solid];
m1_142 -> m1_14  [key=2, style=dotted];
m1_142 -> m1_143  [key=0, style=solid];
m1_146 -> m1_140  [color=blue, key=0, style=bold];
m1_200 -> m1_201  [key=0, style=solid];
m1_205 -> m1_205  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_222  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m1_205 -> m1_223  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_205 -> m1_224  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_217  [key=2, style=dotted];
m1_201 -> m1_205  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_215  [key=2, style=dotted];
m1_201 -> m1_225  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m1_201 -> m1_209  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m1_201 -> m1_210  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m1_201 -> m1_211  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m1_203 -> m1_205  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_202  [color=darkorchid, key=3, label="Local variable decimal remaining", style=bold];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_216  [key=2, style=dotted];
m1_204 -> m1_221  [color=darkseagreen4, key=1, label=sync, style=dashed];
m1_206 -> m1_207  [key=0, style=solid];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_98  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_218  [key=2, style=dotted];
m1_213 -> m1_176  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_207  [color=darkseagreen4, key=1, label=qty, style=dashed];
m1_202 -> m1_202  [color=darkorchid, key=3, label="Local variable decimal qty", style=bold];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_218  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_218  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_219  [key=2, style=dotted];
m1_214 -> m1_200  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_14  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_27  [key=2, style=dotted];
m1_20 -> m1_14  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_0  [color=blue, key=0, style=bold];
m1_158 -> m1_162  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_158 -> m1_163  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_158 -> m1_165  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_164  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_111  [key=2, style=dotted];
m1_162 -> m1_147  [key=2, style=dotted];
m1_162 -> m1_99  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_111  [key=2, style=dotted];
m1_163 -> m1_124  [key=2, style=dotted];
m1_163 -> m1_99  [key=2, style=dotted];
m1_163 -> m1_165  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_157  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_14  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_166  [key=0, style=solid];
m1_159 -> m1_14  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_160 -> m1_14  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_166 -> m1_158  [color=blue, key=0, style=bold];
m1_125 -> m1_129  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_125 -> m1_130  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m1_125 -> m1_126  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_111  [key=2, style=dotted];
m1_129 -> m1_132  [key=2, style=dotted];
m1_129 -> m1_99  [key=2, style=dotted];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_111  [key=2, style=dotted];
m1_130 -> m1_133  [key=2, style=dotted];
m1_130 -> m1_99  [key=2, style=dotted];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_14  [key=2, style=dotted];
m1_126 -> m1_14  [key=2, style=dotted];
m1_126 -> m1_127  [key=0, style=solid];
m1_127 -> m1_14  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_131 -> m1_125  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_87  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_117  [key=2, style=dotted];
m1_116 -> m1_114  [color=blue, key=0, style=bold];
m1_286 -> m1_8  [color=green, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_41  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_46  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_47  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_65  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_67  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_68  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_69  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_90  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_95  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_96  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_103  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_106  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_115  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_129  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_130  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_138  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_144  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_145  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_152  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_153  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_155  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_162  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_163  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_165  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_171  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_184  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_185  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_186  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_187  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_195  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_188  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_198  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_191  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_205  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_208  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_232  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_242  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_246  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_248  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_264  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_265  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_266  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_286 -> m1_270  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m1_288 -> m1_222  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m1_291 -> m1_258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_293 -> m1_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m1_289 -> m1_225  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m1_287 -> m1_221  [color=darkseagreen4, key=1, label=sync, style=dashed];
m1_292 -> m1_279  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m1_294 -> m1_284  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
m1_290 -> m1_256  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_10  [key=2, style=dotted];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_11  [key=2, style=dotted];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_3 -> m2_12  [key=2, style=dotted];
m2_3 -> m2_10  [color=green, key=2, style=dotted];
m2_3 -> m2_11  [color=green, key=2, style=dotted];
m2_4 -> m2_5  [color=red, key=0, style=solid];
m2_4 -> m2_13  [color=red, key=2, style=dotted];
m2_4 -> m2_6  [color=red, key=1, label=equity, style=dashed];
m2_4 -> m2_8  [color=red, key=1, label=equity, style=dashed];
m2_4 -> m2_12  [key=2, style=dotted];
m2_4 -> m2_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_5 -> m2_6  [color=red, key=0, style=solid];
m2_5 -> m2_14  [color=red, key=2, style=dotted];
m2_5 -> m2_7  [color=red, key=1, label=option, style=dashed];
m2_5 -> m2_4  [key=0, style=solid];
m2_5 -> m2_11  [key=2, style=dotted];
m2_5 -> m2_13  [key=2, style=dotted];
m2_6 -> m2_7  [color=red, key=0, style=solid];
m2_6 -> m2_15  [color=red, key=2, style=dotted];
m2_6 -> m2_9  [key=0, style=solid];
m2_8 -> m2_9  [color=red, key=0, style=solid];
m2_8 -> m2_18  [color=red, key=2, style=dotted];
m2_8 -> m2_6  [key=0, style=solid];
m2_8 -> m2_8  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m2_7 -> m2_8  [color=red, key=0, style=solid];
m2_7 -> m2_16  [key=2, style=dotted];
m2_7 -> m2_17  [key=2, style=dotted];
m2_7 -> m2_7  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m2_7 -> m2_14  [key=2, style=dotted];
m2_9 -> m2_0  [color=blue, key=0, style=bold];
m2_42 -> m2_43  [key=0, style=solid];
m2_34 -> m2_33  [key=0, style=solid];
m2_34 -> m2_34  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m2_34 -> m2_36  [key=2, style=dotted];
m2_11 -> m2_21  [key=0, style=solid];
m2_11 -> m2_22  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m2_11 -> m2_23  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m2_11 -> m2_25  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m2_21 -> m2_22  [color=red, key=0, style=solid];
m2_21 -> m2_23  [key=0, style=solid];
m2_22 -> m2_23  [color=red, key=0, style=solid];
m2_22 -> m2_14  [key=2, style=dotted];
m2_22 -> m2_27  [color=red, key=0, style=solid];
m2_22 -> m2_30  [color=red, key=2, style=dotted];
m2_22 -> m2_40  [color=red, key=1, label=chain, style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_31  [key=2, style=dotted];
m2_23 -> m2_32  [key=2, style=dotted];
m2_23 -> m2_33  [key=2, style=dotted];
m2_23 -> m2_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_23 -> m2_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_23 -> m2_25  [color=darkseagreen4, key=1, label=contract, style=dashed];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=0, style=solid];
m2_25 -> m2_34  [key=2, style=dotted];
m2_24 -> m2_26  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_27  [key=0, style=solid];
m2_26 -> m2_11  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_35  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_39  [key=0, style=solid];
m2_46 -> m2_51  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [key=2, style=dotted];
m2_47 -> m2_50  [key=2, style=dotted];
m2_47 -> m2_37  [color=blue, key=0, style=bold];
m2_48 -> m2_46  [color=blue, key=0, style=bold];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_22  [color=red, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_19 -> m2_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_26  [key=0, style=solid];
m2_27 -> m2_28  [color=red, key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_28 -> m2_27  [color=red, key=0, style=solid];
m2_28 -> m2_36  [color=red, key=2, style=dotted];
m2_28 -> m2_37  [color=red, key=2, style=dotted];
m2_28 -> m2_38  [color=red, key=2, style=dotted];
m2_28 -> m2_28  [color=red, key=1, label=kpv, style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_29 -> m2_19  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=2, style=dotted];
m2_30 -> m2_27  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [key=2, style=dotted];
m2_40 -> m2_40  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m2_40 -> m2_48  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_38  [key=0, style=solid];
m2_39 -> m2_39  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m2_43 -> m2_46  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m2_43 -> m2_43  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m2_41 -> m2_39  [color=blue, key=0, style=solid];
m2_41 -> m2_41  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_36  [key=2, style=dotted];
m2_41 -> m2_43  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_49  [key=2, style=dotted];
m2_45 -> m2_43  [color=blue, key=0, style=bold];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_50  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=2, style=dotted];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_51 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_51 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_51 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_51 -> m2_4  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_51 -> m2_5  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_51 -> m2_8  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_51 -> m2_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_51 -> m2_22  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_51 -> m2_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_51 -> m2_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_51 -> m2_28  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_51 -> m2_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=0, style=solid];
m2_35 -> m2_32  [color=blue, key=0, style=bold];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_47  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_52 -> m2_40  [color=darkseagreen4, key=1, label=chain, style=dashed];
m2_54 -> m2_3  [color=green, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m2_54 -> m2_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler", style=dashed];
m3_73 -> m3_74  [key=0, style=solid];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_69  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_68  [key=0, style=solid];
m3_64 -> m3_70  [key=2, style=dotted];
m3_64 -> m3_71  [key=2, style=dotted];
m3_64 -> m3_58  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_72  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_37  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_72  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_37  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_65 -> m3_66  [key=0, style=solid];
m3_68 -> m3_62  [color=blue, key=0, style=bold];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_80  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_79  [key=0, style=solid];
m3_75 -> m3_70  [key=2, style=dotted];
m3_75 -> m3_57  [key=2, style=dotted];
m3_75 -> m3_58  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_79 -> m3_73  [color=blue, key=0, style=bold];
m3_121 -> m3_122  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_124  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_122 -> m3_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_126  [key=0, style=solid];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_127  [key=2, style=dotted];
m3_125 -> m3_123  [key=0, style=solid];
m3_125 -> m3_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_126 -> m3_121  [color=blue, key=0, style=bold];
m3_36 -> m3_38  [key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_50  [key=0, style=solid];
m3_38 -> m3_40  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_38 -> m3_41  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_38 -> m3_42  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_38 -> m3_43  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_38 -> m3_47  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_38 -> m3_48  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_44  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m3_39 -> m3_45  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m3_39 -> m3_46  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m3_39 -> m3_49  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_61  [key=2, style=dotted];
m3_50 -> m3_52  [color=darkseagreen4, key=1, label=endOfDay, style=dashed];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_43  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_44  [key=0, style=solid];
m3_42 -> m3_44  [key=0, style=solid];
m3_42 -> m3_54  [key=2, style=dotted];
m3_42 -> m3_45  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m3_42 -> m3_46  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m3_42 -> m3_49  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_55  [key=2, style=dotted];
m3_43 -> m3_45  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m3_43 -> m3_46  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m3_43 -> m3_49  [color=darkseagreen4, key=1, label=endOfDayEventTime, style=dashed];
m3_47 -> m3_38  [key=0, style=solid];
m3_47 -> m3_57  [key=2, style=dotted];
m3_47 -> m3_58  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_63  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_48 -> m3_64  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_38  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_47  [key=0, style=solid];
m3_46 -> m3_48  [key=0, style=solid];
m3_46 -> m3_56  [key=2, style=dotted];
m3_46 -> m3_57  [key=2, style=dotted];
m3_46 -> m3_58  [key=2, style=dotted];
m3_49 -> m3_38  [key=0, style=solid];
m3_49 -> m3_59  [key=2, style=dotted];
m3_49 -> m3_60  [key=2, style=dotted];
m3_49 -> m3_66  [color=darkseagreen4, key=1, label=err, style=dashed];
m3_49 -> m3_67  [color=darkseagreen4, key=1, label=err, style=dashed];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_53  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_59  [key=2, style=dotted];
m3_52 -> m3_60  [key=2, style=dotted];
m3_52 -> m3_77  [color=darkseagreen4, key=1, label=err, style=dashed];
m3_52 -> m3_78  [color=darkseagreen4, key=1, label=err, style=dashed];
m3_53 -> m3_36  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IApi", style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_8  [key=2, style=dotted];
m3_6 -> m3_0  [color=blue, key=0, style=bold];
m3_135 -> m3_136  [key=0, style=solid];
m3_136 -> m3_137  [key=0, style=solid];
m3_137 -> m3_135  [color=blue, key=0, style=bold];
m3_35 -> m3_81  [key=0, style=solid];
m3_35 -> m3_86  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_105  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_109  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_104  [key=0, style=solid];
m3_82 -> m3_91  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_82 -> m3_92  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_82 -> m3_93  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_82 -> m3_94  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_82 -> m3_95  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_82 -> m3_96  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_82 -> m3_97  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_82 -> m3_98  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_82 -> m3_99  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_82 -> m3_101  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_82 -> m3_102  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_82 -> m3_103  [color=darkseagreen4, key=1, label=sub, style=dashed];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_85  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_83 -> m3_86  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_83 -> m3_87  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_83 -> m3_88  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_111  [key=2, style=dotted];
m3_92 -> m3_82  [key=0, style=solid];
m3_92 -> m3_111  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_97  [key=0, style=solid];
m3_94 -> m3_95  [key=0, style=solid];
m3_95 -> m3_96  [key=0, style=solid];
m3_96 -> m3_82  [key=0, style=solid];
m3_96 -> m3_110  [key=2, style=dotted];
m3_96 -> m3_58  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_98 -> m3_99  [key=0, style=solid];
m3_99 -> m3_82  [key=0, style=solid];
m3_99 -> m3_110  [key=2, style=dotted];
m3_99 -> m3_58  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_102 -> m3_103  [key=0, style=solid];
m3_103 -> m3_82  [key=0, style=solid];
m3_103 -> m3_110  [key=2, style=dotted];
m3_103 -> m3_58  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_88  [key=0, style=solid];
m3_84 -> m3_106  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_107  [key=2, style=dotted];
m3_85 -> m3_108  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_110  [key=2, style=dotted];
m3_87 -> m3_58  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_100  [key=0, style=solid];
m3_89 -> m3_90  [key=0, style=solid];
m3_100 -> m3_101  [key=0, style=solid];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_93  [key=0, style=solid];
m3_104 -> m3_35  [color=blue, key=0, style=bold];
m3_21 -> m3_28  [key=0, style=solid];
m3_21 -> m3_29  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_34  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_35  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_33  [key=0, style=solid];
m3_30 -> m3_36  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_37  [key=2, style=dotted];
m3_33 -> m3_21  [color=blue, key=0, style=bold];
m3_27 -> m3_112  [key=0, style=solid];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_114  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_112 -> m3_115  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_116  [key=0, style=solid];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_117  [key=2, style=dotted];
m3_115 -> m3_113  [key=0, style=solid];
m3_115 -> m3_115  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_116 -> m3_27  [color=blue, key=0, style=bold];
m3_60 -> m3_118  [key=0, style=solid];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_120  [key=2, style=dotted];
m3_119 -> m3_60  [color=blue, key=0, style=bold];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_21  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_19  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_22  [key=2, style=dotted];
m3_14 -> m3_23  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_24  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_25  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_26  [key=2, style=dotted];
m3_18 -> m3_13  [key=0, style=solid];
m3_18 -> m3_27  [key=2, style=dotted];
m3_20 -> m3_9  [color=blue, key=0, style=bold];
m3_34 -> m3_128  [key=0, style=solid];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_130  [key=2, style=dotted];
m3_129 -> m3_34  [color=blue, key=0, style=bold];
m3_26 -> m3_131  [key=0, style=solid];
m3_26 -> m3_132  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_26 -> m3_133  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_133  [key=0, style=solid];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_21  [key=2, style=dotted];
m3_133 -> m3_134  [key=0, style=solid];
m3_134 -> m3_26  [color=blue, key=0, style=bold];
m3_138 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_81  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_82  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_90  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_94  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_95  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_96  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_98  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_101  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_102  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_103  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_113  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_114  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_128  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_131  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_132  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_133  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_138 -> m3_136  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m3_139 -> m3_63  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_139 -> m3_64  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_75 -> m4_84  [key=0, style=solid];
m4_75 -> m4_86  [color=green, key=1, label="System.Reflection.Assembly", style=dashed];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_96  [key=2, style=dotted];
m4_84 -> m4_94  [color=darkseagreen4, key=1, label=types, style=dashed];
m4_86 -> m4_87  [color=green, key=0, style=solid];
m4_86 -> m4_89  [color=green, key=0, style=solid];
m4_86 -> m4_97  [color=green, key=2, style=dotted];
m4_85 -> m4_86  [color=green, key=0, style=solid];
m4_94 -> m4_95  [key=0, style=solid];
m4_87 -> m4_88  [color=green, key=0, style=solid];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_91  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_90  [color=darkseagreen4, key=1, label=assemblyTypes, style=dashed];
m4_90 -> m4_92  [key=0, style=solid];
m4_90 -> m4_94  [key=0, style=solid];
m4_90 -> m4_98  [key=2, style=dotted];
m4_90 -> m4_99  [key=2, style=dotted];
m4_90 -> m4_100  [key=2, style=dotted];
m4_90 -> m4_90  [color=darkseagreen4, key=1, label=t, style=dashed];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_94  [key=0, style=solid];
m4_91 -> m4_74  [key=2, style=dotted];
m4_92 -> m4_93  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_74  [key=2, style=dotted];
m4_95 -> m4_75  [color=blue, key=0, style=bold];
m4_115 -> m4_116  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [key=2, style=dotted];
m4_4 -> m4_2  [color=blue, key=0, style=bold];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_19  [key=2, style=dotted];
m4_117 -> m4_115  [color=blue, key=0, style=bold];
m4_19 -> m4_20  [color=green, key=0, style=solid];
m4_19 -> m4_22  [color=green, key=1, label=string, style=dashed];
m4_19 -> m4_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_19 -> m4_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_19 -> m4_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_19 -> m4_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_20 -> m4_21  [color=green, key=0, style=solid];
m4_22 -> m4_23  [color=green, key=0, style=solid];
m4_22 -> m4_24  [color=green, key=0, style=solid];
m4_22 -> m4_68  [color=green, key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_30  [color=darkseagreen4, key=1, label=mdbFilename, style=dashed];
m4_26 -> m4_31  [color=green, key=1, label=mdbFilename, style=dashed];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_69  [key=2, style=dotted];
m4_27 -> m4_29  [color=darkseagreen4, key=1, label=pdbFilename, style=dashed];
m4_35 -> m4_39  [key=0, style=solid];
m4_35 -> m4_72  [key=2, style=dotted];
m4_35 -> m4_43  [color=green, key=1, label=assembly, style=dashed];
m4_35 -> m4_55  [color=green, key=1, label=assembly, style=dashed];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_70  [key=2, style=dotted];
m4_21 -> m4_22  [color=green, key=0, style=solid];
m4_21 -> m4_67  [color=darkseagreen4, key=1, label="out string", style=dashed];
m4_23 -> m4_67  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_33  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m4_24 -> m4_38  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_32  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_36  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_73  [key=2, style=dotted];
m4_38 -> m4_43  [color=green, key=1, label=assembly, style=dashed];
m4_38 -> m4_55  [color=green, key=1, label=assembly, style=dashed];
m4_32 -> m4_33  [key=0, style=solid];
m4_30 -> m4_31  [color=green, key=0, style=solid];
m4_30 -> m4_32  [key=0, style=solid];
m4_30 -> m4_68  [key=2, style=dotted];
m4_31 -> m4_32  [color=green, key=0, style=solid];
m4_31 -> m4_70  [color=green, key=2, style=dotted];
m4_31 -> m4_33  [color=green, key=1, label=debugInformationBytes, style=dashed];
m4_31 -> m4_38  [color=green, key=1, label=debugInformationBytes, style=dashed];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=0, style=solid];
m4_28 -> m4_68  [key=2, style=dotted];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_70  [key=2, style=dotted];
m4_29 -> m4_33  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m4_29 -> m4_38  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_71  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_71  [key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_43  [color=green, key=0, style=solid];
m4_43 -> m4_44  [color=green, key=0, style=solid];
m4_43 -> m4_75  [color=green, key=2, style=dotted];
m4_43 -> m4_45  [color=green, key=1, label=types, style=dashed];
m4_43 -> m4_49  [color=green, key=1, label=types, style=dashed];
m4_43 -> m4_50  [color=green, key=1, label=types, style=dashed];
m4_43 -> m4_51  [color=green, key=1, label=types, style=dashed];
m4_43 -> m4_55  [color=green, key=1, label=types, style=dashed];
m4_55 -> m4_56  [color=green, key=0, style=solid];
m4_55 -> m4_79  [color=green, key=2, style=dotted];
m4_55 -> m4_57  [color=green, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_55 -> m4_66  [color=green, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_55 -> m4_67  [color=green, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_67  [color=darkseagreen4, key=1, label="out string", style=dashed];
m4_41 -> m4_42  [color=green, key=0, style=solid];
m4_41 -> m4_74  [key=2, style=dotted];
m4_42 -> m4_67  [color=green, key=0, style=solid];
m4_44 -> m4_45  [color=green, key=0, style=solid];
m4_44 -> m4_76  [color=green, key=2, style=dotted];
m4_44 -> m4_71  [color=green, key=2, style=dotted];
m4_45 -> m4_46  [color=green, key=0, style=solid];
m4_45 -> m4_49  [color=green, key=0, style=solid];
m4_49 -> m4_50  [color=green, key=0, style=solid];
m4_49 -> m4_55  [color=green, key=0, style=solid];
m4_50 -> m4_51  [color=green, key=0, style=solid];
m4_50 -> m4_77  [color=green, key=2, style=dotted];
m4_51 -> m4_52  [color=green, key=0, style=solid];
m4_51 -> m4_55  [color=green, key=0, style=solid];
m4_51 -> m4_78  [color=green, key=2, style=dotted];
m4_46 -> m4_47  [color=green, key=0, style=solid];
m4_46 -> m4_67  [color=green, key=1, label="out string", style=dashed];
m4_47 -> m4_48  [color=green, key=0, style=solid];
m4_47 -> m4_74  [color=green, key=2, style=dotted];
m4_48 -> m4_67  [color=green, key=0, style=solid];
m4_52 -> m4_53  [color=green, key=0, style=solid];
m4_52 -> m4_67  [color=green, key=1, label="out string", style=dashed];
m4_53 -> m4_54  [color=green, key=0, style=solid];
m4_53 -> m4_74  [color=green, key=2, style=dotted];
m4_54 -> m4_67  [color=green, key=0, style=solid];
m4_56 -> m4_57  [color=red, key=0, style=solid];
m4_56 -> m4_58  [color=red, key=0, style=solid];
m4_56 -> m4_62  [color=red, key=0, style=solid];
m4_56 -> m4_66  [color=red, key=0, style=solid];
m4_57 -> m4_58  [color=red, key=0, style=solid];
m4_57 -> m4_62  [color=red, key=0, style=solid];
m4_57 -> m4_66  [color=red, key=0, style=solid];
m4_57 -> m4_80  [color=red, key=2, style=dotted];
m4_57 -> m4_71  [color=red, key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_58 -> m4_59  [color=red, key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_59 -> m4_60  [color=red, key=0, style=solid];
m4_59 -> m4_74  [color=red, key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_66  [key=0, style=solid];
m4_61 -> m4_66  [key=0, style=solid];
m4_61 -> m4_67  [color=darkseagreen4, key=1, label="out string", style=dashed];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_74  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_66  [key=0, style=solid];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_67  [color=darkseagreen4, key=1, label="out string", style=dashed];
m4_67 -> m4_19  [color=blue, key=0, style=bold];
m4_81 -> m4_82  [key=0, style=solid];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_75  [key=2, style=dotted];
m4_83 -> m4_81  [color=blue, key=0, style=bold];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_101 -> m4_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_102 -> m4_103  [key=0, style=solid];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_114  [key=2, style=dotted];
m4_106 -> m4_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_106 -> m4_108  [color=darkseagreen4, key=1, label=error, style=dashed];
m4_106 -> m4_109  [color=darkseagreen4, key=1, label=complete, style=dashed];
m4_106 -> m4_110  [color=darkseagreen4, key=1, label=error, style=dashed];
m4_106 -> m4_111  [color=darkseagreen4, key=1, label=success, style=dashed];
m4_103 -> m4_104  [key=0, style=solid];
m4_104 -> m4_105  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_113  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_111  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_107 -> m4_112  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_112  [color=darkseagreen4, key=1, label="out string", style=dashed];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_111  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [color=darkseagreen4, key=1, label="out string", style=dashed];
m4_111 -> m4_112  [key=0, style=solid];
m4_112 -> m4_101  [color=blue, key=0, style=bold];
m4_131 -> m4_132  [key=0, style=solid];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_135  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_136  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_135 -> m4_131  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_14 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_19  [key=2, style=dotted];
m4_15 -> m4_17  [color=darkseagreen4, key=1, label=success, style=dashed];
m4_15 -> m4_18  [color=darkseagreen4, key=1, label="out string", style=dashed];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_18  [color=darkseagreen4, key=1, label="out T", style=dashed];
m4_17 -> m4_18  [key=0, style=solid];
m4_18 -> m4_13  [color=blue, key=0, style=bold];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_121  [key=0, style=solid];
m4_119 -> m4_78  [key=2, style=dotted];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_130  [key=2, style=dotted];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_125  [key=2, style=dotted];
m4_120 -> m4_126  [key=2, style=dotted];
m4_120 -> m4_127  [key=2, style=dotted];
m4_120 -> m4_128  [key=2, style=dotted];
m4_120 -> m4_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_129  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_124 -> m4_118  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m4_6 -> m4_10  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, string>", style=dashed];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_8 -> m4_11  [key=0, style=solid];
m4_8 -> m4_12  [key=2, style=dotted];
m4_11 -> m4_6  [color=blue, key=0, style=bold];
m4_137 -> m4_9  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_137 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_137 -> m4_15  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_137 -> m4_25  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_137 -> m4_50  [color=green, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_137 -> m4_106  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_137 -> m4_116  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_137 -> m4_122  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_137 -> m4_123  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_137 -> m4_132  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_137 -> m4_133  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_137 -> m4_134  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m4_138 -> m4_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_36 -> m6_37  [key=0, style=solid];
m6_37 -> m6_36  [color=blue, key=0, style=bold];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m6_19 -> m6_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m6_19 -> m6_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m6_19 -> m6_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_31  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_31  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=0, style=solid];
m6_24 -> m6_32  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_28  [key=0, style=solid];
m6_26 -> m6_32  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_22  [key=0, style=solid];
m6_28 -> m6_32  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_21  [key=0, style=solid];
m6_22 -> m6_22  [color=darkseagreen4, key=1, label=chain, style=dashed];
m6_22 -> m6_24  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_22 -> m6_26  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_22 -> m6_29  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_22 -> m6_30  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_22  [key=0, style=solid];
m6_23 -> m6_32  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_34  [key=2, style=dotted];
m6_30 -> m6_22  [key=0, style=solid];
m6_30 -> m6_35  [key=2, style=dotted];
m6_25 -> m6_31  [key=0, style=solid];
m6_25 -> m6_33  [key=2, style=dotted];
m6_27 -> m6_31  [key=0, style=solid];
m6_27 -> m6_33  [key=2, style=dotted];
m6_31 -> m6_19  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_10  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_11  [key=2, style=dotted];
m6_3 -> m6_4  [color=red, key=0, style=solid];
m6_3 -> m6_12  [key=2, style=dotted];
m6_4 -> m6_5  [color=red, key=0, style=solid];
m6_4 -> m6_13  [color=red, key=2, style=dotted];
m6_4 -> m6_6  [color=red, key=1, label=equity, style=dashed];
m6_4 -> m6_8  [color=red, key=1, label=equity, style=dashed];
m6_5 -> m6_6  [color=red, key=0, style=solid];
m6_5 -> m6_14  [color=red, key=2, style=dotted];
m6_5 -> m6_7  [color=red, key=1, label=option, style=dashed];
m6_6 -> m6_7  [color=red, key=0, style=solid];
m6_6 -> m6_15  [color=red, key=2, style=dotted];
m6_8 -> m6_9  [color=red, key=0, style=solid];
m6_8 -> m6_18  [color=red, key=2, style=dotted];
m6_7 -> m6_8  [color=red, key=0, style=solid];
m6_7 -> m6_16  [key=2, style=dotted];
m6_7 -> m6_17  [key=2, style=dotted];
m6_9 -> m6_0  [color=blue, key=0, style=bold];
m6_38 -> m6_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m6_38 -> m6_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m6_38 -> m6_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m6_38 -> m6_4  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m6_38 -> m6_5  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m6_38 -> m6_8  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m6_38 -> m6_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m6_38 -> m6_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m6_38 -> m6_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionOpenInterestRegressionAlgorithm", style=dashed];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m7_18 -> m7_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_30  [key=0, style=solid];
m7_22 -> m7_23  [color=red, key=0, style=solid];
m7_22 -> m7_37  [color=red, key=0, style=solid];
m7_22 -> m7_38  [color=red, key=2, style=dotted];
m7_33 -> m7_34  [color=red, key=0, style=solid];
m7_33 -> m7_37  [color=red, key=0, style=solid];
m7_33 -> m7_38  [color=red, key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_37  [key=0, style=solid];
m7_30 -> m7_31  [color=green, key=0, style=solid];
m7_30 -> m7_37  [key=0, style=solid];
m7_21 -> m7_22  [color=red, key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_39  [key=2, style=dotted];
m7_23 -> m7_40  [key=2, style=dotted];
m7_23 -> m7_41  [key=2, style=dotted];
m7_23 -> m7_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_23 -> m7_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_23 -> m7_25  [color=darkseagreen4, key=1, label=contract, style=dashed];
m7_23 -> m7_26  [color=darkseagreen4, key=1, label=contract, style=dashed];
m7_23 -> m7_28  [color=darkseagreen4, key=1, label=contract, style=dashed];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_37  [key=0, style=solid];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_42  [key=2, style=dotted];
m7_26 -> m7_27  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_37  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_42  [key=2, style=dotted];
m7_29 -> m7_37  [key=0, style=solid];
m7_29 -> m7_43  [key=2, style=dotted];
m7_31 -> m7_32  [color=green, key=0, style=solid];
m7_31 -> m7_44  [color=green, key=2, style=dotted];
m7_32 -> m7_33  [color=red, key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_39  [key=2, style=dotted];
m7_34 -> m7_40  [key=2, style=dotted];
m7_34 -> m7_41  [key=2, style=dotted];
m7_34 -> m7_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_34 -> m7_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_37  [key=0, style=solid];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_43  [key=2, style=dotted];
m7_37 -> m7_18  [color=blue, key=0, style=bold];
m7_55 -> m7_56  [key=0, style=solid];
m7_45 -> m7_46  [key=0, style=solid];
m7_48 -> m7_49  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_46 -> m7_47  [key=0, style=solid];
m7_47 -> m7_45  [color=blue, key=0, style=bold];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_51  [key=2, style=dotted];
m7_50 -> m7_48  [color=blue, key=0, style=bold];
m7_53 -> m7_54  [key=0, style=solid];
m7_54 -> m7_52  [color=blue, key=0, style=bold];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_51  [key=2, style=dotted];
m7_57 -> m7_55  [color=blue, key=0, style=bold];
m7_58 -> m7_59  [key=0, style=solid];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_61  [key=2, style=dotted];
m7_59 -> m7_62  [key=2, style=dotted];
m7_60 -> m7_58  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_10  [key=2, style=dotted];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_11  [key=2, style=dotted];
m7_3 -> m7_4  [color=green, key=0, style=solid];
m7_3 -> m7_12  [color=green, key=2, style=dotted];
m7_4 -> m7_5  [color=red, key=0, style=solid];
m7_4 -> m7_13  [color=red, key=2, style=dotted];
m7_4 -> m7_6  [color=darkseagreen4, key=1, label=equity, style=dashed];
m7_4 -> m7_8  [color=darkseagreen4, key=1, label=equity, style=dashed];
m7_5 -> m7_6  [color=red, key=0, style=solid];
m7_5 -> m7_14  [color=red, key=2, style=dotted];
m7_5 -> m7_7  [color=darkseagreen4, key=1, label=option, style=dashed];
m7_6 -> m7_7  [color=red, key=0, style=solid];
m7_6 -> m7_15  [color=red, key=2, style=dotted];
m7_8 -> m7_9  [color=red, key=0, style=solid];
m7_8 -> m7_17  [color=red, key=2, style=dotted];
m7_7 -> m7_8  [color=red, key=0, style=solid];
m7_7 -> m7_16  [key=2, style=dotted];
m7_9 -> m7_0  [color=blue, key=0, style=bold];
m7_63 -> m7_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_3  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_31  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m7_63 -> m7_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_317 -> m8_318  [key=0, style=solid];
m8_320 -> m8_38  [key=2, style=dotted];
m8_320 -> m8_321  [key=0, style=solid];
m8_320 -> m8_325  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_320 -> m8_326  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_318 -> m8_30  [key=2, style=dotted];
m8_318 -> m8_320  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_318 -> m8_319  [key=0, style=solid];
m8_318 -> m8_322  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_318 -> m8_323  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_318 -> m8_327  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_319 -> m8_37  [key=2, style=dotted];
m8_319 -> m8_320  [key=0, style=solid];
m8_321 -> m8_322  [key=0, style=solid];
m8_321 -> m8_274  [key=2, style=dotted];
m8_325 -> m8_326  [key=0, style=solid];
m8_325 -> m8_209  [key=2, style=dotted];
m8_326 -> m8_28  [key=2, style=dotted];
m8_326 -> m8_327  [key=0, style=solid];
m8_327 -> m8_28  [key=2, style=dotted];
m8_327 -> m8_328  [key=0, style=solid];
m8_322 -> m8_31  [key=2, style=dotted];
m8_322 -> m8_33  [key=2, style=dotted];
m8_322 -> m8_34  [key=2, style=dotted];
m8_322 -> m8_36  [key=2, style=dotted];
m8_322 -> m8_323  [key=0, style=solid];
m8_322 -> m8_200  [key=2, style=dotted];
m8_323 -> m8_324  [key=0, style=solid];
m8_323 -> m8_257  [key=2, style=dotted];
m8_324 -> m8_325  [key=0, style=solid];
m8_324 -> m8_275  [key=2, style=dotted];
m8_328 -> m8_317  [color=blue, key=0, style=bold];
m8_505 -> m8_506  [key=0, style=solid];
m8_510 -> m8_38  [key=2, style=dotted];
m8_510 -> m8_511  [key=0, style=solid];
m8_510 -> m8_514  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_510 -> m8_525  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_510 -> m8_527  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_507 -> m8_30  [key=2, style=dotted];
m8_507 -> m8_510  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_507 -> m8_508  [key=0, style=solid];
m8_507 -> m8_511  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_507 -> m8_515  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_507 -> m8_516  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_507 -> m8_517  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_507 -> m8_518  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_507 -> m8_519  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_507 -> m8_520  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_507 -> m8_522  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_507 -> m8_526  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_507 -> m8_530  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_508 -> m8_37  [key=2, style=dotted];
m8_508 -> m8_510  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_508 -> m8_509  [key=0, style=solid];
m8_508 -> m8_513  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_508 -> m8_519  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_508 -> m8_521  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_509 -> m8_510  [key=0, style=solid];
m8_509 -> m8_533  [key=2, style=dotted];
m8_509 -> m8_512  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_509 -> m8_513  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_511 -> m8_512  [key=0, style=solid];
m8_514 -> m8_515  [key=0, style=solid];
m8_514 -> m8_274  [key=2, style=dotted];
m8_525 -> m8_524  [key=0, style=solid];
m8_525 -> m8_209  [key=2, style=dotted];
m8_527 -> m8_28  [key=2, style=dotted];
m8_527 -> m8_528  [key=0, style=solid];
m8_530 -> m8_28  [key=2, style=dotted];
m8_530 -> m8_531  [key=0, style=solid];
m8_528 -> m8_28  [key=2, style=dotted];
m8_528 -> m8_529  [key=0, style=solid];
m8_529 -> m8_28  [key=2, style=dotted];
m8_529 -> m8_530  [key=0, style=solid];
m8_515 -> m8_31  [key=2, style=dotted];
m8_515 -> m8_33  [key=2, style=dotted];
m8_515 -> m8_34  [key=2, style=dotted];
m8_515 -> m8_36  [key=2, style=dotted];
m8_515 -> m8_516  [key=0, style=solid];
m8_515 -> m8_200  [key=2, style=dotted];
m8_516 -> m8_33  [key=2, style=dotted];
m8_516 -> m8_36  [key=2, style=dotted];
m8_516 -> m8_517  [key=0, style=solid];
m8_516 -> m8_537  [key=2, style=dotted];
m8_516 -> m8_200  [key=2, style=dotted];
m8_516 -> m8_538  [key=2, style=dotted];
m8_506 -> m8_507  [key=0, style=solid];
m8_506 -> m8_511  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_506 -> m8_532  [key=2, style=dotted];
m8_506 -> m8_512  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_517 -> m8_518  [key=0, style=solid];
m8_517 -> m8_257  [key=2, style=dotted];
m8_518 -> m8_44  [key=2, style=dotted];
m8_518 -> m8_519  [key=0, style=solid];
m8_518 -> m8_539  [key=2, style=dotted];
m8_519 -> m8_520  [key=0, style=solid];
m8_519 -> m8_205  [key=2, style=dotted];
m8_519 -> m8_540  [key=2, style=dotted];
m8_520 -> m8_521  [key=0, style=solid];
m8_520 -> m8_522  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_520 -> m8_523  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_522 -> m8_523  [key=0, style=solid];
m8_526 -> m8_527  [key=0, style=solid];
m8_526 -> m8_528  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_526 -> m8_529  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_513 -> m8_514  [key=0, style=solid];
m8_513 -> m8_198  [key=2, style=dotted];
m8_521 -> m8_522  [key=0, style=solid];
m8_521 -> m8_541  [key=2, style=dotted];
m8_521 -> m8_542  [key=2, style=dotted];
m8_521 -> m8_544  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_521 -> m8_523  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_512 -> m8_513  [key=0, style=solid];
m8_512 -> m8_534  [key=2, style=dotted];
m8_512 -> m8_535  [key=2, style=dotted];
m8_512 -> m8_536  [key=2, style=dotted];
m8_524 -> m8_525  [key=0, style=solid];
m8_524 -> m8_526  [key=0, style=solid];
m8_523 -> m8_524  [key=0, style=solid];
m8_523 -> m8_543  [key=2, style=dotted];
m8_531 -> m8_505  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [color=green, key=0, style=solid];
m8_1 -> m8_2  [color=green, key=0, style=solid];
m8_1 -> m8_3  [color=green, key=1, label=fillsFile, style=dashed];
m8_1 -> m8_10  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_4  [color=darkseagreen4, key=1, label=equityFile, style=dashed];
m8_2 -> m8_11  [key=2, style=dotted];
m8_3 -> m8_4  [color=red, key=0, style=solid];
m8_3 -> m8_24  [key=2, style=dotted];
m8_3 -> m8_25  [key=2, style=dotted];
m8_3 -> m8_26  [key=2, style=dotted];
m8_3 -> m8_27  [key=2, style=dotted];
m8_3 -> m8_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_3 -> m8_5  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_3 -> m8_15  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_3 -> m8_16  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_3 -> m8_12  [key=2, style=dotted];
m8_12 -> m8_13  [color=green, key=0, style=solid];
m8_12 -> m8_38  [color=green, key=2, style=dotted];
m8_12 -> m8_20  [color=green, key=1, label=portfolio, style=dashed];
m8_12 -> m8_21  [color=green, key=1, label=portfolio, style=dashed];
m8_7 -> m8_12  [color=green, key=1, label=securities, style=dashed];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_30  [key=2, style=dotted];
m8_7 -> m8_10  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_7 -> m8_11  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_7 -> m8_16  [key=2, style=dotted];
m8_11 -> m8_12  [color=green, key=0, style=solid];
m8_11 -> m8_37  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_39  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_45  [key=2, style=dotted];
m8_20 -> m8_37  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_28  [key=2, style=dotted];
m8_4 -> m8_13  [color=darkseagreen4, key=1, label=equity, style=dashed];
m8_4 -> m8_21  [color=darkseagreen4, key=1, label=equity, style=dashed];
m8_4 -> m8_5  [color=red, key=0, style=solid];
m8_4 -> m8_24  [key=2, style=dotted];
m8_4 -> m8_25  [key=2, style=dotted];
m8_4 -> m8_26  [key=2, style=dotted];
m8_4 -> m8_27  [key=2, style=dotted];
m8_4 -> m8_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_4 -> m8_6  [color=red, key=1, label=equity, style=dashed];
m8_4 -> m8_8  [color=red, key=1, label=equity, style=dashed];
m8_5 -> m8_6  [color=red, key=0, style=solid];
m8_5 -> m8_28  [key=2, style=dotted];
m8_5 -> m8_14  [color=red, key=2, style=dotted];
m8_5 -> m8_7  [color=red, key=1, label=option, style=dashed];
m8_15 -> m8_23  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_20  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_16 -> m8_17  [key=0, style=solid];
m8_6 -> m8_7  [color=red, key=0, style=solid];
m8_6 -> m8_29  [key=2, style=dotted];
m8_6 -> m8_8  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_6 -> m8_15  [color=red, key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_31  [key=2, style=dotted];
m8_8 -> m8_32  [key=2, style=dotted];
m8_8 -> m8_33  [key=2, style=dotted];
m8_8 -> m8_34  [key=2, style=dotted];
m8_8 -> m8_10  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_8 -> m8_19  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_8 -> m8_17  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_36  [key=2, style=dotted];
m8_14 -> m8_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_14 -> m8_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_14 -> m8_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_14 -> m8_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_43  [key=2, style=dotted];
m8_19 -> m8_44  [key=2, style=dotted];
m8_19 -> m8_30  [key=0, style=solid];
m8_22 -> m8_15  [key=0, style=solid];
m8_22 -> m8_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_22 -> m8_23  [color=red, key=0, style=solid];
m8_22 -> m8_37  [key=0, style=solid];
m8_22 -> m8_38  [key=2, style=dotted];
m8_17 -> m8_19  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_40  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_35  [key=2, style=dotted];
m8_9 -> m8_0  [color=blue, key=0, style=bold];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_41  [key=2, style=dotted];
m8_18 -> m8_42  [key=2, style=dotted];
m8_18 -> m8_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m8_18 -> m8_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m8_23 -> m8_0  [color=blue, key=0, style=bold];
m8_23 -> m8_24  [color=red, key=0, style=solid];
m8_23 -> m8_39  [color=red, key=2, style=dotted];
m8_23 -> m8_40  [color=red, key=2, style=dotted];
m8_23 -> m8_41  [color=red, key=2, style=dotted];
m8_23 -> m8_45  [color=red, key=1, label="lambda expression", style=dashed];
m8_23 -> m8_48  [color=red, key=1, label="lambda expression", style=dashed];
m8_23 -> m8_25  [color=red, key=1, label=contract, style=dashed];
m8_23 -> m8_26  [color=red, key=1, label=contract, style=dashed];
m8_23 -> m8_28  [color=red, key=1, label=contract, style=dashed];
m8_259 -> m8_260  [key=0, style=solid];
m8_262 -> m8_38  [key=2, style=dotted];
m8_262 -> m8_263  [key=0, style=solid];
m8_262 -> m8_266  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_262 -> m8_267  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_262 -> m8_270  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_262 -> m8_271  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_260 -> m8_30  [key=2, style=dotted];
m8_260 -> m8_262  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_260 -> m8_261  [key=0, style=solid];
m8_260 -> m8_264  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_260 -> m8_268  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_260 -> m8_272  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_261 -> m8_37  [key=2, style=dotted];
m8_261 -> m8_262  [key=0, style=solid];
m8_263 -> m8_264  [key=0, style=solid];
m8_263 -> m8_274  [key=2, style=dotted];
m8_266 -> m8_267  [key=0, style=solid];
m8_266 -> m8_209  [key=2, style=dotted];
m8_267 -> m8_28  [key=2, style=dotted];
m8_267 -> m8_268  [key=0, style=solid];
m8_270 -> m8_271  [key=0, style=solid];
m8_270 -> m8_209  [key=2, style=dotted];
m8_271 -> m8_28  [key=2, style=dotted];
m8_271 -> m8_272  [key=0, style=solid];
m8_268 -> m8_28  [key=2, style=dotted];
m8_268 -> m8_269  [key=0, style=solid];
m8_272 -> m8_28  [key=2, style=dotted];
m8_272 -> m8_273  [key=0, style=solid];
m8_264 -> m8_31  [key=2, style=dotted];
m8_264 -> m8_33  [key=2, style=dotted];
m8_264 -> m8_34  [key=2, style=dotted];
m8_264 -> m8_36  [key=2, style=dotted];
m8_264 -> m8_265  [key=0, style=solid];
m8_264 -> m8_200  [key=2, style=dotted];
m8_265 -> m8_266  [key=0, style=solid];
m8_265 -> m8_275  [key=2, style=dotted];
m8_269 -> m8_270  [key=0, style=solid];
m8_269 -> m8_275  [key=2, style=dotted];
m8_273 -> m8_259  [color=blue, key=0, style=bold];
m8_465 -> m8_466  [key=0, style=solid];
m8_473 -> m8_38  [key=2, style=dotted];
m8_473 -> m8_474  [key=0, style=solid];
m8_473 -> m8_488  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_473 -> m8_490  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_473 -> m8_493  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_473 -> m8_499  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_473 -> m8_502  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_469 -> m8_30  [key=2, style=dotted];
m8_469 -> m8_473  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_469 -> m8_470  [key=0, style=solid];
m8_469 -> m8_476  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_469 -> m8_477  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_470 -> m8_37  [key=2, style=dotted];
m8_470 -> m8_473  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_470 -> m8_471  [key=0, style=solid];
m8_470 -> m8_472  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_470 -> m8_490  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_470 -> m8_493  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_470 -> m8_499  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_470 -> m8_502  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_472 -> m8_473  [key=0, style=solid];
m8_472 -> m8_198  [key=2, style=dotted];
m8_474 -> m8_475  [key=0, style=solid];
m8_474 -> m8_199  [key=2, style=dotted];
m8_488 -> m8_489  [key=0, style=solid];
m8_488 -> m8_209  [key=2, style=dotted];
m8_490 -> m8_491  [key=0, style=solid];
m8_490 -> m8_211  [key=2, style=dotted];
m8_493 -> m8_494  [key=0, style=solid];
m8_493 -> m8_211  [key=2, style=dotted];
m8_499 -> m8_500  [key=0, style=solid];
m8_499 -> m8_211  [key=2, style=dotted];
m8_502 -> m8_503  [key=0, style=solid];
m8_502 -> m8_211  [key=2, style=dotted];
m8_476 -> m8_31  [key=2, style=dotted];
m8_476 -> m8_33  [key=2, style=dotted];
m8_476 -> m8_34  [key=2, style=dotted];
m8_476 -> m8_477  [key=0, style=solid];
m8_476 -> m8_111  [key=2, style=dotted];
m8_468 -> m8_469  [key=0, style=solid];
m8_468 -> m8_482  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_468 -> m8_483  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_468 -> m8_492  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_468 -> m8_498  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_468 -> m8_501  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_477 -> m8_478  [key=0, style=solid];
m8_477 -> m8_481  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_477 -> m8_485  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_477 -> m8_497  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_471 -> m8_472  [key=0, style=solid];
m8_471 -> m8_197  [key=2, style=dotted];
m8_471 -> m8_484  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_471 -> m8_487  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_467 -> m8_474  [color=darkseagreen4, key=1, label=amount, style=dashed];
m8_467 -> m8_468  [key=0, style=solid];
m8_475 -> m8_476  [key=0, style=solid];
m8_475 -> m8_200  [key=2, style=dotted];
m8_483 -> m8_488  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_483 -> m8_484  [key=0, style=solid];
m8_483 -> m8_203  [key=2, style=dotted];
m8_487 -> m8_488  [key=0, style=solid];
m8_487 -> m8_207  [key=2, style=dotted];
m8_487 -> m8_208  [key=2, style=dotted];
m8_489 -> m8_490  [key=0, style=solid];
m8_489 -> m8_202  [key=2, style=dotted];
m8_489 -> m8_210  [key=2, style=dotted];
m8_491 -> m8_492  [key=0, style=solid];
m8_491 -> m8_212  [key=2, style=dotted];
m8_492 -> m8_493  [key=0, style=solid];
m8_492 -> m8_202  [key=2, style=dotted];
m8_492 -> m8_210  [key=2, style=dotted];
m8_494 -> m8_495  [key=0, style=solid];
m8_494 -> m8_213  [key=2, style=dotted];
m8_498 -> m8_499  [key=0, style=solid];
m8_498 -> m8_202  [key=2, style=dotted];
m8_498 -> m8_210  [key=2, style=dotted];
m8_500 -> m8_501  [key=0, style=solid];
m8_500 -> m8_213  [key=2, style=dotted];
m8_501 -> m8_502  [key=0, style=solid];
m8_501 -> m8_202  [key=2, style=dotted];
m8_501 -> m8_210  [key=2, style=dotted];
m8_503 -> m8_504  [key=0, style=solid];
m8_503 -> m8_212  [key=2, style=dotted];
m8_481 -> m8_44  [key=2, style=dotted];
m8_481 -> m8_482  [key=0, style=solid];
m8_481 -> m8_201  [key=2, style=dotted];
m8_497 -> m8_44  [key=2, style=dotted];
m8_497 -> m8_498  [key=0, style=solid];
m8_497 -> m8_201  [key=2, style=dotted];
m8_495 -> m8_40  [key=2, style=dotted];
m8_495 -> m8_498  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_495 -> m8_501  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_495 -> m8_497  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_495 -> m8_495  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_495 -> m8_496  [key=0, style=solid];
m8_478 -> m8_35  [key=2, style=dotted];
m8_478 -> m8_479  [key=0, style=solid];
m8_466 -> m8_468  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m8_466 -> m8_467  [key=0, style=solid];
m8_466 -> m8_478  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m8_482 -> m8_483  [key=0, style=solid];
m8_482 -> m8_202  [key=2, style=dotted];
m8_482 -> m8_484  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_482 -> m8_485  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_485 -> m8_487  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_485 -> m8_486  [key=0, style=solid];
m8_485 -> m8_205  [key=2, style=dotted];
m8_484 -> m8_485  [key=0, style=solid];
m8_484 -> m8_204  [key=2, style=dotted];
m8_480 -> m8_483  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m8_480 -> m8_489  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m8_480 -> m8_492  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m8_480 -> m8_481  [key=0, style=solid];
m8_480 -> m8_482  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m8_480 -> m8_496  [color=darkseagreen4, key=1, label=sellPrice, style=dashed];
m8_486 -> m8_487  [key=0, style=solid];
m8_486 -> m8_206  [key=2, style=dotted];
m8_479 -> m8_489  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_479 -> m8_492  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_479 -> m8_481  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_479 -> m8_495  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_479 -> m8_482  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_479 -> m8_480  [key=0, style=solid];
m8_496 -> m8_498  [color=darkseagreen4, key=1, label=highPrice, style=dashed];
m8_496 -> m8_501  [color=darkseagreen4, key=1, label=highPrice, style=dashed];
m8_496 -> m8_497  [key=0, style=solid];
m8_504 -> m8_465  [color=blue, key=0, style=bold];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_43  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_42  [key=2, style=dotted];
m8_699 -> m8_700  [key=0, style=solid];
m8_704 -> m8_38  [key=2, style=dotted];
m8_704 -> m8_705  [key=0, style=solid];
m8_704 -> m8_708  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_704 -> m8_719  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_704 -> m8_721  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_701 -> m8_30  [key=2, style=dotted];
m8_701 -> m8_704  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_701 -> m8_702  [key=0, style=solid];
m8_701 -> m8_705  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_701 -> m8_709  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_701 -> m8_710  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_701 -> m8_711  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_701 -> m8_712  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_701 -> m8_713  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_701 -> m8_715  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_701 -> m8_720  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_701 -> m8_724  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_702 -> m8_37  [key=2, style=dotted];
m8_702 -> m8_704  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_702 -> m8_703  [key=0, style=solid];
m8_702 -> m8_707  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_702 -> m8_712  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_702 -> m8_714  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_703 -> m8_704  [key=0, style=solid];
m8_703 -> m8_533  [key=2, style=dotted];
m8_703 -> m8_706  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_703 -> m8_707  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_705 -> m8_706  [key=0, style=solid];
m8_708 -> m8_709  [key=0, style=solid];
m8_708 -> m8_274  [key=2, style=dotted];
m8_719 -> m8_718  [key=0, style=solid];
m8_719 -> m8_695  [key=2, style=dotted];
m8_721 -> m8_28  [key=2, style=dotted];
m8_721 -> m8_722  [key=0, style=solid];
m8_724 -> m8_28  [key=2, style=dotted];
m8_724 -> m8_725  [key=0, style=solid];
m8_722 -> m8_28  [key=2, style=dotted];
m8_722 -> m8_723  [key=0, style=solid];
m8_723 -> m8_28  [key=2, style=dotted];
m8_723 -> m8_724  [key=0, style=solid];
m8_709 -> m8_31  [key=2, style=dotted];
m8_709 -> m8_33  [key=2, style=dotted];
m8_709 -> m8_34  [key=2, style=dotted];
m8_709 -> m8_36  [key=2, style=dotted];
m8_709 -> m8_710  [key=0, style=solid];
m8_709 -> m8_200  [key=2, style=dotted];
m8_710 -> m8_33  [key=2, style=dotted];
m8_710 -> m8_36  [key=2, style=dotted];
m8_710 -> m8_711  [key=0, style=solid];
m8_710 -> m8_537  [key=2, style=dotted];
m8_710 -> m8_200  [key=2, style=dotted];
m8_710 -> m8_538  [key=2, style=dotted];
m8_700 -> m8_701  [key=0, style=solid];
m8_700 -> m8_705  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_700 -> m8_532  [key=2, style=dotted];
m8_700 -> m8_706  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_711 -> m8_712  [key=0, style=solid];
m8_711 -> m8_257  [key=2, style=dotted];
m8_712 -> m8_713  [key=0, style=solid];
m8_712 -> m8_205  [key=2, style=dotted];
m8_712 -> m8_540  [key=2, style=dotted];
m8_713 -> m8_719  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_713 -> m8_714  [key=0, style=solid];
m8_713 -> m8_715  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_713 -> m8_716  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_713 -> m8_717  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_715 -> m8_716  [key=0, style=solid];
m8_720 -> m8_721  [key=0, style=solid];
m8_720 -> m8_722  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_720 -> m8_723  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_707 -> m8_708  [key=0, style=solid];
m8_707 -> m8_198  [key=2, style=dotted];
m8_714 -> m8_715  [key=0, style=solid];
m8_714 -> m8_541  [key=2, style=dotted];
m8_714 -> m8_542  [key=2, style=dotted];
m8_714 -> m8_726  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_714 -> m8_716  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_706 -> m8_707  [key=0, style=solid];
m8_706 -> m8_534  [key=2, style=dotted];
m8_706 -> m8_535  [key=2, style=dotted];
m8_706 -> m8_536  [key=2, style=dotted];
m8_717 -> m8_719  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m8_717 -> m8_718  [key=0, style=solid];
m8_718 -> m8_719  [key=0, style=solid];
m8_718 -> m8_720  [key=0, style=solid];
m8_716 -> m8_717  [key=0, style=solid];
m8_716 -> m8_718  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_716 -> m8_543  [key=2, style=dotted];
m8_725 -> m8_699  [color=blue, key=0, style=bold];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_37  [key=0, style=solid];
m8_37 -> m8_18  [color=blue, key=0, style=bold];
m8_940 -> m8_941  [key=0, style=solid];
m8_945 -> m8_38  [key=2, style=dotted];
m8_945 -> m8_946  [key=0, style=solid];
m8_945 -> m8_949  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_945 -> m8_962  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_945 -> m8_964  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_942 -> m8_30  [key=2, style=dotted];
m8_942 -> m8_945  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_942 -> m8_943  [key=0, style=solid];
m8_942 -> m8_946  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_942 -> m8_950  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_942 -> m8_951  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_942 -> m8_952  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_942 -> m8_953  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_942 -> m8_954  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_942 -> m8_955  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_942 -> m8_957  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_942 -> m8_963  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_942 -> m8_965  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_942 -> m8_966  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_943 -> m8_37  [key=2, style=dotted];
m8_943 -> m8_945  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_943 -> m8_944  [key=0, style=solid];
m8_943 -> m8_948  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_943 -> m8_954  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_943 -> m8_956  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_944 -> m8_945  [key=0, style=solid];
m8_944 -> m8_533  [key=2, style=dotted];
m8_944 -> m8_947  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_944 -> m8_948  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_946 -> m8_947  [key=0, style=solid];
m8_949 -> m8_950  [key=0, style=solid];
m8_949 -> m8_274  [key=2, style=dotted];
m8_962 -> m8_961  [key=0, style=solid];
m8_962 -> m8_695  [key=2, style=dotted];
m8_964 -> m8_28  [key=2, style=dotted];
m8_964 -> m8_965  [key=0, style=solid];
m8_965 -> m8_28  [key=2, style=dotted];
m8_965 -> m8_966  [key=0, style=solid];
m8_966 -> m8_28  [key=2, style=dotted];
m8_966 -> m8_967  [key=0, style=solid];
m8_950 -> m8_31  [key=2, style=dotted];
m8_950 -> m8_33  [key=2, style=dotted];
m8_950 -> m8_34  [key=2, style=dotted];
m8_950 -> m8_36  [key=2, style=dotted];
m8_950 -> m8_951  [key=0, style=solid];
m8_950 -> m8_200  [key=2, style=dotted];
m8_951 -> m8_33  [key=2, style=dotted];
m8_951 -> m8_36  [key=2, style=dotted];
m8_951 -> m8_952  [key=0, style=solid];
m8_951 -> m8_537  [key=2, style=dotted];
m8_951 -> m8_200  [key=2, style=dotted];
m8_951 -> m8_538  [key=2, style=dotted];
m8_941 -> m8_942  [key=0, style=solid];
m8_941 -> m8_946  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_941 -> m8_532  [key=2, style=dotted];
m8_941 -> m8_947  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_952 -> m8_44  [key=2, style=dotted];
m8_952 -> m8_953  [key=0, style=solid];
m8_952 -> m8_258  [key=2, style=dotted];
m8_953 -> m8_954  [key=0, style=solid];
m8_953 -> m8_257  [key=2, style=dotted];
m8_954 -> m8_955  [key=0, style=solid];
m8_954 -> m8_205  [key=2, style=dotted];
m8_954 -> m8_540  [key=2, style=dotted];
m8_955 -> m8_962  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_955 -> m8_956  [key=0, style=solid];
m8_955 -> m8_957  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_955 -> m8_958  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_955 -> m8_959  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_955 -> m8_960  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_957 -> m8_958  [key=0, style=solid];
m8_963 -> m8_964  [key=0, style=solid];
m8_948 -> m8_949  [key=0, style=solid];
m8_948 -> m8_198  [key=2, style=dotted];
m8_956 -> m8_957  [key=0, style=solid];
m8_956 -> m8_541  [key=2, style=dotted];
m8_956 -> m8_542  [key=2, style=dotted];
m8_956 -> m8_968  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_956 -> m8_959  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_947 -> m8_948  [key=0, style=solid];
m8_947 -> m8_534  [key=2, style=dotted];
m8_947 -> m8_535  [key=2, style=dotted];
m8_947 -> m8_536  [key=2, style=dotted];
m8_960 -> m8_962  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m8_960 -> m8_961  [key=0, style=solid];
m8_961 -> m8_962  [key=0, style=solid];
m8_961 -> m8_963  [key=0, style=solid];
m8_958 -> m8_959  [key=0, style=solid];
m8_959 -> m8_960  [key=0, style=solid];
m8_959 -> m8_961  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_959 -> m8_543  [key=2, style=dotted];
m8_967 -> m8_940  [color=blue, key=0, style=bold];
m8_1095 -> m8_1096  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_46  [color=blue, key=0, style=bold];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_54  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_47 -> m8_45  [color=blue, key=0, style=bold];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_49  [key=2, style=dotted];
m8_47 -> m8_50  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_51  [key=2, style=dotted];
m8_50 -> m8_48  [color=blue, key=0, style=bold];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_51  [color=blue, key=0, style=bold];
m8_54 -> m8_52  [color=blue, key=0, style=bold];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_51  [key=2, style=dotted];
m8_56 -> m8_60  [color=darkseagreen4, key=1, label=fillsFile, style=dashed];
m8_57 -> m8_55  [color=blue, key=0, style=bold];
m8_57 -> m8_61  [color=darkseagreen4, key=1, label=equityFile, style=dashed];
m8_57 -> m8_58  [key=0, style=solid];
m8_51 -> m8_52  [key=0, style=solid];
m8_119 -> m8_120  [key=0, style=solid];
m8_122 -> m8_123  [key=0, style=solid];
m8_125 -> m8_126  [key=0, style=solid];
m8_128 -> m8_129  [key=0, style=solid];
m8_121 -> m8_119  [color=blue, key=0, style=bold];
m8_120 -> m8_49  [key=2, style=dotted];
m8_120 -> m8_50  [key=2, style=dotted];
m8_120 -> m8_121  [key=0, style=solid];
m8_124 -> m8_122  [color=blue, key=0, style=bold];
m8_123 -> m8_54  [key=2, style=dotted];
m8_123 -> m8_124  [key=0, style=solid];
m8_127 -> m8_125  [color=blue, key=0, style=bold];
m8_126 -> m8_54  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_130 -> m8_128  [color=blue, key=0, style=bold];
m8_129 -> m8_54  [key=2, style=dotted];
m8_129 -> m8_130  [key=0, style=solid];
m8_544 -> m8_545  [key=0, style=solid];
m8_574 -> m8_575  [key=0, style=solid];
m8_605 -> m8_606  [key=0, style=solid];
m8_634 -> m8_635  [key=0, style=solid];
m8_664 -> m8_665  [key=0, style=solid];
m8_696 -> m8_697  [key=0, style=solid];
m8_726 -> m8_727  [key=0, style=solid];
m8_756 -> m8_757  [key=0, style=solid];
m8_785 -> m8_786  [key=0, style=solid];
m8_814 -> m8_815  [key=0, style=solid];
m8_843 -> m8_844  [key=0, style=solid];
m8_937 -> m8_938  [key=0, style=solid];
m8_968 -> m8_969  [key=0, style=solid];
m8_999 -> m8_1000  [key=0, style=solid];
m8_1030 -> m8_1031  [key=0, style=solid];
m8_1061 -> m8_1062  [key=0, style=solid];
m8_546 -> m8_544  [color=blue, key=0, style=bold];
m8_545 -> m8_546  [key=0, style=solid];
m8_576 -> m8_574  [color=blue, key=0, style=bold];
m8_575 -> m8_576  [key=0, style=solid];
m8_607 -> m8_605  [color=blue, key=0, style=bold];
m8_606 -> m8_607  [key=0, style=solid];
m8_636 -> m8_634  [color=blue, key=0, style=bold];
m8_635 -> m8_636  [key=0, style=solid];
m8_666 -> m8_664  [color=blue, key=0, style=bold];
m8_665 -> m8_666  [key=0, style=solid];
m8_698 -> m8_696  [color=blue, key=0, style=bold];
m8_697 -> m8_698  [key=0, style=solid];
m8_728 -> m8_726  [color=blue, key=0, style=bold];
m8_727 -> m8_728  [key=0, style=solid];
m8_758 -> m8_756  [color=blue, key=0, style=bold];
m8_757 -> m8_758  [key=0, style=solid];
m8_787 -> m8_785  [color=blue, key=0, style=bold];
m8_786 -> m8_787  [key=0, style=solid];
m8_816 -> m8_814  [color=blue, key=0, style=bold];
m8_815 -> m8_816  [key=0, style=solid];
m8_845 -> m8_843  [color=blue, key=0, style=bold];
m8_844 -> m8_845  [key=0, style=solid];
m8_939 -> m8_937  [color=blue, key=0, style=bold];
m8_938 -> m8_939  [key=0, style=solid];
m8_970 -> m8_968  [color=blue, key=0, style=bold];
m8_969 -> m8_970  [key=0, style=solid];
m8_1001 -> m8_999  [color=blue, key=0, style=bold];
m8_1000 -> m8_1001  [key=0, style=solid];
m8_1032 -> m8_1030  [color=blue, key=0, style=bold];
m8_1031 -> m8_1032  [key=0, style=solid];
m8_1063 -> m8_1061  [color=blue, key=0, style=bold];
m8_1062 -> m8_1063  [key=0, style=solid];
m8_1096 -> m8_1097  [key=0, style=solid];
m8_1096 -> m8_1098  [key=2, style=dotted];
m8_1097 -> m8_1095  [color=blue, key=0, style=bold];
m8_329 -> m8_330  [key=0, style=solid];
m8_332 -> m8_38  [key=2, style=dotted];
m8_332 -> m8_333  [key=0, style=solid];
m8_332 -> m8_338  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_332 -> m8_339  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_330 -> m8_30  [key=2, style=dotted];
m8_330 -> m8_332  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_330 -> m8_331  [key=0, style=solid];
m8_330 -> m8_334  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_330 -> m8_335  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_330 -> m8_337  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_330 -> m8_340  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_331 -> m8_37  [key=2, style=dotted];
m8_331 -> m8_332  [key=0, style=solid];
m8_333 -> m8_334  [key=0, style=solid];
m8_333 -> m8_274  [key=2, style=dotted];
m8_338 -> m8_339  [key=0, style=solid];
m8_338 -> m8_209  [key=2, style=dotted];
m8_339 -> m8_28  [key=2, style=dotted];
m8_339 -> m8_340  [key=0, style=solid];
m8_337 -> m8_28  [key=2, style=dotted];
m8_337 -> m8_338  [key=0, style=solid];
m8_340 -> m8_28  [key=2, style=dotted];
m8_340 -> m8_341  [key=0, style=solid];
m8_334 -> m8_31  [key=2, style=dotted];
m8_334 -> m8_33  [key=2, style=dotted];
m8_334 -> m8_34  [key=2, style=dotted];
m8_334 -> m8_36  [key=2, style=dotted];
m8_334 -> m8_335  [key=0, style=solid];
m8_334 -> m8_200  [key=2, style=dotted];
m8_335 -> m8_336  [key=0, style=solid];
m8_335 -> m8_257  [key=2, style=dotted];
m8_336 -> m8_338  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_336 -> m8_337  [key=0, style=solid];
m8_336 -> m8_275  [key=2, style=dotted];
m8_341 -> m8_329  [color=blue, key=0, style=bold];
m8_608 -> m8_609  [key=0, style=solid];
m8_613 -> m8_38  [key=2, style=dotted];
m8_613 -> m8_614  [key=0, style=solid];
m8_613 -> m8_617  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_613 -> m8_627  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_613 -> m8_629  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_610 -> m8_30  [key=2, style=dotted];
m8_610 -> m8_613  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_610 -> m8_611  [key=0, style=solid];
m8_610 -> m8_614  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_610 -> m8_618  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_610 -> m8_619  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_610 -> m8_620  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_610 -> m8_621  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_610 -> m8_622  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_610 -> m8_624  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_610 -> m8_628  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_610 -> m8_632  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_611 -> m8_37  [key=2, style=dotted];
m8_611 -> m8_613  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_611 -> m8_612  [key=0, style=solid];
m8_611 -> m8_616  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_611 -> m8_621  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_611 -> m8_623  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_612 -> m8_613  [key=0, style=solid];
m8_612 -> m8_533  [key=2, style=dotted];
m8_612 -> m8_615  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_612 -> m8_616  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_614 -> m8_615  [key=0, style=solid];
m8_617 -> m8_618  [key=0, style=solid];
m8_617 -> m8_274  [key=2, style=dotted];
m8_627 -> m8_626  [key=0, style=solid];
m8_627 -> m8_209  [key=2, style=dotted];
m8_629 -> m8_28  [key=2, style=dotted];
m8_629 -> m8_630  [key=0, style=solid];
m8_632 -> m8_28  [key=2, style=dotted];
m8_632 -> m8_633  [key=0, style=solid];
m8_630 -> m8_28  [key=2, style=dotted];
m8_630 -> m8_631  [key=0, style=solid];
m8_631 -> m8_28  [key=2, style=dotted];
m8_631 -> m8_632  [key=0, style=solid];
m8_618 -> m8_31  [key=2, style=dotted];
m8_618 -> m8_33  [key=2, style=dotted];
m8_618 -> m8_34  [key=2, style=dotted];
m8_618 -> m8_36  [key=2, style=dotted];
m8_618 -> m8_619  [key=0, style=solid];
m8_618 -> m8_200  [key=2, style=dotted];
m8_619 -> m8_33  [key=2, style=dotted];
m8_619 -> m8_36  [key=2, style=dotted];
m8_619 -> m8_620  [key=0, style=solid];
m8_619 -> m8_537  [key=2, style=dotted];
m8_619 -> m8_200  [key=2, style=dotted];
m8_619 -> m8_538  [key=2, style=dotted];
m8_609 -> m8_610  [key=0, style=solid];
m8_609 -> m8_614  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_609 -> m8_532  [key=2, style=dotted];
m8_609 -> m8_615  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_620 -> m8_621  [key=0, style=solid];
m8_620 -> m8_257  [key=2, style=dotted];
m8_621 -> m8_622  [key=0, style=solid];
m8_621 -> m8_205  [key=2, style=dotted];
m8_621 -> m8_540  [key=2, style=dotted];
m8_622 -> m8_623  [key=0, style=solid];
m8_622 -> m8_624  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_622 -> m8_625  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_624 -> m8_625  [key=0, style=solid];
m8_628 -> m8_629  [key=0, style=solid];
m8_628 -> m8_630  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_628 -> m8_631  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_616 -> m8_617  [key=0, style=solid];
m8_616 -> m8_198  [key=2, style=dotted];
m8_623 -> m8_624  [key=0, style=solid];
m8_623 -> m8_541  [key=2, style=dotted];
m8_623 -> m8_542  [key=2, style=dotted];
m8_623 -> m8_634  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_623 -> m8_625  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_615 -> m8_616  [key=0, style=solid];
m8_615 -> m8_534  [key=2, style=dotted];
m8_615 -> m8_535  [key=2, style=dotted];
m8_615 -> m8_536  [key=2, style=dotted];
m8_626 -> m8_627  [key=0, style=solid];
m8_626 -> m8_628  [key=0, style=solid];
m8_625 -> m8_626  [key=0, style=solid];
m8_625 -> m8_543  [key=2, style=dotted];
m8_633 -> m8_608  [color=blue, key=0, style=bold];
m8_1106 -> m8_1108  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1106 -> m8_1107  [key=0, style=solid];
m8_1108 -> m8_1109  [key=0, style=solid];
m8_1108 -> m8_1090  [key=2, style=dotted];
m8_1107 -> m8_1108  [key=0, style=solid];
m8_1109 -> m8_1110  [key=0, style=solid];
m8_1110 -> m8_1106  [color=blue, key=0, style=bold];
m8_68 -> m8_38  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_70  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_68 -> m8_71  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_68 -> m8_72  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_68 -> m8_73  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_68 -> m8_74  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_68 -> m8_87  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_68 -> m8_102  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_68 -> m8_103  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_68 -> m8_104  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_68 -> m8_105  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_60 -> m8_24  [key=2, style=dotted];
m8_60 -> m8_25  [key=2, style=dotted];
m8_60 -> m8_26  [key=2, style=dotted];
m8_60 -> m8_27  [key=2, style=dotted];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_60 -> m8_64  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_60 -> m8_89  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_60 -> m8_90  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_60 -> m8_58  [color=blue, key=0, style=bold];
m8_61 -> m8_24  [key=2, style=dotted];
m8_61 -> m8_25  [key=2, style=dotted];
m8_61 -> m8_26  [key=2, style=dotted];
m8_61 -> m8_27  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_61 -> m8_64  [color=darkseagreen4, key=1, label=equity, style=dashed];
m8_61 -> m8_69  [color=darkseagreen4, key=1, label=equity, style=dashed];
m8_62 -> m8_24  [key=2, style=dotted];
m8_62 -> m8_25  [key=2, style=dotted];
m8_62 -> m8_26  [key=2, style=dotted];
m8_62 -> m8_27  [key=2, style=dotted];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_62 -> m8_70  [color=darkseagreen4, key=1, label=mchQuantity, style=dashed];
m8_62 -> m8_104  [color=darkseagreen4, key=1, label=mchQuantity, style=dashed];
m8_63 -> m8_24  [key=2, style=dotted];
m8_63 -> m8_25  [key=2, style=dotted];
m8_63 -> m8_26  [key=2, style=dotted];
m8_63 -> m8_27  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_63 -> m8_71  [color=darkseagreen4, key=1, label=jwbQuantity, style=dashed];
m8_63 -> m8_105  [color=darkseagreen4, key=1, label=jwbQuantity, style=dashed];
m8_63 -> m8_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_4  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_5  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_63 -> m8_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.OptionRenameRegressionAlgorithm", style=dashed];
m8_66 -> m8_30  [key=2, style=dotted];
m8_66 -> m8_68  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_84  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_66 -> m8_85  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_66 -> m8_86  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_66 -> m8_87  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_67 -> m8_37  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_69 -> m8_39  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_108  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_108  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_75  [color=darkseagreen4, key=1, label=jwbCash, style=dashed];
m8_72 -> m8_96  [color=darkseagreen4, key=1, label=jwbCash, style=dashed];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_79  [color=darkseagreen4, key=1, label=mchCash, style=dashed];
m8_73 -> m8_98  [color=darkseagreen4, key=1, label=mchCash, style=dashed];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_77  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m8_74 -> m8_97  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_112  [key=2, style=dotted];
m8_87 -> m8_113  [key=2, style=dotted];
m8_87 -> m8_114  [key=2, style=dotted];
m8_102 -> m8_45  [key=2, style=dotted];
m8_102 -> m8_103  [key=0, style=solid];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_117  [key=2, style=dotted];
m8_103 -> m8_118  [key=2, style=dotted];
m8_104 -> m8_28  [key=2, style=dotted];
m8_104 -> m8_105  [key=0, style=solid];
m8_105 -> m8_28  [key=2, style=dotted];
m8_105 -> m8_106  [key=0, style=solid];
m8_64 -> m8_28  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_95 -> m8_28  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_63  [color=darkseagreen4, key=1, label=jwbQuantityFile, style=dashed];
m8_59 -> m8_61  [key=2, style=dotted];
m8_59 -> m8_62  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_107  [key=0, style=solid];
m8_90 -> m8_102  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_90 -> m8_91  [key=0, style=solid];
m8_58 -> m8_62  [color=darkseagreen4, key=1, label=mchQuantityFile, style=dashed];
m8_58 -> m8_59  [key=0, style=solid];
m8_65 -> m8_29  [key=2, style=dotted];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_87  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_65 -> m8_75  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_65 -> m8_77  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_65 -> m8_79  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_75 -> m8_32  [key=2, style=dotted];
m8_75 -> m8_34  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_109  [key=2, style=dotted];
m8_75 -> m8_81  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m8_75 -> m8_84  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m8_75 -> m8_99  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m8_77 -> m8_32  [key=2, style=dotted];
m8_77 -> m8_34  [key=2, style=dotted];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_109  [key=2, style=dotted];
m8_77 -> m8_82  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m8_77 -> m8_86  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m8_77 -> m8_99  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m8_79 -> m8_32  [key=2, style=dotted];
m8_79 -> m8_34  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_109  [key=2, style=dotted];
m8_79 -> m8_83  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m8_79 -> m8_85  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m8_79 -> m8_99  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_111  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_111  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_111  [key=2, style=dotted];
m8_96 -> m8_43  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_115  [key=2, style=dotted];
m8_98 -> m8_43  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_115  [key=2, style=dotted];
m8_97 -> m8_43  [key=2, style=dotted];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_115  [key=2, style=dotted];
m8_88 -> m8_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_88 -> m8_104  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_88 -> m8_105  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_88 -> m8_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_88 -> m8_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_88 -> m8_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_88 -> m8_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_88 -> m8_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_100 -> m8_102  [key=0, style=solid];
m8_100 -> m8_101  [key=0, style=solid];
m8_106 -> m8_89  [key=0, style=solid];
m8_106 -> m8_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_99 -> m8_43  [key=2, style=dotted];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_116  [key=2, style=dotted];
m8_101 -> m8_44  [key=2, style=dotted];
m8_101 -> m8_100  [key=0, style=solid];
m8_101 -> m8_101  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m8_92 -> m8_95  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m8_92 -> m8_96  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m8_92 -> m8_99  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m8_92 -> m8_93  [key=0, style=solid];
m8_93 -> m8_95  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m8_93 -> m8_97  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m8_93 -> m8_99  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m8_93 -> m8_94  [key=0, style=solid];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_98  [color=darkseagreen4, key=1, label=usdJwb, style=dashed];
m8_94 -> m8_99  [color=darkseagreen4, key=1, label=usdJwb, style=dashed];
m8_91 -> m8_40  [key=2, style=dotted];
m8_91 -> m8_96  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_91 -> m8_98  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_91 -> m8_97  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_91 -> m8_99  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_91 -> m8_92  [key=0, style=solid];
m8_76 -> m8_35  [key=2, style=dotted];
m8_76 -> m8_77  [key=0, style=solid];
m8_78 -> m8_35  [key=2, style=dotted];
m8_78 -> m8_79  [key=0, style=solid];
m8_80 -> m8_35  [key=2, style=dotted];
m8_80 -> m8_81  [key=0, style=solid];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_110  [key=2, style=dotted];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_110  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_110  [key=2, style=dotted];
m8_107 -> m8_55  [color=blue, key=0, style=bold];
m8_817 -> m8_818  [key=0, style=solid];
m8_822 -> m8_38  [key=2, style=dotted];
m8_822 -> m8_823  [key=0, style=solid];
m8_822 -> m8_826  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_822 -> m8_838  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_822 -> m8_839  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_819 -> m8_30  [key=2, style=dotted];
m8_819 -> m8_822  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_819 -> m8_820  [key=0, style=solid];
m8_819 -> m8_823  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_819 -> m8_827  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_819 -> m8_828  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_819 -> m8_829  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_819 -> m8_830  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_819 -> m8_831  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_819 -> m8_832  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_819 -> m8_834  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_819 -> m8_840  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_819 -> m8_841  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_820 -> m8_37  [key=2, style=dotted];
m8_820 -> m8_822  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_820 -> m8_821  [key=0, style=solid];
m8_820 -> m8_825  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_820 -> m8_831  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_820 -> m8_833  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_821 -> m8_822  [key=0, style=solid];
m8_821 -> m8_533  [key=2, style=dotted];
m8_821 -> m8_824  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_821 -> m8_825  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_823 -> m8_824  [key=0, style=solid];
m8_826 -> m8_827  [key=0, style=solid];
m8_826 -> m8_274  [key=2, style=dotted];
m8_838 -> m8_837  [key=0, style=solid];
m8_838 -> m8_209  [key=2, style=dotted];
m8_839 -> m8_28  [key=2, style=dotted];
m8_839 -> m8_840  [key=0, style=solid];
m8_840 -> m8_28  [key=2, style=dotted];
m8_840 -> m8_841  [key=0, style=solid];
m8_841 -> m8_28  [key=2, style=dotted];
m8_841 -> m8_842  [key=0, style=solid];
m8_827 -> m8_31  [key=2, style=dotted];
m8_827 -> m8_33  [key=2, style=dotted];
m8_827 -> m8_34  [key=2, style=dotted];
m8_827 -> m8_36  [key=2, style=dotted];
m8_827 -> m8_828  [key=0, style=solid];
m8_827 -> m8_200  [key=2, style=dotted];
m8_828 -> m8_33  [key=2, style=dotted];
m8_828 -> m8_36  [key=2, style=dotted];
m8_828 -> m8_829  [key=0, style=solid];
m8_828 -> m8_537  [key=2, style=dotted];
m8_828 -> m8_200  [key=2, style=dotted];
m8_828 -> m8_538  [key=2, style=dotted];
m8_818 -> m8_819  [key=0, style=solid];
m8_818 -> m8_823  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_818 -> m8_532  [key=2, style=dotted];
m8_818 -> m8_824  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_829 -> m8_44  [key=2, style=dotted];
m8_829 -> m8_830  [key=0, style=solid];
m8_829 -> m8_258  [key=2, style=dotted];
m8_830 -> m8_831  [key=0, style=solid];
m8_830 -> m8_257  [key=2, style=dotted];
m8_831 -> m8_832  [key=0, style=solid];
m8_831 -> m8_205  [key=2, style=dotted];
m8_831 -> m8_540  [key=2, style=dotted];
m8_832 -> m8_833  [key=0, style=solid];
m8_832 -> m8_834  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_832 -> m8_835  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_832 -> m8_836  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_834 -> m8_835  [key=0, style=solid];
m8_825 -> m8_826  [key=0, style=solid];
m8_825 -> m8_198  [key=2, style=dotted];
m8_833 -> m8_834  [key=0, style=solid];
m8_833 -> m8_541  [key=2, style=dotted];
m8_833 -> m8_542  [key=2, style=dotted];
m8_833 -> m8_843  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_833 -> m8_836  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_824 -> m8_825  [key=0, style=solid];
m8_824 -> m8_534  [key=2, style=dotted];
m8_824 -> m8_535  [key=2, style=dotted];
m8_824 -> m8_536  [key=2, style=dotted];
m8_837 -> m8_838  [key=0, style=solid];
m8_837 -> m8_839  [key=0, style=solid];
m8_835 -> m8_836  [key=0, style=solid];
m8_836 -> m8_837  [key=0, style=solid];
m8_836 -> m8_543  [key=2, style=dotted];
m8_842 -> m8_817  [color=blue, key=0, style=bold];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_44  [key=2, style=dotted];
m8_361 -> m8_362  [key=0, style=solid];
m8_364 -> m8_38  [key=2, style=dotted];
m8_364 -> m8_365  [key=0, style=solid];
m8_364 -> m8_366  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_364 -> m8_367  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_364 -> m8_370  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_364 -> m8_373  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_364 -> m8_375  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_364 -> m8_376  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_364 -> m8_377  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_362 -> m8_30  [key=2, style=dotted];
m8_362 -> m8_364  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_362 -> m8_363  [key=0, style=solid];
m8_362 -> m8_367  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_362 -> m8_368  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_363 -> m8_37  [key=2, style=dotted];
m8_363 -> m8_364  [key=0, style=solid];
m8_365 -> m8_366  [key=0, style=solid];
m8_365 -> m8_274  [key=2, style=dotted];
m8_366 -> m8_367  [key=0, style=solid];
m8_366 -> m8_256  [key=2, style=dotted];
m8_367 -> m8_34  [key=2, style=dotted];
m8_367 -> m8_36  [key=2, style=dotted];
m8_367 -> m8_368  [key=0, style=solid];
m8_367 -> m8_379  [key=2, style=dotted];
m8_367 -> m8_200  [key=2, style=dotted];
m8_370 -> m8_28  [key=2, style=dotted];
m8_370 -> m8_371  [key=0, style=solid];
m8_373 -> m8_374  [key=0, style=solid];
m8_373 -> m8_209  [key=2, style=dotted];
m8_375 -> m8_28  [key=2, style=dotted];
m8_375 -> m8_376  [key=0, style=solid];
m8_376 -> m8_28  [key=2, style=dotted];
m8_376 -> m8_377  [key=0, style=solid];
m8_377 -> m8_28  [key=2, style=dotted];
m8_377 -> m8_378  [key=0, style=solid];
m8_369 -> m8_28  [key=2, style=dotted];
m8_369 -> m8_370  [key=0, style=solid];
m8_374 -> m8_28  [key=2, style=dotted];
m8_374 -> m8_375  [key=0, style=solid];
m8_368 -> m8_369  [key=0, style=solid];
m8_368 -> m8_374  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_368 -> m8_371  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_371 -> m8_372  [key=0, style=solid];
m8_371 -> m8_202  [key=2, style=dotted];
m8_371 -> m8_360  [key=2, style=dotted];
m8_372 -> m8_373  [key=0, style=solid];
m8_372 -> m8_275  [key=2, style=dotted];
m8_378 -> m8_361  [color=blue, key=0, style=bold];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_37  [key=0, style=solid];
m8_33 -> m8_38  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_1002 -> m8_1003  [key=0, style=solid];
m8_1007 -> m8_38  [key=2, style=dotted];
m8_1007 -> m8_1008  [key=0, style=solid];
m8_1007 -> m8_1011  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_1007 -> m8_1024  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_1007 -> m8_1026  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_1004 -> m8_30  [key=2, style=dotted];
m8_1004 -> m8_1007  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1004 -> m8_1005  [key=0, style=solid];
m8_1004 -> m8_1008  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1004 -> m8_1012  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1004 -> m8_1013  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1004 -> m8_1014  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1004 -> m8_1015  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1004 -> m8_1016  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1004 -> m8_1017  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1004 -> m8_1019  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1004 -> m8_1025  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1004 -> m8_1027  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1004 -> m8_1028  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1005 -> m8_37  [key=2, style=dotted];
m8_1005 -> m8_1007  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_1005 -> m8_1006  [key=0, style=solid];
m8_1005 -> m8_1010  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_1005 -> m8_1016  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_1005 -> m8_1018  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_1006 -> m8_1007  [key=0, style=solid];
m8_1006 -> m8_533  [key=2, style=dotted];
m8_1006 -> m8_1009  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_1006 -> m8_1010  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_1008 -> m8_1009  [key=0, style=solid];
m8_1011 -> m8_1012  [key=0, style=solid];
m8_1011 -> m8_274  [key=2, style=dotted];
m8_1024 -> m8_1023  [key=0, style=solid];
m8_1024 -> m8_695  [key=2, style=dotted];
m8_1026 -> m8_28  [key=2, style=dotted];
m8_1026 -> m8_1027  [key=0, style=solid];
m8_1027 -> m8_28  [key=2, style=dotted];
m8_1027 -> m8_1028  [key=0, style=solid];
m8_1028 -> m8_28  [key=2, style=dotted];
m8_1028 -> m8_1029  [key=0, style=solid];
m8_1012 -> m8_31  [key=2, style=dotted];
m8_1012 -> m8_33  [key=2, style=dotted];
m8_1012 -> m8_34  [key=2, style=dotted];
m8_1012 -> m8_36  [key=2, style=dotted];
m8_1012 -> m8_1013  [key=0, style=solid];
m8_1012 -> m8_200  [key=2, style=dotted];
m8_1013 -> m8_33  [key=2, style=dotted];
m8_1013 -> m8_36  [key=2, style=dotted];
m8_1013 -> m8_1014  [key=0, style=solid];
m8_1013 -> m8_537  [key=2, style=dotted];
m8_1013 -> m8_200  [key=2, style=dotted];
m8_1013 -> m8_538  [key=2, style=dotted];
m8_1003 -> m8_1004  [key=0, style=solid];
m8_1003 -> m8_1008  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_1003 -> m8_532  [key=2, style=dotted];
m8_1003 -> m8_1009  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_1014 -> m8_44  [key=2, style=dotted];
m8_1014 -> m8_1015  [key=0, style=solid];
m8_1014 -> m8_258  [key=2, style=dotted];
m8_1015 -> m8_1016  [key=0, style=solid];
m8_1015 -> m8_257  [key=2, style=dotted];
m8_1016 -> m8_1017  [key=0, style=solid];
m8_1016 -> m8_205  [key=2, style=dotted];
m8_1016 -> m8_540  [key=2, style=dotted];
m8_1017 -> m8_1024  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_1017 -> m8_1018  [key=0, style=solid];
m8_1017 -> m8_1019  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_1017 -> m8_1020  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_1017 -> m8_1021  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_1017 -> m8_1022  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_1019 -> m8_1020  [key=0, style=solid];
m8_1025 -> m8_1026  [key=0, style=solid];
m8_1010 -> m8_1011  [key=0, style=solid];
m8_1010 -> m8_198  [key=2, style=dotted];
m8_1018 -> m8_1019  [key=0, style=solid];
m8_1018 -> m8_541  [key=2, style=dotted];
m8_1018 -> m8_542  [key=2, style=dotted];
m8_1018 -> m8_1030  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1018 -> m8_1021  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_1009 -> m8_1010  [key=0, style=solid];
m8_1009 -> m8_534  [key=2, style=dotted];
m8_1009 -> m8_535  [key=2, style=dotted];
m8_1009 -> m8_536  [key=2, style=dotted];
m8_1022 -> m8_1024  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m8_1022 -> m8_1023  [key=0, style=solid];
m8_1023 -> m8_1024  [key=0, style=solid];
m8_1023 -> m8_1025  [key=0, style=solid];
m8_1020 -> m8_1021  [key=0, style=solid];
m8_1021 -> m8_1022  [key=0, style=solid];
m8_1021 -> m8_1023  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_1021 -> m8_543  [key=2, style=dotted];
m8_1029 -> m8_1002  [color=blue, key=0, style=bold];
m8_788 -> m8_789  [key=0, style=solid];
m8_793 -> m8_38  [key=2, style=dotted];
m8_793 -> m8_794  [key=0, style=solid];
m8_793 -> m8_797  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_793 -> m8_809  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_793 -> m8_810  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_790 -> m8_30  [key=2, style=dotted];
m8_790 -> m8_793  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_790 -> m8_791  [key=0, style=solid];
m8_790 -> m8_794  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_790 -> m8_798  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_790 -> m8_799  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_790 -> m8_800  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_790 -> m8_801  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_790 -> m8_802  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_790 -> m8_803  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_790 -> m8_805  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_790 -> m8_811  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_790 -> m8_812  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_791 -> m8_37  [key=2, style=dotted];
m8_791 -> m8_793  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_791 -> m8_792  [key=0, style=solid];
m8_791 -> m8_796  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_791 -> m8_802  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_791 -> m8_804  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_792 -> m8_793  [key=0, style=solid];
m8_792 -> m8_533  [key=2, style=dotted];
m8_792 -> m8_795  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_792 -> m8_796  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_794 -> m8_795  [key=0, style=solid];
m8_797 -> m8_798  [key=0, style=solid];
m8_797 -> m8_274  [key=2, style=dotted];
m8_809 -> m8_808  [key=0, style=solid];
m8_809 -> m8_209  [key=2, style=dotted];
m8_810 -> m8_28  [key=2, style=dotted];
m8_810 -> m8_811  [key=0, style=solid];
m8_811 -> m8_28  [key=2, style=dotted];
m8_811 -> m8_812  [key=0, style=solid];
m8_812 -> m8_28  [key=2, style=dotted];
m8_812 -> m8_813  [key=0, style=solid];
m8_798 -> m8_31  [key=2, style=dotted];
m8_798 -> m8_33  [key=2, style=dotted];
m8_798 -> m8_34  [key=2, style=dotted];
m8_798 -> m8_36  [key=2, style=dotted];
m8_798 -> m8_799  [key=0, style=solid];
m8_798 -> m8_200  [key=2, style=dotted];
m8_799 -> m8_33  [key=2, style=dotted];
m8_799 -> m8_36  [key=2, style=dotted];
m8_799 -> m8_800  [key=0, style=solid];
m8_799 -> m8_537  [key=2, style=dotted];
m8_799 -> m8_200  [key=2, style=dotted];
m8_799 -> m8_538  [key=2, style=dotted];
m8_789 -> m8_790  [key=0, style=solid];
m8_789 -> m8_794  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_789 -> m8_532  [key=2, style=dotted];
m8_789 -> m8_795  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_800 -> m8_44  [key=2, style=dotted];
m8_800 -> m8_801  [key=0, style=solid];
m8_800 -> m8_258  [key=2, style=dotted];
m8_801 -> m8_802  [key=0, style=solid];
m8_801 -> m8_257  [key=2, style=dotted];
m8_802 -> m8_803  [key=0, style=solid];
m8_802 -> m8_205  [key=2, style=dotted];
m8_802 -> m8_540  [key=2, style=dotted];
m8_803 -> m8_804  [key=0, style=solid];
m8_803 -> m8_805  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_803 -> m8_806  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_803 -> m8_807  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_805 -> m8_806  [key=0, style=solid];
m8_796 -> m8_797  [key=0, style=solid];
m8_796 -> m8_198  [key=2, style=dotted];
m8_804 -> m8_805  [key=0, style=solid];
m8_804 -> m8_541  [key=2, style=dotted];
m8_804 -> m8_542  [key=2, style=dotted];
m8_804 -> m8_814  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_804 -> m8_807  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_795 -> m8_796  [key=0, style=solid];
m8_795 -> m8_534  [key=2, style=dotted];
m8_795 -> m8_535  [key=2, style=dotted];
m8_795 -> m8_536  [key=2, style=dotted];
m8_808 -> m8_809  [key=0, style=solid];
m8_808 -> m8_810  [key=0, style=solid];
m8_806 -> m8_807  [key=0, style=solid];
m8_807 -> m8_808  [key=0, style=solid];
m8_807 -> m8_543  [key=2, style=dotted];
m8_813 -> m8_788  [color=blue, key=0, style=bold];
m8_911 -> m8_912  [key=0, style=solid];
m8_916 -> m8_38  [key=2, style=dotted];
m8_916 -> m8_917  [key=0, style=solid];
m8_916 -> m8_920  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_916 -> m8_932  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_916 -> m8_933  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_913 -> m8_30  [key=2, style=dotted];
m8_913 -> m8_916  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_913 -> m8_914  [key=0, style=solid];
m8_913 -> m8_917  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_913 -> m8_921  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_913 -> m8_922  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_913 -> m8_923  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_913 -> m8_924  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_913 -> m8_925  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_913 -> m8_926  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_913 -> m8_928  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_913 -> m8_934  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_913 -> m8_935  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_914 -> m8_37  [key=2, style=dotted];
m8_914 -> m8_916  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_914 -> m8_915  [key=0, style=solid];
m8_914 -> m8_919  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_914 -> m8_925  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_914 -> m8_927  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_915 -> m8_916  [key=0, style=solid];
m8_915 -> m8_533  [key=2, style=dotted];
m8_915 -> m8_918  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_915 -> m8_919  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_917 -> m8_918  [key=0, style=solid];
m8_920 -> m8_921  [key=0, style=solid];
m8_920 -> m8_274  [key=2, style=dotted];
m8_932 -> m8_931  [key=0, style=solid];
m8_932 -> m8_209  [key=2, style=dotted];
m8_933 -> m8_28  [key=2, style=dotted];
m8_933 -> m8_934  [key=0, style=solid];
m8_934 -> m8_28  [key=2, style=dotted];
m8_934 -> m8_935  [key=0, style=solid];
m8_935 -> m8_28  [key=2, style=dotted];
m8_935 -> m8_936  [key=0, style=solid];
m8_921 -> m8_31  [key=2, style=dotted];
m8_921 -> m8_33  [key=2, style=dotted];
m8_921 -> m8_34  [key=2, style=dotted];
m8_921 -> m8_36  [key=2, style=dotted];
m8_921 -> m8_922  [key=0, style=solid];
m8_921 -> m8_200  [key=2, style=dotted];
m8_922 -> m8_33  [key=2, style=dotted];
m8_922 -> m8_36  [key=2, style=dotted];
m8_922 -> m8_923  [key=0, style=solid];
m8_922 -> m8_537  [key=2, style=dotted];
m8_922 -> m8_200  [key=2, style=dotted];
m8_922 -> m8_538  [key=2, style=dotted];
m8_912 -> m8_913  [key=0, style=solid];
m8_912 -> m8_917  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_912 -> m8_532  [key=2, style=dotted];
m8_912 -> m8_918  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_923 -> m8_44  [key=2, style=dotted];
m8_923 -> m8_924  [key=0, style=solid];
m8_923 -> m8_258  [key=2, style=dotted];
m8_924 -> m8_925  [key=0, style=solid];
m8_924 -> m8_257  [key=2, style=dotted];
m8_925 -> m8_926  [key=0, style=solid];
m8_925 -> m8_205  [key=2, style=dotted];
m8_925 -> m8_540  [key=2, style=dotted];
m8_926 -> m8_927  [key=0, style=solid];
m8_926 -> m8_928  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_926 -> m8_929  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_926 -> m8_930  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_928 -> m8_929  [key=0, style=solid];
m8_919 -> m8_920  [key=0, style=solid];
m8_919 -> m8_198  [key=2, style=dotted];
m8_927 -> m8_928  [key=0, style=solid];
m8_927 -> m8_541  [key=2, style=dotted];
m8_927 -> m8_542  [key=2, style=dotted];
m8_927 -> m8_937  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_927 -> m8_930  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_918 -> m8_919  [key=0, style=solid];
m8_918 -> m8_534  [key=2, style=dotted];
m8_918 -> m8_535  [key=2, style=dotted];
m8_918 -> m8_536  [key=2, style=dotted];
m8_931 -> m8_932  [key=0, style=solid];
m8_931 -> m8_933  [key=0, style=solid];
m8_929 -> m8_930  [key=0, style=solid];
m8_930 -> m8_931  [key=0, style=solid];
m8_930 -> m8_543  [key=2, style=dotted];
m8_936 -> m8_911  [color=blue, key=0, style=bold];
m8_667 -> m8_668  [key=0, style=solid];
m8_672 -> m8_38  [key=2, style=dotted];
m8_672 -> m8_673  [key=0, style=solid];
m8_672 -> m8_676  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_672 -> m8_688  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_672 -> m8_690  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_669 -> m8_30  [key=2, style=dotted];
m8_669 -> m8_672  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_669 -> m8_670  [key=0, style=solid];
m8_669 -> m8_673  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_669 -> m8_677  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_669 -> m8_678  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_669 -> m8_679  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_669 -> m8_680  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_669 -> m8_681  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_669 -> m8_682  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_669 -> m8_684  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_669 -> m8_689  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_669 -> m8_693  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_670 -> m8_37  [key=2, style=dotted];
m8_670 -> m8_672  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_670 -> m8_671  [key=0, style=solid];
m8_670 -> m8_675  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_670 -> m8_681  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_670 -> m8_683  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_671 -> m8_672  [key=0, style=solid];
m8_671 -> m8_533  [key=2, style=dotted];
m8_671 -> m8_674  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_671 -> m8_675  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_673 -> m8_674  [key=0, style=solid];
m8_676 -> m8_677  [key=0, style=solid];
m8_676 -> m8_274  [key=2, style=dotted];
m8_688 -> m8_687  [key=0, style=solid];
m8_688 -> m8_695  [key=2, style=dotted];
m8_690 -> m8_28  [key=2, style=dotted];
m8_690 -> m8_691  [key=0, style=solid];
m8_693 -> m8_28  [key=2, style=dotted];
m8_693 -> m8_694  [key=0, style=solid];
m8_691 -> m8_28  [key=2, style=dotted];
m8_691 -> m8_692  [key=0, style=solid];
m8_692 -> m8_28  [key=2, style=dotted];
m8_692 -> m8_693  [key=0, style=solid];
m8_677 -> m8_31  [key=2, style=dotted];
m8_677 -> m8_33  [key=2, style=dotted];
m8_677 -> m8_34  [key=2, style=dotted];
m8_677 -> m8_36  [key=2, style=dotted];
m8_677 -> m8_678  [key=0, style=solid];
m8_677 -> m8_200  [key=2, style=dotted];
m8_678 -> m8_33  [key=2, style=dotted];
m8_678 -> m8_36  [key=2, style=dotted];
m8_678 -> m8_679  [key=0, style=solid];
m8_678 -> m8_537  [key=2, style=dotted];
m8_678 -> m8_200  [key=2, style=dotted];
m8_678 -> m8_538  [key=2, style=dotted];
m8_668 -> m8_669  [key=0, style=solid];
m8_668 -> m8_673  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_668 -> m8_532  [key=2, style=dotted];
m8_668 -> m8_674  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_679 -> m8_680  [key=0, style=solid];
m8_679 -> m8_257  [key=2, style=dotted];
m8_680 -> m8_44  [key=2, style=dotted];
m8_680 -> m8_681  [key=0, style=solid];
m8_680 -> m8_539  [key=2, style=dotted];
m8_681 -> m8_682  [key=0, style=solid];
m8_681 -> m8_205  [key=2, style=dotted];
m8_681 -> m8_540  [key=2, style=dotted];
m8_682 -> m8_688  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_682 -> m8_683  [key=0, style=solid];
m8_682 -> m8_684  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_682 -> m8_685  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_682 -> m8_686  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_684 -> m8_685  [key=0, style=solid];
m8_689 -> m8_690  [key=0, style=solid];
m8_689 -> m8_691  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_689 -> m8_692  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_675 -> m8_676  [key=0, style=solid];
m8_675 -> m8_198  [key=2, style=dotted];
m8_683 -> m8_684  [key=0, style=solid];
m8_683 -> m8_541  [key=2, style=dotted];
m8_683 -> m8_542  [key=2, style=dotted];
m8_683 -> m8_696  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_683 -> m8_685  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_674 -> m8_675  [key=0, style=solid];
m8_674 -> m8_534  [key=2, style=dotted];
m8_674 -> m8_535  [key=2, style=dotted];
m8_674 -> m8_536  [key=2, style=dotted];
m8_686 -> m8_688  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m8_686 -> m8_687  [key=0, style=solid];
m8_687 -> m8_688  [key=0, style=solid];
m8_687 -> m8_689  [key=0, style=solid];
m8_685 -> m8_686  [key=0, style=solid];
m8_685 -> m8_687  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_685 -> m8_543  [key=2, style=dotted];
m8_694 -> m8_667  [color=blue, key=0, style=bold];
m8_208 -> m8_1083  [key=0, style=solid];
m8_1083 -> m8_1084  [key=0, style=solid];
m8_1084 -> m8_208  [color=blue, key=0, style=bold];
m8_1091 -> m8_1092  [key=0, style=solid];
m8_1091 -> m8_1096  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_1092 -> m8_1093  [key=0, style=solid];
m8_1092 -> m8_1094  [key=2, style=dotted];
m8_1092 -> m8_1095  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1093 -> m8_1091  [color=blue, key=0, style=bold];
m8_577 -> m8_578  [key=0, style=solid];
m8_582 -> m8_38  [key=2, style=dotted];
m8_582 -> m8_583  [key=0, style=solid];
m8_582 -> m8_586  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_582 -> m8_598  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_582 -> m8_600  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_579 -> m8_30  [key=2, style=dotted];
m8_579 -> m8_582  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_579 -> m8_580  [key=0, style=solid];
m8_579 -> m8_583  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_579 -> m8_587  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_579 -> m8_588  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_579 -> m8_589  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_579 -> m8_590  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_579 -> m8_591  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_579 -> m8_592  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_579 -> m8_594  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_579 -> m8_599  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_579 -> m8_603  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_580 -> m8_37  [key=2, style=dotted];
m8_580 -> m8_582  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_580 -> m8_581  [key=0, style=solid];
m8_580 -> m8_585  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_580 -> m8_591  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_580 -> m8_593  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_581 -> m8_582  [key=0, style=solid];
m8_581 -> m8_533  [key=2, style=dotted];
m8_581 -> m8_584  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_581 -> m8_585  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_583 -> m8_584  [key=0, style=solid];
m8_586 -> m8_587  [key=0, style=solid];
m8_586 -> m8_274  [key=2, style=dotted];
m8_598 -> m8_597  [key=0, style=solid];
m8_598 -> m8_209  [key=2, style=dotted];
m8_600 -> m8_28  [key=2, style=dotted];
m8_600 -> m8_601  [key=0, style=solid];
m8_603 -> m8_28  [key=2, style=dotted];
m8_603 -> m8_604  [key=0, style=solid];
m8_601 -> m8_28  [key=2, style=dotted];
m8_601 -> m8_602  [key=0, style=solid];
m8_602 -> m8_28  [key=2, style=dotted];
m8_602 -> m8_603  [key=0, style=solid];
m8_587 -> m8_31  [key=2, style=dotted];
m8_587 -> m8_33  [key=2, style=dotted];
m8_587 -> m8_34  [key=2, style=dotted];
m8_587 -> m8_36  [key=2, style=dotted];
m8_587 -> m8_588  [key=0, style=solid];
m8_587 -> m8_200  [key=2, style=dotted];
m8_588 -> m8_33  [key=2, style=dotted];
m8_588 -> m8_36  [key=2, style=dotted];
m8_588 -> m8_589  [key=0, style=solid];
m8_588 -> m8_537  [key=2, style=dotted];
m8_588 -> m8_200  [key=2, style=dotted];
m8_588 -> m8_538  [key=2, style=dotted];
m8_578 -> m8_579  [key=0, style=solid];
m8_578 -> m8_583  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_578 -> m8_532  [key=2, style=dotted];
m8_578 -> m8_584  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_589 -> m8_590  [key=0, style=solid];
m8_589 -> m8_257  [key=2, style=dotted];
m8_590 -> m8_44  [key=2, style=dotted];
m8_590 -> m8_591  [key=0, style=solid];
m8_590 -> m8_539  [key=2, style=dotted];
m8_591 -> m8_592  [key=0, style=solid];
m8_591 -> m8_205  [key=2, style=dotted];
m8_591 -> m8_540  [key=2, style=dotted];
m8_592 -> m8_593  [key=0, style=solid];
m8_592 -> m8_594  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_592 -> m8_595  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_592 -> m8_596  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_594 -> m8_595  [key=0, style=solid];
m8_599 -> m8_600  [key=0, style=solid];
m8_599 -> m8_601  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_599 -> m8_602  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_585 -> m8_586  [key=0, style=solid];
m8_585 -> m8_198  [key=2, style=dotted];
m8_593 -> m8_594  [key=0, style=solid];
m8_593 -> m8_541  [key=2, style=dotted];
m8_593 -> m8_542  [key=2, style=dotted];
m8_593 -> m8_605  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_593 -> m8_596  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_584 -> m8_585  [key=0, style=solid];
m8_584 -> m8_534  [key=2, style=dotted];
m8_584 -> m8_535  [key=2, style=dotted];
m8_584 -> m8_536  [key=2, style=dotted];
m8_597 -> m8_598  [key=0, style=solid];
m8_597 -> m8_599  [key=0, style=solid];
m8_595 -> m8_596  [key=0, style=solid];
m8_596 -> m8_597  [key=0, style=solid];
m8_596 -> m8_543  [key=2, style=dotted];
m8_604 -> m8_577  [color=blue, key=0, style=bold];
m8_276 -> m8_277  [key=0, style=solid];
m8_279 -> m8_38  [key=2, style=dotted];
m8_279 -> m8_280  [key=0, style=solid];
m8_279 -> m8_283  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_279 -> m8_284  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_279 -> m8_287  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_279 -> m8_288  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_277 -> m8_30  [key=2, style=dotted];
m8_277 -> m8_279  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_277 -> m8_278  [key=0, style=solid];
m8_277 -> m8_281  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_277 -> m8_285  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_277 -> m8_289  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_278 -> m8_37  [key=2, style=dotted];
m8_278 -> m8_279  [key=0, style=solid];
m8_280 -> m8_281  [key=0, style=solid];
m8_280 -> m8_274  [key=2, style=dotted];
m8_283 -> m8_284  [key=0, style=solid];
m8_283 -> m8_209  [key=2, style=dotted];
m8_284 -> m8_28  [key=2, style=dotted];
m8_284 -> m8_285  [key=0, style=solid];
m8_287 -> m8_288  [key=0, style=solid];
m8_287 -> m8_209  [key=2, style=dotted];
m8_288 -> m8_28  [key=2, style=dotted];
m8_288 -> m8_289  [key=0, style=solid];
m8_285 -> m8_28  [key=2, style=dotted];
m8_285 -> m8_286  [key=0, style=solid];
m8_289 -> m8_28  [key=2, style=dotted];
m8_289 -> m8_290  [key=0, style=solid];
m8_281 -> m8_31  [key=2, style=dotted];
m8_281 -> m8_33  [key=2, style=dotted];
m8_281 -> m8_36  [key=2, style=dotted];
m8_281 -> m8_282  [key=0, style=solid];
m8_281 -> m8_200  [key=2, style=dotted];
m8_281 -> m8_291  [key=2, style=dotted];
m8_281 -> m8_292  [key=2, style=dotted];
m8_282 -> m8_283  [key=0, style=solid];
m8_282 -> m8_275  [key=2, style=dotted];
m8_286 -> m8_287  [key=0, style=solid];
m8_286 -> m8_275  [key=2, style=dotted];
m8_290 -> m8_276  [color=blue, key=0, style=bold];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_37  [key=0, style=solid];
m8_28 -> m8_23  [color=red, key=3, label="Parameter variable decimal leverage", style=bold];
m8_637 -> m8_638  [key=0, style=solid];
m8_642 -> m8_38  [key=2, style=dotted];
m8_642 -> m8_643  [key=0, style=solid];
m8_642 -> m8_646  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_642 -> m8_657  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_642 -> m8_659  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_639 -> m8_30  [key=2, style=dotted];
m8_639 -> m8_642  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_639 -> m8_640  [key=0, style=solid];
m8_639 -> m8_643  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_639 -> m8_647  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_639 -> m8_648  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_639 -> m8_649  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_639 -> m8_650  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_639 -> m8_651  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_639 -> m8_652  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_639 -> m8_654  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_639 -> m8_658  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_639 -> m8_662  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_640 -> m8_37  [key=2, style=dotted];
m8_640 -> m8_642  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_640 -> m8_641  [key=0, style=solid];
m8_640 -> m8_645  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_640 -> m8_651  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_640 -> m8_653  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_641 -> m8_642  [key=0, style=solid];
m8_641 -> m8_533  [key=2, style=dotted];
m8_641 -> m8_644  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_641 -> m8_645  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_643 -> m8_644  [key=0, style=solid];
m8_646 -> m8_647  [key=0, style=solid];
m8_646 -> m8_274  [key=2, style=dotted];
m8_657 -> m8_656  [key=0, style=solid];
m8_657 -> m8_209  [key=2, style=dotted];
m8_659 -> m8_28  [key=2, style=dotted];
m8_659 -> m8_660  [key=0, style=solid];
m8_662 -> m8_28  [key=2, style=dotted];
m8_662 -> m8_663  [key=0, style=solid];
m8_660 -> m8_28  [key=2, style=dotted];
m8_660 -> m8_661  [key=0, style=solid];
m8_661 -> m8_28  [key=2, style=dotted];
m8_661 -> m8_662  [key=0, style=solid];
m8_647 -> m8_31  [key=2, style=dotted];
m8_647 -> m8_33  [key=2, style=dotted];
m8_647 -> m8_34  [key=2, style=dotted];
m8_647 -> m8_36  [key=2, style=dotted];
m8_647 -> m8_648  [key=0, style=solid];
m8_647 -> m8_200  [key=2, style=dotted];
m8_648 -> m8_33  [key=2, style=dotted];
m8_648 -> m8_36  [key=2, style=dotted];
m8_648 -> m8_649  [key=0, style=solid];
m8_648 -> m8_537  [key=2, style=dotted];
m8_648 -> m8_200  [key=2, style=dotted];
m8_648 -> m8_538  [key=2, style=dotted];
m8_638 -> m8_639  [key=0, style=solid];
m8_638 -> m8_643  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_638 -> m8_532  [key=2, style=dotted];
m8_638 -> m8_644  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_649 -> m8_650  [key=0, style=solid];
m8_649 -> m8_257  [key=2, style=dotted];
m8_650 -> m8_44  [key=2, style=dotted];
m8_650 -> m8_651  [key=0, style=solid];
m8_650 -> m8_539  [key=2, style=dotted];
m8_651 -> m8_652  [key=0, style=solid];
m8_651 -> m8_205  [key=2, style=dotted];
m8_651 -> m8_540  [key=2, style=dotted];
m8_652 -> m8_653  [key=0, style=solid];
m8_652 -> m8_654  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_652 -> m8_655  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_654 -> m8_655  [key=0, style=solid];
m8_658 -> m8_659  [key=0, style=solid];
m8_658 -> m8_660  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_658 -> m8_661  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_645 -> m8_646  [key=0, style=solid];
m8_645 -> m8_198  [key=2, style=dotted];
m8_653 -> m8_654  [key=0, style=solid];
m8_653 -> m8_541  [key=2, style=dotted];
m8_653 -> m8_542  [key=2, style=dotted];
m8_653 -> m8_664  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_653 -> m8_655  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_644 -> m8_645  [key=0, style=solid];
m8_644 -> m8_534  [key=2, style=dotted];
m8_644 -> m8_535  [key=2, style=dotted];
m8_644 -> m8_536  [key=2, style=dotted];
m8_656 -> m8_657  [key=0, style=solid];
m8_656 -> m8_658  [key=0, style=solid];
m8_655 -> m8_656  [key=0, style=solid];
m8_655 -> m8_543  [key=2, style=dotted];
m8_663 -> m8_637  [color=blue, key=0, style=bold];
m8_1099 -> m8_1100  [key=0, style=solid];
m8_1100 -> m8_1101  [key=0, style=solid];
m8_1100 -> m8_1102  [key=2, style=dotted];
m8_1101 -> m8_1099  [color=blue, key=0, style=bold];
m8_759 -> m8_760  [key=0, style=solid];
m8_764 -> m8_38  [key=2, style=dotted];
m8_764 -> m8_765  [key=0, style=solid];
m8_764 -> m8_768  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_764 -> m8_780  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_764 -> m8_781  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_761 -> m8_30  [key=2, style=dotted];
m8_761 -> m8_764  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_761 -> m8_762  [key=0, style=solid];
m8_761 -> m8_765  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_761 -> m8_769  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_761 -> m8_770  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_761 -> m8_771  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_761 -> m8_772  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_761 -> m8_773  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_761 -> m8_774  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_761 -> m8_776  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_761 -> m8_782  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_761 -> m8_783  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_762 -> m8_37  [key=2, style=dotted];
m8_762 -> m8_764  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_762 -> m8_763  [key=0, style=solid];
m8_762 -> m8_767  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_762 -> m8_773  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_762 -> m8_775  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_763 -> m8_764  [key=0, style=solid];
m8_763 -> m8_533  [key=2, style=dotted];
m8_763 -> m8_766  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_763 -> m8_767  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_765 -> m8_766  [key=0, style=solid];
m8_768 -> m8_769  [key=0, style=solid];
m8_768 -> m8_274  [key=2, style=dotted];
m8_780 -> m8_779  [key=0, style=solid];
m8_780 -> m8_209  [key=2, style=dotted];
m8_781 -> m8_28  [key=2, style=dotted];
m8_781 -> m8_782  [key=0, style=solid];
m8_782 -> m8_28  [key=2, style=dotted];
m8_782 -> m8_783  [key=0, style=solid];
m8_783 -> m8_28  [key=2, style=dotted];
m8_783 -> m8_784  [key=0, style=solid];
m8_769 -> m8_31  [key=2, style=dotted];
m8_769 -> m8_33  [key=2, style=dotted];
m8_769 -> m8_34  [key=2, style=dotted];
m8_769 -> m8_36  [key=2, style=dotted];
m8_769 -> m8_770  [key=0, style=solid];
m8_769 -> m8_200  [key=2, style=dotted];
m8_770 -> m8_33  [key=2, style=dotted];
m8_770 -> m8_36  [key=2, style=dotted];
m8_770 -> m8_771  [key=0, style=solid];
m8_770 -> m8_537  [key=2, style=dotted];
m8_770 -> m8_200  [key=2, style=dotted];
m8_770 -> m8_538  [key=2, style=dotted];
m8_760 -> m8_761  [key=0, style=solid];
m8_760 -> m8_765  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_760 -> m8_532  [key=2, style=dotted];
m8_760 -> m8_766  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_771 -> m8_44  [key=2, style=dotted];
m8_771 -> m8_772  [key=0, style=solid];
m8_771 -> m8_258  [key=2, style=dotted];
m8_772 -> m8_773  [key=0, style=solid];
m8_772 -> m8_257  [key=2, style=dotted];
m8_773 -> m8_774  [key=0, style=solid];
m8_773 -> m8_205  [key=2, style=dotted];
m8_773 -> m8_540  [key=2, style=dotted];
m8_774 -> m8_775  [key=0, style=solid];
m8_774 -> m8_776  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_774 -> m8_777  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_774 -> m8_778  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_776 -> m8_777  [key=0, style=solid];
m8_767 -> m8_768  [key=0, style=solid];
m8_767 -> m8_198  [key=2, style=dotted];
m8_775 -> m8_776  [key=0, style=solid];
m8_775 -> m8_541  [key=2, style=dotted];
m8_775 -> m8_542  [key=2, style=dotted];
m8_775 -> m8_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_775 -> m8_778  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_766 -> m8_767  [key=0, style=solid];
m8_766 -> m8_534  [key=2, style=dotted];
m8_766 -> m8_535  [key=2, style=dotted];
m8_766 -> m8_536  [key=2, style=dotted];
m8_779 -> m8_780  [key=0, style=solid];
m8_779 -> m8_781  [key=0, style=solid];
m8_777 -> m8_778  [key=0, style=solid];
m8_778 -> m8_779  [key=0, style=solid];
m8_778 -> m8_543  [key=2, style=dotted];
m8_784 -> m8_759  [color=blue, key=0, style=bold];
m8_131 -> m8_132  [key=0, style=solid];
m8_138 -> m8_38  [key=2, style=dotted];
m8_138 -> m8_139  [key=0, style=solid];
m8_138 -> m8_153  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_154  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_155  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_156  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_157  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_159  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_164  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_165  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_166  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_168  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_173  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_174  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_175  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_177  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_183  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_189  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_190  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_191  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_138 -> m8_195  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_134 -> m8_30  [key=2, style=dotted];
m8_134 -> m8_138  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_141  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_134 -> m8_142  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_135 -> m8_37  [key=2, style=dotted];
m8_135 -> m8_138  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_137  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_135 -> m8_159  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_135 -> m8_168  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_198  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_199  [key=2, style=dotted];
m8_153 -> m8_28  [key=2, style=dotted];
m8_153 -> m8_154  [key=0, style=solid];
m8_154 -> m8_155  [key=0, style=solid];
m8_154 -> m8_209  [key=2, style=dotted];
m8_155 -> m8_28  [key=2, style=dotted];
m8_155 -> m8_156  [key=0, style=solid];
m8_156 -> m8_28  [key=2, style=dotted];
m8_156 -> m8_157  [key=0, style=solid];
m8_157 -> m8_28  [key=2, style=dotted];
m8_157 -> m8_158  [key=0, style=solid];
m8_159 -> m8_160  [key=0, style=solid];
m8_159 -> m8_211  [key=2, style=dotted];
m8_164 -> m8_28  [key=2, style=dotted];
m8_164 -> m8_165  [key=0, style=solid];
m8_165 -> m8_28  [key=2, style=dotted];
m8_165 -> m8_166  [key=0, style=solid];
m8_166 -> m8_28  [key=2, style=dotted];
m8_166 -> m8_167  [key=0, style=solid];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_211  [key=2, style=dotted];
m8_173 -> m8_28  [key=2, style=dotted];
m8_173 -> m8_174  [key=0, style=solid];
m8_174 -> m8_28  [key=2, style=dotted];
m8_174 -> m8_175  [key=0, style=solid];
m8_175 -> m8_28  [key=2, style=dotted];
m8_175 -> m8_176  [key=0, style=solid];
m8_177 -> m8_178  [key=0, style=solid];
m8_177 -> m8_214  [key=2, style=dotted];
m8_177 -> m8_179  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m8_183 -> m8_184  [key=0, style=solid];
m8_183 -> m8_214  [key=2, style=dotted];
m8_183 -> m8_185  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m8_189 -> m8_190  [key=0, style=solid];
m8_189 -> m8_209  [key=2, style=dotted];
m8_190 -> m8_28  [key=2, style=dotted];
m8_190 -> m8_191  [key=0, style=solid];
m8_191 -> m8_192  [key=0, style=solid];
m8_191 -> m8_214  [key=2, style=dotted];
m8_191 -> m8_193  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m8_191 -> m8_194  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m8_191 -> m8_195  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m8_195 -> m8_196  [key=0, style=solid];
m8_195 -> m8_216  [key=2, style=dotted];
m8_194 -> m8_28  [key=2, style=dotted];
m8_194 -> m8_195  [key=0, style=solid];
m8_179 -> m8_28  [key=2, style=dotted];
m8_179 -> m8_180  [key=0, style=solid];
m8_185 -> m8_28  [key=2, style=dotted];
m8_185 -> m8_186  [key=0, style=solid];
m8_141 -> m8_31  [key=2, style=dotted];
m8_141 -> m8_33  [key=2, style=dotted];
m8_141 -> m8_34  [key=2, style=dotted];
m8_141 -> m8_142  [key=0, style=solid];
m8_141 -> m8_111  [key=2, style=dotted];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_139  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_156  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_157  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_164  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_165  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_166  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_173  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_174  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_175  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_147  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_148  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_187  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_133 -> m8_188  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_142 -> m8_195  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_142 -> m8_194  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_142 -> m8_143  [key=0, style=solid];
m8_142 -> m8_146  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_142 -> m8_150  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_142 -> m8_163  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_142 -> m8_172  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_142 -> m8_180  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_142 -> m8_182  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_142 -> m8_186  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_136 -> m8_137  [key=0, style=solid];
m8_136 -> m8_197  [key=2, style=dotted];
m8_136 -> m8_149  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_136 -> m8_152  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_200  [key=2, style=dotted];
m8_148 -> m8_153  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_148 -> m8_154  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_203  [key=2, style=dotted];
m8_152 -> m8_153  [key=0, style=solid];
m8_152 -> m8_207  [key=2, style=dotted];
m8_152 -> m8_208  [key=2, style=dotted];
m8_158 -> m8_159  [key=0, style=solid];
m8_158 -> m8_202  [key=2, style=dotted];
m8_158 -> m8_210  [key=2, style=dotted];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_212  [key=2, style=dotted];
m8_163 -> m8_164  [key=0, style=solid];
m8_163 -> m8_44  [key=2, style=dotted];
m8_163 -> m8_201  [key=2, style=dotted];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_202  [key=2, style=dotted];
m8_167 -> m8_210  [key=2, style=dotted];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_213  [key=2, style=dotted];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_44  [key=2, style=dotted];
m8_172 -> m8_201  [key=2, style=dotted];
m8_176 -> m8_177  [key=0, style=solid];
m8_178 -> m8_179  [key=0, style=solid];
m8_178 -> m8_212  [key=2, style=dotted];
m8_182 -> m8_183  [key=0, style=solid];
m8_182 -> m8_44  [key=2, style=dotted];
m8_182 -> m8_201  [key=2, style=dotted];
m8_184 -> m8_185  [key=0, style=solid];
m8_184 -> m8_213  [key=2, style=dotted];
m8_188 -> m8_189  [key=0, style=solid];
m8_188 -> m8_203  [key=2, style=dotted];
m8_192 -> m8_193  [key=0, style=solid];
m8_192 -> m8_213  [key=2, style=dotted];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_215  [key=2, style=dotted];
m8_146 -> m8_44  [key=2, style=dotted];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_201  [key=2, style=dotted];
m8_186 -> m8_44  [key=2, style=dotted];
m8_186 -> m8_187  [key=0, style=solid];
m8_186 -> m8_201  [key=2, style=dotted];
m8_180 -> m8_35  [key=2, style=dotted];
m8_180 -> m8_181  [key=0, style=solid];
m8_161 -> m8_40  [key=2, style=dotted];
m8_161 -> m8_163  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_161 -> m8_167  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_161 -> m8_161  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_161 -> m8_162  [key=0, style=solid];
m8_161 -> m8_170  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_170 -> m8_40  [key=2, style=dotted];
m8_170 -> m8_172  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_170 -> m8_182  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_170 -> m8_186  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_170 -> m8_170  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_187  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_143 -> m8_35  [key=2, style=dotted];
m8_143 -> m8_144  [key=0, style=solid];
m8_132 -> m8_133  [key=0, style=solid];
m8_132 -> m8_180  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m8_132 -> m8_143  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m8_147 -> m8_148  [key=0, style=solid];
m8_147 -> m8_202  [key=2, style=dotted];
m8_147 -> m8_149  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_147 -> m8_150  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_187 -> m8_188  [key=0, style=solid];
m8_187 -> m8_202  [key=2, style=dotted];
m8_150 -> m8_152  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_150 -> m8_151  [key=0, style=solid];
m8_150 -> m8_205  [key=2, style=dotted];
m8_149 -> m8_150  [key=0, style=solid];
m8_149 -> m8_204  [key=2, style=dotted];
m8_145 -> m8_148  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_145 -> m8_158  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_145 -> m8_188  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_147  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_145 -> m8_187  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_145 -> m8_162  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_145 -> m8_171  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_151 -> m8_152  [key=0, style=solid];
m8_151 -> m8_206  [key=2, style=dotted];
m8_144 -> m8_158  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_144 -> m8_146  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_144 -> m8_161  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_144 -> m8_147  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_144 -> m8_145  [key=0, style=solid];
m8_162 -> m8_163  [key=0, style=solid];
m8_162 -> m8_167  [color=darkseagreen4, key=1, label=highPrice, style=dashed];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_186  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m8_171 -> m8_181  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m8_181 -> m8_182  [key=0, style=solid];
m8_196 -> m8_131  [color=blue, key=0, style=bold];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_39  [key=2, style=dotted];
m8_34 -> m8_40  [key=2, style=dotted];
m8_34 -> m8_41  [key=2, style=dotted];
m8_34 -> m8_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_34 -> m8_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_37  [key=0, style=solid];
m8_200 -> m8_1064  [key=0, style=solid];
m8_200 -> m8_1065  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_200 -> m8_1066  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m8_200 -> m8_1067  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_200 -> m8_1068  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m8_200 -> m8_1069  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_200 -> m8_1070  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m8_200 -> m8_1071  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_200 -> m8_1072  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m8_1064 -> m8_1065  [key=0, style=solid];
m8_1064 -> m8_1066  [key=0, style=solid];
m8_1065 -> m8_1073  [key=0, style=solid];
m8_1065 -> m8_1074  [key=2, style=dotted];
m8_1066 -> m8_1067  [key=0, style=solid];
m8_1066 -> m8_1068  [key=0, style=solid];
m8_1067 -> m8_1073  [key=0, style=solid];
m8_1067 -> m8_1074  [key=2, style=dotted];
m8_1068 -> m8_1069  [key=0, style=solid];
m8_1068 -> m8_1070  [key=0, style=solid];
m8_1069 -> m8_1073  [key=0, style=solid];
m8_1069 -> m8_1074  [key=2, style=dotted];
m8_1070 -> m8_1071  [key=0, style=solid];
m8_1070 -> m8_1072  [key=0, style=solid];
m8_1071 -> m8_1073  [key=0, style=solid];
m8_1071 -> m8_1074  [key=2, style=dotted];
m8_1072 -> m8_1073  [key=0, style=solid];
m8_1072 -> m8_1075  [key=2, style=dotted];
m8_1072 -> m8_1076  [key=2, style=dotted];
m8_1073 -> m8_200  [color=blue, key=0, style=bold];
m8_425 -> m8_426  [key=0, style=solid];
m8_433 -> m8_38  [key=2, style=dotted];
m8_433 -> m8_434  [key=0, style=solid];
m8_433 -> m8_448  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_433 -> m8_450  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_433 -> m8_453  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_433 -> m8_459  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_433 -> m8_462  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_429 -> m8_30  [key=2, style=dotted];
m8_429 -> m8_433  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_429 -> m8_430  [key=0, style=solid];
m8_429 -> m8_436  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_429 -> m8_437  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_430 -> m8_37  [key=2, style=dotted];
m8_430 -> m8_433  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_430 -> m8_431  [key=0, style=solid];
m8_430 -> m8_432  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_430 -> m8_450  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_430 -> m8_453  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_430 -> m8_459  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_430 -> m8_462  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_432 -> m8_433  [key=0, style=solid];
m8_432 -> m8_198  [key=2, style=dotted];
m8_434 -> m8_435  [key=0, style=solid];
m8_434 -> m8_199  [key=2, style=dotted];
m8_448 -> m8_449  [key=0, style=solid];
m8_448 -> m8_209  [key=2, style=dotted];
m8_450 -> m8_451  [key=0, style=solid];
m8_450 -> m8_211  [key=2, style=dotted];
m8_453 -> m8_454  [key=0, style=solid];
m8_453 -> m8_211  [key=2, style=dotted];
m8_459 -> m8_460  [key=0, style=solid];
m8_459 -> m8_211  [key=2, style=dotted];
m8_462 -> m8_463  [key=0, style=solid];
m8_462 -> m8_211  [key=2, style=dotted];
m8_436 -> m8_31  [key=2, style=dotted];
m8_436 -> m8_33  [key=2, style=dotted];
m8_436 -> m8_34  [key=2, style=dotted];
m8_436 -> m8_437  [key=0, style=solid];
m8_436 -> m8_111  [key=2, style=dotted];
m8_428 -> m8_429  [key=0, style=solid];
m8_428 -> m8_442  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_428 -> m8_443  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_428 -> m8_452  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_428 -> m8_458  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_428 -> m8_461  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_437 -> m8_438  [key=0, style=solid];
m8_437 -> m8_441  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_437 -> m8_445  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_437 -> m8_457  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_431 -> m8_432  [key=0, style=solid];
m8_431 -> m8_197  [key=2, style=dotted];
m8_431 -> m8_444  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_431 -> m8_447  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_427 -> m8_434  [color=darkseagreen4, key=1, label=amount, style=dashed];
m8_427 -> m8_428  [key=0, style=solid];
m8_435 -> m8_436  [key=0, style=solid];
m8_435 -> m8_200  [key=2, style=dotted];
m8_443 -> m8_448  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_443 -> m8_444  [key=0, style=solid];
m8_443 -> m8_203  [key=2, style=dotted];
m8_447 -> m8_448  [key=0, style=solid];
m8_447 -> m8_207  [key=2, style=dotted];
m8_447 -> m8_208  [key=2, style=dotted];
m8_449 -> m8_450  [key=0, style=solid];
m8_449 -> m8_202  [key=2, style=dotted];
m8_449 -> m8_210  [key=2, style=dotted];
m8_451 -> m8_452  [key=0, style=solid];
m8_451 -> m8_212  [key=2, style=dotted];
m8_452 -> m8_453  [key=0, style=solid];
m8_452 -> m8_202  [key=2, style=dotted];
m8_452 -> m8_210  [key=2, style=dotted];
m8_454 -> m8_455  [key=0, style=solid];
m8_454 -> m8_213  [key=2, style=dotted];
m8_458 -> m8_459  [key=0, style=solid];
m8_458 -> m8_202  [key=2, style=dotted];
m8_458 -> m8_210  [key=2, style=dotted];
m8_460 -> m8_461  [key=0, style=solid];
m8_460 -> m8_213  [key=2, style=dotted];
m8_461 -> m8_462  [key=0, style=solid];
m8_461 -> m8_202  [key=2, style=dotted];
m8_461 -> m8_210  [key=2, style=dotted];
m8_463 -> m8_464  [key=0, style=solid];
m8_463 -> m8_212  [key=2, style=dotted];
m8_441 -> m8_44  [key=2, style=dotted];
m8_441 -> m8_442  [key=0, style=solid];
m8_441 -> m8_201  [key=2, style=dotted];
m8_457 -> m8_44  [key=2, style=dotted];
m8_457 -> m8_458  [key=0, style=solid];
m8_457 -> m8_201  [key=2, style=dotted];
m8_455 -> m8_40  [key=2, style=dotted];
m8_455 -> m8_458  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_455 -> m8_461  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_455 -> m8_457  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_455 -> m8_455  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_455 -> m8_456  [key=0, style=solid];
m8_438 -> m8_35  [key=2, style=dotted];
m8_438 -> m8_439  [key=0, style=solid];
m8_426 -> m8_428  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m8_426 -> m8_427  [key=0, style=solid];
m8_426 -> m8_438  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m8_442 -> m8_443  [key=0, style=solid];
m8_442 -> m8_202  [key=2, style=dotted];
m8_442 -> m8_444  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_442 -> m8_445  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_445 -> m8_447  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_445 -> m8_446  [key=0, style=solid];
m8_445 -> m8_205  [key=2, style=dotted];
m8_444 -> m8_445  [key=0, style=solid];
m8_444 -> m8_204  [key=2, style=dotted];
m8_440 -> m8_443  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_440 -> m8_449  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_440 -> m8_452  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_440 -> m8_441  [key=0, style=solid];
m8_440 -> m8_442  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_440 -> m8_456  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m8_446 -> m8_447  [key=0, style=solid];
m8_446 -> m8_206  [key=2, style=dotted];
m8_439 -> m8_449  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_439 -> m8_452  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_439 -> m8_441  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_439 -> m8_455  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_439 -> m8_442  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_439 -> m8_440  [key=0, style=solid];
m8_456 -> m8_458  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m8_456 -> m8_461  [color=darkseagreen4, key=1, label=lowPrice, style=dashed];
m8_456 -> m8_457  [key=0, style=solid];
m8_464 -> m8_425  [color=blue, key=0, style=bold];
m8_538 -> m8_1077  [key=0, style=solid];
m8_1077 -> m8_113  [key=2, style=dotted];
m8_1077 -> m8_1078  [key=0, style=solid];
m8_1077 -> m8_1079  [key=2, style=dotted];
m8_1077 -> m8_1080  [key=2, style=dotted];
m8_1078 -> m8_538  [color=blue, key=0, style=bold];
m8_1033 -> m8_1034  [key=0, style=solid];
m8_1038 -> m8_38  [key=2, style=dotted];
m8_1038 -> m8_1039  [key=0, style=solid];
m8_1038 -> m8_1042  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_1038 -> m8_1055  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_1038 -> m8_1057  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_1035 -> m8_30  [key=2, style=dotted];
m8_1035 -> m8_1038  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1035 -> m8_1036  [key=0, style=solid];
m8_1035 -> m8_1039  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1035 -> m8_1043  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1035 -> m8_1044  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1035 -> m8_1045  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1035 -> m8_1046  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1035 -> m8_1047  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1035 -> m8_1048  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1035 -> m8_1050  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1035 -> m8_1056  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1035 -> m8_1058  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1035 -> m8_1059  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_1036 -> m8_37  [key=2, style=dotted];
m8_1036 -> m8_1038  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_1036 -> m8_1037  [key=0, style=solid];
m8_1036 -> m8_1041  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_1036 -> m8_1047  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_1036 -> m8_1049  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_1037 -> m8_1038  [key=0, style=solid];
m8_1037 -> m8_533  [key=2, style=dotted];
m8_1037 -> m8_1040  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_1037 -> m8_1041  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_1039 -> m8_1040  [key=0, style=solid];
m8_1042 -> m8_1043  [key=0, style=solid];
m8_1042 -> m8_274  [key=2, style=dotted];
m8_1055 -> m8_1054  [key=0, style=solid];
m8_1055 -> m8_695  [key=2, style=dotted];
m8_1057 -> m8_28  [key=2, style=dotted];
m8_1057 -> m8_1058  [key=0, style=solid];
m8_1058 -> m8_28  [key=2, style=dotted];
m8_1058 -> m8_1059  [key=0, style=solid];
m8_1059 -> m8_28  [key=2, style=dotted];
m8_1059 -> m8_1060  [key=0, style=solid];
m8_1043 -> m8_31  [key=2, style=dotted];
m8_1043 -> m8_33  [key=2, style=dotted];
m8_1043 -> m8_34  [key=2, style=dotted];
m8_1043 -> m8_36  [key=2, style=dotted];
m8_1043 -> m8_1044  [key=0, style=solid];
m8_1043 -> m8_200  [key=2, style=dotted];
m8_1044 -> m8_33  [key=2, style=dotted];
m8_1044 -> m8_36  [key=2, style=dotted];
m8_1044 -> m8_1045  [key=0, style=solid];
m8_1044 -> m8_537  [key=2, style=dotted];
m8_1044 -> m8_200  [key=2, style=dotted];
m8_1044 -> m8_538  [key=2, style=dotted];
m8_1034 -> m8_1035  [key=0, style=solid];
m8_1034 -> m8_1039  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_1034 -> m8_532  [key=2, style=dotted];
m8_1034 -> m8_1040  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_1045 -> m8_44  [key=2, style=dotted];
m8_1045 -> m8_1046  [key=0, style=solid];
m8_1045 -> m8_258  [key=2, style=dotted];
m8_1046 -> m8_1047  [key=0, style=solid];
m8_1046 -> m8_257  [key=2, style=dotted];
m8_1047 -> m8_1048  [key=0, style=solid];
m8_1047 -> m8_205  [key=2, style=dotted];
m8_1047 -> m8_540  [key=2, style=dotted];
m8_1048 -> m8_1055  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_1048 -> m8_1049  [key=0, style=solid];
m8_1048 -> m8_1050  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_1048 -> m8_1051  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_1048 -> m8_1052  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_1048 -> m8_1053  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_1050 -> m8_1051  [key=0, style=solid];
m8_1056 -> m8_1057  [key=0, style=solid];
m8_1041 -> m8_1042  [key=0, style=solid];
m8_1041 -> m8_198  [key=2, style=dotted];
m8_1049 -> m8_1050  [key=0, style=solid];
m8_1049 -> m8_541  [key=2, style=dotted];
m8_1049 -> m8_542  [key=2, style=dotted];
m8_1049 -> m8_1061  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1049 -> m8_1052  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_1040 -> m8_1041  [key=0, style=solid];
m8_1040 -> m8_534  [key=2, style=dotted];
m8_1040 -> m8_535  [key=2, style=dotted];
m8_1040 -> m8_536  [key=2, style=dotted];
m8_1053 -> m8_1055  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m8_1053 -> m8_1054  [key=0, style=solid];
m8_1054 -> m8_1055  [key=0, style=solid];
m8_1054 -> m8_1056  [key=0, style=solid];
m8_1051 -> m8_1052  [key=0, style=solid];
m8_1052 -> m8_1053  [key=0, style=solid];
m8_1052 -> m8_1054  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_1052 -> m8_543  [key=2, style=dotted];
m8_1060 -> m8_1033  [color=blue, key=0, style=bold];
m8_380 -> m8_381  [key=0, style=solid];
m8_384 -> m8_38  [key=2, style=dotted];
m8_384 -> m8_385  [key=0, style=solid];
m8_384 -> m8_390  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_391  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_395  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_397  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_398  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_402  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_404  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_405  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_407  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_408  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_409  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_413  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_414  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_384 -> m8_415  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_382 -> m8_30  [key=2, style=dotted];
m8_382 -> m8_384  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_382 -> m8_383  [key=0, style=solid];
m8_382 -> m8_386  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_382 -> m8_387  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_383 -> m8_37  [key=2, style=dotted];
m8_383 -> m8_384  [key=0, style=solid];
m8_385 -> m8_386  [key=0, style=solid];
m8_385 -> m8_274  [key=2, style=dotted];
m8_390 -> m8_28  [key=2, style=dotted];
m8_390 -> m8_391  [key=0, style=solid];
m8_391 -> m8_28  [key=2, style=dotted];
m8_391 -> m8_392  [key=0, style=solid];
m8_395 -> m8_396  [key=0, style=solid];
m8_395 -> m8_209  [key=2, style=dotted];
m8_397 -> m8_28  [key=2, style=dotted];
m8_397 -> m8_398  [key=0, style=solid];
m8_398 -> m8_28  [key=2, style=dotted];
m8_398 -> m8_399  [key=0, style=solid];
m8_402 -> m8_403  [key=0, style=solid];
m8_402 -> m8_209  [key=2, style=dotted];
m8_404 -> m8_28  [key=2, style=dotted];
m8_404 -> m8_405  [key=0, style=solid];
m8_405 -> m8_28  [key=2, style=dotted];
m8_405 -> m8_406  [key=0, style=solid];
m8_407 -> m8_408  [key=0, style=solid];
m8_407 -> m8_422  [key=2, style=dotted];
m8_408 -> m8_28  [key=2, style=dotted];
m8_408 -> m8_409  [key=0, style=solid];
m8_409 -> m8_28  [key=2, style=dotted];
m8_409 -> m8_410  [key=0, style=solid];
m8_413 -> m8_414  [key=0, style=solid];
m8_413 -> m8_422  [key=2, style=dotted];
m8_414 -> m8_28  [key=2, style=dotted];
m8_414 -> m8_415  [key=0, style=solid];
m8_415 -> m8_28  [key=2, style=dotted];
m8_415 -> m8_416  [key=0, style=solid];
m8_389 -> m8_28  [key=2, style=dotted];
m8_389 -> m8_390  [key=0, style=solid];
m8_396 -> m8_28  [key=2, style=dotted];
m8_396 -> m8_397  [key=0, style=solid];
m8_403 -> m8_28  [key=2, style=dotted];
m8_403 -> m8_404  [key=0, style=solid];
m8_386 -> m8_33  [key=2, style=dotted];
m8_386 -> m8_34  [key=2, style=dotted];
m8_386 -> m8_36  [key=2, style=dotted];
m8_386 -> m8_387  [key=0, style=solid];
m8_386 -> m8_418  [key=2, style=dotted];
m8_386 -> m8_200  [key=2, style=dotted];
m8_381 -> m8_382  [key=0, style=solid];
m8_381 -> m8_386  [color=darkseagreen4, key=1, label=securityExchangeHours, style=dashed];
m8_381 -> m8_417  [key=2, style=dotted];
m8_381 -> m8_410  [color=darkseagreen4, key=1, label=securityExchangeHours, style=dashed];
m8_381 -> m8_412  [color=darkseagreen4, key=1, label=securityExchangeHours, style=dashed];
m8_387 -> m8_389  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_387 -> m8_396  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_387 -> m8_403  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_387 -> m8_388  [key=0, style=solid];
m8_387 -> m8_393  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_387 -> m8_400  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_392 -> m8_393  [key=0, style=solid];
m8_392 -> m8_421  [key=2, style=dotted];
m8_392 -> m8_394  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m8_392 -> m8_399  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m8_394 -> m8_395  [key=0, style=solid];
m8_394 -> m8_275  [key=2, style=dotted];
m8_399 -> m8_40  [key=2, style=dotted];
m8_399 -> m8_399  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m8_399 -> m8_400  [key=0, style=solid];
m8_399 -> m8_401  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m8_399 -> m8_406  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m8_401 -> m8_402  [key=0, style=solid];
m8_401 -> m8_275  [key=2, style=dotted];
m8_406 -> m8_407  [key=0, style=solid];
m8_406 -> m8_40  [key=2, style=dotted];
m8_406 -> m8_406  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m8_406 -> m8_410  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m8_406 -> m8_412  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m8_410 -> m8_411  [key=0, style=solid];
m8_410 -> m8_423  [key=2, style=dotted];
m8_410 -> m8_412  [color=darkseagreen4, key=1, label=marketOpen, style=dashed];
m8_412 -> m8_413  [key=0, style=solid];
m8_412 -> m8_40  [key=2, style=dotted];
m8_412 -> m8_412  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m8_412 -> m8_424  [key=2, style=dotted];
m8_412 -> m8_41  [key=2, style=dotted];
m8_388 -> m8_389  [key=0, style=solid];
m8_388 -> m8_419  [key=2, style=dotted];
m8_388 -> m8_420  [key=2, style=dotted];
m8_393 -> m8_394  [key=0, style=solid];
m8_393 -> m8_202  [key=2, style=dotted];
m8_393 -> m8_360  [key=2, style=dotted];
m8_400 -> m8_401  [key=0, style=solid];
m8_400 -> m8_202  [key=2, style=dotted];
m8_400 -> m8_360  [key=2, style=dotted];
m8_411 -> m8_412  [key=0, style=solid];
m8_411 -> m8_213  [key=2, style=dotted];
m8_416 -> m8_380  [color=blue, key=0, style=bold];
m8_293 -> m8_294  [key=0, style=solid];
m8_296 -> m8_38  [key=2, style=dotted];
m8_296 -> m8_297  [key=0, style=solid];
m8_296 -> m8_300  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_296 -> m8_303  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_294 -> m8_30  [key=2, style=dotted];
m8_294 -> m8_296  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_294 -> m8_295  [key=0, style=solid];
m8_294 -> m8_298  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_294 -> m8_301  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_294 -> m8_304  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_295 -> m8_37  [key=2, style=dotted];
m8_295 -> m8_296  [key=0, style=solid];
m8_297 -> m8_298  [key=0, style=solid];
m8_297 -> m8_274  [key=2, style=dotted];
m8_300 -> m8_301  [key=0, style=solid];
m8_300 -> m8_209  [key=2, style=dotted];
m8_303 -> m8_304  [key=0, style=solid];
m8_303 -> m8_209  [key=2, style=dotted];
m8_301 -> m8_28  [key=2, style=dotted];
m8_301 -> m8_302  [key=0, style=solid];
m8_304 -> m8_28  [key=2, style=dotted];
m8_304 -> m8_305  [key=0, style=solid];
m8_298 -> m8_31  [key=2, style=dotted];
m8_298 -> m8_33  [key=2, style=dotted];
m8_298 -> m8_36  [key=2, style=dotted];
m8_298 -> m8_299  [key=0, style=solid];
m8_298 -> m8_200  [key=2, style=dotted];
m8_298 -> m8_291  [key=2, style=dotted];
m8_298 -> m8_292  [key=2, style=dotted];
m8_299 -> m8_300  [key=0, style=solid];
m8_299 -> m8_275  [key=2, style=dotted];
m8_302 -> m8_303  [key=0, style=solid];
m8_302 -> m8_275  [key=2, style=dotted];
m8_305 -> m8_293  [color=blue, key=0, style=bold];
m8_1111 -> m8_1112  [key=0, style=solid];
m8_1112 -> m8_1113  [key=0, style=solid];
m8_1112 -> m8_1102  [key=2, style=dotted];
m8_1113 -> m8_1111  [color=blue, key=0, style=bold];
m8_306 -> m8_307  [key=0, style=solid];
m8_309 -> m8_38  [key=2, style=dotted];
m8_309 -> m8_310  [key=0, style=solid];
m8_309 -> m8_313  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_309 -> m8_314  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_307 -> m8_30  [key=2, style=dotted];
m8_307 -> m8_309  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_307 -> m8_308  [key=0, style=solid];
m8_307 -> m8_311  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_307 -> m8_315  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_308 -> m8_37  [key=2, style=dotted];
m8_308 -> m8_309  [key=0, style=solid];
m8_310 -> m8_311  [key=0, style=solid];
m8_310 -> m8_274  [key=2, style=dotted];
m8_313 -> m8_314  [key=0, style=solid];
m8_313 -> m8_209  [key=2, style=dotted];
m8_314 -> m8_28  [key=2, style=dotted];
m8_314 -> m8_315  [key=0, style=solid];
m8_315 -> m8_28  [key=2, style=dotted];
m8_315 -> m8_316  [key=0, style=solid];
m8_311 -> m8_31  [key=2, style=dotted];
m8_311 -> m8_33  [key=2, style=dotted];
m8_311 -> m8_34  [key=2, style=dotted];
m8_311 -> m8_36  [key=2, style=dotted];
m8_311 -> m8_312  [key=0, style=solid];
m8_311 -> m8_200  [key=2, style=dotted];
m8_312 -> m8_313  [key=0, style=solid];
m8_312 -> m8_275  [key=2, style=dotted];
m8_316 -> m8_306  [color=blue, key=0, style=bold];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_37  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_42  [key=2, style=dotted];
m8_29 -> m8_37  [key=0, style=solid];
m8_29 -> m8_43  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_1085 -> m8_1087  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_1085 -> m8_1086  [key=0, style=solid];
m8_1087 -> m8_1088  [key=0, style=solid];
m8_1087 -> m8_1090  [key=2, style=dotted];
m8_1086 -> m8_1087  [key=0, style=solid];
m8_1088 -> m8_1089  [key=0, style=solid];
m8_1089 -> m8_1085  [color=blue, key=0, style=bold];
m8_204 -> m8_1081  [key=0, style=solid];
m8_1081 -> m8_1082  [key=0, style=solid];
m8_1082 -> m8_204  [color=blue, key=0, style=bold];
m8_547 -> m8_548  [key=0, style=solid];
m8_552 -> m8_38  [key=2, style=dotted];
m8_552 -> m8_553  [key=0, style=solid];
m8_552 -> m8_556  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_552 -> m8_567  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_552 -> m8_569  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_549 -> m8_30  [key=2, style=dotted];
m8_549 -> m8_552  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_549 -> m8_550  [key=0, style=solid];
m8_549 -> m8_553  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_549 -> m8_557  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_549 -> m8_558  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_549 -> m8_559  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_549 -> m8_560  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_549 -> m8_561  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_549 -> m8_562  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_549 -> m8_564  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_549 -> m8_568  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_549 -> m8_572  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_550 -> m8_37  [key=2, style=dotted];
m8_550 -> m8_552  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_550 -> m8_551  [key=0, style=solid];
m8_550 -> m8_555  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_550 -> m8_561  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_550 -> m8_563  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_551 -> m8_552  [key=0, style=solid];
m8_551 -> m8_533  [key=2, style=dotted];
m8_551 -> m8_554  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_551 -> m8_555  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_553 -> m8_554  [key=0, style=solid];
m8_556 -> m8_557  [key=0, style=solid];
m8_556 -> m8_274  [key=2, style=dotted];
m8_567 -> m8_566  [key=0, style=solid];
m8_567 -> m8_209  [key=2, style=dotted];
m8_569 -> m8_28  [key=2, style=dotted];
m8_569 -> m8_570  [key=0, style=solid];
m8_572 -> m8_28  [key=2, style=dotted];
m8_572 -> m8_573  [key=0, style=solid];
m8_570 -> m8_28  [key=2, style=dotted];
m8_570 -> m8_571  [key=0, style=solid];
m8_571 -> m8_28  [key=2, style=dotted];
m8_571 -> m8_572  [key=0, style=solid];
m8_557 -> m8_31  [key=2, style=dotted];
m8_557 -> m8_33  [key=2, style=dotted];
m8_557 -> m8_34  [key=2, style=dotted];
m8_557 -> m8_36  [key=2, style=dotted];
m8_557 -> m8_558  [key=0, style=solid];
m8_557 -> m8_200  [key=2, style=dotted];
m8_558 -> m8_33  [key=2, style=dotted];
m8_558 -> m8_36  [key=2, style=dotted];
m8_558 -> m8_559  [key=0, style=solid];
m8_558 -> m8_537  [key=2, style=dotted];
m8_558 -> m8_200  [key=2, style=dotted];
m8_558 -> m8_538  [key=2, style=dotted];
m8_548 -> m8_549  [key=0, style=solid];
m8_548 -> m8_553  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_548 -> m8_532  [key=2, style=dotted];
m8_548 -> m8_554  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_559 -> m8_560  [key=0, style=solid];
m8_559 -> m8_257  [key=2, style=dotted];
m8_560 -> m8_44  [key=2, style=dotted];
m8_560 -> m8_561  [key=0, style=solid];
m8_560 -> m8_539  [key=2, style=dotted];
m8_561 -> m8_562  [key=0, style=solid];
m8_561 -> m8_205  [key=2, style=dotted];
m8_561 -> m8_540  [key=2, style=dotted];
m8_562 -> m8_563  [key=0, style=solid];
m8_562 -> m8_564  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_562 -> m8_565  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_564 -> m8_565  [key=0, style=solid];
m8_568 -> m8_569  [key=0, style=solid];
m8_568 -> m8_570  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_568 -> m8_571  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_555 -> m8_556  [key=0, style=solid];
m8_555 -> m8_198  [key=2, style=dotted];
m8_563 -> m8_564  [key=0, style=solid];
m8_563 -> m8_541  [key=2, style=dotted];
m8_563 -> m8_542  [key=2, style=dotted];
m8_563 -> m8_574  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_563 -> m8_565  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_554 -> m8_555  [key=0, style=solid];
m8_554 -> m8_534  [key=2, style=dotted];
m8_554 -> m8_535  [key=2, style=dotted];
m8_554 -> m8_536  [key=2, style=dotted];
m8_566 -> m8_567  [key=0, style=solid];
m8_566 -> m8_568  [key=0, style=solid];
m8_565 -> m8_566  [key=0, style=solid];
m8_565 -> m8_543  [key=2, style=dotted];
m8_573 -> m8_547  [color=blue, key=0, style=bold];
m8_217 -> m8_218  [key=0, style=solid];
m8_222 -> m8_38  [key=2, style=dotted];
m8_222 -> m8_223  [key=0, style=solid];
m8_222 -> m8_224  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_222 -> m8_225  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_222 -> m8_226  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_222 -> m8_227  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_222 -> m8_228  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_222 -> m8_250  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_222 -> m8_253  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_218 -> m8_30  [key=2, style=dotted];
m8_218 -> m8_222  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_219  [key=0, style=solid];
m8_218 -> m8_231  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_232  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_233  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_234  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_236  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_237  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_238  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_239  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_241  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_242  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_243  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_218 -> m8_244  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_219 -> m8_37  [key=2, style=dotted];
m8_219 -> m8_222  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_219 -> m8_220  [key=0, style=solid];
m8_219 -> m8_221  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_219 -> m8_250  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_219 -> m8_253  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_221 -> m8_222  [key=0, style=solid];
m8_221 -> m8_198  [key=2, style=dotted];
m8_223 -> m8_224  [key=0, style=solid];
m8_223 -> m8_199  [key=2, style=dotted];
m8_224 -> m8_225  [key=0, style=solid];
m8_224 -> m8_256  [key=2, style=dotted];
m8_225 -> m8_226  [key=0, style=solid];
m8_225 -> m8_256  [key=2, style=dotted];
m8_226 -> m8_227  [key=0, style=solid];
m8_227 -> m8_228  [key=0, style=solid];
m8_227 -> m8_241  [color=darkseagreen4, key=1, label=gbpCash, style=dashed];
m8_228 -> m8_229  [key=0, style=solid];
m8_228 -> m8_236  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m8_250 -> m8_251  [key=0, style=solid];
m8_250 -> m8_211  [key=2, style=dotted];
m8_253 -> m8_254  [key=0, style=solid];
m8_253 -> m8_211  [key=2, style=dotted];
m8_231 -> m8_31  [key=2, style=dotted];
m8_231 -> m8_33  [key=2, style=dotted];
m8_231 -> m8_34  [key=2, style=dotted];
m8_231 -> m8_232  [key=0, style=solid];
m8_231 -> m8_111  [key=2, style=dotted];
m8_236 -> m8_34  [key=2, style=dotted];
m8_236 -> m8_237  [key=0, style=solid];
m8_236 -> m8_109  [key=2, style=dotted];
m8_236 -> m8_111  [key=2, style=dotted];
m8_241 -> m8_34  [key=2, style=dotted];
m8_241 -> m8_242  [key=0, style=solid];
m8_241 -> m8_109  [key=2, style=dotted];
m8_241 -> m8_111  [key=2, style=dotted];
m8_232 -> m8_35  [key=2, style=dotted];
m8_232 -> m8_233  [key=0, style=solid];
m8_233 -> m8_234  [key=0, style=solid];
m8_233 -> m8_257  [key=2, style=dotted];
m8_234 -> m8_44  [key=2, style=dotted];
m8_234 -> m8_235  [key=0, style=solid];
m8_234 -> m8_258  [key=2, style=dotted];
m8_237 -> m8_35  [key=2, style=dotted];
m8_237 -> m8_238  [key=0, style=solid];
m8_238 -> m8_239  [key=0, style=solid];
m8_238 -> m8_257  [key=2, style=dotted];
m8_239 -> m8_44  [key=2, style=dotted];
m8_239 -> m8_240  [key=0, style=solid];
m8_239 -> m8_258  [key=2, style=dotted];
m8_242 -> m8_35  [key=2, style=dotted];
m8_242 -> m8_243  [key=0, style=solid];
m8_243 -> m8_244  [key=0, style=solid];
m8_243 -> m8_257  [key=2, style=dotted];
m8_244 -> m8_44  [key=2, style=dotted];
m8_244 -> m8_245  [key=0, style=solid];
m8_244 -> m8_258  [key=2, style=dotted];
m8_220 -> m8_221  [key=0, style=solid];
m8_220 -> m8_197  [key=2, style=dotted];
m8_220 -> m8_246  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_220 -> m8_249  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_229 -> m8_234  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_229 -> m8_239  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_229 -> m8_244  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_229 -> m8_230  [key=0, style=solid];
m8_249 -> m8_250  [key=0, style=solid];
m8_249 -> m8_207  [key=2, style=dotted];
m8_249 -> m8_208  [key=2, style=dotted];
m8_245 -> m8_250  [color=darkseagreen4, key=1, label=acceptedOrder, style=dashed];
m8_245 -> m8_246  [key=0, style=solid];
m8_245 -> m8_202  [key=2, style=dotted];
m8_245 -> m8_247  [color=darkseagreen4, key=1, label=acceptedOrder, style=dashed];
m8_251 -> m8_252  [key=0, style=solid];
m8_251 -> m8_213  [key=2, style=dotted];
m8_252 -> m8_253  [key=0, style=solid];
m8_252 -> m8_202  [key=2, style=dotted];
m8_254 -> m8_255  [key=0, style=solid];
m8_254 -> m8_212  [key=2, style=dotted];
m8_230 -> m8_231  [key=0, style=solid];
m8_230 -> m8_200  [key=2, style=dotted];
m8_235 -> m8_236  [key=0, style=solid];
m8_235 -> m8_200  [key=2, style=dotted];
m8_240 -> m8_241  [key=0, style=solid];
m8_240 -> m8_200  [key=2, style=dotted];
m8_246 -> m8_247  [key=0, style=solid];
m8_246 -> m8_204  [key=2, style=dotted];
m8_247 -> m8_249  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_247 -> m8_205  [key=2, style=dotted];
m8_247 -> m8_248  [key=0, style=solid];
m8_248 -> m8_249  [key=0, style=solid];
m8_248 -> m8_206  [key=2, style=dotted];
m8_255 -> m8_217  [color=blue, key=0, style=bold];
m8_342 -> m8_343  [key=0, style=solid];
m8_345 -> m8_38  [key=2, style=dotted];
m8_345 -> m8_346  [key=0, style=solid];
m8_345 -> m8_347  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_345 -> m8_348  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_345 -> m8_351  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_345 -> m8_354  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_345 -> m8_356  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_345 -> m8_357  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_345 -> m8_358  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_343 -> m8_30  [key=2, style=dotted];
m8_343 -> m8_345  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_343 -> m8_344  [key=0, style=solid];
m8_343 -> m8_348  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_343 -> m8_349  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_344 -> m8_37  [key=2, style=dotted];
m8_344 -> m8_345  [key=0, style=solid];
m8_346 -> m8_347  [key=0, style=solid];
m8_346 -> m8_274  [key=2, style=dotted];
m8_347 -> m8_348  [key=0, style=solid];
m8_347 -> m8_256  [key=2, style=dotted];
m8_348 -> m8_34  [key=2, style=dotted];
m8_348 -> m8_36  [key=2, style=dotted];
m8_348 -> m8_349  [key=0, style=solid];
m8_348 -> m8_109  [key=2, style=dotted];
m8_348 -> m8_200  [key=2, style=dotted];
m8_351 -> m8_28  [key=2, style=dotted];
m8_351 -> m8_352  [key=0, style=solid];
m8_354 -> m8_355  [key=0, style=solid];
m8_354 -> m8_209  [key=2, style=dotted];
m8_356 -> m8_28  [key=2, style=dotted];
m8_356 -> m8_357  [key=0, style=solid];
m8_357 -> m8_28  [key=2, style=dotted];
m8_357 -> m8_358  [key=0, style=solid];
m8_358 -> m8_28  [key=2, style=dotted];
m8_358 -> m8_359  [key=0, style=solid];
m8_350 -> m8_28  [key=2, style=dotted];
m8_350 -> m8_351  [key=0, style=solid];
m8_355 -> m8_28  [key=2, style=dotted];
m8_355 -> m8_356  [key=0, style=solid];
m8_349 -> m8_350  [key=0, style=solid];
m8_349 -> m8_355  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_349 -> m8_352  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_352 -> m8_353  [key=0, style=solid];
m8_352 -> m8_202  [key=2, style=dotted];
m8_352 -> m8_360  [key=2, style=dotted];
m8_353 -> m8_354  [key=0, style=solid];
m8_353 -> m8_275  [key=2, style=dotted];
m8_359 -> m8_342  [color=blue, key=0, style=bold];
m8_879 -> m8_880  [key=0, style=solid];
m8_884 -> m8_38  [key=2, style=dotted];
m8_884 -> m8_885  [key=0, style=solid];
m8_884 -> m8_888  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_884 -> m8_900  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_884 -> m8_908  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_881 -> m8_30  [key=2, style=dotted];
m8_881 -> m8_884  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_881 -> m8_882  [key=0, style=solid];
m8_881 -> m8_886  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_881 -> m8_889  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_881 -> m8_890  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_881 -> m8_891  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_881 -> m8_892  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_881 -> m8_893  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_881 -> m8_894  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_881 -> m8_902  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_882 -> m8_37  [key=2, style=dotted];
m8_882 -> m8_884  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_882 -> m8_883  [key=0, style=solid];
m8_882 -> m8_887  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_882 -> m8_900  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_882 -> m8_908  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_883 -> m8_884  [key=0, style=solid];
m8_883 -> m8_197  [key=2, style=dotted];
m8_883 -> m8_887  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_883 -> m8_896  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_883 -> m8_899  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_883 -> m8_904  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_883 -> m8_907  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_885 -> m8_886  [key=0, style=solid];
m8_885 -> m8_895  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_885 -> m8_903  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_888 -> m8_889  [key=0, style=solid];
m8_888 -> m8_274  [key=2, style=dotted];
m8_900 -> m8_901  [key=0, style=solid];
m8_900 -> m8_211  [key=2, style=dotted];
m8_908 -> m8_909  [key=0, style=solid];
m8_908 -> m8_211  [key=2, style=dotted];
m8_889 -> m8_31  [key=2, style=dotted];
m8_889 -> m8_33  [key=2, style=dotted];
m8_889 -> m8_34  [key=2, style=dotted];
m8_889 -> m8_36  [key=2, style=dotted];
m8_889 -> m8_890  [key=0, style=solid];
m8_889 -> m8_200  [key=2, style=dotted];
m8_890 -> m8_33  [key=2, style=dotted];
m8_890 -> m8_36  [key=2, style=dotted];
m8_890 -> m8_891  [key=0, style=solid];
m8_890 -> m8_537  [key=2, style=dotted];
m8_890 -> m8_200  [key=2, style=dotted];
m8_890 -> m8_538  [key=2, style=dotted];
m8_880 -> m8_881  [key=0, style=solid];
m8_880 -> m8_532  [key=2, style=dotted];
m8_880 -> m8_886  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_886 -> m8_887  [key=0, style=solid];
m8_891 -> m8_44  [key=2, style=dotted];
m8_891 -> m8_892  [key=0, style=solid];
m8_891 -> m8_258  [key=2, style=dotted];
m8_892 -> m8_893  [key=0, style=solid];
m8_892 -> m8_257  [key=2, style=dotted];
m8_893 -> m8_894  [key=0, style=solid];
m8_893 -> m8_897  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_893 -> m8_905  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_894 -> m8_895  [key=0, style=solid];
m8_902 -> m8_44  [key=2, style=dotted];
m8_902 -> m8_903  [key=0, style=solid];
m8_902 -> m8_258  [key=2, style=dotted];
m8_887 -> m8_888  [key=0, style=solid];
m8_887 -> m8_198  [key=2, style=dotted];
m8_896 -> m8_897  [key=0, style=solid];
m8_896 -> m8_204  [key=2, style=dotted];
m8_899 -> m8_900  [key=0, style=solid];
m8_899 -> m8_207  [key=2, style=dotted];
m8_899 -> m8_208  [key=2, style=dotted];
m8_904 -> m8_905  [key=0, style=solid];
m8_904 -> m8_204  [key=2, style=dotted];
m8_907 -> m8_908  [key=0, style=solid];
m8_907 -> m8_207  [key=2, style=dotted];
m8_907 -> m8_208  [key=2, style=dotted];
m8_895 -> m8_900  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_895 -> m8_896  [key=0, style=solid];
m8_895 -> m8_878  [key=2, style=dotted];
m8_895 -> m8_210  [key=2, style=dotted];
m8_895 -> m8_897  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_903 -> m8_908  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_903 -> m8_904  [key=0, style=solid];
m8_903 -> m8_878  [key=2, style=dotted];
m8_903 -> m8_210  [key=2, style=dotted];
m8_903 -> m8_905  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_901 -> m8_902  [key=0, style=solid];
m8_901 -> m8_212  [key=2, style=dotted];
m8_909 -> m8_910  [key=0, style=solid];
m8_909 -> m8_213  [key=2, style=dotted];
m8_897 -> m8_899  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_897 -> m8_205  [key=2, style=dotted];
m8_897 -> m8_898  [key=0, style=solid];
m8_905 -> m8_907  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_905 -> m8_205  [key=2, style=dotted];
m8_905 -> m8_906  [key=0, style=solid];
m8_898 -> m8_899  [key=0, style=solid];
m8_898 -> m8_206  [key=2, style=dotted];
m8_906 -> m8_907  [key=0, style=solid];
m8_906 -> m8_206  [key=2, style=dotted];
m8_910 -> m8_879  [color=blue, key=0, style=bold];
m8_846 -> m8_847  [key=0, style=solid];
m8_851 -> m8_38  [key=2, style=dotted];
m8_851 -> m8_852  [key=0, style=solid];
m8_851 -> m8_855  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_851 -> m8_867  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_851 -> m8_875  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_848 -> m8_30  [key=2, style=dotted];
m8_848 -> m8_851  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_848 -> m8_849  [key=0, style=solid];
m8_848 -> m8_853  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_848 -> m8_856  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_848 -> m8_857  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_848 -> m8_858  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_848 -> m8_859  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_848 -> m8_860  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_848 -> m8_861  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_848 -> m8_869  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_849 -> m8_37  [key=2, style=dotted];
m8_849 -> m8_851  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_849 -> m8_850  [key=0, style=solid];
m8_849 -> m8_854  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_849 -> m8_867  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_849 -> m8_875  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_850 -> m8_851  [key=0, style=solid];
m8_850 -> m8_197  [key=2, style=dotted];
m8_850 -> m8_854  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_850 -> m8_863  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_850 -> m8_866  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_850 -> m8_871  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_850 -> m8_874  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m8_852 -> m8_853  [key=0, style=solid];
m8_852 -> m8_862  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_852 -> m8_870  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_855 -> m8_856  [key=0, style=solid];
m8_855 -> m8_274  [key=2, style=dotted];
m8_867 -> m8_868  [key=0, style=solid];
m8_867 -> m8_211  [key=2, style=dotted];
m8_875 -> m8_876  [key=0, style=solid];
m8_875 -> m8_211  [key=2, style=dotted];
m8_856 -> m8_31  [key=2, style=dotted];
m8_856 -> m8_33  [key=2, style=dotted];
m8_856 -> m8_34  [key=2, style=dotted];
m8_856 -> m8_36  [key=2, style=dotted];
m8_856 -> m8_857  [key=0, style=solid];
m8_856 -> m8_200  [key=2, style=dotted];
m8_857 -> m8_33  [key=2, style=dotted];
m8_857 -> m8_36  [key=2, style=dotted];
m8_857 -> m8_858  [key=0, style=solid];
m8_857 -> m8_537  [key=2, style=dotted];
m8_857 -> m8_200  [key=2, style=dotted];
m8_857 -> m8_538  [key=2, style=dotted];
m8_847 -> m8_848  [key=0, style=solid];
m8_847 -> m8_532  [key=2, style=dotted];
m8_847 -> m8_853  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_853 -> m8_854  [key=0, style=solid];
m8_858 -> m8_44  [key=2, style=dotted];
m8_858 -> m8_859  [key=0, style=solid];
m8_858 -> m8_258  [key=2, style=dotted];
m8_859 -> m8_860  [key=0, style=solid];
m8_859 -> m8_257  [key=2, style=dotted];
m8_860 -> m8_861  [key=0, style=solid];
m8_860 -> m8_864  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_860 -> m8_872  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_861 -> m8_862  [key=0, style=solid];
m8_869 -> m8_44  [key=2, style=dotted];
m8_869 -> m8_870  [key=0, style=solid];
m8_869 -> m8_258  [key=2, style=dotted];
m8_854 -> m8_855  [key=0, style=solid];
m8_854 -> m8_198  [key=2, style=dotted];
m8_863 -> m8_864  [key=0, style=solid];
m8_863 -> m8_204  [key=2, style=dotted];
m8_866 -> m8_867  [key=0, style=solid];
m8_866 -> m8_207  [key=2, style=dotted];
m8_866 -> m8_208  [key=2, style=dotted];
m8_871 -> m8_872  [key=0, style=solid];
m8_871 -> m8_204  [key=2, style=dotted];
m8_874 -> m8_875  [key=0, style=solid];
m8_874 -> m8_207  [key=2, style=dotted];
m8_874 -> m8_208  [key=2, style=dotted];
m8_862 -> m8_867  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_862 -> m8_863  [key=0, style=solid];
m8_862 -> m8_878  [key=2, style=dotted];
m8_862 -> m8_210  [key=2, style=dotted];
m8_862 -> m8_864  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_870 -> m8_875  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_870 -> m8_871  [key=0, style=solid];
m8_870 -> m8_878  [key=2, style=dotted];
m8_870 -> m8_210  [key=2, style=dotted];
m8_870 -> m8_872  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_868 -> m8_869  [key=0, style=solid];
m8_868 -> m8_212  [key=2, style=dotted];
m8_876 -> m8_877  [key=0, style=solid];
m8_876 -> m8_213  [key=2, style=dotted];
m8_864 -> m8_866  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_864 -> m8_205  [key=2, style=dotted];
m8_864 -> m8_865  [key=0, style=solid];
m8_872 -> m8_874  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_872 -> m8_205  [key=2, style=dotted];
m8_872 -> m8_873  [key=0, style=solid];
m8_865 -> m8_866  [key=0, style=solid];
m8_865 -> m8_206  [key=2, style=dotted];
m8_873 -> m8_874  [key=0, style=solid];
m8_873 -> m8_206  [key=2, style=dotted];
m8_877 -> m8_846  [color=blue, key=0, style=bold];
m8_971 -> m8_972  [key=0, style=solid];
m8_976 -> m8_38  [key=2, style=dotted];
m8_976 -> m8_977  [key=0, style=solid];
m8_976 -> m8_980  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_976 -> m8_993  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_976 -> m8_995  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_973 -> m8_30  [key=2, style=dotted];
m8_973 -> m8_976  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_973 -> m8_974  [key=0, style=solid];
m8_973 -> m8_977  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_973 -> m8_981  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_973 -> m8_982  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_973 -> m8_983  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_973 -> m8_984  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_973 -> m8_985  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_973 -> m8_986  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_973 -> m8_988  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_973 -> m8_994  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_973 -> m8_996  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_973 -> m8_997  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_974 -> m8_37  [key=2, style=dotted];
m8_974 -> m8_976  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_974 -> m8_975  [key=0, style=solid];
m8_974 -> m8_979  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_974 -> m8_985  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_974 -> m8_987  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_975 -> m8_976  [key=0, style=solid];
m8_975 -> m8_533  [key=2, style=dotted];
m8_975 -> m8_978  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_975 -> m8_979  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_977 -> m8_978  [key=0, style=solid];
m8_980 -> m8_981  [key=0, style=solid];
m8_980 -> m8_274  [key=2, style=dotted];
m8_993 -> m8_992  [key=0, style=solid];
m8_993 -> m8_695  [key=2, style=dotted];
m8_995 -> m8_28  [key=2, style=dotted];
m8_995 -> m8_996  [key=0, style=solid];
m8_996 -> m8_28  [key=2, style=dotted];
m8_996 -> m8_997  [key=0, style=solid];
m8_997 -> m8_28  [key=2, style=dotted];
m8_997 -> m8_998  [key=0, style=solid];
m8_981 -> m8_31  [key=2, style=dotted];
m8_981 -> m8_33  [key=2, style=dotted];
m8_981 -> m8_34  [key=2, style=dotted];
m8_981 -> m8_36  [key=2, style=dotted];
m8_981 -> m8_982  [key=0, style=solid];
m8_981 -> m8_200  [key=2, style=dotted];
m8_982 -> m8_33  [key=2, style=dotted];
m8_982 -> m8_36  [key=2, style=dotted];
m8_982 -> m8_983  [key=0, style=solid];
m8_982 -> m8_537  [key=2, style=dotted];
m8_982 -> m8_200  [key=2, style=dotted];
m8_982 -> m8_538  [key=2, style=dotted];
m8_972 -> m8_973  [key=0, style=solid];
m8_972 -> m8_977  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_972 -> m8_532  [key=2, style=dotted];
m8_972 -> m8_978  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_983 -> m8_44  [key=2, style=dotted];
m8_983 -> m8_984  [key=0, style=solid];
m8_983 -> m8_258  [key=2, style=dotted];
m8_984 -> m8_985  [key=0, style=solid];
m8_984 -> m8_257  [key=2, style=dotted];
m8_985 -> m8_986  [key=0, style=solid];
m8_985 -> m8_205  [key=2, style=dotted];
m8_985 -> m8_540  [key=2, style=dotted];
m8_986 -> m8_993  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_986 -> m8_987  [key=0, style=solid];
m8_986 -> m8_988  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_986 -> m8_989  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_986 -> m8_990  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_986 -> m8_991  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_988 -> m8_989  [key=0, style=solid];
m8_994 -> m8_995  [key=0, style=solid];
m8_979 -> m8_980  [key=0, style=solid];
m8_979 -> m8_198  [key=2, style=dotted];
m8_987 -> m8_988  [key=0, style=solid];
m8_987 -> m8_541  [key=2, style=dotted];
m8_987 -> m8_542  [key=2, style=dotted];
m8_987 -> m8_999  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_987 -> m8_990  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_978 -> m8_979  [key=0, style=solid];
m8_978 -> m8_534  [key=2, style=dotted];
m8_978 -> m8_535  [key=2, style=dotted];
m8_978 -> m8_536  [key=2, style=dotted];
m8_991 -> m8_993  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m8_991 -> m8_992  [key=0, style=solid];
m8_992 -> m8_993  [key=0, style=solid];
m8_992 -> m8_994  [key=0, style=solid];
m8_989 -> m8_990  [key=0, style=solid];
m8_990 -> m8_991  [key=0, style=solid];
m8_990 -> m8_992  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_990 -> m8_543  [key=2, style=dotted];
m8_998 -> m8_971  [color=blue, key=0, style=bold];
m8_729 -> m8_730  [key=0, style=solid];
m8_734 -> m8_38  [key=2, style=dotted];
m8_734 -> m8_735  [key=0, style=solid];
m8_734 -> m8_738  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_734 -> m8_749  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_734 -> m8_751  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m8_731 -> m8_30  [key=2, style=dotted];
m8_731 -> m8_734  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_731 -> m8_732  [key=0, style=solid];
m8_731 -> m8_735  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_731 -> m8_739  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_731 -> m8_740  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_731 -> m8_741  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_731 -> m8_742  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_731 -> m8_743  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_731 -> m8_745  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_731 -> m8_750  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_731 -> m8_754  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_732 -> m8_37  [key=2, style=dotted];
m8_732 -> m8_734  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_732 -> m8_733  [key=0, style=solid];
m8_732 -> m8_737  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_732 -> m8_742  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_732 -> m8_744  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_733 -> m8_734  [key=0, style=solid];
m8_733 -> m8_533  [key=2, style=dotted];
m8_733 -> m8_736  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_733 -> m8_737  [color=darkseagreen4, key=1, label=transactionHandler, style=dashed];
m8_735 -> m8_736  [key=0, style=solid];
m8_738 -> m8_739  [key=0, style=solid];
m8_738 -> m8_274  [key=2, style=dotted];
m8_749 -> m8_748  [key=0, style=solid];
m8_749 -> m8_695  [key=2, style=dotted];
m8_751 -> m8_28  [key=2, style=dotted];
m8_751 -> m8_752  [key=0, style=solid];
m8_754 -> m8_28  [key=2, style=dotted];
m8_754 -> m8_755  [key=0, style=solid];
m8_752 -> m8_28  [key=2, style=dotted];
m8_752 -> m8_753  [key=0, style=solid];
m8_753 -> m8_28  [key=2, style=dotted];
m8_753 -> m8_754  [key=0, style=solid];
m8_739 -> m8_31  [key=2, style=dotted];
m8_739 -> m8_33  [key=2, style=dotted];
m8_739 -> m8_34  [key=2, style=dotted];
m8_739 -> m8_36  [key=2, style=dotted];
m8_739 -> m8_740  [key=0, style=solid];
m8_739 -> m8_200  [key=2, style=dotted];
m8_740 -> m8_33  [key=2, style=dotted];
m8_740 -> m8_36  [key=2, style=dotted];
m8_740 -> m8_741  [key=0, style=solid];
m8_740 -> m8_537  [key=2, style=dotted];
m8_740 -> m8_200  [key=2, style=dotted];
m8_740 -> m8_538  [key=2, style=dotted];
m8_730 -> m8_731  [key=0, style=solid];
m8_730 -> m8_735  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_730 -> m8_532  [key=2, style=dotted];
m8_730 -> m8_736  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m8_741 -> m8_742  [key=0, style=solid];
m8_741 -> m8_257  [key=2, style=dotted];
m8_742 -> m8_743  [key=0, style=solid];
m8_742 -> m8_205  [key=2, style=dotted];
m8_742 -> m8_540  [key=2, style=dotted];
m8_743 -> m8_749  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_743 -> m8_744  [key=0, style=solid];
m8_743 -> m8_745  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_743 -> m8_746  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_743 -> m8_747  [color=darkseagreen4, key=1, label=option, style=dashed];
m8_745 -> m8_746  [key=0, style=solid];
m8_750 -> m8_751  [key=0, style=solid];
m8_750 -> m8_752  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_750 -> m8_753  [color=darkseagreen4, key=1, label=newUnderlyingHoldings, style=dashed];
m8_737 -> m8_738  [key=0, style=solid];
m8_737 -> m8_198  [key=2, style=dotted];
m8_744 -> m8_745  [key=0, style=solid];
m8_744 -> m8_541  [key=2, style=dotted];
m8_744 -> m8_542  [key=2, style=dotted];
m8_744 -> m8_756  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_744 -> m8_746  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_736 -> m8_737  [key=0, style=solid];
m8_736 -> m8_534  [key=2, style=dotted];
m8_736 -> m8_535  [key=2, style=dotted];
m8_736 -> m8_536  [key=2, style=dotted];
m8_747 -> m8_749  [color=darkseagreen4, key=1, label=portfolioModel, style=dashed];
m8_747 -> m8_748  [key=0, style=solid];
m8_748 -> m8_749  [key=0, style=solid];
m8_748 -> m8_750  [key=0, style=solid];
m8_746 -> m8_747  [key=0, style=solid];
m8_746 -> m8_748  [color=darkseagreen4, key=1, label=fills, style=dashed];
m8_746 -> m8_543  [key=2, style=dotted];
m8_755 -> m8_729  [color=blue, key=0, style=bold];
m8_1121 -> m8_348  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_367  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_264  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_281  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_298  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_311  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_322  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_334  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_515  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_557  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_587  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_618  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_647  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_677  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_709  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_739  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_769  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_798  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_827  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_856  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_889  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_921  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_950  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_981  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_1012  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_1043  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_386  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_516  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_558  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_588  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_619  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_648  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_678  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_710  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_740  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_770  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_799  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_828  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_857  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_890  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_922  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_951  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_982  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_1013  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_1044  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_140  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_230  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_235  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_435  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1121 -> m8_475  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m8_1122 -> m8_1083  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m8_1122 -> m8_1081  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m8_1122 -> m8_1087  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m8_1122 -> m8_1092  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m8_1122 -> m8_1100  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m8_1122 -> m8_1108  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m8_1122 -> m8_1112  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m8_1123 -> m8_1096  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_43 -> m9_44  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_46  [key=2, style=dotted];
m9_45 -> m9_43  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m9_51 -> m9_52  [key=0, style=solid];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_54  [key=2, style=dotted];
m9_53 -> m9_51  [color=blue, key=0, style=bold];
m9_55 -> m9_56  [key=0, style=solid];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_58  [key=2, style=dotted];
m9_57 -> m9_55  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_2 -> m9_8  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_2 -> m9_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_14  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m9_4 -> m9_5  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_11  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_13  [key=0, style=solid];
m9_11 -> m9_16  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_8  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_15  [key=2, style=dotted];
m9_6 -> m9_14  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m9_7 -> m9_14  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_15  [key=2, style=dotted];
m9_9 -> m9_14  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m9_10 -> m9_14  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_15  [key=2, style=dotted];
m9_12 -> m9_14  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m9_13 -> m9_14  [key=0, style=solid];
m9_14 -> m9_2  [color=blue, key=0, style=bold];
m9_47 -> m9_48  [key=0, style=solid];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_50  [key=2, style=dotted];
m9_49 -> m9_47  [color=blue, key=0, style=bold];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>", style=dashed];
m9_35 -> m9_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>", style=dashed];
m9_36 -> m9_37  [key=0, style=solid];
m9_38 -> m9_40  [key=0, style=solid];
m9_38 -> m9_41  [key=2, style=dotted];
m9_38 -> m9_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_42  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_39  [key=0, style=solid];
m9_40 -> m9_35  [color=blue, key=0, style=bold];
m9_16 -> m9_24  [key=0, style=solid];
m9_16 -> m9_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_32  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_33  [key=2, style=dotted];
m9_25 -> m9_28  [color=darkseagreen4, key=1, label=cache, style=dashed];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [key=0, style=solid];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=0, style=solid];
m9_28 -> m9_34  [key=2, style=dotted];
m9_27 -> m9_31  [key=0, style=solid];
m9_29 -> m9_31  [key=0, style=solid];
m9_30 -> m9_31  [key=0, style=solid];
m9_31 -> m9_16  [color=blue, key=0, style=bold];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_23  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_22  [key=0, style=solid];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_15  [key=2, style=dotted];
m9_20 -> m9_23  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m9_22 -> m9_23  [key=0, style=solid];
m9_21 -> m9_23  [key=0, style=solid];
m9_23 -> m9_17  [color=blue, key=0, style=bold];
m9_59 -> m9_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.TradierBrokerageModel", style=dashed];
m9_59 -> m9_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.TradierBrokerageModel", style=dashed];
m10_62 -> m10_63  [color=red, key=0, style=solid];
m10_63 -> m10_64  [color=red, key=0, style=solid];
m10_63 -> m10_63  [color=red, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Lean.Engine.DataFeeds.Subscription>", style=dashed];
m10_64 -> m10_62  [color=blue, key=0, style=bold];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m10_23 -> m10_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m10_23 -> m10_7  [color=darkorchid, key=3, label="method methodReturn bool TryGetValue", style=bold];
m10_24 -> m10_25  [key=0, style=solid];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_28  [key=0, style=solid];
m10_25 -> m10_10  [key=2, style=dotted];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_10  [key=2, style=dotted];
m10_26 -> m10_27  [key=0, style=solid];
m10_27 -> m10_29  [key=0, style=solid];
m10_29 -> m10_23  [color=blue, key=0, style=bold];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_48  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_46 -> m10_7  [color=darkorchid, key=3, label="method methodReturn bool TryRemoveAll", style=bold];
m10_46 -> m10_36  [color=darkorchid, key=3, label="method methodReturn bool TryRemoveAll", style=bold];
m10_47 -> m10_48  [key=0, style=solid];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_51  [key=0, style=solid];
m10_48 -> m10_45  [key=2, style=dotted];
m10_49 -> m10_50  [key=0, style=solid];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_53  [color=darkseagreen4, key=1, label="out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>", style=dashed];
m10_50 -> m10_53  [key=0, style=solid];
m10_52 -> m10_53  [key=0, style=solid];
m10_53 -> m10_46  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m10_15 -> m10_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m10_15 -> m10_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m10_16 -> m10_17  [key=0, style=solid];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_20  [key=0, style=solid];
m10_17 -> m10_10  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_22  [key=2, style=dotted];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_3  [key=2, style=dotted];
m10_18 -> m10_20  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m10_21 -> m10_15  [color=blue, key=0, style=bold];
m10_54 -> m10_55  [color=red, key=0, style=solid];
m10_54 -> m10_59  [color=crimson, key=0, style=bold];
m10_55 -> m10_56  [color=red, key=0, style=solid];
m10_55 -> m10_60  [color=red, key=0, style=solid];
m10_59 -> m10_57  [color=red, key=0, style=solid];
m10_56 -> m10_57  [color=red, key=0, style=solid];
m10_56 -> m10_56  [color=red, key=1, label=subscriptionsBySymbol, style=dashed];
m10_57 -> m10_58  [color=red, key=0, style=solid];
m10_57 -> m10_55  [color=red, key=0, style=solid];
m10_57 -> m10_61  [color=red, key=2, style=dotted];
m10_57 -> m10_62  [color=red, key=1, label="lambda expression", style=dashed];
m10_58 -> m10_59  [color=red, key=0, style=solid];
m10_58 -> m10_58  [color=red, key=1, label=kvp, style=dashed];
m10_60 -> m10_54  [color=blue, key=0, style=bold];
m10_12 -> m10_13  [key=0, style=solid];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_11  [key=2, style=dotted];
m10_14 -> m10_12  [color=blue, key=0, style=bold];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_32  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_30 -> m10_7  [color=darkorchid, key=3, label="method methodReturn bool TryGetAll", style=bold];
m10_30 -> m10_36  [color=darkorchid, key=3, label="method methodReturn bool TryGetAll", style=bold];
m10_31 -> m10_32  [key=0, style=solid];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_35  [key=0, style=solid];
m10_32 -> m10_10  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_37  [color=darkseagreen4, key=1, label="out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>", style=dashed];
m10_34 -> m10_37  [key=0, style=solid];
m10_36 -> m10_37  [key=0, style=solid];
m10_37 -> m10_30  [color=blue, key=0, style=bold];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_54  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_54  [key=2, style=dotted];
m10_67 -> m10_65  [color=blue, key=0, style=bold];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m10_38 -> m10_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m10_38 -> m10_7  [color=darkorchid, key=3, label="method methodReturn bool TryRemove", style=bold];
m10_39 -> m10_40  [key=0, style=solid];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_43  [key=0, style=solid];
m10_40 -> m10_10  [key=2, style=dotted];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_45  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_42 -> m10_44  [key=0, style=solid];
m10_44 -> m10_38  [color=blue, key=0, style=bold];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m10_4 -> m10_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m10_4 -> m10_7  [color=darkorchid, key=3, label="method methodReturn bool Contains", style=bold];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_8  [key=0, style=solid];
m10_6 -> m10_10  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_11  [key=2, style=dotted];
m10_7 -> m10_9  [key=0, style=solid];
m10_9 -> m10_4  [color=blue, key=0, style=bold];
m10_68 -> m10_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m10_68 -> m10_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m10_68 -> m10_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m10_68 -> m10_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m10_68 -> m10_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m10_68 -> m10_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m10_68 -> m10_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m10_68 -> m10_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m10_68 -> m10_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m10_68 -> m10_55  [color=red, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m10_68 -> m10_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
}
