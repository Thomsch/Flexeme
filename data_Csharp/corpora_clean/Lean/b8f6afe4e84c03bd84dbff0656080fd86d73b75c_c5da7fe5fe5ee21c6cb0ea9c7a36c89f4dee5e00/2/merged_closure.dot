digraph  {
m0_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.LiveFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="AlgorithmPythonWrapper.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.LiveFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="35-35"];
m0_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.LiveFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="AlgorithmPythonWrapper.cs", label="throw new NotImplementedException(''LiveFutureChainProvider.GetFutureContractList() has not been implemented yet.'');", span="37-37"];
m0_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.LiveFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", file="AlgorithmPythonWrapper.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.LiveFutureChainProvider.GetFutureContractList(QuantConnect.Symbol, System.DateTime)", span="35-35"];
m0_3 [cluster="System.NotImplementedException.NotImplementedException(string)", file="AlgorithmPythonWrapper.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m1_121 [cluster="System.Collections.ObjectModel.Collection<T>.Insert(int, T)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Insert(int, T)", span="0-0"];
m1_17 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="50-50"];
m1_18 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction)", span="41-41"];
m1_20 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", span="26-26"];
m1_22 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="63-63"];
m1_26 [cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50"];
m1_19 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.SimplePortfolioConstructionModel()", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.SimplePortfolioConstructionModel()", span="28-28"];
m1_21 [cluster="QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", span="7-7"];
m1_25 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="63-63"];
m1_23 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BasicTemplateFrameworkAlgorithm.cs", label="orderEvent.Status.IsFill()", span="65-65"];
m1_29 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableBacktests(int)", file="BasicTemplateFrameworkAlgorithm.cs", label=Exception, span="94-94"];
m1_24 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BasicTemplateFrameworkAlgorithm.cs", label="Debug($''Purchased Stock: {orderEvent.Symbol}'')", span="67-67"];
m1_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1659-1659"];
m1_28 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableBacktests(int)", file="BasicTemplateFrameworkAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", span=""];
m1_30 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableBacktests(int)", file="BasicTemplateFrameworkAlgorithm.cs", label="VsUtils.ShowErrorMessageBox(ServiceProvider.GlobalProvider,\r\n                        ''QuantConnect Exception'', exception.ToString())", span="96-97"];
m1_31 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableBacktests(int)", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableBacktests(int)", span="59-59"];
m1_88 [cluster="string.Format(System.IFormatProvider, string, object, object)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0"];
m1_33 [cluster="Unk.Login", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry Unk.Login", span=""];
m1_81 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Open_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolWindow1Control.Open_OnClick(object, RoutedEventArgs)", span="143-143"];
m1_82 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Open_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="var obj = ((FrameworkElement)sender).DataContext as DataGridItem", span="145-145"];
m1_83 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Open_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="obj != null", span="146-146"];
m1_85 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Open_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="var projectUrl = string.Format(\r\n                    CultureInfo.CurrentCulture,\r\n                    ''https://www.quantconnect.com/terminal/#open/{0}/{1}'',\r\n                    obj.ProjectId,\r\n                    obj.BacktestId\r\n                )", span="149-154"];
m1_84 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Open_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="VsUtils.DisplayInStatusBar(ServiceProvider.GlobalProvider, ''Opening backtest'')", span="148-148"];
m1_86 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Open_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="Process.Start(projectUrl)", span="155-155"];
m1_87 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Open_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolWindow1Control.Open_OnClick(object, RoutedEventArgs)", span="143-143"];
m1_89 [cluster="System.Diagnostics.Process.Start(string)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry System.Diagnostics.Process.Start(string)", span="0-0"];
m1_9 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", color=green, community=1, file="BasicTemplateFrameworkAlgorithm.cs", label="Execution = new ImmediateExecutionModel()", prediction=0, span="59-59"];
m1_122 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestStatusUpdated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestStatusUpdated(int, QuantConnect.Api.Backtest)", span="239-239"];
m1_123 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestStatusUpdated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="var selectedItem = projectNameBox.SelectedItem as ProjectNameDialog.ComboboxItem", span="241-241"];
m1_124 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestStatusUpdated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="selectedItem?.ProjectId == projectId", span="243-243"];
m1_126 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestStatusUpdated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="item.BacktestId == backtestStatus.BacktestId", span="247-247"];
m1_127 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestStatusUpdated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="item.Progress = backtestStatus.Progress", span="249-249"];
m1_125 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestStatusUpdated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label=_dataGridCollection, span="245-245"];
m1_128 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestStatusUpdated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestStatusUpdated(int, QuantConnect.Api.Backtest)", span="239-239"];
m1_79 [cluster="ProjectNameDialog.ComboboxItem.cstr", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry ProjectNameDialog.ComboboxItem.cstr", span=""];
m1_15 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.ProjectNameBox_SelectionChanged(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="UpdateAvailableBacktests(projectId)", span="51-51"];
m1_111 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry lambda expression", span="175-179"];
m1_43 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="var result = api.ListBacktests(projectId)", span="69-69"];
m1_41 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry lambda expression", span="66-71"];
m1_42 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="var api = AuthorizationManager.GetInstance().GetApi()", span="68-68"];
m1_44 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="return result.Backtests;", span="70-70"];
m1_45 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit lambda expression", span="66-71"];
m1_64 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry lambda expression", span="112-117"];
m1_76 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry lambda expression", span="124-124"];
m1_65 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="var api = AuthorizationManager.GetInstance().GetApi()", span="114-114"];
m1_66 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="var projects = api.ListProjects().Projects", span="115-115"];
m1_67 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="return projects.Select(p => Tuple.Create(p.ProjectId, p.Name)).ToList();", span="116-116"];
m1_68 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit lambda expression", span="112-117"];
m1_72 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry lambda expression", span="116-116"];
m1_73 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="Tuple.Create(p.ProjectId, p.Name)", span="116-116"];
m1_74 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit lambda expression", span="116-116"];
m1_77 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="projectNameBox.Items.Add(new ProjectNameDialog.ComboboxItem(p.Item1, p.Item2))", span="124-124"];
m1_78 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit lambda expression", span="124-124"];
m1_113 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="return api.DeleteBacktest(projectId, backtestId).Success;", span="178-178"];
m1_112 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="var api = AuthorizationManager.GetInstance().GetApi()", span="177-177"];
m1_114 [cluster="lambda expression", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit lambda expression", span="175-179"];
m1_38 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m1_63 [cluster="Unk.ForEach", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry Unk.ForEach", span=""];
m1_10 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", file="BasicTemplateFrameworkAlgorithm.cs", label="RiskManagement = new NullRiskManagementModel()", span="60-60"];
m1_49 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label="VsUtils.DisplayInStatusBar(ServiceProvider.GlobalProvider, ''Loading available projects...'')", span="107-107"];
m1_50 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label="await _authenticationCommand.Login(ServiceProvider.GlobalProvider, false, showLoginDialog)", span="108-108"];
m1_51 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label="var projectNames = await System.Threading.Tasks.Task.Run(() =>\r\n                    {\r\n                        var api = AuthorizationManager.GetInstance().GetApi();\r\n                        var projects = api.ListProjects().Projects;\r\n                        return projects.Select(p => Tuple.Create(p.ProjectId, p.Name)).ToList();\r\n                    })", span="112-117"];
m1_52 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label="projectNameBox.Items.Clear()", span="119-119"];
m1_54 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label="projectNames.Count > 0", span="122-122"];
m1_55 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label="projectNames.ForEach(p => projectNameBox.Items.Add(new ProjectNameDialog.ComboboxItem(p.Item1, p.Item2)))", span="124-124"];
m1_53 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label="_dataGridCollection.Clear()", span="121-121"];
m1_57 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label="VsUtils.DisplayInStatusBar(ServiceProvider.GlobalProvider, ''No projects available'')", span="129-129"];
m1_56 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label="VsUtils.DisplayInStatusBar(ServiceProvider.GlobalProvider, ''Successfully loaded projects'')", span="125-125"];
m1_58 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label=Exception, span="132-132"];
m1_59 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label="VsUtils.ShowErrorMessageBox(ServiceProvider.GlobalProvider,\r\n                        ''QuantConnect Exception'', exception.ToString())", span="134-135"];
m1_60 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolWindow1Control.UpdateAvailableProjects(bool)", span="105-105"];
m1_47 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", span="45-45"];
m1_129 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestFinished(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestFinished(int, QuantConnect.Api.Backtest)", span="261-261"];
m1_130 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestFinished(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="var selectedItem = projectNameBox.SelectedItem as ProjectNameDialog.ComboboxItem", span="263-263"];
m1_131 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestFinished(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="selectedItem?.ProjectId == projectId", span="265-265"];
m1_133 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestFinished(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="item.BacktestId == backtestStatus.BacktestId", span="269-269"];
m1_134 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestFinished(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="var success = string.IsNullOrEmpty(backtestStatus.Error) &&\r\n                                      string.IsNullOrEmpty(backtestStatus.StackTrace)", span="271-272"];
m1_136 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestFinished(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="item.Progress = backtestStatus.Progress", span="274-274"];
m1_132 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestFinished(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label=_dataGridCollection, span="267-267"];
m1_135 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestFinished(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="item.Status = success ? DataGridItem.BacktestSucceeded : DataGridItem.BacktestFailed", span="273-273"];
m1_137 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestFinished(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestFinished(int, QuantConnect.Api.Backtest)", span="261-261"];
m1_71 [cluster="Unk.ToList", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry Unk.ToList", span=""];
m1_16 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.ProjectNameBox_SelectionChanged(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolWindow1Control.ProjectNameBox_SelectionChanged(object, RoutedEventArgs)", span="45-45"];
m1_110 [cluster="System.Collections.ObjectModel.Collection<T>.Remove(T)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Remove(T)", span="0-0"];
m1_0 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.ToolWindow1Control()", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolWindow1Control.ToolWindow1Control()", span="32-32"];
m1_5 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.ToolWindow1Control()", color=green, community=0, file="BasicTemplateFrameworkAlgorithm.cs", label="UpdateAvailableProjects(false)", prediction=1, span="39-39"];
m1_4 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.ToolWindow1Control()", file="BasicTemplateFrameworkAlgorithm.cs", label="_authenticationCommand = new AuthenticationCommand()", span="37-37"];
m1_6 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.ToolWindow1Control()", color=green, community=0, file="BasicTemplateFrameworkAlgorithm.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolWindow1Control.ToolWindow1Control()", prediction=2, span="32-32"];
m1_7 [cluster="System.Collections.ObjectModel.ObservableCollection<T>.ObservableCollection()", color=green, community=0, file="BasicTemplateFrameworkAlgorithm.cs", label="Entry System.Collections.ObjectModel.ObservableCollection<T>.ObservableCollection()", prediction=2, span="0-0"];
m1_8 [cluster="Unk.InitializeComponent", color=green, community=0, file="BasicTemplateFrameworkAlgorithm.cs", label="Entry Unk.InitializeComponent", prediction=2, span=""];
m1_3 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.ToolWindow1Control()", file="BasicTemplateFrameworkAlgorithm.cs", label="dataGrid.ItemsSource = _dataGridCollection", span="36-36"];
m1_1 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.ToolWindow1Control()", file="BasicTemplateFrameworkAlgorithm.cs", label="_dataGridCollection = new ObservableCollection<DataGridItem>()", span="34-34"];
m1_2 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.ToolWindow1Control()", file="BasicTemplateFrameworkAlgorithm.cs", label="InitializeComponent()", span="35-35"];
m1_11 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.ProjectNameBox_SelectionChanged(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolWindow1Control.ProjectNameBox_SelectionChanged(object, RoutedEventArgs)", span="45-45"];
m1_12 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.ProjectNameBox_SelectionChanged(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="var selectedItem = projectNameBox.SelectedItem as ProjectNameDialog.ComboboxItem", span="47-47"];
m1_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1118-1118"];
m1_48 [cluster="QuantConnect.Api.Api.ListBacktests(int)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Api.Api.ListBacktests(int)", span="366-366"];
m1_80 [cluster="Unk.Add", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry Unk.Add", span=""];
m1_46 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", span="35-35"];
m1_90 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", span="162-162"];
m1_91 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="var obj = ((FrameworkElement)sender).DataContext as DataGridItem", span="164-164"];
m1_92 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="obj != null", span="165-165"];
m1_93 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="var projectId = obj.ProjectId", span="167-167"];
m1_94 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="var backtestId = obj.BacktestId", span="168-168"];
m1_98 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="deleteResult = await System.Threading.Tasks.Task.Run(() =>\r\n                        {\r\n                            var api = AuthorizationManager.GetInstance().GetApi();\r\n                            return api.DeleteBacktest(projectId, backtestId).Success;\r\n                        })", span="175-179"];
m1_103 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="selectedItem?.ProjectId == projectId", span="191-191"];
m1_95 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="VsUtils.DisplayInStatusBar(ServiceProvider.GlobalProvider, ''Deleting backtest...'')", span="169-169"];
m1_105 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="item.BacktestId == backtestId", span="195-195"];
m1_96 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="var deleteResult = false", span="170-170"];
m1_97 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="await _authenticationCommand.Login(ServiceProvider.GlobalProvider, false)", span="171-171"];
m1_101 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label=deleteResult, span="187-187"];
m1_99 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label=Exception, span="181-181"];
m1_100 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="VsUtils.ShowErrorMessageBox(ServiceProvider.GlobalProvider,\r\n                            ''QuantConnect Exception'', exception.ToString())", span="183-184"];
m1_102 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="var selectedItem = projectNameBox.SelectedItem as ProjectNameDialog.ComboboxItem", span="189-189"];
m1_108 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="VsUtils.DisplayInStatusBar(ServiceProvider.GlobalProvider, ''Error when deleting backtest'')", span="206-206"];
m1_104 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label=_dataGridCollection, span="193-193"];
m1_107 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="VsUtils.DisplayInStatusBar(ServiceProvider.GlobalProvider, ''Successfully deleted backtest'')", span="202-202"];
m1_106 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="_dataGridCollection.Remove(item)", span="197-197"];
m1_109 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolWindow1Control.Delete_OnClick(object, RoutedEventArgs)", span="162-162"];
m1_35 [cluster="System.Collections.ObjectModel.Collection<T>.Clear()", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Clear()", span="0-0"];
m1_62 [cluster="Unk.Clear", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry Unk.Clear", span=""];
m1_138 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.RefreshButton_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolWindow1Control.RefreshButton_OnClick(object, RoutedEventArgs)", span="284-284"];
m1_139 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.RefreshButton_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="UpdateAvailableProjects()", span="286-286"];
m1_140 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.RefreshButton_OnClick(object, RoutedEventArgs)", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolWindow1Control.RefreshButton_OnClick(object, RoutedEventArgs)", span="284-284"];
m1_36 [cluster="QuantConnect.VisualStudioPlugin.DataGridItem.DataGridItem()", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.VisualStudioPlugin.DataGridItem.DataGridItem()", span="9-9"];
m1_40 [cluster="Unk.ShowErrorMessageBox", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry Unk.ShowErrorMessageBox", span=""];
m1_39 [cluster="System.Exception.ToString()", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry System.Exception.ToString()", span="0-0"];
m1_32 [cluster="Unk.DisplayInStatusBar", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry Unk.DisplayInStatusBar", span=""];
m1_61 [cluster="Unk.Run", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry Unk.Run", span=""];
m1_75 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m1_69 [cluster="QuantConnect.Api.Api.ListProjects()", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Api.Api.ListProjects()", span="111-111"];
m1_34 [cluster="System.Threading.Tasks.Task.Run<TResult>(System.Func<TResult>)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry System.Threading.Tasks.Task.Run<TResult>(System.Func<TResult>)", span="0-0"];
m1_37 [cluster="string.IsNullOrEmpty(string)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_70 [cluster="Unk.Select", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry Unk.Select", span=""];
m1_115 [cluster="QuantConnect.Api.Api.DeleteBacktest(int, string)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.Api.Api.DeleteBacktest(int, string)", span="382-382"];
m1_116 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestCreated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestCreated(int, QuantConnect.Api.Backtest)", span="216-216"];
m1_117 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestCreated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="var selectedItem = projectNameBox.SelectedItem as ProjectNameDialog.ComboboxItem", span="218-218"];
m1_118 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestCreated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="selectedItem?.ProjectId == projectId", span="220-220"];
m1_119 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestCreated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="_dataGridCollection.Insert(0, new DataGridItem\r\n                {\r\n                    Name = backtestStatus.Name,\r\n                    Progress = 0,\r\n                    ProjectId = projectId,\r\n                    BacktestId = backtestStatus.BacktestId,\r\n                    Date = backtestStatus.Created,\r\n                    Status = DataGridItem.BacktestInProgress\r\n                })", span="222-230"];
m1_120 [cluster="QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestCreated(int, QuantConnect.Api.Backtest)", file="BasicTemplateFrameworkAlgorithm.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolWindow1Control.BacktestCreated(int, QuantConnect.Api.Backtest)", span="216-216"];
m1_141 [file="BasicTemplateFrameworkAlgorithm.cs", label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", span=""];
m1_142 [file="BasicTemplateFrameworkAlgorithm.cs", label=int, span=""];
m1_143 [file="BasicTemplateFrameworkAlgorithm.cs", label=projectId, span=""];
m1_144 [file="BasicTemplateFrameworkAlgorithm.cs", label=backtestId, span=""];
m3_81 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="228-228"];
m3_82 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="var tradeBar = new TradeBar()", span="231-231"];
m3_83 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="line == null", span="233-233"];
m3_85 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label=datafeed, span="239-239"];
m3_87 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="tradeBar = new TradeBar(config, line, date, datafeed)", span="244-244"];
m3_89 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="tradeBar = new TradeBar(config, line, date, datafeed)", span="250-250"];
m3_84 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="return null;", span="235-235"];
m3_86 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="DataFeedEndpoint.Backtesting", span="242-242"];
m3_88 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="DataFeedEndpoint.FileSystem", span="248-248"];
m3_90 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="DataFeedEndpoint.LiveTrading", span="254-254"];
m3_91 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="return tradeBar;", span="259-259"];
m3_92 [cluster="QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="228-228"];
m3_60 [cluster="string.Split(params char[])", file="IAlgorithm.cs", label="Entry string.Split(params char[])", span="0-0"];
m3_65 [cluster="System.Convert.ToInt32(string)", file="IAlgorithm.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m3_108 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="303-303"];
m3_109 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="var source = ''''", span="305-305"];
m3_111 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label=datafeed, span="308-308"];
m3_115 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="config.SecurityType == SecurityType.Forex", span="315-315"];
m3_118 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="var securityTypePath = config.SecurityType.ToString().ToLower()", span="321-321"];
m3_119 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="var resolutionPath = config.Resolution.ToString().ToLower()", span="322-322"];
m3_120 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="var symbolPath = (string.IsNullOrEmpty(config.MappedSymbol) ? config.Symbol : config.MappedSymbol).ToLower()", span="323-323"];
m3_121 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="var filename = date.ToString(dateFormat) + ''_'' + dataType.ToString().ToLower() + ''.zip''", span="324-324"];
m3_122 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="config.Resolution == Resolution.Hour || config.Resolution == Resolution.Daily", span="326-326"];
m3_110 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="var dataType = TickType.Trade", span="306-306"];
m3_112 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="DataFeedEndpoint.Backtesting", span="311-311"];
m3_126 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="DataFeedEndpoint.LiveTrading", span="337-337"];
m3_113 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="DataFeedEndpoint.FileSystem", span="312-312"];
m3_114 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="var dateFormat = ''yyyyMMdd''", span="314-314"];
m3_116 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="dataType = TickType.Quote", span="317-317"];
m3_117 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="dateFormat = ''yyMMdd''", span="318-318"];
m3_125 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="source = Path.Combine(Constants.DataFolder, securityTypePath, resolutionPath, symbolPath, filename)", span="333-333"];
m3_123 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="filename = symbolPath + ''.zip''", span="329-329"];
m3_124 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="symbolPath = string.Empty", span="330-330"];
m3_127 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="source = ''''", span="338-338"];
m3_128 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="return source;", span="341-341"];
m3_129 [cluster="QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="303-303"];
m3_25 [cluster="System.DateTime.DateTime(long)", file="IAlgorithm.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m3_66 [cluster="System.DateTime.AddMilliseconds(double)", file="IAlgorithm.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m3_69 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m3_13 [cluster="System.TimeSpan.FromMinutes(double)", file="IAlgorithm.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m3_134 [cluster="System.IO.Path.Combine(params string[])", file="IAlgorithm.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m3_70 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="204-204"];
m3_71 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Time = time", span="206-206"];
m3_72 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Symbol = symbol", span="207-207"];
m3_73 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Value = close", span="208-208"];
m3_74 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Open = open", span="209-209"];
m3_75 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="High = high", span="210-210"];
m3_76 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Low = low", span="211-211"];
m3_77 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Close = close", span="212-212"];
m3_78 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Volume = volume", span="213-213"];
m3_79 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Period = period ?? TimeSpan.FromMinutes(1)", span="214-214"];
m3_80 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="204-204"];
m3_96 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", span="281-281"];
m3_97 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Open == 0", span="284-284"];
m3_98 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Open = lastTrade", span="284-284"];
m3_99 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="lastTrade > High", span="285-285"];
m3_100 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="High = lastTrade", span="285-285"];
m3_101 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="lastTrade < Low", span="286-286"];
m3_102 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Low = lastTrade", span="286-286"];
m3_103 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Volume += Convert.ToInt32(volume)", span="288-288"];
m3_104 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Close = lastTrade", span="290-290"];
m3_105 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Value = lastTrade", span="291-291"];
m3_106 [cluster="QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.Update(decimal, decimal, decimal, decimal)", span="281-281"];
m3_133 [cluster="System.DateTime.ToString(string)", file="IAlgorithm.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m3_64 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="162-162"];
m3_131 [cluster="string.ToLower()", file="IAlgorithm.cs", label="Entry string.ToLower()", span="0-0"];
m3_62 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="IAlgorithm.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m3_130 [cluster="System.Enum.ToString()", file="IAlgorithm.cs", label="Entry System.Enum.ToString()", span="0-0"];
m3_26 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="128-128"];
m3_27 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="var csv = line.Split(',')", span="133-133"];
m3_29 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Symbol = config.Symbol", span="135-135"];
m3_30 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Period = config.Resolution.ToTimeSpan()", span="136-136"];
m3_31 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="config.SecurityType", span="138-138"];
m3_33 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="config.Resolution == Resolution.Daily || config.Resolution == Resolution.Hour", span="142-142"];
m3_35 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Open = config.GetNormalizedPrice(Convert.ToDecimal(csv[1]))", span="146-146"];
m3_36 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="High = config.GetNormalizedPrice(Convert.ToDecimal(csv[2]))", span="147-147"];
m3_37 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Low = config.GetNormalizedPrice(Convert.ToDecimal(csv[3]))", span="148-148"];
m3_38 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Close = config.GetNormalizedPrice(Convert.ToDecimal(csv[4]))", span="149-149"];
m3_39 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Time = baseDate.Date.AddMilliseconds(Convert.ToInt32(csv[0]))", span="154-154"];
m3_40 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Open = config.GetNormalizedPrice(csv[1].ToDecimal() / scaleFactor)", span="155-155"];
m3_41 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="High = config.GetNormalizedPrice(csv[2].ToDecimal() / scaleFactor)", span="156-156"];
m3_42 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Low = config.GetNormalizedPrice(csv[3].ToDecimal() / scaleFactor)", span="157-157"];
m3_43 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Close = config.GetNormalizedPrice(csv[4].ToDecimal() / scaleFactor)", span="158-158"];
m3_46 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="config.Resolution == Resolution.Daily || config.Resolution == Resolution.Hour", span="165-165"];
m3_48 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Open = config.GetNormalizedPrice(Convert.ToDecimal(csv[1]))", span="169-169"];
m3_49 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="High = config.GetNormalizedPrice(Convert.ToDecimal(csv[2]))", span="170-170"];
m3_50 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Low = config.GetNormalizedPrice(Convert.ToDecimal(csv[3]))", span="171-171"];
m3_51 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Close = config.GetNormalizedPrice(Convert.ToDecimal(csv[4]))", span="172-172"];
m3_58 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Log.Error(''DataModels: TradeBar(): Error Initializing - '' + config.SecurityType + '' - '' + err.Message + '' - '' + line)", span="189-189"];
m3_28 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="decimal scaleFactor = 10000m", span="134-134"];
m3_34 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Time = DateTime.ParseExact(csv[0], ''yyyyMMdd HH:mm'', CultureInfo.InvariantCulture)", span="145-145"];
m3_44 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Volume = Convert.ToInt64(csv[5])", span="160-160"];
m3_47 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Time = DateTime.ParseExact(csv[0], ''yyyyMMdd HH:mm'', CultureInfo.InvariantCulture)", span="168-168"];
m3_52 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Time = DateTime.ParseExact(csv[0], ''yyyyMMdd HH:mm:ss.ffff'', CultureInfo.InvariantCulture)", span="177-177"];
m3_53 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Open = csv[1].ToDecimal()", span="178-178"];
m3_54 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="High = csv[2].ToDecimal()", span="179-179"];
m3_55 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Low = csv[3].ToDecimal()", span="180-180"];
m3_56 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Close = csv[4].ToDecimal()", span="181-181"];
m3_32 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="SecurityType.Equity", span="141-141"];
m3_45 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="SecurityType.Forex", span="164-164"];
m3_57 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label=Exception, span="187-187"];
m3_59 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="128-128"];
m3_67 [cluster="string.ToDecimal()", file="IAlgorithm.cs", label="Entry string.ToDecimal()", span="161-161"];
m3_107 [cluster="System.Convert.ToInt32(decimal)", file="IAlgorithm.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m3_68 [cluster="System.Convert.ToInt64(string)", file="IAlgorithm.cs", label="Entry System.Convert.ToInt64(string)", span="0-0"];
m3_132 [cluster="string.IsNullOrEmpty(string)", file="IAlgorithm.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_0 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="89-89"];
m3_1 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Symbol = ''''", span="91-91"];
m3_2 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Time = new DateTime()", span="92-92"];
m3_3 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Value = 0", span="93-93"];
m3_4 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="DataType = MarketDataType.TradeBar", span="94-94"];
m3_5 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Open = 0", span="95-95"];
m3_6 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="High = 0", span="96-96"];
m3_7 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Low = 0", span="97-97"];
m3_8 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Close = 0", span="98-98"];
m3_9 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Volume = 0", span="99-99"];
m3_10 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Period = TimeSpan.FromMinutes(1)", span="100-100"];
m3_11 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar()", span="89-89"];
m3_63 [cluster="System.Convert.ToDecimal(string)", file="IAlgorithm.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m3_61 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="IAlgorithm.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="405-405"];
m3_12 [cluster="System.DateTime.DateTime()", file="IAlgorithm.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m3_93 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.Clone()", span="267-267"];
m3_94 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="IAlgorithm.cs", label="return new TradeBar(this);", span="270-270"];
m3_95 [cluster="QuantConnect.Data.Market.TradeBar.Clone()", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.Clone()", span="267-267"];
m3_14 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="108-108"];
m3_15 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Time = new DateTime(original.Time.Ticks)", span="110-110"];
m3_16 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Symbol = original.Symbol", span="111-111"];
m3_17 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Value = original.Close", span="112-112"];
m3_18 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Open = original.Open", span="113-113"];
m3_19 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="High = original.High", span="114-114"];
m3_20 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Low = original.Low", span="115-115"];
m3_21 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Close = original.Close", span="116-116"];
m3_22 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Volume = original.Volume", span="117-117"];
m3_23 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Period = original.Period", span="118-118"];
m3_24 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", file="IAlgorithm.cs", label="Exit QuantConnect.Data.Market.TradeBar.TradeBar(QuantConnect.Data.Market.TradeBar)", span="108-108"];
m3_135 [file="IAlgorithm.cs", label="QuantConnect.Data.Market.TradeBar", span=""];
m4_14 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52"];
m4_15 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52"];
m4_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m4_7 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254"];
m4_9 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="33-33"];
m4_8 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0"];
m4_0 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="33-33"];
m4_1 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label=targets, span="35-35"];
m4_2 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", color=green, community=0, file="ImmediateExecutionModel.cs", label="var existing = algorithm.Securities[target.Symbol].Holdings.Quantity\r\n                    + algorithm.Transactions.GetOpenOrders(target.Symbol).Sum(o => o.Quantity)", prediction=5, span="37-38"];
m4_3 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", color=green, community=0, file="ImmediateExecutionModel.cs", label="var quantity = target.GetTargetQuantity(algorithm) - existing", prediction=6, span="39-39"];
m4_5 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="algorithm.MarketOrder(target.Symbol, quantity)", span="42-42"];
m4_4 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="quantity != 0", span="40-40"];
m4_6 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="33-33"];
m4_11 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Entry lambda expression", span="38-38"];
m4_12 [cluster="lambda expression", color=green, community=0, file="ImmediateExecutionModel.cs", label="o.Quantity", prediction=7, span="38-38"];
m4_13 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Exit lambda expression", span="38-38"];
m5_0 [cluster="QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="IPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="31-31"];
m5_1 [cluster="QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="IPortfolioSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="31-31"];
m6_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="IPortfolioTarget.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="33-33"];
m6_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="IPortfolioTarget.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="33-33"];
m7_26 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m7_25 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m7_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ManualPortfolioSelectionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m7_18 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="var entry = MarketHoursDatabase.FromDataFolder().GetEntry(market, (string)null, securityType)", span="76-76"];
m7_10 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="var universeSettings = _universeSettings ?? algorithm.UniverseSettings", span="64-64"];
m7_11 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="var securityInitializer = _securityInitializer ?? algorithm.SecurityInitializer", span="65-65"];
m7_14 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="_symbols.GroupBy(s => new { s.ID.Market, s.SecurityType })", span="71-71"];
m7_9 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="62-62"];
m7_12 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="var resolution = universeSettings.Resolution", span="67-67"];
m7_20 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="yield return new ManualUniverse(config, universeSettings, securityInitializer, grp);", span="78-78"];
m7_13 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="var type = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="68-68"];
m7_15 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="var market = grp.Key.Market", span="73-73"];
m7_16 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="var securityType = grp.Key.SecurityType", span="74-74"];
m7_19 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="var config = new SubscriptionDataConfig(type, universeSymbol, resolution, entry.DataTimeZone, entry.ExchangeHours.TimeZone, false, false, true)", span="77-77"];
m7_17 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="var universeSymbol = Symbol.Create($''manual-portfolio-selection-model-{securityType}-{market}'', securityType, market)", span="75-75"];
m7_21 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="62-62"];
m7_3 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ManualPortfolioSelectionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m7_4 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="50-50"];
m7_7 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", color=green, community=0, file="ManualPortfolioSelectionModel.cs", label="_securityInitializer = securityInitializer", prediction=8, span="54-54"];
m7_6 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualPortfolioSelectionModel.cs", label="_universeSettings = universeSettings", span="53-53"];
m7_5 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualPortfolioSelectionModel.cs", label="_symbols = symbols.ToList()", span="52-52"];
m7_8 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="50-50"];
m7_27 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30"];
m7_23 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m7_24 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m7_0 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualPortfolioSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="39-39"];
m7_1 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualPortfolioSelectionModel.cs", label="_symbols = symbols.ToList()", span="41-41"];
m7_2 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualPortfolioSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="39-39"];
m7_28 [cluster="lambda expression", file="ManualPortfolioSelectionModel.cs", label="Entry lambda expression", span="71-71"];
m7_29 [cluster="lambda expression", file="ManualPortfolioSelectionModel.cs", label="new { s.ID.Market, s.SecurityType }", span="71-71"];
m7_30 [cluster="lambda expression", file="ManualPortfolioSelectionModel.cs", label="Exit lambda expression", span="71-71"];
m7_31 [file="ManualPortfolioSelectionModel.cs", label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", span=""];
m8_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.PercentPortfolioTarget(QuantConnect.Symbol, decimal)", file="PercentPortfolioTarget.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.PercentPortfolioTarget(QuantConnect.Symbol, decimal)", span="39-39"];
m8_3 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.PercentPortfolioTarget(QuantConnect.Symbol, decimal)", file="PercentPortfolioTarget.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.PercentPortfolioTarget(QuantConnect.Symbol, decimal)", span="39-39"];
m8_4 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="PercentPortfolioTarget.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="50-50"];
m8_11 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="PercentPortfolioTarget.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="50-50"];
m8_12 [file="PercentPortfolioTarget.cs", label="QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget", span=""];
m9_3 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.PercentPortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.PercentPortfolioTarget(QuantConnect.Symbol, decimal)", span="39-39"];
m9_7 [cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", span="38-38"];
m9_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", span="28-28"];
m9_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", color=green, community=0, file="PortfolioTarget.cs", label="return new PercentPortfolioTarget(symbol, percent);", prediction=9, span="30-30"];
m9_2 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", span="28-28"];
m9_4 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", span="39-39"];
m9_5 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="PortfolioTarget.cs", label="return new QuantityPortfolioTarget(symbol, quantity);", prediction=10, span="41-41"];
m9_6 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", span="39-39"];
m10_25 [cluster="System.DateTime.AddHours(double)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m10_26 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayClosed(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Forex.ForexExchange.TimeOfDayClosed(System.DateTime)", span="151-151"];
m10_27 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayClosed(System.DateTime)", file="QCAlgorithm.cs", label="time.DayOfWeek", span="153-153"];
m10_29 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayClosed(System.DateTime)", file="QCAlgorithm.cs", label="return time.Date.AddHours(16);", span="157-157"];
m10_31 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayClosed(System.DateTime)", file="QCAlgorithm.cs", label="return time.Date;", span="160-160"];
m10_32 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayClosed(System.DateTime)", file="QCAlgorithm.cs", label="return time.Date.AddDays(1);", span="163-163"];
m10_28 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayClosed(System.DateTime)", file="QCAlgorithm.cs", label="DayOfWeek.Friday", span="156-156"];
m10_30 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayClosed(System.DateTime)", file="QCAlgorithm.cs", label="DayOfWeek.Saturday", span="159-159"];
m10_33 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayClosed(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Forex.ForexExchange.TimeOfDayClosed(System.DateTime)", span="151-151"];
m10_2 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateTimeIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Forex.ForexExchange.DateTimeIsOpen(System.DateTime)", span="77-77"];
m10_3 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateTimeIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="!DateIsOpen(dateToCheck)", span="79-79"];
m10_5 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateTimeIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="dateToCheck.DayOfWeek == DayOfWeek.Friday && dateToCheck.TimeOfDay.TotalHours >= 16", span="82-82"];
m10_7 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateTimeIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="dateToCheck.DayOfWeek == DayOfWeek.Sunday && dateToCheck.TimeOfDay.TotalHours < 17", span="85-85"];
m10_4 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateTimeIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="return false;", span="80-80"];
m10_6 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateTimeIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="return false;", span="83-83"];
m10_8 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateTimeIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="return false;", span="86-86"];
m10_9 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateTimeIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="return true;", span="88-88"];
m10_10 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateTimeIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Forex.ForexExchange.DateTimeIsOpen(System.DateTime)", span="77-77"];
m10_11 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Forex.ForexExchange.DateIsOpen(System.DateTime)", span="96-96"];
m10_12 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="dateToCheck.DayOfWeek == DayOfWeek.Saturday", span="99-99"];
m10_13 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="return false;", span="100-100"];
m10_14 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="return true;", span="103-103"];
m10_15 [cluster="QuantConnect.Securities.Forex.ForexExchange.DateIsOpen(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Forex.ForexExchange.DateIsOpen(System.DateTime)", span="96-96"];
m10_24 [cluster="System.DateTime.AddDays(double)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m10_16 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayOpen(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Forex.ForexExchange.TimeOfDayOpen(System.DateTime)", span="132-132"];
m10_17 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayOpen(System.DateTime)", file="QCAlgorithm.cs", label="time.DayOfWeek", span="134-134"];
m10_19 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayOpen(System.DateTime)", file="QCAlgorithm.cs", label="return time.Date.AddDays(1);", span="137-137"];
m10_21 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayOpen(System.DateTime)", file="QCAlgorithm.cs", label="return time.Date.AddHours(17);", span="139-139"];
m10_22 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayOpen(System.DateTime)", file="QCAlgorithm.cs", label="return time.Date;", span="142-142"];
m10_18 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayOpen(System.DateTime)", file="QCAlgorithm.cs", label="DayOfWeek.Saturday", span="136-136"];
m10_20 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayOpen(System.DateTime)", file="QCAlgorithm.cs", label="DayOfWeek.Sunday", span="138-138"];
m10_23 [cluster="QuantConnect.Securities.Forex.ForexExchange.TimeOfDayOpen(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Forex.ForexExchange.TimeOfDayOpen(System.DateTime)", span="132-132"];
m10_0 [cluster="QuantConnect.Securities.Forex.ForexExchange.ForexExchange()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Forex.ForexExchange.ForexExchange()", span="41-41"];
m10_1 [cluster="QuantConnect.Securities.Forex.ForexExchange.ForexExchange()", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.Forex.ForexExchange.ForexExchange()", span="41-41"];
m10_34 [file="QCAlgorithm.cs", label="QuantConnect.Securities.Forex.ForexExchange", span=""];
m11_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1659-1659"];
m11_22 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="63-63"];
m11_23 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", color=green, community=0, file="QCAlgorithmFramework.cs", label="orderEvent.Status.IsFill()", prediction=11, span="65-65"];
m11_24 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", color=green, community=0, file="QCAlgorithmFramework.cs", label="Debug($''Purchased Stock: {orderEvent.Symbol}'')", prediction=12, span="67-67"];
m11_25 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="63-63"];
m11_20 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.ImmediateExecutionModel()", span="26-26"];
m11_19 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.SimplePortfolioConstructionModel()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.SimplePortfolioConstructionModel()", span="28-28"];
m11_17 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="50-50"];
m11_18 [cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(QuantConnect.Algorithm.Framework.Signals.SignalType, QuantConnect.Algorithm.Framework.Signals.Direction)", span="41-41"];
m11_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1118-1118"];
m11_15 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithmFramework.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_21 [cluster="QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.NullRiskManagementModel.NullRiskManagementModel()", span="7-7"];
m11_16 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m11_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1093-1093"];
m11_0 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", span="37-37"];
m11_6 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", color=green, community=0, file="QCAlgorithmFramework.cs", label="PortfolioSelection = new ManualPortfolioSelectionModel(symbols, UniverseSettings, SecurityInitializer)", prediction=13, span="56-56"];
m11_5 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="var symbols = new List<Symbol>\r\n            {\r\n                QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)\r\n            }", span="50-53"];
m11_7 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", color=green, community=0, file="QCAlgorithmFramework.cs", label="Signal = new ConstantSignalModel(SignalType.Price, Direction.Up)", prediction=14, span="57-57"];
m11_8 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", color=green, community=0, file="QCAlgorithmFramework.cs", label="PortfolioConstruction = new SimplePortfolioConstructionModel()", prediction=15, span="58-58"];
m11_9 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="Execution = new ImmediateExecutionModel()", span="59-59"];
m11_1 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="UniverseSettings.Resolution = Resolution.Minute", span="40-40"];
m11_2 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="SetStartDate(2013, 10, 07)", span="42-42"];
m11_3 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="SetEndDate(2013, 10, 11)", span="43-43"];
m11_4 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="SetCash(100000)", span="44-44"];
m11_10 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="RiskManagement = new NullRiskManagementModel()", span="60-60"];
m11_11 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.Initialize()", span="37-37"];
m11_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1042-1042"];
m11_26 [cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50"];
m11_28 [file="QCAlgorithmFramework.cs", label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", span=""];
m12_4 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101"];
m12_53 [cluster="Unk.Single", file="QuantityPortfolioTarget.cs", label="Entry Unk.Single", span=""];
m12_19 [cluster="Unk.CreateOrderFromJObject", file="QuantityPortfolioTarget.cs", label="Entry Unk.CreateOrderFromJObject", span=""];
m12_80 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m12_13 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="73-73"];
m12_14 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="QuantityPortfolioTarget.cs", label="var jObject = JObject.Load(reader)", span="75-75"];
m12_15 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="QuantityPortfolioTarget.cs", label="var order = CreateOrderFromJObject(jObject)", span="77-77"];
m12_16 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="QuantityPortfolioTarget.cs", label="return order;", span="79-79"];
m12_17 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="QuantityPortfolioTarget.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="73-73"];
m12_12 [cluster="System.NotImplementedException.NotImplementedException(string)", file="QuantityPortfolioTarget.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m12_57 [cluster="lambda expression", file="QuantityPortfolioTarget.cs", label="Entry lambda expression", span="104-104"];
m12_0 [cluster="lambda expression", file="QuantityPortfolioTarget.cs", label="Entry lambda expression", span="30-31"];
m12_2 [cluster="lambda expression", file="QuantityPortfolioTarget.cs", label="Exit lambda expression", span="30-31"];
m12_58 [cluster="lambda expression", file="QuantityPortfolioTarget.cs", label="x.Value<string>()", span="104-104"];
m12_59 [cluster="lambda expression", file="QuantityPortfolioTarget.cs", label="Exit lambda expression", span="104-104"];
m12_55 [cluster="Symbol.cstr", file="QuantityPortfolioTarget.cs", label="Entry Symbol.cstr", span=""];
m12_56 [cluster="Unk.Create", file="QuantityPortfolioTarget.cs", label="Entry Unk.Create", span=""];
m12_50 [cluster="Unk.ToList", file="QuantityPortfolioTarget.cs", label="Entry Unk.ToList", span=""];
m12_9 [cluster="QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="61-61"];
m12_10 [cluster="QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="QuantityPortfolioTarget.cs", label="throw new NotImplementedException(''The OrderJsonConverter does not implement a WriteJson method;.'');", span="63-63"];
m12_11 [cluster="QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="QuantityPortfolioTarget.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="61-61"];
m12_47 [cluster="Unk.>", file="QuantityPortfolioTarget.cs", label="Entry Unk.>", span=""];
m12_79 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m12_8 [cluster="System.Type.IsAssignableFrom(System.Type)", file="QuantityPortfolioTarget.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m12_84 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="36-36"];
m12_82 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51"];
m12_85 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", span="29-29"];
m12_20 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="87-87"];
m12_21 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="var orderType = (OrderType) jObject[''Type''].Value<int>()", span="90-90"];
m12_22 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="var order = CreateOrder(orderType, jObject)", span="91-91"];
m12_23 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.Id = jObject[''Id''].Value<int>()", span="94-94"];
m12_24 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.Status = (OrderStatus) jObject[''Status''].Value<int>()", span="95-95"];
m12_25 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.Time = jObject[''Time''].Value<DateTime>()", span="96-96"];
m12_26 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.Tag = jObject[''Tag''].Value<string>()", span="97-97"];
m12_27 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.Quantity = jObject[''Quantity''].Value<int>()", span="99-99"];
m12_28 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.Quantity = jObject[''Quantity''].Value<decimal>()", span="100-100"];
m12_29 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.Price = jObject[''Price''].Value<decimal>()", span="102-102"];
m12_30 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="var securityType = (SecurityType) jObject[''SecurityType''].Value<int>()", span="103-103"];
m12_31 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.BrokerId = jObject[''BrokerId''].Select(x => x.Value<string>()).ToList()", span="104-104"];
m12_32 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.ContingentId = jObject[''ContingentId''].Value<int>()", span="105-105"];
m12_36 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="jObject.SelectTokens(''Symbol.ID'').Any()", span="110-110"];
m12_37 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="var sid = SecurityIdentifier.Parse(jObject.SelectTokens(''Symbol.ID'').Single().Value<string>())", span="112-112"];
m12_38 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="113-113"];
m12_40 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="jObject.SelectTokens(''Symbol.Value'').Any()", span="116-116"];
m12_41 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="119-119"];
m12_43 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="var tickerstring = jObject[''Symbol''].Value<string>()", span="124-124"];
m12_39 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.Symbol = new Symbol(sid, ticker)", span="114-114"];
m12_42 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.Symbol = Symbol.Create(ticker, securityType, market)", span="120-120"];
m12_44 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="order.Symbol = Symbol.Create(tickerstring, securityType, market)", span="125-125"];
m12_45 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="return order;", span="127-127"];
m12_34 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="securityType == SecurityType.Forex", span="108-108"];
m12_33 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="var market = Market.USA", span="107-107"];
m12_35 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="market = Market.FXCM", span="108-108"];
m12_46 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="QuantityPortfolioTarget.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="87-87"];
m12_52 [cluster="Unk.Any", file="QuantityPortfolioTarget.cs", label="Entry Unk.Any", span=""];
m12_81 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m12_51 [cluster="Unk.SelectTokens", file="QuantityPortfolioTarget.cs", label="Entry Unk.SelectTokens", span=""];
m12_18 [cluster="Unk.Load", file="QuantityPortfolioTarget.cs", label="Entry Unk.Load", span=""];
m12_83 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m12_86 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="QuantityPortfolioTarget.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m12_54 [cluster="Unk.Parse", file="QuantityPortfolioTarget.cs", label="Entry Unk.Parse", span=""];
m12_48 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", span="133-133"];
m12_60 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="Order order", span="135-135"];
m12_61 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label=orderType, span="136-136"];
m12_65 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="order = new LimitOrder {LimitPrice = jObject[''LimitPrice''].Value<decimal>()}", span="143-143"];
m12_67 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="order = new StopMarketOrder\r\n                    {\r\n                        StopPrice = jObject[''StopPrice''].Value<decimal>()\r\n                    }", span="147-150"];
m12_69 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="order = new StopLimitOrder\r\n                    {\r\n                        LimitPrice = jObject[''LimitPrice''].Value<decimal>(),\r\n                        StopPrice = jObject[''StopPrice''].Value<decimal>()\r\n                    }", span="154-158"];
m12_62 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="OrderType.Market", span="138-138"];
m12_64 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="OrderType.Limit", span="142-142"];
m12_66 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="OrderType.StopMarket", span="146-146"];
m12_68 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="OrderType.StopLimit", span="153-153"];
m12_70 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="OrderType.MarketOnOpen", span="161-161"];
m12_72 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="OrderType.MarketOnClose", span="165-165"];
m12_74 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="OrderType.OptionExercise", span="169-169"];
m12_76 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="throw new ArgumentOutOfRangeException();", span="174-174"];
m12_63 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="order = new MarketOrder()", span="139-139"];
m12_71 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="order = new MarketOnOpenOrder()", span="162-162"];
m12_73 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="order = new MarketOnCloseOrder()", span="166-166"];
m12_75 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="order = new OptionExerciseOrder()", span="170-170"];
m12_77 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="return order;", span="176-176"];
m12_78 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="QuantityPortfolioTarget.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", span="133-133"];
m12_49 [cluster="Unk.Select", file="QuantityPortfolioTarget.cs", label="Entry Unk.Select", span=""];
m12_3 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m12_5 [cluster="QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", file="QuantityPortfolioTarget.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", span="52-52"];
m12_7 [cluster="QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", file="QuantityPortfolioTarget.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", span="52-52"];
m12_87 [file="QuantityPortfolioTarget.cs", label="QuantConnect.Orders.OrderJsonConverter", span=""];
m13_12 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31"];
m13_9 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="58-58"];
m13_10 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs", label="NotifiedSecurityChanged.UpdateCollection(_securities, changes)", span="60-60"];
m13_11 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="58-58"];
m13_8 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", span="28-28"];
m13_0 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="SimplePortfolioConstructionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="38-38"];
m13_1 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="SimplePortfolioConstructionModel.cs", label="_securities.Count == 0", span="40-40"];
m13_6 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs", label="yield return PortfolioTarget.Percent(signal.Symbol, target);", prediction=16, span="49-49"];
m13_4 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs", label=signals, prediction=16, span="46-46"];
m13_3 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="SimplePortfolioConstructionModel.cs", label="var percent = 1m / _securities.Count", span="45-45"];
m13_5 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs", label="var target = (int)signal.Direction * percent", prediction=18, span="48-48"];
m13_7 [cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", file="SimplePortfolioConstructionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>)", span="38-38"];
m13_13 [file="SimplePortfolioConstructionModel.cs", label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel", span=""];
m1_17 -> m1_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_17 -> m1_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_17 -> m1_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_20 -> m1_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_20 -> m1_25  [color=darkseagreen4, key=1, label=backtestsList, style=dashed];
m1_20 -> m1_26  [color=darkseagreen4, key=1, label=backtestsList, style=dashed];
m1_22 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_24 -> m1_26  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_27 -> m1_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_28 -> m1_6  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m1_28 -> m1_7  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m1_28 -> m1_8  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m1_28 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m1_28 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m1_122 -> m1_124  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_122 -> m1_126  [color=darkseagreen4, key=1, label="QuantConnect.Api.Backtest", style=dashed];
m1_67 -> m1_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_10 -> m1_50  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_51 -> m1_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_51 -> m1_54  [color=darkseagreen4, key=1, label=projectNames, style=dashed];
m1_51 -> m1_55  [color=darkseagreen4, key=1, label=projectNames, style=dashed];
m1_55 -> m1_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_129 -> m1_131  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_129 -> m1_133  [color=darkseagreen4, key=1, label="QuantConnect.Api.Backtest", style=dashed];
m1_93 -> m1_113  [color=darkseagreen4, key=1, label=projectId, style=dashed];
m1_93 -> m1_103  [color=darkseagreen4, key=1, label=projectId, style=dashed];
m1_94 -> m1_113  [color=darkseagreen4, key=1, label=backtestId, style=dashed];
m1_94 -> m1_105  [color=darkseagreen4, key=1, label=backtestId, style=dashed];
m1_98 -> m1_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_96 -> m1_101  [color=darkseagreen4, key=1, label=deleteResult, style=dashed];
m1_104 -> m1_106  [color=darkseagreen4, key=1, label=item, style=dashed];
m1_116 -> m1_118  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_141 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_19  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_23  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_50  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_53  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_97  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_104  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_106  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_125  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_132  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_141 -> m1_139  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolWindow1Control", style=dashed];
m1_143 -> m1_113  [color=darkseagreen4, key=1, label=projectId, style=dashed];
m1_144 -> m1_113  [color=darkseagreen4, key=1, label=backtestId, style=dashed];
m3_81 -> m3_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_81 -> m3_85  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m3_108 -> m3_111  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m3_108 -> m3_115  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_108 -> m3_122  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_96 -> m3_99  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_96 -> m3_101  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_26 -> m3_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_26 -> m3_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_26 -> m3_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_26 -> m3_58  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_135 -> m3_94  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_135 -> m3_97  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_135 -> m3_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m3_135 -> m3_101  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m4_1 -> m4_5  [color=darkseagreen4, key=1, label=target, style=dashed];
m4_2 -> m4_11  [color=green, key=1, label="lambda expression", style=dashed];
m4_3 -> m4_5  [color=green, key=1, label=quantity, style=dashed];
m7_10 -> m7_20  [color=darkseagreen4, key=1, label=universeSettings, style=dashed];
m7_11 -> m7_20  [color=darkseagreen4, key=1, label=securityInitializer, style=dashed];
m7_14 -> m7_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_14 -> m7_20  [color=darkseagreen4, key=1, label=grp, style=dashed];
m7_31 -> m7_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
m10_26 -> m10_29  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_26 -> m10_31  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_26 -> m10_32  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_2 -> m10_5  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_2 -> m10_7  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_16 -> m10_19  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_16 -> m10_21  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_16 -> m10_22  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_34 -> m10_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.ForexExchange", style=dashed];
m11_22 -> m11_24  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_28 -> m11_24  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m11_28 -> m11_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m11_28 -> m11_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m11_28 -> m11_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m12_20 -> m12_36  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m12_20 -> m12_40  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m12_22 -> m12_45  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_30 -> m12_34  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m12_31 -> m12_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_48 -> m12_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m13_0 -> m13_4  [color=green, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Signals.Signal>", style=dashed];
m13_4 -> m13_6  [color=green, key=1, label=signal, style=dashed];
m13_13 -> m13_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel", style=dashed];
m13_13 -> m13_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel", style=dashed];
}
