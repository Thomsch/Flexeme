digraph  {
m1_9 [label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="69-69", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantSignalModel.cs"];
m1_10 [label="return _securities.Select(security => new Signal(\r\n                security.Symbol,\r\n                _type,\r\n                _direction,\r\n                _percentChange,\r\n                _confidence,\r\n                _period\r\n            ));", span="71-78", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=1, file="ConstantSignalModel.cs"];
m1_11 [label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="69-69", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantSignalModel.cs"];
m1_16 [label="Entry Signal.cstr", span="", cluster="Signal.cstr", file="ConstantSignalModel.cs"];
m1_2 [label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(SignalType, Direction, double?, double?, System.TimeSpan?)", span="54-54", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(SignalType, Direction, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs"];
m1_3 [label="_type = type", span="56-56", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(SignalType, Direction, double?, double?, System.TimeSpan?)", color=green, community=0, file="ConstantSignalModel.cs"];
m1_4 [label="_direction = direction", span="57-57", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(SignalType, Direction, double?, double?, System.TimeSpan?)", color=green, community=0, file="ConstantSignalModel.cs"];
m1_5 [label="_percentChange = percentChange", span="58-58", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(SignalType, Direction, double?, double?, System.TimeSpan?)", color=green, community=0, file="ConstantSignalModel.cs"];
m1_6 [label="_confidence = confidence", span="59-59", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(SignalType, Direction, double?, double?, System.TimeSpan?)", color=green, community=0, file="ConstantSignalModel.cs"];
m1_7 [label="_period = period", span="60-60", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(SignalType, Direction, double?, double?, System.TimeSpan?)", color=green, community=0, file="ConstantSignalModel.cs"];
m1_8 [label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(SignalType, Direction, double?, double?, System.TimeSpan?)", span="54-54", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.ConstantSignalModel(SignalType, Direction, double?, double?, System.TimeSpan?)", file="ConstantSignalModel.cs"];
m1_20 [label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantSignalModel.cs"];
m1_12 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ConstantSignalModel.cs"];
m1_17 [label="Entry QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="86-86", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantSignalModel.cs"];
m1_18 [label="NotifiedSecurityChanged.UpdateCollection(_securities, changes)", span="88-88", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="ConstantSignalModel.cs"];
m1_19 [label="Exit QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="86-86", cluster="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantSignalModel.cs"];
m1_13 [label="Entry lambda expression", span="71-78", cluster="lambda expression", file="ConstantSignalModel.cs"];
m1_14 [label="new Signal(\r\n                security.Symbol,\r\n                _type,\r\n                _direction,\r\n                _percentChange,\r\n                _confidence,\r\n                _period\r\n            )", span="71-78", cluster="lambda expression", color=green, community=1, file="ConstantSignalModel.cs"];
m1_15 [label="Exit lambda expression", span="71-78", cluster="lambda expression", file="ConstantSignalModel.cs"];
m1_21 [label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel", span="", file="ConstantSignalModel.cs"];
m14_40 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="PercentPortfolioTarget.cs"];
m14_26 [label="Entry Unk.Take", span="", cluster="Unk.Take", file="PercentPortfolioTarget.cs"];
m14_41 [label="Entry QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="121-121", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PercentPortfolioTarget.cs"];
m14_42 [label="_changes = changes", span="123-123", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PercentPortfolioTarget.cs"];
m14_43 [label="Exit QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="121-121", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PercentPortfolioTarget.cs"];
m14_39 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="PercentPortfolioTarget.cs"];
m14_8 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="36-36", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="PercentPortfolioTarget.cs"];
m14_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="PercentPortfolioTarget.cs"];
m14_20 [label="Entry Unk.AddUniverse", span="", cluster="Unk.AddUniverse", file="PercentPortfolioTarget.cs"];
m14_4 [label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int)", span="53-53", cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int)", file="PercentPortfolioTarget.cs"];
m14_18 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="PercentPortfolioTarget.cs"];
m14_9 [label="Entry QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.Initialize()", span="68-68", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.Initialize()", file="PercentPortfolioTarget.cs"];
m14_10 [label="UniverseSettings.Leverage = 2.0m", span="70-70", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.Initialize()", file="PercentPortfolioTarget.cs"];
m14_11 [label="UniverseSettings.Resolution = Resolution.Daily", span="71-71", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.Initialize()", file="PercentPortfolioTarget.cs"];
m14_12 [label="SetStartDate(2010, 01, 01)", span="73-73", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.Initialize()", file="PercentPortfolioTarget.cs"];
m14_13 [label="SetEndDate(2015, 01, 01)", span="74-74", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.Initialize()", file="PercentPortfolioTarget.cs"];
m14_14 [label="SetCash(100*1000)", span="75-75", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.Initialize()", file="PercentPortfolioTarget.cs"];
m14_15 [label="AddUniverse(coarse =>\r\n            {\r\n                return (from cf in coarse\r\n                        // grab th SelectionData instance for this symbol\r\n                        let avg = _averages.GetOrAdd(cf.Symbol, sym => new SelectionData())\r\n                        // Update returns true when the indicators are ready, so don't accept until they are\r\n                        where avg.Update(cf.EndTime, cf.Price)\r\n                        // only pick symbols who have their 50 day ema over their 100 day ema\r\n                        where avg.Fast > avg.Slow*(1 + Tolerance)\r\n                        // prefer symbols with a larger delta by percentage between the two averages\r\n                        orderby avg.ScaledDelta descending \r\n                        // we only need to return the symbol and return 'Count' symbols\r\n                        select cf.Symbol).Take(Count);\r\n            })", span="77-90", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.Initialize()", file="PercentPortfolioTarget.cs"];
m14_16 [label="Exit QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.Initialize()", span="68-68", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.Initialize()", file="PercentPortfolioTarget.cs"];
m14_0 [label="Entry QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData.SelectionData()", span="46-46", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData.SelectionData()", file="PercentPortfolioTarget.cs"];
m14_1 [label="Fast = new ExponentialMovingAverage(100)", span="48-48", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData.SelectionData()", color=green, community=0, file="PercentPortfolioTarget.cs"];
m14_2 [label="Slow = new ExponentialMovingAverage(300)", span="49-49", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData.SelectionData()", color=green, community=0, file="PercentPortfolioTarget.cs"];
m14_3 [label="Exit QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData.SelectionData()", span="46-46", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData.SelectionData()", file="PercentPortfolioTarget.cs"];
m14_17 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="PercentPortfolioTarget.cs"];
m14_5 [label="Entry QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData.Update(System.DateTime, decimal)", span="59-59", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData.Update(System.DateTime, decimal)", file="PercentPortfolioTarget.cs"];
m14_6 [label="return Fast.Update(time, value) && Slow.Update(time, value);", span="61-61", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData.Update(System.DateTime, decimal)", color=green, community=0, file="PercentPortfolioTarget.cs"];
m14_7 [label="Exit QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData.Update(System.DateTime, decimal)", span="59-59", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData.Update(System.DateTime, decimal)", file="PercentPortfolioTarget.cs"];
m14_30 [label="Entry QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="97-97", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="PercentPortfolioTarget.cs"];
m14_31 [label="_changes == SecurityChanges.None", span="99-99", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="PercentPortfolioTarget.cs"];
m14_33 [label="_changes.RemovedSecurities", span="102-102", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="PercentPortfolioTarget.cs"];
m14_35 [label="Liquidate(security.Symbol)", span="106-106", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="PercentPortfolioTarget.cs"];
m14_36 [label="_changes.AddedSecurities", span="111-111", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="PercentPortfolioTarget.cs"];
m14_37 [label="SetHoldings(security.Symbol, TargetPercent)", span="113-113", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="PercentPortfolioTarget.cs"];
m14_32 [label="return;", span="99-99", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="PercentPortfolioTarget.cs"];
m14_34 [label="security.Invested", span="104-104", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="PercentPortfolioTarget.cs"];
m14_38 [label="Exit QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="97-97", cluster="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="PercentPortfolioTarget.cs"];
m14_25 [label="Entry Unk.Update", span="", cluster="Unk.Update", file="PercentPortfolioTarget.cs"];
m14_24 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)", file="PercentPortfolioTarget.cs"];
m14_21 [label="Entry lambda expression", span="77-90", cluster="lambda expression", file="PercentPortfolioTarget.cs"];
m14_28 [label="new SelectionData()", span="81-81", cluster="lambda expression", file="PercentPortfolioTarget.cs"];
m14_27 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="PercentPortfolioTarget.cs"];
m14_29 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="PercentPortfolioTarget.cs"];
m14_22 [label="return (from cf in coarse\r\n                        // grab th SelectionData instance for this symbol\r\n                        let avg = _averages.GetOrAdd(cf.Symbol, sym => new SelectionData())\r\n                        // Update returns true when the indicators are ready, so don't accept until they are\r\n                        where avg.Update(cf.EndTime, cf.Price)\r\n                        // only pick symbols who have their 50 day ema over their 100 day ema\r\n                        where avg.Fast > avg.Slow*(1 + Tolerance)\r\n                        // prefer symbols with a larger delta by percentage between the two averages\r\n                        orderby avg.ScaledDelta descending \r\n                        // we only need to return the symbol and return 'Count' symbols\r\n                        select cf.Symbol).Take(Count);", span="79-89", cluster="lambda expression", file="PercentPortfolioTarget.cs"];
m14_23 [label="Exit lambda expression", span="77-90", cluster="lambda expression", file="PercentPortfolioTarget.cs"];
m14_44 [label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData", span="", file="PercentPortfolioTarget.cs"];
m14_45 [label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm", span="", file="PercentPortfolioTarget.cs"];
m15_3 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.PercentPortfolioTarget(QuantConnect.Symbol, decimal)", span="39-39", cluster="QuantConnect.Algorithm.Framework.Portfolio.PercentPortfolioTarget.PercentPortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_7 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", span="38-38", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_0 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", span="28-28", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_1 [label="return new PercentPortfolioTarget(symbol, percent);", span="30-30", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", color=green, community=0, file="PortfolioTarget.cs"];
m15_2 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", span="28-28", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Percent(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_4 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", span="39-39", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m15_5 [label="return new QuantityPortfolioTarget(symbol, quantity);", span="41-41", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", color=green, community=0, file="PortfolioTarget.cs"];
m15_6 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", span="39-39", cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTarget.Quantity(QuantConnect.Symbol, decimal)", file="PortfolioTarget.cs"];
m16_85 [label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", span="194-194", cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="QCAlgorithm.cs"];
m16_119 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Exit()", span="175-175", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Exit()", file="QCAlgorithm.cs"];
m16_120 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Exit()", span="175-175", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Exit()", file="QCAlgorithm.cs"];
m16_173 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="308-308", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs"];
m16_174 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="308-308", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Securities.CashBook, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs"];
m16_82 [label="Entry QuantConnect.Data.Market.Delistings.Delistings()", span="28-28", cluster="QuantConnect.Data.Market.Delistings.Delistings()", file="QCAlgorithm.cs"];
m16_208 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderById(int)", span="391-391", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderById(int)", file="QCAlgorithm.cs"];
m16_209 [label="throw new NotImplementedException();", span="393-393", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderById(int)", file="QCAlgorithm.cs"];
m16_210 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderById(int)", span="391-391", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderById(int)", file="QCAlgorithm.cs"];
m16_52 [label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="QCAlgorithm.cs"];
m16_221 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="411-411", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.cs"];
m16_222 [label="throw new NotImplementedException();", span="413-413", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.cs"];
m16_223 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="411-411", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="QCAlgorithm.cs"];
m16_39 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="106-106", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="QCAlgorithm.cs"];
m16_49 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetEnumerator()", span="93-93", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetEnumerator()", file="QCAlgorithm.cs"];
m16_50 [label="return _timeSlices.GetEnumerator();", span="95-95", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetEnumerator()", file="QCAlgorithm.cs"];
m16_51 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetEnumerator()", span="93-93", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetEnumerator()", file="QCAlgorithm.cs"];
m16_133 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", span="211-211", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", file="QCAlgorithm.cs"];
m16_134 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", span="211-211", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Initialize(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager)", file="QCAlgorithm.cs"];
m16_202 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.SetTime(System.DateTime)", span="375-375", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.SetTime(System.DateTime)", file="QCAlgorithm.cs"];
m16_203 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.SetTime(System.DateTime)", span="375-375", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.SetTime(System.DateTime)", file="QCAlgorithm.cs"];
m16_100 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.cs"];
m16_215 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="401-401", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.cs"];
m16_216 [label="throw new NotImplementedException();", span="403-403", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.cs"];
m16_217 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="401-401", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="QCAlgorithm.cs"];
m16_102 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QCAlgorithm.cs"];
m16_38 [label="Entry QuantConnect.Api.Api.Api()", span="30-30", cluster="QuantConnect.Api.Api.Api()", file="QCAlgorithm.cs"];
m16_104 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="QCAlgorithm.cs"];
m16_125 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.ProcessSynchronousEvents()", span="192-192", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m16_126 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.ProcessSynchronousEvents()", span="192-192", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m16_123 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.OnAfterAlgorithmInitialized(QuantConnect.Interfaces.IAlgorithm)", span="188-188", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.OnAfterAlgorithmInitialized(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.cs"];
m16_124 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.OnAfterAlgorithmInitialized(QuantConnect.Interfaces.IAlgorithm)", span="188-188", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.OnAfterAlgorithmInitialized(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.cs"];
m16_80 [label="Entry QuantConnect.Data.Market.Splits.Splits()", span="28-28", cluster="QuantConnect.Data.Market.Splits.Splits()", file="QCAlgorithm.cs"];
m16_75 [label="Entry QuantConnect.Data.Market.TradeBars.TradeBars()", span="27-27", cluster="QuantConnect.Data.Market.TradeBars.TradeBars()", file="QCAlgorithm.cs"];
m16_31 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler()", span="32-32", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler()", file="QCAlgorithm.cs"];
m16_189 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", span="346-346", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", file="QCAlgorithm.cs"];
m16_190 [label="return id;", span="348-348", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", file="QCAlgorithm.cs"];
m16_191 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", span="346-346", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SaveLogs(string, System.Collections.Generic.IEnumerable<string>)", file="QCAlgorithm.cs"];
m16_56 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", span="103-103", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_57 [label="var bars = new TradeBars()", span="105-105", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_71 [label="yield return timeSlice;", span="121-121", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_58 [label="var quotes = new QuoteBars()", span="106-106", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_69 [label="var slice = new Slice(default(DateTime), _data, bars, quotes, ticks, options, futures, splits, dividends, delistings, symbolChanges)", span="119-119", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_59 [label="var ticks = new Ticks()", span="107-107", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_60 [label="var options = new OptionChains()", span="108-108", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_61 [label="var futures = new FuturesChains()", span="109-109", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_62 [label="var splits = new Splits()", span="110-110", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_63 [label="var dividends = new Dividends()", span="111-111", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_64 [label="var delistings = new Delistings()", span="112-112", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_65 [label="var symbolChanges = new SymbolChangedEvents()", span="113-113", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_66 [label="var dataFeedPackets = new List<DataFeedPacket>()", span="114-114", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_67 [label="var customData = new List<UpdateData<Security>>()", span="115-115", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_70 [label="var timeSlice = new TimeSlice(_frontierUtc, _data.Count, slice, dataFeedPackets, securitiesUpdateData, _consolidatorUpdateData, customData, changes)", span="120-120", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_68 [label="var changes = SecurityChanges.None", span="116-116", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_72 [label="_frontierUtc += FrontierStepSize", span="122-122", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_73 [label="_frontierUtc <= _endTimeUtc", span="124-124", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_74 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", span="103-103", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.GetTimeSlices()", file="QCAlgorithm.cs"];
m16_84 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.cs"];
m16_86 [label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="75-75", cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.cs"];
m16_141 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Run()", span="244-244", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Run()", file="QCAlgorithm.cs"];
m16_142 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Run()", span="244-244", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Run()", file="QCAlgorithm.cs"];
m16_37 [label="Entry QuantConnect.Messaging.Messaging.Messaging()", span="29-29", cluster="QuantConnect.Messaging.Messaging.Messaging()", file="QCAlgorithm.cs"];
m16_114 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="QCAlgorithm.cs"];
m16_115 [label="d.Symbol == configuration.Symbol", span="167-167", cluster="lambda expression", file="QCAlgorithm.cs"];
m16_116 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="QCAlgorithm.cs"];
m16_175 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="318-318", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="QCAlgorithm.cs"];
m16_176 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="318-318", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="QCAlgorithm.cs"];
m16_48 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="QCAlgorithm.cs"];
m16_81 [label="Entry QuantConnect.Data.Market.Dividends.Dividends()", span="28-28", cluster="QuantConnect.Data.Market.Dividends.Dividends()", file="QCAlgorithm.cs"];
m16_157 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleEquity(System.DateTime, decimal)", span="276-276", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleEquity(System.DateTime, decimal)", file="QCAlgorithm.cs"];
m16_158 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleEquity(System.DateTime, decimal)", span="276-276", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleEquity(System.DateTime, decimal)", file="QCAlgorithm.cs"];
m16_187 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.ProcessSynchronousEvents(bool)", span="342-342", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.ProcessSynchronousEvents(bool)", file="QCAlgorithm.cs"];
m16_188 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.ProcessSynchronousEvents(bool)", span="342-342", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.ProcessSynchronousEvents(bool)", file="QCAlgorithm.cs"];
m16_147 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="256-256", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="QCAlgorithm.cs"];
m16_148 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="256-256", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="QCAlgorithm.cs"];
m16_40 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="209-209", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="QCAlgorithm.cs"];
m16_76 [label="Entry QuantConnect.Data.Market.QuoteBars.QuoteBars()", span="27-27", cluster="QuantConnect.Data.Market.QuoteBars.QuoteBars()", file="QCAlgorithm.cs"];
m16_33 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.NullAlphaHandler()", span="180-180", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.NullAlphaHandler()", file="QCAlgorithm.cs"];
m16_101 [label="Entry QuantConnect.Lean.Engine.DataFeeds.UpdateData<T>.UpdateData(T, System.Type, System.Collections.Generic.IReadOnlyList<QuantConnect.Data.BaseData>)", span="49-49", cluster="QuantConnect.Lean.Engine.DataFeeds.UpdateData<T>.UpdateData(T, System.Type, System.Collections.Generic.IReadOnlyList<QuantConnect.Data.BaseData>)", file="QCAlgorithm.cs"];
m16_204 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.ScanPastEvents(System.DateTime)", span="379-379", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.ScanPastEvents(System.DateTime)", file="QCAlgorithm.cs"];
m16_205 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.ScanPastEvents(System.DateTime)", span="379-379", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.ScanPastEvents(System.DateTime)", file="QCAlgorithm.cs"];
m16_29 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", span="25-25", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler()", file="QCAlgorithm.cs"];
m16_155 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="272-272", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="QCAlgorithm.cs"];
m16_156 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="272-272", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="QCAlgorithm.cs"];
m16_97 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="618-618", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.cs"];
m16_227 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="424-424", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m16_228 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="424-424", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m16_183 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Exit()", span="334-334", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Exit()", file="QCAlgorithm.cs"];
m16_184 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Exit()", span="334-334", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Exit()", file="QCAlgorithm.cs"];
m16_26 [label="Entry QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", span="81-81", cluster="QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", file="QCAlgorithm.cs"];
m16_45 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="QCAlgorithm.cs"];
m16_44 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="130-130", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QCAlgorithm.cs"];
m16_87 [label="_frontierUtc = algorithm.StartDate.ConvertToUtc(algorithm.TimeZone)", span="137-137", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QCAlgorithm.cs"];
m16_88 [label="_endTimeUtc = algorithm.EndDate.ConvertToUtc(algorithm.TimeZone)", span="138-138", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QCAlgorithm.cs"];
m16_89 [label="algorithm.Securities", span="139-139", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QCAlgorithm.cs"];
m16_90 [label="var security = kvp.Value", span="141-141", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QCAlgorithm.cs"];
m16_95 [label="_timeSlices.AddRange(GetTimeSlices().Take(int.MaxValue/1000))", span="152-152", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QCAlgorithm.cs"];
m16_91 [label="var tick = new Tick\r\n                    {\r\n                        Symbol = security.Symbol,\r\n                        EndTime = _frontierUtc.ConvertFromUtc(security.Exchange.TimeZone)\r\n                    }", span="142-146", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QCAlgorithm.cs"];
m16_93 [label="securitiesUpdateData.Add(new UpdateData<Security>(security, typeof(Tick), new BaseData[]{tick}))", span="148-148", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QCAlgorithm.cs"];
m16_94 [label="_consolidatorUpdateData.Add(new UpdateData<SubscriptionDataConfig>(security.Subscriptions.First(), typeof(Tick), new BaseData[]{tick}))", span="149-149", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QCAlgorithm.cs"];
m16_92 [label="_data.Add(tick)", span="147-147", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QCAlgorithm.cs"];
m16_96 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="130-130", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="QCAlgorithm.cs"];
m16_212 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderByBrokerageId(string)", span="396-396", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderByBrokerageId(string)", file="QCAlgorithm.cs"];
m16_213 [label="throw new NotImplementedException();", span="398-398", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderByBrokerageId(string)", file="QCAlgorithm.cs"];
m16_214 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderByBrokerageId(string)", span="396-396", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderByBrokerageId(string)", file="QCAlgorithm.cs"];
m16_137 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Update()", span="222-222", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Update()", file="QCAlgorithm.cs"];
m16_138 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Update()", span="222-222", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Update()", file="QCAlgorithm.cs"];
m16_99 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="606-606", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.cs"];
m16_78 [label="Entry QuantConnect.Data.Market.OptionChains.OptionChains()", span="27-27", cluster="QuantConnect.Data.Market.OptionChains.OptionChains()", file="QCAlgorithm.cs"];
m16_161 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleBenchmark(System.DateTime, decimal)", span="284-284", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleBenchmark(System.DateTime, decimal)", file="QCAlgorithm.cs"];
m16_162 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleBenchmark(System.DateTime, decimal)", span="284-284", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleBenchmark(System.DateTime, decimal)", file="QCAlgorithm.cs"];
m16_109 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", span="165-165", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", file="QCAlgorithm.cs"];
m16_110 [label="_data.RemoveAll(d => d.Symbol == configuration.Symbol)", span="167-167", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", file="QCAlgorithm.cs"];
m16_111 [label="return true;", span="168-168", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", file="QCAlgorithm.cs"];
m16_112 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", span="165-165", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", file="QCAlgorithm.cs"];
m16_53 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.System.Collections.IEnumerable.GetEnumerator()", span="98-98", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.System.Collections.IEnumerable.GetEnumerator()", file="QCAlgorithm.cs"];
m16_54 [label="return GetEnumerator();", span="100-100", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.System.Collections.IEnumerable.GetEnumerator()", file="QCAlgorithm.cs"];
m16_55 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.System.Collections.IEnumerable.GetEnumerator()", span="98-98", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.System.Collections.IEnumerable.GetEnumerator()", file="QCAlgorithm.cs"];
m16_153 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.RuntimeError(string, string)", span="268-268", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.RuntimeError(string, string)", file="QCAlgorithm.cs"];
m16_154 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.RuntimeError(string, string)", span="268-268", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.RuntimeError(string, string)", file="QCAlgorithm.cs"];
m16_27 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="QCAlgorithm.cs"];
m16_231 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Exit()", span="432-432", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Exit()", file="QCAlgorithm.cs"];
m16_232 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Exit()", span="432-432", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Exit()", file="QCAlgorithm.cs"];
m16_34 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="QCAlgorithm.cs"];
m16_192 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SaveResults(string, QuantConnect.Result)", span="351-351", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SaveResults(string, QuantConnect.Result)", file="QCAlgorithm.cs"];
m16_193 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SaveResults(string, QuantConnect.Result)", span="351-351", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SaveResults(string, QuantConnect.Result)", file="QCAlgorithm.cs"];
m16_103 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="QCAlgorithm.cs"];
m16_211 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="QCAlgorithm.cs"];
m16_43 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="36-36", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="QCAlgorithm.cs"];
m16_36 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="501-501", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs"];
m16_25 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="109-109", cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="QCAlgorithm.cs"];
m16_167 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="296-296", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.cs"];
m16_168 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="296-296", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.cs"];
m16_229 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Run()", span="428-428", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Run()", file="QCAlgorithm.cs"];
m16_230 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Run()", span="428-428", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Run()", file="QCAlgorithm.cs"];
m16_139 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="235-235", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="QCAlgorithm.cs"];
m16_140 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="235-235", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="QCAlgorithm.cs"];
m16_127 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Run()", span="196-196", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Run()", file="QCAlgorithm.cs"];
m16_128 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Run()", span="196-196", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Run()", file="QCAlgorithm.cs"];
m16_121 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi)", span="184-184", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi)", file="QCAlgorithm.cs"];
m16_122 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi)", span="184-184", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi)", file="QCAlgorithm.cs"];
m16_41 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="503-503", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.cs"];
m16_32 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.NullLeanManager()", span="205-205", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.NullLeanManager()", file="QCAlgorithm.cs"];
m16_46 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="QCAlgorithm.cs"];
m16_35 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="491-491", cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.cs"];
m16_185 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.PurgeQueue()", span="338-338", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.PurgeQueue()", file="QCAlgorithm.cs"];
m16_186 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.PurgeQueue()", span="338-338", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.PurgeQueue()", file="QCAlgorithm.cs"];
m16_218 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderTicket(int)", span="406-406", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderTicket(int)", file="QCAlgorithm.cs"];
m16_219 [label="throw new NotImplementedException();", span="408-408", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderTicket(int)", file="QCAlgorithm.cs"];
m16_220 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderTicket(int)", span="406-406", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.GetOrderTicket(int)", file="QCAlgorithm.cs"];
m16_206 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Exit()", span="383-383", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Exit()", file="QCAlgorithm.cs"];
m16_207 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Exit()", span="383-383", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Exit()", file="QCAlgorithm.cs"];
m16_151 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.ErrorMessage(string, string)", span="264-264", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.ErrorMessage(string, string)", file="QCAlgorithm.cs"];
m16_152 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.ErrorMessage(string, string)", span="264-264", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.ErrorMessage(string, string)", file="QCAlgorithm.cs"];
m16_98 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithm.cs"];
m16_77 [label="Entry QuantConnect.Data.Market.Ticks.Ticks()", span="29-29", cluster="QuantConnect.Data.Market.Ticks.Ticks()", file="QCAlgorithm.cs"];
m16_177 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetChartSubscription(string)", span="322-322", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetChartSubscription(string)", file="QCAlgorithm.cs"];
m16_178 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetChartSubscription(string)", span="322-322", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetChartSubscription(string)", file="QCAlgorithm.cs"];
m16_105 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="155-155", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="QCAlgorithm.cs"];
m16_106 [label="_data.Add(new Tick\r\n                {\r\n                    Symbol = request.Security.Symbol,\r\n                    EndTime = _frontierUtc.ConvertFromUtc(request.Configuration.ExchangeTimeZone)\r\n                })", span="157-161", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="QCAlgorithm.cs"];
m16_107 [label="return true;", span="162-162", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="QCAlgorithm.cs"];
m16_108 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="155-155", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="QCAlgorithm.cs"];
m16_129 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Exit()", span="200-200", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Exit()", file="QCAlgorithm.cs"];
m16_130 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Exit()", span="200-200", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullAlphaHandler.Exit()", file="QCAlgorithm.cs"];
m16_165 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="292-292", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="QCAlgorithm.cs"];
m16_166 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="292-292", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="QCAlgorithm.cs"];
m16_159 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SamplePerformance(System.DateTime, decimal)", span="280-280", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SamplePerformance(System.DateTime, decimal)", file="QCAlgorithm.cs"];
m16_160 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SamplePerformance(System.DateTime, decimal)", span="280-280", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SamplePerformance(System.DateTime, decimal)", file="QCAlgorithm.cs"];
m16_163 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="288-288", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="QCAlgorithm.cs"];
m16_164 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="288-288", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="QCAlgorithm.cs"];
m16_28 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.MockDataFeed()", span="81-81", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.MockDataFeed()", file="QCAlgorithm.cs"];
m16_79 [label="Entry QuantConnect.Data.Market.FuturesChains.FuturesChains()", span="27-27", cluster="QuantConnect.Data.Market.FuturesChains.FuturesChains()", file="QCAlgorithm.cs"];
m16_194 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="358-358", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="QCAlgorithm.cs"];
m16_195 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="358-358", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="QCAlgorithm.cs"];
m16_117 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Run()", span="171-171", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Run()", file="QCAlgorithm.cs"];
m16_118 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Run()", span="171-171", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed.Run()", file="QCAlgorithm.cs"];
m16_113 [label="Entry System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", file="QCAlgorithm.cs"];
m16_131 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Dispose()", span="207-207", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Dispose()", file="QCAlgorithm.cs"];
m16_132 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Dispose()", span="207-207", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.Dispose()", file="QCAlgorithm.cs"];
m16_83 [label="Entry QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents()", span="28-28", cluster="QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents()", file="QCAlgorithm.cs"];
m16_198 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="367-367", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="QCAlgorithm.cs"];
m16_199 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="367-367", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="QCAlgorithm.cs"];
m16_224 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", span="416-416", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.cs"];
m16_225 [label="throw new NotImplementedException();", span="418-418", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.cs"];
m16_226 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", span="416-416", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.cs"];
m16_42 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.cs"];
m16_0 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", span="50-50", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_1 [label="var algorithmManager = new AlgorithmManager(false)", span="52-52", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_2 [label="var algorithm = PerformanceBenchmarkAlgorithms.SingleSecurity_Second", span="53-53", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_19 [label="algorithmManager.Run(job, algorithm, feed, transactions, results, realtime, leanManager, alphas, token)", span="73-73", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_3 [label="var job = new BacktestNodePacket(1, 2, ''3'', null, 9m, $''{nameof(AlgorithmManagerTests)}.{nameof(TestAlgorithmManagerSpeed)}'')", span="54-54", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_11 [label="algorithm.Initialize()", span="63-63", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_12 [label="algorithm.PostInitialize()", span="64-64", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_14 [label="results.SetAlgorithm(algorithm)", span="67-67", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_15 [label="transactions.Initialize(algorithm, new BacktestingBrokerage(algorithm), results)", span="68-68", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_16 [label="feed.Initialize(algorithm, job, results, null, null, null)", span="69-69", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_4 [label="var feed = new MockDataFeed()", span="55-55", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_13 [label="results.Initialize(job, new QuantConnect.Messaging.Messaging(), new Api.Api(), feed, new BacktestingSetupHandler(), transactions)", span="66-66", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_5 [label="var transactions = new BacktestingTransactionHandler()", span="56-56", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_17 [label="Log.Trace(''Starting algorithm manager loop to process '' + feed.Count + '' time slices'')", span="71-71", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_21 [label="var thousands = feed.Count / 1000d", span="76-76", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_23 [label="Log.Trace(''COUNT: '' + feed.Count + ''  KPS: '' + thousands/seconds)", span="78-78", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_6 [label="var results = new BacktestingResultHandler()", span="57-57", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_7 [label="var realtime = new BacktestingRealTimeHandler()", span="58-58", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_8 [label="var leanManager = new NullLeanManager()", span="59-59", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_9 [label="var alphas = new NullAlphaHandler()", span="60-60", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_10 [label="var token = new CancellationToken()", span="61-61", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_18 [label="var sw = Stopwatch.StartNew()", span="72-72", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_20 [label="sw.Stop()", span="74-74", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_22 [label="var seconds = sw.Elapsed.TotalSeconds", span="77-77", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_24 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", span="50-50", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.TestAlgorithmManagerSpeed()", file="QCAlgorithm.cs"];
m16_143 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.DebugMessage(string)", span="248-248", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.DebugMessage(string)", file="QCAlgorithm.cs"];
m16_144 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.DebugMessage(string)", span="248-248", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.DebugMessage(string)", file="QCAlgorithm.cs"];
m16_181 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="330-330", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m16_182 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="330-330", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m16_200 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Run()", span="371-371", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Run()", file="QCAlgorithm.cs"];
m16_201 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Run()", span="371-371", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Run()", file="QCAlgorithm.cs"];
m16_47 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", span="138-138", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", file="QCAlgorithm.cs"];
m16_171 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="304-304", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="QCAlgorithm.cs"];
m16_172 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="304-304", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="QCAlgorithm.cs"];
m16_233 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.ProcessSynchronousEvents()", span="436-436", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m16_234 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.ProcessSynchronousEvents()", span="436-436", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullTransactionHandler.ProcessSynchronousEvents()", file="QCAlgorithm.cs"];
m16_30 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="179-179", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", file="QCAlgorithm.cs"];
m16_149 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.LogMessage(string)", span="260-260", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.LogMessage(string)", file="QCAlgorithm.cs"];
m16_150 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.LogMessage(string)", span="260-260", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.LogMessage(string)", file="QCAlgorithm.cs"];
m16_179 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.RuntimeStatistic(string, string)", span="326-326", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.RuntimeStatistic(string, string)", file="QCAlgorithm.cs"];
m16_180 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.RuntimeStatistic(string, string)", span="326-326", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.RuntimeStatistic(string, string)", file="QCAlgorithm.cs"];
m16_145 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SystemDebugMessage(string)", span="252-252", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SystemDebugMessage(string)", file="QCAlgorithm.cs"];
m16_146 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SystemDebugMessage(string)", span="252-252", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SystemDebugMessage(string)", file="QCAlgorithm.cs"];
m16_135 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="218-218", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.cs"];
m16_136 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="218-218", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullLeanManager.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.cs"];
m16_169 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", span="300-300", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", file="QCAlgorithm.cs"];
m16_170 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", span="300-300", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", file="QCAlgorithm.cs"];
m16_196 [label="Entry QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Remove(QuantConnect.Scheduling.ScheduledEvent)", span="362-362", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Remove(QuantConnect.Scheduling.ScheduledEvent)", file="QCAlgorithm.cs"];
m16_197 [label="Exit QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Remove(QuantConnect.Scheduling.ScheduledEvent)", span="362-362", cluster="QuantConnect.Tests.Engine.AlgorithmManagerTests.NullRealTimeHandler.Remove(QuantConnect.Scheduling.ScheduledEvent)", file="QCAlgorithm.cs"];
m16_235 [label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed", span="", file="QCAlgorithm.cs"];
m16_236 [label="QuantConnect.Data.SubscriptionDataConfig", span="", file="QCAlgorithm.cs"];
m17_10 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="QCAlgorithmFramework.cs"];
m17_42 [label="Entry Unk.OnSecuritiesChanged", span="", cluster="Unk.OnSecuritiesChanged", file="QCAlgorithmFramework.cs"];
m17_34 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithmFramework.cs"];
m17_12 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="57-57", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m17_13 [label="PortfolioSelection.CreateUniverses(this)", span="59-59", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_14 [label="AddUniverse(universe)", span="61-61", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_15 [label="base.PostInitialize()", span="64-64", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_16 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="57-57", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="QCAlgorithmFramework.cs"];
m17_31 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithmFramework.cs"];
m17_33 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="33-33", cluster="QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="QCAlgorithmFramework.cs"];
m17_17 [label="Entry Unk.CreateUniverses", span="", cluster="Unk.CreateUniverses", file="QCAlgorithmFramework.cs"];
m17_11 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="QCAlgorithmFramework.cs"];
m17_18 [label="Entry Unk.AddUniverse", span="", cluster="Unk.AddUniverse", file="QCAlgorithmFramework.cs"];
m17_0 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="42-42", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m17_1 [label="var type = GetType()", span="44-44", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_2 [label="var onDataSlice = type.GetMethod(''OnData'', new[] { typeof(Slice) })", span="45-45", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_5 [label="var onSecuritiesChanged = type.GetMethod(''OnSecuritiesChanged'', new[] { typeof(SecurityChanges) })", span="50-50", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_3 [label="onDataSlice.DeclaringType != typeof(QCAlgorithmFramework)", span="46-46", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_6 [label="onSecuritiesChanged.DeclaringType != typeof(QCAlgorithmFramework)", span="51-51", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_4 [label="throw new Exception(''Framework algorithms can not override OnData(Slice)'');", span="48-48", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_7 [label="throw new Exception(''Framework algorithms can not override OnSecuritiesChanged(SecurityChanges)'');", span="53-53", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_8 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="42-42", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="QCAlgorithmFramework.cs"];
m17_30 [label="Entry Unk.CreateTargets", span="", cluster="Unk.CreateTargets", file="QCAlgorithmFramework.cs"];
m17_32 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", file="QCAlgorithmFramework.cs"];
m17_9 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="QCAlgorithmFramework.cs"];
m17_38 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="83-83", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m17_39 [label="Signal.OnSecuritiesChanged(this, changes)", span="85-85", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_40 [label="PortfolioConstruction.OnSecuritiesChanged(this, changes)", span="86-86", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_41 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="83-83", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithmFramework.cs"];
m17_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="485-485", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithmFramework.cs"];
m17_29 [label="Entry Unk.Update", span="", cluster="Unk.Update", file="QCAlgorithmFramework.cs"];
m17_20 [label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", span="67-67", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m17_21 [label="var signals = Signal.Update(this, slice)", span="69-69", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_22 [label="var targets = PortfolioConstruction.CreateTargets(this, signals)", span="70-70", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_23 [label=targets, span="71-71", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_27 [label="MarketOrder(target.Symbol, quantity)", span="78-78", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_26 [label="quantity != 0", span="76-76", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_24 [label="var existing = Securities[target.Symbol].Holdings.Quantity\r\n                    + Transactions.GetOpenOrders(target.Symbol).Sum(o => o.Quantity)", span="73-74", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_25 [label="var quantity = target.GetTargetQuantity(this) - existing", span="75-75", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_28 [label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", span="67-67", cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnData(QuantConnect.Data.Slice)", file="QCAlgorithmFramework.cs"];
m17_35 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m17_36 [label="o.Quantity", span="74-74", cluster="lambda expression", color=green, community=0, file="QCAlgorithmFramework.cs"];
m17_37 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="QCAlgorithmFramework.cs"];
m17_43 [label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span="", file="QCAlgorithmFramework.cs"];
m18_0 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", span="38-38", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", file="QuantityPortfolioTarget.cs"];
m18_1 [label="Symbol = symbol", span="40-40", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", color=green, community=0, file="QuantityPortfolioTarget.cs"];
m18_2 [label="Quantity = quantity", span="41-41", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", color=green, community=0, file="QuantityPortfolioTarget.cs"];
m18_3 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", span="38-38", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.QuantityPortfolioTarget(QuantConnect.Symbol, decimal)", file="QuantityPortfolioTarget.cs"];
m18_4 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="49-49", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="QuantityPortfolioTarget.cs"];
m18_5 [label="return Quantity;", span="51-51", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, file="QuantityPortfolioTarget.cs"];
m18_6 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="49-49", cluster="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget.GetTargetQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="QuantityPortfolioTarget.cs"];
m18_7 [label="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget", span="", file="QuantityPortfolioTarget.cs"];
m19_44 [label="Entry lambda expression", span="703-703", cluster="lambda expression", file="RegressionTests.cs"];
m19_45 [label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="703-703", cluster="lambda expression", file="RegressionTests.cs"];
m19_46 [label="Exit lambda expression", span="703-703", cluster="lambda expression", file="RegressionTests.cs"];
m19_9 [label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="33-33", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m19_0 [label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m19_1 [label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="27-27", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m19_2 [label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="29-29", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m19_6 [label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.Language)", span="37-37", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m19_3 [label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="32-32", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m19_4 [label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="33-33", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m19_5 [label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="34-34", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m19_7 [label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs"];
m19_41 [label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m19_49 [label="Algorithm = algorithm", span="714-714", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m19_50 [label="Statistics = statistics", span="715-715", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m19_51 [label="Language = language", span="716-716", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m19_52 [label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs"];
m19_48 [label="Entry Unk.SetName", span="", cluster="Unk.SetName", file="RegressionTests.cs"];
m19_10 [label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_11 [label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_12 [label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_37 [label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="640-704", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", color=green, community=0];
m19_13 [label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_14 [label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_15 [label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_16 [label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_17 [label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_18 [label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_19 [label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_20 [label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_21 [label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_22 [label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_23 [label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_24 [label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_25 [label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.27''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''-0.002''},\r\n                {''Beta'', ''0.411''},\r\n                {''Annual Standard Deviation'', ''0.112''},\r\n                {''Annual Variance'', ''0.013''},\r\n                {''Information Ratio'', ''-0.352''},\r\n                {''Tracking Error'', ''0.134''},\r\n                {''Treynor Ratio'', ''0.073''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="364-385", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_26 [label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_27 [label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_28 [label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_29 [label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_30 [label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.07''},\r\n                {''Beta'', ''0.122''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-5.158''},\r\n                {''Tracking Error'', ''0.096''},\r\n                {''Treynor Ratio'', ''-0.088''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="479-500", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_31 [label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_32 [label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="525-546", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_33 [label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="548-569", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_34 [label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="571-592", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_35 [label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.01%''},\r\n                {''Compounding Annual Return'', ''255.643%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.016''},\r\n                {''Net Profit'', ''1.400%''},\r\n                {''Sharpe Ratio'', ''1.179''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.48''},\r\n                {''Alpha'', ''-1.178''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.812''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.236''},\r\n                {''Tracking Error'', ''0.177''},\r\n                {''Treynor Ratio'', ''0.767''},\r\n                {''Total Fees'', ''$2040.34''}\r\n            }", span="594-615", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_36 [label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_38 [label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs"];
m19_40 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs"];
m19_47 [label="Entry TestCaseData.cstr", span="", cluster="TestCaseData.cstr", file="RegressionTests.cs"];
m19_42 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RegressionTests.cs"];
m19_43 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="RegressionTests.cs"];
m19_8 [label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118", cluster="QuantConnect.Configuration.Config.Set(string, string)", file="RegressionTests.cs"];
m19_39 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs"];
m19_53 [label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span="", file="RegressionTests.cs"];
m22_9 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="58-58", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs"];
m22_10 [label="NotifiedSecurityChanged.UpdateCollection(_securities, changes)", span="60-60", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m22_11 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="58-58", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs"];
m22_8 [label="Entry Unk.Percent", span="", cluster="Unk.Percent", file="SimplePortfolioConstructionModel.cs"];
m22_0 [label="Entry QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<Signal>)", span="38-38", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<Signal>)", file="SimplePortfolioConstructionModel.cs"];
m22_1 [label="_securities.Count == 0", span="40-40", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m22_2 [label="yield break;", span="42-42", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m22_3 [label="var percent = 1m / _securities.Count", span="45-45", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m22_6 [label="yield return PortfolioTarget.Percent(signal.Symbol, target);", span="49-49", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m22_4 [label=signals, span="46-46", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m22_5 [label="var target = (int)signal.Direction * percent", span="48-48", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<Signal>)", color=green, community=0, file="SimplePortfolioConstructionModel.cs"];
m22_7 [label="Exit QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<Signal>)", span="38-38", cluster="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel.CreateTargets(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<Signal>)", file="SimplePortfolioConstructionModel.cs"];
m22_12 [label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="31-31", cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanged.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SimplePortfolioConstructionModel.cs"];
m22_13 [label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel", span="", file="SimplePortfolioConstructionModel.cs"];
m1_9 -> m1_10  [key=0, style=solid, color=green];
m1_10 -> m1_11  [key=0, style=solid, color=green];
m1_10 -> m1_12  [key=2, style=dotted, color=green];
m1_10 -> m1_13  [key=1, style=dashed, color=green, label="lambda expression"];
m1_11 -> m1_9  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_4  [key=1, style=dashed, color=green, label=Direction];
m1_2 -> m1_5  [key=1, style=dashed, color=green, label="double?"];
m1_2 -> m1_6  [key=1, style=dashed, color=green, label="double?"];
m1_2 -> m1_7  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_4 -> m1_5  [key=0, style=solid, color=green];
m1_5 -> m1_6  [key=0, style=solid, color=green];
m1_6 -> m1_7  [key=0, style=solid, color=green];
m1_7 -> m1_8  [key=0, style=solid, color=green];
m1_8 -> m1_2  [key=0, style=bold, color=blue];
m1_20 -> m1_2  [key=3, color=darkorchid, style=bold, label="Field variable double? _percentChange"];
m1_17 -> m1_18  [key=0, style=solid, color=green];
m1_18 -> m1_19  [key=0, style=solid, color=green];
m1_18 -> m1_20  [key=2, style=dotted, color=green];
m1_19 -> m1_17  [key=0, style=bold, color=blue];
m1_13 -> m1_14  [key=0, style=solid, color=green];
m1_14 -> m1_15  [key=0, style=solid, color=green];
m1_14 -> m1_16  [key=2, style=dotted, color=green];
m1_15 -> m1_13  [key=0, style=bold, color=blue];
m1_21 -> m1_3  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m1_21 -> m1_4  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m1_21 -> m1_5  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m1_21 -> m1_6  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m1_21 -> m1_7  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m1_21 -> m1_10  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m1_21 -> m1_14  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m1_21 -> m1_18  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Signals.ConstantSignalModel"];
m14_41 -> m14_42  [key=0, style=solid];
m14_42 -> m14_43  [key=0, style=solid];
m14_43 -> m14_41  [key=0, style=bold, color=blue];
m14_9 -> m14_10  [key=0, style=solid];
m14_10 -> m14_11  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_17  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_18  [key=2, style=dotted];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_19  [key=2, style=dotted];
m14_15 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_20  [key=2, style=dotted];
m14_16 -> m14_9  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid, color=green];
m14_1 -> m14_2  [key=0, style=solid, color=green];
m14_1 -> m14_4  [key=2, style=dotted, color=green];
m14_2 -> m14_3  [key=0, style=solid, color=green];
m14_2 -> m14_4  [key=2, style=dotted, color=green];
m14_3 -> m14_0  [key=0, style=bold, color=blue];
m14_5 -> m14_6  [key=0, style=solid, color=green];
m14_6 -> m14_7  [key=0, style=solid, color=green];
m14_6 -> m14_8  [key=2, style=dotted, color=green];
m14_7 -> m14_5  [key=0, style=bold, color=blue];
m14_30 -> m14_31  [key=0, style=solid];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_33  [key=0, style=solid];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_36  [key=0, style=solid];
m14_33 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label=security];
m14_35 -> m14_33  [key=0, style=solid];
m14_35 -> m14_39  [key=2, style=dotted];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_38  [key=0, style=solid];
m14_37 -> m14_36  [key=0, style=solid];
m14_37 -> m14_40  [key=2, style=dotted];
m14_32 -> m14_38  [key=0, style=solid];
m14_34 -> m14_33  [key=0, style=solid];
m14_34 -> m14_35  [key=0, style=solid];
m14_38 -> m14_30  [key=0, style=bold, color=blue];
m14_21 -> m14_22  [key=0, style=solid];
m14_28 -> m14_0  [key=2, style=dotted];
m14_28 -> m14_29  [key=0, style=solid];
m14_27 -> m14_28  [key=0, style=solid];
m14_29 -> m14_27  [key=0, style=bold, color=blue];
m14_22 -> m14_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_22 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label=cf];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_24  [key=2, style=dotted];
m14_22 -> m14_25  [key=2, style=dotted];
m14_22 -> m14_26  [key=2, style=dotted];
m14_23 -> m14_21  [key=0, style=bold, color=blue];
m14_44 -> m14_1  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData"];
m14_44 -> m14_2  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData"];
m14_44 -> m14_6  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm.SelectionData"];
m14_45 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m14_45 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.EmaCrossUniverseSelectionAlgorithm"];
m15_0 -> m15_1  [key=0, style=solid, color=green];
m15_1 -> m15_2  [key=0, style=solid, color=green];
m15_1 -> m15_3  [key=2, style=dotted, color=green];
m15_2 -> m15_0  [key=0, style=bold, color=blue];
m15_4 -> m15_5  [key=0, style=solid, color=green];
m15_5 -> m15_6  [key=0, style=solid, color=green];
m15_5 -> m15_7  [key=2, style=dotted, color=green];
m15_6 -> m15_4  [key=0, style=bold, color=blue];
m16_119 -> m16_120  [key=0, style=solid];
m16_120 -> m16_119  [key=0, style=bold, color=blue];
m16_173 -> m16_174  [key=0, style=solid];
m16_174 -> m16_173  [key=0, style=bold, color=blue];
m16_208 -> m16_209  [key=0, style=solid];
m16_209 -> m16_210  [key=0, style=solid];
m16_209 -> m16_211  [key=2, style=dotted];
m16_210 -> m16_208  [key=0, style=bold, color=blue];
m16_221 -> m16_222  [key=0, style=solid];
m16_222 -> m16_223  [key=0, style=solid];
m16_222 -> m16_211  [key=2, style=dotted];
m16_223 -> m16_221  [key=0, style=bold, color=blue];
m16_49 -> m16_50  [key=0, style=solid];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_52  [key=2, style=dotted];
m16_51 -> m16_49  [key=0, style=bold, color=blue];
m16_133 -> m16_134  [key=0, style=solid];
m16_134 -> m16_133  [key=0, style=bold, color=blue];
m16_202 -> m16_203  [key=0, style=solid];
m16_203 -> m16_202  [key=0, style=bold, color=blue];
m16_215 -> m16_216  [key=0, style=solid];
m16_216 -> m16_217  [key=0, style=solid];
m16_216 -> m16_211  [key=2, style=dotted];
m16_217 -> m16_215  [key=0, style=bold, color=blue];
m16_125 -> m16_126  [key=0, style=solid];
m16_126 -> m16_125  [key=0, style=bold, color=blue];
m16_123 -> m16_124  [key=0, style=solid];
m16_124 -> m16_123  [key=0, style=bold, color=blue];
m16_189 -> m16_190  [key=0, style=solid];
m16_190 -> m16_191  [key=0, style=solid];
m16_191 -> m16_189  [key=0, style=bold, color=blue];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_71  [key=0, style=bold, color=crimson];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_75  [key=2, style=dotted];
m16_57 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=bars];
m16_71 -> m16_72  [key=0, style=solid];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_76  [key=2, style=dotted];
m16_58 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=quotes];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_85  [key=2, style=dotted];
m16_59 -> m16_60  [key=0, style=solid];
m16_59 -> m16_77  [key=2, style=dotted];
m16_59 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=ticks];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_78  [key=2, style=dotted];
m16_60 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_79  [key=2, style=dotted];
m16_61 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=futures];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_80  [key=2, style=dotted];
m16_62 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=splits];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_81  [key=2, style=dotted];
m16_63 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=dividends];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_82  [key=2, style=dotted];
m16_64 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=delistings];
m16_65 -> m16_66  [key=0, style=solid];
m16_65 -> m16_83  [key=2, style=dotted];
m16_65 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label=symbolChanges];
m16_66 -> m16_67  [key=0, style=solid];
m16_66 -> m16_84  [key=2, style=dotted];
m16_66 -> m16_70  [key=1, style=dashed, color=darkseagreen4, label=dataFeedPackets];
m16_67 -> m16_68  [key=0, style=solid];
m16_67 -> m16_84  [key=2, style=dotted];
m16_67 -> m16_70  [key=1, style=dashed, color=darkseagreen4, label=customData];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_86  [key=2, style=dotted];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_70  [key=1, style=dashed, color=darkseagreen4, label=changes];
m16_72 -> m16_73  [key=0, style=solid];
m16_73 -> m16_68  [key=0, style=solid];
m16_73 -> m16_74  [key=0, style=solid];
m16_74 -> m16_56  [key=0, style=bold, color=blue];
m16_141 -> m16_142  [key=0, style=solid];
m16_142 -> m16_141  [key=0, style=bold, color=blue];
m16_114 -> m16_115  [key=0, style=solid];
m16_115 -> m16_116  [key=0, style=solid];
m16_116 -> m16_114  [key=0, style=bold, color=blue];
m16_175 -> m16_176  [key=0, style=solid];
m16_176 -> m16_175  [key=0, style=bold, color=blue];
m16_157 -> m16_158  [key=0, style=solid];
m16_158 -> m16_157  [key=0, style=bold, color=blue];
m16_187 -> m16_188  [key=0, style=solid];
m16_188 -> m16_187  [key=0, style=bold, color=blue];
m16_147 -> m16_148  [key=0, style=solid];
m16_148 -> m16_147  [key=0, style=bold, color=blue];
m16_204 -> m16_205  [key=0, style=solid];
m16_205 -> m16_204  [key=0, style=bold, color=blue];
m16_155 -> m16_156  [key=0, style=solid];
m16_156 -> m16_155  [key=0, style=bold, color=blue];
m16_227 -> m16_228  [key=0, style=solid];
m16_228 -> m16_227  [key=0, style=bold, color=blue];
m16_183 -> m16_184  [key=0, style=solid];
m16_184 -> m16_183  [key=0, style=bold, color=blue];
m16_44 -> m16_87  [key=0, style=solid];
m16_44 -> m16_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m16_44 -> m16_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m16_87 -> m16_88  [key=0, style=solid];
m16_87 -> m16_97  [key=2, style=dotted];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_97  [key=2, style=dotted];
m16_89 -> m16_90  [key=0, style=solid];
m16_89 -> m16_95  [key=0, style=solid];
m16_90 -> m16_91  [key=0, style=solid];
m16_90 -> m16_90  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m16_90 -> m16_93  [key=1, style=dashed, color=darkseagreen4, label=security];
m16_90 -> m16_94  [key=1, style=dashed, color=darkseagreen4, label=security];
m16_95 -> m16_96  [key=0, style=solid];
m16_95 -> m16_56  [key=2, style=dotted];
m16_95 -> m16_103  [key=2, style=dotted];
m16_95 -> m16_104  [key=2, style=dotted];
m16_91 -> m16_92  [key=0, style=solid];
m16_91 -> m16_98  [key=2, style=dotted];
m16_91 -> m16_99  [key=2, style=dotted];
m16_91 -> m16_93  [key=1, style=dashed, color=darkseagreen4, label=tick];
m16_91 -> m16_94  [key=1, style=dashed, color=darkseagreen4, label=tick];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_101  [key=2, style=dotted];
m16_93 -> m16_100  [key=2, style=dotted];
m16_94 -> m16_89  [key=0, style=solid];
m16_94 -> m16_101  [key=2, style=dotted];
m16_94 -> m16_102  [key=2, style=dotted];
m16_94 -> m16_100  [key=2, style=dotted];
m16_92 -> m16_93  [key=0, style=solid];
m16_92 -> m16_100  [key=2, style=dotted];
m16_96 -> m16_44  [key=0, style=bold, color=blue];
m16_212 -> m16_213  [key=0, style=solid];
m16_213 -> m16_214  [key=0, style=solid];
m16_213 -> m16_211  [key=2, style=dotted];
m16_214 -> m16_212  [key=0, style=bold, color=blue];
m16_137 -> m16_138  [key=0, style=solid];
m16_138 -> m16_137  [key=0, style=bold, color=blue];
m16_161 -> m16_162  [key=0, style=solid];
m16_162 -> m16_161  [key=0, style=bold, color=blue];
m16_109 -> m16_110  [key=0, style=solid];
m16_109 -> m16_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m16_110 -> m16_111  [key=0, style=solid];
m16_110 -> m16_113  [key=2, style=dotted];
m16_110 -> m16_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_111 -> m16_112  [key=0, style=solid];
m16_112 -> m16_109  [key=0, style=bold, color=blue];
m16_53 -> m16_54  [key=0, style=solid];
m16_54 -> m16_55  [key=0, style=solid];
m16_54 -> m16_49  [key=2, style=dotted];
m16_55 -> m16_53  [key=0, style=bold, color=blue];
m16_153 -> m16_154  [key=0, style=solid];
m16_154 -> m16_153  [key=0, style=bold, color=blue];
m16_231 -> m16_232  [key=0, style=solid];
m16_232 -> m16_231  [key=0, style=bold, color=blue];
m16_192 -> m16_193  [key=0, style=solid];
m16_193 -> m16_192  [key=0, style=bold, color=blue];
m16_167 -> m16_168  [key=0, style=solid];
m16_168 -> m16_167  [key=0, style=bold, color=blue];
m16_229 -> m16_230  [key=0, style=solid];
m16_230 -> m16_229  [key=0, style=bold, color=blue];
m16_139 -> m16_140  [key=0, style=solid];
m16_140 -> m16_139  [key=0, style=bold, color=blue];
m16_127 -> m16_128  [key=0, style=solid];
m16_128 -> m16_127  [key=0, style=bold, color=blue];
m16_121 -> m16_122  [key=0, style=solid];
m16_122 -> m16_121  [key=0, style=bold, color=blue];
m16_185 -> m16_186  [key=0, style=solid];
m16_186 -> m16_185  [key=0, style=bold, color=blue];
m16_218 -> m16_219  [key=0, style=solid];
m16_219 -> m16_220  [key=0, style=solid];
m16_219 -> m16_211  [key=2, style=dotted];
m16_220 -> m16_218  [key=0, style=bold, color=blue];
m16_206 -> m16_207  [key=0, style=solid];
m16_207 -> m16_206  [key=0, style=bold, color=blue];
m16_151 -> m16_152  [key=0, style=solid];
m16_152 -> m16_151  [key=0, style=bold, color=blue];
m16_177 -> m16_178  [key=0, style=solid];
m16_178 -> m16_177  [key=0, style=bold, color=blue];
m16_105 -> m16_106  [key=0, style=solid];
m16_106 -> m16_107  [key=0, style=solid];
m16_106 -> m16_98  [key=2, style=dotted];
m16_106 -> m16_99  [key=2, style=dotted];
m16_106 -> m16_100  [key=2, style=dotted];
m16_107 -> m16_108  [key=0, style=solid];
m16_108 -> m16_105  [key=0, style=bold, color=blue];
m16_129 -> m16_130  [key=0, style=solid];
m16_130 -> m16_129  [key=0, style=bold, color=blue];
m16_165 -> m16_166  [key=0, style=solid];
m16_166 -> m16_165  [key=0, style=bold, color=blue];
m16_159 -> m16_160  [key=0, style=solid];
m16_160 -> m16_159  [key=0, style=bold, color=blue];
m16_163 -> m16_164  [key=0, style=solid];
m16_164 -> m16_163  [key=0, style=bold, color=blue];
m16_194 -> m16_195  [key=0, style=solid];
m16_195 -> m16_194  [key=0, style=bold, color=blue];
m16_117 -> m16_118  [key=0, style=solid];
m16_118 -> m16_117  [key=0, style=bold, color=blue];
m16_131 -> m16_132  [key=0, style=solid];
m16_132 -> m16_131  [key=0, style=bold, color=blue];
m16_198 -> m16_199  [key=0, style=solid];
m16_199 -> m16_198  [key=0, style=bold, color=blue];
m16_224 -> m16_225  [key=0, style=solid];
m16_225 -> m16_226  [key=0, style=solid];
m16_225 -> m16_211  [key=2, style=dotted];
m16_226 -> m16_224  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_25  [key=2, style=dotted];
m16_1 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=algorithmManager];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m16_2 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m16_2 -> m16_14  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m16_2 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m16_2 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m16_2 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_47  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_26  [key=2, style=dotted];
m16_3 -> m16_27  [key=2, style=dotted];
m16_3 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_3 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_3 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_35  [key=2, style=dotted];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_36  [key=2, style=dotted];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_41  [key=2, style=dotted];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_42  [key=2, style=dotted];
m16_15 -> m16_43  [key=2, style=dotted];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_44  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_28  [key=2, style=dotted];
m16_4 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label=feed];
m16_4 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label=feed];
m16_4 -> m16_17  [key=1, style=dashed, color=darkseagreen4, label=feed];
m16_4 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=feed];
m16_4 -> m16_21  [key=1, style=dashed, color=darkseagreen4, label=feed];
m16_4 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label=feed];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_37  [key=2, style=dotted];
m16_13 -> m16_38  [key=2, style=dotted];
m16_13 -> m16_39  [key=2, style=dotted];
m16_13 -> m16_40  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_29  [key=2, style=dotted];
m16_5 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m16_5 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m16_5 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_45  [key=2, style=dotted];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label=thousands];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_45  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_30  [key=2, style=dotted];
m16_6 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label=results];
m16_6 -> m16_14  [key=1, style=dashed, color=darkseagreen4, label=results];
m16_6 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label=results];
m16_6 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label=results];
m16_6 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=results];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_31  [key=2, style=dotted];
m16_7 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=realtime];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_32  [key=2, style=dotted];
m16_8 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=leanManager];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_33  [key=2, style=dotted];
m16_9 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=alphas];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_34  [key=2, style=dotted];
m16_10 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=token];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_46  [key=2, style=dotted];
m16_18 -> m16_20  [key=1, style=dashed, color=darkseagreen4, label=sw];
m16_18 -> m16_22  [key=1, style=dashed, color=darkseagreen4, label=sw];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_48  [key=2, style=dotted];
m16_22 -> m16_23  [key=0, style=solid];
m16_24 -> m16_0  [key=0, style=bold, color=blue];
m16_143 -> m16_144  [key=0, style=solid];
m16_144 -> m16_143  [key=0, style=bold, color=blue];
m16_181 -> m16_182  [key=0, style=solid];
m16_182 -> m16_181  [key=0, style=bold, color=blue];
m16_200 -> m16_201  [key=0, style=solid];
m16_201 -> m16_200  [key=0, style=bold, color=blue];
m16_171 -> m16_172  [key=0, style=solid];
m16_172 -> m16_171  [key=0, style=bold, color=blue];
m16_233 -> m16_234  [key=0, style=solid];
m16_234 -> m16_233  [key=0, style=bold, color=blue];
m16_149 -> m16_150  [key=0, style=solid];
m16_150 -> m16_149  [key=0, style=bold, color=blue];
m16_179 -> m16_180  [key=0, style=solid];
m16_180 -> m16_179  [key=0, style=bold, color=blue];
m16_145 -> m16_146  [key=0, style=solid];
m16_146 -> m16_145  [key=0, style=bold, color=blue];
m16_135 -> m16_136  [key=0, style=solid];
m16_136 -> m16_135  [key=0, style=bold, color=blue];
m16_169 -> m16_170  [key=0, style=solid];
m16_170 -> m16_169  [key=0, style=bold, color=blue];
m16_196 -> m16_197  [key=0, style=solid];
m16_197 -> m16_196  [key=0, style=bold, color=blue];
m16_235 -> m16_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_235 -> m16_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.AlgorithmManagerTests.MockDataFeed"];
m16_236 -> m16_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m17_12 -> m17_13  [key=0, style=solid, color=green];
m17_13 -> m17_14  [key=0, style=solid, color=green];
m17_13 -> m17_15  [key=0, style=solid, color=green];
m17_13 -> m17_17  [key=2, style=dotted, color=green];
m17_14 -> m17_13  [key=0, style=solid, color=green];
m17_14 -> m17_18  [key=2, style=dotted, color=green];
m17_15 -> m17_16  [key=0, style=solid, color=green];
m17_15 -> m17_19  [key=2, style=dotted, color=green];
m17_16 -> m17_12  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid, color=green];
m17_1 -> m17_2  [key=0, style=solid, color=green];
m17_1 -> m17_9  [key=2, style=dotted, color=green];
m17_1 -> m17_5  [key=1, style=dashed, color=green, label=type];
m17_2 -> m17_3  [key=0, style=solid, color=green];
m17_2 -> m17_10  [key=2, style=dotted, color=green];
m17_5 -> m17_6  [key=0, style=solid, color=green];
m17_5 -> m17_10  [key=2, style=dotted, color=green];
m17_3 -> m17_5  [key=0, style=solid, color=green];
m17_3 -> m17_4  [key=0, style=solid, color=green];
m17_6 -> m17_7  [key=0, style=solid, color=green];
m17_6 -> m17_8  [key=0, style=solid, color=green];
m17_4 -> m17_8  [key=0, style=solid, color=green];
m17_4 -> m17_11  [key=2, style=dotted, color=green];
m17_7 -> m17_8  [key=0, style=solid, color=green];
m17_7 -> m17_11  [key=2, style=dotted, color=green];
m17_8 -> m17_0  [key=0, style=bold, color=blue];
m17_38 -> m17_39  [key=0, style=solid, color=green];
m17_38 -> m17_40  [key=1, style=dashed, color=green, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m17_39 -> m17_40  [key=0, style=solid, color=green];
m17_39 -> m17_42  [key=2, style=dotted, color=green];
m17_40 -> m17_41  [key=0, style=solid, color=green];
m17_40 -> m17_42  [key=2, style=dotted, color=green];
m17_41 -> m17_38  [key=0, style=bold, color=blue];
m17_20 -> m17_21  [key=0, style=solid, color=green];
m17_21 -> m17_22  [key=0, style=solid, color=green];
m17_21 -> m17_29  [key=2, style=dotted, color=green];
m17_22 -> m17_23  [key=0, style=solid, color=green];
m17_22 -> m17_30  [key=2, style=dotted, color=green];
m17_23 -> m17_24  [key=0, style=solid, color=green];
m17_23 -> m17_28  [key=0, style=solid, color=green];
m17_23 -> m17_25  [key=1, style=dashed, color=green, label=target];
m17_23 -> m17_27  [key=1, style=dashed, color=green, label=target];
m17_27 -> m17_23  [key=0, style=solid, color=green];
m17_27 -> m17_34  [key=2, style=dotted, color=green];
m17_26 -> m17_23  [key=0, style=solid, color=green];
m17_26 -> m17_27  [key=0, style=solid, color=green];
m17_24 -> m17_25  [key=0, style=solid, color=green];
m17_24 -> m17_31  [key=2, style=dotted, color=green];
m17_24 -> m17_32  [key=2, style=dotted, color=green];
m17_24 -> m17_35  [key=1, style=dashed, color=green, label="lambda expression"];
m17_25 -> m17_26  [key=0, style=solid, color=green];
m17_25 -> m17_33  [key=2, style=dotted, color=green];
m17_25 -> m17_27  [key=1, style=dashed, color=green, label=quantity];
m17_28 -> m17_20  [key=0, style=bold, color=blue];
m17_35 -> m17_36  [key=0, style=solid, color=green];
m17_36 -> m17_37  [key=0, style=solid, color=green];
m17_37 -> m17_35  [key=0, style=bold, color=blue];
m17_43 -> m17_1  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m17_43 -> m17_13  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m17_43 -> m17_14  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m17_43 -> m17_15  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m17_43 -> m17_21  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m17_43 -> m17_22  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m17_43 -> m17_24  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m17_43 -> m17_25  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m17_43 -> m17_27  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m17_43 -> m17_39  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m17_43 -> m17_40  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework"];
m18_0 -> m18_1  [key=0, style=solid, color=green];
m18_0 -> m18_2  [key=1, style=dashed, color=green, label=decimal];
m18_1 -> m18_2  [key=0, style=solid, color=green];
m18_2 -> m18_3  [key=0, style=solid, color=green];
m18_3 -> m18_0  [key=0, style=bold, color=blue];
m18_4 -> m18_5  [key=0, style=solid, color=green];
m18_5 -> m18_6  [key=0, style=solid, color=green];
m18_6 -> m18_4  [key=0, style=bold, color=blue];
m18_7 -> m18_1  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget"];
m18_7 -> m18_2  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget"];
m18_7 -> m18_5  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.QuantityPortfolioTarget"];
m19_44 -> m19_45  [key=0, style=solid];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_47  [key=2, style=dotted];
m19_45 -> m19_48  [key=2, style=dotted];
m19_46 -> m19_44  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m19_0 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_8  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_6  [key=0, style=solid];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_9  [key=2, style=dotted];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_8  [key=2, style=dotted];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_8  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_8  [key=2, style=dotted];
m19_7 -> m19_0  [key=0, style=bold, color=blue];
m19_41 -> m19_49  [key=0, style=solid];
m19_41 -> m19_50  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m19_41 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Language"];
m19_49 -> m19_50  [key=0, style=solid];
m19_50 -> m19_51  [key=0, style=solid];
m19_51 -> m19_52  [key=0, style=solid];
m19_52 -> m19_41  [key=0, style=bold, color=blue];
m19_10 -> m19_11  [key=0, style=solid];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_39  [key=2, style=dotted];
m19_11 -> m19_37  [key=1, style=dashed, color=green, label=basicTemplateStatistics];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_39  [key=2, style=dotted];
m19_12 -> m19_37  [key=1, style=dashed, color=green, label=basicTemplateOptionsStatistics];
m19_37 -> m19_38  [key=0, style=solid, color=green];
m19_37 -> m19_40  [key=2, style=dotted, color=green];
m19_37 -> m19_41  [key=2, style=dotted, color=green];
m19_37 -> m19_42  [key=2, style=dotted, color=green];
m19_37 -> m19_43  [key=2, style=dotted, color=green];
m19_37 -> m19_44  [key=1, style=dashed, color=green, label="lambda expression"];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_39  [key=2, style=dotted];
m19_13 -> m19_37  [key=1, style=dashed, color=green, label=limitFillRegressionStatistics];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_39  [key=2, style=dotted];
m19_14 -> m19_37  [key=1, style=dashed, color=green, label=updateOrderRegressionStatistics];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_39  [key=2, style=dotted];
m19_15 -> m19_37  [key=1, style=dashed, color=green, label=regressionStatistics];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_39  [key=2, style=dotted];
m19_16 -> m19_37  [key=1, style=dashed, color=green, label=universeSelectionRegressionStatistics];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_39  [key=2, style=dotted];
m19_17 -> m19_37  [key=1, style=dashed, color=green, label=customDataRegressionStatistics];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_39  [key=2, style=dotted];
m19_18 -> m19_37  [key=1, style=dashed, color=green, label=addRemoveSecurityRegressionStatistics];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_39  [key=2, style=dotted];
m19_19 -> m19_37  [key=1, style=dashed, color=green, label=dropboxBaseDataUniverseSelectionStatistics];
m19_20 -> m19_21  [key=0, style=solid];
m19_20 -> m19_39  [key=2, style=dotted];
m19_20 -> m19_37  [key=1, style=dashed, color=green, label=dropboxUniverseSelectionStatistics];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_39  [key=2, style=dotted];
m19_21 -> m19_37  [key=1, style=dashed, color=green, label=parameterizedStatistics];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_39  [key=2, style=dotted];
m19_22 -> m19_37  [key=1, style=dashed, color=green, label=historyAlgorithmStatistics];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_39  [key=2, style=dotted];
m19_23 -> m19_37  [key=1, style=dashed, color=green, label=coarseFundamentalTop5AlgorithmStatistics];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_39  [key=2, style=dotted];
m19_24 -> m19_37  [key=1, style=dashed, color=green, label=coarseFineFundamentalRegressionAlgorithmStatistics];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_39  [key=2, style=dotted];
m19_25 -> m19_37  [key=1, style=dashed, color=green, label=macdTrendAlgorithmStatistics];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_39  [key=2, style=dotted];
m19_26 -> m19_37  [key=1, style=dashed, color=green, label=optionSplitRegressionAlgorithmStatistics];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_39  [key=2, style=dotted];
m19_27 -> m19_37  [key=1, style=dashed, color=green, label=optionRenameRegressionAlgorithmStatistics];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_39  [key=2, style=dotted];
m19_28 -> m19_37  [key=1, style=dashed, color=green, label=optionOpenInterestRegressionAlgorithmStatistics];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_39  [key=2, style=dotted];
m19_29 -> m19_37  [key=1, style=dashed, color=green, label=optionChainConsistencyRegressionAlgorithmStatistics];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_39  [key=2, style=dotted];
m19_30 -> m19_37  [key=1, style=dashed, color=green, label=weeklyUniverseSelectionRegressionAlgorithmStatistics];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_39  [key=2, style=dotted];
m19_31 -> m19_37  [key=1, style=dashed, color=green, label=optionExerciseAssignRegressionAlgorithmStatistics];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_39  [key=2, style=dotted];
m19_32 -> m19_37  [key=1, style=dashed, color=green, label=basicTemplateDailyStatistics];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_39  [key=2, style=dotted];
m19_33 -> m19_37  [key=1, style=dashed, color=green, label=hourSplitStatistics];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_39  [key=2, style=dotted];
m19_34 -> m19_37  [key=1, style=dashed, color=green, label=hourReverseSplitStatistics];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_39  [key=2, style=dotted];
m19_35 -> m19_37  [key=1, style=dashed, color=green, label=fractionalQuantityRegressionStatistics];
m19_36 -> m19_37  [key=0, style=solid, color=green];
m19_36 -> m19_39  [key=2, style=dotted];
m19_38 -> m19_10  [key=0, style=bold, color=blue];
m19_53 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m19_53 -> m19_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m19_53 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters"];
m22_9 -> m22_10  [key=0, style=solid, color=green];
m22_10 -> m22_11  [key=0, style=solid, color=green];
m22_10 -> m22_12  [key=2, style=dotted, color=green];
m22_11 -> m22_9  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid, color=green];
m22_0 -> m22_2  [key=0, style=bold, color=green];
m22_0 -> m22_6  [key=0, style=bold, color=green];
m22_0 -> m22_4  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<Signal>"];
m22_1 -> m22_2  [key=0, style=solid, color=green];
m22_1 -> m22_3  [key=0, style=solid, color=green];
m22_2 -> m22_3  [key=0, style=solid, color=green];
m22_3 -> m22_4  [key=0, style=solid, color=green];
m22_3 -> m22_5  [key=1, style=dashed, color=green, label=percent];
m22_6 -> m22_4  [key=0, style=solid, color=green];
m22_6 -> m22_8  [key=2, style=dotted, color=green];
m22_4 -> m22_6  [key=1, style=dashed, color=green, label=signal];
m22_4 -> m22_5  [key=0, style=solid, color=green];
m22_4 -> m22_7  [key=0, style=solid, color=green];
m22_5 -> m22_6  [key=0, style=solid, color=green];
m22_7 -> m22_0  [key=0, style=bold, color=blue];
m22_13 -> m22_1  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel"];
m22_13 -> m22_3  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel"];
m22_13 -> m22_10  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Framework.Portfolio.SimplePortfolioConstructionModel"];
}
