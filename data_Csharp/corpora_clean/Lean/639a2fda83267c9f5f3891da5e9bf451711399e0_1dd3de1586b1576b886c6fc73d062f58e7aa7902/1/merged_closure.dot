digraph  {
d8 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", color=green, community=0, label="_universeSettings = universeSettings", prediction=0, span="69-69"];
d39 [label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel", span=""];
d4 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="61-61"];
d7 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="_symbols = symbols.ToList()", span="68-68"];
d9 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", color=green, community=0, label="_securityInitializer = securityInitializer", prediction=1, span="70-70"];
d10 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", color=green, community=0, label=_symbols, prediction=2, span="72-72"];
d11 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", color=green, community=0, label="SymbolCache.Set(symbol.Value, symbol)", prediction=3, span="74-74"];
d12 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="61-61"];
d16 [cluster="QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", label="Entry QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", span="36-36"];
d18 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, label="var universeSettings = _universeSettings ?? algorithm.UniverseSettings", prediction=2, span="85-85"];
d17 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="83-83"];
d19 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, label="var securityInitializer = _securityInitializer ?? algorithm.SecurityInitializer", prediction=2, span="86-86"];
d20 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, label="var resolution = universeSettings.Resolution", prediction=6, span="88-88"];
d28 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, label="yield return new ManualUniverse(config, universeSettings, securityInitializer, grp);", prediction=2, span="99-99"];
d27 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, label="var config = new SubscriptionDataConfig(type, universeSymbol, resolution, entry.DataTimeZone, entry.ExchangeHours.TimeZone, false, false, true)", prediction=8, span="98-98"];
d22 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, label="_symbols.GroupBy(s => new { s.ID.Market, s.SecurityType })", prediction=2, span="92-92"];
d35 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30"];
d21 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, label="var type = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", prediction=10, span="89-89"];
d25 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, label="var universeSymbol = Symbol.Create($''manual-portfolio-selection-model-{securityType}-{market}'', securityType, market)", prediction=11, span="96-96"];
d26 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, label="var entry = MarketHoursDatabase.FromDataFolder().GetEntry(market, (string)null, securityType)", prediction=12, span="97-97"];
d34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
d23 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, label="var market = grp.Key.Market", prediction=13, span="94-94"];
d29 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="83-83"];
d30 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
d36 [cluster="lambda expression", label="Entry lambda expression", span="92-92"];
d24 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, label="var securityType = grp.Key.SecurityType", prediction=14, span="95-95"];
d31 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
d32 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
d33 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", span="175-175"];
d37 [cluster="lambda expression", color=green, community=0, label="new { s.ID.Market, s.SecurityType }", prediction=15, span="92-92"];
d38 [cluster="lambda expression", label="Exit lambda expression", span="92-92"];
d5 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="symbols == null", span="63-63"];
d6 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", label="throw new ArgumentNullException(nameof(symbols));", span="65-65"];
d15 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
d13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d14 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
m0_22 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="Brokerage.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m0_23 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Brokerage.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m0_5 [cluster="QuantConnect.Brokerages.Brokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Brokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.UpdateOrder(QuantConnect.Orders.Order)", span="79-79"];
m0_6 [cluster="QuantConnect.Brokerages.Brokerage.UpdateOrder(QuantConnect.Orders.Order)", file="Brokerage.cs", label="Exit QuantConnect.Brokerages.Brokerage.UpdateOrder(QuantConnect.Orders.Order)", span="79-79"];
m0_11 [cluster="QuantConnect.Brokerages.Brokerage.Disconnect()", file="Brokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.Disconnect()", span="96-96"];
m0_12 [cluster="QuantConnect.Brokerages.Brokerage.Disconnect()", file="Brokerage.cs", label="Exit QuantConnect.Brokerages.Brokerage.Disconnect()", span="96-96"];
m0_13 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Brokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="102-102"];
m0_14 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Brokerage.cs", label="Log.Trace(''Brokerage.OnOrderEvent(): '' + e)", span="106-106"];
m0_17 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Brokerage.cs", label="handler(this, e)", span="109-109"];
m0_15 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Brokerage.cs", label="var handler = OrderEvent", span="108-108"];
m0_16 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Brokerage.cs", label="handler != null", span="109-109"];
m0_18 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Brokerage.cs", label=Exception, span="111-111"];
m0_19 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Brokerage.cs", label="Log.Error(''Brokerage.OnOrderEvent(): Caught Error: '' + error.Message)", span="113-113"];
m0_20 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Brokerage.cs", label="Exit QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="102-102"];
m0_40 [cluster="QuantConnect.Brokerages.Brokerage.OnError(System.Exception)", file="Brokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnError(System.Exception)", span="159-159"];
m0_44 [cluster="QuantConnect.Brokerages.Brokerage.OnError(System.Exception)", file="Brokerage.cs", label="handler(this, e)", span="166-166"];
m0_43 [cluster="QuantConnect.Brokerages.Brokerage.OnError(System.Exception)", file="Brokerage.cs", label="handler != null", span="166-166"];
m0_45 [cluster="QuantConnect.Brokerages.Brokerage.OnError(System.Exception)", file="Brokerage.cs", label=Exception, span="168-168"];
m0_47 [cluster="QuantConnect.Brokerages.Brokerage.OnError(System.Exception)", file="Brokerage.cs", label="Exit QuantConnect.Brokerages.Brokerage.OnError(System.Exception)", span="159-159"];
m0_9 [cluster="QuantConnect.Brokerages.Brokerage.Connect()", file="Brokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.Connect()", span="91-91"];
m0_10 [cluster="QuantConnect.Brokerages.Brokerage.Connect()", file="Brokerage.cs", label="Exit QuantConnect.Brokerages.Brokerage.Connect()", span="91-91"];
m0_0 [cluster="QuantConnect.Brokerages.Brokerage.Brokerage(string)", file="Brokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.Brokerage(string)", span="62-62"];
m0_1 [cluster="QuantConnect.Brokerages.Brokerage.Brokerage(string)", file="Brokerage.cs", label="Name = name", span="64-64"];
m0_2 [cluster="QuantConnect.Brokerages.Brokerage.Brokerage(string)", file="Brokerage.cs", label="Exit QuantConnect.Brokerages.Brokerage.Brokerage(string)", span="62-62"];
m0_21 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Brokerage.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m0_24 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.PortfolioEvent)", file="Brokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.PortfolioEvent)", span="121-121"];
m0_25 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.PortfolioEvent)", file="Brokerage.cs", label="Log.Trace(''Brokerage.OnPortfolioChanged(): '' + e)", span="125-125"];
m0_28 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.PortfolioEvent)", file="Brokerage.cs", label="handler(this, e)", span="128-128"];
m0_26 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.PortfolioEvent)", file="Brokerage.cs", label="var handler = PortfolioChanged", span="127-127"];
m0_27 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.PortfolioEvent)", file="Brokerage.cs", label="handler != null", span="128-128"];
m0_29 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.PortfolioEvent)", file="Brokerage.cs", label=Exception, span="130-130"];
m0_30 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.PortfolioEvent)", file="Brokerage.cs", label="Log.Error(''Brokerage.OnPortfolioChanged(): Caught Error: '' + error.Message)", span="132-132"];
m0_31 [cluster="QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.PortfolioEvent)", file="Brokerage.cs", label="Exit QuantConnect.Brokerages.Brokerage.OnPortfolioChanged(QuantConnect.Securities.PortfolioEvent)", span="121-121"];
m0_3 [cluster="QuantConnect.Brokerages.Brokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Brokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.PlaceOrder(QuantConnect.Orders.Order)", span="72-72"];
m0_4 [cluster="QuantConnect.Brokerages.Brokerage.PlaceOrder(QuantConnect.Orders.Order)", file="Brokerage.cs", label="Exit QuantConnect.Brokerages.Brokerage.PlaceOrder(QuantConnect.Orders.Order)", span="72-72"];
m0_32 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="Brokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="140-140"];
m0_33 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="Brokerage.cs", label="Log.Trace(''Brokerage.OnAccountChanged(): '' + e)", span="144-144"];
m0_36 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="Brokerage.cs", label="handler(this, e)", span="147-147"];
m0_34 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="Brokerage.cs", label="var handler = AccountChanged", span="146-146"];
m0_35 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="Brokerage.cs", label="handler != null", span="147-147"];
m0_37 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="Brokerage.cs", label=Exception, span="149-149"];
m0_38 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="Brokerage.cs", label="Log.Error(''Brokerage.OnAccountChanged(): Caught Error: '' + error.Message)", span="151-151"];
m0_39 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="Brokerage.cs", label="Exit QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="140-140"];
m0_7 [cluster="QuantConnect.Brokerages.Brokerage.CancelOrder(QuantConnect.Orders.Order)", file="Brokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.CancelOrder(QuantConnect.Orders.Order)", span="86-86"];
m0_8 [cluster="QuantConnect.Brokerages.Brokerage.CancelOrder(QuantConnect.Orders.Order)", file="Brokerage.cs", label="Exit QuantConnect.Brokerages.Brokerage.CancelOrder(QuantConnect.Orders.Order)", span="86-86"];
m0_48 [file="Brokerage.cs", label="QuantConnect.Brokerages.Brokerage", span=""];
m1_0 [cluster="QuantConnect.Interfaces.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Interfaces.BrokerageMessageType, int, string)", file="BrokerageMessageEvent.cs", label="Entry QuantConnect.Interfaces.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Interfaces.BrokerageMessageType, int, string)", span="43-43"];
m1_1 [cluster="QuantConnect.Interfaces.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Interfaces.BrokerageMessageType, int, string)", color=green, community=0, file="BrokerageMessageEvent.cs", label="Type = type", prediction=16, span="45-45"];
m1_2 [cluster="QuantConnect.Interfaces.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Interfaces.BrokerageMessageType, int, string)", color=green, community=0, file="BrokerageMessageEvent.cs", label="Code = code", prediction=17, span="46-46"];
m1_3 [cluster="QuantConnect.Interfaces.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Interfaces.BrokerageMessageType, int, string)", color=green, community=0, file="BrokerageMessageEvent.cs", label="Message = message", prediction=18, span="47-47"];
m1_4 [cluster="QuantConnect.Interfaces.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Interfaces.BrokerageMessageType, int, string)", file="BrokerageMessageEvent.cs", label="Exit QuantConnect.Interfaces.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Interfaces.BrokerageMessageType, int, string)", span="43-43"];
m1_8 [cluster="string.Format(string, object, object, object)", file="BrokerageMessageEvent.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m1_5 [cluster="QuantConnect.Interfaces.BrokerageMessageEvent.ToString()", file="BrokerageMessageEvent.cs", label="Entry QuantConnect.Interfaces.BrokerageMessageEvent.ToString()", span="50-50"];
m1_6 [cluster="QuantConnect.Interfaces.BrokerageMessageEvent.ToString()", color=green, community=0, file="BrokerageMessageEvent.cs", label="return string.Format(''{0} - Code: {1} - {2}'', Type, Code, Message);", prediction=19, span="52-52"];
m1_7 [cluster="QuantConnect.Interfaces.BrokerageMessageEvent.ToString()", file="BrokerageMessageEvent.cs", label="Exit QuantConnect.Interfaces.BrokerageMessageEvent.ToString()", span="50-50"];
m1_9 [file="BrokerageMessageEvent.cs", label="QuantConnect.Interfaces.BrokerageMessageEvent", span=""];
m3_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770"];
m3_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1837-1837"];
m3_0 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", span="34-34"];
m3_1 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", color=green, community=0, file="BrokerageSetupHandler.cs", label="SetStartDate(2013, 10, 1)", prediction=20, span="36-36"];
m3_2 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", color=green, community=0, file="BrokerageSetupHandler.cs", label="SetEndDate(2013, 10, 31)", prediction=20, span="37-37"];
m3_3 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", color=green, community=0, file="BrokerageSetupHandler.cs", label="SetCash(100000)", prediction=20, span="38-38"];
m3_4 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", color=green, community=0, file="BrokerageSetupHandler.cs", label="UniverseSettings.Resolution = Resolution.Hour", prediction=23, span="40-40"];
m3_5 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", color=green, community=0, file="BrokerageSetupHandler.cs", label="AddUniverse(''my-custom-universe'', dt => dt.Day % 7 == 0 ? new List<string> { ''IBM'' } : Enumerable.Empty<string>())", prediction=20, span="43-43"];
m3_6 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.Initialize()", span="34-34"];
m3_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="870-870"];
m3_31 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="79-79"];
m3_32 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="BrokerageSetupHandler.cs", label="_changes = changes", prediction=25, span="81-81"];
m3_33 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="BrokerageSetupHandler.cs", label="Log(Time + '' '' + changes)", prediction=20, span="82-82"];
m3_34 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="79-79"];
m3_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1197-1197"];
m3_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", span="362-362"];
m3_14 [cluster="System.Collections.Generic.List<T>.List()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_15 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="BrokerageSetupHandler.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m3_16 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="50-50"];
m3_17 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BrokerageSetupHandler.cs", label="_changes == SecurityChanges.None", prediction=20, span="52-52"];
m3_18 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BrokerageSetupHandler.cs", label="return;", prediction=28, span="52-52"];
m3_19 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BrokerageSetupHandler.cs", label="_changes.RemovedSecurities", prediction=20, span="55-55"];
m3_20 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BrokerageSetupHandler.cs", label="security.Invested", prediction=30, span="57-57"];
m3_22 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BrokerageSetupHandler.cs", label="Liquidate(security.Symbol)", prediction=20, span="60-60"];
m3_23 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BrokerageSetupHandler.cs", label="_changes.AddedSecurities", prediction=20, span="65-65"];
m3_21 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BrokerageSetupHandler.cs", label="Log(Time + '' Liquidate '' + security.Symbol.Value)", prediction=20, span="59-59"];
m3_24 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BrokerageSetupHandler.cs", label="!security.Invested", prediction=34, span="67-67"];
m3_26 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BrokerageSetupHandler.cs", label="SetHoldings(security.Symbol, 1)", prediction=20, span="70-70"];
m3_25 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BrokerageSetupHandler.cs", label="Log(Time + '' Buy '' + security.Symbol.Value)", prediction=20, span="69-69"];
m3_27 [cluster="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="50-50"];
m3_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1172-1172"];
m3_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1121-1121"];
m3_11 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="43-43"];
m3_12 [cluster="lambda expression", color=green, community=0, file="BrokerageSetupHandler.cs", label="dt.Day % 7 == 0 ? new List<string> { ''IBM'' } : Enumerable.Empty<string>()", prediction=37, span="43-43"];
m3_13 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="43-43"];
m3_35 [file="BrokerageSetupHandler.cs", label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", span=""];
m4_59 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="255-255"];
m4_82 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BrokerageTransactionHandler.cs", label="Order queued", prediction=38, span="257-257"];
m4_83 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BrokerageTransactionHandler.cs", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", prediction=39, span="258-258"];
m4_84 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BrokerageTransactionHandler.cs", label="_orders[order.Id] = order", prediction=40, span="260-260"];
m4_87 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleCancelledOrder(): Unable to cancel order with ID '' + order.Id + ''.'')", prediction=39, span="270-270"];
m4_85 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BrokerageTransactionHandler.cs", label="!_brokerage.CancelOrder(order)", prediction=39, span="262-262"];
m4_86 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", prediction=43, span="265-265"];
m4_88 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="255-255"];
m4_23 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="268-268"];
m4_53 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m4_12 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="67-95"];
m4_13 [cluster="lambda expression", color=green, community=0, file="BrokerageTransactionHandler.cs", label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", prediction=39, span="75-75"];
m4_14 [cluster="lambda expression", color=green, community=0, file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.ProcessFill(fill)", prediction=39, span="77-77"];
m4_15 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="fill.Status != OrderStatus.None", span="81-81"];
m4_16 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Engine.ResultHandler.OrderEvent(fill)", span="84-84"];
m4_17 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="_algorithm.OnOrderEvent(fill)", span="88-88"];
m4_19 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="92-92"];
m4_18 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label=Exception, span="90-90"];
m4_20 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="67-95"];
m4_55 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m4_25 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="127-127"];
m4_26 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="!_exitTriggered", span="129-129"];
m4_28 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="!_orderQueue.TryDequeue(out order)", span="134-134"];
m4_29 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="_algorithm.ProcessingOrder = false", span="136-136"];
m4_31 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="_algorithm.ProcessingOrder = true", span="141-141"];
m4_34 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="!_orders.TryAdd(order.Id, order)", span="149-149"];
m4_38 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="HandleNewOrder(order)", span="160-160"];
m4_40 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="HandleUpdatedOrder(order)", span="164-164"];
m4_42 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="HandleCancelledOrder(order)", span="168-168"];
m4_49 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="ProcessSynchronousEvents()", span="181-181"];
m4_51 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="IsActive = false", span="185-185"];
m4_27 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Order order", span="133-133"];
m4_33 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Encountered OrderDirection.Hold in OrderID: '' + order.Id)", span="146-146"];
m4_35 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Unable to add order to permanent storage. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="151-151"];
m4_48 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Invalid order status found in order queue. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="177-177"];
m4_30 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Thread.Sleep(1)", span="137-137"];
m4_50 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="184-184"];
m4_32 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="order.Direction == OrderDirection.Hold", span="144-144"];
m4_36 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="order.Status", span="157-157"];
m4_37 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.New", span="159-159"];
m4_39 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Update", span="163-163"];
m4_41 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Canceled", span="167-167"];
m4_47 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Submitted", span="176-176"];
m4_43 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.None", span="172-172"];
m4_46 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Filled", span="175-175"];
m4_44 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Invalid", span="173-173"];
m4_45 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.PartiallyFilled", span="174-174"];
m4_52 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="127-127"];
m4_63 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="199-199"];
m4_64 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="_exitTriggered = true", span="201-201"];
m4_65 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="199-199"];
m4_60 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="191-191"];
m4_62 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="191-191"];
m4_58 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="233-233"];
m4_74 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="236-236"];
m4_75 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders[order.Id] = order", span="238-238"];
m4_76 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="!_brokerage.UpdateOrder(order)", span="239-239"];
m4_78 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleUpdatedOrder(): Unable to update order with ID '' + order.Id + ''.'')", span="247-247"];
m4_73 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Order queued", span="235-235"];
m4_77 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="242-242"];
m4_79 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="233-233"];
m4_56 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m4_72 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="46-46"];
m4_24 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="246-246"];
m4_80 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_57 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="208-208"];
m4_66 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders.TryAdd(order.Id, order)", span="211-211"];
m4_67 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_brokerage.PlaceOrder(order)", span="214-214"];
m4_70 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleNewOrder(): Unable to add new order, order not processed.'')", span="225-225"];
m4_68 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Submitted", span="216-216"];
m4_69 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="220-220"];
m4_71 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="208-208"];
m4_21 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="459-459"];
m4_54 [cluster="System.Threading.Thread.Sleep(int)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m4_22 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213"];
m4_89 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="60-60"];
m4_61 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m4_81 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="53-53"];
m4_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59"];
m4_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", color=green, community=0, file="BrokerageTransactionHandler.cs", label="_brokerage.OrderEvent += (sender, fill) =>\r\n            {\r\n                // save that the order event took place, we're initializing the list with a capacity of 2 to reduce number of mallocs\r\n                //these hog memory\r\n                //List<OrderEvent> orderEvents = _orderEvents.GetOrAdd(orderEvent.OrderId, i => new List<OrderEvent>(2));\r\n                //orderEvents.Add(orderEvent);\r\n\r\n                //Apply the filled order to our portfolio:\r\n                if (fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled)\r\n                {\r\n                    _algorithm.Portfolio.ProcessFill(fill);\r\n                }\r\n\r\n                //We have an event! :) Order filled, send it in to be handled by algorithm portfolio.\r\n                if (fill.Status != OrderStatus.None) //order.Status != OrderStatus.Submitted\r\n                {\r\n                    //Create new order event:\r\n                    Engine.ResultHandler.OrderEvent(fill);\r\n                    try\r\n                    {\r\n                        //Trigger our order event handler\r\n                        _algorithm.OnOrderEvent(fill);\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        _algorithm.Error(''Order Event Handler Error: '' + err.Message);\r\n                    }\r\n                }\r\n            }", prediction=39, span="67-95"];
m4_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_brokerage = brokerage", span="66-66"];
m4_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="IsActive = true", span="100-100"];
m4_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_algorithm = algorithm", span="102-102"];
m4_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_orders = algorithm.Transactions.Orders", span="105-105"];
m4_8 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_orderEvents = algorithm.Transactions.OrderEvents", span="106-106"];
m4_9 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_orderQueue = algorithm.Transactions.OrderQueue", span="107-107"];
m4_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="brokerage == null", span="61-61"];
m4_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="throw new ArgumentNullException(''brokerage'');", span="63-63"];
m4_10 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59"];
m4_90 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span=""];
m8_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Engine.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m8_2 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, int, System.DateTime, string)", file="Engine.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="47-47"];
m8_3 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, int, System.DateTime, string)", file="Engine.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="47-47"];
m8_0 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="Engine.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="36-36"];
m8_1 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="Engine.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="36-36"];
m8_7 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="Engine.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.Clone()", span="65-65"];
m8_8 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="Engine.cs", label="var order = new MarketOnCloseOrder()", span="67-67"];
m8_9 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="Engine.cs", label="CopyTo(order)", span="68-68"];
m8_10 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="Engine.cs", label="return order;", span="69-69"];
m8_11 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="Engine.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.Clone()", span="65-65"];
m8_4 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="Engine.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m8_5 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="Engine.cs", label="return Quantity*security.Price;", span="58-58"];
m8_6 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="Engine.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m8_13 [file="Engine.cs", label="QuantConnect.Orders.MarketOnCloseOrder", span=""];
m9_0 [cluster="QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", file="Extensions.cs", label="Entry QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", span="90-90"];
m9_1 [cluster="QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", file="Extensions.cs", label="Exit QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", span="90-90"];
m10_5 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", span="68-68"];
m10_6 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="Global.cs", label=_triggered, span="70-70"];
m10_8 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="Global.cs", label="time.TimeOfDay > _triggerTime", span="76-76"];
m10_9 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="Global.cs", label="_triggered = true", span="78-78"];
m10_10 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="Global.cs", label="_callback()", span="83-83"];
m10_7 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="Global.cs", label="return;", span="72-72"];
m10_11 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="Global.cs", label=Exception, span="85-85"];
m10_12 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="Global.cs", label="Log.Error(''RealTimeEvent.Scan(): Error in callback: '' + err.Message)", span="87-87"];
m10_13 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", file="Global.cs", label="Exit QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Scan(System.DateTime)", span="68-68"];
m10_15 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Global.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="85-85"];
m10_0 [cluster="QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", file="Global.cs", label="Entry QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", span="90-90"];
m10_1 [cluster="QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", file="Global.cs", label="Exit QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", span="90-90"];
m10_2 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.TimeSpan, System.Action)", file="Global.cs", label="_triggerTime = triggerTime", span="57-57"];
m10_3 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.TimeSpan, System.Action)", file="Global.cs", label="_callback = callback", span="58-58"];
m10_4 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.TimeSpan, System.Action)", file="Global.cs", label="Exit QuantConnect.Lean.Engine.RealTime.RealTimeEvent.RealTimeEvent(System.TimeSpan, System.Action)", span="54-54"];
m10_16 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", file="Global.cs", label="Entry QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", span="95-95"];
m10_17 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", color=green, community=0, file="Global.cs", label="_triggered = false", prediction=47, span="97-97"];
m10_18 [cluster="QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", file="Global.cs", label="Exit QuantConnect.Lean.Engine.RealTime.RealTimeEvent.Reset()", span="95-95"];
m10_14 [cluster="System.Action.Invoke()", file="Global.cs", label="Entry System.Action.Invoke()", span="0-0"];
m10_19 [file="Global.cs", label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", span=""];
m11_8 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="IBrokerage.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="70-70"];
m11_9 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="IBrokerage.cs", label="Exit QuantConnect.Interfaces.IBrokerage.Disconnect()", span="70-70"];
m11_4 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="60-60"];
m11_5 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Exit QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="60-60"];
m11_0 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="46-46"];
m11_1 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Exit QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="46-46"];
m11_2 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="53-53"];
m11_3 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Exit QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="53-53"];
m11_6 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="IBrokerage.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="65-65"];
m11_7 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="IBrokerage.cs", label="Exit QuantConnect.Interfaces.IBrokerage.Connect()", span="65-65"];
m17_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="87-87"];
m17_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="87-87"];
m17_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="InteractiveBrokersBrokerageTests.cs", label="var handler = InvalidSource", span="89-89"];
m17_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="InteractiveBrokersBrokerageTests.cs", label="handler(this, new InvalidSourceEventArgs(source, exception))", span="90-90"];
m17_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="InteractiveBrokersBrokerageTests.cs", label="handler != null", span="90-90"];
m17_22 [cluster="Unk.OnInvalidSource", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.OnInvalidSource", span=""];
m17_29 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m17_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="InteractiveBrokersBrokerageTests.cs", label="OnInvalidSource(source, err)", span="72-72"];
m17_5 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(15093000, ms)", span="33-33"];
m17_0 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", span="25-25"];
m17_1 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="string line = ''15093000,1456300,100,P,T,0''", prediction=48, span="27-27"];
m17_2 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="var baseDate = new DateTime(2013, 10, 08)", prediction=49, span="29-29"];
m17_3 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", file="InteractiveBrokersBrokerageTests.cs", label="var tick = new Tick(Symbols.SPY, line, baseDate)", span="30-30"];
m17_4 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", file="InteractiveBrokersBrokerageTests.cs", label="var ms = (tick.Time - baseDate).TotalMilliseconds", span="32-32"];
m17_23 [cluster="Unk.Reader", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Reader", span=""];
m17_19 [cluster="System.IO.FileNotFoundException.FileNotFoundException(string, string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.IO.FileNotFoundException.FileNotFoundException(string, string)", span="0-0"];
m17_21 [cluster="ZipFile.cstr", file="InteractiveBrokersBrokerageTests.cs", label="Entry ZipFile.cstr", span=""];
m17_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="InteractiveBrokersBrokerageTests.cs", label="yield break;", span="73-73"];
m17_18 [cluster="System.IO.File.Exists(string)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m17_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="InteractiveBrokersBrokerageTests.cs", label=ZipException, span="70-70"];
m17_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", span="58-58"];
m17_7 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(100, tick.Quantity)", span="35-35"];
m17_8 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(''P'', tick.Exchange)", span="36-36"];
m17_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="InteractiveBrokersBrokerageTests.cs", label="yield return _factory.Reader(_config, entryFileName, _dateTime, _isLiveMode);", span="78-78"];
m17_9 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(''T'', tick.SaleCondition)", prediction=50, span="37-37"];
m17_11 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", span="25-25"];
m17_10 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(false, tick.Suspicious)", prediction=50, span="38-38"];
m17_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="InteractiveBrokersBrokerageTests.cs", label="zip.EntryFileNames", span="76-76"];
m17_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="46-46"];
m17_6 [cluster="QuantConnect.Tests.Common.Data.Market.TickTests.ConstructsFromLine()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(1456300, tick.LastPrice * 10000m)", span="34-34"];
m17_30 [file="InteractiveBrokersBrokerageTests.cs", label="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory", span=""];
m19_36 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="Entry lambda expression", span="120-135"];
m19_39 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="return parent.Id == id;", span="127-127"];
m19_37 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="var parent = ProcessExtensions.Parent(x)", span="124-124"];
m19_38 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="parent != null", span="125-125"];
m19_40 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="return false;", span="132-132"];
m19_41 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="return false;", span="134-134"];
m19_42 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="Exit lambda expression", span="120-135"];
m19_22 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m19_31 [cluster="System.Diagnostics.Process.Kill()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.Kill()", span="0-0"];
m19_60 [cluster="System.Diagnostics.PerformanceCounter.NextValue()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.PerformanceCounter.NextValue()", span="0-0"];
m19_61 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", span="160-160"];
m19_62 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="InteractiveBrokersGatewayRunner.cs", label="var parentId = new PerformanceCounter(''Process'', ''Creating Process ID'', indexedProcessName)", span="162-162"];
m19_63 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="InteractiveBrokersGatewayRunner.cs", label="return Process.GetProcessById((int)parentId.NextValue());", span="163-163"];
m19_64 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", span="160-160"];
m19_35 [cluster="Unk.Where", file="InteractiveBrokersGatewayRunner.cs", label="Entry Unk.Where", span=""];
m19_57 [cluster="System.Diagnostics.Process.GetProcessById(int)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.GetProcessById(int)", span="0-0"];
m19_58 [cluster="System.Diagnostics.Process.GetProcessesByName(string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.GetProcessesByName(string)", span="0-0"];
m19_19 [cluster="string.Format(string, object)", file="InteractiveBrokersGatewayRunner.cs", label="Entry string.Format(string, object)", span="0-0"];
m19_21 [cluster="System.Threading.Thread.Sleep(int)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m19_34 [cluster="System.Diagnostics.Process.GetProcesses()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.GetProcesses()", span="0-0"];
m19_43 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", span="166-166"];
m19_65 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="InteractiveBrokersGatewayRunner.cs", label="return FindPidFromIndexedProcessName(FindIndexedProcessName(process.Id));", span="168-168"];
m19_66 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", span="166-166"];
m19_17 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m19_18 [cluster="System.Diagnostics.ProcessStartInfo.ProcessStartInfo(string, string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.ProcessStartInfo.ProcessStartInfo(string, string)", span="0-0"];
m19_20 [cluster="System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", span="0-0"];
m19_44 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", span="141-141"];
m19_45 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="var processName = Process.GetProcessById(pid).ProcessName", span="143-143"];
m19_52 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="(int)processId.NextValue() == pid", span="151-151"];
m19_46 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="var processesByName = Process.GetProcessesByName(processName)", span="144-144"];
m19_50 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="processIndexdName = index == 0 ? processName : processName + ''#'' + index", span="149-149"];
m19_47 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="string processIndexdName = null", span="145-145"];
m19_49 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="index < processesByName.Length", span="147-147"];
m19_48 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="var index = 0", span="147-147"];
m19_55 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="return processIndexdName;", span="157-157"];
m19_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="index++", span="147-147"];
m19_51 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="var processId = new PerformanceCounter(''Process'', ''ID Process'', processIndexdName)", span="150-150"];
m19_53 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="return processIndexdName;", span="153-153"];
m19_56 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", span="141-141"];
m19_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", span="58-58"];
m19_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="ProcessStartInfo processStartInfo", span="66-66"];
m19_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="OS.IsWindows", span="67-67"];
m19_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="processStartInfo = new ProcessStartInfo(''cmd.exe'', ''/C '' + string.Format(''C:\\IBController\\{0}.bat'', Controller))", span="69-69"];
m19_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="processStartInfo = new ProcessStartInfo(''bash'', string.Format(''C:\\IBController\\{0}.sh'', Controller))", span="73-73"];
m19_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="processStartInfo.UseShellExecute = false", span="76-76"];
m19_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="processStartInfo.RedirectStandardOutput = true", span="77-77"];
m19_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="var process = Process.Start(processStartInfo)", span="78-78"];
m19_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="ScriptProcessID = process.Id", span="79-79"];
m19_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label=UseTWS, span="81-81"];
m19_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="Thread.Sleep(10000)", span="84-84"];
m19_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="Thread.Sleep(15000)", span="87-87"];
m19_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label=Exception, span="90-90"];
m19_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", span="58-58"];
m19_59 [cluster="System.Diagnostics.PerformanceCounter.PerformanceCounter(string, string, string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.PerformanceCounter.PerformanceCounter(string, string, string)", span="0-0"];
m19_23 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="99-99"];
m19_26 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="process.Kill()", span="108-108"];
m19_27 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label=Exception, span="111-111"];
m19_29 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="99-99"];
m19_30 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", span="117-117"];
m19_32 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="InteractiveBrokersGatewayRunner.cs", label="return Process.GetProcesses().Where(x =>\r\n            {\r\n                try\r\n                {\r\n                    var parent = ProcessExtensions.Parent(x);\r\n                    if (parent != null)\r\n                    {\r\n                        return parent.Id == id;\r\n                    }\r\n                }\r\n                catch\r\n                {\r\n                    return false;\r\n                }\r\n                return false;\r\n            });", span="120-135"];
m19_33 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", span="117-117"];
m19_67 [file="InteractiveBrokersGatewayRunner.cs", label=int, span=""];
m20_28 [cluster="QuantConnect.Notifications.NotificationManager.Sms(string, string)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Notifications.NotificationManager.Sms(string, string)", span="110-110"];
m20_14 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", span="47-47"];
m20_15 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs", label=LiveMode, span="49-49"];
m20_16 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs", label="SetRuntimeStatistic(''BTC'', data.Close.ToString(''C''))", span="52-52"];
m20_17 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs", label="!Portfolio.HoldStock", span="55-55"];
m20_18 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs", label="Order(''BTC'', 100)", span="57-57"];
m20_19 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs", label="Notify.Email(''myemail@gmail.com'', ''Test'', ''Test Body'', ''test attachment'')", span="60-60"];
m20_20 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs", label="Notify.Sms(''+11233456789'', Time.ToString(''u'') + ''>> Test message from live BTC server.'')", span="61-61"];
m20_21 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs", label="Notify.Web(''http://api.quantconnect.com'', Time.ToString(''u'') + ''>> Test data packet posted from live BTC server.'')", span="62-62"];
m20_22 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs", label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", span="47-47"];
m20_0 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", span="30-30"];
m20_1 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs", label="SetStartDate(2013, 1, 1)", span="32-32"];
m20_2 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs", label="SetEndDate(DateTime.Now.Date.AddDays(-1))", span="33-33"];
m20_3 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs", label="SetCash(25000)", span="34-34"];
m20_4 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs", label="AddSecurity(SecurityType.Equity, ''AAPL'', Resolution.Second)", span="37-37"];
m20_5 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs", label="AddSecurity(SecurityType.Forex, ''EURUSD'', Resolution.Minute)", span="40-40"];
m20_6 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs", label="AddData<Bitcoin>(''BTC'', Resolution.Second)", span="43-43"];
m20_7 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs", label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", span="30-30"];
m20_44 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="126-126"];
m20_45 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="var source = ''''", span="128-128"];
m20_46 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label=datafeed, span="130-130"];
m20_47 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", color=green, community=0, file="LiveFeaturesAlgorithm.cs", label="DataFeedEndpoint.Backtesting", prediction=52, span="133-133"];
m20_49 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="DataFeedEndpoint.LiveTrading", span="138-138"];
m20_48 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="source = ''http://www.quandl.com/api/v1/datasets/BITCOIN/BITSTAMPUSD.csv?sort_order=asc''", span="134-134"];
m20_50 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="source = ''https://www.bitstamp.net/api/ticker/''", span="140-140"];
m20_51 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="System.Console.WriteLine(DateTime.Now.ToString(''u'') + '' SOURCE >> '' + source)", span="144-144"];
m20_52 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="return source;", span="146-146"];
m20_53 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="Exit QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="126-126"];
m20_37 [cluster="QuantConnect.Data.Market.TradeBars.ContainsKey(string)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBars.ContainsKey(string)", span="199-199"];
m20_84 [cluster="string.Split(params char[])", file="LiveFeaturesAlgorithm.cs", label="Entry string.Split(params char[])", span="0-0"];
m20_26 [cluster="QuantConnect.Notifications.NotificationManager.Email(string, string, string, string)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Notifications.NotificationManager.Email(string, string, string, string)", span="91-91"];
m20_24 [cluster="Unk.SetRuntimeStatistic", file="LiveFeaturesAlgorithm.cs", label="Entry Unk.SetRuntimeStatistic", span=""];
m20_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="669-669"];
m20_54 [cluster="System.Console.WriteLine(string)", file="LiveFeaturesAlgorithm.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m20_85 [cluster="System.DateTime.Parse(string)", file="LiveFeaturesAlgorithm.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m20_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", span="185-185"];
m20_23 [cluster="Unk.ToString", file="LiveFeaturesAlgorithm.cs", label="Entry Unk.ToString", span=""];
m20_27 [cluster="System.DateTime.ToString(string)", file="LiveFeaturesAlgorithm.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m20_55 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="152-152"];
m20_56 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="Bitcoin coin = new Bitcoin()", span="154-154"];
m20_57 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label=datafeed, span="155-155"];
m20_59 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="string[] data = line.Split(',')", span="163-163"];
m20_70 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="var liveBTC = JsonConvert.DeserializeObject<LiveBitcoin>(line)", span="182-182"];
m20_80 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="System.Console.WriteLine(DateTime.Now.ToString(''u'') + '' READER >> '' + line + '' COIN >> '' + coin.Time.ToString(''u''))", span="197-197"];
m20_60 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Time = DateTime.Parse(data[0])", span="164-164"];
m20_67 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Symbol = ''BTC''", span="171-171"];
m20_68 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Value = coin.Close", span="172-172"];
m20_71 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Time = DateTime.Now", span="183-183"];
m20_78 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Symbol = ''BTC''", span="190-190"];
m20_79 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Value = coin.Close", span="191-191"];
m20_81 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="return coin;", span="199-199"];
m20_58 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="DataFeedEndpoint.Backtesting", span="160-160"];
m20_69 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="DataFeedEndpoint.LiveTrading", span="179-179"];
m20_61 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Open = Convert.ToDecimal(data[1], CultureInfo.InvariantCulture)", span="165-165"];
m20_62 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.High = Convert.ToDecimal(data[2], CultureInfo.InvariantCulture)", span="166-166"];
m20_63 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Low = Convert.ToDecimal(data[3], CultureInfo.InvariantCulture)", span="167-167"];
m20_64 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Close = Convert.ToDecimal(data[4], CultureInfo.InvariantCulture)", span="168-168"];
m20_65 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.VolumeBTC = Convert.ToDecimal(data[5], CultureInfo.InvariantCulture)", span="169-169"];
m20_66 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.WeightedPrice = Convert.ToDecimal(data[7], CultureInfo.InvariantCulture)", span="170-170"];
m20_72 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Open = liveBTC.Last", span="184-184"];
m20_73 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.High = liveBTC.High", span="185-185"];
m20_74 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Low = liveBTC.Low", span="186-186"];
m20_75 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.Close = liveBTC.Last", span="187-187"];
m20_76 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.VolumeBTC = liveBTC.Volume", span="188-188"];
m20_77 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="coin.WeightedPrice = liveBTC.VWAP", span="189-189"];
m20_82 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="LiveFeaturesAlgorithm.cs", label="Exit QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="152-152"];
m20_29 [cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Notifications.NotificationManager.Web(string, object)", span="127-127"];
m20_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="442-442"];
m20_87 [cluster="Unk.>", file="LiveFeaturesAlgorithm.cs", label="Entry Unk.>", span=""];
m20_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="723-723"];
m20_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="409-409"];
m20_30 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="66-66"];
m20_31 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs", label="!Portfolio.HoldStock && data.ContainsKey(''AAPL'')", span="68-68"];
m20_32 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs", label="int quantity = (int)Math.Floor(Portfolio.Cash / data[''AAPL''].Close)", span="70-70"];
m20_33 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs", label="Order(''AAPL'', quantity)", span="71-71"];
m20_34 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs", label="Debug(''Purchased SPY on '' + Time.ToShortDateString())", span="72-72"];
m20_35 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs", label="Notify.Email(''myemail@gmail.com'', ''Test'', ''Test Body'', ''test attachment'')", span="73-73"];
m20_36 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs", label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="66-66"];
m20_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="535-535"];
m20_39 [cluster="System.DateTime.ToShortDateString()", file="LiveFeaturesAlgorithm.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m20_38 [cluster="System.Math.Floor(decimal)", file="LiveFeaturesAlgorithm.cs", label="Entry System.Math.Floor(decimal)", span="0-0"];
m20_41 [cluster="QuantConnect.Bitcoin.Bitcoin()", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Bitcoin.Bitcoin()", span="118-118"];
m20_42 [cluster="QuantConnect.Bitcoin.Bitcoin()", file="LiveFeaturesAlgorithm.cs", label="Symbol = ''BTC''", span="120-120"];
m20_43 [cluster="QuantConnect.Bitcoin.Bitcoin()", file="LiveFeaturesAlgorithm.cs", label="Exit QuantConnect.Bitcoin.Bitcoin()", span="118-118"];
m20_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="LiveFeaturesAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="608-608"];
m20_9 [cluster="System.DateTime.AddDays(double)", file="LiveFeaturesAlgorithm.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m20_83 [cluster="Bitcoin.cstr", file="LiveFeaturesAlgorithm.cs", label="Entry Bitcoin.cstr", span=""];
m20_86 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="LiveFeaturesAlgorithm.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
m20_88 [file="LiveFeaturesAlgorithm.cs", label="QuantConnect.LiveTradingFeaturesAlgorithm", span=""];
m20_89 [file="LiveFeaturesAlgorithm.cs", label="QuantConnect.Bitcoin", span=""];
m21_19 [cluster="QuantConnect.Securities.Security.GetLastData()", file="OrderEvent.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="419-419"];
m21_20 [cluster="QuantConnect.Securities.Security.GetLastData()", file="OrderEvent.cs", label="return Cache.GetData();", span="421-421"];
m21_21 [cluster="QuantConnect.Securities.Security.GetLastData()", file="OrderEvent.cs", label="Exit QuantConnect.Securities.Security.GetLastData()", span="419-419"];
m21_13 [cluster="QuantConnect.Securities.SecurityDataFilter.SecurityDataFilter()", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityDataFilter.SecurityDataFilter()", span="28-28"];
m21_46 [cluster="QuantConnect.Securities.Security.ToString()", file="OrderEvent.cs", label="Entry QuantConnect.Securities.Security.ToString()", span="475-475"];
m21_47 [cluster="QuantConnect.Securities.Security.ToString()", file="OrderEvent.cs", label="return Symbol.ToString();", span="477-477"];
m21_48 [cluster="QuantConnect.Securities.Security.ToString()", file="OrderEvent.cs", label="Exit QuantConnect.Securities.Security.ToString()", span="475-475"];
m21_18 [cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security)", span="39-39"];
m21_16 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", span="62-62"];
m21_22 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData()", span="50-50"];
m21_37 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="40-40"];
m21_27 [cluster="lambda expression", file="OrderEvent.cs", label="Entry lambda expression", span="432-436"];
m21_28 [cluster="lambda expression", file="OrderEvent.cs", label="Exchange.SetLocalDateTimeFrontier(args.Time)", span="435-435"];
m21_29 [cluster="lambda expression", file="OrderEvent.cs", label="Exit lambda expression", span="432-436"];
m21_49 [cluster="QuantConnect.Symbol.ToString()", file="OrderEvent.cs", label="Entry QuantConnect.Symbol.ToString()", span="183-183"];
m21_31 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="443-443"];
m21_32 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="OrderEvent.cs", label="data == null", span="446-446"];
m21_34 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="OrderEvent.cs", label="Cache.AddData(data)", span="447-447"];
m21_35 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="OrderEvent.cs", label="Holdings.UpdateMarketPrice(data.Value)", span="448-448"];
m21_33 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="OrderEvent.cs", label="return;", span="446-446"];
m21_36 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="OrderEvent.cs", label="Exit QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="443-443"];
m21_38 [cluster="QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", span="353-353"];
m21_11 [cluster="QuantConnect.Securities.SecurityCache.SecurityCache()", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityCache.SecurityCache()", span="34-34"];
m21_23 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="429-429"];
m21_24 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="OrderEvent.cs", label="_localTimeKeeper = localTimeKeeper", span="431-431"];
m21_25 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="OrderEvent.cs", label="_localTimeKeeper.TimeUpdated += (sender, args) =>\r\n            {\r\n                //Update the Exchange/Timer:\r\n                Exchange.SetLocalDateTimeFrontier(args.Time);\r\n            }", span="432-436"];
m21_26 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="OrderEvent.cs", label="Exit QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="429-429"];
m21_15 [cluster="QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", span="36-36"];
m21_30 [cluster="QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", span="117-117"];
m21_0 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", span="254-254"];
m21_1 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="OrderEvent.cs", label="_config = config", span="256-256"];
m21_3 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="OrderEvent.cs", label="Exchange = new SecurityExchange(exchangeHours)", span="259-259"];
m21_7 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="OrderEvent.cs", label="MarginModel = new SecurityMarginModel(leverage)", span="263-263"];
m21_2 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="OrderEvent.cs", label="Cache = new SecurityCache()", span="258-258"];
m21_4 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="OrderEvent.cs", label="DataFilter = new SecurityDataFilter()", span="260-260"];
m21_5 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="OrderEvent.cs", label="PortfolioModel = new SecurityPortfolioModel()", span="261-261"];
m21_6 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="OrderEvent.cs", label="TransactionModel = new SecurityTransactionModel()", span="262-262"];
m21_8 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="OrderEvent.cs", label="SettlementModel = new ImmediateSettlementModel()", span="264-264"];
m21_9 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="OrderEvent.cs", label="Holdings = new SecurityHolding(this)", span="265-265"];
m21_10 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="OrderEvent.cs", label="Exit QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", span="254-254"];
m21_14 [cluster="QuantConnect.Securities.SecurityPortfolioModel.SecurityPortfolioModel()", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityPortfolioModel.SecurityPortfolioModel()", span="25-25"];
m21_17 [cluster="QuantConnect.Securities.ImmediateSettlementModel.ImmediateSettlementModel()", file="OrderEvent.cs", label="Entry QuantConnect.Securities.ImmediateSettlementModel.ImmediateSettlementModel()", span="23-23"];
m21_39 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="455-455"];
m21_40 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="OrderEvent.cs", label="MarginModel.SetLeverage(this, leverage)", span="457-457"];
m21_41 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="OrderEvent.cs", label="Exit QuantConnect.Securities.Security.SetLeverage(decimal)", span="455-455"];
m21_12 [cluster="QuantConnect.Securities.SecurityExchange.SecurityExchange(QuantConnect.Securities.SecurityExchangeHours)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.SecurityExchange.SecurityExchange(QuantConnect.Securities.SecurityExchangeHours)", span="108-108"];
m21_42 [cluster="QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="39-39"];
m21_43 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="OrderEvent.cs", label="Entry QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="463-463"];
m21_44 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="OrderEvent.cs", label="_config.DataNormalizationMode = mode", span="465-465"];
m21_45 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="OrderEvent.cs", label="Exit QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="463-463"];
m21_50 [file="OrderEvent.cs", label="QuantConnect.Securities.Security", span=""];
m22_12 [cluster="System.Math.Abs(decimal)", file="PaperTradingSetupHandler.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m22_32 [cluster="string.Format(string, params object[])", file="PaperTradingSetupHandler.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m22_31 [cluster="string.Format(string, object, object, object)", file="PaperTradingSetupHandler.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m22_0 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", span="101-101"];
m22_1 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="OrderId = orderId", span="103-103"];
m22_2 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="Symbol = symbol", span="104-104"];
m22_3 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="UtcTime = utcTime", span="105-105"];
m22_4 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="Status = status", span="106-106"];
m22_5 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="Direction = direction", span="107-107"];
m22_6 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="FillPrice = fillPrice", span="108-108"];
m22_8 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="FillQuantity = fillQuantity", span="110-110"];
m22_9 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="OrderFee = Math.Abs(orderFee)", span="111-111"];
m22_10 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="Message = message", span="112-112"];
m22_7 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="FillPriceCurrency = string.Empty", span="109-109"];
m22_11 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", span="101-101"];
m22_33 [cluster="string.Format(string, object, object)", file="PaperTradingSetupHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m22_37 [cluster="object.MemberwiseClone()", file="PaperTradingSetupHandler.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m22_25 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="146-146"];
m22_27 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="PaperTradingSetupHandler.cs", label="OrderFee != 0m", span="153-153"];
m22_28 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="PaperTradingSetupHandler.cs", label="message += string.Format('' OrderFee: {0} {1}'', OrderFee, CashBook.AccountCurrency)", span="153-153"];
m22_29 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="PaperTradingSetupHandler.cs", label="return message;", span="155-155"];
m22_30 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.Orders.OrderEvent.ToString()", span="146-146"];
m22_13 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="122-122"];
m22_14 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PaperTradingSetupHandler.cs", label="OrderId = order.Id", span="124-124"];
m22_15 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PaperTradingSetupHandler.cs", label="Symbol = order.Symbol", span="125-125"];
m22_17 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PaperTradingSetupHandler.cs", label="Direction = order.Direction", span="127-127"];
m22_20 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PaperTradingSetupHandler.cs", label="FillPriceCurrency = order.PriceCurrency", span="132-132"];
m22_21 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PaperTradingSetupHandler.cs", label="UtcTime = utcTime", span="134-134"];
m22_22 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PaperTradingSetupHandler.cs", label="OrderFee = Math.Abs(orderFee)", span="135-135"];
m22_23 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PaperTradingSetupHandler.cs", label="Message = message", span="136-136"];
m22_18 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PaperTradingSetupHandler.cs", label="FillQuantity = 0", span="130-130"];
m22_19 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PaperTradingSetupHandler.cs", label="FillPrice = 0", span="131-131"];
m22_24 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="122-122"];
m22_34 [cluster="QuantConnect.Orders.OrderEvent.Clone()", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.Orders.OrderEvent.Clone()", span="162-162"];
m22_35 [cluster="QuantConnect.Orders.OrderEvent.Clone()", file="PaperTradingSetupHandler.cs", label="return (OrderEvent)MemberwiseClone();", span="164-164"];
m22_36 [cluster="QuantConnect.Orders.OrderEvent.Clone()", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.Orders.OrderEvent.Clone()", span="162-162"];
m22_38 [file="PaperTradingSetupHandler.cs", label="QuantConnect.Orders.OrderEvent", span=""];
m23_5 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="PortfolioEvent.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
m23_56 [cluster="QuantConnect.Chart.Chart(string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
m23_90 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="192-192"];
m23_91 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="192-192"];
m23_96 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", span="209-209"];
m23_97 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.RuntimeStatistic(string, string)", span="209-209"];
m23_25 [cluster="QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", span="91-91"];
m23_26 [cluster="QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", file="PortfolioEvent.cs", label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _job.AlgorithmId, _job.CompileId, message))", span="93-93"];
m23_27 [cluster="QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.DebugMessage(string)", span="91-91"];
m23_44 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", span="116-116"];
m23_45 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="PortfolioEvent.cs", label="Messages.Enqueue(new RuntimeErrorPacket(_job.UserId, _job.AlgorithmId, message, stacktrace))", span="118-118"];
m23_46 [cluster="QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.RuntimeError(string, string)", span="116-116"];
m23_17 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="PortfolioEvent.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m23_28 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", file="PortfolioEvent.cs", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", span="74-74"];
m23_34 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="102-102"];
m23_35 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="102-102"];
m23_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="PortfolioEvent.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m23_103 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="PortfolioEvent.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m23_20 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="77-77"];
m23_21 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="PortfolioEvent.cs", label="_job = job", span="84-84"];
m23_22 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="77-77"];
m23_59 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212"];
m23_36 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", span="106-106"];
m23_37 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="PortfolioEvent.cs", label="Messages.Enqueue(new LogPacket(_job.AlgorithmId, message))", span="108-108"];
m23_38 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", span="106-106"];
m23_104 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", span="222-222"];
m23_105 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="PortfolioEvent.cs", label="Messages.Clear()", span="224-224"];
m23_106 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", span="222-222"];
m23_43 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
m23_7 [cluster="lambda expression", file="PortfolioEvent.cs", label="Entry lambda expression", span="52-52"];
m23_9 [cluster="lambda expression", file="PortfolioEvent.cs", label="Entry lambda expression", span="54-74"];
m23_8 [cluster="lambda expression", file="PortfolioEvent.cs", label="Exit lambda expression", span="52-52"];
m23_10 [cluster="lambda expression", file="PortfolioEvent.cs", label="IsActive = true", span="58-58"];
m23_11 [cluster="lambda expression", file="PortfolioEvent.cs", label="!_cancellationTokenSource.IsCancellationRequested", span="59-59"];
m23_12 [cluster="lambda expression", file="PortfolioEvent.cs", label="Packet packet", span="61-61"];
m23_13 [cluster="lambda expression", file="PortfolioEvent.cs", label="Messages.TryDequeue(out packet)", span="62-62"];
m23_14 [cluster="lambda expression", file="PortfolioEvent.cs", label="_packetHandler(packet)", span="64-64"];
m23_15 [cluster="lambda expression", file="PortfolioEvent.cs", label="Thread.Sleep(1)", span="67-67"];
m23_16 [cluster="lambda expression", file="PortfolioEvent.cs", label="Exit lambda expression", span="54-74"];
m23_75 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="159-159"];
m23_76 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="PortfolioEvent.cs", label=updates, span="161-161"];
m23_77 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="PortfolioEvent.cs", label="!Charts.ContainsKey(update.Name)", span="164-164"];
m23_78 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="PortfolioEvent.cs", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name, update.ChartType))", span="166-166"];
m23_79 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="PortfolioEvent.cs", label="update.Series.Values", span="170-170"];
m23_80 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="PortfolioEvent.cs", label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="173-173"];
m23_81 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="PortfolioEvent.cs", label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit))", span="175-175"];
m23_82 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="PortfolioEvent.cs", label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="179-179"];
m23_83 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="159-159"];
m23_40 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", span="111-111"];
m23_41 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", file="PortfolioEvent.cs", label="Messages.Enqueue(new HandledErrorPacket(_job.AlgorithmId, error, stacktrace))", span="113-113"];
m23_42 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.ErrorMessage(string, string)", span="111-111"];
m23_60 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="PortfolioEvent.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m23_88 [cluster="QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="188-188"];
m23_89 [cluster="QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="188-188"];
m23_92 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="201-201"];
m23_93 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="201-201"];
m23_0 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="50-50"];
m23_1 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="PortfolioEvent.cs", label="_packetHandler = packetHandler ?? (packet => { })", span="52-52"];
m23_2 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="PortfolioEvent.cs", label="Messages = new ConcurrentQueue<Packet>()", span="53-53"];
m23_3 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="PortfolioEvent.cs", label="Task.Run(() =>\r\n            {\r\n                try\r\n                {\r\n                    IsActive = true;\r\n                    while (!_cancellationTokenSource.IsCancellationRequested)\r\n                    {\r\n                        Packet packet;\r\n                        if (Messages.TryDequeue(out packet))\r\n                        {\r\n                            _packetHandler(packet);\r\n                        }\r\n\r\n                        Thread.Sleep(1);\r\n                    }\r\n                }\r\n                finally\r\n                {\r\n                    IsActive = false;\r\n                }\r\n            })", span="54-74"];
m23_4 [cluster="QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.TestResultHandler(System.Action<QuantConnect.Packets.Packet>)", span="50-50"];
m23_72 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="154-154"];
m23_73 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="PortfolioEvent.cs", label="Sample(''Stockplot: '' + symbol.Value, ''Stockplot: '' + symbol.Value, 0, SeriesType.Line, time, value)", span="156-156"];
m23_74 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="154-154"];
m23_23 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Run()", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Run()", span="87-87"];
m23_24 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Run()", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Run()", span="87-87"];
m23_108 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", span="227-227"];
m23_109 [cluster="QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.ProcessSynchronousEvents(bool)", span="227-227"];
m23_63 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", span="139-139"];
m23_64 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", file="PortfolioEvent.cs", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value)", span="141-141"];
m23_65 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleEquity(System.DateTime, decimal)", span="139-139"];
m23_39 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47"];
m23_100 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Exit()", span="217-217"];
m23_101 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="PortfolioEvent.cs", label="_cancellationTokenSource.Cancel()", span="219-219"];
m23_102 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Exit()", span="217-217"];
m23_19 [cluster="System.Threading.Thread.Sleep(int)", file="PortfolioEvent.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m23_6 [cluster="System.Threading.Tasks.Task.Run(System.Action)", file="PortfolioEvent.cs", label="Entry System.Threading.Tasks.Task.Run(System.Action)", span="0-0"];
m23_57 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="PortfolioEvent.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="133-133"];
m23_69 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", span="149-149"];
m23_70 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="PortfolioEvent.cs", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value)", span="151-151"];
m23_71 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", span="149-149"];
m23_47 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60"];
m23_55 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="PortfolioEvent.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m23_30 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", span="96-96"];
m23_31 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="PortfolioEvent.cs", label="Messages.Enqueue(new SystemDebugPacket(_job.ProjectId, _job.AlgorithmId, _job.CompileId, message))", span="98-98"];
m23_32 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", span="96-96"];
m23_48 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="121-121"];
m23_49 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="PortfolioEvent.cs", label="!Charts.ContainsKey(chartName)", span="124-124"];
m23_50 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="PortfolioEvent.cs", label="Charts.AddOrUpdate(chartName, new Chart(chartName))", span="126-126"];
m23_51 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="PortfolioEvent.cs", label="!Charts[chartName].Series.ContainsKey(seriesName)", span="130-130"];
m23_52 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="PortfolioEvent.cs", label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="132-132"];
m23_53 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="PortfolioEvent.cs", label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="136-136"];
m23_54 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="121-121"];
m23_18 [cluster="System.Action<T>.Invoke(T)", file="PortfolioEvent.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m23_29 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="PortfolioEvent.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m23_62 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PortfolioEvent.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m23_66 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", span="144-144"];
m23_67 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="PortfolioEvent.cs", label="Sample(''Strategy Equity'', ''Daily Performance'', 1, SeriesType.Line, time, value, ''%'')", span="146-146"];
m23_68 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", span="144-144"];
m23_98 [cluster="QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213"];
m23_99 [cluster="QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213"];
m23_94 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", span="205-205"];
m23_95 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SetChartSubscription(string)", span="205-205"];
m23_61 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="PortfolioEvent.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="370-370"];
m23_86 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="PortfolioEvent.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="184-184"];
m23_87 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="PortfolioEvent.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="184-184"];
m23_84 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="PortfolioEvent.cs", label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53"];
m23_33 [cluster="QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", file="PortfolioEvent.cs", label="Entry QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", span="17-17"];
m23_107 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="PortfolioEvent.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="70-70"];
m23_85 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="PortfolioEvent.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m23_110 [file="PortfolioEvent.cs", label="QuantConnect.Tests.Engine.TestResultHandler", span=""];
m24_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", span="372-372"];
m24_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="!resolution.HasValue || subscription.Resolution == resolution.Value", span="388-388"];
m24_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return new TradeBarConsolidator(resolution.Value.ToTimeSpan());", span="399-399"];
m24_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return new TickConsolidator(resolution.Value.ToTimeSpan());", span="406-406"];
m24_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return new DynamicDataConsolidator(resolution.Value.ToTimeSpan(), subscription.IsTradeBar, subscription.HasVolume);", span="413-413"];
m24_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return new BaseDataConsolidator(resolution.Value.ToTimeSpan());", span="417-417"];
m24_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var identityConsolidatorType = typeof (IdentityDataConsolidator<>).MakeGenericType(subscription.Type)", span="391-391"];
m24_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="typeof (TradeBar).IsAssignableFrom(subscription.Type)", span="397-397"];
m24_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="typeof (Tick).IsAssignableFrom(subscription.Type)", span="404-404"];
m24_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="typeof (DynamicData).IsAssignableFrom(subscription.Type)", span="411-411"];
m24_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return (IDataConsolidator) Activator.CreateInstance(identityConsolidatorType);", span="392-392"];
m24_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(string, QuantConnect.Resolution?)", span="372-372"];
m24_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, QuantConnect.Resolution?)", span="154-154"];
m24_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, QuantConnect.Resolution?)", span="154-154"];
m24_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STD(string, int, QuantConnect.Resolution?)", span="261-261"];
m24_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''STD'' + period, resolution)", span="263-263"];
m24_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var std = new StandardDeviation(name, period)", span="264-264"];
m24_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return std;", span="266-266"];
m24_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STD(string, int, QuantConnect.Resolution?)", span="261-261"];
m24_59 [cluster="QuantConnect.Indicators.Minimum.Minimum(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Minimum.Minimum(string, int)", span="51-51"];
m24_109 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="68-68"];
m24_193 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", span="44-44"];
m24_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIN(string, int, QuantConnect.Resolution?)", span="137-137"];
m24_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MIN'' + period, resolution)", span="139-139"];
m24_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var min = new Minimum(name, period)", span="140-140"];
m24_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return min;", span="144-144"];
m24_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIN(string, int, QuantConnect.Resolution?)", span="137-137"];
m24_89 [cluster="QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", span="44-44"];
m24_195 [cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", span="29-29"];
m24_192 [cluster="System.Activator.CreateInstance(System.Type)", file="QCAlgorithm.Indicators.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m24_198 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="379-379"];
m24_17 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="75-75"];
m24_19 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="75-75"];
m24_27 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="91-91"];
m24_29 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="91-91"];
m24_38 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="109-109"];
m24_40 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="109-109"];
m24_50 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="126-126"];
m24_52 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="126-126"];
m24_60 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="143-143"];
m24_62 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="143-143"];
m24_80 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="187-187"];
m24_82 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="187-187"];
m24_90 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="203-203"];
m24_92 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="203-203"];
m24_100 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="220-220"];
m24_102 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="220-220"];
m24_124 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="265-265"];
m24_126 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="265-265"];
m24_134 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="282-282"];
m24_136 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="282-282"];
m24_140 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Value", span="296-296"];
m24_139 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="296-296"];
m24_141 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="296-296"];
m24_152 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="indicator.Update(consolidated.Time, value)", span="319-319"];
m24_148 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Value", span="310-310"];
m24_151 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="var value = selector(consolidated)", span="318-318"];
m24_147 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="310-310"];
m24_149 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="310-310"];
m24_150 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="316-320"];
m24_153 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="316-320"];
m24_168 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="360-363"];
m24_170 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="360-363"];
m24_200 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="379-379"];
m24_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(string, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.BB(string, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", span="278-278"];
m24_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(string, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''BB({0},{1})'', period, k), resolution)", span="280-280"];
m24_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(string, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var bb = new BollingerBands(name, period, k, movingAverageType)", span="281-281"];
m24_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(string, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return bb;", span="283-283"];
m24_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(string, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.BB(string, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", span="278-278"];
m24_196 [cluster="QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan, bool, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan, bool, bool)", span="38-38"];
m24_116 [cluster="QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", span="79-79"];
m24_99 [cluster="QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55"];
m24_47 [cluster="QuantConnect.Indicators.Maximum.Maximum(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Maximum.Maximum(string, int)", span="51-51"];
m24_190 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m24_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", span="307-307"];
m24_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="selector = selector ?? (x => x.Value)", span="310-310"];
m24_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="313-313"];
m24_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(consolidated.Time, value);\r\n            }", span="316-320"];
m24_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", span="307-307"];
m24_133 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="53-53"];
m24_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MAX(string, int, QuantConnect.Resolution?)", span="120-120"];
m24_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MAX'' + period, resolution)", span="122-122"];
m24_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var max = new Maximum(name, period)", span="123-123"];
m24_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return max;", span="127-127"];
m24_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MAX(string, int, QuantConnect.Resolution?)", span="120-120"];
m24_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(string, int, QuantConnect.Resolution?)", span="71-71"];
m24_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''EMA'' + period, resolution)", span="73-73"];
m24_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var ema = new ExponentialMovingAverage(name, period)", span="74-74"];
m24_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return ema;", span="76-76"];
m24_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.EMA(string, int, QuantConnect.Resolution?)", span="71-71"];
m24_123 [cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="47-47"];
m24_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMP(string, int, QuantConnect.Resolution?)", span="199-199"];
m24_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''MOMP'' + period, resolution)", span="201-201"];
m24_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var momentum = new MomentumPercent(name, period)", span="202-202"];
m24_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return momentum;", span="204-204"];
m24_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMP(string, int, QuantConnect.Resolution?)", span="199-199"];
m24_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CCI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", span="233-233"];
m24_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''CCI'' + period, resolution)", span="234-234"];
m24_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var cci = new CommodityChannelIndex(name, period, movingAverageType)", span="235-235"];
m24_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return cci;", span="237-237"];
m24_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CCI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", span="233-233"];
m24_165 [cluster="System.Type.IsAssignableFrom(System.Type)", file="QCAlgorithm.Indicators.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m24_166 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m24_188 [cluster="string.ToUpper()", file="QCAlgorithm.Indicators.cs", label="Entry string.ToUpper()", span="0-0"];
m24_171 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="82-82"];
m24_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(string, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(string, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", span="105-105"];
m24_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(string, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''MACD({0},{1})'', fastPeriod, slowPeriod), resolution)", span="107-107"];
m24_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(string, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var macd = new MovingAverageConvergenceDivergence(name, fastPeriod, slowPeriod, signalPeriod, type)", span="108-108"];
m24_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(string, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return macd;", span="110-110"];
m24_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(string, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MACD(string, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", span="105-105"];
m24_26 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m24_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", span="427-427"];
m24_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string res", span="429-429"];
m24_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label=resolution, span="430-430"];
m24_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return string.Format(''{0}({1}{2})'', type, symbol.ToUpper(), res);", span="454-454"];
m24_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Tick", span="432-432"];
m24_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Second", span="435-435"];
m24_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Minute", span="438-438"];
m24_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Hour", span="441-441"];
m24_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Daily", span="444-444"];
m24_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label=null, span="447-447"];
m24_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentOutOfRangeException(''resolution'');", span="451-451"];
m24_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_tick''", span="433-433"];
m24_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_sec''", span="436-436"];
m24_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_min''", span="439-439"];
m24_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_hr''", span="442-442"];
m24_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_day''", span="445-445"];
m24_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = string.Empty", span="448-448"];
m24_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(string, string, QuantConnect.Resolution?)", span="427-427"];
m24_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOM(string, int, QuantConnect.Resolution?)", span="183-183"];
m24_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''MOM'' + period, resolution)", span="185-185"];
m24_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var momentum = new Momentum(name, period)", span="186-186"];
m24_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return momentum;", span="188-188"];
m24_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOM(string, int, QuantConnect.Resolution?)", span="183-183"];
m24_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="330-330"];
m24_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution))", span="333-333"];
m24_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="330-330"];
m24_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ATR(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", span="55-55"];
m24_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''ATR'' + period, resolution)", span="57-57"];
m24_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var atr = new AverageTrueRange(name, period, type)", span="58-58"];
m24_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return atr;", span="60-60"];
m24_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ATR(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", span="55-55"];
m24_7 [cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="56-56"];
m24_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MFI(string, int, QuantConnect.Resolution?)", span="247-247"];
m24_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MFI'' + period, resolution)", span="248-248"];
m24_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var mfi = new MoneyFlowIndex(name, period)", span="249-249"];
m24_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return mfi;", span="251-251"];
m24_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MFI(string, int, QuantConnect.Resolution?)", span="247-247"];
m24_154 [cluster="System.Func<T, TResult>.Invoke(T)", file="QCAlgorithm.Indicators.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m24_167 [cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Indicators.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m24_191 [cluster="System.Type.MakeGenericType(params System.Type[])", file="QCAlgorithm.Indicators.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m24_218 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m24_155 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="33-33"];
m24_79 [cluster="QuantConnect.Indicators.Momentum.Momentum(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Momentum.Momentum(string, int)", span="37-37"];
m24_36 [cluster="string.Format(string, object, object)", file="QCAlgorithm.Indicators.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m24_197 [cluster="QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", span="38-38"];
m24_15 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", span="30-30"];
m24_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, int, QuantConnect.Resolution?)", span="167-167"];
m24_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''AROON({0},{1})'', upPeriod, downPeriod), resolution)", span="169-169"];
m24_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var aroon = new AroonOscillator(name, upPeriod, downPeriod)", span="170-170"];
m24_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return aroon;", span="172-172"];
m24_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, int, QuantConnect.Resolution?)", span="167-167"];
m24_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(string, int, QuantConnect.Resolution?)", span="87-87"];
m24_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''SMA'' + period, resolution)", span="89-89"];
m24_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var sma = new SimpleMovingAverage(name, period)", span="90-90"];
m24_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return sma;", span="92-92"];
m24_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(string, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SMA(string, int, QuantConnect.Resolution?)", span="87-87"];
m24_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="294-294"];
m24_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="296-296"];
m24_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(string, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="294-294"];
m24_37 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", span="66-66"];
m24_72 [cluster="QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", span="61-61"];
m24_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", span="216-216"];
m24_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''RSI'' + period, resolution)", span="218-218"];
m24_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var rsi = new RelativeStrengthIndex(name, period, movingAverageType)", span="219-219"];
m24_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return rsi;", span="221-221"];
m24_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RSI(string, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", span="216-216"];
m24_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator)", span="343-343"];
m24_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Indicators.cs", label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="347-347"];
m24_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Indicators.cs", label="!type.IsAssignableFrom(consolidator.OutputType)", span="351-351"];
m24_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentException(string.Format(''Type mismatch found between consolidator and indicator for symbol: {0}.'' +\r\n                    ''Consolidator outputs type {1} but indicator expects input type {2}'',\r\n                    symbol, consolidator.OutputType.Name, type.Name)\r\n                    );", span="353-356"];
m24_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Indicators.cs", label="var type = typeof(T)", span="350-350"];
m24_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator)", span="343-343"];
m24_189 [cluster="Unk.First", file="QCAlgorithm.Indicators.cs", label="Entry Unk.First", span=""];
m24_146 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", span="120-120"];
m24_194 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="401-401"];
m24_219 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m24_220 [file="QCAlgorithm.Indicators.cs", label="System.Func<QuantConnect.Data.BaseData, decimal>", span=""];
m24_221 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", span=""];
m24_222 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Indicators.IndicatorBase<T>", span=""];
m24_223 [file="QCAlgorithm.Indicators.cs", label=string, span=""];
m25_2 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.NextJob(out string)", span="77-77"];
m25_3 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="location = AlgorithmLocation", span="79-79"];
m25_4 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="!BacktestingMode", span="82-82"];
m25_7 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="var backtestJob = new BacktestNodePacket(0, 0, '''', new byte[] {}, 10000, ''local'')\r\n            {\r\n                ResultEndpoint = ResultHandlerEndpoint.Console,\r\n                SetupEndpoint = SetupHandlerEndpoint.Console,\r\n                DataEndpoint = DataFeedEndpoint.FileSystem,\r\n                TransactionEndpoint = TransactionHandlerEndpoint.Backtesting,\r\n                RealTimeEndpoint = RealTimeEndpoint.Backtesting,\r\n                Type = PacketType.BacktestNode,\r\n                Algorithm = File.ReadAllBytes(AlgorithmLocation)\r\n            }", span="98-107"];
m25_6 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="return liveJob;", span="94-94"];
m25_8 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="return backtestJob;", span="108-108"];
m25_9 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.NextJob(out string)", span="77-77"];
m25_21 [cluster="QuantConnect.Queues.Queue.CloseDataQueue()", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.CloseDataQueue()", span="141-141"];
m25_22 [cluster="QuantConnect.Queues.Queue.CloseDataQueue()", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.CloseDataQueue()", span="141-141"];
m25_26 [cluster="QuantConnect.Queues.Queue.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="157-157"];
m25_27 [cluster="QuantConnect.Queues.Queue.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Queue.cs", label="throw new NotImplementedException(''QuantConnect.Queues.Queue has not implemented live data.'');", span="159-159"];
m25_28 [cluster="QuantConnect.Queues.Queue.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="157-157"];
m25_23 [cluster="QuantConnect.Queues.Queue.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="149-149"];
m25_24 [cluster="QuantConnect.Queues.Queue.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Queue.cs", label="throw new NotImplementedException(''QuantConnect.Queues.Queue has not implemented live data.'');", span="151-151"];
m25_25 [cluster="QuantConnect.Queues.Queue.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="149-149"];
m25_13 [cluster="QuantConnect.Queues.Queue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="115-115"];
m25_14 [cluster="QuantConnect.Queues.Queue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="115-115"];
m25_15 [cluster="QuantConnect.Queues.Queue.GetNextTicks()", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.GetNextTicks()", span="124-124"];
m25_16 [cluster="QuantConnect.Queues.Queue.GetNextTicks()", file="Queue.cs", label="throw new NotImplementedException(''QuantConnect.Queues.Queue has not implemented live data.'');", span="126-126"];
m25_17 [cluster="QuantConnect.Queues.Queue.GetNextTicks()", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.GetNextTicks()", span="124-124"];
m25_19 [cluster="QuantConnect.Queues.Queue.OpenDataQueue()", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.OpenDataQueue()", span="133-133"];
m25_20 [cluster="QuantConnect.Queues.Queue.OpenDataQueue()", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.OpenDataQueue()", span="133-133"];
m25_0 [cluster="QuantConnect.Queues.Queue.Initialize(bool)", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.Initialize(bool)", span="68-68"];
m25_1 [cluster="QuantConnect.Queues.Queue.Initialize(bool)", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.Initialize(bool)", span="68-68"];
m25_12 [cluster="QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", file="Queue.cs", label="Entry QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", span="87-87"];
m25_11 [cluster="System.IO.File.ReadAllBytes(string)", file="Queue.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m25_10 [cluster="QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", file="Queue.cs", label="Entry QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", span="90-90"];
m25_18 [cluster="System.NotImplementedException.NotImplementedException(string)", file="Queue.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m25_29 [file="Queue.cs", label="QuantConnect.Queues.Queue", span=""];
m26_98 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="62-62"];
m26_15 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m26_16 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="Add(security.Symbol, security)", span="83-83"];
m26_17 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m26_55 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", file="SecurityHolding.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m26_63 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityHolding.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="0-0"];
m26_37 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="162-162"];
m26_38 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityHolding.cs", label="return Remove(pair.Key);", span="164-164"];
m26_39 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="162-162"];
m26_106 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityHolding.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="413-413"];
m26_104 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", span="398-398"];
m26_105 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityHolding.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="412-412"];
m26_108 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityHolding.cs", label="symbol.ID.SecurityType == SecurityType.Forex", span="416-416"];
m26_109 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityHolding.cs", label="defaultQuoteCurrency = symbol.Value.Substring(3)", span="416-416"];
m26_110 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityHolding.cs", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType, defaultQuoteCurrency)", span="417-417"];
m26_112 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityHolding.cs", label="var type = resolution == Resolution.Tick ? typeof(Tick) : tradeBarType", span="420-420"];
m26_113 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityHolding.cs", label="return CreateSecurity(type, securityPortfolioManager, subscriptionManager, exchangeHours, marketHoursDbEntry.DataTimeZone, symbolProperties, securityInitializer, symbol, resolution,\r\n                fillDataForward, leverage, extendedMarketHours, isInternalFeed, isCustomData, addToSymbolCache);", span="421-422"];
m26_107 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityHolding.cs", label="var defaultQuoteCurrency = CashBook.AccountCurrency", span="415-415"];
m26_111 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityHolding.cs", label="var tradeBarType = typeof(TradeBar)", span="419-419"];
m26_114 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", span="398-398"];
m26_115 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="153-153"];
m26_94 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="93-93"];
m26_5 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m26_6 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="_securityManager.TryAdd(symbol, security)", span="70-70"];
m26_7 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="security.SetLocalTimeKeeper(_timeKeeper.GetLocalTimeKeeper(security.Exchange.TimeZone))", span="72-72"];
m26_8 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, security))", span="73-73"];
m26_9 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m26_96 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="75-75"];
m26_100 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m26_0 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m26_3 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m26_10 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="SecurityHolding.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m26_36 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="SecurityHolding.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m26_99 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m26_102 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security)", span="27-27"];
m26_11 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="SecurityHolding.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m26_51 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SecurityHolding.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m26_47 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="SecurityHolding.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m26_4 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="SecurityHolding.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m26_12 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="500-500"];
m26_97 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.CashBook.ContainsKey(string)", span="211-211"];
m26_21 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.Clear()", span="100-100"];
m26_22 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityHolding.cs", label="_securityManager.Clear()", span="102-102"];
m26_23 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.Clear()", span="100-100"];
m26_25 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="111-111"];
m26_26 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityHolding.cs", label="return _securityManager.Contains(pair);", span="113-113"];
m26_27 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="111-111"];
m26_48 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m26_49 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="return _securityManager.TryGetValue(symbol, out security);", span="201-201"];
m26_50 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m26_52 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", span="218-218"];
m26_53 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", file="SecurityHolding.cs", label="return _securityManager.GetEnumerator();", span="220-220"];
m26_54 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", span="218-218"];
m26_14 [cluster="QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="297-297"];
m26_59 [cluster="QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityHolding.cs", label="var handler = CollectionChanged", span="299-299"];
m26_61 [cluster="QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityHolding.cs", label="handler(this, changedEventArgs)", span="300-300"];
m26_60 [cluster="QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityHolding.cs", label="handler != null", span="300-300"];
m26_62 [cluster="QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="297-297"];
m26_29 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m26_30 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="SecurityHolding.cs", label="return _securityManager.ContainsKey(symbol);", span="124-124"];
m26_31 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m26_101 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="294-294"];
m26_116 [cluster="string.Substring(int)", file="SecurityHolding.cs", label="Entry string.Substring(int)", span="0-0"];
m26_32 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="SecurityHolding.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m26_18 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="91-91"];
m26_19 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityHolding.cs", label="Add(pair.Key, pair.Value)", span="93-93"];
m26_20 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="91-91"];
m26_40 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m26_41 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityHolding.cs", label="Security security", span="174-174"];
m26_42 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityHolding.cs", label="_securityManager.TryRemove(symbol, out security)", span="175-175"];
m26_43 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityHolding.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, security))", span="177-177"];
m26_45 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityHolding.cs", label="return false;", span="180-180"];
m26_44 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityHolding.cs", label="return true;", span="178-178"];
m26_46 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m26_103 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="529-529"];
m26_33 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", span="133-133"];
m26_34 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityHolding.cs", label="((IDictionary<Symbol, Security>)_securityManager).CopyTo(array, number)", span="135-135"];
m26_35 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", span="133-133"];
m26_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="SecurityHolding.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m26_117 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m26_56 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="228-228"];
m26_57 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityHolding.cs", label="return _securityManager.GetEnumerator();", span="230-230"];
m26_58 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="228-228"];
m26_13 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", file="SecurityHolding.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", span="0-0"];
m26_64 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="308-308"];
m26_65 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="var sid = symbol.ID", span="325-325"];
m26_66 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label=addToSymbolCache, span="328-328"];
m26_67 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="SymbolCache.Set(symbol.Value, symbol)", span="328-328"];
m26_68 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="var config = subscriptionManager.Add(factoryType, symbol, resolution, dataTimeZone, exchangeHours.TimeZone, isCustomData, fillDataForward,\r\n                extendedMarketHours, isInternalFeed, isFilteredSubscription)", span="331-332"];
m26_72 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="security = new Equity.Equity(exchangeHours, config, securityPortfolioManager.CashBook[CashBook.AccountCurrency], symbolProperties)", span="338-338"];
m26_75 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="Forex.Forex.DecomposeCurrencyPair(symbol.Value, out baseCurrency, out quoteCurrency)", span="345-345"];
m26_76 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="!securityPortfolioManager.CashBook.ContainsKey(baseCurrency)", span="347-347"];
m26_77 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="securityPortfolioManager.CashBook.Add(baseCurrency, 0, 0)", span="350-350"];
m26_78 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="!securityPortfolioManager.CashBook.ContainsKey(quoteCurrency)", span="352-352"];
m26_79 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="securityPortfolioManager.CashBook.Add(quoteCurrency, 0, 0)", span="355-355"];
m26_80 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="security = new Forex.Forex(exchangeHours, securityPortfolioManager.CashBook[quoteCurrency], config, symbolProperties)", span="357-357"];
m26_82 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="var quoteCurrency = symbolProperties.QuoteCurrency", span="363-363"];
m26_83 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="!securityPortfolioManager.CashBook.ContainsKey(quoteCurrency)", span="365-365"];
m26_84 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="securityPortfolioManager.CashBook.Add(quoteCurrency, 0, 0)", span="368-368"];
m26_85 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="security = new Cfd.Cfd(exchangeHours, securityPortfolioManager.CashBook[quoteCurrency], config, symbolProperties)", span="370-370"];
m26_87 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="security = new Security(exchangeHours, config, securityPortfolioManager.CashBook[CashBook.AccountCurrency], symbolProperties)", span="376-376"];
m26_88 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="securityInitializer.Initialize(security)", span="381-381"];
m26_89 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="leverage > 0", span="385-385"];
m26_90 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="security.SetLeverage(leverage)", span="387-387"];
m26_69 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="Security security", span="334-334"];
m26_70 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="config.SecurityType", span="335-335"];
m26_71 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="SecurityType.Equity", span="337-337"];
m26_73 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="SecurityType.Forex", span="341-341"];
m26_81 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="SecurityType.Cfd", span="361-361"];
m26_86 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="SecurityType.Base", span="375-375"];
m26_74 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="string baseCurrency, quoteCurrency", span="344-344"];
m26_91 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="return security;", span="390-390"];
m26_92 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityHolding.cs", label="Exit QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="308-308"];
m26_24 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="SecurityHolding.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m26_95 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m26_118 [file="SecurityHolding.cs", label="QuantConnect.Securities.SecurityManager", span=""];
m27_19 [cluster="string.Format(string, params object[])", file="SecurityPortfolioManagerTests.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m27_16 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SecurityPortfolioManagerTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m27_0 [cluster="QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", span="39-39"];
m27_1 [cluster="QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", color=green, community=0, file="SecurityPortfolioManagerTests.cs", label="Quantity = fields.Quantity", prediction=53, span="42-42"];
m27_2 [cluster="QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", color=green, community=0, file="SecurityPortfolioManagerTests.cs", label="LimitPrice = fields.LimitPrice", prediction=54, span="43-43"];
m27_3 [cluster="QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", color=green, community=0, file="SecurityPortfolioManagerTests.cs", label="StopPrice = fields.StopPrice", prediction=55, span="44-44"];
m27_4 [cluster="QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", span="39-39"];
m27_5 [cluster="QuantConnect.Orders.UpdateOrderRequest.ToString()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.UpdateOrderRequest.ToString()", span="54-54"];
m27_6 [cluster="QuantConnect.Orders.UpdateOrderRequest.ToString()", color=green, community=0, file="SecurityPortfolioManagerTests.cs", label="var updates = new List<string>()", prediction=56, span="56-56"];
m27_7 [cluster="QuantConnect.Orders.UpdateOrderRequest.ToString()", color=green, community=0, file="SecurityPortfolioManagerTests.cs", label="Quantity.HasValue", prediction=56, span="57-57"];
m27_8 [cluster="QuantConnect.Orders.UpdateOrderRequest.ToString()", color=green, community=0, file="SecurityPortfolioManagerTests.cs", label="updates.Add(''Quantity: '' + Quantity.Value)", prediction=56, span="59-59"];
m27_10 [cluster="QuantConnect.Orders.UpdateOrderRequest.ToString()", color=green, community=0, file="SecurityPortfolioManagerTests.cs", label="updates.Add(''LimitPrice: '' + LimitPrice.Value.SmartRounding())", prediction=56, span="63-63"];
m27_12 [cluster="QuantConnect.Orders.UpdateOrderRequest.ToString()", color=green, community=0, file="SecurityPortfolioManagerTests.cs", label="updates.Add(''StopPrice: '' + StopPrice.Value.SmartRounding())", prediction=56, span="67-67"];
m27_13 [cluster="QuantConnect.Orders.UpdateOrderRequest.ToString()", color=green, community=0, file="SecurityPortfolioManagerTests.cs", label="return string.Format(''{0} UTC: Update Order: ({1}) - {2} {3} Status: {4}'', Time, OrderId, string.Join('', '', updates), Tag, Status);", prediction=56, span="69-69"];
m27_9 [cluster="QuantConnect.Orders.UpdateOrderRequest.ToString()", color=green, community=0, file="SecurityPortfolioManagerTests.cs", label="LimitPrice.HasValue", prediction=56, span="61-61"];
m27_11 [cluster="QuantConnect.Orders.UpdateOrderRequest.ToString()", color=green, community=0, file="SecurityPortfolioManagerTests.cs", label="StopPrice.HasValue", prediction=56, span="65-65"];
m27_14 [cluster="QuantConnect.Orders.UpdateOrderRequest.ToString()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Orders.UpdateOrderRequest.ToString()", span="54-54"];
m27_15 [cluster="System.Collections.Generic.List<T>.List()", file="SecurityPortfolioManagerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m27_18 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="SecurityPortfolioManagerTests.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m27_17 [cluster="decimal.SmartRounding()", file="SecurityPortfolioManagerTests.cs", label="Entry decimal.SmartRounding()", span="205-205"];
m27_20 [file="SecurityPortfolioManagerTests.cs", label="QuantConnect.Orders.UpdateOrderRequest", span=""];
m29_3 [cluster="QuantConnect.FixedSizedQueue<T>.Enqueue(T)", file="TestHelper.cs", label="Entry QuantConnect.FixedSizedQueue<T>.Enqueue(T)", span="55-55"];
m29_4 [cluster="QuantConnect.FixedSizedQueue<T>.Enqueue(T)", file="TestHelper.cs", label="Count >= Limit", span="57-57"];
m29_5 [cluster="QuantConnect.FixedSizedQueue<T>.Enqueue(T)", file="TestHelper.cs", label="Dequeue()", span="59-59"];
m29_6 [cluster="QuantConnect.FixedSizedQueue<T>.Enqueue(T)", file="TestHelper.cs", label="base.Enqueue(item)", span="61-61"];
m29_7 [cluster="QuantConnect.FixedSizedQueue<T>.Enqueue(T)", file="TestHelper.cs", label="Exit QuantConnect.FixedSizedQueue<T>.Enqueue(T)", span="55-55"];
m29_9 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="TestHelper.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m29_0 [cluster="QuantConnect.FixedSizedQueue<T>.FixedSizedQueue(int)", file="TestHelper.cs", label="Entry QuantConnect.FixedSizedQueue<T>.FixedSizedQueue(int)", span="46-46"];
m29_1 [cluster="QuantConnect.FixedSizedQueue<T>.FixedSizedQueue(int)", color=green, community=0, file="TestHelper.cs", label="Limit = limit", prediction=64, span="49-49"];
m29_2 [cluster="QuantConnect.FixedSizedQueue<T>.FixedSizedQueue(int)", file="TestHelper.cs", label="Exit QuantConnect.FixedSizedQueue<T>.FixedSizedQueue(int)", span="46-46"];
m29_8 [cluster="System.Collections.Generic.Queue<T>.Dequeue()", file="TestHelper.cs", label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0"];
m29_10 [file="TestHelper.cs", label="QuantConnect.FixedSizedQueue<T>", span=""];
d39 -> d10  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel", style=dashed];
d39 -> d22  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel", style=dashed];
d4 -> d6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
d18 -> d28  [color=green, key=1, label=universeSettings, style=dashed];
d19 -> d28  [color=green, key=1, label=securityInitializer, style=dashed];
d22 -> d28  [color=green, key=1, label=grp, style=dashed];
d22 -> d36  [color=green, key=1, label="lambda expression", style=dashed];
m0_13 -> m0_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m0_15 -> m0_17  [color=darkseagreen4, key=1, label=handler, style=dashed];
m0_40 -> m0_44  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m0_24 -> m0_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.PortfolioEvent", style=dashed];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=handler, style=dashed];
m0_32 -> m0_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m0_34 -> m0_36  [color=darkseagreen4, key=1, label=handler, style=dashed];
m0_48 -> m0_17  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Brokerage", style=dashed];
m0_48 -> m0_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Brokerage", style=dashed];
m0_48 -> m0_36  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Brokerage", style=dashed];
m0_48 -> m0_44  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Brokerage", style=dashed];
m1_9 -> m1_6  [color=green, key=1, label="QuantConnect.Interfaces.BrokerageMessageEvent", style=dashed];
m3_5 -> m3_11  [color=green, key=1, label="lambda expression", style=dashed];
m3_31 -> m3_33  [color=green, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m3_19 -> m3_21  [color=green, key=1, label=security, style=dashed];
m3_19 -> m3_22  [color=green, key=1, label=security, style=dashed];
m3_23 -> m3_25  [color=green, key=1, label=security, style=dashed];
m3_23 -> m3_26  [color=green, key=1, label=security, style=dashed];
m3_35 -> m3_1  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m3_35 -> m3_2  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m3_35 -> m3_3  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m3_35 -> m3_5  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m3_35 -> m3_17  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m3_35 -> m3_19  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m3_35 -> m3_23  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m3_35 -> m3_21  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m3_35 -> m3_22  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m3_35 -> m3_25  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m3_35 -> m3_26  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m3_35 -> m3_33  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.WeeklyUniverseSelectionRegressionAlgorithm", style=dashed];
m4_59 -> m4_83  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_59 -> m4_85  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_59 -> m4_87  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_83 -> m4_83  [color=green, key=1, label=queued, style=dashed];
m4_12 -> m4_14  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_12 -> m4_16  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_12 -> m4_17  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_28 -> m4_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_28 -> m4_33  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_28 -> m4_34  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_28 -> m4_35  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_28 -> m4_36  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_28 -> m4_38  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_28 -> m4_40  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_28 -> m4_42  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_28 -> m4_48  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_58 -> m4_74  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_58 -> m4_76  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_58 -> m4_78  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_74 -> m4_74  [color=darkseagreen4, key=1, label=queued, style=dashed];
m4_57 -> m4_67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m4_4 -> m4_13  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_4 -> m4_14  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_4 -> m4_15  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_4 -> m4_16  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_4 -> m4_17  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m4_4 -> m4_19  [color=green, key=1, label=err, style=dashed];
m4_90 -> m4_14  [color=green, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_83  [color=green, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_85  [color=green, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m4_90 -> m4_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m8_8 -> m8_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_13 -> m8_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m8_13 -> m8_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m10_5 -> m10_8  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_19 -> m10_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m10_19 -> m10_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m10_19 -> m10_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m10_19 -> m10_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.RealTimeEvent", style=dashed];
m17_20 -> m17_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m17_24 -> m17_26  [color=darkseagreen4, key=1, label=handler, style=dashed];
m17_3 -> m17_9  [color=green, key=1, label=tick, style=dashed];
m17_3 -> m17_10  [color=green, key=1, label=tick, style=dashed];
m17_3 -> m17_6  [color=darkseagreen4, key=1, label=tick, style=dashed];
m17_3 -> m17_7  [color=darkseagreen4, key=1, label=tick, style=dashed];
m17_3 -> m17_8  [color=darkseagreen4, key=1, label=tick, style=dashed];
m17_7 -> m17_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m17_7 -> m17_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m17_30 -> m17_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory", style=dashed];
m17_30 -> m17_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory", style=dashed];
m17_30 -> m17_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory", style=dashed];
m19_37 -> m19_39  [color=darkseagreen4, key=1, label=parent, style=dashed];
m19_44 -> m19_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_46 -> m19_49  [color=darkseagreen4, key=1, label=processesByName, style=dashed];
m19_50 -> m19_53  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m19_50 -> m19_55  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m19_47 -> m19_55  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m19_48 -> m19_54  [color=darkseagreen4, key=1, label=index, style=dashed];
m19_54 -> m19_54  [color=darkseagreen4, key=1, label=index, style=dashed];
m19_30 -> m19_39  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_32 -> m19_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_67 -> m19_39  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_44 -> m20_46  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m20_50 -> m20_52  [color=darkseagreen4, key=1, label=source, style=dashed];
m20_55 -> m20_57  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m20_55 -> m20_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_56 -> m20_80  [color=darkseagreen4, key=1, label=coin, style=dashed];
m20_56 -> m20_81  [color=darkseagreen4, key=1, label=coin, style=dashed];
m20_88 -> m20_1  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_2  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_3  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_4  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_5  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_6  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_15  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_16  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_17  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_18  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_19  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_20  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_21  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_31  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_33  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_34  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m20_88 -> m20_35  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m21_31 -> m21_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m21_31 -> m21_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m21_25 -> m21_28  [color=darkseagreen4, key=1, label="QuantConnect.TimeUpdatedEventArgs", style=dashed];
m21_50 -> m21_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m21_50 -> m21_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m21_50 -> m21_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m21_50 -> m21_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m21_50 -> m21_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m21_50 -> m21_47  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m22_38 -> m22_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m22_38 -> m22_35  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m23_76 -> m23_78  [color=darkseagreen4, key=1, label=update, style=dashed];
m23_76 -> m23_79  [color=darkseagreen4, key=1, label=update, style=dashed];
m23_76 -> m23_80  [color=darkseagreen4, key=1, label=update, style=dashed];
m23_76 -> m23_81  [color=darkseagreen4, key=1, label=update, style=dashed];
m23_76 -> m23_82  [color=darkseagreen4, key=1, label=update, style=dashed];
m23_79 -> m23_81  [color=darkseagreen4, key=1, label=series, style=dashed];
m23_79 -> m23_82  [color=darkseagreen4, key=1, label=series, style=dashed];
m23_3 -> m23_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_48 -> m23_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_48 -> m23_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_48 -> m23_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_48 -> m23_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_110 -> m23_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_31  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_41  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_52  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_53  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_64  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_67  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_70  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_73  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_77  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_78  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_80  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_81  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_82  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_101  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m23_110 -> m23_105  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m24_48 -> m24_177  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m24_48 -> m24_181  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m24_48 -> m24_183  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m24_48 -> m24_185  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m24_48 -> m24_186  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m24_119 -> m24_121  [color=darkseagreen4, key=1, label=std, style=dashed];
m24_55 -> m24_57  [color=darkseagreen4, key=1, label=min, style=dashed];
m24_150 -> m24_152  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m24_129 -> m24_131  [color=darkseagreen4, key=1, label=bb, style=dashed];
m24_49 -> m24_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_49 -> m24_152  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m24_142 -> m24_148  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m24_144 -> m24_152  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m24_43 -> m24_45  [color=darkseagreen4, key=1, label=max, style=dashed];
m24_11 -> m24_13  [color=darkseagreen4, key=1, label=ema, style=dashed];
m24_85 -> m24_87  [color=darkseagreen4, key=1, label=momentum, style=dashed];
m24_105 -> m24_107  [color=darkseagreen4, key=1, label=cci, style=dashed];
m24_32 -> m24_34  [color=darkseagreen4, key=1, label=macd, style=dashed];
m24_6 -> m24_202  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m24_6 -> m24_216  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_75 -> m24_77  [color=darkseagreen4, key=1, label=momentum, style=dashed];
m24_2 -> m24_4  [color=darkseagreen4, key=1, label=atr, style=dashed];
m24_112 -> m24_114  [color=darkseagreen4, key=1, label=mfi, style=dashed];
m24_68 -> m24_70  [color=darkseagreen4, key=1, label=aroon, style=dashed];
m24_22 -> m24_24  [color=darkseagreen4, key=1, label=sma, style=dashed];
m24_137 -> m24_140  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m24_95 -> m24_97  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m24_158 -> m24_161  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m24_158 -> m24_162  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_160 -> m24_162  [color=darkseagreen4, key=1, label=type, style=dashed];
m24_219 -> m24_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m24_219 -> m24_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m24_219 -> m24_156  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m24_219 -> m24_159  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m24_221 -> m24_152  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m25_3 -> m25_9  [color=darkseagreen4, key=1, label="out string", style=dashed];
m25_29 -> m25_4  [color=darkseagreen4, key=1, label="QuantConnect.Queues.Queue", style=dashed];
m26_38 -> m26_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m26_106 -> m26_113  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m26_104 -> m26_108  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m26_104 -> m26_113  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m26_105 -> m26_113  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m26_110 -> m26_113  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m26_5 -> m26_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m26_5 -> m26_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m26_14 -> m26_61  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m26_59 -> m26_61  [color=darkseagreen4, key=1, label=handler, style=dashed];
m26_19 -> m26_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m26_40 -> m26_42  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m26_64 -> m26_66  [color=darkseagreen4, key=1, label=bool, style=dashed];
m26_64 -> m26_67  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m26_64 -> m26_75  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m26_64 -> m26_76  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m26_64 -> m26_77  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m26_64 -> m26_78  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m26_64 -> m26_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m26_64 -> m26_83  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m26_64 -> m26_84  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m26_64 -> m26_88  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityInitializer", style=dashed];
m26_64 -> m26_89  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m26_64 -> m26_90  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m26_68 -> m26_70  [color=darkseagreen4, key=1, label=config, style=dashed];
m26_75 -> m26_77  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m26_75 -> m26_78  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m26_75 -> m26_79  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m26_82 -> m26_84  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m26_87 -> m26_90  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_87 -> m26_91  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_118 -> m26_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_43  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_53  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_57  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m26_118 -> m26_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m27_6 -> m27_8  [color=green, key=1, label=updates, style=dashed];
m27_6 -> m27_10  [color=green, key=1, label=updates, style=dashed];
m27_6 -> m27_12  [color=green, key=1, label=updates, style=dashed];
m27_6 -> m27_13  [color=green, key=1, label=updates, style=dashed];
m27_20 -> m27_7  [color=green, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m27_20 -> m27_8  [color=green, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m27_20 -> m27_10  [color=green, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m27_20 -> m27_12  [color=green, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m27_20 -> m27_13  [color=green, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m27_20 -> m27_9  [color=green, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m27_20 -> m27_11  [color=green, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m29_3 -> m29_6  [color=darkseagreen4, key=1, label=T, style=dashed];
m29_10 -> m29_4  [color=darkseagreen4, key=1, label="QuantConnect.FixedSizedQueue<T>", style=dashed];
m29_10 -> m29_5  [color=darkseagreen4, key=1, label="QuantConnect.FixedSizedQueue<T>", style=dashed];
m29_10 -> m29_6  [color=darkseagreen4, key=1, label="QuantConnect.FixedSizedQueue<T>", style=dashed];
}
