digraph  {
n0 [cluster="QuantConnect.Market.Market()", label="Entry QuantConnect.Market.Market()", span="49-49"];
n1 [cluster="QuantConnect.Market.Market()", label=HardcodedMarkets, span="52-52"];
n2 [cluster="QuantConnect.Market.Market()", label="Markets[market.Item1] = market.Item2", span="54-54"];
n4 [cluster="QuantConnect.Market.Market()", label="Exit QuantConnect.Market.Market()", span="49-49"];
n3 [cluster="QuantConnect.Market.Market()", label="ReverseMarkets[market.Item2] = market.Item1", span="55-55"];
n5 [cluster="QuantConnect.Market.Add(string, int)", label="Entry QuantConnect.Market.Add(string, int)", span="126-126"];
n6 [cluster="QuantConnect.Market.Add(string, int)", label="identifier >= MaxMarketIdentifier", span="128-128"];
n9 [cluster="QuantConnect.Market.Add(string, int)", label="market = market.ToLower()", span="134-134"];
n12 [cluster="QuantConnect.Market.Add(string, int)", label="Markets.TryGetValue(market, out marketIdentifier) && identifier != marketIdentifier", span="140-140"];
n15 [cluster="QuantConnect.Market.Add(string, int)", label="ReverseMarkets.TryGetValue(identifier, out existingMarket)", span="146-146"];
n17 [cluster="QuantConnect.Market.Add(string, int)", label="Markets[market] = identifier", span="152-152"];
n18 [cluster="QuantConnect.Market.Add(string, int)", label="ReverseMarkets[identifier] = market", span="153-153"];
n7 [cluster="QuantConnect.Market.Add(string, int)", label="var message = string.Format(''The market identifier is limited to positive values less than {0}.'', MaxMarketIdentifier)", span="130-130"];
n8 [cluster="QuantConnect.Market.Add(string, int)", label="throw new ArgumentOutOfRangeException(''identifier'', message);", span="131-131"];
n20 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n10 [cluster="QuantConnect.Market.Add(string, int)", label=_lock, span="137-137"];
n22 [cluster="string.ToLower()", label="Entry string.ToLower()", span="0-0"];
n13 [cluster="QuantConnect.Market.Add(string, int)", label="throw new ArgumentException(''Attempted to add an already added market with a different identifier. Market: '' + market);", span="142-142"];
n16 [cluster="QuantConnect.Market.Add(string, int)", label="throw new ArgumentException(''Attempted to add a market identifier that is already in use. New Market: '' + market + '' Existing Market: '' + existingMarket);", span="148-148"];
n11 [cluster="QuantConnect.Market.Add(string, int)", label="int marketIdentifier", span="139-139"];
n14 [cluster="QuantConnect.Market.Add(string, int)", label="string existingMarket", span="145-145"];
n23 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n19 [cluster="QuantConnect.Market.Add(string, int)", label="Exit QuantConnect.Market.Add(string, int)", span="126-126"];
n24 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n21 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
n25 [cluster="QuantConnect.Market.Encode(string)", label="Entry QuantConnect.Market.Encode(string)", span="162-162"];
n26 [cluster="QuantConnect.Market.Encode(string)", label=_lock, span="164-164"];
n28 [cluster="QuantConnect.Market.Encode(string)", label="return !Markets.TryGetValue(market, out code) ? (int?) null : code;", span="167-167"];
n27 [cluster="QuantConnect.Market.Encode(string)", label="int code", span="166-166"];
n29 [cluster="QuantConnect.Market.Encode(string)", label="Exit QuantConnect.Market.Encode(string)", span="162-162"];
n30 [cluster="QuantConnect.Market.Decode(int)", label="Entry QuantConnect.Market.Decode(int)", span="176-176"];
n31 [cluster="QuantConnect.Market.Decode(int)", label=_lock, span="178-178"];
n33 [cluster="QuantConnect.Market.Decode(int)", label="return !ReverseMarkets.TryGetValue(code, out market) ? null : market;", span="181-181"];
n32 [cluster="QuantConnect.Market.Decode(int)", label="string market", span="180-180"];
n34 [cluster="QuantConnect.Market.Decode(int)", label="Exit QuantConnect.Market.Decode(int)", span="176-176"];
d36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="feed.Bridge.GetConsumingEnumerable(token)", prediction=0, span="188-188"];
d9 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", span="131-131"];
d35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="187-187"];
d172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents()", span="509-509"];
d37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.UtcNow", span="191-191"];
d173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.MinValue", span="513-513"];
d214 [cluster="System.Collections.Concurrent.BlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", label="Entry System.Collections.Concurrent.BlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", span="0-0"];
d39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorthm state changed to {0} at {1}'', _algorithmState, timeSlice.Time))", prediction=0, span="196-196"];
d41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", prediction=0, span="203-203"];
d43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="var time = timeSlice.Time", prediction=3, span="207-207"];
d44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="var newData = timeSlice.Data", prediction=4, span="208-208"];
d62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", prediction=0, span="259-259"];
d40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="token.IsCancellationRequested", prediction=0, span="201-201"];
d38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="_algorithmState != AlgorithmStatus.Running", prediction=0, span="194-194"];
d61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="258-258"];
d215 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d213 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
d201 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", prediction=0, span="570-570"];
d269 [label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
d200 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SampleRange(algorithm.GetChartUpdates())", span="569-569"];
d202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="results.SamplePerformance(_previousTime, Math.Round((algorithm.Portfolio.TotalPortfolioValue - startingPortfolioValue) * 100 / startingPortfolioValue, 10))", prediction=0, span="571-571"];
d217 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
d218 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="146-146"];
d11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var startingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="135-135"];
d51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="startingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="230-230"];
d203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", span="131-131"];
d219 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="154-154"];
d216 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
d42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="return;", prediction=10, span="204-204"];
d46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_previousTime.Date != time.Date", span="216-216"];
d53 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Securities.Update(time, newData)", span="240-240"];
d54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.SetDateTime(time)", span="243-243"];
d55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="realtime.SetTime(time)", span="244-244"];
d63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.Now)", span="264-264"];
d82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="nextMarginCallTime = time + marginCallFrequency", span="306-306"];
d85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var newBars = new TradeBars(time)", span="312-312"];
d86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var newTicks = new Ticks(time)", span="313-313"];
d87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var newDividends = new Dividends(time)", span="314-314"];
d88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var newSplits = new Splits(time)", span="315-315"];
d171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_previousTime = time", span="506-506"];
d45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=backtestMode, span="213-213"];
d52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.CashBook.Update(newData)", span="237-237"];
d89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="newData.Keys", span="319-319"];
d90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var dataPoints = newData[i]", span="322-322"];
d59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", prediction=11, span="253-253"];
d58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.Quit", span="252-252"];
d71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCall: '' + err.Message + '' STACK >>> '' + err.StackTrace)", prediction=12, span="280-280"];
d70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="279-279"];
d72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="281-281"];
d81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err.Message + '' STACK >>> '' + err.StackTrace)", prediction=13, span="302-302"];
d80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="301-301"];
d140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err.Message + '' STACK >>> '' + err.StackTrace)", prediction=14, span="443-443"];
d139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="442-442"];
d141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="444-444"];
d149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits: '' + err.Message + '' STACK >>> '' + err.StackTrace)", prediction=15, span="465-465"];
d148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="464-464"];
d150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="466-466"];
d159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Backwards Compatibility Mode: '' + err.Message + '' STACK >>> '' + err.StackTrace)", prediction=16, span="481-481"];
d158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="480-480"];
d160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="482-482"];
d168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err.Message + '' STACK >>> '' + err.StackTrace)", prediction=17, span="496-496"];
d167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="495-495"];
d169 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="497-497"];
d179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", color=green, community=0, label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err.Message + '' STACK >>> '' + err.StackTrace)", prediction=18, span="525-525"];
d178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="524-524"];
d180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="526-526"];
d206 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="598-598"];
d10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_dataPointCount = 0", span="134-134"];
d12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="136-136"];
d16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmId = job.AlgorithmId", span="142-142"];
d18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_previousTime = algorithm.StartDate.Date", span="144-144"];
d19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnTradeBar = AddMethodInvoker<Dictionary<string, TradeBar>>(algorithm, methodInvokers, ''OnTradeBar'')", span="149-149"];
d20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnTick = AddMethodInvoker<Dictionary<string, List<Tick>>>(algorithm, methodInvokers, ''OnTick'')", span="150-150"];
d21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="153-153"];
d22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="154-154"];
d24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="160-160"];
d25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="161-161"];
d26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="feed.Subscriptions", span="164-164"];
d28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="170-170"];
d31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="178-178"];
d47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="219-219"];
d49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, 0)", span="224-224"];
d50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - startingPortfolioValue) * 100 / startingPortfolioValue, 10))", span="228-228"];
d56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="247-247"];
d57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.GetQuit()", span="250-250"];
d60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError != null", span="256-256"];
d65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var marginCallOrders = algorithm.Portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="268-268"];
d67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCall(marginCallOrders)", span="274-274"];
d69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="278-278"];
d73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var executedOrders = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="285-285"];
d75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, order.Symbol, order.Quantity, order.Price))", span="288-288"];
d77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCallWarning()", span="296-296"];
d79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="300-300"];
d91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var config = feed.Subscriptions[i]", span="323-323"];
d98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplyDividend(dividend)", span="343-343"];
d104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplySplit(split)", span="358-358"];
d112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="377-377"];
d136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[config.Type](algorithm, dataPoint)", span="437-437"];
d138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="441-441"];
d143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (Dividends)](algorithm, newDividends)", span="454-454"];
d145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (Splits)](algorithm, newSplits)", span="458-458"];
d147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="463-463"];
d153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (Dictionary<string, TradeBar>)](algorithm, oldBars)", span="474-474"];
d155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (Dictionary<string, List<Tick>>)](algorithm, oldTicks)", span="475-475"];
d157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="479-479"];
d162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (TradeBars)](algorithm, newBars)", span="489-489"];
d164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (Ticks)](algorithm, newTicks)", span="490-490"];
d166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="494-494"];
d170 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="503-503"];
d175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.OnEndOfAlgorithm()", span="519-519"];
d181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents(forceProcess: true)", span="530-530"];
d183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var hackedFrontier = algorithm.Time == DateTime.MinValue ? DateTime.MinValue : algorithm.Time.AddMilliseconds(-1)", span="536-536"];
d184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.SetDateTime(hackedFrontier)", span="537-537"];
d185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Securities", span="538-538"];
d188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="algorithm.Liquidate()", span="544-544"];
d189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Liquidated'')", span="545-545"];
d190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Liquidated)", span="546-546"];
d193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Stopped'')", span="553-553"];
d194 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Stopped)", span="554-554"];
d197 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="561-561"];
d198 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Deleted)", span="562-562"];
d199 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Completed)", span="566-566"];
d247 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="231-231"];
d174 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="516-516"];
d97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Applying Dividend for '' + dividend.Symbol)", span="341-341"];
d103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Applying Split for '' + split.Symbol)", span="355-355"];
d187 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="543-543"];
d192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="552-552"];
d196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="560-560"];
d1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return ''Algorithm took longer than 10 minutes on a single time loop.'';\r\n                }\r\n                return null;\r\n            }", span="109-116"];
d5 [cluster="lambda expression", label="CurrentTimeStepElapsed > _timeLoopMaximum", span="111-111"];
d2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="_liveMode = liveMode", span="117-117"];
d17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.Running", span="143-143"];
d32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="179-179"];
d92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_dataPointCount += dataPoints.Count", span="326-326"];
d113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="378-378"];
d177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="523-523"];
d182 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState == AlgorithmStatus.Liquidated || !_liveMode", span="533-533"];
d191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState == AlgorithmStatus.Stopped", span="550-550"];
d195 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="_algorithmState == AlgorithmStatus.Deleted", span="558-558"];
d259 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label=_lock, span="579-579"];
d261 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="_algorithmState = state", span="585-585"];
d256 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="339-339"];
d257 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="170-170"];
d48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="startingPortfolioValue == 0m", span="222-222"];
d33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="180-180"];
d115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="return;", span="380-380"];
d114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err.Message)", span="379-379"];
d221 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", label="Entry QuantConnect.Securities.SecurityManager.Update(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="277-277"];
d222 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="287-287"];
d223 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="104-104"];
d15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var nextMarginCallTime = DateTime.MinValue", span="139-139"];
d64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="bool issueMarginCallWarning", span="267-267"];
d83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var oldBars = new Dictionary<string, TradeBar>()", span="310-310"];
d14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="138-138"];
d76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=issueMarginCallWarning, span="292-292"];
d74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=executedOrders, span="286-286"];
d84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var oldTicks = new Dictionary<string, List<Tick>>()", span="311-311"];
d232 [cluster="QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", label="Entry QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", span="35-35"];
d121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="newBars[bar.Symbol] = bar", span="395-395"];
d161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnDataTradeBars && newBars.Count > 0", span="489-489"];
d233 [cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="37-37"];
d132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="!newTicks.TryGetValue(tick.Symbol, out ticks)", span="420-420"];
d134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="newTicks.Add(tick.Symbol, ticks)", span="423-423"];
d163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnDataTicks && newTicks.Count > 0", span="490-490"];
d234 [cluster="QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", label="Entry QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", span="36-36"];
d100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="newDividends.Add(dividend)", span="347-347"];
d142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnDataDividends && newDividends.Count != 0", span="452-452"];
d235 [cluster="QuantConnect.Data.Market.Splits.Splits(System.DateTime)", label="Entry QuantConnect.Data.Market.Splits.Splits(System.DateTime)", span="36-36"];
d106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="newSplits.Add(split)", span="362-362"];
d144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnDataSplits && newSplits.Count != 0", span="456-456"];
d220 [cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", label="Entry QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="59-59"];
d94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=dataPoints, span="336-336"];
d93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="config.IsInternalFeed", span="329-329"];
d249 [cluster="System.Exception.Exception(string, System.Exception)", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
d268 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="598-598"];
d263 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="600-600"];
d265 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="603-603"];
d13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="137-137"];
d267 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return false;", span="606-606"];
d152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnTradeBar && oldBars.Count > 0", span="474-474"];
d154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="hasOnTick && oldTicks.Count > 0", span="475-475"];
d23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var backwardsCompatibilityMode = !hasOnDataTradeBars && !hasOnDataTicks", span="157-157"];
d99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=hasOnDataDividends, span="344-344"];
d105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=hasOnDataSplits, span="359-359"];
d29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers.ContainsKey(config.Type)", span="173-173"];
d34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="182-182"];
d27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="config.Type.Name != ''TradeBar'' && config.Type.Name != ''Tick''", span="167-167"];
d207 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
d208 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
d30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="genericMethod == null", span="176-176"];
d210 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
d108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="j < config.Consolidators.Count", span="370-370"];
d224 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="64-64"];
d225 [cluster="QuantConnect.Interfaces.IAlgorithm.GetQuit()", label="Entry QuantConnect.Interfaces.IAlgorithm.GetQuit()", span="444-444"];
d66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="marginCallOrders.Count != 0", span="269-269"];
d226 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="467-467"];
d68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="276-276"];
d227 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.Order>)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.Order>)", span="254-254"];
d228 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", label="Entry QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", span="50-50"];
d229 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
d230 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="248-248"];
d78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="298-298"];
d231 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="259-259"];
d109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="config.Consolidators[j].Update(dataPoint)", span="372-372"];
d95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var dividend = dataPoint as Dividend", span="338-338"];
d236 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="521-521"];
d101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var split = dataPoint as Split", span="352-352"];
d238 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="543-543"];
d111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="375-375"];
d122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="dataPoint.DataType == MarketDataType.Tick", span="402-402"];
d124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="tick != null", span="405-405"];
d137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="439-439"];
d246 [cluster="Unk.]", label="Entry Unk.]", span=""];
d146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="461-461"];
d151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=backwardsCompatibilityMode, span="470-470"];
d156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="477-477"];
d165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="492-492"];
d176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=Exception, span="521-521"];
d248 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="274-274"];
d250 [cluster="System.DateTime.AddMilliseconds(double)", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
d186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="security.Value.SetMarketPrice(hackedFrontier, null)", span="540-540"];
d252 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", span="396-396"];
d253 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="111-111"];
d254 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="197-197"];
d255 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="99-99"];
d96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="dividend != null", span="339-339"];
d102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="split != null", span="353-353"];
d0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107"];
d4 [cluster="lambda expression", label="Entry lambda expression", span="109-116"];
d6 [cluster="lambda expression", label="return ''Algorithm took longer than 10 minutes on a single time loop.'';", span="113-113"];
d7 [cluster="lambda expression", label="return null;", span="115-115"];
d3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107"];
d258 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="577-577"];
d260 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="state != AlgorithmStatus.Running", span="583-583"];
d262 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="577-577"];
d204 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="oldBars[bar.Symbol] = bar", span="391-391"];
d205 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
d127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="!oldTicks.TryGetValue(tick.Symbol, out ticks)", span="410-410"];
d129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="oldTicks.Add(tick.Symbol, ticks)", span="413-413"];
d119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=backwardsCompatibilityMode, span="389-389"];
d117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var bar = dataPoint as TradeBar", span="386-386"];
d123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var tick = dataPoint as Tick", span="404-404"];
d131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="List<Tick> ticks", span="419-419"];
d133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="ticks = new List<Tick>(3)", span="422-422"];
d135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="ticks.Add(tick)", span="425-425"];
d244 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(string, out T)", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(string, out T)", span="172-172"];
d245 [cluster="QuantConnect.Data.Market.DataDictionary<T>.Add(string, T)", label="Entry QuantConnect.Data.Market.DataDictionary<T>.Add(string, T)", span="148-148"];
d237 [cluster="QuantConnect.Data.Market.DataDictionary<T>.Add<T>(T)", label="Entry QuantConnect.Data.Market.DataDictionary<T>.Add<T>(T)", span="232-232"];
d130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="ticks.Add(tick)", span="415-415"];
d116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="dataPoint.DataType == MarketDataType.TradeBar", span="384-384"];
d266 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return true;", span="604-604"];
d264 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="newSplitMethodInfo != null", span="601-601"];
d211 [cluster="Unk.DelegateForCallMethod", label="Entry Unk.DelegateForCallMethod", span=""];
d212 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
d125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label=backwardsCompatibilityMode, span="407-407"];
d209 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
d107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="var j = 0", span="370-370"];
d110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="j++", span="370-370"];
d239 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", span="54-54"];
d118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="bar != null", span="387-387"];
d251 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", span="392-392"];
d8 [cluster="lambda expression", label="Exit lambda expression", span="109-116"];
d126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="List<Tick> ticks", span="409-409"];
d128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, System.Threading.CancellationToken)", label="ticks = new List<Tick>(3)", span="412-412"];
d240 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
d242 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
d241 [cluster="System.Collections.Generic.List<T>.List(int)", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
d243 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_40 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="AlgorithmRunner.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m0_50 [cluster="Unk.setFXCMStartTime", file="AlgorithmRunner.cs", label="Entry Unk.setFXCMStartTime", span=""];
m0_43 [cluster="Unk.setResponseFormat", file="AlgorithmRunner.cs", label="Entry Unk.setResponseFormat", span=""];
m0_39 [cluster="System.Collections.Generic.List<T>.List()", file="AlgorithmRunner.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_44 [cluster="Unk.setFXCMTimingInterval", file="AlgorithmRunner.cs", label="Entry Unk.setFXCMTimingInterval", span=""];
m0_57 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="AlgorithmRunner.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m0_52 [cluster="Unk.setFXCMEndTime", file="AlgorithmRunner.cs", label="Entry Unk.setFXCMEndTime", span=""];
m0_48 [cluster="Unk.setFXCMStartDate", file="AlgorithmRunner.cs", label="Entry Unk.setFXCMStartDate", span=""];
m0_59 [cluster="System.Collections.Generic.List<T>.InsertRange(int, System.Collections.Generic.IEnumerable<T>)", file="AlgorithmRunner.cs", label="Entry System.Collections.Generic.List<T>.InsertRange(int, System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m0_45 [cluster="Unk.setMDEntryTypeSet", file="AlgorithmRunner.cs", label="Entry Unk.setMDEntryTypeSet", span=""];
m0_63 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="157-157"];
m0_47 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToJavaDateUtc(System.DateTime)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToJavaDateUtc(System.DateTime)", span="238-238"];
m0_41 [cluster="MarketDataRequest.cstr", file="AlgorithmRunner.cs", label="Entry MarketDataRequest.cstr", span=""];
m0_46 [cluster="UTCDate.cstr", file="AlgorithmRunner.cs", label="Entry UTCDate.cstr", span=""];
m0_38 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToFxcmInterval(QuantConnect.Resolution)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToFxcmInterval(QuantConnect.Resolution)", span="202-202"];
m0_42 [cluster="Unk.setSubscriptionRequestType", file="AlgorithmRunner.cs", label="Entry Unk.setSubscriptionRequestType", span=""];
m0_51 [cluster="Unk.setFXCMEndDate", file="AlgorithmRunner.cs", label="Entry Unk.setFXCMEndDate", span=""];
m0_0 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="66-66"];
m0_1 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="AlgorithmRunner.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="66-66"];
m0_49 [cluster="UTCTimeOnly.cstr", file="AlgorithmRunner.cs", label="Entry UTCTimeOnly.cstr", span=""];
m0_54 [cluster="Unk.addRelatedSymbol", file="AlgorithmRunner.cs", label="Entry Unk.addRelatedSymbol", span=""];
m0_62 [cluster="System.DateTime.AddSeconds(double)", file="AlgorithmRunner.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m0_60 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="AlgorithmRunner.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="486-486"];
m0_56 [cluster="System.Threading.AutoResetEvent.AutoResetEvent(bool)", file="AlgorithmRunner.cs", label="Entry System.Threading.AutoResetEvent.AutoResetEvent(bool)", span="0-0"];
m0_14 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="mdr.setMDEntryTypeSet(MarketDataRequest.MDENTRYTYPESET_ALL)", span="96-96"];
m0_2 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="76-76"];
m0_3 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label=requests, span="78-78"];
m0_36 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="yield return new Slice(data.EndTime, new[] { data });", span="147-147"];
m0_4 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="var interval = ToFxcmInterval(request.Resolution)", span="80-80"];
m0_6 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="var end = request.EndTimeUtc", span="85-85"];
m0_8 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="end > request.StartTimeUtc", span="88-88"];
m0_15 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="mdr.setFXCMStartDate(new UTCDate(ToJavaDateUtc(request.StartTimeUtc)))", span="98-98"];
m0_16 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="mdr.setFXCMStartTime(new UTCTimeOnly(ToJavaDateUtc(request.StartTimeUtc)))", span="99-99"];
m0_19 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="mdr.addRelatedSymbol(_fxcmInstruments[_symbolMapper.GetBrokerageSymbol(request.Symbol)])", span="102-102"];
m0_32 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="end = request.Resolution == Resolution.Tick ? firstDateUtc.AddMilliseconds(-1) : firstDateUtc.AddSeconds(-1)", span="132-132"];
m0_33 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="request.StartTimeUtc.AddSeconds(1) >= end", span="134-134"];
m0_5 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="var history = new List<BaseData>()", span="83-83"];
m0_13 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="mdr.setFXCMTimingInterval(interval)", span="95-95"];
m0_29 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="history.InsertRange(0, _lastHistoryChunk)", span="125-125"];
m0_34 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="DataPointCount += history.Count", span="143-143"];
m0_35 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label=history, span="145-145"];
m0_7 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="var attempt = 1", span="87-87"];
m0_17 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="mdr.setFXCMEndDate(new UTCDate(ToJavaDateUtc(end)))", span="100-100"];
m0_18 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="mdr.setFXCMEndTime(new UTCTimeOnly(ToJavaDateUtc(end)))", span="101-101"];
m0_31 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="end != firstDateUtc", span="129-129"];
m0_27 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="++attempt > MaximumHistoryRetryAttempts", span="115-115"];
m0_9 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="_lastHistoryChunk.Clear()", span="90-90"];
m0_10 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="var mdr = new MarketDataRequest()", span="92-92"];
m0_11 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="mdr.setSubscriptionRequestType(SubscriptionRequestTypeFactory.SNAPSHOT)", span="93-93"];
m0_12 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="mdr.setResponseFormat(IFixMsgTypeDefs.__Fields.MSGTYPE_FXCMRESPONSE)", span="94-94"];
m0_22 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="_currentRequest = _gateway.sendMessage(mdr)", span="107-107"];
m0_20 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="AutoResetEvent autoResetEvent", span="104-104"];
m0_21 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label=_locker, span="105-105"];
m0_23 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="autoResetEvent = new AutoResetEvent(false)", span="108-108"];
m0_24 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="_mapRequestsToAutoResetEvents[_currentRequest] = autoResetEvent", span="109-109"];
m0_26 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="!autoResetEvent.WaitOne(HistoryResponseTimeout)", span="112-112"];
m0_25 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="_pendingHistoryRequests.Add(_currentRequest)", span="110-110"];
m0_28 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label=_locker, span="123-123"];
m0_30 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="var firstDateUtc = _lastHistoryChunk[0].Time.ConvertToUtc(_configTimeZone)", span="128-128"];
m0_37 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="AlgorithmRunner.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="76-76"];
m0_53 [cluster="QuantConnect.Brokerages.Fxcm.FxcmSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="152-152"];
m0_58 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="AlgorithmRunner.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m0_55 [cluster="Unk.sendMessage", file="AlgorithmRunner.cs", label="Entry Unk.sendMessage", span=""];
m0_64 [file="AlgorithmRunner.cs", label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage", span=""];
m2_30 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m2_18 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", span="109-109"];
m2_23 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", color=green, community=0, file="BacktestingBrokerage.cs", label="UserId = job.UserId", prediction=19, span="118-118"];
m2_22 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BacktestingBrokerage.cs", label="Results = results", span="117-117"];
m2_24 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", color=green, community=0, file="BacktestingBrokerage.cs", label="ProjectId = job.ProjectId", prediction=20, span="119-119"];
m2_25 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", color=green, community=0, file="BacktestingBrokerage.cs", label="SessionId = job.SessionId", prediction=21, span="120-120"];
m2_26 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", color=green, community=0, file="BacktestingBrokerage.cs", label="Channel = job.Channel", prediction=22, span="121-121"];
m2_27 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BacktestingBrokerage.cs", label=Exception, span="123-123"];
m2_19 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BacktestingBrokerage.cs", label="SessionId = job.SessionId", span="114-114"];
m2_20 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BacktestingBrokerage.cs", label="CompileId = job.CompileId", span="115-115"];
m2_21 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BacktestingBrokerage.cs", label="DeployId = job.DeployId", span="116-116"];
m2_28 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BacktestingBrokerage.cs", label="Log.Error(err)", span="124-124"];
m2_29 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", span="109-109"];
m2_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSnapshotEndEventArgs.TickSnapshotEndEventArgs(int)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.TickSnapshotEndEventArgs.TickSnapshotEndEventArgs(int)", span="32-32"];
m2_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSnapshotEndEventArgs.TickSnapshotEndEventArgs(int)", file="BacktestingBrokerage.cs", label="TickerId = tickerId", span="34-34"];
m2_2 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", span="82-82"];
m2_16 [cluster="Unk.>", file="BacktestingBrokerage.cs", label="Entry Unk.>", span=""];
m2_4 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="CompileId          = packet.CompileId", span="88-88"];
m2_5 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="Channel            = packet.Channel", span="89-89"];
m2_6 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="SessionId          = packet.SessionId", span="90-90"];
m2_7 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="DeployId           = packet.DeployId", span="91-91"];
m2_8 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="Type               = packet.Type", span="92-92"];
m2_9 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="UserId             = packet.UserId", span="93-93"];
m2_10 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="ProjectId          = packet.ProjectId", span="94-94"];
m2_11 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="Results            = packet.Results", span="95-95"];
m2_12 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="ProcessingTime     = packet.ProcessingTime", span="96-96"];
m2_3 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSnapshotEndEventArgs", span=""];
m2_13 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label=Exception, span="98-98"];
m2_14 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="Log.Trace(''LiveResultPacket(): Error converting json: '' + err)", span="100-100"];
m2_15 [cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Packets.LiveResultPacket.LiveResultPacket(string)", span="82-82"];
m2_44 [file="BacktestingBrokerage.cs", label="QuantConnect.Packets.LiveResultPacket", span=""];
m3_752 [cluster="IBApi.Order.cstr", file="BacktestingRealTimeHandler.cs", label="Entry IBApi.Order.cstr", span=""];
m3_978 [cluster="QuantConnect.Holding.Holding()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m3_411 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m3_340 [cluster="int.ToString()", file="BacktestingRealTimeHandler.cs", label="Entry int.ToString()", span="0-0"];
m3_512 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m3_729 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m3_596 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", span="78-78"];
m3_122 [cluster="Unk.ToArray", file="BacktestingRealTimeHandler.cs", label="Entry Unk.ToArray", span=""];
m3_305 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="714-714"];
m3_306 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Dispose(): Disposing of IB resources.'')", span="716-716"];
m3_307 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="BacktestingRealTimeHandler.cs", label="_client != null", span="718-718"];
m3_308 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="BacktestingRealTimeHandler.cs", label="Disconnect()", span="720-720"];
m3_310 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="BacktestingRealTimeHandler.cs", label="_messagingRateLimiter.Dispose()", span="724-724"];
m3_309 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="BacktestingRealTimeHandler.cs", label="_client.Dispose()", span="721-721"];
m3_311 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="BacktestingRealTimeHandler.cs", label="_ctsRestartGateway.Cancel(false)", span="726-726"];
m3_312 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="714-714"];
m3_597 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="107-107"];
m3_242 [cluster="EReader.cstr", file="BacktestingRealTimeHandler.cs", label="Entry EReader.cstr", span=""];
m3_288 [cluster="Unk.reqAccountUpdates", file="BacktestingRealTimeHandler.cs", label="Entry Unk.reqAccountUpdates", span=""];
m3_819 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="65-65"];
m3_1358 [cluster="System.IO.File.ReadAllLines(string)", file="BacktestingRealTimeHandler.cs", label="Entry System.IO.File.ReadAllLines(string)", span="0-0"];
m3_1261 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", span="2496-2496"];
m3_1277 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="int timeOut = 60", span="2506-2506"];
m3_1281 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="var useRegularTradingHours = Convert.ToInt32(!request.IncludeExtendedMarketHours)", span="2512-2512"];
m3_1282 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="endTime >= startTime", span="2515-2515"];
m3_1286 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="_requestInformation[historicalTicker] = ''GetHistory: '' + contract", span="2521-2521"];
m3_1287 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.HistoricalDataEventArgs> clientOnHistoricalData = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == historicalTicker)\r\n                    {\r\n                        var bar = ConvertTradeBar(request.Symbol, request.Resolution, args);\r\n                        if (request.Resolution != Resolution.Daily)\r\n                        {\r\n                            bar.Time = bar.Time.ConvertFromUtc(exchangeTimeZone);\r\n                        }\r\n\r\n                        historyPiece.Add(bar);\r\n                        dataDownloading.Set();\r\n                    }\r\n                }", span="2523-2536"];
m3_1293 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="Client.ClientSocket.reqHistoricalData(historicalTicker, contract, endTime.ToString(''yyyyMMdd HH:mm:ss UTC''),\r\n                    duration, resolution, dataType, useRegularTradingHours, 2, false, new List<TagValue>())", span="2563-2564"];
m3_1278 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="var history = new List<TradeBar>()", span="2508-2508"];
m3_1296 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="waitResult = WaitHandle.WaitAny(new WaitHandle[] {dataDownloading, dataDownloaded}, timeOut*1000)", span="2569-2569"];
m3_1302 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() Pacing violation. Paused for {0} secs.'', timeOut)", span="2581-2581"];
m3_1303 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() History request timed out ({0} sec)'', timeOut)", span="2585-2585"];
m3_1279 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="var dataDownloading = new AutoResetEvent(false)", span="2509-2509"];
m3_1306 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="history.AddRange(filteredPiece)", span="2597-2597"];
m3_1308 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="return history;", span="2603-2603"];
m3_1280 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="var dataDownloaded = new ManualResetEvent(false)", span="2510-2510"];
m3_1288 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd = (sender, args) =>\r\n                {\r\n                    if (args.RequestId == historicalTicker)\r\n                    {\r\n                        dataDownloaded.Set();\r\n                    }\r\n                }", span="2538-2544"];
m3_1289 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.ErrorEventArgs> clientOnError = (sender, args) =>\r\n                {\r\n                    if (args.Code == 162 && args.Message.Contains(''pacing violation''))\r\n                    {\r\n                        // pacing violation happened\r\n                        pacing = true;\r\n                    }\r\n                    if (args.Code == 162 && args.Message.Contains(''no data''))\r\n                    {\r\n                        dataDownloaded.Set();\r\n                    }\r\n                }", span="2546-2557"];
m3_1283 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="var pacing = false", span="2517-2517"];
m3_1284 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="var historyPiece = new List<TradeBar>()", span="2518-2518"];
m3_1285 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="var historicalTicker = GetNextTickerId()", span="2519-2519"];
m3_1304 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="!historyPiece.Any()", span="2590-2590"];
m3_1305 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="var filteredPiece = historyPiece.OrderBy(x => x.Time)", span="2595-2595"];
m3_1291 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="Client.HistoricalData += clientOnHistoricalData", span="2560-2560"];
m3_1298 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="Client.HistoricalData -= clientOnHistoricalData", span="2573-2573"];
m3_1292 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="Client.HistoricalDataEnd += clientOnHistoricalDataEnd", span="2561-2561"];
m3_1299 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="Client.HistoricalDataEnd -= clientOnHistoricalDataEnd", span="2574-2574"];
m3_1290 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="Client.Error += clientOnError", span="2559-2559"];
m3_1297 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="Client.Error -= clientOnError", span="2572-2572"];
m3_1301 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label=pacing, span="2578-2578"];
m3_1294 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="var waitResult = 0", span="2566-2566"];
m3_1295 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="waitResult == 0", span="2567-2567"];
m3_1300 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="waitResult == WaitHandle.WaitTimeout", span="2576-2576"];
m3_1307 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="endTime = filteredPiece.First().Time", span="2600-2600"];
m3_1309 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest, Contract, System.DateTime, System.DateTime, DateTimeZone, string, string, string)", span="2496-2496"];
m3_576 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="1228-1228"];
m3_612 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="!_disconnected1100Fired", span="1232-1232"];
m3_613 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="return;", span="1234-1234"];
m3_614 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="var isResetTime = IsWithinScheduledServerResetTimes()", span="1237-1237"];
m3_615 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="!isResetTime", span="1239-1239"];
m3_622 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="_previouslyInResetTime = isResetTime", span="1264-1264"];
m3_616 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label=_previouslyInResetTime, span="1241-1241"];
m3_620 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Within server reset times, trying to wait for reconnect...'')", span="1258-1258"];
m3_617 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.TryWaitForReconnect(): Reset time finished and still disconnected. Restarting...'')", span="1244-1244"];
m3_619 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="OnMessage(BrokerageMessageEvent.Disconnected(''Connection with Interactive Brokers lost. '' +\r\n                                                                 ''This could be because of internet connectivity issues or a log in from another location.''\r\n                        ))", span="1251-1253"];
m3_618 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="_resetEventRestartGateway.Set()", span="1246-1246"];
m3_621 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="Task.Delay(TimeSpan.FromMinutes(1)).ContinueWith(_ => TryWaitForReconnect())", span="1261-1261"];
m3_623 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.TryWaitForReconnect()", span="1228-1228"];
m3_792 [cluster="Unk.ToString", file="BacktestingRealTimeHandler.cs", label="Entry Unk.ToString", span=""];
m3_1272 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m3_177 [cluster="System.DateTime.ToString(string)", file="BacktestingRealTimeHandler.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m3_404 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m3_50 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="221-252"];
m3_121 [cluster="Unk.ToList", file="BacktestingRealTimeHandler.cs", label="Entry Unk.ToList", span=""];
m3_28 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="order.Quantity = jObject[''Quantity''].Value<decimal>()", span="100-100"];
m3_1101 [cluster="string.ToLower()", file="BacktestingRealTimeHandler.cs", label="Entry string.ToLower()", span="0-0"];
m3_1220 [cluster="Unk.Count", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Count", span=""];
m3_141 [cluster="Unk.Substring", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Substring", span=""];
m3_1150 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Data.Market.Tick.IsValid()", span="412-412"];
m3_783 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", span="1729-1729"];
m3_859 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="order.OrderType", span="1731-1731"];
m3_869 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="order.Tif == IB.TimeInForce.MarketOnOpen", span="1739-1739"];
m3_872 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentException(order.OrderType, ''order.OrderType'');", span="1746-1746"];
m3_860 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="IB.OrderType.Limit", span="1733-1733"];
m3_862 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="IB.OrderType.Stop", span="1734-1734"];
m3_864 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="IB.OrderType.StopLimit", span="1735-1735"];
m3_866 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="IB.OrderType.MarketOnClose", span="1736-1736"];
m3_868 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="IB.OrderType.Market", span="1738-1738"];
m3_861 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="return OrderType.Limit;", span="1733-1733"];
m3_863 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="return OrderType.StopMarket;", span="1734-1734"];
m3_865 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="return OrderType.StopLimit;", span="1735-1735"];
m3_867 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="return OrderType.MarketOnClose;", span="1736-1736"];
m3_870 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="return OrderType.MarketOnOpen;", span="1741-1741"];
m3_871 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="return OrderType.Market;", span="1743-1743"];
m3_873 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(IBApi.Order)", span="1729-1729"];
m3_248 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", span="648-648"];
m3_271 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.AccountDownloadEndEventArgs> clientOnAccountDownloadEnd = (sender, args) =>\r\n            {\r\n                Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Finished account download for '' + args.Account);\r\n                _accountHoldingsResetEvent.Set();\r\n            }", span="651-655"];
m3_276 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.reqAccountUpdates(true, account)", span="669-669"];
m3_272 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="_client.AccountDownloadEnd += clientOnAccountDownloadEnd", span="656-656"];
m3_280 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", span="681-681"];
m3_284 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="_client.AccountDownloadEnd -= clientOnAccountDownloadEnd", span="690-690"];
m3_273 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="var firstAccountUpdateReceived = new ManualResetEvent(false)", span="660-660"];
m3_274 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.UpdateAccountValueEventArgs> clientOnUpdateAccountValue = (sender, args) =>\r\n            {\r\n                firstAccountUpdateReceived.Set();\r\n            }", span="661-664"];
m3_277 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="firstAccountUpdateReceived.WaitOne(2500)", span="672-672"];
m3_275 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="_client.UpdateAccountValue += clientOnUpdateAccountValue", span="666-666"];
m3_281 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", span="682-682"];
m3_285 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="_client.UpdateAccountValue -= clientOnUpdateAccountValue", span="691-691"];
m3_278 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="Thread.Sleep(2500)", span="676-676"];
m3_279 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="!_accountHoldingsResetEvent.WaitOne(15000)", span="678-678"];
m3_282 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Operation took longer than 15 seconds.'')", span="684-684"];
m3_283 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="return false;", span="686-686"];
m3_286 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="return true;", span="693-693"];
m3_287 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadAccount(string)", span="648-648"];
m3_338 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", span="1620-1620"];
m3_793 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="var securityType = ConvertSecurityType(symbol.ID.SecurityType)", span="1622-1622"];
m3_794 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="var ibSymbol = _symbolMapper.GetBrokerageSymbol(symbol)", span="1623-1623"];
m3_795 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="var contract = new Contract\r\n            {\r\n                Symbol = ibSymbol,\r\n                Exchange = exchange ?? ''Smart'',\r\n                SecType = securityType,\r\n                Currency = ''USD''\r\n            }", span="1624-1630"];
m3_796 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="symbol.ID.SecurityType == SecurityType.Forex", span="1631-1631"];
m3_800 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="symbol.ID.SecurityType == SecurityType.Equity", span="1639-1639"];
m3_802 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="symbol.ID.SecurityType == SecurityType.Option", span="1644-1644"];
m3_803 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.LastTradeDateOrContractMonth = symbol.ID.Date.ToString(DateFormat.EightCharacter)", span="1646-1646"];
m3_804 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.Right = symbol.ID.OptionRight == OptionRight.Call ? IB.RightType.Call : IB.RightType.Put", span="1647-1647"];
m3_805 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.Strike = Convert.ToDouble(symbol.ID.StrikePrice)", span="1648-1648"];
m3_809 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="symbol.ID.SecurityType == SecurityType.Future", span="1654-1654"];
m3_811 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.LastTradeDateOrContractMonth = symbol.ID.Date.ToString(DateFormat.YearMonth)", span="1660-1660"];
m3_812 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="symbol.ID.Market == Market.USA", span="1662-1662"];
m3_815 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.Exchange = _futuresExchanges.ContainsKey(symbol.ID.Market) ?\r\n                                            _futuresExchanges[symbol.ID.Market] :\r\n                                            symbol.ID.Market", span="1669-1671"];
m3_798 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.Symbol = ibSymbol.Substring(0, 3)", span="1635-1635"];
m3_799 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.Currency = ibSymbol.Substring(3)", span="1636-1636"];
m3_806 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.Symbol = ibSymbol", span="1649-1649"];
m3_810 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.Symbol = ibSymbol", span="1659-1659"];
m3_797 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.Exchange = ''IDEALPRO''", span="1634-1634"];
m3_801 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.PrimaryExch = GetPrimaryExchange(contract)", span="1641-1641"];
m3_816 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="return contract;", span="1675-1675"];
m3_807 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.Multiplier = ''100''", span="1650-1650"];
m3_808 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.TradingClass = GetTradingClass(contract)", span="1651-1651"];
m3_813 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.Exchange = ''''", span="1664-1664"];
m3_814 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="contract.Exchange = GetFuturesContractExchange(contract)", span="1665-1665"];
m3_817 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateContract(QuantConnect.Symbol, string)", span="1620-1620"];
m3_608 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m3_625 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", span="68-68"];
m3_84 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="340-340"];
m3_642 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m3_1221 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="BacktestingRealTimeHandler.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m3_100 [cluster="Unk.reqAllOpenOrders", file="BacktestingRealTimeHandler.cs", label="Entry Unk.reqAllOpenOrders", span=""];
m3_362 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", span="809-809"];
m3_363 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="BacktestingRealTimeHandler.cs", label="ContractDetails details", span="811-811"];
m3_364 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="BacktestingRealTimeHandler.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="812-812"];
m3_366 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="BacktestingRealTimeHandler.cs", label="details = GetContractDetails(contract)", span="817-817"];
m3_365 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="BacktestingRealTimeHandler.cs", label="return details.Summary.TradingClass;", span="814-814"];
m3_367 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="BacktestingRealTimeHandler.cs", label="details == null", span="818-818"];
m3_369 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="BacktestingRealTimeHandler.cs", label="return details.Summary.TradingClass;", span="824-824"];
m3_368 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="BacktestingRealTimeHandler.cs", label="return null;", span="821-821"];
m3_370 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetTradingClass(Contract)", span="809-809"];
m3_52 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", span="1179-1179"];
m3_1362 [cluster="Unk.Any", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Any", span=""];
m3_341 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m3_598 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", span="214-214"];
m3_673 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", span="1753-1753"];
m3_875 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label=status, span="1755-1755"];
m3_897 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentException(status, ''status'');", span="1788-1788"];
m3_876 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.ApiPending", span="1757-1757"];
m3_880 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.ApiCancelled", span="1762-1762"];
m3_884 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.Submitted", span="1767-1767"];
m3_886 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.Filled", span="1770-1770"];
m3_888 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.PartiallyFilled", span="1773-1773"];
m3_890 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.Error", span="1776-1776"];
m3_892 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.Inactive", span="1779-1779"];
m3_895 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.None", span="1783-1783"];
m3_877 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.PendingSubmit", span="1758-1758"];
m3_878 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.PreSubmitted", span="1759-1759"];
m3_879 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="return OrderStatus.New;", span="1760-1760"];
m3_881 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.PendingCancel", span="1763-1763"];
m3_882 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="IB.OrderStatus.Cancelled", span="1764-1764"];
m3_883 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="return OrderStatus.Canceled;", span="1765-1765"];
m3_885 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="return OrderStatus.Submitted;", span="1768-1768"];
m3_887 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="return OrderStatus.Filled;", span="1771-1771"];
m3_889 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="return OrderStatus.PartiallyFilled;", span="1774-1774"];
m3_891 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="return OrderStatus.Invalid;", span="1777-1777"];
m3_893 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.ConvertOrderStatus(): Inactive order'')", span="1780-1780"];
m3_894 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="return OrderStatus.None;", span="1781-1781"];
m3_896 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="return OrderStatus.None;", span="1784-1784"];
m3_898 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderStatus(string)", span="1753-1753"];
m3_1262 [cluster="System.Collections.Generic.IEnumerable<TOuter>.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TOuter>.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)", span="0-0"];
m3_1065 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_755 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1711-1711"];
m3_844 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label=type, span="1713-1713"];
m3_857 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(OrderType));", span="1722-1722"];
m3_845 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="OrderType.Market", span="1715-1715"];
m3_847 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="OrderType.Limit", span="1716-1716"];
m3_849 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="OrderType.StopMarket", span="1717-1717"];
m3_851 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="OrderType.StopLimit", span="1718-1718"];
m3_853 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="OrderType.MarketOnOpen", span="1719-1719"];
m3_855 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="OrderType.MarketOnClose", span="1720-1720"];
m3_846 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="return IB.OrderType.Market;", span="1715-1715"];
m3_848 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="return IB.OrderType.Limit;", span="1716-1716"];
m3_850 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="return IB.OrderType.Stop;", span="1717-1717"];
m3_852 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="return IB.OrderType.StopLimit;", span="1718-1718"];
m3_854 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="return IB.OrderType.Market;", span="1719-1719"];
m3_856 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="return IB.OrderType.MarketOnClose;", span="1720-1720"];
m3_858 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1711-1711"];
m3_998 [cluster="System.Math.Round(decimal)", file="BacktestingRealTimeHandler.cs", label="Entry System.Math.Round(decimal)", span="0-0"];
m3_83 [cluster="Unk.cancelOrder", file="BacktestingRealTimeHandler.cs", label="Entry Unk.cancelOrder", span=""];
m3_1219 [cluster="Unk.GroupBy", file="BacktestingRealTimeHandler.cs", label="Entry Unk.GroupBy", span=""];
m3_188 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_936 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="BacktestingRealTimeHandler.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m3_146 [cluster="Unk.GetUsdConversion", file="BacktestingRealTimeHandler.cs", label="Entry Unk.GetUsdConversion", span=""];
m3_350 [cluster="Unk.Format", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Format", span=""];
m3_106 [cluster="Unk.ConvertOrder", file="BacktestingRealTimeHandler.cs", label="Entry Unk.ConvertOrder", span=""];
m3_789 [cluster="StopMarketOrder.cstr", file="BacktestingRealTimeHandler.cs", label="Entry StopMarketOrder.cstr", span=""];
m3_1102 [cluster="string.IndexOf(string)", file="BacktestingRealTimeHandler.cs", label="Entry string.IndexOf(string)", span="0-0"];
m3_150 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="417-417"];
m3_151 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="BacktestingRealTimeHandler.cs", label="CheckIbGateway()", span="419-419"];
m3_152 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="BacktestingRealTimeHandler.cs", label="return _accountData.CashBalances.Select(x => new Cash(x.Key, x.Value, GetUsdConversion(x.Key))).ToList();", span="421-421"];
m3_153 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="417-417"];
m3_314 [cluster="QuantConnect.Util.RateGate.Dispose()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Util.RateGate.Dispose()", span="196-196"];
m3_509 [cluster="Unk.reqMktData", file="BacktestingRealTimeHandler.cs", label="Entry Unk.reqMktData", span=""];
m3_48 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label=Exception, span="248-248"];
m3_67 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.UpdateOrder(): '' + err)", prediction=23, span="299-299"];
m3_66 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label=Exception, span="297-297"];
m3_77 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label=Exception, span="328-328"];
m3_60 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="return false;", span="280-280"];
m3_61 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="268-268"];
m3_65 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="IBPlaceOrder(order, false)", span="295-295"];
m3_69 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="return true;", span="302-302"];
m3_63 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="289-289"];
m3_71 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="310-310"];
m3_73 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="order.BrokerId", span="317-317"];
m3_75 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="_requestInformation[orderId] = ''CancelOrder: '' + order", span="321-321"];
m3_76 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.cancelOrder(orderId)", span="323-323"];
m3_62 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="735-735"];
m3_64 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="293-293"];
m3_68 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="return false;", span="300-300"];
m3_70 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="289-289"];
m3_72 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="314-314"];
m3_74 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="var orderId = int.Parse(id)", span="319-319"];
m3_78 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.CancelOrder(): OrderID: '' + order.Id + '' - '' + err)", span="330-330"];
m3_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="268-268"];
m3_1315 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m3_101 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m3_249 [cluster="Unk.setServerLogLevel", file="BacktestingRealTimeHandler.cs", label="Entry Unk.setServerLogLevel", span=""];
m3_1314 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m3_611 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2069-2069"];
m3_1041 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label=symbols, span="2073-2073"];
m3_1042 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="CanSubscribe(symbol)", span="2075-2075"];
m3_1061 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label=Exception, span="2121-2121"];
m3_1044 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Subscribe(): Subscribe Request: '' + symbol.Value)", span="2079-2079"];
m3_1045 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="!_subscribedSymbols.ContainsKey(symbol)", span="2081-2081"];
m3_1046 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="var subscribeSymbol = symbol", span="2084-2084"];
m3_1047 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="symbol.ID.SecurityType == SecurityType.Option && symbol.IsCanonical()", span="2087-2087"];
m3_1048 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="subscribeSymbol = symbol.Underlying", span="2089-2089"];
m3_1049 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_underlyings.Add(subscribeSymbol, symbol)", span="2090-2090"];
m3_1050 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="symbol.ID.SecurityType == SecurityType.Future && symbol.IsCanonical()", span="2094-2094"];
m3_1058 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_subscribedSymbols[symbol] = id", span="2112-2112"];
m3_1060 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Subscribe(): Subscribe Processed: {0} ({1}) # {2}'', symbol.Value, contract.ToString(), id)", span="2115-2115"];
m3_1043 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label=_sync, span="2077-2077"];
m3_1053 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="var contract = CreateContract(subscribeSymbol)", span="2100-2100"];
m3_1059 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_subscribedTickets[id] = subscribeSymbol", span="2113-2113"];
m3_1051 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="return;", span="2096-2096"];
m3_1052 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="var id = GetNextTickerId()", span="2099-2099"];
m3_1054 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_requestInformation[id] = ''Subscribe: '' + contract", span="2102-2102"];
m3_1056 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_subscriptionTimes[id] = DateTime.UtcNow", span="2107-2107"];
m3_1057 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Client.ClientSocket.reqMktData(id, contract, ''101'', false, false, new List<TagValue>())", span="2110-2110"];
m3_1055 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_messagingRateLimiter.WaitToProceed()", span="2104-2104"];
m3_1062 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.Subscribe(): '' + err.Message)", span="2123-2123"];
m3_1063 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2069-2069"];
m3_250 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m3_758 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", span="1546-1546"];
m3_759 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="Order order", span="1553-1553"];
m3_760 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="var mappedSymbol = MapSymbol(contract)", span="1554-1554"];
m3_761 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="var direction = ConvertOrderDirection(ibOrder.Action)", span="1555-1555"];
m3_763 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="var orderType = ConvertOrderType(ibOrder)", span="1557-1557"];
m3_766 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="order = new MarketOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime() // not sure how to get this data\r\n                        )", span="1561-1564"];
m3_768 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="order = new MarketOnOpenOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime())", span="1568-1570"];
m3_770 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="order = new MarketOnCloseOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        new DateTime()\r\n                        )", span="1574-1577"];
m3_772 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="order = new LimitOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.LmtPrice),\r\n                        new DateTime()\r\n                        )", span="1581-1585"];
m3_774 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="order = new StopMarketOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.AuxPrice),\r\n                        new DateTime()\r\n                        )", span="1589-1593"];
m3_776 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="order = new StopLimitOrder(mappedSymbol,\r\n                        Convert.ToInt32(ibOrder.TotalQuantity) * quantitySign,\r\n                        Convert.ToDecimal(ibOrder.AuxPrice),\r\n                        Convert.ToDecimal(ibOrder.LmtPrice),\r\n                        new DateTime()\r\n                        )", span="1597-1602"];
m3_778 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="order.BrokerId.Add(ibOrder.OrderId.ToString())", span="1609-1609"];
m3_762 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="var quantitySign = direction == OrderDirection.Sell ? -1 : 1", span="1556-1556"];
m3_764 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label=orderType, span="1558-1558"];
m3_777 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="throw new InvalidEnumArgumentException(''orderType'', (int) orderType, typeof (OrderType));", span="1606-1606"];
m3_765 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="OrderType.Market", span="1560-1560"];
m3_767 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="OrderType.MarketOnOpen", span="1567-1567"];
m3_769 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="OrderType.MarketOnClose", span="1573-1573"];
m3_771 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="OrderType.Limit", span="1580-1580"];
m3_773 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="OrderType.StopMarket", span="1588-1588"];
m3_775 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="OrderType.StopLimit", span="1596-1596"];
m3_779 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="return order;", span="1611-1611"];
m3_780 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(IBApi.Order, Contract)", span="1546-1546"];
m3_754 [cluster="System.Math.Abs(decimal)", file="BacktestingRealTimeHandler.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m3_394 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m3_120 [cluster="Unk.Where", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Where", span=""];
m3_361 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", span="845-845"];
m3_380 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="int timeout = 60", span="847-847"];
m3_383 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="_requestInformation[requestId] = ''GetContractDetails: '' + contract", span="852-852"];
m3_385 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails = (sender, args) =>\r\n            {\r\n                // ignore other requests\r\n                if (args.RequestId != requestId) return;\r\n                details = args.ContractDetails;\r\n                var uniqueKey = GetUniqueKey(contract);\r\n                _contractDetails.TryAdd(uniqueKey, details);\r\n                manualResetEvent.Set();\r\n                Log.Trace(''InteractiveBrokersBrokerage.GetContractDetails(): clientOnContractDetails event: '' + uniqueKey);\r\n            }", span="857-866"];
m3_387 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.reqContractDetails(requestId, contract)", span="871-871"];
m3_381 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="ContractDetails details = null", span="849-849"];
m3_388 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="!manualResetEvent.WaitOne(timeout * 1000)", span="873-873"];
m3_389 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetContractDetails(): failed to receive response from IB within {0} seconds'', timeout)", span="875-875"];
m3_382 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="var requestId = GetNextRequestId()", span="850-850"];
m3_384 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="854-854"];
m3_386 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="_client.ContractDetails += clientOnContractDetails", span="868-868"];
m3_390 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="_client.ContractDetails -= clientOnContractDetails", span="879-879"];
m3_391 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="return details;", span="881-881"];
m3_392 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetContractDetails(Contract)", span="845-845"];
m3_581 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m3_264 [cluster="Unk.processMsgs", file="BacktestingRealTimeHandler.cs", label="Entry Unk.processMsgs", span=""];
m3_98 [cluster="System.Collections.Generic.List<T>.List()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_346 [cluster="Unk.placeOrder", file="BacktestingRealTimeHandler.cs", label="Entry Unk.placeOrder", span=""];
m3_80 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="return true;", span="333-333"];
m3_247 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadFinancialAdvisorAccount()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadFinancialAdvisorAccount()", span="627-627"];
m3_265 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadFinancialAdvisorAccount()", file="BacktestingRealTimeHandler.cs", label="!_accountData.FinancialAdvisorConfiguration.Load(_client)", span="629-629"];
m3_266 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadFinancialAdvisorAccount()", file="BacktestingRealTimeHandler.cs", label="return false;", span="630-630"];
m3_267 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadFinancialAdvisorAccount()", file="BacktestingRealTimeHandler.cs", label="DownloadAccount(_accountData.FinancialAdvisorConfiguration.MasterAccount + ''A'')", span="639-639"];
m3_268 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadFinancialAdvisorAccount()", file="BacktestingRealTimeHandler.cs", label="return true;", span="641-641"];
m3_269 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadFinancialAdvisorAccount()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.DownloadFinancialAdvisorAccount()", span="627-627"];
m3_241 [cluster="Unk.eConnect", file="BacktestingRealTimeHandler.cs", label="Entry Unk.eConnect", span=""];
m3_1066 [cluster="QuantConnect.Symbol.IsCanonical()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m3_57 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="return true;", span="275-275"];
m3_34 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="securityType == SecurityType.Forex", span="108-108"];
m3_45 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="return order;", span="127-127"];
m3_49 [cluster="Unk.Select", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Select", span=""];
m3_30 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="var securityType = (SecurityType) jObject[''SecurityType''].Value<int>()", span="103-103"];
m3_35 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="market = Market.FXCM", span="108-108"];
m3_38 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="113-113"];
m3_39 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="order.Symbol = new Symbol(sid, ticker)", span="114-114"];
m3_40 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="jObject.SelectTokens(''Symbol.Value'').Any()", span="116-116"];
m3_41 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="119-119"];
m3_47 [cluster="Unk.>", file="BacktestingRealTimeHandler.cs", label="Entry Unk.>", span=""];
m3_42 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="order.Symbol = Symbol.Create(ticker, securityType, market)", span="120-120"];
m3_43 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="var tickerstring = jObject[''Symbol''].Value<string>()", span="124-124"];
m3_44 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="order.Symbol = Symbol.Create(tickerstring, securityType, market)", span="125-125"];
m3_46 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="87-87"];
m3_104 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="orders.Add(ConvertOrder(args.Order, args.Contract))", span="350-350"];
m3_109 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="manualResetEvent.Set()", span="355-355"];
m3_103 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="347-351"];
m3_105 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="347-351"];
m3_108 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="352-356"];
m3_110 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="352-356"];
m3_124 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="384-384"];
m3_128 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="384-384"];
m3_131 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="387-406"];
m3_147 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="406-406"];
m3_125 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="ObjectActivator.Clone(x.Value)", span="384-384"];
m3_126 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="384-384"];
m3_129 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="x.Quantity != 0", span="384-384"];
m3_130 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="384-384"];
m3_132 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="local.Type != SecurityType.Forex", span="390-390"];
m3_133 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="local.ConversionRate = 1m", span="393-393"];
m3_135 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="var currency = local.Symbol.Value.Substring(3)", span="397-397"];
m3_137 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="local.ConversionRate = 1m", span="400-400"];
m3_139 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));", span="405-405"];
m3_134 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="return null;", span="394-394"];
m3_136 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="currency == ''USD''", span="398-398"];
m3_144 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="local.ConversionRate = GetUsdConversion(currency)", span="405-405"];
m3_138 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="return null;", span="401-401"];
m3_140 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="387-406"];
m3_143 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="405-405"];
m3_145 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="405-405"];
m3_148 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="x != null", span="406-406"];
m3_149 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="406-406"];
m3_154 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="421-421"];
m3_155 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="new Cash(x.Key, x.Value, GetUsdConversion(x.Key))", span="421-421"];
m3_156 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="421-421"];
m3_186 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="details.Add(args)", span="456-456"];
m3_182 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="manualResetEvent.Set()", span="452-452"];
m3_181 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="args.RequestId == requestId", span="452-452"];
m3_185 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="args.RequestId == requestId", span="456-456"];
m3_180 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="450-453"];
m3_183 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="450-453"];
m3_184 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="454-457"];
m3_187 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="454-457"];
m3_257 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="reader.processMsgs()", span="515-515"];
m3_259 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Log.Error(''Error in message processing thread #'' + Thread.CurrentThread.ManagedThreadId + '': '' + error)", span="520-520"];
m3_253 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="506-525"];
m3_254 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''IB message processing thread started: #'' + Thread.CurrentThread.ManagedThreadId)", span="508-508"];
m3_255 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.IsConnected()", span="510-510"];
m3_256 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="_signal.waitForSignal()", span="514-514"];
m3_260 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''IB message processing thread ended: #'' + Thread.CurrentThread.ManagedThreadId)", span="524-524"];
m3_258 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label=Exception, span="517-517"];
m3_261 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="506-525"];
m3_290 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.DownloadAccount(): Finished account download for '' + args.Account)", span="653-653"];
m3_294 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="firstAccountUpdateReceived.Set()", span="663-663"];
m3_289 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="651-655"];
m3_291 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="_accountHoldingsResetEvent.Set()", span="654-654"];
m3_292 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="651-655"];
m3_293 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="661-664"];
m3_295 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="661-664"];
m3_399 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="var uniqueKey = GetUniqueKey(contract)", span="862-862"];
m3_396 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="args.RequestId != requestId", span="860-860"];
m3_401 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="manualResetEvent.Set()", span="864-864"];
m3_398 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="details = args.ContractDetails", span="861-861"];
m3_395 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="857-866"];
m3_397 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="return;", span="860-860"];
m3_400 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="_contractDetails.TryAdd(uniqueKey, details)", span="863-863"];
m3_403 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="857-866"];
m3_402 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetContractDetails(): clientOnContractDetails event: '' + uniqueKey)", span="865-865"];
m3_419 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Array.IndexOf(exchanges, e)", span="894-894"];
m3_415 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="893-893"];
m3_418 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="894-894"];
m3_416 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="details.Summary.Exchange", span="893-893"];
m3_417 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="893-893"];
m3_420 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="894-894"];
m3_442 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="manualResetEvent.Set()", span="914-914"];
m3_439 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="contractDetails.Add(args.ContractDetails)", span="911-911"];
m3_438 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="911-911"];
m3_440 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="911-911"];
m3_441 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="914-914"];
m3_443 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="914-914"];
m3_522 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Market price rate is '' + args.Price + '' for currency '' + currency)", span="991-991"];
m3_517 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="x == invertedSymbol || x == normalSymbol", span="950-950"];
m3_516 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="950-950"];
m3_523 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="manualResetEvent.Set()", span="992-992"];
m3_532 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="manualResetEvent.Set()", span="1037-1037"];
m3_520 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="args.TickerId == marketDataTicker && args.Field == IBApi.TickType.ASK", span="988-988"];
m3_521 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="rate = Convert.ToDecimal(args.Price)", span="990-990"];
m3_528 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="data.Add(args)", span="1029-1029"];
m3_527 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="args.RequestId == historicalTicker", span="1027-1027"];
m3_531 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="args.RequestId == historicalTicker", span="1035-1035"];
m3_535 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="args.Code == 162 && args.Message.Contains(''pacing violation'')", span="1043-1043"];
m3_538 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="1074-1074"];
m3_518 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="950-950"];
m3_519 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="986-994"];
m3_524 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="986-994"];
m3_526 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="1025-1031"];
m3_529 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="1025-1031"];
m3_530 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="1033-1039"];
m3_533 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="1033-1039"];
m3_534 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="1041-1048"];
m3_536 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="pacingViolation = true", span="1046-1046"];
m3_537 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="1041-1048"];
m3_539 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="x.Bar.Time", span="1074-1074"];
m3_540 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="1074-1074"];
m3_629 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="1261-1261"];
m3_630 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="TryWaitForReconnect()", span="1261-1261"];
m3_631 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="1261-1261"];
m3_1223 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="securityType == SecurityType.Future ? Array.IndexOf(futuresExchanges, exchange) : 0", span="2381-2381"];
m3_1233 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="exchangeFilter(g.Key)", span="2415-2415"];
m3_1226 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2413-2413"];
m3_1229 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2414-2414"];
m3_1232 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2415-2415"];
m3_1222 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2381-2381"];
m3_1224 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2381-2381"];
m3_1227 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="x.Summary", span="2413-2413"];
m3_1228 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2413-2413"];
m3_1230 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="x.Exchange", span="2414-2414"];
m3_1231 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2414-2414"];
m3_1234 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2415-2415"];
m3_1263 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2467-2467"];
m3_1266 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2468-2468"];
m3_1269 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2469-2476"];
m3_1275 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="bar.Time >= requestStartTime && bar.EndTime <= requestEndTime", span="2488-2488"];
m3_1274 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2488-2488"];
m3_1264 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="bid.Time", span="2467-2467"];
m3_1265 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2467-2467"];
m3_1267 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="ask.Time", span="2468-2468"];
m3_1268 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2468-2468"];
m3_1270 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="new QuoteBar(\r\n                        bid.Time,\r\n                        bid.Symbol,\r\n                        new Bar(bid.Open, bid.High, bid.Low, bid.Close),\r\n                        0,\r\n                        new Bar(ask.Open, ask.High, ask.Low, ask.Close),\r\n                        0,\r\n                        bid.Period)", span="2469-2476"];
m3_1271 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2469-2476"];
m3_1276 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2488-2488"];
m3_1318 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="var bar = ConvertTradeBar(request.Symbol, request.Resolution, args)", span="2527-2527"];
m3_1319 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="request.Resolution != Resolution.Daily", span="2528-2528"];
m3_1320 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="bar.Time = bar.Time.ConvertFromUtc(exchangeTimeZone)", span="2530-2530"];
m3_1322 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="dataDownloading.Set()", span="2534-2534"];
m3_1326 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="dataDownloaded.Set()", span="2542-2542"];
m3_1332 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="dataDownloaded.Set()", span="2555-2555"];
m3_1321 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="historyPiece.Add(bar)", span="2533-2533"];
m3_1317 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="args.RequestId == historicalTicker", span="2525-2525"];
m3_1325 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="args.RequestId == historicalTicker", span="2540-2540"];
m3_1329 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="args.Code == 162 && args.Message.Contains(''pacing violation'')", span="2548-2548"];
m3_1331 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="args.Code == 162 && args.Message.Contains(''no data'')", span="2553-2553"];
m3_1334 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2595-2595"];
m3_1316 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2523-2536"];
m3_1323 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2523-2536"];
m3_1324 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2538-2544"];
m3_1327 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2538-2544"];
m3_1328 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2546-2557"];
m3_1330 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="pacing = true", span="2551-2551"];
m3_1333 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2546-2557"];
m3_1335 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="x.Time", span="2595-2595"];
m3_1336 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2595-2595"];
m3_1364 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="x.Contains(separatorLine)", span="2638-2638"];
m3_1363 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2638-2638"];
m3_1366 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Entry lambda expression", span="2640-2640"];
m3_1365 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2638-2638"];
m3_1367 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="line.Contains(''End this session and let the other session proceed'')", span="2640-2640"];
m3_1368 [cluster="lambda expression", file="BacktestingRealTimeHandler.cs", label="Exit lambda expression", span="2640-2640"];
m3_58 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label=Exception, span="277-277"];
m3_59 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.PlaceOrder(): '' + err)", span="279-279"];
m3_966 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m3_1273 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m3_756 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", span="1963-1963"];
m3_994 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="BacktestingRealTimeHandler.cs", label="minTick == 0", span="1965-1965"];
m3_995 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="BacktestingRealTimeHandler.cs", label="return minTick;", span="1965-1965"];
m3_996 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="BacktestingRealTimeHandler.cs", label="return Math.Round(input/minTick)*minTick;", span="1966-1966"];
m3_997 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RoundPrice(decimal, decimal)", span="1963-1963"];
m3_99 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m3_787 [cluster="MarketOnCloseOrder.cstr", file="BacktestingRealTimeHandler.cs", label="Entry MarketOnCloseOrder.cstr", span=""];
m3_1022 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", span="2028-2028"];
m3_1023 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="BacktestingRealTimeHandler.cs", label="_brokerTimeDiff = e.CurrentTimeUtc.Subtract(DateTime.UtcNow)", span="2031-2031"];
m3_1024 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleBrokerTime(object, QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs)", span="2028-2028"];
m3_820 [cluster="Contract.cstr", file="BacktestingRealTimeHandler.cs", label="Entry Contract.cstr", span=""];
m3_1093 [cluster="System.Convert.ToInt32(double)", file="BacktestingRealTimeHandler.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m3_56 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="IBPlaceOrder(order, true)", span="274-274"];
m3_506 [cluster="Unk.Create", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Create", span=""];
m3_624 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="2006-2006"];
m3_1011 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="BacktestingRealTimeHandler.cs", label="bool result", span="2008-2008"];
m3_1012 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="BacktestingRealTimeHandler.cs", label="var time = DateTime.UtcNow.ConvertFromUtc(TimeZones.NewYork)", span="2009-2009"];
m3_1013 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="BacktestingRealTimeHandler.cs", label="time.DayOfWeek == DayOfWeek.Saturday", span="2012-2012"];
m3_1015 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="BacktestingRealTimeHandler.cs", label="var timeOfDay = time.TimeOfDay", span="2018-2018"];
m3_1014 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="BacktestingRealTimeHandler.cs", label="result = true", span="2014-2014"];
m3_1016 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="BacktestingRealTimeHandler.cs", label="result = timeOfDay > new TimeSpan(23, 0, 0) || timeOfDay < new TimeSpan(1, 30, 0)", span="2020-2020"];
m3_1017 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes(): '' + result)", span="2023-2023"];
m3_1018 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="BacktestingRealTimeHandler.cs", label="return result;", span="2025-2025"];
m3_1019 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsWithinScheduledServerResetTimes()", span="2006-2006"];
m3_874 [cluster="ArgumentException.cstr", file="BacktestingRealTimeHandler.cs", label="Entry ArgumentException.cstr", span=""];
m3_507 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", span="1987-1987"];
m3_1007 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="BacktestingRealTimeHandler.cs", label="return Interlocked.Increment(ref _nextTickerId);", span="1989-1989"];
m3_1008 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTickerId()", span="1987-1987"];
m3_1157 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", span="2291-2291"];
m3_1158 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="Symbol symbol", span="2293-2293"];
m3_1159 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="!_subscribedTickets.TryGetValue(e.TickerId, out symbol)", span="2295-2295"];
m3_1164 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Quantity = AdjustQuantity(securityType, e.Size)", span="2302-2302"];
m3_1168 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="e.Field", span="2307-2307"];
m3_1191 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="!_openInterests.ContainsKey(symbol) || _openInterests[symbol] != e.Size", span="2349-2349"];
m3_1193 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Value = e.Size", span="2352-2352"];
m3_1194 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="_openInterests[symbol] = e.Size", span="2353-2353"];
m3_1160 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="return;", span="2295-2295"];
m3_1161 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="var tick = new Tick()", span="2297-2297"];
m3_1162 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Symbol = symbol", span="2300-2300"];
m3_1163 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="var securityType = symbol.ID.SecurityType", span="2301-2301"];
m3_1165 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Time = GetRealTimeTickTime(symbol)", span="2303-2303"];
m3_1171 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="_lastBidPrices.TryGetValue(symbol, out tick.BidPrice)", span="2313-2313"];
m3_1172 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="_lastBidSizes[symbol] = (int)tick.Quantity", span="2314-2314"];
m3_1177 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="_lastAskPrices.TryGetValue(symbol, out tick.AskPrice)", span="2324-2324"];
m3_1178 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="_lastAskSizes[symbol] = (int)tick.Quantity", span="2325-2325"];
m3_1184 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="_lastPrices.TryGetValue(symbol, out lastPrice)", span="2336-2336"];
m3_1185 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="_lastVolumes[symbol] = (int)tick.Quantity", span="2337-2337"];
m3_1190 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="symbol.ID.SecurityType == SecurityType.Option || symbol.ID.SecurityType == SecurityType.Future", span="2347-2347"];
m3_1166 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Quantity == 0", span="2305-2305"];
m3_1170 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.TickType = TickType.Quote", span="2311-2311"];
m3_1173 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Value = tick.BidPrice", span="2316-2316"];
m3_1174 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.BidSize = tick.Quantity", span="2317-2317"];
m3_1176 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.TickType = TickType.Quote", span="2322-2322"];
m3_1179 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Value = tick.AskPrice", span="2327-2327"];
m3_1180 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.AskSize = tick.Quantity", span="2328-2328"];
m3_1182 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.TickType = TickType.Trade", span="2333-2333"];
m3_1186 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Value = lastPrice", span="2339-2339"];
m3_1192 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.TickType = TickType.OpenInterest", span="2351-2351"];
m3_1197 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.IsValid()", span="2362-2362"];
m3_1198 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="_ticks.Add(tick)", span="2362-2362"];
m3_1167 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="return;", span="2305-2305"];
m3_1169 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="IBApi.TickType.BID_SIZE", span="2309-2309"];
m3_1175 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="IBApi.TickType.ASK_SIZE", span="2320-2320"];
m3_1181 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="IBApi.TickType.LAST_SIZE", span="2332-2332"];
m3_1187 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="IBApi.TickType.OPEN_INTEREST", span="2343-2343"];
m3_1195 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="return;", span="2359-2359"];
m3_1183 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="decimal lastPrice", span="2335-2335"];
m3_1188 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="IBApi.TickType.OPTION_CALL_OPEN_INTEREST", span="2344-2344"];
m3_1189 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="IBApi.TickType.OPTION_PUT_OPEN_INTEREST", span="2345-2345"];
m3_1196 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label=_ticks, span="2361-2361"];
m3_1199 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickSize(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs)", span="2291-2291"];
m3_977 [cluster="Unk.GetCurrencySymbol", file="BacktestingRealTimeHandler.cs", label="Entry Unk.GetCurrencySymbol", span=""];
m3_782 [cluster="Unk.ConvertOrderDirection", file="BacktestingRealTimeHandler.cs", label="Entry Unk.ConvertOrderDirection", span=""];
m3_1040 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="424-424"];
m3_575 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m3_677 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", span="1421-1421"];
m3_704 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="var orderFee = 0m", span="1425-1425"];
m3_705 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="currentQuantityFilled == totalQuantityFilled", span="1426-1426"];
m3_706 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="var security = _securityProvider.GetSecurity(order.Symbol)", span="1428-1428"];
m3_707 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="orderFee = security.FeeModel.GetOrderFee(security, order)", span="1429-1429"];
m3_708 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="var fillQuantity = order.Direction == OrderDirection.Buy ? currentQuantityFilled : -currentQuantityFilled", span="1433-1433"];
m3_709 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="order.PriceCurrency = _securityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="1434-1434"];
m3_710 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="var orderEvent = new OrderEvent(order, DateTime.UtcNow, orderFee, ''Interactive Brokers Order Fill Event'')\r\n            {\r\n                Status = status,\r\n                FillPrice = price,\r\n                FillQuantity = fillQuantity\r\n            }", span="1435-1440"];
m3_711 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="remainingQuantity != 0", span="1441-1441"];
m3_712 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="orderEvent.Message += '' - '' + remainingQuantity + '' remaining''", span="1443-1443"];
m3_713 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="OnOrderEvent(orderEvent)", span="1447-1447"];
m3_714 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleFill(QuantConnect.Orders.Order, int, int, int, decimal, QuantConnect.Orders.OrderStatus)", span="1421-1421"];
m3_107 [cluster="Unk.Add", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Add", span=""];
m3_79 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="return false;", span="331-331"];
m3_176 [cluster="ExecutionFilter.cstr", file="BacktestingRealTimeHandler.cs", label="Entry ExecutionFilter.cstr", span=""];
m3_82 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51"];
m3_240 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="699-699"];
m3_296 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.eDisconnect()", span="701-701"];
m3_297 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="BacktestingRealTimeHandler.cs", label="_messageProcessingThread != null", span="703-703"];
m3_298 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="BacktestingRealTimeHandler.cs", label="_signal.issueSignal()", span="705-705"];
m3_299 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="BacktestingRealTimeHandler.cs", label="_messageProcessingThread.Join()", span="706-706"];
m3_300 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="BacktestingRealTimeHandler.cs", label="_messageProcessingThread = null", span="707-707"];
m3_301 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Disconnect()", span="699-699"];
m3_784 [cluster="MarketOrder.cstr", file="BacktestingRealTimeHandler.cs", label="Entry MarketOrder.cstr", span=""];
m3_968 [cluster="TradeBar.cstr", file="BacktestingRealTimeHandler.cs", label="Entry TradeBar.cstr", span=""];
m3_313 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.Dispose()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient.Dispose()", span="424-424"];
m3_1114 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", span="2220-2220"];
m3_1115 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="Symbol symbol", span="2222-2222"];
m3_1116 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="!_subscribedTickets.TryGetValue(e.TickerId, out symbol)", span="2224-2224"];
m3_1118 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="var price = Convert.ToDecimal(e.Price)", span="2226-2226"];
m3_1124 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="e.Price <= 0 &&\r\n                securityType != SecurityType.Future &&\r\n                securityType != SecurityType.Option", span="2236-2238"];
m3_1127 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="e.Field", span="2242-2242"];
m3_1117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="return;", span="2224-2224"];
m3_1120 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Symbol = symbol", span="2231-2231"];
m3_1121 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Time = GetRealTimeTickTime(symbol)", span="2232-2232"];
m3_1122 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="var securityType = symbol.ID.SecurityType", span="2233-2233"];
m3_1131 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="_lastBidSizes.TryGetValue(symbol, out quantity)", span="2248-2248"];
m3_1133 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="_lastBidPrices[symbol] = price", span="2250-2250"];
m3_1137 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="_lastAskSizes.TryGetValue(symbol, out quantity)", span="2257-2257"];
m3_1139 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="_lastAskPrices[symbol] = price", span="2259-2259"];
m3_1143 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="_lastPrices[symbol] = price", span="2266-2266"];
m3_1119 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="var tick = new Tick()", span="2228-2228"];
m3_1123 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Value = price", span="2234-2234"];
m3_1130 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.BidPrice = price", span="2247-2247"];
m3_1136 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.AskPrice = price", span="2256-2256"];
m3_1142 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Value = price", span="2265-2265"];
m3_1129 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.TickType = TickType.Quote", span="2246-2246"];
m3_1132 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Quantity = quantity", span="2249-2249"];
m3_1135 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.TickType = TickType.Quote", span="2255-2255"];
m3_1138 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.Quantity = quantity", span="2258-2258"];
m3_1141 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.TickType = TickType.Trade", span="2264-2264"];
m3_1146 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="tick.IsValid()", span="2274-2274"];
m3_1147 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="_ticks.Add(tick)", span="2274-2274"];
m3_1125 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="return;", span="2239-2239"];
m3_1126 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="int quantity", span="2241-2241"];
m3_1128 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="IBApi.TickType.BID", span="2244-2244"];
m3_1134 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="IBApi.TickType.ASK", span="2253-2253"];
m3_1140 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="IBApi.TickType.LAST", span="2262-2262"];
m3_1144 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="return;", span="2270-2270"];
m3_1145 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label=_ticks, span="2273-2273"];
m3_1148 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleTickPrice(object, QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs)", span="2220-2220"];
m3_262 [cluster="Unk.IsConnected", file="BacktestingRealTimeHandler.cs", label="Entry Unk.IsConnected", span=""];
m3_1103 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", span="2205-2205"];
m3_1104 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="var time = DateTime.UtcNow.Add(_brokerTimeDiff)", span="2207-2207"];
m3_1106 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="!_symbolExchangeTimeZones.TryGetValue(symbol, out exchangeTimeZone)", span="2210-2210"];
m3_1107 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType).TimeZone", span="2213-2213"];
m3_1108 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="_symbolExchangeTimeZones.Add(symbol, exchangeTimeZone)", span="2214-2214"];
m3_1105 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="DateTimeZone exchangeTimeZone", span="2209-2209"];
m3_1109 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="return time.ConvertFromUtc(exchangeTimeZone);", span="2217-2217"];
m3_1110 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetRealTimeTickTime(QuantConnect.Symbol)", span="2205-2205"];
m3_51 [cluster="Unk.SelectTokens", file="BacktestingRealTimeHandler.cs", label="Entry Unk.SelectTokens", span=""];
m3_967 [cluster="Unk.ParseExact", file="BacktestingRealTimeHandler.cs", label="Entry Unk.ParseExact", span=""];
m3_1313 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m3_702 [cluster="Unk.ToInt32", file="BacktestingRealTimeHandler.cs", label="Entry Unk.ToInt32", span=""];
m3_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", span="158-158"];
m3_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", span="158-158"];
m3_641 [cluster="decimal.Parse(string, System.IFormatProvider)", file="BacktestingRealTimeHandler.cs", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m3_1357 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m3_644 [cluster="QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnAccountChanged(QuantConnect.Securities.AccountEvent)", span="151-151"];
m3_1004 [cluster="System.Threading.Interlocked.Increment(ref int)", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0"];
m3_1361 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m3_961 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", span="1903-1903"];
m3_962 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="BacktestingRealTimeHandler.cs", label="var time = resolution != Resolution.Daily ?\r\n                Time.UnixTimeStampToDateTime(Convert.ToDouble(historyBar.Bar.Time, CultureInfo.InvariantCulture)) :\r\n                DateTime.ParseExact(historyBar.Bar.Time, ''yyyyMMdd'', CultureInfo.InvariantCulture)", span="1905-1907"];
m3_963 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="BacktestingRealTimeHandler.cs", label="return new TradeBar(time, symbol, (decimal)historyBar.Bar.Open, (decimal)historyBar.Bar.High, (decimal)historyBar.Bar.Low,\r\n                (decimal)historyBar.Bar.Close, historyBar.Bar.Volume, resolution.ToTimeSpan());", span="1909-1910"];
m3_964 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertTradeBar(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs)", span="1903-1903"];
m3_157 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m3_345 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", span="1500-1500"];
m3_736 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="var ibOrder = new IBApi.Order\r\n            {\r\n                ClientId = _clientId,\r\n                OrderId = ibOrderId,\r\n                Account = _account,\r\n                Action = ConvertOrderDirection(order.Direction),\r\n                TotalQuantity = (int)Math.Abs(order.Quantity),\r\n                OrderType = ConvertOrderType(order.Type),\r\n                AllOrNone = false,\r\n                Tif = IB.TimeInForce.GoodTillCancel,\r\n                Transmit = true,\r\n                Rule80A = _agentDescription\r\n            }", span="1502-1514"];
m3_737 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="order.Type == OrderType.MarketOnOpen", span="1516-1516"];
m3_739 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="var limitOrder = order as LimitOrder", span="1521-1521"];
m3_740 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="var stopMarketOrder = order as StopMarketOrder", span="1522-1522"];
m3_741 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="var stopLimitOrder = order as StopLimitOrder", span="1523-1523"];
m3_743 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="ibOrder.LmtPrice = Convert.ToDouble(RoundPrice(limitOrder.LimitPrice, GetMinTick(contract)))", span="1526-1526"];
m3_745 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="ibOrder.AuxPrice = Convert.ToDouble(RoundPrice(stopMarketOrder.StopPrice, GetMinTick(contract)))", span="1530-1530"];
m3_747 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="var minTick = GetMinTick(contract)", span="1534-1534"];
m3_738 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="ibOrder.Tif = IB.TimeInForce.MarketOnOpen", span="1518-1518"];
m3_748 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="ibOrder.LmtPrice = Convert.ToDouble(RoundPrice(stopLimitOrder.LimitPrice, minTick))", span="1535-1535"];
m3_750 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="return ibOrder;", span="1543-1543"];
m3_742 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="limitOrder != null", span="1524-1524"];
m3_744 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="stopMarketOrder != null", span="1528-1528"];
m3_746 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="stopLimitOrder != null", span="1532-1532"];
m3_749 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="ibOrder.AuxPrice = Convert.ToDouble(RoundPrice(stopLimitOrder.StopPrice, minTick))", span="1536-1536"];
m3_751 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrder(QuantConnect.Orders.Order, Contract, int)", span="1500-1500"];
m3_790 [cluster="StopLimitOrder.cstr", file="BacktestingRealTimeHandler.cs", label="Entry StopLimitOrder.cstr", span=""];
m3_252 [cluster="System.Exception.Exception(string, System.Exception)", file="BacktestingRealTimeHandler.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m3_1356 [cluster="System.IO.File.GetLastWriteTimeUtc(string)", file="BacktestingRealTimeHandler.cs", label="Entry System.IO.File.GetLastWriteTimeUtc(string)", span="0-0"];
m3_643 [cluster="QuantConnect.Securities.AccountEvent.AccountEvent(string, decimal)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Securities.AccountEvent.AccountEvent(string, decimal)", span="37-37"];
m3_1025 [cluster="System.DateTime.Subtract(System.DateTime)", file="BacktestingRealTimeHandler.cs", label="Entry System.DateTime.Subtract(System.DateTime)", span="0-0"];
m3_1068 [cluster="QuantConnect.Util.RateGate.WaitToProceed()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Util.RateGate.WaitToProceed()", span="181-181"];
m3_1217 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", span="144-144"];
m3_37 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="var sid = SecurityIdentifier.Parse(jObject.SelectTokens(''Symbol.ID'').Single().Value<string>())", span="112-112"];
m3_1151 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", span="2280-2280"];
m3_1152 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="BacktestingRealTimeHandler.cs", label=type, span="2282-2282"];
m3_1154 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="BacktestingRealTimeHandler.cs", label="return size * 100;", span="2285-2285"];
m3_1155 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="BacktestingRealTimeHandler.cs", label="return size;", span="2287-2287"];
m3_1153 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="BacktestingRealTimeHandler.cs", label="SecurityType.Equity", span="2284-2284"];
m3_1156 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.AdjustQuantity(QuantConnect.SecurityType, int)", span="2280-2280"];
m3_1312 [cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", span="0-0"];
m3_785 [cluster="System.DateTime.DateTime()", file="BacktestingRealTimeHandler.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m3_119 [cluster="Unk.Select", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Select", span=""];
m3_178 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", span="1982-1982"];
m3_1005 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="BacktestingRealTimeHandler.cs", label="return Interlocked.Increment(ref _nextRequestId);", span="1984-1984"];
m3_1006 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextRequestId()", span="1982-1982"];
m3_102 [cluster="System.TimeoutException.TimeoutException(string)", file="BacktestingRealTimeHandler.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m3_36 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="jObject.SelectTokens(''Symbol.ID'').Any()", span="110-110"];
m3_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", span="183-183"];
m3_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_algorithm = algorithm", span="186-186"];
m3_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_orderProvider = orderProvider", span="187-187"];
m3_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_securityProvider = securityProvider", span="188-188"];
m3_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_account = account", span="189-189"];
m3_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_host = host", span="190-190"];
m3_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_port = port", span="191-191"];
m3_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_agentDescription = agentDescription", span="193-193"];
m3_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_financialAdvisor = financialAdvisor", span="194-194"];
m3_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_clientId = IncrementClientId()", span="192-192"];
m3_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_client = new IB.InteractiveBrokersClient(_signal)", span="196-196"];
m3_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_client.UpdatePortfolio += HandlePortfolioUpdates", span="199-199"];
m3_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_client.OrderStatus += HandleOrderStatusUpdates", span="200-200"];
m3_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_client.UpdateAccountValue += HandleUpdateAccountValue", span="201-201"];
m3_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_client.ExecutionDetails += HandleExecutionDetails", span="202-202"];
m3_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string, bool)", file="BacktestingRealTimeHandler.cs", label="_client.Error += HandleError", span="203-203"];
m3_20 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="87-87"];
m3_21 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="var orderType = (OrderType) jObject[''Type''].Value<int>()", span="90-90"];
m3_24 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="order.Status = (OrderStatus) jObject[''Status''].Value<int>()", span="95-95"];
m3_25 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="order.Time = jObject[''Time''].Value<DateTime>()", span="96-96"];
m3_27 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="order.Quantity = jObject[''Quantity''].Value<int>()", span="99-99"];
m3_393 [cluster="Unk.reqContractDetails", file="BacktestingRealTimeHandler.cs", label="Entry Unk.reqContractDetails", span=""];
m3_609 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m3_1003 [cluster="System.Threading.Thread.Yield()", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m3_1020 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="BacktestingRealTimeHandler.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m3_251 [cluster="string.Contains(string)", file="BacktestingRealTimeHandler.cs", label="Entry string.Contains(string)", span="0-0"];
m3_111 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="380-380"];
m3_112 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="BacktestingRealTimeHandler.cs", label="CheckIbGateway()", span="382-382"];
m3_113 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="BacktestingRealTimeHandler.cs", label="var holdings = _accountData.AccountHoldings.Select(x => ObjectActivator.Clone(x.Value)).Where(x => x.Quantity != 0).ToList()", span="384-384"];
m3_114 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="BacktestingRealTimeHandler.cs", label="var tasks = holdings.Select(local =>\r\n            {\r\n                // we need to resolve the conversion rate for non-USD currencies\r\n                if (local.Type != SecurityType.Forex)\r\n                {\r\n                    // this assumes all non-forex are us denominated, we should add the currency to 'holding'\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n                // if quote currency is in USD don't bother making the request\r\n                var currency = local.Symbol.Value.Substring(3);\r\n                if (currency == ''USD'')\r\n                {\r\n                    local.ConversionRate = 1m;\r\n                    return null;\r\n                }\r\n\r\n                // this will allow us to do this in parallel\r\n                return Task.Factory.StartNew(() => local.ConversionRate = GetUsdConversion(currency));\r\n            }).Where(x => x != null).ToArray()", span="387-406"];
m3_116 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="BacktestingRealTimeHandler.cs", label="return holdings;", span="410-410"];
m3_115 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="BacktestingRealTimeHandler.cs", label="Task.WaitAll(tasks, 5000)", span="408-408"];
m3_117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="380-380"];
m3_1310 [cluster="System.Threading.AutoResetEvent.AutoResetEvent(bool)", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.AutoResetEvent.AutoResetEvent(bool)", span="0-0"];
m3_628 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m3_728 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_701 [cluster="Unk.Error", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Error", span=""];
m3_1311 [cluster="System.Convert.ToInt32(bool)", file="BacktestingRealTimeHandler.cs", label="Entry System.Convert.ToInt32(bool)", span="0-0"];
m3_508 [cluster="Unk.Trace", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Trace", span=""];
m3_791 [cluster="System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", file="BacktestingRealTimeHandler.cs", label="Entry System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string, int, System.Type)", span="0-0"];
m3_158 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="938-938"];
m3_444 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="currency == ''USD''", span="940-940"];
m3_446 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Getting USD conversion for '' + currency)", span="945-945"];
m3_447 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var invertedSymbol = ''USD'' + currency", span="948-948"];
m3_448 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var normalSymbol = currency + ''USD''", span="949-949"];
m3_451 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="throw new Exception(''Unable to resolve currency conversion pair for currency: '' + currency);", span="953-953"];
m3_459 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="throw new Exception(''Unable to resolve conversion for currency: '' + currency);", span="969-969"];
m3_465 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.TickPriceEventArgs> clientOnTickPrice = (sender, args) =>\r\n            {\r\n                if (args.TickerId == marketDataTicker && args.Field == IBApi.TickType.ASK)\r\n                {\r\n                    rate = Convert.ToDecimal(args.Price);\r\n                    Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Market price rate is '' + args.Price + '' for currency '' + currency);\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="986-994"];
m3_499 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Last historical price rate is '' + rate + '' for currency '' + currency)", span="1082-1082"];
m3_445 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="return 1m;", span="942-942"];
m3_449 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var currencyPair = Currencies.CurrencyPairs.FirstOrDefault(x => x == invertedSymbol || x == normalSymbol)", span="950-950"];
m3_452 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="bool inverted = invertedSymbol == currencyPair", span="957-957"];
m3_450 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="currencyPair == null", span="951-951"];
m3_453 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var symbol = Symbol.Create(currencyPair, SecurityType.Forex, Market.FXCM)", span="958-958"];
m3_466 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Requesting market data for '' + currencyPair)", span="996-996"];
m3_483 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion(): Requesting historical data for '' + currencyPair)", span="1050-1050"];
m3_497 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="throw new Exception(''Unable to get recent quote for '' + currencyPair);", span="1078-1078"];
m3_504 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="return inverted ? 1 / rate : rate;", span="1093-1093"];
m3_454 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var contract = CreateContract(symbol)", span="959-959"];
m3_455 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="ContractDetails details", span="961-961"];
m3_456 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="!_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="962-962"];
m3_457 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="details = GetContractDetails(contract)", span="964-964"];
m3_464 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_requestInformation[marketDataTicker] = ''GetUsdConversion.MarketData: '' + contract", span="984-984"];
m3_468 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.reqMktData(marketDataTicker, contract, string.Empty, true, false, new List<TagValue>())", span="999-999"];
m3_479 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_requestInformation[historicalTicker] = ''GetUsdConversion.Historical: '' + contract", span="1023-1023"];
m3_488 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.reqHistoricalData(historicalTicker, contract, DateTime.UtcNow.ToString(''yyyyMMdd HH:mm:ss UTC''),\r\n                        requestSpan, IB.BarSize.OneSecond, HistoricalDataType.Ask, 0, 2, false, new List<TagValue>())", span="1057-1058"];
m3_458 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="details == null", span="967-967"];
m3_460 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var rate = 0m", span="973-973"];
m3_461 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="974-974"];
m3_462 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="int requestTimeout = 60", span="979-979"];
m3_469 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="!manualResetEvent.WaitOne(requestTimeout * 1000)", span="1001-1001"];
m3_476 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="manualResetEvent.Reset()", span="1018-1018"];
m3_481 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.HistoricalDataEndEventArgs> clientOnHistoricalDataEnd = (sender, args) =>\r\n                    {\r\n                        if (args.RequestId == historicalTicker)\r\n                        {\r\n                            manualResetEvent.Set();\r\n                        }\r\n                    }", span="1033-1039"];
m3_489 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="!manualResetEvent.WaitOne(requestTimeout * 1000)", span="1060-1060"];
m3_463 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var marketDataTicker = GetNextTickerId()", span="982-982"];
m3_470 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): failed to receive response from IB within {0} seconds'', requestTimeout)", span="1003-1003"];
m3_490 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.GetUsdConversion(): failed to receive response from IB within {0} seconds'', requestTimeout)", span="1062-1062"];
m3_467 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_client.TickPrice += clientOnTickPrice", span="997-997"];
m3_471 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_client.TickPrice -= clientOnTickPrice", span="1006-1006"];
m3_472 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="rate <= 0", span="1010-1010"];
m3_473 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="bool pacingViolation", span="1012-1012"];
m3_474 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="int pacingDelaySeconds = 60", span="1013-1013"];
m3_475 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="pacingViolation = false", span="1017-1017"];
m3_492 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.GetUsdConversion() Pacing violation, pausing for {0} secs.'', pacingDelaySeconds)", span="1068-1068"];
m3_493 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="Thread.Sleep(pacingDelaySeconds * 1000)", span="1069-1069"];
m3_477 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var data = new List<IB.HistoricalDataEventArgs>()", span="1020-1020"];
m3_478 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var historicalTicker = GetNextTickerId()", span="1021-1021"];
m3_480 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.HistoricalDataEventArgs> clientOnHistoricalData = (sender, args) =>\r\n                    {\r\n                        if (args.RequestId == historicalTicker)\r\n                        {\r\n                            data.Add(args);\r\n                        }\r\n                    }", span="1025-1031"];
m3_494 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var ordered = data.OrderByDescending(x => x.Bar.Time)", span="1074-1074"];
m3_484 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_client.HistoricalData += clientOnHistoricalData", span="1051-1051"];
m3_500 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_client.HistoricalData -= clientOnHistoricalData", span="1086-1086"];
m3_482 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.ErrorEventArgs> clientOnError = (sender, args) =>\r\n                    {\r\n                        if (args.Code == 162 && args.Message.Contains(''pacing violation''))\r\n                        {\r\n                            // pacing violation happened\r\n                            pacingViolation = true;\r\n                        }\r\n                    }", span="1041-1048"];
m3_485 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_client.HistoricalDataEnd += clientOnHistoricalDataEnd", span="1052-1052"];
m3_501 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_client.HistoricalDataEnd -= clientOnHistoricalDataEnd", span="1087-1087"];
m3_486 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_client.Error += clientOnError", span="1053-1053"];
m3_491 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label=pacingViolation, span="1065-1065"];
m3_502 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="_client.Error -= clientOnError", span="1088-1088"];
m3_503 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label=pacingViolation, span="1090-1090"];
m3_487 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="string requestSpan = ''100 S''", span="1056-1056"];
m3_495 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="var mostRecentQuote = ordered.FirstOrDefault()", span="1075-1075"];
m3_496 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="mostRecentQuote == null", span="1076-1076"];
m3_498 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="rate = Convert.ToDecimal(mostRecentQuote.Bar.Close)", span="1081-1081"];
m3_505 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUsdConversion(string)", span="938-938"];
m3_937 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", span="1864-1864"];
m3_938 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label=resolution, span="1866-1866"];
m3_939 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Resolution.Tick", span="1868-1868"];
m3_942 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Resolution.Minute", span="1871-1871"];
m3_944 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Resolution.Hour", span="1873-1873"];
m3_946 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Resolution.Daily", span="1875-1875"];
m3_940 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Resolution.Second", span="1869-1869"];
m3_941 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="return IB.BarSize.OneSecond;", span="1870-1870"];
m3_943 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="return IB.BarSize.OneMinute;", span="1872-1872"];
m3_945 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="return IB.BarSize.OneHour;", span="1874-1874"];
m3_947 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="return IB.BarSize.OneDay;", span="1877-1877"];
m3_948 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolution(QuantConnect.Resolution)", span="1864-1864"];
m3_1039 [cluster="System.Collections.Generic.List<T>.Clear()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m3_525 [cluster="System.Convert.ToDecimal(double)", file="BacktestingRealTimeHandler.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m3_818 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1795-1795"];
m3_899 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label=type, span="1797-1797"];
m3_912 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="throw new InvalidEnumArgumentException(''type'', (int)type, typeof(SecurityType));", span="1818-1818"];
m3_900 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="SecurityType.Equity", span="1799-1799"];
m3_902 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="SecurityType.Option", span="1802-1802"];
m3_904 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="SecurityType.Commodity", span="1805-1805"];
m3_906 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="SecurityType.Forex", span="1808-1808"];
m3_908 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="SecurityType.Future", span="1811-1811"];
m3_910 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="SecurityType.Base", span="1814-1814"];
m3_901 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="return IB.SecurityType.Stock;", span="1800-1800"];
m3_903 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="return IB.SecurityType.Option;", span="1803-1803"];
m3_905 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="return IB.SecurityType.Commodity;", span="1806-1806"];
m3_907 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="return IB.SecurityType.Cash;", span="1809-1809"];
m3_909 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="return IB.SecurityType.Future;", span="1812-1812"];
m3_911 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentException(''InteractiveBrokers does not support SecurityType.Base'');", span="1815-1815"];
m3_913 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(QuantConnect.SecurityType)", span="1795-1795"];
m3_1112 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m3_421 [cluster="Unk.IndexOf", file="BacktestingRealTimeHandler.cs", label="Entry Unk.IndexOf", span=""];
m3_81 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m3_700 [cluster="Unk.GetOrderByBrokerageId", file="BacktestingRealTimeHandler.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m3_781 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", span="1939-1939"];
m3_980 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="var securityType = ConvertSecurityType(contract.SecType)", span="1941-1941"];
m3_981 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="var ibSymbol = securityType == SecurityType.Forex ? contract.Symbol + contract.Currency : contract.Symbol", span="1942-1942"];
m3_984 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="var contractDate = DateTime.ParseExact(contract.LastTradeDateOrContractMonth, DateFormat.EightCharacter, CultureInfo.InvariantCulture)", span="1947-1947"];
m3_987 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="var expiryDate = DateTime.ParseExact(contract.LastTradeDateOrContractMonth, DateFormat.EightCharacter, CultureInfo.InvariantCulture)", span="1953-1953"];
m3_988 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="var right = contract.Right == IB.RightType.Call ? OptionRight.Call : OptionRight.Put", span="1954-1954"];
m3_989 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="var strike = Convert.ToDecimal(contract.Strike)", span="1955-1955"];
m3_982 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="var market = securityType == SecurityType.Forex ? Market.FXCM : Market.USA", span="1943-1943"];
m3_983 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="securityType == SecurityType.Future", span="1945-1945"];
m3_985 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market, contractDate);", span="1949-1949"];
m3_986 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="securityType == SecurityType.Option", span="1951-1951"];
m3_990 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market, expiryDate, strike, right);", span="1957-1957"];
m3_991 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="return _symbolMapper.GetLeanSymbol(ibSymbol, securityType, market);", span="1960-1960"];
m3_992 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.MapSymbol(Contract)", span="1939-1939"];
m3_510 [cluster="System.Threading.EventWaitHandle.Reset()", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m3_303 [cluster="Unk.issueSignal", file="BacktestingRealTimeHandler.cs", label="Entry Unk.issueSignal", span=""];
m3_824 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", span="1681-1681"];
m3_825 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="BacktestingRealTimeHandler.cs", label=direction, span="1683-1683"];
m3_832 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentException(direction, ''direction'');", span="1689-1689"];
m3_826 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="BacktestingRealTimeHandler.cs", label="IB.ActionSide.Buy", span="1685-1685"];
m3_828 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="BacktestingRealTimeHandler.cs", label="IB.ActionSide.Sell", span="1686-1686"];
m3_830 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="BacktestingRealTimeHandler.cs", label="IB.ActionSide.Undefined", span="1687-1687"];
m3_827 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="BacktestingRealTimeHandler.cs", label="return OrderDirection.Buy;", span="1685-1685"];
m3_829 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="BacktestingRealTimeHandler.cs", label="return OrderDirection.Sell;", span="1686-1686"];
m3_831 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="BacktestingRealTimeHandler.cs", label="return OrderDirection.Hold;", span="1687-1687"];
m3_833 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(string)", span="1681-1681"];
m3_26 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="order.Tag = jObject[''Tag''].Value<string>()", span="97-97"];
m3_1009 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="BacktestingRealTimeHandler.cs", label="return Interlocked.Increment(ref _nextClientId);", span="1997-1997"];
m3_1010 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IncrementClientId()", span="1995-1995"];
m3_1375 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", span="186-186"];
m3_245 [cluster="System.Exception.Exception(string)", file="BacktestingRealTimeHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m3_263 [cluster="Unk.waitForSignal", file="BacktestingRealTimeHandler.cs", label="Entry Unk.waitForSignal", span=""];
m3_730 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1490-1490"];
m3_731 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="_accountHoldingsResetEvent.Reset()", span="1492-1492"];
m3_732 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="var holding = CreateHolding(e)", span="1493-1493"];
m3_733 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="_accountData.AccountHoldings[holding.Symbol.Value] = holding", span="1494-1494"];
m3_734 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandlePortfolioUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1490-1490"];
m3_371 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", span="827-827"];
m3_372 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="BacktestingRealTimeHandler.cs", label="ContractDetails details", span="829-829"];
m3_373 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="BacktestingRealTimeHandler.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="830-830"];
m3_375 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="BacktestingRealTimeHandler.cs", label="details = GetContractDetails(contract)", span="835-835"];
m3_374 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="BacktestingRealTimeHandler.cs", label="return (decimal) details.MinTick;", span="832-832"];
m3_376 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="BacktestingRealTimeHandler.cs", label="details == null", span="836-836"];
m3_378 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="BacktestingRealTimeHandler.cs", label="return (decimal) details.MinTick;", span="842-842"];
m3_377 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="BacktestingRealTimeHandler.cs", label="return 0;", span="839-839"];
m3_379 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetMinTick(Contract)", span="827-827"];
m3_582 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="_disconnected1100Fired = false", span="1181-1181"];
m3_583 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="OnMessage(BrokerageMessageEvent.Reconnected(string.Empty))", span="1184-1184"];
m3_584 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Disconnecting...'')", span="1186-1186"];
m3_585 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="Disconnect()", span="1187-1187"];
m3_586 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Stopping IB Gateway...'')", span="1189-1189"];
m3_587 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="InteractiveBrokersGatewayRunner.Stop()", span="1190-1190"];
m3_588 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Restarting IB Gateway...'')", span="1192-1192"];
m3_589 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="InteractiveBrokersGatewayRunner.Restart()", span="1193-1193"];
m3_590 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Reconnecting...'')", span="1195-1195"];
m3_591 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="Connect()", span="1196-1196"];
m3_592 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.ResetGatewayConnection(): Restoring data subscriptions...'')", span="1198-1198"];
m3_593 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="RestoreDataSubscriptions()", span="1199-1199"];
m3_594 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="OnMessage(BrokerageMessageEvent.Reconnected(string.Empty))", span="1203-1203"];
m3_595 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ResetGatewayConnection()", span="1179-1179"];
m3_342 [cluster="System.ArgumentException.ArgumentException(string)", file="BacktestingRealTimeHandler.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m3_1092 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m3_541 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", span="1099-1099"];
m3_542 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="var requestId = e.Id", span="1103-1103"];
m3_543 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="var errorCode = e.Code", span="1104-1104"];
m3_544 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="var errorMsg = e.Message", span="1105-1105"];
m3_547 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="_requestInformation.TryGetValue(requestId, out requestMessage)", span="1112-1112"];
m3_549 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Trace($''InteractiveBrokersBrokerage.HandleError(): RequestId: {requestId} ErrorCode: {errorCode} - {errorMsg}'')", span="1117-1117"];
m3_567 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Trace($''InteractiveBrokersBrokerage.HandleError.InvalidateOrder(): IBOrderId: {requestId} ErrorCode: {message}'')", span="1160-1160"];
m3_568 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="var order = _orderProvider.GetOrderByBrokerageId(requestId)", span="1163-1163"];
m3_551 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="ErrorCodes.Contains(errorCode)", span="1121-1121"];
m3_553 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="WarningCodes.Contains(errorCode)", span="1125-1125"];
m3_555 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="errorCode == 1100 && !_disconnected1100Fired", span="1131-1131"];
m3_558 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="errorCode == 1102 || errorCode == 1101", span="1138-1138"];
m3_559 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, errorCode, errorMsg))", span="1141-1141"];
m3_563 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="errorCode == 506", span="1152-1152"];
m3_565 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="InvalidatingCodes.Contains(errorCode)", span="1157-1157"];
m3_566 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="var message = $''{errorCode} - {errorMsg}''", span="1159-1159"];
m3_572 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="OnMessage(new BrokerageMessageEvent(brokerageMessageType, errorCode, errorMsg))", span="1173-1173"];
m3_545 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="errorMsg = errorMsg.Replace(''\r\n'', ''. '').Replace(''\r'', ''. '').Replace(''\n'', ''. '')", span="1108-1108"];
m3_546 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="string requestMessage", span="1111-1111"];
m3_548 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="errorMsg += ''. Origin: '' + requestMessage", span="1114-1114"];
m3_550 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="var brokerageMessageType = BrokerageMessageType.Information", span="1120-1120"];
m3_552 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="brokerageMessageType = BrokerageMessageType.Error", span="1123-1123"];
m3_554 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="brokerageMessageType = BrokerageMessageType.Warning", span="1127-1127"];
m3_556 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="_disconnected1100Fired = true", span="1133-1133"];
m3_557 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="TryWaitForReconnect()", span="1136-1136"];
m3_560 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleError(): Reconnect message received. Restarting...'')", span="1146-1146"];
m3_561 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="_resetEventRestartGateway.Set()", span="1148-1148"];
m3_562 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="return;", span="1150-1150"];
m3_564 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleError(): Server Version: '' + _client.ClientSocket.ServerVersion)", span="1154-1154"];
m3_570 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="var orderEvent = new OrderEvent(order, DateTime.UtcNow, orderFee)\r\n                {\r\n                    Status = OrderStatus.Invalid,\r\n                    Message = message\r\n                }", span="1165-1169"];
m3_569 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="int orderFee = 0", span="1164-1164"];
m3_571 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="OnOrderEvent(orderEvent)", span="1170-1170"];
m3_573 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleError(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs)", span="1099-1099"];
m3_1353 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m3_1360 [cluster="System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)", span="0-0"];
m3_735 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1916-1916"];
m3_970 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="var currencySymbol = Currencies.GetCurrencySymbol(e.Contract.Currency)", span="1918-1918"];
m3_971 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="var symbol = MapSymbol(e.Contract)", span="1919-1919"];
m3_972 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="var multiplier = Convert.ToDecimal(e.Contract.Multiplier)", span="1921-1921"];
m3_975 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="return new Holding\r\n            {\r\n                Symbol = symbol,\r\n                Type = ConvertSecurityType(e.Contract.SecType),\r\n                Quantity = e.Position,\r\n                AveragePrice = Convert.ToDecimal(e.AverageCost) / multiplier,\r\n                MarketPrice = Convert.ToDecimal(e.MarketPrice),\r\n                ConversionRate = 1m, // this will be overwritten when GetAccountHoldings is called to ensure fresh values\r\n                CurrencySymbol = currencySymbol\r\n            };", span="1924-1933"];
m3_973 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="multiplier == 0m", span="1922-1922"];
m3_974 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="multiplier = 1m", span="1922-1922"];
m3_976 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CreateHolding(QuantConnect.Brokerages.InteractiveBrokers.Client.UpdatePortfolioEventArgs)", span="1916-1916"];
m3_674 [cluster="System.Convert.ToInt32(int)", file="BacktestingRealTimeHandler.cs", label="Entry System.Convert.ToInt32(int)", span="0-0"];
m3_1026 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", span="2041-2041"];
m3_1027 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label="Tick[] ticks", span="2043-2043"];
m3_1032 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label="yield return tick;", span="2053-2053"];
m3_1036 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label="yield return underlyingTick;", span="2059-2059"];
m3_1028 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label=_ticks, span="2045-2045"];
m3_1029 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label="ticks = _ticks.ToArray()", span="2047-2047"];
m3_1030 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label="_ticks.Clear()", span="2048-2048"];
m3_1031 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label=ticks, span="2051-2051"];
m3_1033 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label="_underlyings.ContainsKey(tick.Symbol)", span="2055-2055"];
m3_1034 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label="var underlyingTick = tick.Clone()", span="2057-2057"];
m3_1035 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label="underlyingTick.Symbol = _underlyings[tick.Symbol]", span="2058-2058"];
m3_1037 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextTicks()", span="2041-2041"];
m3_786 [cluster="MarketOnOpenOrder.cstr", file="BacktestingRealTimeHandler.cs", label="Entry MarketOnOpenOrder.cstr", span=""];
m3_412 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m3_414 [cluster="Unk.FirstOrDefault", file="BacktestingRealTimeHandler.cs", label="Entry Unk.FirstOrDefault", span=""];
m3_239 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
m3_1064 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", span="2188-2188"];
m3_1095 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="var market = symbol.ID.Market", span="2190-2190"];
m3_1096 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="var securityType = symbol.ID.SecurityType", span="2191-2191"];
m3_1097 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="symbol.Value.ToLower().IndexOf(''universe'') != -1", span="2193-2193"];
m3_1099 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="return\r\n                (securityType == SecurityType.Equity && market == Market.USA) ||\r\n                (securityType == SecurityType.Forex && market == Market.FXCM) ||\r\n                (securityType == SecurityType.Option && market == Market.USA) ||\r\n                (securityType == SecurityType.Future);", span="2195-2199"];
m3_1098 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="return false;", span="2193-2193"];
m3_1100 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CanSubscribe(QuantConnect.Symbol)", span="2188-2188"];
m3_578 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m3_1113 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m3_822 [cluster="string.Substring(int)", file="BacktestingRealTimeHandler.cs", label="Entry string.Substring(int)", span="0-0"];
m3_949 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", span="1886-1886"];
m3_950 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label=resolution, span="1888-1888"];
m3_951 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Resolution.Tick", span="1890-1890"];
m3_954 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Resolution.Minute", span="1893-1893"];
m3_956 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Resolution.Hour", span="1895-1895"];
m3_958 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Resolution.Daily", span="1897-1897"];
m3_952 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Resolution.Second", span="1891-1891"];
m3_953 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="return ''60 S'';", span="1892-1892"];
m3_955 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="return ''1 D'';", span="1894-1894"];
m3_957 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="return ''1 M'';", span="1896-1896"];
m3_959 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="return ''1 Y'';", span="1899-1899"];
m3_960 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertResolutionToDuration(QuantConnect.Resolution)", span="1886-1886"];
m3_142 [cluster="Unk.StartNew", file="BacktestingRealTimeHandler.cs", label="Entry Unk.StartNew", span=""];
m3_511 [cluster="Unk.reqHistoricalData", file="BacktestingRealTimeHandler.cs", label="Entry Unk.reqHistoricalData", span=""];
m3_1354 [cluster="System.IO.Path.Combine(string, string)", file="BacktestingRealTimeHandler.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m3_610 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m3_514 [cluster="Exception.cstr", file="BacktestingRealTimeHandler.cs", label="Entry Exception.cstr", span=""];
m3_316 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="Connect()", span="738-738"];
m3_319 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="exchange == null &&\r\n                order.Symbol.SecurityType == SecurityType.Option &&\r\n                (order.Type == OrderType.MarketOnOpen || order.Type == OrderType.MarketOnClose)", span="746-748"];
m3_321 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="var contract = CreateContract(order.Symbol, exchange)", span="753-753"];
m3_323 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label=needsNewId, span="756-756"];
m3_325 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="order.BrokerId.Add(id.ToString())", span="760-760"];
m3_327 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="order.BrokerId.Any()", span="763-763"];
m3_328 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="ibOrderId = int.Parse(order.BrokerId[0])", span="766-766"];
m3_331 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="order.Type == OrderType.OptionExercise", span="775-775"];
m3_332 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.exerciseOptions(ibOrderId, contract, 1, decimal.ToInt32(order.Quantity), _account, 0)", span="777-777"];
m3_333 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="var ibOrder = ConvertOrder(order, contract, ibOrderId)", span="781-781"];
m3_317 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="!IsConnected", span="740-740"];
m3_318 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="throw new InvalidOperationException(''InteractiveBrokersBrokerage.IBPlaceOrder(): Unable to place order while not connected.'');", span="742-742"];
m3_320 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="exchange = Market.CBOE.ToUpper()", span="750-750"];
m3_322 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="int ibOrderId", span="755-755"];
m3_330 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="_requestInformation[ibOrderId] = ''IBPlaceOrder: '' + contract", span="773-773"];
m3_334 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.placeOrder(ibOrder.OrderId, contract, ibOrder)", span="782-782"];
m3_324 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="var id = GetNextBrokerageOrderId()", span="759-759"];
m3_326 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="ibOrderId = id", span="761-761"];
m3_329 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentException(''Expected order with populated BrokerId for updating orders.'');", span="770-770"];
m3_335 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IBPlaceOrder(QuantConnect.Orders.Order, bool, string)", span="735-735"];
m3_679 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", span="1373-1373"];
m3_680 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleExecutionDetails(): '' + executionDetails)", span="1377-1377"];
m3_686 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="var order = _orderProvider.GetOrderByBrokerageId(executionDetails.Execution.OrderId)", span="1392-1392"];
m3_688 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Unable to locate order with BrokerageID '' + executionDetails.Execution.OrderId)", span="1395-1395"];
m3_690 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="var currentQuantityFilled = Convert.ToInt32(executionDetails.Execution.Shares)", span="1399-1399"];
m3_691 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="var totalQuantityFilled = Convert.ToInt32(executionDetails.Execution.CumQty)", span="1400-1400"];
m3_693 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="var price = Convert.ToDecimal(executionDetails.Execution.Price)", span="1402-1402"];
m3_695 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="!IsFillAlreadyHandled(order, executionDetails.Execution.OrderId, remainingQuantity)", span="1407-1407"];
m3_681 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="!IsConnected", span="1379-1379"];
m3_682 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="_client != null", span="1381-1381"];
m3_683 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Not connected; update dropped, _client.Connected: {0}, _disconnected1100Fired: {1}'', _client.Connected, _disconnected1100Fired)", span="1383-1383"];
m3_684 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): Not connected; _client is null'')", span="1387-1387"];
m3_685 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="return;", span="1389-1389"];
m3_687 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="order == null", span="1393-1393"];
m3_692 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="var remainingQuantity = Convert.ToInt32(order.AbsoluteQuantity - totalQuantityFilled)", span="1401-1401"];
m3_696 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="HandleFill(order, currentQuantityFilled, totalQuantityFilled, remainingQuantity, price, status)", span="1409-1409"];
m3_689 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="return;", span="1396-1396"];
m3_694 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="var status = remainingQuantity > 0 ? OrderStatus.PartiallyFilled : OrderStatus.Filled", span="1405-1405"];
m3_697 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label=Exception, span="1412-1412"];
m3_698 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleExecutionDetails(): '' + err)", span="1414-1414"];
m3_699 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleExecutionDetails(object, QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs)", span="1373-1373"];
m3_343 [cluster="decimal.ToInt32(decimal)", file="BacktestingRealTimeHandler.cs", label="Entry decimal.ToInt32(decimal)", span="0-0"];
m3_703 [cluster="Unk.IsFillAlreadyHandled", file="BacktestingRealTimeHandler.cs", label="Entry Unk.IsFillAlreadyHandled", span=""];
m3_86 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="344-344"];
m3_123 [cluster="Unk.WaitAll", file="BacktestingRealTimeHandler.cs", label="Entry Unk.WaitAll", span=""];
m3_238 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", span="48-48"];
m3_632 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", span="1270-1270"];
m3_633 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="BacktestingRealTimeHandler.cs", label="_accountData.AccountProperties[e.Currency + '':'' + e.Key] = e.Value", span="1274-1274"];
m3_634 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="BacktestingRealTimeHandler.cs", label="e.Key == AccountValueKeys.CashBalance && e.Currency != ''BASE''", span="1277-1277"];
m3_635 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="BacktestingRealTimeHandler.cs", label="var cashBalance = decimal.Parse(e.Value, CultureInfo.InvariantCulture)", span="1279-1279"];
m3_636 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="BacktestingRealTimeHandler.cs", label="_accountData.CashBalances.AddOrUpdate(e.Currency, cashBalance)", span="1280-1280"];
m3_637 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="BacktestingRealTimeHandler.cs", label="OnAccountChanged(new AccountEvent(e.Currency, cashBalance))", span="1282-1282"];
m3_638 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="BacktestingRealTimeHandler.cs", label=Exception, span="1285-1285"];
m3_639 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleUpdateAccountValue(): '' + err)", span="1287-1287"];
m3_640 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleUpdateAccountValue(object, QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs)", span="1270-1270"];
m3_969 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m3_1149 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m3_1355 [cluster="System.IO.Directory.GetFiles(string, string)", file="BacktestingRealTimeHandler.cs", label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0"];
m3_339 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", span="1973-1973"];
m3_999 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="BacktestingRealTimeHandler.cs", label="_nextValidId == 0", span="1977-1977"];
m3_1000 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="BacktestingRealTimeHandler.cs", label="Thread.Yield()", span="1977-1977"];
m3_1001 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="BacktestingRealTimeHandler.cs", label="return Interlocked.Increment(ref _nextValidId);", span="1979-1979"];
m3_1002 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetNextBrokerageOrderId()", span="1973-1973"];
m3_85 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", span="29-29"];
m3_87 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.OpenOrderEventArgs> clientOnOpenOrder = (sender, args) =>\r\n            {\r\n                // convert IB order objects returned from RequestOpenOrders\r\n                orders.Add(ConvertOrder(args.Order, args.Contract));\r\n            }", span="347-351"];
m3_96 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="return orders;", span="373-373"];
m3_88 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="EventHandler clientOnOpenOrderEnd = (sender, args) =>\r\n            {\r\n                // this signals the end of our RequestOpenOrders call\r\n                manualResetEvent.Set();\r\n            }", span="352-356"];
m3_92 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="!manualResetEvent.WaitOne(15000)", span="364-364"];
m3_89 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="_client.OpenOrder += clientOnOpenOrder", span="358-358"];
m3_94 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="_client.OpenOrder -= clientOnOpenOrder", span="370-370"];
m3_90 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="_client.OpenOrderEnd += clientOnOpenOrderEnd", span="359-359"];
m3_95 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="_client.OpenOrderEnd -= clientOnOpenOrderEnd", span="371-371"];
m3_91 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.reqAllOpenOrders()", span="361-361"];
m3_93 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetOpenOrders(): Operation took longer than 15 seconds.'');", span="366-366"];
m3_97 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="340-340"];
m3_243 [cluster="Unk.Start", file="BacktestingRealTimeHandler.cs", label="Entry Unk.Start", span=""];
m3_580 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
m3_1359 [cluster="string.String(char, int)", file="BacktestingRealTimeHandler.cs", label="Entry string.String(char, int)", span="0-0"];
m3_55 [cluster="Symbol.cstr", file="BacktestingRealTimeHandler.cs", label="Entry Symbol.cstr", span=""];
m3_53 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m3_823 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_715 [cluster="QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="27-27"];
m3_914 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", span="1825-1825"];
m3_915 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label=type, span="1827-1827"];
m3_916 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.Stock", span="1829-1829"];
m3_918 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.Option", span="1832-1832"];
m3_920 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.Commodity", span="1835-1835"];
m3_922 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.Cash", span="1838-1838"];
m3_924 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.Future", span="1841-1841"];
m3_926 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.Index", span="1845-1845"];
m3_934 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="throw new ArgumentOutOfRangeException(''type'');", span="1855-1855"];
m3_917 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="return SecurityType.Equity;", span="1830-1830"];
m3_919 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="return SecurityType.Option;", span="1833-1833"];
m3_921 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="return SecurityType.Commodity;", span="1836-1836"];
m3_923 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="return SecurityType.Forex;", span="1839-1839"];
m3_925 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="return SecurityType.Future;", span="1842-1842"];
m3_927 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.FutureOption", span="1846-1846"];
m3_928 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.Bag", span="1847-1847"];
m3_929 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.Bond", span="1848-1848"];
m3_930 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.Warrant", span="1849-1849"];
m3_931 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.Bill", span="1850-1850"];
m3_932 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="IB.SecurityType.Undefined", span="1851-1851"];
m3_933 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="return SecurityType.Base;", span="1852-1852"];
m3_935 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertSecurityType(string)", span="1825-1825"];
m3_1218 [cluster="QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31"];
m3_118 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", span="2646-2646"];
m3_1369 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): start'')", span="2648-2648"];
m3_1370 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="BacktestingRealTimeHandler.cs", label="!InteractiveBrokersGatewayRunner.IsRunning()", span="2649-2649"];
m3_1371 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): IB Gateway not running. Restarting...'')", span="2651-2651"];
m3_1373 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.CheckIbGateway(): end'')", span="2654-2654"];
m3_1372 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="BacktestingRealTimeHandler.cs", label="_resetEventRestartGateway.Set()", span="2652-2652"];
m3_1374 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CheckIbGateway()", span="2646-2646"];
m3_270 [cluster="QuantConnect.Brokerages.InteractiveBrokers.FinancialAdvisor.FinancialAdvisorConfiguration.Load(QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.FinancialAdvisor.FinancialAdvisorConfiguration.Load(QuantConnect.Brokerages.InteractiveBrokers.Client.InteractiveBrokersClient)", span="67-67"];
m3_159 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="428-428"];
m3_160 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="var filter = new ExecutionFilter\r\n            {\r\n                AcctCode = _account,\r\n                ClientId = _clientId,\r\n                Exchange = exchange,\r\n                SecType = type ?? IB.SecurityType.Undefined,\r\n                Symbol = symbol,\r\n                Time = (timeSince ?? DateTime.MinValue).ToString(''yyyyMMdd HH:mm:ss''),\r\n                Side = side ?? IB.ActionSide.Undefined\r\n            }", span="430-439"];
m3_164 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="_requestInformation[requestId] = ''GetExecutions: '' + symbol", span="447-447"];
m3_161 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="var details = new List<IB.ExecutionDetailsEventArgs>()", span="441-441"];
m3_169 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.reqExecutions(requestId, filter)", span="463-463"];
m3_162 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="443-443"];
m3_166 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.ExecutionDetailsEventArgs> clientOnExecDetails = (sender, args) =>\r\n            {\r\n                if (args.RequestId == requestId) details.Add(args);\r\n            }", span="454-457"];
m3_174 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="return details;", span="474-474"];
m3_163 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="var requestId = GetNextRequestId()", span="445-445"];
m3_165 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.RequestEndEventArgs> clientOnExecutionDataEnd = (sender, args) =>\r\n            {\r\n                if (args.RequestId == requestId) manualResetEvent.Set();\r\n            }", span="450-453"];
m3_170 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="!manualResetEvent.WaitOne(5000)", span="465-465"];
m3_168 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="_client.ExecutionDetailsEnd += clientOnExecutionDataEnd", span="460-460"];
m3_173 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="_client.ExecutionDetailsEnd -= clientOnExecutionDataEnd", span="472-472"];
m3_167 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="_client.ExecutionDetails += clientOnExecDetails", span="459-459"];
m3_172 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="_client.ExecutionDetails -= clientOnExecDetails", span="471-471"];
m3_171 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.GetExecutions(): Operation took longer than 5 seconds.'');", span="467-467"];
m3_175 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, string, string, System.DateTime?, string)", span="428-428"];
m3_627 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m3_645 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", span="1294-1294"];
m3_646 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + update)", span="1298-1298"];
m3_652 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="var order = _orderProvider.GetOrderByBrokerageId(update.OrderId)", span="1313-1313"];
m3_654 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Unable to locate order with BrokerageID '' + update.OrderId)", span="1316-1316"];
m3_656 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="var status = ConvertOrderStatus(update.Status)", span="1320-1320"];
m3_658 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="var currentQuantityFilled = Convert.ToInt32(update.Filled)", span="1324-1324"];
m3_659 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="var totalQuantityFilled = Convert.ToInt32(order.AbsoluteQuantity - update.Remaining)", span="1325-1325"];
m3_660 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="var remainingQuantity = update.Remaining", span="1326-1326"];
m3_661 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="var price = Convert.ToDecimal(update.LastFillPrice)", span="1327-1327"];
m3_662 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="!IsFillAlreadyHandled(order, update.OrderId, remainingQuantity)", span="1329-1329"];
m3_647 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="!IsConnected", span="1300-1300"];
m3_648 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="_client != null", span="1302-1302"];
m3_649 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Not connected; update dropped, _client.Connected: {0}, _disconnected1100Fired: {1}'', _client.Connected, _disconnected1100Fired)", span="1304-1304"];
m3_650 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): Not connected; _client is null'')", span="1308-1308"];
m3_651 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="return;", span="1310-1310"];
m3_653 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="order == null", span="1314-1314"];
m3_663 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="HandleFill(order, currentQuantityFilled, totalQuantityFilled, remainingQuantity, price, status)", span="1331-1331"];
m3_664 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="status != order.Status", span="1337-1337"];
m3_665 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="order.Status.IsClosed()", span="1339-1339"];
m3_666 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ignoring update in closed state - order.Status: '' + order.Status + '', status: '' + status)", span="1342-1342"];
m3_667 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="order.Status == OrderStatus.PartiallyFilled && (status == OrderStatus.New || status == OrderStatus.Submitted)", span="1344-1344"];
m3_669 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''Interactive Brokers Order Event'')\r\n                            {\r\n                                Status = status\r\n                            })", span="1352-1355"];
m3_655 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="return;", span="1317-1317"];
m3_657 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="status == OrderStatus.Filled || status == OrderStatus.PartiallyFilled", span="1322-1322"];
m3_668 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): ignoring status '' + status + '' after partial fills'')", span="1347-1347"];
m3_670 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label=Exception, span="1360-1360"];
m3_671 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.HandleOrderStatusUpdates(): '' + err)", span="1362-1362"];
m3_672 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.HandleOrderStatusUpdates(object, QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs)", span="1294-1294"];
m3_821 [cluster="string.Substring(int, int)", file="BacktestingRealTimeHandler.cs", label="Entry string.Substring(int, int)", span="0-0"];
m3_788 [cluster="LimitOrder.cstr", file="BacktestingRealTimeHandler.cs", label="Entry LimitOrder.cstr", span=""];
m3_626 [cluster="System.TimeSpan.FromMinutes(double)", file="BacktestingRealTimeHandler.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m3_753 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="1696-1696"];
m3_835 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="BacktestingRealTimeHandler.cs", label=direction, span="1698-1698"];
m3_842 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="BacktestingRealTimeHandler.cs", label="throw new InvalidEnumArgumentException(''direction'', (int) direction, typeof (OrderDirection));", span="1704-1704"];
m3_836 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="BacktestingRealTimeHandler.cs", label="OrderDirection.Buy", span="1700-1700"];
m3_838 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="BacktestingRealTimeHandler.cs", label="OrderDirection.Sell", span="1701-1701"];
m3_840 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="BacktestingRealTimeHandler.cs", label="OrderDirection.Hold", span="1702-1702"];
m3_837 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="BacktestingRealTimeHandler.cs", label="return IB.ActionSide.Buy;", span="1700-1700"];
m3_839 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="BacktestingRealTimeHandler.cs", label="return IB.ActionSide.Sell;", span="1701-1701"];
m3_841 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="BacktestingRealTimeHandler.cs", label="return IB.ActionSide.Undefined;", span="1702-1702"];
m3_843 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ConvertOrderDirection(QuantConnect.Orders.OrderDirection)", span="1696-1696"];
m3_189 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="480-480"];
m3_190 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label=IsConnected, span="482-482"];
m3_191 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="return;", span="482-482"];
m3_192 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="_accountData.Clear()", span="485-485"];
m3_193 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="var attempt = 1", span="487-487"];
m3_194 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="int maxAttempts = 5", span="488-488"];
m3_197 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Attempting to connect ({0}/{1}) ...'', attempt, maxAttempts)", span="494-494"];
m3_210 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="attempt++ < maxAttempts", span="545-545"];
m3_223 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="attempt++ < maxAttempts", span="575-575"];
m3_231 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="attempt++ < maxAttempts", span="600-600"];
m3_195 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="var existingSessionDetected = false", span="489-489"];
m3_196 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label=true, span="490-490"];
m3_228 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label=existingSessionDetected, span="593-593"];
m3_198 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Disconnect()", span="497-497"];
m3_199 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.eConnect(_host, _port, _clientId)", span="500-500"];
m3_200 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="var reader = new EReader(_client.ClientSocket, _signal)", span="503-503"];
m3_201 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="reader.Start()", span="504-504"];
m3_202 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="_messageProcessingThread = new Thread(() =>\r\n                    {\r\n                        Log.Trace(''IB message processing thread started: #'' + Thread.CurrentThread.ManagedThreadId);\r\n\r\n                        while (_client.ClientSocket.IsConnected())\r\n                        {\r\n                            try\r\n                            {\r\n                                _signal.waitForSignal();\r\n                                reader.processMsgs();\r\n                            }\r\n                            catch (Exception error)\r\n                            {\r\n                                // error in message processing thread, log error and disconnect\r\n                                Log.Error(''Error in message processing thread #'' + Thread.CurrentThread.ManagedThreadId + '': '' + error);\r\n                            }\r\n                        }\r\n\r\n                        Log.Trace(''IB message processing thread ended: #'' + Thread.CurrentThread.ManagedThreadId);\r\n                    }) { IsBackground = true }", span="506-525"];
m3_203 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="_messageProcessingThread.Start()", span="527-527"];
m3_204 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="!_waitForNextValidId.WaitOne(15000)", span="530-530"];
m3_205 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 15 seconds.'')", span="532-532"];
m3_213 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''IB next valid id received.'')", span="554-554"];
m3_206 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Disconnect()", span="535-535"];
m3_207 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="ExistingSessionDetected()", span="538-538"];
m3_208 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="existingSessionDetected = true", span="540-540"];
m3_209 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="throw new Exception(''InteractiveBrokersBrokerage.Connect(): An existing session was detected and will not be automatically disconnected. Please close the existing session manually.'');", span="541-541"];
m3_211 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Thread.Sleep(1000)", span="547-547"];
m3_212 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): Operation took longer than 15 seconds.'');", span="551-551"];
m3_214 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="!_client.Connected", span="556-556"];
m3_215 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="throw new Exception(''InteractiveBrokersBrokerage.Connect(): Connection returned but was not in connected state.'');", span="556-556"];
m3_216 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label=_financialAdvisor, span="558-558"];
m3_217 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="!DownloadFinancialAdvisorAccount()", span="560-560"];
m3_220 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="!DownloadAccount(_account)", span="569-569"];
m3_218 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Disconnect()", span="562-562"];
m3_226 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.setServerLogLevel(5)", span="586-586"];
m3_219 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): DownloadFinancialAdvisorConfiguration failed.'');", span="564-564"];
m3_221 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Connect(): DownloadAccount failed. Operation took longer than 15 seconds.'')", span="571-571"];
m3_222 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Disconnect()", span="573-573"];
m3_224 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Thread.Sleep(1000)", span="577-577"];
m3_225 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="throw new TimeoutException(''InteractiveBrokersBrokerage.Connect(): DownloadAccount failed.'');", span="581-581"];
m3_227 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label=Exception, span="590-590"];
m3_229 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Log.Error(err)", span="595-595"];
m3_230 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="throw;", span="596-596"];
m3_232 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Thread.Sleep(15000)", span="602-602"];
m3_233 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Log.Error(err)", span="607-607"];
m3_234 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="err.Message.Contains(''Connection refused'')", span="610-610"];
m3_235 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="throw new Exception(err.Message + ''. Be sure to logout of Trader Workstation. '' +\r\n                            ''IB only allows one active log in at a time. '' +\r\n                            ''This can also be caused by requiring two-factor authentication. '' +\r\n                            ''Be sure to disable this in IB Account Management > Security > SLS Opt out.'', err);", span="612-615"];
m3_236 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="throw;", span="618-618"];
m3_237 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="480-480"];
m3_515 [cluster="Unk.ToDecimal", file="BacktestingRealTimeHandler.cs", label="Entry Unk.ToDecimal", span=""];
m3_127 [cluster="QuantConnect.Util.ObjectActivator.Clone<T>(T)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Util.ObjectActivator.Clone<T>(T)", span="129-129"];
m3_1111 [cluster="System.DateTime.Add(System.TimeSpan)", file="BacktestingRealTimeHandler.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m3_1236 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="2430-2430"];
m3_1237 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="!CanSubscribe(request.Symbol) ||\r\n                (request.Symbol.ID.SecurityType == SecurityType.Option && request.Symbol.IsCanonical()) ||\r\n                (request.Symbol.ID.SecurityType == SecurityType.Future && request.Symbol.IsCanonical())", span="2433-2435"];
m3_1238 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="yield break;", span="2437-2437"];
m3_1258 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="yield return bar;", span="2490-2490"];
m3_1239 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="var contract = CreateContract(request.Symbol)", span="2441-2441"];
m3_1240 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="var resolution = ConvertResolution(request.Resolution)", span="2442-2442"];
m3_1241 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="var duration = ConvertResolutionToDuration(request.Resolution)", span="2443-2443"];
m3_1242 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="var startTime = request.Resolution == Resolution.Daily ? request.StartTimeUtc.Date : request.StartTimeUtc", span="2444-2444"];
m3_1243 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="var endTime = request.Resolution == Resolution.Daily ? request.EndTimeUtc.Date : request.EndTimeUtc", span="2445-2445"];
m3_1244 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory(): Submitting request: {0}({1}): {2} {3} UTC -> {4} UTC'',\r\n                request.Symbol.Value, contract, request.Resolution, startTime, endTime)", span="2447-2448"];
m3_1246 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="!_symbolExchangeTimeZones.TryGetValue(request.Symbol, out exchangeTimeZone)", span="2451-2451"];
m3_1247 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(request.Symbol.ID.Market, request.Symbol, request.Symbol.SecurityType).TimeZone", span="2454-2454"];
m3_1248 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="_symbolExchangeTimeZones.Add(request.Symbol, exchangeTimeZone)", span="2455-2455"];
m3_1250 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="request.Symbol.SecurityType == SecurityType.Forex || request.Symbol.SecurityType == SecurityType.Cfd", span="2459-2459"];
m3_1251 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="var historyBid = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Bid)", span="2463-2463"];
m3_1252 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="var historyAsk = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Ask)", span="2464-2464"];
m3_1254 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="history = GetHistory(request, contract, startTime, endTime, exchangeTimeZone, duration, resolution, HistoricalDataType.Trades)", span="2481-2481"];
m3_1255 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="var requestStartTime = request.StartTimeUtc.ConvertFromUtc(exchangeTimeZone)", span="2485-2485"];
m3_1256 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="var requestEndTime = request.EndTimeUtc.ConvertFromUtc(exchangeTimeZone)", span="2486-2486"];
m3_1245 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="DateTimeZone exchangeTimeZone", span="2450-2450"];
m3_1249 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="IEnumerable<BaseData> history", span="2458-2458"];
m3_1253 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="history = historyBid.Join(historyAsk,\r\n                    bid => bid.Time,\r\n                    ask => ask.Time,\r\n                    (bid, ask) => new QuoteBar(\r\n                        bid.Time,\r\n                        bid.Symbol,\r\n                        new Bar(bid.Open, bid.High, bid.Low, bid.Close),\r\n                        0,\r\n                        new Bar(ask.Open, ask.High, ask.Low, ask.Close),\r\n                        0,\r\n                        bid.Period))", span="2466-2476"];
m3_1257 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="history.Where(bar => bar.Time >= requestStartTime && bar.EndTime <= requestEndTime)", span="2488-2488"];
m3_1259 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage::GetHistory() Download completed'')", span="2493-2493"];
m3_1260 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="2430-2430"];
m3_1094 [cluster="Unk.cancelMktData", file="BacktestingRealTimeHandler.cs", label="Entry Unk.cancelMktData", span=""];
m3_757 [cluster="System.Convert.ToDouble(decimal)", file="BacktestingRealTimeHandler.cs", label="Entry System.Convert.ToDouble(decimal)", span="0-0"];
m3_29 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="BacktestingRealTimeHandler.cs", label="order.Price = jObject[''Price''].Value<decimal>()", span="102-102"];
m3_513 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m3_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="137-137"];
m3_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="137-137"];
m3_360 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_979 [cluster="Unk.ConvertSecurityType", file="BacktestingRealTimeHandler.cs", label="Entry Unk.ConvertSecurityType", span=""];
m3_337 [cluster="string.ToUpper()", file="BacktestingRealTimeHandler.cs", label="Entry string.ToUpper()", span="0-0"];
m3_965 [cluster="Unk.ToDouble", file="BacktestingRealTimeHandler.cs", label="Entry Unk.ToDouble", span=""];
m3_599 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", span="1209-1209"];
m3_600 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="BacktestingRealTimeHandler.cs", label="List<Symbol> subscribedSymbols", span="1211-1211"];
m3_601 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="BacktestingRealTimeHandler.cs", label=_sync, span="1212-1212"];
m3_602 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="BacktestingRealTimeHandler.cs", label="subscribedSymbols = _subscribedSymbols.Keys.ToList()", span="1214-1214"];
m3_603 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="BacktestingRealTimeHandler.cs", label="_subscribedSymbols.Clear()", span="1216-1216"];
m3_606 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="BacktestingRealTimeHandler.cs", label="Subscribe(null, subscribedSymbols)", span="1221-1221"];
m3_604 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="BacktestingRealTimeHandler.cs", label="_subscribedTickets.Clear()", span="1217-1217"];
m3_605 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="BacktestingRealTimeHandler.cs", label="_underlyings.Clear()", span="1218-1218"];
m3_607 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.RestoreDataSubscriptions()", span="1209-1209"];
m3_336 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BacktestingRealTimeHandler.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m3_410 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", span="898-898"];
m3_422 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="int timeout = 60", span="900-900"];
m3_424 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="_requestInformation[requestId] = ''FindContracts: '' + contract", span="904-904"];
m3_431 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="_client.ClientSocket.reqContractDetails(requestId, contract)", span="920-920"];
m3_423 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="var requestId = GetNextRequestId()", span="902-902"];
m3_432 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="!manualResetEvent.WaitOne(timeout * 1000)", span="922-922"];
m3_433 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.FindContracts(): failed to receive response from IB within {0} seconds'', timeout)", span="924-924"];
m3_425 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="906-906"];
m3_426 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="var contractDetails = new List<ContractDetails>()", span="907-907"];
m3_428 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.RequestEndEventArgs> clientOnContractDetailsEnd =\r\n                (sender, args) => manualResetEvent.Set()", span="913-914"];
m3_427 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="EventHandler<IB.ContractDetailsEventArgs> clientOnContractDetails =\r\n                (sender, args) => contractDetails.Add(args.ContractDetails)", span="910-911"];
m3_436 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="return contractDetails;", span="931-931"];
m3_429 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="_client.ContractDetails += clientOnContractDetails", span="916-916"];
m3_435 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="_client.ContractDetails -= clientOnContractDetails", span="929-929"];
m3_430 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="_client.ContractDetailsEnd += clientOnContractDetailsEnd", span="917-917"];
m3_434 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="_client.ContractDetailsEnd -= clientOnContractDetailsEnd", span="928-928"];
m3_437 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.FindContracts(Contract)", span="898-898"];
m3_579 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(int)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(int)", span="90-90"];
m3_574 [cluster="string.Replace(string, string)", file="BacktestingRealTimeHandler.cs", label="Entry string.Replace(string, string)", span="0-0"];
m3_246 [cluster="System.Threading.Thread.Sleep(int)", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m3_315 [cluster="System.Threading.CancellationTokenSource.Cancel(bool)", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.CancellationTokenSource.Cancel(bool)", span="0-0"];
m3_716 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m3_179 [cluster="Unk.reqExecutions", file="BacktestingRealTimeHandler.cs", label="Entry Unk.reqExecutions", span=""];
m3_993 [cluster="Unk.GetLeanSymbol", file="BacktestingRealTimeHandler.cs", label="Entry Unk.GetLeanSymbol", span=""];
m3_351 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", span="791-791"];
m3_352 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="ContractDetails details", span="793-793"];
m3_353 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="_contractDetails.TryGetValue(GetUniqueKey(contract), out details)", span="794-794"];
m3_355 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="details = GetContractDetails(contract)", span="799-799"];
m3_354 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="return details.Summary.PrimaryExch;", span="796-796"];
m3_356 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="details == null", span="800-800"];
m3_358 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="return details.Summary.PrimaryExch;", span="806-806"];
m3_357 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="return null;", span="803-803"];
m3_359 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetPrimaryExchange(Contract)", span="791-791"];
m3_302 [cluster="Unk.eDisconnect", file="BacktestingRealTimeHandler.cs", label="Entry Unk.eDisconnect", span=""];
m3_405 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", span="884-884"];
m3_406 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="var contractDetails = FindContracts(contract)", span="887-887"];
m3_407 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="var exchanges = _futuresExchanges.Values.Reverse().ToArray()", span="889-889"];
m3_408 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="return contractDetails\r\n                    .Select(details => details.Summary.Exchange)\r\n                    .OrderByDescending(e => Array.IndexOf(exchanges, e))\r\n                    .FirstOrDefault();", span="892-895"];
m3_409 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetFuturesContractExchange(Contract)", span="884-884"];
m3_577 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m3_675 [cluster="System.Convert.ToInt32(decimal)", file="BacktestingRealTimeHandler.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m3_1021 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="BacktestingRealTimeHandler.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m3_344 [cluster="Unk.exerciseOptions", file="BacktestingRealTimeHandler.cs", label="Entry Unk.exerciseOptions", span=""];
m3_1200 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="2373-2373"];
m3_1201 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="Connect()", span="2376-2376"];
m3_1202 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="var exchangeSpecifier = securityType == SecurityType.Future ? securityExchange ?? '''' : securityExchange ?? ''Smart''", span="2379-2379"];
m3_1204 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="Func<string, int> exchangeFilter = exchange => securityType == SecurityType.Future ? Array.IndexOf(futuresExchanges, exchange) : 0", span="2381-2381"];
m3_1205 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="var contract = new Contract\r\n            {\r\n                Symbol = _symbolMapper.GetBrokerageRootSymbol(lookupName),\r\n                Currency = securityCurrency ?? ''USD'',\r\n                Exchange = exchangeSpecifier,\r\n                SecType = ConvertSecurityType(securityType)\r\n            }", span="2384-2390"];
m3_1207 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="securityType == SecurityType.Option", span="2394-2394"];
m3_1203 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="var futuresExchanges = _futuresExchanges.Values.Reverse().ToArray()", span="2380-2380"];
m3_1213 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="var filteredResults =\r\n                    results\r\n                    .Select(x => x.Summary)\r\n                    .GroupBy(x => x.Exchange)\r\n                    .OrderByDescending(g => exchangeFilter(g.Key))\r\n                    .FirstOrDefault()", span="2411-2416"];
m3_1206 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Requesting symbol list for '' + contract.Symbol + '' ...'')", span="2392-2392"];
m3_1208 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="var underlyingSymbol = Symbol.Create(contract.Symbol, SecurityType.Equity, Market.USA)", span="2399-2399"];
m3_1210 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Returning {0} contracts for {1}'', symbols.Count, contract.Symbol)", span="2402-2402"];
m3_1212 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="var results = FindContracts(contract)", span="2408-2408"];
m3_1209 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="var symbols = _algorithm.OptionChainProvider.GetOptionContractList(underlyingSymbol, DateTime.Today).ToList()", span="2400-2400"];
m3_1211 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="return symbols;", span="2404-2404"];
m3_1214 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.LookupSymbols(): Returning {0} symbol(s)'', filteredResults != null ? filteredResults.Count() : 0)", span="2418-2418"];
m3_1215 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="return filteredResults != null ? filteredResults.Select(MapSymbol) : Enumerable.Empty<Symbol>();", span="2421-2421"];
m3_1216 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.LookupSymbols(string, QuantConnect.SecurityType, string, string)", span="2373-2373"];
m3_1069 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2132-2132"];
m3_1070 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label=symbols, span="2136-2136"];
m3_1071 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="CanSubscribe(symbol)", span="2138-2138"];
m3_1089 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label=Exception, span="2177-2177"];
m3_1073 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Log.Trace(''InteractiveBrokersBrokerage.Unsubscribe(): Unsubscribe Request: '' + symbol.Value)", span="2142-2142"];
m3_1074 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="symbol.ID.SecurityType == SecurityType.Option && symbol.ID.StrikePrice == 0.0m", span="2144-2144"];
m3_1075 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_underlyings.Remove(symbol.Underlying)", span="2146-2146"];
m3_1077 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_subscribedSymbols.TryRemove(symbol, out id)", span="2150-2150"];
m3_1072 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label=_sync, span="2140-2140"];
m3_1076 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="int id", span="2149-2149"];
m3_1078 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_messagingRateLimiter.WaitToProceed()", span="2152-2152"];
m3_1080 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_subscriptionTimes.TryGetValue(id, out subscriptionTime)", span="2156-2156"];
m3_1085 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_subscriptionTimes.Remove(id)", span="2165-2165"];
m3_1086 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Client.ClientSocket.cancelMktData(id)", span="2168-2168"];
m3_1088 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="_subscribedTickets.TryRemove(id, out s)", span="2171-2171"];
m3_1079 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="DateTime subscriptionTime", span="2155-2155"];
m3_1081 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="var timeSinceSubscription = DateTime.UtcNow - subscriptionTime", span="2158-2158"];
m3_1082 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="timeSinceSubscription < _minimumTimespanBeforeUnsubscribe", span="2159-2159"];
m3_1083 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="var delay = Convert.ToInt32((_minimumTimespanBeforeUnsubscribe - timeSinceSubscription).TotalMilliseconds)", span="2161-2161"];
m3_1084 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Thread.Sleep(delay)", span="2162-2162"];
m3_1087 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Symbol s", span="2170-2170"];
m3_1090 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Log.Error(''InteractiveBrokersBrokerage.Unsubscribe(): '' + err.Message)", span="2179-2179"];
m3_1091 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="2132-2132"];
m3_678 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m3_834 [cluster="System.ArgumentException.ArgumentException(string, string)", file="BacktestingRealTimeHandler.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m3_676 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", span="1457-1457"];
m3_717 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="order.Status == OrderStatus.Filled", span="1460-1460"];
m3_720 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="_orderFills.TryGetValue(orderId, out previousRemainingQuantity)", span="1464-1464"];
m3_721 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="newRemainingQuantity >= previousRemainingQuantity", span="1466-1466"];
m3_723 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="newRemainingQuantity > 0", span="1473-1473"];
m3_724 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="_orderFills[orderId] = newRemainingQuantity", span="1476-1476"];
m3_725 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="_orderFills.Remove(orderId)", span="1481-1481"];
m3_718 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="return true;", span="1461-1461"];
m3_719 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="int previousRemainingQuantity", span="1463-1463"];
m3_722 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="return true;", span="1469-1469"];
m3_726 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="return false;", span="1484-1484"];
m3_727 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.IsFillAlreadyHandled(QuantConnect.Orders.Order, int, int)", span="1457-1457"];
m3_1038 [cluster="System.Collections.Generic.List<T>.ToArray()", file="BacktestingRealTimeHandler.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m3_413 [cluster="Unk.OrderByDescending", file="BacktestingRealTimeHandler.cs", label="Entry Unk.OrderByDescending", span=""];
m3_347 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", span="786-786"];
m3_348 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="BacktestingRealTimeHandler.cs", label="return string.Format(''{0} {1} {2} {3}'', contract, contract.LastTradeDateOrContractMonth, contract.Strike, contract.Right);", span="788-788"];
m3_349 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetUniqueKey(Contract)", span="786-786"];
m3_1225 [cluster="System.Array.IndexOf<T>(T[], T)", file="BacktestingRealTimeHandler.cs", label="Entry System.Array.IndexOf<T>(T[], T)", span="0-0"];
m3_1235 [cluster="Unk.exchangeFilter", file="BacktestingRealTimeHandler.cs", label="Entry Unk.exchangeFilter", span=""];
m3_304 [cluster="System.Threading.Thread.Join()", file="BacktestingRealTimeHandler.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m3_244 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", span="2613-2613"];
m3_1337 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="var ibControllerLogPath = Path.Combine(Config.Get(''ib-controller-dir''), ''Logs'')", span="2616-2616"];
m3_1338 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="var files = Directory.GetFiles(ibControllerLogPath, ''ibc-*.txt'')", span="2617-2617"];
m3_1339 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="var lastLogUpdateTime = DateTime.MinValue", span="2618-2618"];
m3_1341 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label=files, span="2620-2620"];
m3_1340 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="var ibControllerLogFileName = string.Empty", span="2619-2619"];
m3_1343 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="time > lastLogUpdateTime", span="2623-2623"];
m3_1346 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="ibControllerLogFileName.IsNullOrEmpty()", span="2630-2630"];
m3_1348 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="var lines = File.ReadAllLines(ibControllerLogFileName).ToList()", span="2636-2636"];
m3_1342 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="var time = File.GetLastWriteTimeUtc(file)", span="2622-2622"];
m3_1345 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="ibControllerLogFileName = file", span="2626-2626"];
m3_1344 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="lastLogUpdateTime = time", span="2625-2625"];
m3_1347 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="return false;", span="2632-2632"];
m3_1349 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="var separatorLine = new string('-', 60)", span="2637-2637"];
m3_1350 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="var index = lines.FindLastIndex(x => x.Contains(separatorLine))", span="2638-2638"];
m3_1351 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="return index >= 0 && lines.Skip(index + 1).Any(line => line.Contains(''End this session and let the other session proceed''));", span="2640-2640"];
m3_1352 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", file="BacktestingRealTimeHandler.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.ExistingSessionDetected()", span="2613-2613"];
m3_1376 [file="BacktestingRealTimeHandler.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", span=""];
m3_1377 [file="BacktestingRealTimeHandler.cs", label=orders, span=""];
m3_1378 [file="BacktestingRealTimeHandler.cs", label=manualResetEvent, span=""];
m3_1379 [file="BacktestingRealTimeHandler.cs", label="QuantConnect.Symbol", span=""];
m3_1380 [file="BacktestingRealTimeHandler.cs", label=currency, span=""];
m3_1381 [file="BacktestingRealTimeHandler.cs", label=requestId, span=""];
m3_1382 [file="BacktestingRealTimeHandler.cs", label=manualResetEvent, span=""];
m3_1383 [file="BacktestingRealTimeHandler.cs", label=details, span=""];
m3_1384 [file="BacktestingRealTimeHandler.cs", label=reader, span=""];
m3_1385 [file="BacktestingRealTimeHandler.cs", label=firstAccountUpdateReceived, span=""];
m3_1386 [file="BacktestingRealTimeHandler.cs", label=requestId, span=""];
m3_1387 [file="BacktestingRealTimeHandler.cs", label=Contract, span=""];
m3_1388 [file="BacktestingRealTimeHandler.cs", label=manualResetEvent, span=""];
m3_1389 [file="BacktestingRealTimeHandler.cs", label=exchanges, span=""];
m3_1390 [file="BacktestingRealTimeHandler.cs", label=contractDetails, span=""];
m3_1391 [file="BacktestingRealTimeHandler.cs", label=manualResetEvent, span=""];
m3_1392 [file="BacktestingRealTimeHandler.cs", label=invertedSymbol, span=""];
m3_1393 [file="BacktestingRealTimeHandler.cs", label=normalSymbol, span=""];
m3_1394 [file="BacktestingRealTimeHandler.cs", label=marketDataTicker, span=""];
m3_1395 [file="BacktestingRealTimeHandler.cs", label=string, span=""];
m3_1396 [file="BacktestingRealTimeHandler.cs", label=manualResetEvent, span=""];
m3_1397 [file="BacktestingRealTimeHandler.cs", label=historicalTicker, span=""];
m3_1398 [file="BacktestingRealTimeHandler.cs", label=data, span=""];
m3_1399 [file="BacktestingRealTimeHandler.cs", label="QuantConnect.SecurityType", span=""];
m3_1400 [file="BacktestingRealTimeHandler.cs", label=futuresExchanges, span=""];
m3_1401 [file="BacktestingRealTimeHandler.cs", label=exchangeFilter, span=""];
m3_1402 [file="BacktestingRealTimeHandler.cs", label=requestStartTime, span=""];
m3_1403 [file="BacktestingRealTimeHandler.cs", label=requestEndTime, span=""];
m3_1404 [file="BacktestingRealTimeHandler.cs", label=historicalTicker, span=""];
m3_1405 [file="BacktestingRealTimeHandler.cs", label="QuantConnect.Data.HistoryRequest", span=""];
m3_1406 [file="BacktestingRealTimeHandler.cs", label=DateTimeZone, span=""];
m3_1407 [file="BacktestingRealTimeHandler.cs", label=historyPiece, span=""];
m3_1408 [file="BacktestingRealTimeHandler.cs", label=dataDownloading, span=""];
m3_1409 [file="BacktestingRealTimeHandler.cs", label=dataDownloaded, span=""];
m3_1410 [file="BacktestingRealTimeHandler.cs", label=separatorLine, span=""];
m4_11 [cluster="QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.MovingAverageType.AsIndicator(string, int)", span="56-56"];
m4_0 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(int, decimal, QuantConnect.Indicators.MovingAverageType)", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.BollingerBands.BollingerBands(int, decimal, QuantConnect.Indicators.MovingAverageType)", span="41-41"];
m4_1 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(int, decimal, QuantConnect.Indicators.MovingAverageType)", file="BollingerBands.cs", label="Exit QuantConnect.Indicators.BollingerBands.BollingerBands(int, decimal, QuantConnect.Indicators.MovingAverageType)", span="41-41"];
m4_17 [cluster="QuantConnect.Indicators.BollingerBands.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.BollingerBands.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="78-78"];
m4_18 [cluster="QuantConnect.Indicators.BollingerBands.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="BollingerBands.cs", label="StandardDeviation.Update(input)", span="80-80"];
m4_19 [cluster="QuantConnect.Indicators.BollingerBands.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="BollingerBands.cs", label="MiddleBand.Update(input)", span="81-81"];
m4_20 [cluster="QuantConnect.Indicators.BollingerBands.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="BollingerBands.cs", label="UpperBand.Update(input)", span="82-82"];
m4_21 [cluster="QuantConnect.Indicators.BollingerBands.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="BollingerBands.cs", label="LowerBand.Update(input)", span="83-83"];
m4_22 [cluster="QuantConnect.Indicators.BollingerBands.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="BollingerBands.cs", label="return input;", span="84-84"];
m4_23 [cluster="QuantConnect.Indicators.BollingerBands.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", file="BollingerBands.cs", label="Exit QuantConnect.Indicators.BollingerBands.ComputeNextValue(QuantConnect.Indicators.IndicatorDataPoint)", span="78-78"];
m4_14 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="158-158"];
m4_13 [cluster="decimal.ToString()", file="BollingerBands.cs", label="Entry decimal.ToString()", span="0-0"];
m4_24 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="82-82"];
m4_15 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="115-115"];
m4_2 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="53-53"];
m4_3 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="BollingerBands.cs", label="MovingAverageType = movingAverageType", span="56-56"];
m4_4 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="BollingerBands.cs", label="StandardDeviation = new StandardDeviation(name + ''_StandardDeviation'', period)", span="57-57"];
m4_5 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="BollingerBands.cs", label="MiddleBand = movingAverageType.AsIndicator(name + ''_MiddleBand'', period)", span="58-58"];
m4_9 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="BollingerBands.cs", label="Exit QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="53-53"];
m4_16 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="86-86"];
m4_25 [cluster="QuantConnect.Indicators.BollingerBands.Reset()", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.BollingerBands.Reset()", span="90-90"];
m4_26 [cluster="QuantConnect.Indicators.BollingerBands.Reset()", file="BollingerBands.cs", label="StandardDeviation.Reset()", span="92-92"];
m4_27 [cluster="QuantConnect.Indicators.BollingerBands.Reset()", file="BollingerBands.cs", label="MiddleBand.Reset()", span="93-93"];
m4_28 [cluster="QuantConnect.Indicators.BollingerBands.Reset()", file="BollingerBands.cs", label="UpperBand.Reset()", span="94-94"];
m4_29 [cluster="QuantConnect.Indicators.BollingerBands.Reset()", file="BollingerBands.cs", label="LowerBand.Reset()", span="95-95"];
m4_30 [cluster="QuantConnect.Indicators.BollingerBands.Reset()", file="BollingerBands.cs", label="base.Reset()", span="96-96"];
m4_31 [cluster="QuantConnect.Indicators.BollingerBands.Reset()", file="BollingerBands.cs", label="Exit QuantConnect.Indicators.BollingerBands.Reset()", span="90-90"];
m4_32 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="106-106"];
m4_10 [cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="47-47"];
m4_12 [cluster="QuantConnect.Indicators.ConstantIndicator<T>.ConstantIndicator(string, decimal)", file="BollingerBands.cs", label="Entry QuantConnect.Indicators.ConstantIndicator<T>.ConstantIndicator(string, decimal)", span="42-42"];
m4_33 [file="BollingerBands.cs", label="QuantConnect.Indicators.BollingerBands", span=""];
m5_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime, System.DateTime)", file="Config.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime, System.DateTime)", span="72-72"];
m5_50 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="125-125"];
m5_51 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="Config.cs", label="return GetValue(key, defaultValue);", span="127-127"];
m5_52 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.GetBool(string, bool)", span="125-125"];
m5_77 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", span="187-187"];
m5_80 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", color=green, community=0, file="Config.cs", label="var environment = settings.SelectToken(''environments.'' + environmentSetting.Value<string>())", prediction=24, span="192-192"];
m5_78 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="Config.cs", label="var environmentSetting = settings.SelectToken(''environment'')", span="189-189"];
m5_79 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="Config.cs", label="environmentSetting != null", span="190-190"];
m5_81 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", color=green, community=0, file="Config.cs", label="var setting = environment.SelectToken(key)", prediction=25, span="193-193"];
m5_84 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", color=green, community=0, file="Config.cs", label="return GetToken(environment, key, current);", prediction=24, span="199-199"];
m5_82 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="Config.cs", label="setting != null", span="194-194"];
m5_83 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", color=green, community=0, file="Config.cs", label="current = setting", prediction=24, span="196-196"];
m5_85 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", color=green, community=0, file="Config.cs", label="current == null", prediction=24, span="201-201"];
m5_86 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="Config.cs", label="return settings.SelectToken(key);", span="203-203"];
m5_87 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="Config.cs", label="return current;", span="205-205"];
m5_88 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.GetToken(JToken, string, JToken)", span="187-187"];
m5_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Config.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", span="100-100"];
m5_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Config.cs", label="return Direction;", span="105-105"];
m5_21 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="Exit QuantConnect.Configuration.Config.GetEnvironment()", span="60-60"];
m5_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", file="Config.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", span="48-48"];
m5_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Config.cs", label="Direction = direction", span="60-60"];
m5_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", file="Config.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", span="48-48"];
m5_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Config.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", span="58-58"];
m5_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Config.cs", label="Magnitude = magnitude", span="61-61"];
m5_20 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="return string.Join(''.'', environments);", span="78-78"];
m5_54 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="136-136"];
m5_55 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="Config.cs", label="return GetValue(key, defaultValue);", span="138-138"];
m5_56 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.GetInt(string, int)", span="136-136"];
m5_76 [cluster="Unk.SelectToken", file="Config.cs", label="Entry Unk.SelectToken", span=""];
m5_18 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="currentEnvironment = moreEnvironments[currentEnv]", span="75-75"];
m5_73 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.GetToken(JToken, string)", span="182-182"];
m5_74 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string)", file="Config.cs", label="return GetToken(settings, key, settings.SelectToken(key));", span="184-184"];
m5_75 [cluster="QuantConnect.Configuration.Config.GetToken(JToken, string)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.GetToken(JToken, string)", span="182-182"];
m5_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Config.cs", label=type, span="102-102"];
m5_28 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="return GetEnvironment();", span="90-90"];
m5_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Config.cs", label="AlphaScoreType.Direction", span="104-104"];
m5_26 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="87-87"];
m5_27 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="key == ''environment''", span="90-90"];
m5_29 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="var token = GetToken(Settings.Value, key)", span="92-92"];
m5_53 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="160-160"];
m5_67 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="var value = token.Value<string>()", span="174-174"];
m5_62 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="var token = GetToken(Settings.Value, key)", span="166-166"];
m5_66 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="var type = typeof(T)", span="173-173"];
m5_68 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="type.IsEnum", span="175-175"];
m5_69 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="return (T) Enum.Parse(type, value);", span="177-177"];
m5_70 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="return (T) Convert.ChangeType(value, type);", span="179-179"];
m5_60 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="key == ''environment'' && typeof (T) == typeof (string)", span="164-164"];
m5_63 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="token == null", span="167-167"];
m5_64 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="Log.Trace(string.Format(''Config.GetValue(): {0} - Using default value: {1}'', key, defaultValue))", span="169-169"];
m5_65 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="return defaultValue;", span="170-170"];
m5_61 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="return (T) (object) GetEnvironment();", span="164-164"];
m5_71 [cluster="QuantConnect.Configuration.Config.GetValue<T>(string, T)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.GetValue<T>(string, T)", span="160-160"];
m5_72 [cluster="Unk.ChangeType", file="Config.cs", label="Entry Unk.ChangeType", span=""];
m5_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Config.cs", label="UpdatedTimeUtc = updatedTimeUtc", span="62-62"];
m5_33 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="return token.Value<string>();", span="98-98"];
m5_30 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="token == null", span="93-93"];
m5_31 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="Log.Trace(string.Format(''Config.Get(): Configuration key not found. Key: {0} - Using default value: {1}'', key, defaultValue))", span="95-95"];
m5_32 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="return defaultValue;", span="96-96"];
m5_8 [cluster="Unk.Parse", file="Config.cs", label="Entry Unk.Parse", span=""];
m5_9 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="Entry QuantConnect.Configuration.Config.GetEnvironment()", span="60-60"];
m5_11 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="JToken currentEnvironment = Settings.Value", span="63-63"];
m5_13 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="currentEnvironment != null && env != null", span="65-65"];
m5_15 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="environments.Add(currentEnv)", span="68-68"];
m5_16 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="var moreEnvironments = currentEnvironment[''environments'']", span="69-69"];
m5_10 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="var environments = new List<string>()", span="62-62"];
m5_12 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="var env = currentEnvironment[''environment'']", span="64-64"];
m5_14 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="var currentEnv = env.Value<string>()", span="67-67"];
m5_17 [cluster="QuantConnect.Configuration.Config.GetEnvironment()", file="Config.cs", label="moreEnvironments == null", span="70-70"];
m5_35 [cluster="Unk.GetToken", file="Config.cs", label="Entry Unk.GetToken", span=""];
m5_6 [cluster="JObject.cstr", file="Config.cs", label="Entry JObject.cstr", span=""];
m5_36 [cluster="string.Format(string, object, object)", file="Config.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_57 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="Config.cs", label="Entry QuantConnect.Configuration.Config.GetDouble(string, double)", span="147-147"];
m5_58 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="Config.cs", label="return GetValue(key, defaultValue);", span="149-149"];
m5_59 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="Config.cs", label="Exit QuantConnect.Configuration.Config.GetDouble(string, double)", span="147-147"];
m5_37 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Config.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
m5_19 [cluster="System.Math.Max(double, double)", file="Config.cs", label="Entry System.Math.Max(double, double)", span="0-0"];
m5_34 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Config.cs", label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", span=""];
m6_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", file="DatabaseDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", span="37-37"];
m6_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", color=green, community=0, file="DatabaseDataFeed.cs", label="IsSuccessful = isSuccessful", prediction=29, span="39-39"];
m6_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", color=green, community=0, file="DatabaseDataFeed.cs", label="ErrorText = errorText", prediction=30, span="40-40"];
m6_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", file="DatabaseDataFeed.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs.VerifyAndAuthCompletedEventArgs(bool, string)", span="37-37"];
m6_4 [file="DatabaseDataFeed.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthCompletedEventArgs", span=""];
m10_28 [cluster="QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetCandleAverage(QuantConnect.Indicators.CandlestickPatterns.CandleSettingType, decimal, QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetCandleAverage(QuantConnect.Indicators.CandlestickPatterns.CandleSettingType, decimal, QuantConnect.Data.Market.TradeBar)", span="141-141"];
m10_30 [cluster="QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetLowerShadow(QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetLowerShadow(QuantConnect.Data.Market.TradeBar)", span="121-121"];
m10_0 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ShootingStar(string)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ShootingStar(string)", span="48-48"];
m10_1 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ShootingStar(string)", file="FileSystemDataFeed.cs", label="_bodyShortAveragePeriod = CandleSettings.Get(CandleSettingType.BodyShort).AveragePeriod", span="52-52"];
m10_4 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ShootingStar(string)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ShootingStar(string)", span="48-48"];
m10_5 [cluster="QuantConnect.Indicators.CandlestickPatterns.CandleSettings.Get(QuantConnect.Indicators.CandlestickPatterns.CandleSettingType)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.CandleSettings.Get(QuantConnect.Indicators.CandlestickPatterns.CandleSettingType)", span="46-46"];
m10_6 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ShootingStar()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ShootingStar()", span="60-60"];
m10_7 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ShootingStar()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ShootingStar()", span="60-60"];
m10_31 [cluster="QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetRealBodyGapUp(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetRealBodyGapUp(QuantConnect.Data.Market.TradeBar, QuantConnect.Data.Market.TradeBar)", span="104-104"];
m10_26 [cluster="QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetCandleRange(QuantConnect.Indicators.CandlestickPatterns.CandleSettingType, QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetCandleRange(QuantConnect.Indicators.CandlestickPatterns.CandleSettingType, QuantConnect.Data.Market.TradeBar)", span="67-67"];
m10_32 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.Reset()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.ShootingStar.Reset()", span="134-134"];
m10_34 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.Reset()", file="FileSystemDataFeed.cs", label="_shadowLongPeriodTotal = 0", span="137-137"];
m10_35 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.Reset()", file="FileSystemDataFeed.cs", label="_shadowVeryShortPeriodTotal = 0", span="138-138"];
m10_36 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.Reset()", file="FileSystemDataFeed.cs", label="base.Reset()", span="139-139"];
m10_37 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.Reset()", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Indicators.CandlestickPatterns.ShootingStar.Reset()", span="134-134"];
m10_38 [cluster="QuantConnect.Indicators.WindowIndicator<T>.Reset()", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.WindowIndicator<T>.Reset()", span="69-69"];
m10_29 [cluster="QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetUpperShadow(QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetUpperShadow(QuantConnect.Data.Market.TradeBar)", span="130-130"];
m10_8 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", span="79-79"];
m10_9 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="!IsReady", span="81-81"];
m10_23 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="_shadowVeryShortPeriodTotal += GetCandleRange(CandleSettingType.ShadowVeryShort, input) -\r\n                                           GetCandleRange(CandleSettingType.ShadowVeryShort, window[_shadowVeryShortAveragePeriod])", span="125-126"];
m10_10 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="Samples >= Period - _bodyShortAveragePeriod", span="83-83"];
m10_12 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="Samples >= Period - _shadowLongAveragePeriod", span="88-88"];
m10_19 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="value = -1m", span="112-112"];
m10_20 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="value = 0m", span="114-114"];
m10_25 [cluster="QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="Exit QuantConnect.Indicators.CandlestickPatterns.ShootingStar.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Market.TradeBar)", span="79-79"];
m10_27 [cluster="QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetRealBody(QuantConnect.Data.Market.TradeBar)", file="FileSystemDataFeed.cs", label="Entry QuantConnect.Indicators.CandlestickPatterns.CandlestickPattern.GetRealBody(QuantConnect.Data.Market.TradeBar)", span="48-48"];
m10_39 [file="FileSystemDataFeed.cs", label="QuantConnect.Indicators.CandlestickPatterns.ShootingStar", span=""];
m11_28 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m11_24 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m11_33 [cluster="Unk.AreEqual", file="FillForwardEnumerator.cs", label="Entry Unk.AreEqual", span=""];
m11_29 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m11_27 [cluster="Unk.AlwaysOpen", file="FillForwardEnumerator.cs", label="Entry Unk.AlwaysOpen", span=""];
m11_0 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.Setup()", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.Setup()", span="17-17"];
m11_1 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.Setup()", color=green, community=0, file="FillForwardEnumerator.cs", label="_fillModel = new TestableLatestFillModel()", prediction=31, span="19-19"];
m11_2 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.Setup()", file="FillForwardEnumerator.cs", label="Exit QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.Setup()", span="17-17"];
m11_23 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m11_4 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", span="23-23"];
m11_5 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="var symbol = Symbol.Create(''BTCUSD'', SecurityType.Crypto, ''GDAX'')", prediction=32, span="25-25"];
m11_6 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="var time = new DateTime(2017, 1, 3, 0, 0, 0)", prediction=33, span="26-26"];
m11_8 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="var quote = new QuoteBar(time, symbol, new Bar(1, 1, 1, 1), 1, new Bar(2, 2, 2, 2), 2)", prediction=34, span="29-29"];
m11_9 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="var trade = new TradeBar(nextTime, symbol, 3, 3, 3, 3, 3)", prediction=35, span="30-30"];
m11_10 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="var cryptoSecurity = new Security(SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc),\r\n                                              new SubscriptionDataConfig(typeof(QuoteBar), symbol, Resolution.Second, TimeZones.Utc, TimeZones.Utc, true, true, false),\r\n                                              new Cash(CashBook.AccountCurrency, 0, 1m),\r\n                                              SymbolProperties.GetDefault(CashBook.AccountCurrency))", prediction=35, span="32-35"];
m11_7 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="var nextTime = time.AddSeconds(1)", prediction=37, span="27-27"];
m11_11 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="cryptoSecurity.Cache.AddData(quote)", prediction=34, span="36-36"];
m11_12 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="cryptoSecurity.Cache.AddData(trade)", prediction=35, span="37-37"];
m11_13 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="var price = _fillModel.GetPrices(cryptoSecurity, OrderDirection.Sell)", prediction=40, span="39-39"];
m11_14 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="Assert.AreEqual(3, price.Open)", prediction=41, span="41-41"];
m11_15 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="Assert.AreEqual(3, price.High)", prediction=40, span="42-42"];
m11_16 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="Assert.AreEqual(3, price.Low)", prediction=40, span="43-43"];
m11_17 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="Assert.AreEqual(3, price.Close)", prediction=40, span="44-44"];
m11_18 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", color=green, community=0, file="FillForwardEnumerator.cs", label="Assert.AreEqual(3, price.Current)", prediction=40, span="45-45"];
m11_19 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", file="FillForwardEnumerator.cs", label="Exit QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.LatestPriceFillModel_UsesLatestPrice()", span="23-23"];
m11_32 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="51-51"];
m11_34 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="FillForwardEnumerator.cs", label="return base.GetPrices(asset, direction);", prediction=46, span="53-53"];
m11_35 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FillForwardEnumerator.cs", label="Exit QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="51-51"];
m11_36 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Orders.Fills.LatestPriceFillModel.GetPrices(QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="35-35"];
m11_26 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="286-286"];
m11_3 [cluster="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.TestableLatestFillModel()", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel.TestableLatestFillModel()", span="49-49"];
m11_20 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m11_25 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m11_22 [cluster="System.DateTime.AddSeconds(double)", file="FillForwardEnumerator.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m11_21 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="FillForwardEnumerator.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m11_31 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="94-94"];
m11_30 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="FillForwardEnumerator.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m11_37 [file="FillForwardEnumerator.cs", label="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests", span=""];
m11_38 [file="FillForwardEnumerator.cs", label="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel", span=""];
m12_7 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="FillForwardEnumeratorTest.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="65-65"];
m12_8 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", color=green, community=0, file="FillForwardEnumeratorTest.cs", label="var order = new MarketOnOpenOrder()", prediction=47, span="67-67"];
m12_9 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", color=green, community=0, file="FillForwardEnumeratorTest.cs", label="CopyTo(order)", prediction=48, span="68-68"];
m12_10 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", color=green, community=0, file="FillForwardEnumeratorTest.cs", label="return order;", prediction=47, span="69-69"];
m12_11 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="FillForwardEnumeratorTest.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="65-65"];
m12_0 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="FillForwardEnumeratorTest.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m12_1 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="FillForwardEnumeratorTest.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m12_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="FillForwardEnumeratorTest.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="235-235"];
m12_4 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="FillForwardEnumeratorTest.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m12_5 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", color=green, community=0, file="FillForwardEnumeratorTest.cs", label="return Quantity*security.Price;", prediction=48, span="58-58"];
m12_6 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="FillForwardEnumeratorTest.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m12_13 [file="FillForwardEnumeratorTest.cs", label="QuantConnect.Orders.MarketOnOpenOrder", span=""];
m13_21 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="Global.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654"];
m13_20 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="Global.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="92-92"];
m13_28 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="Global.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
m13_2 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="Global.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="47-47"];
m13_3 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="Global.cs", label="_brokerageModel = brokerageModel", span="49-49"];
m13_4 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="Global.cs", label="_securitySeeder = securitySeeder", span="50-50"];
m13_5 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="Global.cs", label="Exit QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="47-47"];
m13_27 [cluster="QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", file="Global.cs", label="Entry QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", span="30-30"];
m13_6 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="58-58"];
m13_7 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="security.SetLeverage(_brokerageModel.GetLeverage(security))", span="61-61"];
m13_8 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="security.FillModel = _brokerageModel.GetFillModel(security)", span="62-62"];
m13_9 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="security.FeeModel = _brokerageModel.GetFeeModel(security)", span="63-63"];
m13_10 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="security.SlippageModel = _brokerageModel.GetSlippageModel(security)", span="64-64"];
m13_11 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="security.SettlementModel = _brokerageModel.GetSettlementModel(security, _brokerageModel.AccountType)", span="65-65"];
m13_12 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label=seedSecurity, span="67-67"];
m13_13 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="!security.Symbol.IsCanonical()", span="70-70"];
m13_14 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="BaseData seedData = _securitySeeder.GetSeedData(security)", span="72-72"];
m13_16 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="security.SetMarketPrice(seedData)", span="75-75"];
m13_18 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="Log.Trace(''BrokerageModelSecurityInitializer.Initialize(): Unable to seed security: '' + security.Symbol.Value)", span="80-80"];
m13_15 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="seedData != null", span="73-73"];
m13_17 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="Log.Trace(''BrokerageModelSecurityInitializer.Initialize(): Seeded security: '' + seedData.Symbol.Value + '': '' + seedData.Value)", span="76-76"];
m13_19 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="Global.cs", label="Exit QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="58-58"];
m13_24 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="Global.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="113-113"];
m13_0 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer()", file="Global.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer()", span="36-36"];
m13_1 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer()", file="Global.cs", label="Exit QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer()", span="36-36"];
m13_22 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="Global.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="99-99"];
m13_23 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="Global.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="106-106"];
m13_26 [cluster="QuantConnect.Symbol.IsCanonical()", file="Global.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m13_25 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="Global.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="121-121"];
m13_30 [file="Global.cs", label="QuantConnect.Securities.BrokerageModelSecurityInitializer", span=""];
m16_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", file="IDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", span="109-109"];
m16_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", file="IDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", span="109-109"];
m16_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="IDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="124-124"];
m16_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="IDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="124-124"];
m16_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="IDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="119-119"];
m16_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="IDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="119-119"];
m16_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="IDataFeed.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="114-114"];
m16_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="IDataFeed.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="114-114"];
m17_27 [cluster="decimal.SmartRounding()", file="IndicatorExtensions.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m17_28 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => l - r);", span="102-102"];
m17_29 [cluster="QuantConnect.Orders.LimitOrder.Clone()", file="IndicatorExtensions.cs", label="Entry QuantConnect.Orders.LimitOrder.Clone()", span="116-116"];
m17_34 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(name, left, right, (l, r) => l - r);", span="117-117"];
m17_30 [cluster="lambda expression", color=green, community=0, file="IndicatorExtensions.cs", label="Entry lambda expression", prediction=51, span="102-102"];
m17_31 [cluster="lambda expression", color=green, community=0, file="IndicatorExtensions.cs", label="l - r", prediction=51, span="102-102"];
m17_32 [cluster="lambda expression", color=green, community=0, file="IndicatorExtensions.cs", label="Exit lambda expression", prediction=51, span="102-102"];
m17_33 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="115-115"];
m17_39 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="129-129"];
m17_40 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => l / r);", span="131-131"];
m17_41 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="129-129"];
m17_45 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="144-144"];
m17_46 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(name, left, right, (l, r) => l / r);", span="146-146"];
m17_47 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="144-144"];
m17_51 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="158-158"];
m17_52 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => l * r);", span="160-160"];
m17_53 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="158-158"];
m17_23 [cluster="QuantConnect.Orders.LimitOrder.ToString()", file="IndicatorExtensions.cs", label="Entry QuantConnect.Orders.LimitOrder.ToString()", span="107-107"];
m17_0 [cluster="QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)", span="33-33"];
m17_1 [cluster="QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)", file="IndicatorExtensions.cs", label="indicator.Update(new IndicatorDataPoint(time, value))", span="35-35"];
m17_20 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="IndicatorExtensions.cs", label="LimitPrice = request.LimitPrice.Value", span="96-96"];
m17_21 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="91-91"];
m17_22 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="200-200"];
m17_35 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="QuantConnect.Orders.LimitOrder", span=""];
m17_57 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="173-173"];
m17_58 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(name, left, right, (l, r) => l * r);", span="175-175"];
m17_59 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="173-173"];
m17_60 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="175-175"];
m17_10 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", color=green, community=0, file="IndicatorExtensions.cs", label="return Quantity*Math.Max(LimitPrice, security.Price);", prediction=51, span="75-75"];
m17_11 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="IndicatorExtensions.cs", label="Quantity > 0", span="79-79"];
m17_9 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", color=green, community=0, file="IndicatorExtensions.cs", label="Quantity < 0", prediction=51, span="73-73"];
m17_12 [cluster="QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="IndicatorExtensions.cs", label="return Quantity*Math.Min(LimitPrice, security.Price);", span="81-81"];
m17_18 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="IndicatorExtensions.cs", label="base.ApplyUpdateOrderRequest(request)", span="93-93"];
m17_17 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="91-91"];
m17_19 [cluster="QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="IndicatorExtensions.cs", label="request.LimitPrice.HasValue", span="94-94"];
m17_25 [cluster="QuantConnect.Orders.LimitOrder.ToString()", file="IndicatorExtensions.cs", label="Exit QuantConnect.Orders.LimitOrder.ToString()", span="107-107"];
m17_24 [cluster="QuantConnect.Orders.LimitOrder.ToString()", color=green, community=0, file="IndicatorExtensions.cs", label="return string.Format(''{0} at limit {1}'', base.ToString(), LimitPrice.SmartRounding());", prediction=51, span="109-109"];
m17_26 [cluster="QuantConnect.Orders.Order.ToString()", file="IndicatorExtensions.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="223-223"];
m17_37 [cluster="lambda expression", file="IndicatorExtensions.cs", label="l - r", span="117-117"];
m17_36 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="117-117"];
m17_38 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="117-117"];
m17_43 [cluster="lambda expression", file="IndicatorExtensions.cs", label="l / r", span="131-131"];
m17_42 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="131-131"];
m17_44 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="131-131"];
m17_49 [cluster="lambda expression", file="IndicatorExtensions.cs", label="l / r", span="146-146"];
m17_48 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="146-146"];
m17_50 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="146-146"];
m17_55 [cluster="lambda expression", file="IndicatorExtensions.cs", label="l * r", span="160-160"];
m17_54 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="160-160"];
m17_56 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="160-160"];
m17_61 [cluster="lambda expression", file="IndicatorExtensions.cs", label="l * r", span="175-175"];
m17_62 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="175-175"];
m17_3 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="IndicatorExtensions.cs", label="LimitPrice = limitPrice", span="57-57"];
m17_8 [cluster="QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", span="46-46"];
m17_13 [cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="71-71"];
m17_14 [cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => l + r);", span="73-73"];
m17_2 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="54-54"];
m17_5 [cluster="QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", span="46-46"];
m17_4 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="82-82"];
m17_6 [cluster="QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", file="IndicatorExtensions.cs", label="first.Updated += (sender, consolidated) =>\r\n            {\r\n                // only send the data along if we're ready\r\n                if (!waitForFirstToReady || first.IsReady)\r\n                {\r\n                    second.Update(consolidated);\r\n                }\r\n            }", span="50-57"];
m17_7 [cluster="decimal.ToString(string)", file="IndicatorExtensions.cs", label="Entry decimal.ToString(string)", span="0-0"];
m17_15 [cluster="System.Math.Max(decimal, decimal)", file="IndicatorExtensions.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m17_16 [cluster="System.Math.Min(decimal, decimal)", file="IndicatorExtensions.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m17_63 [file="IndicatorExtensions.cs", label="QuantConnect.Indicators.IndicatorBase<T>", span=""];
m17_64 [file="IndicatorExtensions.cs", label=bool, span=""];
m17_65 [file="IndicatorExtensions.cs", label=TSecond, span=""];
m18_27 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="LeanEngineAlgorithmHandlers.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="72-72"];
m18_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="LeanEngineAlgorithmHandlers.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="119-119"];
m18_39 [cluster="System.IDisposable.Dispose()", file="LeanEngineAlgorithmHandlers.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m18_28 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="LeanEngineAlgorithmHandlers.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", span="147-147"];
m18_33 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="LeanEngineAlgorithmHandlers.cs", label="Setup.Dispose()", span="153-153"];
m18_34 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", file="LeanEngineAlgorithmHandlers.cs", label="Exit QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.Dispose()", span="147-147"];
m18_37 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="LeanEngineAlgorithmHandlers.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="59-59"];
m18_0 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="87-87"];
m18_1 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="results == null", span="93-93"];
m18_3 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="setup == null", span="97-97"];
m18_5 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="dataFeed == null", span="101-101"];
m18_7 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="transactions == null", span="105-105"];
m18_9 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="realTime == null", span="109-109"];
m18_11 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="_results = results", span="113-113"];
m18_12 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="_setup = setup", span="114-114"];
m18_13 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="_dataFeed = dataFeed", span="115-115"];
m18_14 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="_transactions = transactions", span="116-116"];
m18_15 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="_realTime = realTime", span="117-117"];
m18_2 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="throw new ArgumentNullException(''results'');", span="95-95"];
m18_4 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="throw new ArgumentNullException(''setup'');", span="99-99"];
m18_6 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="throw new ArgumentNullException(''dataFeed'');", span="103-103"];
m18_8 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="throw new ArgumentNullException(''transactions'');", span="107-107"];
m18_10 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="throw new ArgumentNullException(''realTime'');", span="111-111"];
m18_16 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="LeanEngineAlgorithmHandlers.cs", label="Exit QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.LeanEngineAlgorithmHandlers(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="87-87"];
m18_17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="LeanEngineAlgorithmHandlers.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m18_38 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="LeanEngineAlgorithmHandlers.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="109-109"];
m18_18 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="126-126"];
m18_19 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs", label="var setupHandlerTypeName = Config.Get(''setup-handler'', ''ConsoleSetupHandler'')", span="128-128"];
m18_24 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs", label="return new LeanEngineAlgorithmHandlers(\r\n                composer.GetExportedValueByTypeName<IResultHandler>(resultHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<ISetupHandler>(setupHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<IDataFeed>(dataFeedHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<ITransactionHandler>(transactionHandlerTypeName),\r\n                composer.GetExportedValueByTypeName<IRealTimeHandler>(realTimeHandlerTypeName)\r\n                );", span="134-140"];
m18_20 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs", label="var transactionHandlerTypeName = Config.Get(''transaction-handler'', ''BacktestingTransactionHandler'')", span="129-129"];
m18_21 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs", label="var realTimeHandlerTypeName = Config.Get(''real-time-handler'', ''BacktestingRealTimeHandler'')", span="130-130"];
m18_22 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs", label="var dataFeedHandlerTypeName = Config.Get(''data-feed-handler'', ''FileSystemDataFeed'')", span="131-131"];
m18_23 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs", label="var resultHandlerTypeName = Config.Get(''result-handler'', ''ConsoleResultHandler'')", span="132-132"];
m18_25 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="LeanEngineAlgorithmHandlers.cs", label="Exit QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="126-126"];
m18_26 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="LeanEngineAlgorithmHandlers.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="87-87"];
m18_35 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="LeanEngineAlgorithmHandlers.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="221-221"];
m18_40 [file="LeanEngineAlgorithmHandlers.cs", label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", span=""];
m20_296 [cluster="QuantConnect.ToolBox.IQFeed.SocketClient.Send(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.SocketClient.Send(string)", span="59-59"];
m20_140 [cluster="string.Contains(string)", file="LiveTradingResultHandler.cs", label="Entry string.Contains(string)", span="0-0"];
m20_256 [cluster="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs.Level1NewsEventArgs(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs.Level1NewsEventArgs(string)", span="473-473"];
m20_257 [cluster="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs.Level1NewsEventArgs(string)", file="LiveTradingResultHandler.cs", label="var fields = line.Split(',')", span="475-475"];
m20_258 [cluster="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs.Level1NewsEventArgs(string)", file="LiveTradingResultHandler.cs", label="_distributorType = fields[1]", span="476-476"];
m20_259 [cluster="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs.Level1NewsEventArgs(string)", file="LiveTradingResultHandler.cs", label="_storyId = fields[2]", span="477-477"];
m20_260 [cluster="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs.Level1NewsEventArgs(string)", file="LiveTradingResultHandler.cs", label="_symbol = fields[3].Split(':')", span="478-478"];
m20_261 [cluster="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs.Level1NewsEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[4], ''yyyyMMdd HHmmss'', _enUS, DateTimeStyles.None, out _newsDateTime)", span="479-479"];
m20_263 [cluster="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs.Level1NewsEventArgs(string)", file="LiveTradingResultHandler.cs", label="_headline = fields[5]", span="480-480"];
m20_262 [cluster="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs.Level1NewsEventArgs(string)", file="LiveTradingResultHandler.cs", label="_newsDateTime = DateTime.MinValue", span="479-479"];
m20_264 [cluster="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs.Level1NewsEventArgs(string)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs.Level1NewsEventArgs(string)", span="473-473"];
m20_324 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.RequestFundamental()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.RequestFundamental()", span="581-581"];
m20_325 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.RequestFundamental()", file="LiveTradingResultHandler.cs", label="_socket == null", span="583-583"];
m20_326 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.RequestFundamental()", file="LiveTradingResultHandler.cs", label="throw new Exception(''Watch Item not connected'');", span="583-583"];
m20_327 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.RequestFundamental()", file="LiveTradingResultHandler.cs", label="!_active", span="584-584"];
m20_328 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.RequestFundamental()", file="LiveTradingResultHandler.cs", label="throw new Exception(''Cannot request Fundamental data, Activate first'');", span="584-584"];
m20_329 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.RequestFundamental()", file="LiveTradingResultHandler.cs", label="_socket.Send(''f'' + _symbol + ''\r\n'')", span="585-585"];
m20_330 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.RequestFundamental()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.RequestFundamental()", span="581-581"];
m20_443 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerDisconnected(QuantConnect.ToolBox.IQFeed.Level1ServerDisconnectedArgs)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerDisconnected(QuantConnect.ToolBox.IQFeed.Level1ServerDisconnectedArgs)", span="804-804"];
m20_453 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerDisconnected(QuantConnect.ToolBox.IQFeed.Level1ServerDisconnectedArgs)", file="LiveTradingResultHandler.cs", label="Level1ServerDisconnectedEvent != null", span="806-806"];
m20_454 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerDisconnected(QuantConnect.ToolBox.IQFeed.Level1ServerDisconnectedArgs)", file="LiveTradingResultHandler.cs", label="Level1ServerDisconnectedEvent(this, e)", span="806-806"];
m20_455 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerDisconnected(QuantConnect.ToolBox.IQFeed.Level1ServerDisconnectedArgs)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerDisconnected(QuantConnect.ToolBox.IQFeed.Level1ServerDisconnectedArgs)", span="804-804"];
m20_148 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs()", span="288-288"];
m20_149 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs()", file="LiveTradingResultHandler.cs", label="_timer.Enabled = true", span="290-290"];
m20_150 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs()", file="LiveTradingResultHandler.cs", label="_timer.AutoReset = true", span="291-291"];
m20_151 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs()", file="LiveTradingResultHandler.cs", label="_timer.Elapsed += (sender, args) => _logger.Flush()", span="292-292"];
m20_152 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs()", span="288-288"];
m20_139 [cluster="string.Split(params char[])", file="LiveTradingResultHandler.cs", label="Entry string.Split(params char[])", span="0-0"];
m20_141 [cluster="double.TryParse(string, out double)", file="LiveTradingResultHandler.cs", label="Entry double.TryParse(string, out double)", span="0-0"];
m20_156 [cluster="System.IO.StreamWriter.Flush()", file="LiveTradingResultHandler.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m20_393 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="LiveTradingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m20_439 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1FundamentalEvent(QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1FundamentalEvent(QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs)", span="813-813"];
m20_459 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1FundamentalEvent(QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs)", file="LiveTradingResultHandler.cs", label="Level1FundamentalEvent != null", span="815-815"];
m20_460 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1FundamentalEvent(QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs)", file="LiveTradingResultHandler.cs", label="Level1FundamentalEvent(this, e)", span="815-815"];
m20_461 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1FundamentalEvent(QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1FundamentalEvent(QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs)", span="813-813"];
m20_145 [cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="LiveTradingResultHandler.cs", label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m20_440 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1RegionalEvent(QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1RegionalEvent(QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs)", span="821-821"];
m20_465 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1RegionalEvent(QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs)", file="LiveTradingResultHandler.cs", label="Level1RegionalEvent != null", span="823-823"];
m20_466 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1RegionalEvent(QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs)", file="LiveTradingResultHandler.cs", label="Level1RegionalEvent(this, e)", span="823-823"];
m20_467 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1RegionalEvent(QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1RegionalEvent(QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs)", span="821-821"];
m20_153 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="Entry lambda expression", span="292-292"];
m20_154 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="_logger.Flush()", span="292-292"];
m20_155 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="Exit lambda expression", span="292-292"];
m20_144 [cluster="string.Substring(int, int)", file="LiveTradingResultHandler.cs", label="Entry string.Substring(int, int)", span="0-0"];
m20_287 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Activate()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Activate()", span="551-551"];
m20_288 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Activate()", file="LiveTradingResultHandler.cs", label="_socket == null", span="553-553"];
m20_289 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Activate()", file="LiveTradingResultHandler.cs", label="throw new Exception(''Watch Item not connected'');", span="553-553"];
m20_290 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Activate()", file="LiveTradingResultHandler.cs", label=_active, span="554-554"];
m20_291 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Activate()", file="LiveTradingResultHandler.cs", label="return;", span="554-554"];
m20_292 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Activate()", file="LiveTradingResultHandler.cs", label="_socket.Send(''w'' + _symbol + ''\r\n'')", span="555-555"];
m20_293 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Activate()", file="LiveTradingResultHandler.cs", label="_active = true", span="556-556"];
m20_294 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Activate()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Activate()", span="551-551"];
m20_251 [cluster="QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs.Level1TimerEventArgs(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs.Level1TimerEventArgs(string)", span="458-458"];
m20_252 [cluster="QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs.Level1TimerEventArgs(string)", file="LiveTradingResultHandler.cs", label="var fields = line.Split(',')", span="460-460"];
m20_253 [cluster="QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs.Level1TimerEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[1], ''yyyyMMdd HH:mm:ss'', _enUS, DateTimeStyles.None, out _dateTimeStamp)", span="461-461"];
m20_254 [cluster="QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs.Level1TimerEventArgs(string)", file="LiveTradingResultHandler.cs", label="_dateTimeStamp = DateTime.MinValue", span="461-461"];
m20_255 [cluster="QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs.Level1TimerEventArgs(string)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs.Level1TimerEventArgs(string)", span="458-458"];
m20_445 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1UnknownEvent(QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1UnknownEvent(QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs)", span="794-794"];
m20_446 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1UnknownEvent(QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="Level1UnknownEvent != null", span="796-796"];
m20_447 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1UnknownEvent(QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="Level1UnknownEvent(this, e)", span="796-796"];
m20_448 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1UnknownEvent(QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1UnknownEvent(QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs)", span="794-794"];
m20_355 [cluster="QuantConnect.ToolBox.IQFeed.IQSocket.GetSocket()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQSocket.GetSocket()", span="101-101"];
m20_386 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="LiveTradingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m20_444 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerReconnectFailed(QuantConnect.ToolBox.IQFeed.Level1ServerReconnectFailedArgs)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerReconnectFailed(QuantConnect.ToolBox.IQFeed.Level1ServerReconnectFailedArgs)", span="799-799"];
m20_450 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerReconnectFailed(QuantConnect.ToolBox.IQFeed.Level1ServerReconnectFailedArgs)", file="LiveTradingResultHandler.cs", label="Level1ServerReconnectFailed != null", span="801-801"];
m20_451 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerReconnectFailed(QuantConnect.ToolBox.IQFeed.Level1ServerReconnectFailedArgs)", file="LiveTradingResultHandler.cs", label="Level1ServerReconnectFailed(this, e)", span="801-801"];
m20_452 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerReconnectFailed(QuantConnect.ToolBox.IQFeed.Level1ServerReconnectFailedArgs)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1ServerReconnectFailed(QuantConnect.ToolBox.IQFeed.Level1ServerReconnectFailedArgs)", span="799-799"];
m20_295 [cluster="System.Exception.Exception(string)", file="LiveTradingResultHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m20_376 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", span="670-670"];
m20_377 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", file="LiveTradingResultHandler.cs", label="var item = new IQLevel1WatchItem(symbol, active, regionOn)", span="672-672"];
m20_382 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", file="LiveTradingResultHandler.cs", label=requestFundamental, span="679-679"];
m20_378 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", file="LiveTradingResultHandler.cs", label="_key.ContainsKey(item.Symbol)", span="673-673"];
m20_380 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", file="LiveTradingResultHandler.cs", label="_key.Add(item.Symbol, item)", span="677-677"];
m20_381 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", file="LiveTradingResultHandler.cs", label="item.Connect(this)", span="678-678"];
m20_383 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", file="LiveTradingResultHandler.cs", label="item.RequestFundamental()", span="681-681"];
m20_379 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", file="LiveTradingResultHandler.cs", label="return;", span="675-675"];
m20_384 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.Subscribe(string, bool, bool, bool)", span="670-670"];
m20_365 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.ForceTimeStamp()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.ForceTimeStamp()", span="651-651"];
m20_366 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.ForceTimeStamp()", file="LiveTradingResultHandler.cs", label="Send(''T\r\n'')", span="653-653"];
m20_367 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.ForceTimeStamp()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.ForceTimeStamp()", span="651-651"];
m20_297 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.DeActivate()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.DeActivate()", span="558-558"];
m20_298 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.DeActivate()", file="LiveTradingResultHandler.cs", label="_socket == null", span="560-560"];
m20_299 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.DeActivate()", file="LiveTradingResultHandler.cs", label="throw new Exception(''Watch Item not connected'');", span="560-560"];
m20_300 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.DeActivate()", file="LiveTradingResultHandler.cs", label="!_active", span="561-561"];
m20_301 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.DeActivate()", file="LiveTradingResultHandler.cs", label="return;", span="561-561"];
m20_302 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.DeActivate()", file="LiveTradingResultHandler.cs", label="_socket.Send(''r'' + _symbol + ''\r\n'')", span="562-562"];
m20_303 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.DeActivate()", file="LiveTradingResultHandler.cs", label="_active = false", span="563-563"];
m20_304 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.DeActivate()", file="LiveTradingResultHandler.cs", label="_regionOn = false", span="564-564"];
m20_305 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.DeActivate()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.DeActivate()", span="558-558"];
m20_394 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Contains(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Contains(string)", span="701-701"];
m20_395 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Contains(string)", file="LiveTradingResultHandler.cs", label="return _key.Keys.Contains(symbol);", span="703-703"];
m20_396 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Contains(string)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.Contains(string)", span="701-701"];
m20_157 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", span="295-295"];
m20_158 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="var fields = line.Split(',')", span="297-297"];
m20_160 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_logger.WriteLine(now + '':'' + now.Second + '','' + line)", span="300-300"];
m20_159 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="var now = DateTime.Now", span="299-299"];
m20_161 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_symbol = fields[1]", span="302-302"];
m20_162 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[3], out _pe)", span="303-303"];
m20_164 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[4], out _averageVolume)", span="304-304"];
m20_166 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[5], out _high52Week)", span="305-305"];
m20_168 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[6], out _low52Week)", span="306-306"];
m20_170 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[7], out _calendarYearHigh)", span="307-307"];
m20_172 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[8], out _calendarYearLow)", span="308-308"];
m20_174 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[9], out _dividendYield)", span="309-309"];
m20_176 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[10], out _dividendAmount)", span="310-310"];
m20_178 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[11], out _dividendRate)", span="311-311"];
m20_180 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[12], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _payDate)", span="312-312"];
m20_182 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[13], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _exDividendDate)", span="313-313"];
m20_184 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[17], out _shortInterest)", span="314-314"];
m20_186 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[19], out _currentYearEarningsPerShare)", span="315-315"];
m20_188 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[20], out _nextYearEarningsPerShare)", span="316-316"];
m20_190 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[21], out _fiveYearGrowthPercentage)", span="317-317"];
m20_192 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[22], out _fiscalYearEnd)", span="318-318"];
m20_194 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_companyName = fields[24]", span="319-319"];
m20_195 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_rootOptionSymbol = fields[25]", span="320-320"];
m20_196 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[26], out _percentHeldByInstitutions)", span="321-321"];
m20_198 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[27], out _beta)", span="322-322"];
m20_200 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_leaps = fields[28]", span="323-323"];
m20_201 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[29], out _currentAssets)", span="324-324"];
m20_203 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[30], out _currentLiabilities)", span="325-325"];
m20_205 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[31], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _balanceSheetDate)", span="326-326"];
m20_207 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[32], out _longTermDebt)", span="327-327"];
m20_209 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[33], out _commonSharesOutstanding)", span="328-328"];
m20_211 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="var splits = fields[35].Split(' ')", span="329-329"];
m20_216 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="splits = fields[36].Split(' ')", span="332-332"];
m20_221 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_formatCode = fields[39]", span="335-335"];
m20_222 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[40], out _precision)", span="336-336"];
m20_224 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_sic = fields[41]", span="337-337"];
m20_225 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[42], out _historicalVolatility)", span="338-338"];
m20_227 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_securityType = fields[43]", span="339-339"];
m20_228 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_listedMarket = fields[44]", span="340-340"];
m20_229 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[45], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _date52WeekHigh)", span="341-341"];
m20_231 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[46], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _date52WeekLow)", span="342-342"];
m20_233 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[47], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _dateCalendarYearHigh)", span="343-343"];
m20_235 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[48], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _dateCalendarYearLow)", span="344-344"];
m20_237 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[49], out _yearEndClose)", span="345-345"];
m20_239 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[50], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _maturityDate)", span="346-346"];
m20_241 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[51], out _couponRate)", span="347-347"];
m20_243 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[52], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _expirationDate)", span="348-348"];
m20_245 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[53], out _strikePrice)", span="349-349"];
m20_247 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_naics = fields[54]", span="350-350"];
m20_248 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_exchangeRoot = fields[55]", span="351-351"];
m20_163 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_pe = 0", span="303-303"];
m20_165 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_averageVolume = 0", span="304-304"];
m20_167 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_high52Week = 0", span="305-305"];
m20_169 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_low52Week = 0", span="306-306"];
m20_171 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_calendarYearHigh = 0", span="307-307"];
m20_173 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_calendarYearLow = 0", span="308-308"];
m20_175 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_dividendYield = 0", span="309-309"];
m20_177 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_dividendAmount = 0", span="310-310"];
m20_179 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_dividendRate = 0", span="311-311"];
m20_181 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_payDate = DateTime.MinValue", span="312-312"];
m20_183 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_exDividendDate = DateTime.MinValue", span="313-313"];
m20_185 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_shortInterest = 0", span="314-314"];
m20_187 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_currentYearEarningsPerShare = 0", span="315-315"];
m20_189 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_nextYearEarningsPerShare = 0", span="316-316"];
m20_191 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_fiveYearGrowthPercentage = 0", span="317-317"];
m20_193 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_fiscalYearEnd = 0", span="318-318"];
m20_197 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_percentHeldByInstitutions = 0", span="321-321"];
m20_199 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_beta = 0", span="322-322"];
m20_202 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_currentAssets = 0", span="324-324"];
m20_204 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_currentLiabilities = 0", span="325-325"];
m20_206 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_balanceSheetDate = DateTime.MinValue", span="326-326"];
m20_208 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_longTermDebt = 0", span="327-327"];
m20_210 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_commonSharesOutstanding = 0", span="328-328"];
m20_212 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(splits[0], out _splitFactor1)", span="330-330"];
m20_214 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(splits[1], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _splitDate1)", span="331-331"];
m20_213 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_splitFactor1 = 0", span="330-330"];
m20_215 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_splitDate1 = DateTime.MinValue", span="331-331"];
m20_217 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(splits[0], out _splitFactor2)", span="333-333"];
m20_219 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(splits[1], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _splitDate2)", span="334-334"];
m20_218 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_splitFactor2 = 0", span="333-333"];
m20_220 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_splitDate2 = DateTime.MinValue", span="334-334"];
m20_223 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_precision = 0", span="336-336"];
m20_226 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_historicalVolatility = 0", span="338-338"];
m20_230 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_date52WeekHigh = DateTime.MinValue", span="341-341"];
m20_232 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_date52WeekLow = DateTime.MinValue", span="342-342"];
m20_234 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_dateCalendarYearHigh = DateTime.MinValue", span="343-343"];
m20_236 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_dateCalendarYearLow = DateTime.MinValue", span="344-344"];
m20_238 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_yearEndClose = 0", span="345-345"];
m20_240 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_maturityDate = DateTime.MinValue", span="346-346"];
m20_242 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_couponRate = 0", span="347-347"];
m20_244 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_expirationDate = DateTime.MinValue", span="348-348"];
m20_246 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_strikePrice = 0", span="349-349"];
m20_249 [cluster="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs.Level1FundamentalEventArgs(string)", span="295-295"];
m20_357 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Disconnect(int)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Disconnect(int)", span="642-642"];
m20_358 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Disconnect(int)", file="LiveTradingResultHandler.cs", label="Send(''S,DISCONNECT\r\n'')", span="644-644"];
m20_359 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Disconnect(int)", file="LiveTradingResultHandler.cs", label="DisconnectFromSocket(flushSeconds)", span="645-645"];
m20_360 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Disconnect(int)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.Disconnect(int)", span="642-642"];
m20_316 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOff()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOff()", span="574-574"];
m20_317 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOff()", file="LiveTradingResultHandler.cs", label="_socket == null", span="576-576"];
m20_318 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOff()", file="LiveTradingResultHandler.cs", label="throw new Exception(''Watch Item not connected'');", span="576-576"];
m20_319 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOff()", file="LiveTradingResultHandler.cs", label="!_regionOn", span="577-577"];
m20_320 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOff()", file="LiveTradingResultHandler.cs", label="return;", span="577-577"];
m20_321 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOff()", file="LiveTradingResultHandler.cs", label="_socket.Send(''S,REGOFF,'' + _symbol + ''\r\n'')", span="578-578"];
m20_322 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOff()", file="LiveTradingResultHandler.cs", label="_regionOn = false", span="579-579"];
m20_323 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOff()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOff()", span="574-574"];
m20_437 [cluster="string.StartsWith(string)", file="LiveTradingResultHandler.cs", label="Entry string.StartsWith(string)", span="0-0"];
m20_282 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.IQLevel1WatchItem(string, bool, bool)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.IQLevel1WatchItem(string, bool, bool)", span="541-541"];
m20_283 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.IQLevel1WatchItem(string, bool, bool)", file="LiveTradingResultHandler.cs", label="_symbol = symbol", span="543-543"];
m20_284 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.IQLevel1WatchItem(string, bool, bool)", file="LiveTradingResultHandler.cs", label="_active = active", span="544-544"];
m20_285 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.IQLevel1WatchItem(string, bool, bool)", file="LiveTradingResultHandler.cs", label="_regionOn = regionOn", span="545-545"];
m20_286 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.IQLevel1WatchItem(string, bool, bool)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.IQLevel1WatchItem(string, bool, bool)", span="541-541"];
m20_398 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Clear()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Clear()", span="709-709"];
m20_399 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Clear()", file="LiveTradingResultHandler.cs", label="Send(''S,UNWATCH ALL\r\n'')", span="711-711"];
m20_400 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Clear()", file="LiveTradingResultHandler.cs", label="_key.Values", span="712-712"];
m20_401 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Clear()", file="LiveTradingResultHandler.cs", label="wi.Disconnect()", span="714-714"];
m20_402 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Clear()", file="LiveTradingResultHandler.cs", label="_key.Clear()", span="716-716"];
m20_403 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Clear()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.Clear()", span="709-709"];
m20_7 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", span="52-52"];
m20_8 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="var fields = line.Split(',')", span="56-56"];
m20_11 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_notFound = line.Contains(''Not Found'')", span="59-59"];
m20_9 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_summary = fields[0] == ''P''", span="57-57"];
m20_10 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_symbol = fields[1]", span="58-58"];
m20_14 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[3], out _last)", span="62-62"];
m20_16 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[4], out _change)", span="63-63"];
m20_18 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[5], out _change)", span="64-64"];
m20_20 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[6], out _totalVolume)", span="65-65"];
m20_22 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[7], out _incrementalVolume)", span="66-66"];
m20_24 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[8], out _high)", span="67-67"];
m20_26 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[9], out _low)", span="68-68"];
m20_28 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[10], out _bid)", span="69-69"];
m20_30 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[11], out _ask)", span="70-70"];
m20_32 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[12], out _bidSize)", span="71-71"];
m20_34 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[13], out _askSize)", span="72-72"];
m20_36 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[14], out _tick)", span="73-73"];
m20_38 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[15], out _bidTick)", span="74-74"];
m20_40 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[16], out _range)", span="75-75"];
m20_42 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!string.IsNullOrEmpty(fields[17])", span="76-76"];
m20_43 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="fields[17].Substring(fields[17].Length - 1, 1)", span="78-78"];
m20_54 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[18], out _openInterest)", span="101-101"];
m20_56 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[19], out _open)", span="102-102"];
m20_58 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[20], out _close)", span="103-103"];
m20_60 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[21], out _spread)", span="104-104"];
m20_62 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[23], out _settle)", span="105-105"];
m20_64 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[24], out _delay)", span="106-106"];
m20_67 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="fields[26] == ''R''", span="108-108"];
m20_69 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[27], out _netAssetValue)", span="109-109"];
m20_71 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[28], out _averageMaturity)", span="110-110"];
m20_73 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[29], out _7DayYield)", span="111-111"];
m20_75 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[30], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _lastTradeDate)", span="112-112"];
m20_77 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[32], out _extendedTradingLast)", span="113-113"];
m20_79 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[34], out _regionalVolume)", span="114-114"];
m20_81 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[35], out _netAssetValue2)", span="115-115"];
m20_83 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[36], out _extendedTradingChange)", span="116-116"];
m20_85 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[37], out _extendedTradingDifference)", span="117-117"];
m20_87 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[38], out _priceEarningsRatio)", span="118-118"];
m20_89 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[39], out _percentOffAverageVolume)", span="119-119"];
m20_91 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[40], out _bidChange)", span="120-120"];
m20_93 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[41], out _askChange)", span="121-121"];
m20_95 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[42], out _changeFromOpen)", span="122-122"];
m20_98 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="fields[43] == ''1''", span="124-124"];
m20_100 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[44], out _volatility)", span="125-125"];
m20_102 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[45], out _marketCapitalization)", span="126-126"];
m20_104 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_fractionDisplayCode = fields[46]", span="127-127"];
m20_105 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_decimalPrecision = fields[47]", span="128-128"];
m20_106 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_daysToExpiration = fields[48]", span="129-129"];
m20_107 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[49], out _previousDayVolume)", span="130-130"];
m20_109 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[51], out _openRange1)", span="131-131"];
m20_111 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[52], out _closeRange1)", span="132-132"];
m20_113 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[53], out _openRange2)", span="133-133"];
m20_115 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[54], out _closeRange2)", span="134-134"];
m20_117 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[55], out _numberOfTradesToday)", span="135-135"];
m20_119 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_bidTime = new Time(fields[56])", span="136-136"];
m20_120 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_askTime = new Time(fields[57])", span="137-137"];
m20_121 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[58], out _vwap)", span="138-138"];
m20_123 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[59], out _tickId)", span="139-139"];
m20_125 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_financialStatusIndicator = fields[60]", span="140-140"];
m20_126 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!DateTime.TryParseExact(fields[61], ''MM/dd/yyyy'', _enUS, DateTimeStyles.None, out _settlementDate)", span="141-141"];
m20_128 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[62], out _tradeMarketCenter)", span="142-142"];
m20_130 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[63], out _bidMarketCenter)", span="143-143"];
m20_132 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[64], out _askMarketCenter)", span="144-144"];
m20_134 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_tradeTime = new Time(fields[65])", span="145-145"];
m20_135 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_availableRegions = fields[66]", span="146-146"];
m20_12 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label=_notFound, span="61-61"];
m20_13 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="return;", span="61-61"];
m20_15 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_last = 0", span="62-62"];
m20_17 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_change = 0", span="63-63"];
m20_19 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_percentChange = 0", span="64-64"];
m20_21 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_totalVolume = 0", span="65-65"];
m20_23 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_incrementalVolume = 0", span="66-66"];
m20_25 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_high = 0", span="67-67"];
m20_27 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_low = 0", span="68-68"];
m20_29 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_bid = 0", span="69-69"];
m20_31 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_ask = 0", span="70-70"];
m20_33 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_bidSize = 0", span="71-71"];
m20_35 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_askSize = 0", span="72-72"];
m20_37 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_tick = 0", span="73-73"];
m20_39 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_bidTick = 0", span="74-74"];
m20_41 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_range = 0", span="75-75"];
m20_53 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="return;", span="99-99"];
m20_44 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="''t''", span="80-80"];
m20_46 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="''T''", span="83-83"];
m20_48 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="''b''", span="86-86"];
m20_50 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="''a''", span="89-89"];
m20_52 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_updateType = UpdateType.Other", span="93-93"];
m20_45 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_updateType = UpdateType.Trade", span="81-81"];
m20_47 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_updateType = UpdateType.ExtendedTrade", span="84-84"];
m20_49 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_updateType = UpdateType.Bid", span="87-87"];
m20_51 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_updateType = UpdateType.Ask", span="90-90"];
m20_55 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_openInterest = 0", span="101-101"];
m20_57 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_open = 0", span="102-102"];
m20_59 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_close = 0", span="103-103"];
m20_61 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_spread = 0", span="104-104"];
m20_63 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_settle = 0", span="105-105"];
m20_65 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_delay = 0", span="106-106"];
m20_66 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_shortRestricted = false", span="107-107"];
m20_68 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_shortRestricted = true", span="108-108"];
m20_70 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_netAssetValue = 0", span="109-109"];
m20_72 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_averageMaturity = 0", span="110-110"];
m20_74 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_7DayYield = 0", span="111-111"];
m20_76 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_lastTradeDate = DateTime.MinValue", span="112-112"];
m20_78 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_extendedTradingLast = 0", span="113-113"];
m20_80 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_regionalVolume = 0", span="114-114"];
m20_82 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_netAssetValue2 = 0", span="115-115"];
m20_84 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_extendedTradingChange = 0", span="116-116"];
m20_86 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_extendedTradingDifference = 0", span="117-117"];
m20_88 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_priceEarningsRatio = 0", span="118-118"];
m20_90 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_percentOffAverageVolume = 0", span="119-119"];
m20_92 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_bidChange = 0", span="120-120"];
m20_94 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_askChange = 0", span="121-121"];
m20_96 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_changeFromOpen = 0", span="122-122"];
m20_97 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_marketOpen = false", span="123-123"];
m20_99 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_marketOpen = true", span="124-124"];
m20_101 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_volatility = 0", span="125-125"];
m20_103 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_marketCapitalization = 0", span="126-126"];
m20_108 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_previousDayVolume = 0", span="130-130"];
m20_110 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_openRange1 = 0", span="131-131"];
m20_112 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_closeRange1 = 0", span="132-132"];
m20_114 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_openRange2 = 0", span="133-133"];
m20_116 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_closeRange2 = 0", span="134-134"];
m20_118 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_numberOfTradesToday = 0", span="135-135"];
m20_122 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_vwap = 0", span="138-138"];
m20_124 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_tickId = 0", span="139-139"];
m20_127 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_settlementDate = DateTime.MinValue", span="141-141"];
m20_129 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_tradeMarketCenter = 0", span="142-142"];
m20_131 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_bidMarketCenter = 0", span="143-143"];
m20_133 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="_askMarketCenter = 0", span="144-144"];
m20_136 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label=Exception, span="148-148"];
m20_137 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="Logging.Log.Debug(''IQLevel1Client.Init(): '' + err.Message)", span="150-150"];
m20_138 [cluster="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs.Level1SummaryUpdateEventArgs(string)", span="52-52"];
m20_147 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m20_331 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", span="588-588"];
m20_332 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", file="LiveTradingResultHandler.cs", label="_socket = socket", span="590-590"];
m20_333 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", file="LiveTradingResultHandler.cs", label="var tempActive = _active", span="591-591"];
m20_334 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", file="LiveTradingResultHandler.cs", label="_active = false", span="592-592"];
m20_337 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", file="LiveTradingResultHandler.cs", label=tempActive, span="595-595"];
m20_335 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", file="LiveTradingResultHandler.cs", label="var tempRegionOn = _regionOn", span="593-593"];
m20_336 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", file="LiveTradingResultHandler.cs", label="_regionOn = false", span="594-594"];
m20_339 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", file="LiveTradingResultHandler.cs", label=tempRegionOn, span="599-599"];
m20_338 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", file="LiveTradingResultHandler.cs", label="Activate()", span="597-597"];
m20_340 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", file="LiveTradingResultHandler.cs", label="SetRegionalOn()", span="601-601"];
m20_341 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Connect(QuantConnect.ToolBox.IQFeed.SocketClient)", span="588-588"];
m20_438 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1SummaryUpdateEvent(QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1SummaryUpdateEvent(QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs)", span="809-809"];
m20_456 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1SummaryUpdateEvent(QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs)", file="LiveTradingResultHandler.cs", label="Level1SummaryUpdateEvent != null", span="811-811"];
m20_457 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1SummaryUpdateEvent(QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs)", file="LiveTradingResultHandler.cs", label="Level1SummaryUpdateEvent(this, e)", span="811-811"];
m20_458 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1SummaryUpdateEvent(QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1SummaryUpdateEvent(QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs)", span="809-809"];
m20_306 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", span="566-566"];
m20_307 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", file="LiveTradingResultHandler.cs", label="_socket == null", span="568-568"];
m20_308 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", file="LiveTradingResultHandler.cs", label="throw new Exception(''Watch Item not connected'');", span="568-568"];
m20_309 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", file="LiveTradingResultHandler.cs", label="!_active", span="569-569"];
m20_310 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", file="LiveTradingResultHandler.cs", label="throw new Exception(''Cannot set Regional Quotes On, Activate first'');", span="569-569"];
m20_311 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", file="LiveTradingResultHandler.cs", label=_regionOn, span="570-570"];
m20_312 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", file="LiveTradingResultHandler.cs", label="return;", span="570-570"];
m20_313 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", file="LiveTradingResultHandler.cs", label="_socket.Send(''S,REGON,'' + _symbol + ''\r\n'')", span="571-571"];
m20_314 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", file="LiveTradingResultHandler.cs", label="_regionOn = true", span="572-572"];
m20_315 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.SetRegionalOn()", span="566-566"];
m20_250 [cluster="System.IO.TextWriter.WriteLine(string)", file="LiveTradingResultHandler.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m20_4 [cluster="QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs.Level1TextLineEventArgs(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs.Level1TextLineEventArgs(string)", span="43-43"];
m20_5 [cluster="QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs.Level1TextLineEventArgs(string)", file="LiveTradingResultHandler.cs", label="TextLine = line", span="45-45"];
m20_6 [cluster="QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs.Level1TextLineEventArgs(string)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs.Level1TextLineEventArgs(string)", span="43-43"];
m20_0 [cluster="QuantConnect.ToolBox.IQFeed.Level1ServerDisconnectedArgs.Level1ServerDisconnectedArgs(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.Level1ServerDisconnectedArgs.Level1ServerDisconnectedArgs(string)", span="27-27"];
m20_1 [cluster="QuantConnect.ToolBox.IQFeed.Level1ServerDisconnectedArgs.Level1ServerDisconnectedArgs(string)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.Level1ServerDisconnectedArgs.Level1ServerDisconnectedArgs(string)", span="27-27"];
m20_351 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Connect()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Connect()", span="637-637"];
m20_352 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Connect()", file="LiveTradingResultHandler.cs", label="ConnectToSocketAndBeginReceive(IQSocket.GetSocket())", span="639-639"];
m20_353 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Connect()", file="LiveTradingResultHandler.cs", label="Send(''S,CONNECT\r\n'')", span="640-640"];
m20_354 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Connect()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.Connect()", span="637-637"];
m20_441 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1TimerEvent(QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1TimerEvent(QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs)", span="817-817"];
m20_462 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1TimerEvent(QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs)", file="LiveTradingResultHandler.cs", label="Level1TimerEvent != null", span="819-819"];
m20_463 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1TimerEvent(QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs)", file="LiveTradingResultHandler.cs", label="Level1TimerEvent(this, e)", span="819-819"];
m20_464 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1TimerEvent(QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1TimerEvent(QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs)", span="817-817"];
m20_342 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Disconnect()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Disconnect()", span="604-604"];
m20_343 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Disconnect()", file="LiveTradingResultHandler.cs", label="DeActivate()", span="606-606"];
m20_344 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Disconnect()", file="LiveTradingResultHandler.cs", label="_socket = null", span="607-607"];
m20_345 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Disconnect()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem.Disconnect()", span="604-604"];
m20_404 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="LiveTradingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m20_350 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LiveTradingResultHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m20_442 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1NewsEvent(QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1NewsEvent(QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs)", span="825-825"];
m20_468 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1NewsEvent(QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs)", file="LiveTradingResultHandler.cs", label="Level1NewsEvent != null", span="827-827"];
m20_469 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1NewsEvent(QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs)", file="LiveTradingResultHandler.cs", label="Level1NewsEvent(this, e)", span="827-827"];
m20_470 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1NewsEvent(QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnLevel1NewsEvent(QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs)", span="825-825"];
m20_449 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="LiveTradingResultHandler.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m20_2 [cluster="QuantConnect.ToolBox.IQFeed.Level1ServerReconnectFailedArgs.Level1ServerReconnectFailedArgs(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.Level1ServerReconnectFailedArgs.Level1ServerReconnectFailedArgs(string)", span="34-34"];
m20_3 [cluster="QuantConnect.ToolBox.IQFeed.Level1ServerReconnectFailedArgs.Level1ServerReconnectFailedArgs(string)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.Level1ServerReconnectFailedArgs.Level1ServerReconnectFailedArgs(string)", span="34-34"];
m20_372 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOff()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOff()", span="660-660"];
m20_373 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOff()", file="LiveTradingResultHandler.cs", label="Send(''S,NEWSOFF\r\n'')", span="662-662"];
m20_374 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOff()", file="LiveTradingResultHandler.cs", label="IsNewsOn = false", span="663-663"];
m20_375 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOff()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOff()", span="660-660"];
m20_346 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.IQLevel1Client(int)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.IQLevel1Client(int)", span="630-630"];
m20_347 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.IQLevel1Client(int)", file="LiveTradingResultHandler.cs", label="_key = new Dictionary<string,IQLevel1WatchItem>()", span="633-633"];
m20_348 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.IQLevel1Client(int)", file="LiveTradingResultHandler.cs", label="IsNewsOn = false", span="634-634"];
m20_349 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.IQLevel1Client(int)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.IQLevel1Client(int)", span="630-630"];
m20_387 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)", span="688-688"];
m20_388 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)", file="LiveTradingResultHandler.cs", label="!_key.ContainsKey(symbol)", span="690-690"];
m20_390 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)", file="LiveTradingResultHandler.cs", label="_key[symbol].DeActivate()", span="694-694"];
m20_391 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)", file="LiveTradingResultHandler.cs", label="_key.Remove(symbol)", span="695-695"];
m20_389 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)", file="LiveTradingResultHandler.cs", label="return;", span="692-692"];
m20_392 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.Unsubscribe(string)", span="688-688"];
m20_397 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="LiveTradingResultHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m20_361 [cluster="QuantConnect.ToolBox.IQFeed.SocketClient.DisconnectFromSocket(int)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.SocketClient.DisconnectFromSocket(int)", span="46-46"];
m20_356 [cluster="QuantConnect.ToolBox.IQFeed.SocketClient.ConnectToSocketAndBeginReceive(System.Net.Sockets.Socket)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.SocketClient.ConnectToSocketAndBeginReceive(System.Net.Sockets.Socket)", span="73-73"];
m20_405 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", span="727-727"];
m20_406 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="e.textLine.StartsWith(''Q,'') || e.textLine.StartsWith(''P,'')", span="729-729"];
m20_407 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="OnLevel1SummaryUpdateEvent(new Level1SummaryUpdateEventArgs(e.textLine))", span="731-731"];
m20_409 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="e.textLine.StartsWith(''F,'')", span="734-734"];
m20_410 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="OnLevel1FundamentalEvent(new Level1FundamentalEventArgs(e.textLine))", span="736-736"];
m20_412 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="e.textLine.StartsWith(''R,'')", span="739-739"];
m20_413 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="OnLevel1RegionalEvent(new Level1RegionalEventArgs(e.textLine))", span="741-741"];
m20_415 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="e.textLine.StartsWith(''T,'')", span="744-744"];
m20_416 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="OnLevel1TimerEvent(new Level1TimerEventArgs(e.textLine))", span="746-746"];
m20_418 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="e.textLine.StartsWith(''N,'')", span="749-749"];
m20_419 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="OnLevel1NewsEvent(new Level1NewsEventArgs(e.textLine))", span="751-751"];
m20_421 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="e.textLine.StartsWith(''S,KEY,'')", span="755-755"];
m20_423 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="e.textLine.StartsWith(''S,SERVER CONNECTED'')", span="761-761"];
m20_425 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="e.textLine.StartsWith(''S,SERVER DISCONNECTED'')", span="767-767"];
m20_426 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="OnLevel1ServerDisconnected(new Level1ServerDisconnectedArgs(e.textLine))", span="769-769"];
m20_428 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="e.textLine.StartsWith(''S,SERVER RECONNECT FAILED'')", span="773-773"];
m20_429 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="OnLevel1ServerReconnectFailed(new Level1ServerReconnectFailedArgs(e.textLine))", span="775-775"];
m20_431 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="e.textLine.StartsWith(''S,IP,'')", span="779-779"];
m20_433 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="e.textLine.StartsWith(''S,CUST,'')", span="785-785"];
m20_435 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="OnLevel1UnknownEvent(new Level1TextLineEventArgs(e.textLine))", span="791-791"];
m20_408 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="return;", span="732-732"];
m20_411 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="return;", span="737-737"];
m20_414 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="return;", span="742-742"];
m20_417 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="return;", span="747-747"];
m20_420 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="return;", span="752-752"];
m20_422 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="return;", span="758-758"];
m20_424 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="return;", span="764-764"];
m20_427 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="return;", span="770-770"];
m20_430 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="return;", span="776-776"];
m20_432 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="return;", span="782-782"];
m20_434 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="return;", span="788-788"];
m20_436 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.OnTextLineEvent(QuantConnect.ToolBox.IQFeed.TextLineEventArgs)", span="727-727"];
m20_143 [cluster="string.IsNullOrEmpty(string)", file="LiveTradingResultHandler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m20_368 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOn()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOn()", span="655-655"];
m20_369 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOn()", file="LiveTradingResultHandler.cs", label="Send(''S,NEWSON\r\n'')", span="657-657"];
m20_370 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOn()", file="LiveTradingResultHandler.cs", label="IsNewsOn = true", span="658-658"];
m20_371 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOn()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetNewsOn()", span="655-655"];
m20_146 [cluster="QuantConnect.ToolBox.IQFeed.Time.Time(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.Time.Time(string)", span="31-31"];
m20_362 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetClientName(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetClientName(string)", span="647-647"];
m20_363 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetClientName(string)", file="LiveTradingResultHandler.cs", label="Send(''S,SET CLIENT NAME,'' + name + ''\r\n'')", span="649-649"];
m20_364 [cluster="QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetClientName(string)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.IQLevel1Client.SetClientName(string)", span="647-647"];
m20_265 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", span="500-500"];
m20_266 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="var fields = line.Split(',')", span="502-502"];
m20_267 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_symbol = fields[1]", span="503-503"];
m20_268 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[3], out _regionalBid)", span="504-504"];
m20_270 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[4], out _regionalBidSize)", span="505-505"];
m20_272 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_regionalBidTime = new Time(fields[5])", span="506-506"];
m20_273 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!double.TryParse(fields[6], out _regionalAsk)", span="507-507"];
m20_275 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="!int.TryParse(fields[7], out _regionalAskSize)", span="508-508"];
m20_277 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_regionalAskTime = new Time(fields[8])", span="509-509"];
m20_278 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_fractionDisplayCode = fields[9]", span="510-510"];
m20_279 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_decimalPrecision = fields[10]", span="511-511"];
m20_280 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_marketCenter = fields[11]", span="512-512"];
m20_269 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_regionalBid = 0", span="504-504"];
m20_271 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_regionalBidSize = 0", span="505-505"];
m20_274 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_regionalAsk = 0", span="507-507"];
m20_276 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="_regionalAskSize = 0", span="508-508"];
m20_281 [cluster="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs.Level1RegionalEventArgs(string)", span="500-500"];
m20_142 [cluster="int.TryParse(string, out int)", file="LiveTradingResultHandler.cs", label="Entry int.TryParse(string, out int)", span="0-0"];
m20_471 [file="LiveTradingResultHandler.cs", label="QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs", span=""];
m20_472 [file="LiveTradingResultHandler.cs", label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", span=""];
m20_473 [file="LiveTradingResultHandler.cs", label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", span=""];
m20_474 [file="LiveTradingResultHandler.cs", label="QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs", span=""];
m20_475 [file="LiveTradingResultHandler.cs", label="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs", span=""];
m20_476 [file="LiveTradingResultHandler.cs", label="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs", span=""];
m20_477 [file="LiveTradingResultHandler.cs", label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", span=""];
m20_478 [file="LiveTradingResultHandler.cs", label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", span=""];
m21_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.AlphaAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", file="Loader.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.AlphaAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", span="92-92"];
m21_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.AlphaAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", file="Loader.cs", label="Alpha = alpha", span="94-94"];
m21_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.AlphaAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", file="Loader.cs", label="AnalysisPeriod = analysisPeriod", span="95-95"];
m21_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.AlphaAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", file="Loader.cs", label="CurrentValues = InitialValues = initialValues", span="98-98"];
m21_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.AlphaAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", file="Loader.cs", label="AnalysisEndTimeUtc = Alpha.GeneratedTimeUtc + analysisPeriod", span="102-102"];
m21_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.AlphaAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", file="Loader.cs", label="AlphaPeriodEndTimeUtc = alpha.GeneratedTimeUtc + alpha.Period", span="103-103"];
m21_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.AlphaAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", file="Loader.cs", label="_contextStorage = new Dictionary<string, object>()", span="96-96"];
m21_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.AlphaAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", file="Loader.cs", label="_previousEvaluationTimeUtc = CurrentValues.TimeUtc", span="100-100"];
m21_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.AlphaAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", file="Loader.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.AlphaAnalysisContext(QuantConnect.Algorithm.Framework.Alphas.Alpha, QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues, System.TimeSpan)", span="92-92"];
m21_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.Get<T>(string)", file="Loader.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.Get<T>(string)", span="128-128"];
m21_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.Get<T>(string)", file="Loader.cs", label="return default(T);", span="136-136"];
m21_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.Get<T>(string)", file="Loader.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.Get<T>(string)", span="128-128"];
m21_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", file="Loader.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", span="109-109"];
m21_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", file="Loader.cs", label="_previousEvaluationTimeUtc = CurrentValues.TimeUtc", span="111-111"];
m21_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", file="Loader.cs", label="values.TimeUtc >= AlphaPeriodEndTimeUtc", span="113-113"];
m21_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", file="Loader.cs", label="CurrentValues = values", span="118-118"];
m21_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", file="Loader.cs", label="AlphaPeriodClosed = true", span="115-115"];
m21_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", file="Loader.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.SetCurrentValues(QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues)", span="109-109"];
m21_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.Set(string, object)", file="Loader.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.Set(string, object)", span="144-144"];
m21_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.Set(string, object)", file="Loader.cs", label="_contextStorage[key] = value", span="146-146"];
m21_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.Set(string, object)", file="Loader.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext.Set(string, object)", span="144-144"];
m21_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Loader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m21_26 [file="Loader.cs", label="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext", span=""];
m22_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", file="LocalFileSubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", span="60-60"];
m22_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", file="LocalFileSubscriptionStreamReader.cs", label="return _streamReader.ReadLine();", span="62-62"];
m22_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", file="LocalFileSubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.ReadLine()", span="60-60"];
m22_4 [cluster="Unk.Unzip", file="LocalFileSubscriptionStreamReader.cs", label="Entry Unk.Unzip", span=""];
m22_3 [cluster="string.GetExtension()", file="LocalFileSubscriptionStreamReader.cs", label="Entry string.GetExtension()", span="197-197"];
m22_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(string)", file="LocalFileSubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(string)", span="33-33"];
m22_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(string)", file="LocalFileSubscriptionStreamReader.cs", label="_streamReader = source.GetExtension() == ''.zip''\r\n                ? Compression.Unzip(source, out _zipFile)\r\n                : new StreamReader(source)", span="36-38"];
m22_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(string)", file="LocalFileSubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(string)", span="33-33"];
m22_9 [cluster="System.IO.StreamReader.ReadLine()", file="LocalFileSubscriptionStreamReader.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m22_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", span="79-79"];
m22_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs", label="_streamReader != null", span="81-81"];
m22_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs", label="_streamReader.Dispose()", span="83-83"];
m22_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", color=green, community=0, file="LocalFileSubscriptionStreamReader.cs", label="_streamReader = null", prediction=57, span="84-84"];
m22_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs", label="_zipFile != null", span="86-86"];
m22_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Dispose()", span="79-79"];
m22_21 [cluster="System.IO.TextReader.Dispose()", file="LocalFileSubscriptionStreamReader.cs", label="Entry System.IO.TextReader.Dispose()", span="0-0"];
m22_22 [cluster="Unk.Dispose", file="LocalFileSubscriptionStreamReader.cs", label="Entry Unk.Dispose", span=""];
m22_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Close()", file="LocalFileSubscriptionStreamReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Close()", span="68-68"];
m22_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Close()", file="LocalFileSubscriptionStreamReader.cs", label="_streamReader != null", span="70-70"];
m22_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Close()", file="LocalFileSubscriptionStreamReader.cs", label="_streamReader.Close()", span="72-72"];
m22_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Close()", file="LocalFileSubscriptionStreamReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.Close()", span="68-68"];
m22_14 [cluster="System.IO.StreamReader.Close()", file="LocalFileSubscriptionStreamReader.cs", label="Entry System.IO.StreamReader.Close()", span="0-0"];
m22_5 [cluster="System.IO.StreamReader.StreamReader(string)", file="LocalFileSubscriptionStreamReader.cs", label="Entry System.IO.StreamReader.StreamReader(string)", span="0-0"];
m22_23 [file="LocalFileSubscriptionStreamReader.cs", label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader", span=""];
m23_211 [cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108"];
m23_140 [cluster="System.Type.GetMethods()", file="QCAlgorithm.Indicators.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m23_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851"];
m23_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label=_locked, span="853-853"];
m23_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="timeZone == null", span="858-858"];
m23_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="_timeKeeper.AddTimeZone(timeZone)", span="859-859"];
m23_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(timeZone)", span="860-860"];
m23_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="TimeRules.SetDefaultTimeZone(timeZone)", span="863-863"];
m23_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Algorithm.SetTimeZone(): Cannot change time zone after algorithm running.'');", span="855-855"];
m23_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentNullException(''timeZone'');", span="858-858"];
m23_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851"];
m23_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m23_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Name = GetType().Name", span="92-92"];
m23_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Status = AlgorithmStatus.Running", span="93-93"];
m23_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="IsWarmingUp = true", span="96-96"];
m23_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="_startDate = new DateTime(1998, 01, 01)", span="103-103"];
m23_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="_endDate = DateTime.Now.AddDays(-1)", span="104-104"];
m23_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="_timeKeeper = new TimeKeeper(_startDate, new[] { TimeZones.NewYork })", span="107-107"];
m23_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork)", span="109-109"];
m23_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Settings = new AlgorithmSettings()", span="111-111"];
m23_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="SubscriptionManager = new SubscriptionManager(Settings, _timeKeeper)", span="114-114"];
m23_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Securities = new SecurityManager(_timeKeeper)", span="116-116"];
m23_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Transactions = new SecurityTransactionManager(Securities)", span="117-117"];
m23_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Portfolio = new SecurityPortfolioManager(Securities, Transactions)", span="118-118"];
m23_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="BrokerageModel = new DefaultBrokerageModel()", span="119-119"];
m23_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Notify = new NotificationManager(false)", span="120-120"];
m23_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="_runMode = RunMode.Series", span="123-123"];
m23_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="_locked = false", span="126-126"];
m23_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="129-129"];
m23_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="132-132"];
m23_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="UniverseManager = new UniverseManager()", span="135-135"];
m23_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Universe = new UniverseDefinitions(this)", span="136-136"];
m23_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="UniverseSettings = new UniverseSettings(Resolution.Minute, 2m, true, false, TimeSpan.FromDays(1))", span="137-137"];
m23_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Schedule = new ScheduleManager(Securities, TimeZone)", span="140-140"];
m23_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="TradeBuilder = new TradeBuilder(FillGroupingMethod.FillToFill, FillMatchingMethod.FIFO)", span="143-143"];
m23_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(new DefaultBrokerageModel(AccountType.Margin),\r\n                                                                        new FuncSecuritySeeder(GetLastKnownPrice))", span="145-146"];
m23_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="CandlestickPatterns = new CandlestickPatterns(this)", span="148-148"];
m23_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="TradingCalendar = new TradingCalendar(Securities, _marketHoursDatabase)", span="151-151"];
m23_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="OptionChainProvider = new EmptyOptionChainProvider()", span="153-153"];
m23_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m23_427 [cluster="QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", span="48-48"];
m23_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222"];
m23_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.Indicators.cs", label="return _locked;", span="1224-1224"];
m23_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222"];
m23_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832"];
m23_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.Indicators.cs", label="DateTimeZone tz", span="834-834"];
m23_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.Indicators.cs", label="tz = DateTimeZoneProviders.Tzdb[timeZone]", span="837-837"];
m23_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentException(string.Format(''TimeZone with id '{0}' was not found. For a complete list of time zones please visit: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones'', timeZone));", span="841-841"];
m23_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.Indicators.cs", label=DateTimeZoneNotFoundException, span="839-839"];
m23_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.Indicators.cs", label="SetTimeZone(tz)", span="844-844"];
m23_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832"];
m23_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m23_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524"];
m23_450 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="return AddSecurity<Crypto>(SecurityType.Crypto, ticker, resolution, market, fillDataForward, leverage, false);", span="1526-1526"];
m23_451 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524"];
m23_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556"];
m23_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.Indicators.cs", label=availableDataTypes, span="558-558"];
m23_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.Indicators.cs", label="SubscriptionManager.AvailableDataTypes[dataFeed.Key] = dataFeed.Value", span="560-560"];
m23_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556"];
m23_212 [cluster="QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", span="48-48"];
m23_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var security = SecurityManager.CreateSecurity(typeof(T), Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="1621-1622"];
m23_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611"];
m23_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="1614-1614"];
m23_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="1617-1617"];
m23_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="1618-1618"];
m23_498 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="AddToUserDefinedUniverse(security)", span="1624-1624"];
m23_499 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611"];
m23_533 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710"];
m23_534 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.Indicators.cs", label="return SymbolCache.GetSymbol(ticker);", span="1712-1712"];
m23_535 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710"];
m23_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009"];
m23_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.Indicators.cs", label="SetCash((decimal)startingCash)", span="1011-1011"];
m23_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009"];
m23_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m23_199 [cluster="string.Format(string, object)", file="QCAlgorithm.Indicators.cs", label="Entry string.Format(string, object)", span="0-0"];
m23_536 [cluster="QuantConnect.SymbolCache.GetSymbol(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.SymbolCache.GetSymbol(string)", span="47-47"];
m23_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m23_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="var end = new DateTime(year, month, day)", span="1100-1100"];
m23_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="end = end.Date.AddDays(1).Subtract(TimeSpan.FromTicks(1))", span="1103-1103"];
m23_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="SetEndDate(end)", span="1105-1105"];
m23_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label=Exception, span="1107-1107"];
m23_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1109-1109"];
m23_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m23_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732"];
m23_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732"];
m23_476 [cluster="Unk.Any", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Any", span=""];
m23_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m23_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Indicators.cs", label="BrokerageModel = model", span="897-897"];
m23_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Indicators.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(model, new FuncSecuritySeeder(GetLastKnownPrice))", span="901-901"];
m23_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Indicators.cs", label="!_userSetSecurityInitializer", span="898-898"];
m23_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Indicators.cs", label="Securities.Values", span="904-904"];
m23_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Indicators.cs", label="var leverage = security.Leverage", span="909-909"];
m23_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Indicators.cs", label="SecurityInitializer.Initialize(security, false)", span="912-912"];
m23_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Indicators.cs", label="security.SetLeverage(leverage)", span="915-915"];
m23_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m23_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m23_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.Indicators.cs", label="SetCash((decimal)startingCash)", span="1022-1022"];
m23_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m23_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175"];
m23_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label=_liveMode, span="1178-1178"];
m23_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="end > DateTime.Now.Date.AddDays(-1)", span="1182-1182"];
m23_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="end < _startDate", span="1190-1190"];
m23_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="1197-1197"];
m23_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="return;", span="1178-1178"];
m23_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="end = DateTime.Now.Date.AddDays(-1)", span="1184-1184"];
m23_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="_startDate != new DateTime()", span="1188-1188"];
m23_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Please select end date greater than start date.'');", span="1192-1192"];
m23_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="!_locked", span="1200-1200"];
m23_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="_endDate = end", span="1202-1202"];
m23_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="1206-1206"];
m23_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175"];
m23_475 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m23_233 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654"];
m23_272 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m23_37 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m23_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249"];
m23_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.Indicators.cs", label="TradeBuilder = tradeBuilder", span="1251-1251"];
m23_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.Indicators.cs", label="TradeBuilder.SetLiveMode(LiveMode)", span="1252-1252"];
m23_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249"];
m23_554 [cluster="Unk.CreateSymbol", file="QCAlgorithm.Indicators.cs", label="Entry Unk.CreateSymbol", span=""];
m23_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789"];
m23_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789"];
m23_525 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683"];
m23_526 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.Indicators.cs", label="Debug(''Quit(): '' + message)", span="1685-1685"];
m23_527 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.Indicators.cs", label="Status = AlgorithmStatus.Stopped", span="1686-1686"];
m23_528 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683"];
m23_39 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m23_452 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534"];
m23_453 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Security security", span="1536-1536"];
m23_454 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Securities.TryGetValue(symbol, out security)", span="1537-1537"];
m23_459 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="var universe = UniverseManager.Values.OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(symbol))", span="1548-1548"];
m23_461 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="var ret = universe.Remove(symbol)", span="1551-1551"];
m23_462 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="symbol == _benchmarkSymbol", span="1554-1554"];
m23_463 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Securities.Remove(symbol)", span="1556-1556"];
m23_455 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Transactions.CancelOpenOrders(security.Symbol)", span="1540-1540"];
m23_468 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="return false;", span="1567-1567"];
m23_456 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="security.Cache.Reset()", span="1543-1543"];
m23_457 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="security.Invested", span="1546-1546"];
m23_458 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Liquidate(security.Symbol)", span="1546-1546"];
m23_460 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="universe != null", span="1549-1549"];
m23_466 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="SubscriptionManager.HasCustomData = universe.Members.Any(x => x.Value.Subscriptions.Any(y => y.IsCustomData))", span="1562-1562"];
m23_467 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="return ret;", span="1564-1564"];
m23_464 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="security = CreateBenchmarkSecurity()", span="1558-1558"];
m23_465 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="AddToUserDefinedUniverse(security)", span="1559-1559"];
m23_469 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534"];
m23_404 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m23_85 [cluster="Unk.AddEquity", file="QCAlgorithm.Indicators.cs", label="Entry Unk.AddEquity", span=""];
m23_141 [cluster="Unk.Where", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Where", span=""];
m23_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740"];
m23_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740"];
m23_295 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m23_42 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m23_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528"];
m23_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.Indicators.cs", label="string value", span="530-530"];
m23_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.Indicators.cs", label="return _parameters.TryGetValue(name, out value) ? value : null;", span="531-531"];
m23_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528"];
m23_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048"];
m23_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.Indicators.cs", label="!_locked", span="1050-1050"];
m23_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.Indicators.cs", label="Portfolio.SetCash(symbol, startingCash, conversionRate)", span="1052-1052"];
m23_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1056-1056"];
m23_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048"];
m23_47 [cluster="QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", span="51-51"];
m23_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873"];
m23_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.Indicators.cs", label="mode != RunMode.Parallel", span="875-875"];
m23_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.Indicators.cs", label="return;", span="875-875"];
m23_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.Indicators.cs", label="Debug(''Algorithm.SetRunMode(): RunMode-Parallel Type has been deprecated. Series analysis selected instead'')", span="876-876"];
m23_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873"];
m23_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597"];
m23_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.Indicators.cs", label="OptionChainProvider = optionChainProvider", span="599-599"];
m23_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597"];
m23_487 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577"];
m23_488 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.Indicators.cs", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m)", span="1584-1584"];
m23_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577"];
m23_345 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", span="30-30"];
m23_484 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1562-1562"];
m23_87 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="499-499"];
m23_88 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Value", span="499-499"];
m23_89 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="499-499"];
m23_120 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="securityInitializer(security)", span="590-590"];
m23_119 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="590-590"];
m23_121 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="590-590"];
m23_148 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="624-624"];
m23_151 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="625-625"];
m23_154 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="626-626"];
m23_158 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="627-627"];
m23_149 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Name == ''OnData''", span="624-624"];
m23_150 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="624-624"];
m23_152 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.DeclaringType != typeof(QCAlgorithm)", span="625-625"];
m23_153 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="625-625"];
m23_155 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.GetParameters().Length == 1", span="626-626"];
m23_156 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="626-626"];
m23_159 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.GetParameters()[0].ParameterType == typeof (Slice)", span="627-627"];
m23_160 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="627-627"];
m23_252 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Key.Value == symbol", span="967-967"];
m23_251 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="967-967"];
m23_253 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="967-967"];
m23_478 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Members.ContainsKey(symbol)", span="1548-1548"];
m23_477 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1548-1548"];
m23_481 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1562-1562"];
m23_479 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1548-1548"];
m23_482 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Value.Subscriptions.Any(y => y.IsCustomData)", span="1562-1562"];
m23_483 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1562-1562"];
m23_485 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="y.IsCustomData", span="1562-1562"];
m23_486 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1562-1562"];
m23_145 [cluster="Unk.Call", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Call", span=""];
m23_190 [cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68"];
m23_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813"];
m23_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813"];
m23_30 [cluster="System.DateTime.DateTime(int, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m23_115 [cluster="QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="31-31"];
m23_403 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442"];
m23_473 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m23_555 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771"];
m23_556 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.Indicators.cs", label="historyProvider == null", span="1773-1773"];
m23_558 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.Indicators.cs", label="HistoryProvider = historyProvider", span="1777-1777"];
m23_557 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentNullException(''Algorithm.SetHistoryProvider(): Historical data provider cannot be null.'');", span="1775-1775"];
m23_559 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771"];
m23_222 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m23_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946"];
m23_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.Indicators.cs", label="string market = Market.USA", span="948-948"];
m23_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.Indicators.cs", label="this.BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="950-950"];
m23_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.Indicators.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(symbol, securityType, market)", span="952-952"];
m23_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946"];
m23_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963"];
m23_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.Indicators.cs", label="symbol = symbol.ToUpper()", span="966-966"];
m23_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.Indicators.cs", label="var security = Securities.FirstOrDefault(x => x.Key.Value == symbol).Value", span="967-967"];
m23_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.Indicators.cs", label="_benchmarkSymbol = security == null\r\n                ? QuantConnect.Symbol.Create(symbol, SecurityType.Equity, Market.USA)\r\n                : security.Symbol", span="968-970"];
m23_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963"];
m23_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m23_502 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Indicators.cs", label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="1635-1635"];
m23_504 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Indicators.cs", label="_debugMessages.Enqueue(message)", span="1636-1636"];
m23_505 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Indicators.cs", label="_previousDebugMessage = message", span="1637-1637"];
m23_503 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Indicators.cs", label="return;", span="1635-1635"];
m23_506 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m23_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823"];
m23_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="_timeKeeper.SetUtcDateTime(frontier)", span="825-825"];
m23_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823"];
m23_377 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="488-488"];
m23_508 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646"];
m23_509 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.Indicators.cs", label="!_liveMode && message == ''''", span="1648-1648"];
m23_511 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.Indicators.cs", label="_logMessages.Enqueue(message)", span="1649-1649"];
m23_510 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.Indicators.cs", label="return;", span="1648-1648"];
m23_512 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646"];
m23_52 [cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", span="18-18"];
m23_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769"];
m23_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769"];
m23_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m23_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.Indicators.cs", label="Benchmark = new FuncBenchmark(benchmark)", span="989-989"];
m23_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m23_316 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.Indicators.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m23_51 [cluster="QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", span="34-34"];
m23_406 [cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", span="49-49"];
m23_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m23_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="_benchmarkSymbol = symbol", span="979-979"];
m23_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m23_314 [cluster="System.DateTime.DateTime()", file="QCAlgorithm.Indicators.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m23_82 [cluster="Unk.Select", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Select", span=""];
m23_31 [cluster="System.DateTime.AddDays(double)", file="QCAlgorithm.Indicators.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m23_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m23_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.Indicators.cs", label="SetSecurityInitializer(new FuncSecurityInitializer(securityInitializer))", span="581-581"];
m23_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m23_471 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="182-182"];
m23_102 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", span="59-59"];
m23_94 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m23_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779"];
m23_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779"];
m23_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725"];
m23_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725"];
m23_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651"];
m23_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651"];
m23_41 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m23_57 [cluster="System.NotImplementedException.NotImplementedException(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m23_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m23_513 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Indicators.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1660-1660"];
m23_515 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Indicators.cs", label="_errorMessages.Enqueue(message)", span="1661-1661"];
m23_516 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Indicators.cs", label="_previousErrorMessage = message", span="1662-1662"];
m23_514 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Indicators.cs", label="return;", span="1660-1660"];
m23_517 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m23_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797"];
m23_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797"];
m23_84 [cluster="Unk.TryGetValue", file="QCAlgorithm.Indicators.cs", label="Entry Unk.TryGetValue", span=""];
m23_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118"];
m23_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.Indicators.cs", label="_algorithmId = algorithmId", span="1120-1120"];
m23_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118"];
m23_174 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m23_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278"];
m23_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="return AddSecurity(securityType, symbol, resolution, null, fillDataForward, leverage, extendedMarketHours);", span="1280-1280"];
m23_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278"];
m23_565 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798"];
m23_566 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Indicators.cs", label="Status = status", span="1800-1800"];
m23_567 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798"];
m23_278 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m23_49 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="47-47"];
m23_209 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m23_34 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m23_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345"];
m23_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="return AddSecurity<Equity>(SecurityType.Equity, ticker, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="1347-1347"];
m23_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345"];
m23_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m23_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="var start = new DateTime(year, month, day)", span="1075-1075"];
m23_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="start = start.Date", span="1078-1078"];
m23_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="SetStartDate(start)", span="1080-1080"];
m23_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label=Exception, span="1082-1082"];
m23_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1084-1084"];
m23_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m23_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472"];
m23_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="Benchmark == null", span="475-475"];
m23_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="_benchmarkSymbol == null || _benchmarkSymbol == QuantConnect.Symbol.Empty", span="478-478"];
m23_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="Securities.Select(x => x.Value).OfType<Option>()", span="499-499"];
m23_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)", span="480-480"];
m23_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="Security security", span="486-486"];
m23_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="!Securities.TryGetValue(_benchmarkSymbol, out security)", span="487-487"];
m23_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="security = CreateBenchmarkSecurity()", span="490-490"];
m23_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="Benchmark = new SecurityBenchmark(security)", span="495-495"];
m23_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="AddToUserDefinedUniverse(security)", span="491-491"];
m23_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="var underlying = option.Symbol.Underlying", span="501-501"];
m23_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="506-506"];
m23_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="option.Underlying = equity", span="510-510"];
m23_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="Security equity", span="502-502"];
m23_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="!Securities.TryGetValue(underlying, out equity)", span="503-503"];
m23_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="equity.VolatilityModel == VolatilityModel.Null", span="513-513"];
m23_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="equity.VolatilityModel = new StandardDeviationOfReturnsVolatilityModel(periods)", span="516-516"];
m23_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="int periods = 30", span="515-515"];
m23_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472"];
m23_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468"];
m23_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var option = (Option)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1470-1471"];
m23_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var underlying = option.Symbol.Underlying", span="1474-1474"];
m23_438 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="1478-1478"];
m23_439 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="option.Underlying = equity", span="1480-1480"];
m23_440 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="AddToUserDefinedUniverse(option)", span="1482-1482"];
m23_441 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="return option;", span="1484-1484"];
m23_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Security equity", span="1475-1475"];
m23_437 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="!Securities.TryGetValue(underlying, out equity)", span="1476-1476"];
m23_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468"];
m23_198 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m23_53 [cluster="QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", span="25-25"];
m23_147 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="QCAlgorithm.Indicators.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m23_157 [cluster="Unk.GetParameters", file="QCAlgorithm.Indicators.cs", label="Entry Unk.GetParameters", span=""];
m23_86 [cluster="QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", span="68-68"];
m23_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761"];
m23_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="OnEndOfDay(symbol.ToString())", span="763-763"];
m23_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761"];
m23_46 [cluster="System.TimeSpan.FromDays(double)", file="QCAlgorithm.Indicators.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m23_142 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.Indicators.cs", label="Entry Unk.FirstOrDefault", span=""];
m23_407 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m23_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744"];
m23_547 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.Indicators.cs", label="Resolution resolution", span="1747-1747"];
m23_548 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.Indicators.cs", label=_liveMode, span="1748-1748"];
m23_549 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.Indicators.cs", label="resolution = Resolution.Second", span="1750-1750"];
m23_550 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.Indicators.cs", label="var hasNonAddSecurityUniverses = (\r\n                    from kvp in UniverseManager\r\n                    let config = kvp.Value.Configuration\r\n                    let symbol = UserDefinedUniverse.CreateSymbol(config.SecurityType, config.Market)\r\n                    where config.Symbol != symbol\r\n                    select kvp).Any()", span="1755-1760"];
m23_551 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.Indicators.cs", label="resolution = hasNonAddSecurityUniverses ? UniverseSettings.Resolution : Resolution.Daily", span="1762-1762"];
m23_552 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.Indicators.cs", label="return SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer, _benchmarkSymbol, resolution, true, 1m, false, true, false, LiveMode);", span="1764-1764"];
m23_553 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744"];
m23_81 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", span="31-31"];
m23_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230"];
m23_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.Indicators.cs", label="!_locked", span="1232-1232"];
m23_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.Indicators.cs", label="_liveMode = live", span="1234-1234"];
m23_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.Indicators.cs", label="Notify = new NotificationManager(live)", span="1235-1235"];
m23_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.Indicators.cs", label="TradeBuilder.SetLiveMode(live)", span="1236-1236"];
m23_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.Indicators.cs", label=live, span="1238-1238"];
m23_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.Indicators.cs", label="_startDate = DateTime.Today", span="1240-1240"];
m23_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.Indicators.cs", label="_endDate = QuantConnect.Time.EndOfTime", span="1241-1241"];
m23_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230"];
m23_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538"];
m23_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Indicators.cs", label="_parameters = parameters.ToDictionary()", span="541-541"];
m23_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Indicators.cs", label="ParameterAttribute.ApplyAttributes(parameters, this)", span="544-544"];
m23_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Indicators.cs", label=Exception, span="546-546"];
m23_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Indicators.cs", label="Error(''Error applying parameter values: '' + err.Message)", span="548-548"];
m23_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538"];
m23_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885"];
m23_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.Indicators.cs", label="SetBrokerageModel(Brokerages.BrokerageModel.Create(brokerage, accountType))", span="887-887"];
m23_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885"];
m23_294 [cluster="System.TimeSpan.FromTicks(long)", file="QCAlgorithm.Indicators.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m23_144 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="QCAlgorithm.Indicators.cs", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0"];
m23_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462"];
m23_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.Indicators.cs", label="throw new NotImplementedException(''Please override the Initialize() method'');", span="465-465"];
m23_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462"];
m23_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718"];
m23_537 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="market == null", span="1721-1721"];
m23_538 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1723-1723"];
m23_539 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1725-1725"];
m23_541 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="!SymbolCache.TryGetSymbol(ticker, out symbol)", span="1730-1730"];
m23_542 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="symbol = QuantConnect.Symbol.Create(ticker, securityType, market)", span="1732-1732"];
m23_543 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1735-1736"];
m23_540 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="Symbol symbol", span="1729-1729"];
m23_544 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="AddToUserDefinedUniverse(security)", span="1737-1737"];
m23_545 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="return (T)security;", span="1738-1738"];
m23_546 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718"];
m23_146 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="QCAlgorithm.Indicators.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m23_500 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m23_402 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m23_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m23_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.Indicators.cs", label="_userSetSecurityInitializer = true", span="571-571"];
m23_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.Indicators.cs", label="SecurityInitializer = securityInitializer", span="572-572"];
m23_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m23_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030"];
m23_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.Indicators.cs", label="!_locked", span="1032-1032"];
m23_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.Indicators.cs", label="Portfolio.SetCash(startingCash)", span="1034-1034"];
m23_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1038-1038"];
m23_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030"];
m23_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m23_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.Indicators.cs", label="return AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours);", span="1265-1265"];
m23_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m23_501 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m23_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805"];
m23_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805"];
m23_43 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m23_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616"];
m23_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="!_checkedForOnDataSlice", span="619-619"];
m23_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="_onDataSlice(slice)", span="643-643"];
m23_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="_checkedForOnDataSlice = true", span="621-621"];
m23_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="_onDataSlice != null", span="641-641"];
m23_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="var method = GetType().GetMethods()\r\n                    .Where(x => x.Name == ''OnData'')\r\n                    .Where(x => x.DeclaringType != typeof(QCAlgorithm))\r\n                    .Where(x => x.GetParameters().Length == 1)\r\n                    .FirstOrDefault(x => x.GetParameters()[0].ParameterType == typeof (Slice))", span="623-627"];
m23_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="method == null", span="629-629"];
m23_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="var call = Expression.Call(self, method, parameter)", span="636-636"];
m23_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="return;", span="631-631"];
m23_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="var self = Expression.Constant(this)", span="634-634"];
m23_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="var parameter = Expression.Parameter(typeof (Slice), ''data'')", span="635-635"];
m23_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="var lambda = Expression.Lambda<Action<Slice>>(call, parameter)", span="637-637"];
m23_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="_onDataSlice = lambda.Compile()", span="638-638"];
m23_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616"];
m23_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var canonicalSecurity = (Option) SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1378-1380"];
m23_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359"];
m23_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="market == null", span="1361-1361"];
m23_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var alias = ''?'' + underlying", span="1370-1370"];
m23_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(underlying, SecurityType.Option, market, alias)", span="1373-1373"];
m23_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, underlying, SecurityType.Option)", span="1376-1376"];
m23_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, underlying, SecurityType.Option, CashBook.AccountCurrency)", span="1377-1377"];
m23_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1388-1388"];
m23_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Option, out market)", span="1363-1363"];
m23_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Symbol canonicalSymbol", span="1369-1369"];
m23_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Option);", span="1365-1365"];
m23_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1371-1371"];
m23_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1386-1386"];
m23_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1390-1390"];
m23_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="canonicalSecurity.IsTradable = false", span="1381-1381"];
m23_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Securities.Add(canonicalSecurity)", span="1382-1382"];
m23_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="universe = new OptionChainUniverse(canonicalSecurity, settings, SecurityInitializer, LiveMode)", span="1389-1389"];
m23_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="return canonicalSecurity;", span="1393-1393"];
m23_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Universe universe", span="1385-1385"];
m23_400 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359"];
m23_405 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m23_480 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m23_244 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m23_560 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784"];
m23_561 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.Indicators.cs", label="exception == null", span="1786-1786"];
m23_563 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.Indicators.cs", label="RunTimeError = exception", span="1791-1791"];
m23_562 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentNullException(''Algorithm.SetRunTimeError(): Algorithm.RunTimeError cannot be set to null.'');", span="1788-1788"];
m23_564 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784"];
m23_101 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m23_376 [cluster="QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", span="60-60"];
m23_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450"];
m23_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var future = (Future)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1452-1453"];
m23_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="AddToUserDefinedUniverse(future)", span="1455-1455"];
m23_431 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="return future;", span="1457-1457"];
m23_432 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450"];
m23_232 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="28-28"];
m23_44 [cluster="QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", span="45-45"];
m23_417 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var canonicalSecurity = (Future)SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1424-1426"];
m23_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405"];
m23_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="market == null", span="1407-1407"];
m23_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var alias = ''/'' + symbol", span="1416-1416"];
m23_414 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(symbol, SecurityType.Future, market, alias)", span="1419-1419"];
m23_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, symbol, SecurityType.Future)", span="1422-1422"];
m23_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, symbol, SecurityType.Future, CashBook.AccountCurrency)", span="1423-1423"];
m23_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1434-1434"];
m23_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Future, out market)", span="1409-1409"];
m23_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Symbol canonicalSymbol", span="1415-1415"];
m23_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Future);", span="1411-1411"];
m23_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1417-1417"];
m23_421 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1432-1432"];
m23_424 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1436-1436"];
m23_418 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="canonicalSecurity.IsTradable = false", span="1427-1427"];
m23_419 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Securities.Add(canonicalSecurity)", span="1428-1428"];
m23_423 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="universe = new FuturesChainUniverse(canonicalSecurity, settings, SubscriptionManager, SecurityInitializer)", span="1435-1435"];
m23_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="return canonicalSecurity;", span="1439-1439"];
m23_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Universe universe", span="1431-1431"];
m23_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405"];
m23_48 [cluster="QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", span="61-61"];
m23_50 [cluster="QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", span="33-33"];
m23_45 [cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59"];
m23_260 [cluster="QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", span="30-30"];
m23_401 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m23_329 [cluster="System.DateTime.AddTicks(long)", file="QCAlgorithm.Indicators.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m23_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293"];
m23_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="securityType == SecurityType.Option", span="1296-1296"];
m23_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="return AddOption(symbol, resolution, market, fillDataForward, leverage);", span="1298-1298"];
m23_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="securityType == SecurityType.Future", span="1301-1301"];
m23_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="return AddFuture(symbol, resolution, market, fillDataForward, leverage);", span="1303-1303"];
m23_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="market == null", span="1308-1308"];
m23_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1310-1310"];
m23_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1312-1312"];
m23_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="!SymbolCache.TryGetSymbol(symbol, out symbolObject)", span="1317-1317"];
m23_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="symbolObject = QuantConnect.Symbol.Create(symbol, securityType, market)", span="1319-1319"];
m23_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                    symbolObject, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1322-1323"];
m23_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="Symbol symbolObject", span="1316-1316"];
m23_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="AddToUserDefinedUniverse(security)", span="1325-1325"];
m23_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="return security;", span="1326-1326"];
m23_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label=Exception, span="1328-1328"];
m23_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="Error(''Algorithm.AddSecurity(): '' + err)", span="1330-1330"];
m23_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="return null;", span="1331-1331"];
m23_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293"];
m23_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753"];
m23_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753"];
m23_36 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m23_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596"];
m23_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="AddData<T>(symbol, resolution, TimeZones.NewYork, fillDataForward, leverage)", span="1599-1599"];
m23_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596"];
m23_210 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m23_315 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m23_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496"];
m23_444 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="return AddSecurity<Forex>(SecurityType.Forex, ticker, resolution, market, fillDataForward, leverage, false);", span="1498-1498"];
m23_445 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496"];
m23_77 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m23_529 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695"];
m23_530 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.Indicators.cs", label=quit, span="1697-1697"];
m23_531 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.Indicators.cs", label="Status = AlgorithmStatus.Stopped", span="1699-1699"];
m23_532 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695"];
m23_83 [cluster="Unk.>", file="QCAlgorithm.Indicators.cs", label="Entry Unk.>", span=""];
m23_33 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m23_446 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510"];
m23_447 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="return AddSecurity<Cfd>(SecurityType.Cfd, ticker, resolution, market, fillDataForward, leverage, false);", span="1512-1512"];
m23_448 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510"];
m23_250 [cluster="string.ToUpper()", file="QCAlgorithm.Indicators.cs", label="Entry string.ToUpper()", span="0-0"];
m23_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m23_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.Indicators.cs", label="SetSecurityInitializer(new FuncSecurityInitializer((security, seedSecurity) => securityInitializer(security)))", span="590-590"];
m23_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m23_35 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m23_32 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m23_78 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m23_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927"];
m23_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.Indicators.cs", label="handler == null", span="929-929"];
m23_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.Indicators.cs", label="BrokerageMessageHandler = handler", span="934-934"];
m23_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentNullException(''handler'');", span="931-931"];
m23_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927"];
m23_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129"];
m23_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label=_liveMode, span="1132-1132"];
m23_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="start < (new DateTime(1900, 01, 01))", span="1136-1136"];
m23_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="start > _endDate", span="1144-1144"];
m23_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="start = start.RoundDown(TimeSpan.FromDays(1))", span="1151-1151"];
m23_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="return;", span="1132-1132"];
m23_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="1138-1138"];
m23_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="_endDate != new DateTime()", span="1142-1142"];
m23_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Please select start date less than end date.'');", span="1146-1146"];
m23_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="!_locked", span="1154-1154"];
m23_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="_startDate = start", span="1159-1159"];
m23_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="!LiveMode", span="1157-1157"];
m23_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="1165-1165"];
m23_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="SetDateTime(_startDate.ConvertToUtc(TimeZone))", span="1160-1160"];
m23_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129"];
m23_472 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m23_518 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671"];
m23_519 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.Indicators.cs", label="var message = error.Message", span="1673-1673"];
m23_520 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.Indicators.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1674-1674"];
m23_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.Indicators.cs", label="_errorMessages.Enqueue(message)", span="1675-1675"];
m23_523 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.Indicators.cs", label="_previousErrorMessage = message", span="1676-1676"];
m23_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.Indicators.cs", label="return;", span="1674-1674"];
m23_524 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671"];
m23_122 [cluster="System.Action<T>.Invoke(T)", file="QCAlgorithm.Indicators.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m23_507 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="QCAlgorithm.Indicators.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m23_143 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="QCAlgorithm.Indicators.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m23_40 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="41-41"];
m23_470 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m23_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214"];
m23_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.Indicators.cs", label="_locked = true", span="1216-1216"];
m23_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214"];
m23_474 [cluster="Unk.Remove", file="QCAlgorithm.Indicators.cs", label="Entry Unk.Remove", span=""];
m23_568 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m23_569 [file="QCAlgorithm.Indicators.cs", label="System.Action<QuantConnect.Securities.Security>", span=""];
m23_570 [file="QCAlgorithm.Indicators.cs", label=string, span=""];
m23_571 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Symbol", span=""];
m24_20 [cluster="QuantConnect.Data.Market.Delisting.Clone()", file="Quandl.cs", label="Entry QuantConnect.Data.Market.Delisting.Clone()", span="104-104"];
m24_16 [cluster="System.NotImplementedException.NotImplementedException(string)", file="Quandl.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m24_18 [cluster="QuantConnect.Data.Market.Delisting.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Quandl.cs", label="throw new NotImplementedException(''This method is not supposed to be called on the Delisting type.'');", span="94-94"];
m24_17 [cluster="QuantConnect.Data.Market.Delisting.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Quandl.cs", label="Entry QuantConnect.Data.Market.Delisting.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="92-92"];
m24_19 [cluster="QuantConnect.Data.Market.Delisting.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Quandl.cs", label="Exit QuantConnect.Data.Market.Delisting.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="92-92"];
m24_8 [cluster="QuantConnect.Data.Market.Delisting.Delisting(QuantConnect.Symbol, System.DateTime, decimal, QuantConnect.DelistingType)", file="Quandl.cs", label="Type = type", span="59-59"];
m24_9 [cluster="QuantConnect.Data.Market.Delisting.Delisting(QuantConnect.Symbol, System.DateTime, decimal, QuantConnect.DelistingType)", file="Quandl.cs", label="Exit QuantConnect.Data.Market.Delisting.Delisting(QuantConnect.Symbol, System.DateTime, decimal, QuantConnect.DelistingType)", span="53-53"];
m24_10 [cluster="QuantConnect.Data.Market.Delisting.SetOrderTicket(QuantConnect.Orders.OrderTicket)", file="Quandl.cs", label="Entry QuantConnect.Data.Market.Delisting.SetOrderTicket(QuantConnect.Orders.OrderTicket)", span="66-66"];
m24_67 [cluster="QuantConnect.TradingDay.TradingDay()", file="Quandl.cs", label="Entry QuantConnect.TradingDay.TradingDay()", span="66-66"];
m24_60 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="Quandl.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m24_21 [cluster="QuantConnect.Data.Market.Delisting.Clone()", file="Quandl.cs", label="return new Delisting(Symbol, Time, Price, Type);", span="106-106"];
m24_74 [cluster="lambda expression", file="Quandl.cs", label="Entry lambda expression", span="125-125"];
m24_77 [cluster="lambda expression", file="Quandl.cs", label="Entry lambda expression", span="126-126"];
m24_75 [cluster="lambda expression", file="Quandl.cs", label="x.ID.Date.Date == currentDate", span="125-125"];
m24_78 [cluster="lambda expression", file="Quandl.cs", label="x.ID.Date.Date == currentDate", span="126-126"];
m24_22 [cluster="QuantConnect.Data.Market.Delisting.Clone()", file="Quandl.cs", label="Exit QuantConnect.Data.Market.Delisting.Clone()", span="104-104"];
m24_24 [cluster="lambda expression", file="Quandl.cs", label="return day.BusinessDay;", span="68-68"];
m24_26 [cluster="lambda expression", file="Quandl.cs", label="return day.PublicHoliday;", span="70-70"];
m24_28 [cluster="lambda expression", file="Quandl.cs", label="return day.Weekend;", span="72-72"];
m24_30 [cluster="lambda expression", file="Quandl.cs", label="return day.OptionExpirations.Any();", span="74-74"];
m24_32 [cluster="lambda expression", file="Quandl.cs", label="return day.FutureExpirations.Any();", span="76-76"];
m24_34 [cluster="lambda expression", file="Quandl.cs", label="return day.FutureRolls.Any();", span="78-78"];
m24_36 [cluster="lambda expression", file="Quandl.cs", label="return day.SymbolDelistings.Any();", span="80-80"];
m24_38 [cluster="lambda expression", file="Quandl.cs", label="return day.EquityDividends.Any();", span="82-82"];
m24_68 [cluster="lambda expression", file="Quandl.cs", label="Entry lambda expression", span="106-106"];
m24_71 [cluster="lambda expression", file="Quandl.cs", label="Entry lambda expression", span="107-107"];
m24_76 [cluster="lambda expression", file="Quandl.cs", label="Exit lambda expression", span="125-125"];
m24_79 [cluster="lambda expression", file="Quandl.cs", label="Exit lambda expression", span="126-126"];
m24_23 [cluster="lambda expression", file="Quandl.cs", label="QuantConnect.Data.Market.Delisting", span=""];
m24_25 [cluster="lambda expression", file="Quandl.cs", label="TradingDayType.PublicHoliday", span="69-69"];
m24_27 [cluster="lambda expression", file="Quandl.cs", label="TradingDayType.Weekend", span="71-71"];
m24_29 [cluster="lambda expression", file="Quandl.cs", label="TradingDayType.OptionExpiration", span="73-73"];
m24_31 [cluster="lambda expression", file="Quandl.cs", label="TradingDayType.FutureExpiration", span="75-75"];
m24_33 [cluster="lambda expression", file="Quandl.cs", label="TradingDayType.FutureRoll", span="77-77"];
m24_35 [cluster="lambda expression", file="Quandl.cs", label="TradingDayType.SymbolDelisting", span="79-79"];
m24_37 [cluster="lambda expression", file="Quandl.cs", label="TradingDayType.EquityDividends", span="81-81"];
m24_39 [cluster="lambda expression", file="Quandl.cs", label="Exit lambda expression", span="63-85"];
m24_70 [cluster="lambda expression", file="Quandl.cs", label="Exit lambda expression", span="106-106"];
m24_69 [cluster="lambda expression", file="Quandl.cs", label="x.ID.SecurityType == SecurityType.Option", span="106-106"];
m24_72 [cluster="lambda expression", file="Quandl.cs", label="x.ID.SecurityType == SecurityType.Future", span="107-107"];
m24_40 [cluster="lambda expression", file="Quandl.cs", label="return false;", span="84-84"];
m24_73 [cluster="lambda expression", file="Quandl.cs", label="Exit lambda expression", span="107-107"];
m24_58 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="Quandl.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m24_13 [cluster="QuantConnect.TradingCalendar.GetTradingDays(System.DateTime, System.DateTime)", color=green, community=0, file="Quandl.cs", label="return PopulateTradingDays(start, end);", prediction=58, span="51-51"];
m24_14 [cluster="QuantConnect.TradingCalendar.GetTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="Exit QuantConnect.TradingCalendar.GetTradingDays(System.DateTime, System.DateTime)", span="49-49"];
m24_15 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="Entry QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", span="90-90"];
m24_0 [cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="Quandl.cs", label="Entry QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", span="18-18"];
m24_1 [cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="Quandl.cs", label="_securityManager = securityManager", span="20-20"];
m24_2 [cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="Quandl.cs", label="_marketHoursDatabase = marketHoursDatabase", span="21-21"];
m24_3 [cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="Quandl.cs", label="Exit QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", span="18-18"];
m24_4 [cluster="QuantConnect.Data.Market.Delisting.Delisting(QuantConnect.Symbol, System.DateTime, decimal, QuantConnect.DelistingType)", file="Quandl.cs", label="Entry QuantConnect.Data.Market.Delisting.Delisting(QuantConnect.Symbol, System.DateTime, decimal, QuantConnect.DelistingType)", span="53-53"];
m24_5 [cluster="QuantConnect.Data.Market.Delisting.Delisting(QuantConnect.Symbol, System.DateTime, decimal, QuantConnect.DelistingType)", file="Quandl.cs", label="Symbol = symbol", span="56-56"];
m24_6 [cluster="QuantConnect.Data.Market.Delisting.Delisting(QuantConnect.Symbol, System.DateTime, decimal, QuantConnect.DelistingType)", file="Quandl.cs", label="Time = date", span="57-57"];
m24_7 [cluster="QuantConnect.Data.Market.Delisting.Delisting(QuantConnect.Symbol, System.DateTime, decimal, QuantConnect.DelistingType)", file="Quandl.cs", label="Value = price", span="58-58"];
m24_62 [cluster="Unk.ToList", file="Quandl.cs", label="Entry Unk.ToList", span=""];
m24_11 [cluster="QuantConnect.Data.Market.Delisting.SetOrderTicket(QuantConnect.Orders.OrderTicket)", file="Quandl.cs", label="Ticket = ticket", span="68-68"];
m24_65 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="Quandl.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m24_45 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="var entry = _marketHoursDatabase.GetEntry(symbol.ID.Market, symbol, symbol.ID.SecurityType)", span="97-97"];
m24_42 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="var symbols = _securityManager.Keys", span="92-92"];
m24_56 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="yield return \r\n                    new TradingDay\r\n                    {\r\n                        Date = currentDate,\r\n                        PublicHoliday = publicHoliday,\r\n                        Weekend = weekend,\r\n                        BusinessDay = businessDay,\r\n                        OptionExpirations = options.Where(x => x.ID.Date.Date == currentDate),\r\n                        FutureExpirations = futures.Where(x => x.ID.Date.Date == currentDate)\r\n                    };", span="118-127"];
m24_51 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="Enumerable.Range(0, (int)(end.Date.AddDays(1.0) - start.Date).TotalDays)", span="109-109"];
m24_52 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="var currentDate = start.Date.AddDays(dayIdx)", span="111-111"];
m24_43 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="var holidays = new HashSet<DateTime>()", span="94-94"];
m24_44 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label=symbols, span="95-95"];
m24_49 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="var options = symbols.Where(x => x.ID.SecurityType == SecurityType.Option).ToList()", span="106-106"];
m24_50 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="var futures = symbols.Where(x => x.ID.SecurityType == SecurityType.Future).ToList()", span="107-107"];
m24_46 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="entry.ExchangeHours.Holidays", span="99-99"];
m24_53 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="var publicHoliday = holidays.Contains(currentDate) || !qlCalendar.isBusinessDay(currentDate)", span="113-113"];
m24_54 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="var weekend = currentDate.DayOfWeek == DayOfWeek.Sunday ||\r\n                                currentDate.DayOfWeek == DayOfWeek.Saturday", span="114-115"];
m24_55 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="var businessDay = !publicHoliday && !weekend", span="116-116"];
m24_47 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="holidays.Add(holiday.Date)", span="101-101"];
m24_48 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="var qlCalendar = new UnitedStates()", span="105-105"];
m24_57 [cluster="QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", file="Quandl.cs", label="Exit QuantConnect.TradingCalendar.PopulateTradingDays(System.DateTime, System.DateTime)", span="90-90"];
m24_64 [cluster="System.Linq.Enumerable.Range(int, int)", file="Quandl.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m24_66 [cluster="Unk.isBusinessDay", file="Quandl.cs", label="Entry Unk.isBusinessDay", span=""];
m24_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Quandl.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m24_61 [cluster="UnitedStates.cstr", file="Quandl.cs", label="Entry UnitedStates.cstr", span=""];
m24_59 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="Quandl.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="210-210"];
m24_12 [cluster="QuantConnect.Data.Market.Delisting.SetOrderTicket(QuantConnect.Orders.OrderTicket)", file="Quandl.cs", label="Exit QuantConnect.Data.Market.Delisting.SetOrderTicket(QuantConnect.Orders.OrderTicket)", span="66-66"];
m24_63 [cluster="System.DateTime.AddDays(double)", file="Quandl.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m24_80 [file="Quandl.cs", label="QuantConnect.TradingCalendar", span=""];
m24_82 [file="Quandl.cs", label=currentDate, span=""];
m24_81 [file="Quandl.cs", label="QuantConnect.TradingDayType", span=""];
m25_0 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="RegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", span="25-25"];
m25_1 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", color=green, community=0, file="RegressionAlgorithm.cs", label="SetStartDate(2013, 10, 07)", prediction=59, span="27-27"];
m25_2 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", color=green, community=0, file="RegressionAlgorithm.cs", label="SetEndDate(2013, 10, 11)", prediction=59, span="28-28"];
m25_3 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", color=green, community=0, file="RegressionAlgorithm.cs", label="SetCash(10000000)", prediction=59, span="30-30"];
m25_4 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", color=green, community=0, file="RegressionAlgorithm.cs", label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Tick)", prediction=59, span="33-33"];
m25_5 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", color=green, community=0, file="RegressionAlgorithm.cs", label="AddSecurity(SecurityType.Equity, ''BAC'', Resolution.Minute)", prediction=59, span="34-34"];
m25_6 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", color=green, community=0, file="RegressionAlgorithm.cs", label="AddSecurity(SecurityType.Equity, ''AIG'', Resolution.Hour)", prediction=59, span="35-35"];
m25_7 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", color=green, community=0, file="RegressionAlgorithm.cs", label="AddSecurity(SecurityType.Equity, ''IBM'', Resolution.Daily)", prediction=59, span="36-36"];
m25_8 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="RegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", span="25-25"];
m25_13 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="42-42"];
m25_14 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="RegressionAlgorithm.cs", label="Time - lastTradeTradeBars < tradeEvery", prediction=59, span="44-44"];
m25_15 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="RegressionAlgorithm.cs", label="return;", prediction=67, span="44-44"];
m25_16 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="RegressionAlgorithm.cs", label="lastTradeTradeBars = Time", prediction=68, span="45-45"];
m25_17 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="RegressionAlgorithm.cs", label=data, prediction=69, span="47-47"];
m25_23 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="RegressionAlgorithm.cs", label="MarketOrder(symbol, 10)", prediction=59, span="61-61"];
m25_24 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="RegressionAlgorithm.cs", label="MarketOrder(symbol, -holdings.Quantity)", prediction=59, span="65-65"];
m25_20 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="RegressionAlgorithm.cs", label="bar.Time.RoundDown(bar.Period) != bar.Time", prediction=72, span="52-52"];
m25_18 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="RegressionAlgorithm.cs", label="var symbol = kvp.Key", prediction=59, span="49-49"];
m25_19 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="RegressionAlgorithm.cs", label="var bar = kvp.Value", prediction=74, span="50-50"];
m25_21 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="RegressionAlgorithm.cs", label="var holdings = Portfolio[symbol]", prediction=59, span="58-58"];
m25_22 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="RegressionAlgorithm.cs", label="!holdings.Invested", prediction=76, span="59-59"];
m25_25 [cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="42-42"];
m25_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="RegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="546-546"];
m25_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="RegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="701-701"];
m25_26 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="RegressionAlgorithm.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="263-263"];
m25_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="521-521"];
m25_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="RegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", span="181-181"];
m25_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="RegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="470-470"];
m25_28 [file="RegressionAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", span=""];
m26_0 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m26_1 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(''BasicTemplateAlgorithm'', new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''3.40%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''1646.936%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''3.404%''},\r\n                {''Sharpe Ratio'', ''4.5''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.005''},\r\n                {''Beta'', ''2.03''},\r\n                {''Annual Standard Deviation'', ''0.389''},\r\n                {''Annual Variance'', ''0.152''},\r\n                {''Information Ratio'', ''4.513''},\r\n                {''Tracking Error'', ''0.198''},\r\n                {''Treynor Ratio'', ''0.863''},\r\n                {''Total Fees'', ''$12.30''}\r\n            })", span="26-47"];
m26_2 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m26_4 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", span="32-32"];
m26_5 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", span="51-51"];
m26_6 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(''BasicTemplateFillForwardAlgorithm'', new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''34.56%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''521.383%''},\r\n                {''Drawdown'', ''18.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''34.562%''},\r\n                {''Sharpe Ratio'', ''2.599''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.899''},\r\n                {''Beta'', ''2.879''},\r\n                {''Annual Standard Deviation'', ''0.785''},\r\n                {''Annual Variance'', ''0.616''},\r\n                {''Information Ratio'', ''2.192''},\r\n                {''Tracking Error'', ''0.749''},\r\n                {''Treynor Ratio'', ''0.708''},\r\n                {''Total Fees'', ''$460.82''}\r\n            })", span="53-74"];
m26_7 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", span="51-51"];
m26_8 [cluster="QuantConnect.Tests.RegressionTests.RegressionAlgorithm()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.RegressionAlgorithm()", span="78-78"];
m26_9 [cluster="QuantConnect.Tests.RegressionTests.RegressionAlgorithm()", color=green, community=1, file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(''RegressionAlgorithm'', new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2145''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.361%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-0.990''},\r\n                {''Net Profit'', ''-0.043%''},\r\n                {''Sharpe Ratio'', ''-28.984''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''1.65''},\r\n                {''Alpha'', ''-0.018''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.251''},\r\n                {''Tracking Error'', ''0.173''},\r\n                {''Treynor Ratio'', ''611.111''},\r\n                {''Total Fees'', ''$4292.00''}\r\n            })", prediction=77, span="80-101"];
m26_10 [cluster="QuantConnect.Tests.RegressionTests.RegressionAlgorithm()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.RegressionAlgorithm()", span="78-78"];
m30_38 [cluster="QuantConnect.Securities.Security.GetLastData()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="504-504"];
m30_40 [cluster="QuantConnect.Securities.Security.GetLastData()", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.GetLastData()", span="504-504"];
m30_105 [cluster="QuantConnect.Python.FillModelPythonWrapper.FillModelPythonWrapper(PyObject)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Python.FillModelPythonWrapper.FillModelPythonWrapper(PyObject)", span="33-33"];
m30_113 [cluster="QuantConnect.Securities.Security.ToString()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.ToString()", span="655-655"];
m30_115 [cluster="QuantConnect.Securities.Security.ToString()", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.ToString()", span="655-655"];
m30_31 [cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security)", span="39-39"];
m30_109 [cluster="QuantConnect.Securities.Security.SetSlippageModel(PyObject)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.SetSlippageModel(PyObject)", span="643-643"];
m30_111 [cluster="QuantConnect.Securities.Security.SetSlippageModel(PyObject)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.SetSlippageModel(PyObject)", span="643-643"];
m30_41 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData()", span="161-161"];
m30_112 [cluster="QuantConnect.Python.SlippageModelPythonWrapper.SlippageModelPythonWrapper(PyObject)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Python.SlippageModelPythonWrapper.SlippageModelPythonWrapper(PyObject)", span="33-33"];
m30_60 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="94-94"];
m30_143 [cluster="Unk.Min", file="SubscriptionDataReader.cs", label="Entry Unk.Min", span=""];
m30_62 [cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38"];
m30_154 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="692-692"];
m30_48 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="519-523"];
m30_50 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="519-523"];
m30_78 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="566-566"];
m30_79 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="x.IsCustomData", span="566-566"];
m30_80 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="566-566"];
m30_145 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="689-689"];
m30_148 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="690-690"];
m30_151 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="691-691"];
m30_147 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="689-689"];
m30_150 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="690-690"];
m30_153 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="691-691"];
m30_156 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="692-692"];
m30_116 [cluster="QuantConnect.Symbol.ToString()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m30_71 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.IsCustomData()", span="559-559"];
m30_72 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="SubscriptionDataReader.cs", label="Subscriptions == null || !Subscriptions.Any()", span="561-561"];
m30_73 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="SubscriptionDataReader.cs", label="return false;", span="563-563"];
m30_74 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="SubscriptionDataReader.cs", label="return Subscriptions.Any(x => x.IsCustomData);", span="566-566"];
m30_75 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.IsCustomData()", span="559-559"];
m30_51 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="531-531"];
m30_59 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="531-531"];
m30_142 [cluster="Unk.DefaultIfEmpty", file="SubscriptionDataReader.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m30_2 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="307-307"];
m30_3 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="307-307"];
m30_102 [cluster="QuantConnect.Securities.Security.SetFillModel(PyObject)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.SetFillModel(PyObject)", span="625-625"];
m30_103 [cluster="QuantConnect.Securities.Security.SetFillModel(PyObject)", file="SubscriptionDataReader.cs", label="FillModel = new FillModelPythonWrapper(fillModel)", span="627-627"];
m30_104 [cluster="QuantConnect.Securities.Security.SetFillModel(PyObject)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.SetFillModel(PyObject)", span="625-625"];
m30_127 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", span="676-676"];
m30_128 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", file="SubscriptionDataReader.cs", label=subscriptions, span="678-678"];
m30_129 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", file="SubscriptionDataReader.cs", label="subscription.Symbol != Symbol", span="680-680"];
m30_134 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", file="SubscriptionDataReader.cs", label="UpdateSubscriptionProperties()", span="684-684"];
m30_131 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", file="SubscriptionDataReader.cs", label="!subscription.ExchangeTimeZone.Equals(Exchange.TimeZone)", span="681-681"];
m30_133 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", file="SubscriptionDataReader.cs", label="SubscriptionsBag.Add(subscription)", span="682-682"];
m30_130 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", file="SubscriptionDataReader.cs", label="throw new ArgumentException(''Symbols must match.'', ''subscription.Symbol'');", span="680-680"];
m30_132 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", file="SubscriptionDataReader.cs", label="throw new ArgumentException(''ExchangeTimeZones must match.'', ''subscription.ExchangeTimeZone'');", span="681-681"];
m30_135 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)", span="676-676"];
m30_61 [cluster="QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", span="402-402"];
m30_95 [cluster="QuantConnect.Securities.Security.SetFeeModel(PyObject)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.SetFeeModel(PyObject)", span="607-607"];
m30_96 [cluster="QuantConnect.Securities.Security.SetFeeModel(PyObject)", file="SubscriptionDataReader.cs", label="FeeModel = new FeeModelPythonWrapper(feelModel)", span="609-609"];
m30_97 [cluster="QuantConnect.Securities.Security.SetFeeModel(PyObject)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.SetFeeModel(PyObject)", span="607-607"];
m30_117 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", span="664-664"];
m30_124 [cluster="QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)", span="664-664"];
m30_42 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="514-514"];
m30_46 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="514-514"];
m30_30 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.ConcurrentBag()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.ConcurrentBag()", span="0-0"];
m30_33 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", span="380-380"];
m30_36 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", span="380-380"];
m30_4 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", span="329-329"];
m30_5 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="symbolProperties == null", span="345-345"];
m30_12 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="SymbolProperties = symbolProperties", span="358-358"];
m30_14 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="Cache = cache", span="360-360"];
m30_16 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="DataFilter = dataFilter", span="362-362"];
m30_17 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="PriceVariationModel = priceVariationModel", span="363-363"];
m30_19 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="MarginModel = marginModel", span="365-365"];
m30_22 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="SlippageModel = slippageModel", span="368-368"];
m30_25 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="Holdings = new SecurityHolding(this)", span="371-371"];
m30_27 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.Security(QuantConnect.Symbol, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.SecurityExchange, QuantConnect.Securities.SecurityCache, QuantConnect.Securities.ISecurityPortfolioModel, QuantConnect.Orders.Fills.IFillModel, QuantConnect.Orders.Fees.IFeeModel, QuantConnect.Orders.Slippage.ISlippageModel, QuantConnect.Securities.ISettlementModel, QuantConnect.Securities.IVolatilityModel, QuantConnect.Securities.ISecurityMarginModel, QuantConnect.Securities.Interfaces.ISecurityDataFilter, QuantConnect.Securities.IPriceVariationModel)", span="329-329"];
m30_32 [cluster="QuantConnect.Securities.Security.UpdateSubscriptionProperties()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.UpdateSubscriptionProperties()", span="687-687"];
m30_140 [cluster="QuantConnect.Securities.Security.UpdateSubscriptionProperties()", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.UpdateSubscriptionProperties()", span="687-687"];
m30_99 [cluster="QuantConnect.Securities.Security.SetFillModel(QuantConnect.Orders.Fills.IFillModel)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.SetFillModel(QuantConnect.Orders.Fills.IFillModel)", span="616-616"];
m30_100 [cluster="QuantConnect.Securities.Security.SetFillModel(QuantConnect.Orders.Fills.IFillModel)", file="SubscriptionDataReader.cs", label="FillModel = fillModel", span="618-618"];
m30_101 [cluster="QuantConnect.Securities.Security.SetFillModel(QuantConnect.Orders.Fills.IFillModel)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.SetFillModel(QuantConnect.Orders.Fills.IFillModel)", span="616-616"];
m30_144 [cluster="Unk.FirstOrDefault", file="SubscriptionDataReader.cs", label="Entry Unk.FirstOrDefault", span=""];
m30_126 [cluster="Unk.Equals", file="SubscriptionDataReader.cs", label="Entry Unk.Equals", span=""];
m30_0 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="286-286"];
m30_1 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="286-286"];
m30_47 [cluster="QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)", span="86-86"];
m30_77 [cluster="Unk.Any", file="SubscriptionDataReader.cs", label="Entry Unk.Any", span=""];
m30_92 [cluster="QuantConnect.Securities.Security.SetFeeModel(QuantConnect.Orders.Fees.IFeeModel)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.SetFeeModel(QuantConnect.Orders.Fees.IFeeModel)", span="598-598"];
m30_93 [cluster="QuantConnect.Securities.Security.SetFeeModel(QuantConnect.Orders.Fees.IFeeModel)", file="SubscriptionDataReader.cs", label="FeeModel = feelModel", span="600-600"];
m30_94 [cluster="QuantConnect.Securities.Security.SetFeeModel(QuantConnect.Orders.Fees.IFeeModel)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.SetFeeModel(QuantConnect.Orders.Fees.IFeeModel)", span="598-598"];
m30_76 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m30_81 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="573-573"];
m30_82 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SubscriptionDataReader.cs", label="Symbol.ID.SecurityType == SecurityType.Future ||\r\n                Symbol.ID.SecurityType == SecurityType.Option", span="575-576"];
m30_84 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SubscriptionDataReader.cs", label="MarginModel.SetLeverage(this, leverage)", span="579-579"];
m30_83 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SubscriptionDataReader.cs", label="return;", span="577-577"];
m30_85 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.SetLeverage(decimal)", span="573-573"];
m30_37 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="SubscriptionDataReader.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0"];
m30_63 [cluster="QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", span="546-546"];
m30_66 [cluster="QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="Cache.AddData(data)", span="550-550"];
m30_67 [cluster="QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="data is OpenInterest || data.Price == 0m", span="552-552"];
m30_68 [cluster="QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="return;", span="552-552"];
m30_70 [cluster="QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", span="546-546"];
m30_106 [cluster="QuantConnect.Securities.Security.SetSlippageModel(QuantConnect.Orders.Slippage.ISlippageModel)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.SetSlippageModel(QuantConnect.Orders.Slippage.ISlippageModel)", span="634-634"];
m30_107 [cluster="QuantConnect.Securities.Security.SetSlippageModel(QuantConnect.Orders.Slippage.ISlippageModel)", file="SubscriptionDataReader.cs", label="SlippageModel = slippageModel", span="636-636"];
m30_108 [cluster="QuantConnect.Securities.Security.SetSlippageModel(QuantConnect.Orders.Slippage.ISlippageModel)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.SetSlippageModel(QuantConnect.Orders.Slippage.ISlippageModel)", span="634-634"];
m30_125 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SubscriptionDataReader.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m30_86 [cluster="QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="39-39"];
m30_98 [cluster="QuantConnect.Python.FeeModelPythonWrapper.FeeModelPythonWrapper(PyObject)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Python.FeeModelPythonWrapper.FeeModelPythonWrapper(PyObject)", span="33-33"];
m30_87 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="585-585"];
m30_88 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SubscriptionDataReader.cs", label=SubscriptionsBag, span="587-587"];
m30_89 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SubscriptionDataReader.cs", label="subscription.DataNormalizationMode = mode", span="589-589"];
m30_90 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SubscriptionDataReader.cs", label="UpdateSubscriptionProperties()", span="591-591"];
m30_91 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="585-585"];
m30_141 [cluster="Unk.Select", file="SubscriptionDataReader.cs", label="Entry Unk.Select", span=""];
m30_28 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="SubscriptionDataReader.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m30_157 [file="SubscriptionDataReader.cs", label="QuantConnect.Securities.Security", span=""];
m31_32 [cluster="QuantConnect.Securities.Interfaces.ISecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="SubscriptionFilterEnumerator.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="36-36"];
m31_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.WrapForDataFeed(QuantConnect.Lean.Engine.Results.IResultHandler, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", file="SubscriptionFilterEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.WrapForDataFeed(QuantConnect.Lean.Engine.Results.IResultHandler, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", span="36-36"];
m31_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.WrapForDataFeed(QuantConnect.Lean.Engine.Results.IResultHandler, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="var filter = new SubscriptionFilterEnumerator(enumerator, security, endTime)", prediction=78, span="38-38"];
m31_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.WrapForDataFeed(QuantConnect.Lean.Engine.Results.IResultHandler, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", color=green, community=2, file="SubscriptionFilterEnumerator.cs", label="filter.DataFilterError += (sender, exception) =>\r\n            {\r\n                Log.Error(''SubscriptionDataReader.MoveNext(): Error applying filter: '' + exception.Message);\r\n                resultHandler.RuntimeError(''Runtime error applying data filter. Assuming filter pass: '' + exception.Message, exception.StackTrace);\r\n            }", prediction=79, span="39-43"];
m31_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.WrapForDataFeed(QuantConnect.Lean.Engine.Results.IResultHandler, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="return filter;", prediction=78, span="44-44"];
m31_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.WrapForDataFeed(QuantConnect.Lean.Engine.Results.IResultHandler, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", file="SubscriptionFilterEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.WrapForDataFeed(QuantConnect.Lean.Engine.Results.IResultHandler, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", span="36-36"];
m31_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.SubscriptionFilterEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", file="SubscriptionFilterEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.SubscriptionFilterEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", span="53-53"];
m31_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.SubscriptionFilterEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="_enumerator = enumerator", prediction=81, span="55-55"];
m31_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.SubscriptionFilterEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="_security = security", prediction=82, span="56-56"];
m31_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.SubscriptionFilterEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="_endTime = endTime", prediction=83, span="57-57"];
m31_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.SubscriptionFilterEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="_exchange = _security.Exchange", prediction=84, span="58-58"];
m31_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.SubscriptionFilterEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="_dataFilter = _security.DataFilter", prediction=85, span="59-59"];
m31_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.SubscriptionFilterEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", file="SubscriptionFilterEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.SubscriptionFilterEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Securities.Security, System.DateTime)", span="53-53"];
m31_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.Dispose()", file="SubscriptionFilterEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.Dispose()", span="135-135"];
m31_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.Dispose()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="_enumerator.Dispose()", prediction=86, span="137-137"];
m31_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.Dispose()", file="SubscriptionFilterEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.Dispose()", span="135-135"];
m31_42 [cluster="System.Collections.IEnumerator.Reset()", file="SubscriptionFilterEnumerator.cs", label="Entry System.Collections.IEnumerator.Reset()", span="0-0"];
m31_47 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="SubscriptionFilterEnumerator.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m31_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.Reset()", file="SubscriptionFilterEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.Reset()", span="144-144"];
m31_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.Reset()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="_enumerator.Reset()", prediction=86, span="146-146"];
m31_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.Reset()", file="SubscriptionFilterEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.Reset()", span="144-144"];
m31_31 [cluster="System.Collections.IEnumerator.MoveNext()", file="SubscriptionFilterEnumerator.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m31_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", file="SubscriptionFilterEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", span="93-93"];
m31_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="_enumerator.MoveNext()", prediction=86, span="95-95"];
m31_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="current.DataType != MarketDataType.Auxiliary && !_dataFilter.Filter(_security, current)", prediction=86, span="101-101"];
m31_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="current.DataType != MarketDataType.Auxiliary && !_exchange.IsOpenDuringBar(current.Time, current.EndTime, _security.IsExtendedMarketHours)", prediction=86, span="113-113"];
m31_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="OnDataFilterError(err)", prediction=86, span="108-108"];
m31_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="var current = _enumerator.Current", prediction=86, span="97-97"];
m31_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="return false;", prediction=93, span="128-128"];
m31_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="current.Time > _endTime", prediction=86, span="119-119"];
m31_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="Current = current", prediction=95, span="124-124"];
m31_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label=Exception, prediction=96, span="106-106"];
m31_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="return false;", prediction=97, span="121-121"];
m31_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="return true;", prediction=98, span="125-125"];
m31_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", file="SubscriptionFilterEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.MoveNext()", span="93-93"];
m31_38 [cluster="System.IDisposable.Dispose()", file="SubscriptionFilterEnumerator.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m31_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.OnDataFilterError(System.Exception)", file="SubscriptionFilterEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.OnDataFilterError(System.Exception)", span="153-153"];
m31_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.OnDataFilterError(System.Exception)", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="var handler = DataFilterError", prediction=86, span="155-155"];
m31_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.OnDataFilterError(System.Exception)", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="handler != null", prediction=100, span="156-156"];
m31_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.OnDataFilterError(System.Exception)", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="handler(this, exception)", prediction=86, span="156-156"];
m31_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.OnDataFilterError(System.Exception)", file="SubscriptionFilterEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator.OnDataFilterError(System.Exception)", span="153-153"];
m31_34 [cluster="QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", file="SubscriptionFilterEnumerator.cs", label="Entry QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", span="202-202"];
m31_11 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="SubscriptionFilterEnumerator.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="125-125"];
m31_6 [cluster="lambda expression", file="SubscriptionFilterEnumerator.cs", label="Entry lambda expression", span="39-43"];
m31_7 [cluster="lambda expression", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="Log.Error(''SubscriptionDataReader.MoveNext(): Error applying filter: '' + exception.Message)", prediction=79, span="41-41"];
m31_8 [cluster="lambda expression", color=green, community=0, file="SubscriptionFilterEnumerator.cs", label="resultHandler.RuntimeError(''Runtime error applying data filter. Assuming filter pass: '' + exception.Message, exception.StackTrace)", prediction=79, span="42-42"];
m31_9 [cluster="lambda expression", file="SubscriptionFilterEnumerator.cs", label="Exit lambda expression", span="39-43"];
m31_48 [file="SubscriptionFilterEnumerator.cs", label="QuantConnect.Lean.Engine.Results.IResultHandler", span=""];
m31_49 [file="SubscriptionFilterEnumerator.cs", label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator", span=""];
m32_52 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="238-238"];
m32_53 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.Id = Id", span="240-240"];
m32_54 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.Time = Time", span="241-241"];
m32_55 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.BrokerId = BrokerId.ToList()", span="242-242"];
m32_56 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.ContingentId = ContingentId", span="243-243"];
m32_57 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.Duration = Duration", span="244-244"];
m32_58 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.Price = Price", span="245-245"];
m32_59 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.PriceCurrency = PriceCurrency", span="246-246"];
m32_60 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.Quantity = Quantity", span="247-247"];
m32_61 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.Status = Status", span="248-248"];
m32_62 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.Symbol = Symbol", span="249-249"];
m32_63 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.Tag = Tag", span="250-250"];
m32_64 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="order.Properties = Properties.Clone()", span="251-251"];
m32_65 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Time.cs", label="Exit QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="238-238"];
m32_97 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m32_96 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m32_15 [cluster="System.Collections.Generic.List<T>.List()", file="Time.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m32_68 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="259-259"];
m32_69 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="Order order", span="261-261"];
m32_70 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="request.OrderType", span="262-262"];
m32_72 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="order = new MarketOrder(request.Symbol, request.Quantity, request.Time, request.Tag, request.OrderProperties)", span="265-265"];
m32_74 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="order = new LimitOrder(request.Symbol, request.Quantity, request.LimitPrice, request.Time, request.Tag, request.OrderProperties)", span="268-268"];
m32_76 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="order = new StopMarketOrder(request.Symbol, request.Quantity, request.StopPrice, request.Time, request.Tag, request.OrderProperties)", span="271-271"];
m32_78 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="order = new StopLimitOrder(request.Symbol, request.Quantity, request.StopPrice, request.LimitPrice, request.Time, request.Tag, request.OrderProperties)", span="274-274"];
m32_80 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="order = new MarketOnOpenOrder(request.Symbol, request.Quantity, request.Time, request.Tag, request.OrderProperties)", span="277-277"];
m32_82 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="order = new MarketOnCloseOrder(request.Symbol, request.Quantity, request.Time, request.Tag, request.OrderProperties)", span="280-280"];
m32_84 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="order = new OptionExerciseOrder(request.Symbol, request.Quantity, request.Time, request.Tag, request.OrderProperties)", span="283-283"];
m32_87 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="order.Id = request.OrderId", span="289-289"];
m32_88 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="request.Tag != null", span="290-290"];
m32_89 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="order.Tag = request.Tag", span="292-292"];
m32_71 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="OrderType.Market", span="264-264"];
m32_73 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="OrderType.Limit", span="267-267"];
m32_75 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="OrderType.StopMarket", span="270-270"];
m32_77 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="OrderType.StopLimit", span="273-273"];
m32_79 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="OrderType.MarketOnOpen", span="276-276"];
m32_81 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="OrderType.MarketOnClose", span="279-279"];
m32_83 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="OrderType.OptionExercise", span="282-282"];
m32_85 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="throw new ArgumentOutOfRangeException();", span="286-286"];
m32_86 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="order.Status = OrderStatus.New", span="288-288"];
m32_90 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="return order;", span="294-294"];
m32_91 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Time.cs", label="Exit QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="259-259"];
m32_94 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="54-54"];
m32_50 [cluster="QuantConnect.Orders.Order.Clone()", file="Time.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="232-232"];
m32_51 [cluster="QuantConnect.Orders.Order.Clone()", file="Time.cs", label="Exit QuantConnect.Orders.Order.Clone()", span="232-232"];
m32_67 [cluster="QuantConnect.Orders.OrderProperties.Clone()", file="Time.cs", label="Entry QuantConnect.Orders.OrderProperties.Clone()", span="31-31"];
m32_92 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m32_37 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Time.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="200-200"];
m32_41 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Time.cs", label="Quantity = request.Quantity.Value", span="208-208"];
m32_43 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Time.cs", label="Tag = request.Tag", span="212-212"];
m32_44 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Time.cs", label="Exit QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="200-200"];
m32_17 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Entry QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="160-160"];
m32_18 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Time = time", span="162-162"];
m32_21 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Quantity = quantity", span="165-165"];
m32_22 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Symbol = symbol", span="166-166"];
m32_24 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Tag = tag", span="168-168"];
m32_29 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Properties = properties ?? new OrderProperties()", span="173-173"];
m32_19 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Price = 0", span="163-163"];
m32_20 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="PriceCurrency = string.Empty", span="164-164"];
m32_23 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Status = OrderStatus.None", span="167-167"];
m32_25 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Duration = OrderDuration.GTC", span="169-169"];
m32_26 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="BrokerId = new List<string>()", span="170-170"];
m32_27 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="ContingentId = 0", span="171-171"];
m32_28 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="DurationValue = DateTime.MaxValue", span="172-172"];
m32_30 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Exit QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="160-160"];
m32_98 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="42-42"];
m32_16 [cluster="QuantConnect.Orders.OrderProperties.OrderProperties()", file="Time.cs", label="Entry QuantConnect.Orders.OrderProperties.OrderProperties()", span="20-20"];
m32_31 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Time.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="182-182"];
m32_32 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Time.cs", label="var value = GetValueImpl(security)", span="184-184"];
m32_33 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Time.cs", label="return value*security.QuoteCurrency.ConversionRate*security.SymbolProperties.ContractMultiplier;", span="185-185"];
m32_34 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Time.cs", label="Exit QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="182-182"];
m32_66 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="Time.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m32_93 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="54-54"];
m32_49 [cluster="string.Format(string, params object[])", file="Time.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m32_95 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Time.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="65-65"];
m32_46 [cluster="QuantConnect.Orders.Order.ToString()", file="Time.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="223-223"];
m32_47 [cluster="QuantConnect.Orders.Order.ToString()", file="Time.cs", label="return string.Format(''OrderId: {0} {1} {2} order for {3} unit{4} of {5}'', Id, Status, Type, Quantity, Quantity == 1 ? '''' : ''s'', Symbol);", span="225-225"];
m32_48 [cluster="QuantConnect.Orders.Order.ToString()", file="Time.cs", label="Exit QuantConnect.Orders.Order.ToString()", span="223-223"];
m32_99 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="Time.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m32_14 [cluster="System.DateTime.DateTime()", file="Time.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m32_35 [cluster="QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", file="Time.cs", label="Entry QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", span="194-194"];
m32_36 [cluster="QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", file="Time.cs", label="Exit QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", span="194-194"];
m32_0 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="Entry QuantConnect.Orders.Order.Order()", span="136-136"];
m32_1 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="Time = new DateTime()", span="138-138"];
m32_2 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="Price = 0", span="139-139"];
m32_3 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="PriceCurrency = string.Empty", span="140-140"];
m32_4 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="Quantity = 0", span="141-141"];
m32_5 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="Symbol = Symbol.Empty", span="142-142"];
m32_6 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="Status = OrderStatus.None", span="143-143"];
m32_7 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="Tag = ''''", span="144-144"];
m32_8 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="Duration = OrderDuration.GTC", span="145-145"];
m32_9 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="BrokerId = new List<string>()", span="146-146"];
m32_10 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="ContingentId = 0", span="147-147"];
m32_11 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="DurationValue = DateTime.MaxValue", span="148-148"];
m32_12 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="Properties = new OrderProperties()", span="149-149"];
m32_13 [cluster="QuantConnect.Orders.Order.Order()", file="Time.cs", label="Exit QuantConnect.Orders.Order.Order()", span="136-136"];
m32_100 [file="Time.cs", label="QuantConnect.Orders.Order", span=""];
m33_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="47-47"];
m33_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", color=green, community=0, file="TimeSlice.cs", label="Time = time", prediction=104, span="49-49"];
m33_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", color=green, community=0, file="TimeSlice.cs", label="Data = data", prediction=105, span="50-50"];
m33_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="47-47"];
m33_4 [file="TimeSlice.cs", label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", span=""];
n5 -> n12  [color=darkseagreen4, key=1, label=int, style=dashed];
n5 -> n15  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n12  [color=darkseagreen4, key=1, label=string, style=dashed];
n9 -> n13  [color=darkseagreen4, key=1, label=string, style=dashed];
n9 -> n16  [color=darkseagreen4, key=1, label=string, style=dashed];
n12 -> n12  [color=darkseagreen4, key=1, label=marketIdentifier, style=dashed];
n25 -> n28  [color=darkseagreen4, key=1, label=string, style=dashed];
n28 -> n28  [color=darkseagreen4, key=1, label=code, style=dashed];
n30 -> n33  [color=darkseagreen4, key=1, label=int, style=dashed];
n33 -> n33  [color=darkseagreen4, key=1, label=market, style=dashed];
d36 -> d39  [color=green, key=1, label=timeSlice, style=dashed];
d36 -> d41  [color=green, key=1, label=timeSlice, style=dashed];
d36 -> d62  [color=green, key=1, label=timeSlice, style=dashed];
d9 -> d36  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
d9 -> d40  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
d9 -> d62  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d201  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d202  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
d9 -> d35  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d47  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d9 -> d50  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d52  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d53  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d54  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
d9 -> d56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
d9 -> d57  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d60  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d67  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d75  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d77  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d98  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d104  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d136  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d143  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d145  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d153  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d155  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d162  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d164  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d170  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
d9 -> d172  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d9 -> d175  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d181  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d9 -> d184  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d185  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d188  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d189  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d9 -> d190  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d9 -> d193  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d9 -> d194  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d9 -> d197  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d9 -> d198  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d9 -> d199  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d9 -> d200  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d43 -> d46  [color=green, key=1, label=time, style=dashed];
d43 -> d53  [color=green, key=1, label=time, style=dashed];
d43 -> d54  [color=green, key=1, label=time, style=dashed];
d43 -> d55  [color=green, key=1, label=time, style=dashed];
d43 -> d63  [color=green, key=1, label=time, style=dashed];
d44 -> d52  [color=green, key=1, label=newData, style=dashed];
d44 -> d53  [color=green, key=1, label=newData, style=dashed];
d44 -> d89  [color=green, key=1, label=newData, style=dashed];
d40 -> d40  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
d269 -> d201  [color=green, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d202  [color=green, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d39  [color=green, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d38  [color=green, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d182  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d191  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d195  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d269 -> d259  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d11 -> d202  [color=green, key=1, label=startingPortfolioValue, style=dashed];
d11 -> d48  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
d11 -> d50  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
d51 -> d202  [color=green, key=1, label=startingPortfolioValue, style=dashed];
d85 -> d161  [color=darkseagreen4, key=1, label=newBars, style=dashed];
d85 -> d162  [color=darkseagreen4, key=1, label=newBars, style=dashed];
d86 -> d132  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
d86 -> d134  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
d86 -> d163  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
d86 -> d164  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
d87 -> d100  [color=darkseagreen4, key=1, label=newDividends, style=dashed];
d87 -> d142  [color=darkseagreen4, key=1, label=newDividends, style=dashed];
d87 -> d143  [color=darkseagreen4, key=1, label=newDividends, style=dashed];
d88 -> d106  [color=darkseagreen4, key=1, label=newSplits, style=dashed];
d88 -> d144  [color=darkseagreen4, key=1, label=newSplits, style=dashed];
d88 -> d145  [color=darkseagreen4, key=1, label=newSplits, style=dashed];
d90 -> d94  [color=darkseagreen4, key=1, label=dataPoints, style=dashed];
d206 -> d265  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
d12 -> d45  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
d19 -> d152  [color=darkseagreen4, key=1, label=hasOnTradeBar, style=dashed];
d20 -> d154  [color=darkseagreen4, key=1, label=hasOnTick, style=dashed];
d21 -> d161  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
d22 -> d163  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
d24 -> d99  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
d24 -> d142  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
d25 -> d105  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
d25 -> d144  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
d26 -> d29  [color=darkseagreen4, key=1, label=config, style=dashed];
d26 -> d34  [color=darkseagreen4, key=1, label=config, style=dashed];
d28 -> d30  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
d28 -> d34  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
d65 -> d67  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
d65 -> d76  [color=darkseagreen4, key=1, label=issueMarginCallWarning, style=dashed];
d91 -> d93  [color=darkseagreen4, key=1, label=config, style=dashed];
d91 -> d108  [color=darkseagreen4, key=1, label=config, style=dashed];
d91 -> d109  [color=darkseagreen4, key=1, label=config, style=dashed];
d91 -> d136  [color=darkseagreen4, key=1, label=config, style=dashed];
d183 -> d186  [color=darkseagreen4, key=1, label=hackedFrontier, style=dashed];
d15 -> d63  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
d83 -> d153  [color=darkseagreen4, key=1, label=oldBars, style=dashed];
d83 -> d152  [color=darkseagreen4, key=1, label=oldBars, style=dashed];
d84 -> d155  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
d84 -> d127  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
d84 -> d129  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
d84 -> d154  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
d94 -> d136  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
d94 -> d109  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
d94 -> d116  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
d94 -> d122  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
d263 -> d265  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
d13 -> d136  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d13 -> d143  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d13 -> d145  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d13 -> d153  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d13 -> d155  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d13 -> d162  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d13 -> d164  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d13 -> d29  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d13 -> d34  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d23 -> d119  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
d23 -> d125  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
d23 -> d151  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
d95 -> d98  [color=darkseagreen4, key=1, label=dividend, style=dashed];
d95 -> d97  [color=darkseagreen4, key=1, label=dividend, style=dashed];
d95 -> d100  [color=darkseagreen4, key=1, label=dividend, style=dashed];
d101 -> d104  [color=darkseagreen4, key=1, label=split, style=dashed];
d101 -> d103  [color=darkseagreen4, key=1, label=split, style=dashed];
d101 -> d106  [color=darkseagreen4, key=1, label=split, style=dashed];
d186 -> d186  [color=darkseagreen4, key=1, label=security, style=dashed];
d258 -> d260  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
d123 -> d132  [color=darkseagreen4, key=1, label=tick, style=dashed];
d123 -> d134  [color=darkseagreen4, key=1, label=tick, style=dashed];
d123 -> d127  [color=darkseagreen4, key=1, label=tick, style=dashed];
d123 -> d129  [color=darkseagreen4, key=1, label=tick, style=dashed];
d123 -> d130  [color=darkseagreen4, key=1, label=tick, style=dashed];
d123 -> d135  [color=darkseagreen4, key=1, label=tick, style=dashed];
d133 -> d135  [color=darkseagreen4, key=1, label=ticks, style=dashed];
d107 -> d109  [color=darkseagreen4, key=1, label=j, style=dashed];
d107 -> d110  [color=darkseagreen4, key=1, label=j, style=dashed];
d110 -> d110  [color=darkseagreen4, key=1, label=j, style=dashed];
d128 -> d130  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m0_3 -> m0_8  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_3 -> m0_15  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_3 -> m0_16  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_3 -> m0_19  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_3 -> m0_33  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_4 -> m0_13  [color=darkseagreen4, key=1, label=interval, style=dashed];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label=end, style=dashed];
m0_6 -> m0_17  [color=darkseagreen4, key=1, label=end, style=dashed];
m0_6 -> m0_18  [color=darkseagreen4, key=1, label=end, style=dashed];
m0_6 -> m0_31  [color=darkseagreen4, key=1, label=end, style=dashed];
m0_5 -> m0_29  [color=darkseagreen4, key=1, label=history, style=dashed];
m0_5 -> m0_35  [color=darkseagreen4, key=1, label=history, style=dashed];
m0_7 -> m0_27  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m0_27 -> m0_27  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m0_10 -> m0_12  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m0_10 -> m0_13  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m0_10 -> m0_14  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m0_10 -> m0_15  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m0_10 -> m0_16  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m0_10 -> m0_17  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m0_10 -> m0_18  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m0_10 -> m0_19  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m0_23 -> m0_26  [color=darkseagreen4, key=1, label=autoResetEvent, style=dashed];
m0_64 -> m0_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage", style=dashed];
m0_64 -> m0_19  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage", style=dashed];
m0_64 -> m0_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage", style=dashed];
m0_64 -> m0_25  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage", style=dashed];
m0_64 -> m0_26  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage", style=dashed];
m0_64 -> m0_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage", style=dashed];
m0_64 -> m0_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage", style=dashed];
m0_64 -> m0_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage", style=dashed];
m3_1261 -> m3_1282  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_1261 -> m3_1319  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m3_1261 -> m3_1293  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m3_1277 -> m3_1302  [color=darkseagreen4, key=1, label=timeOut, style=dashed];
m3_1277 -> m3_1303  [color=darkseagreen4, key=1, label=timeOut, style=dashed];
m3_1281 -> m3_1293  [color=darkseagreen4, key=1, label=useRegularTradingHours, style=dashed];
m3_1287 -> m3_1317  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m3_1278 -> m3_1306  [color=darkseagreen4, key=1, label=history, style=dashed];
m3_1278 -> m3_1308  [color=darkseagreen4, key=1, label=history, style=dashed];
m3_1296 -> m3_1300  [color=darkseagreen4, key=1, label=waitResult, style=dashed];
m3_1279 -> m3_1322  [color=darkseagreen4, key=1, label=dataDownloading, style=dashed];
m3_1280 -> m3_1326  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m3_1280 -> m3_1332  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m3_1288 -> m3_1325  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs", style=dashed];
m3_1289 -> m3_1329  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m3_1289 -> m3_1331  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m3_1289 -> m3_1301  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m3_1284 -> m3_1321  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m3_1284 -> m3_1304  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m3_1285 -> m3_1317  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m3_1285 -> m3_1325  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m3_1285 -> m3_1293  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m3_1305 -> m3_1334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1294 -> m3_1300  [color=darkseagreen4, key=1, label=waitResult, style=dashed];
m3_621 -> m3_629  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_783 -> m3_869  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m3_783 -> m3_872  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m3_248 -> m3_276  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_271 -> m3_290  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.AccountDownloadEndEventArgs", style=dashed];
m3_273 -> m3_294  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m3_273 -> m3_277  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m3_338 -> m3_796  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_338 -> m3_800  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_338 -> m3_802  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_338 -> m3_809  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_338 -> m3_812  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_795 -> m3_816  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_799 -> m3_816  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_801 -> m3_816  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_808 -> m3_816  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_362 -> m3_364  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m3_366 -> m3_369  [color=darkseagreen4, key=1, label=details, style=dashed];
m3_673 -> m3_897  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_755 -> m3_857  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m3_152 -> m3_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_48 -> m3_67  [color=green, key=1, label=JObject, style=dashed];
m3_48 -> m3_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m3_48 -> m3_65  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m3_48 -> m3_69  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m3_63 -> m3_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_71 -> m3_73  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_71 -> m3_78  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_62 -> m3_319  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_62 -> m3_323  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_62 -> m3_325  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_62 -> m3_327  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_62 -> m3_331  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_62 -> m3_332  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_74 -> m3_76  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m3_54 -> m3_56  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_1041 -> m3_1044  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1041 -> m3_1045  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1041 -> m3_1047  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1041 -> m3_1049  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1041 -> m3_1050  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1041 -> m3_1060  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1053 -> m3_1057  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_1053 -> m3_1060  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_1052 -> m3_1057  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_1052 -> m3_1060  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_758 -> m3_778  [color=darkseagreen4, key=1, label="IBApi.Order", style=dashed];
m3_763 -> m3_777  [color=darkseagreen4, key=1, label=orderType, style=dashed];
m3_776 -> m3_779  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_361 -> m3_387  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m3_380 -> m3_388  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m3_380 -> m3_389  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m3_385 -> m3_396  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs", style=dashed];
m3_382 -> m3_396  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_382 -> m3_387  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_384 -> m3_401  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_384 -> m3_388  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_30 -> m3_34  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m3_125 -> m3_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Holding>", style=dashed];
m3_139 -> m3_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_155 -> m3_155  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, decimal>", style=dashed];
m3_184 -> m3_186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m3_399 -> m3_402  [color=darkseagreen4, key=1, label=uniqueKey, style=dashed];
m3_398 -> m3_400  [color=darkseagreen4, key=1, label=details, style=dashed];
m3_398 -> m3_391  [color=darkseagreen4, key=1, label=details, style=dashed];
m3_398 -> m3_403  [color=darkseagreen4, key=1, label=details, style=dashed];
m3_521 -> m3_472  [color=darkseagreen4, key=1, label=rate, style=dashed];
m3_521 -> m3_504  [color=darkseagreen4, key=1, label=rate, style=dashed];
m3_521 -> m3_524  [color=darkseagreen4, key=1, label=rate, style=dashed];
m3_519 -> m3_522  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m3_526 -> m3_528  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m3_536 -> m3_491  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m3_536 -> m3_503  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m3_1318 -> m3_1321  [color=darkseagreen4, key=1, label=bar, style=dashed];
m3_1328 -> m3_1331  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m3_1330 -> m3_1301  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m3_1330 -> m3_1333  [color=darkseagreen4, key=1, label=pacing, style=dashed];
m3_756 -> m3_995  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_756 -> m3_996  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m3_1014 -> m3_1018  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_1016 -> m3_1018  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_1157 -> m3_1159  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m3_1157 -> m3_1168  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m3_1157 -> m3_1191  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", style=dashed];
m3_1159 -> m3_1171  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1159 -> m3_1177  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1159 -> m3_1184  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1159 -> m3_1190  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1159 -> m3_1191  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1161 -> m3_1166  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_1161 -> m3_1171  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_1161 -> m3_1177  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_1161 -> m3_1197  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_1161 -> m3_1198  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_677 -> m3_705  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_677 -> m3_711  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_710 -> m3_713  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m3_1114 -> m3_1116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m3_1114 -> m3_1124  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m3_1114 -> m3_1127  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m3_1116 -> m3_1131  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1116 -> m3_1137  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1122 -> m3_1124  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m3_1119 -> m3_1146  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_1119 -> m3_1147  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_1103 -> m3_1106  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_1103 -> m3_1108  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_1104 -> m3_1109  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_1107 -> m3_1109  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m3_961 -> m3_963  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_345 -> m3_737  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m3_736 -> m3_750  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m3_739 -> m3_742  [color=darkseagreen4, key=1, label=limitOrder, style=dashed];
m3_740 -> m3_744  [color=darkseagreen4, key=1, label=stopMarketOrder, style=dashed];
m3_741 -> m3_746  [color=darkseagreen4, key=1, label=stopLimitOrder, style=dashed];
m3_738 -> m3_750  [color=darkseagreen4, key=1, label=ibOrder, style=dashed];
m3_1151 -> m3_1154  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_1151 -> m3_1155  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_20 -> m3_36  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m3_20 -> m3_40  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m3_24 -> m3_45  [color=darkseagreen4, key=1, label=exception, style=dashed];
m3_24 -> m3_49  [color=darkseagreen4, key=1, label=exception, style=dashed];
m3_113 -> m3_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_113 -> m3_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_113 -> m3_116  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m3_114 -> m3_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_114 -> m3_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_158 -> m3_446  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_158 -> m3_451  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_158 -> m3_459  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_158 -> m3_522  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_158 -> m3_499  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_447 -> m3_517  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m3_448 -> m3_517  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m3_465 -> m3_520  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m3_465 -> m3_522  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickPriceEventArgs", style=dashed];
m3_465 -> m3_472  [color=darkseagreen4, key=1, label=rate, style=dashed];
m3_465 -> m3_504  [color=darkseagreen4, key=1, label=rate, style=dashed];
m3_449 -> m3_516  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_449 -> m3_466  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m3_449 -> m3_483  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m3_449 -> m3_497  [color=darkseagreen4, key=1, label=currencyPair, style=dashed];
m3_452 -> m3_504  [color=darkseagreen4, key=1, label=inverted, style=dashed];
m3_454 -> m3_456  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_454 -> m3_468  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_454 -> m3_488  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_461 -> m3_523  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_461 -> m3_469  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_461 -> m3_476  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_461 -> m3_532  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_461 -> m3_489  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_462 -> m3_469  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m3_462 -> m3_470  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m3_462 -> m3_489  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m3_462 -> m3_490  [color=darkseagreen4, key=1, label=requestTimeout, style=dashed];
m3_481 -> m3_531  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEndEventArgs", style=dashed];
m3_463 -> m3_520  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m3_463 -> m3_468  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m3_474 -> m3_492  [color=darkseagreen4, key=1, label=pacingDelaySeconds, style=dashed];
m3_474 -> m3_493  [color=darkseagreen4, key=1, label=pacingDelaySeconds, style=dashed];
m3_477 -> m3_528  [color=darkseagreen4, key=1, label=data, style=dashed];
m3_478 -> m3_527  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m3_478 -> m3_531  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m3_478 -> m3_488  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m3_480 -> m3_527  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m3_480 -> m3_528  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.HistoricalDataEventArgs", style=dashed];
m3_494 -> m3_538  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_482 -> m3_535  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ErrorEventArgs", style=dashed];
m3_482 -> m3_491  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m3_482 -> m3_503  [color=darkseagreen4, key=1, label=pacingViolation, style=dashed];
m3_498 -> m3_504  [color=darkseagreen4, key=1, label=rate, style=dashed];
m3_818 -> m3_912  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m3_980 -> m3_983  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m3_980 -> m3_985  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m3_980 -> m3_986  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m3_980 -> m3_990  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m3_980 -> m3_991  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m3_981 -> m3_985  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m3_981 -> m3_990  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m3_981 -> m3_991  [color=darkseagreen4, key=1, label=ibSymbol, style=dashed];
m3_987 -> m3_990  [color=darkseagreen4, key=1, label=expiryDate, style=dashed];
m3_988 -> m3_990  [color=darkseagreen4, key=1, label=right, style=dashed];
m3_982 -> m3_985  [color=darkseagreen4, key=1, label=market, style=dashed];
m3_982 -> m3_990  [color=darkseagreen4, key=1, label=market, style=dashed];
m3_982 -> m3_991  [color=darkseagreen4, key=1, label=market, style=dashed];
m3_824 -> m3_832  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_371 -> m3_373  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m3_375 -> m3_378  [color=darkseagreen4, key=1, label=details, style=dashed];
m3_542 -> m3_547  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_542 -> m3_549  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_542 -> m3_567  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_543 -> m3_549  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m3_543 -> m3_551  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m3_543 -> m3_553  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m3_543 -> m3_555  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m3_543 -> m3_558  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m3_543 -> m3_559  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m3_543 -> m3_563  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m3_543 -> m3_565  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m3_543 -> m3_572  [color=darkseagreen4, key=1, label=errorCode, style=dashed];
m3_545 -> m3_549  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m3_545 -> m3_559  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m3_545 -> m3_572  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m3_548 -> m3_559  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m3_548 -> m3_572  [color=darkseagreen4, key=1, label=errorMsg, style=dashed];
m3_550 -> m3_559  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m3_550 -> m3_572  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m3_552 -> m3_559  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m3_552 -> m3_572  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m3_554 -> m3_559  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m3_554 -> m3_572  [color=darkseagreen4, key=1, label=brokerageMessageType, style=dashed];
m3_1029 -> m3_1031  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m3_1031 -> m3_1033  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_1034 -> m3_1036  [color=darkseagreen4, key=1, label=underlyingTick, style=dashed];
m3_1064 -> m3_1097  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_1095 -> m3_1099  [color=darkseagreen4, key=1, label=market, style=dashed];
m3_1096 -> m3_1099  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m3_321 -> m3_332  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_321 -> m3_334  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_328 -> m3_332  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m3_322 -> m3_332  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m3_326 -> m3_332  [color=darkseagreen4, key=1, label=ibOrderId, style=dashed];
m3_679 -> m3_688  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m3_679 -> m3_695  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m3_686 -> m3_695  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_686 -> m3_696  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_690 -> m3_696  [color=darkseagreen4, key=1, label=currentQuantityFilled, style=dashed];
m3_691 -> m3_696  [color=darkseagreen4, key=1, label=totalQuantityFilled, style=dashed];
m3_693 -> m3_696  [color=darkseagreen4, key=1, label=price, style=dashed];
m3_692 -> m3_695  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m3_692 -> m3_696  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m3_694 -> m3_696  [color=darkseagreen4, key=1, label=status, style=dashed];
m3_86 -> m3_109  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_86 -> m3_92  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_632 -> m3_634  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m3_632 -> m3_636  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m3_632 -> m3_637  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountValueEventArgs", style=dashed];
m3_635 -> m3_637  [color=darkseagreen4, key=1, label=cashBalance, style=dashed];
m3_85 -> m3_104  [color=darkseagreen4, key=1, label=orders, style=dashed];
m3_85 -> m3_96  [color=darkseagreen4, key=1, label=orders, style=dashed];
m3_87 -> m3_104  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OpenOrderEventArgs", style=dashed];
m3_160 -> m3_169  [color=darkseagreen4, key=1, label=filter, style=dashed];
m3_161 -> m3_186  [color=darkseagreen4, key=1, label=details, style=dashed];
m3_161 -> m3_174  [color=darkseagreen4, key=1, label=details, style=dashed];
m3_162 -> m3_182  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_162 -> m3_170  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_166 -> m3_185  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m3_166 -> m3_186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m3_163 -> m3_181  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_163 -> m3_185  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_163 -> m3_169  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_165 -> m3_181  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.RequestEndEventArgs", style=dashed];
m3_645 -> m3_654  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m3_645 -> m3_662  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.OrderStatusEventArgs", style=dashed];
m3_652 -> m3_662  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_652 -> m3_663  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_652 -> m3_664  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_652 -> m3_665  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_652 -> m3_666  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_652 -> m3_667  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_656 -> m3_663  [color=darkseagreen4, key=1, label=status, style=dashed];
m3_656 -> m3_664  [color=darkseagreen4, key=1, label=status, style=dashed];
m3_656 -> m3_666  [color=darkseagreen4, key=1, label=status, style=dashed];
m3_656 -> m3_667  [color=darkseagreen4, key=1, label=status, style=dashed];
m3_656 -> m3_668  [color=darkseagreen4, key=1, label=status, style=dashed];
m3_658 -> m3_663  [color=darkseagreen4, key=1, label=currentQuantityFilled, style=dashed];
m3_659 -> m3_663  [color=darkseagreen4, key=1, label=totalQuantityFilled, style=dashed];
m3_660 -> m3_662  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m3_660 -> m3_663  [color=darkseagreen4, key=1, label=remainingQuantity, style=dashed];
m3_661 -> m3_663  [color=darkseagreen4, key=1, label=price, style=dashed];
m3_753 -> m3_842  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m3_193 -> m3_197  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m3_193 -> m3_210  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m3_193 -> m3_223  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m3_193 -> m3_231  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m3_194 -> m3_197  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m3_194 -> m3_210  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m3_194 -> m3_223  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m3_194 -> m3_231  [color=darkseagreen4, key=1, label=maxAttempts, style=dashed];
m3_210 -> m3_210  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m3_210 -> m3_223  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m3_210 -> m3_231  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m3_223 -> m3_223  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m3_223 -> m3_231  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m3_231 -> m3_231  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m3_195 -> m3_228  [color=darkseagreen4, key=1, label=existingSessionDetected, style=dashed];
m3_200 -> m3_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_202 -> m3_259  [color=darkseagreen4, key=1, label=error, style=dashed];
m3_208 -> m3_228  [color=darkseagreen4, key=1, label=existingSessionDetected, style=dashed];
m3_1236 -> m3_1244  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m3_1236 -> m3_1246  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m3_1236 -> m3_1248  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m3_1236 -> m3_1250  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m3_1239 -> m3_1244  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_1242 -> m3_1244  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m3_1254 -> m3_1257  [color=darkseagreen4, key=1, label=history, style=dashed];
m3_1255 -> m3_1257  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m3_1255 -> m3_1275  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m3_1256 -> m3_1275  [color=darkseagreen4, key=1, label=requestEndTime, style=dashed];
m3_1253 -> m3_1263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1253 -> m3_1266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1253 -> m3_1269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1253 -> m3_1257  [color=darkseagreen4, key=1, label=history, style=dashed];
m3_1257 -> m3_1274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_602 -> m3_606  [color=darkseagreen4, key=1, label=subscribedSymbols, style=dashed];
m3_410 -> m3_431  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m3_422 -> m3_432  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m3_422 -> m3_433  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m3_423 -> m3_431  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_425 -> m3_428  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_425 -> m3_442  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_425 -> m3_432  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_426 -> m3_439  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m3_426 -> m3_436  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m3_427 -> m3_439  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ContractDetailsEventArgs", style=dashed];
m3_351 -> m3_353  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m3_355 -> m3_358  [color=darkseagreen4, key=1, label=details, style=dashed];
m3_406 -> m3_408  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m3_407 -> m3_419  [color=darkseagreen4, key=1, label=exchanges, style=dashed];
m3_408 -> m3_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_408 -> m3_418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1200 -> m3_1223  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m3_1200 -> m3_1207  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m3_1204 -> m3_1223  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_1204 -> m3_1213  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m3_1204 -> m3_1233  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m3_1205 -> m3_1210  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_1203 -> m3_1223  [color=darkseagreen4, key=1, label=futuresExchanges, style=dashed];
m3_1213 -> m3_1226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1213 -> m3_1229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1213 -> m3_1232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1213 -> m3_1215  [color=darkseagreen4, key=1, label=filteredResults, style=dashed];
m3_1209 -> m3_1211  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m3_1070 -> m3_1073  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1070 -> m3_1074  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1070 -> m3_1075  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1070 -> m3_1077  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1077 -> m3_1080  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_1077 -> m3_1085  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_1077 -> m3_1086  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_1077 -> m3_1088  [color=darkseagreen4, key=1, label=id, style=dashed];
m3_676 -> m3_720  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_676 -> m3_721  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_676 -> m3_723  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_676 -> m3_725  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_1338 -> m3_1341  [color=darkseagreen4, key=1, label=files, style=dashed];
m3_1339 -> m3_1343  [color=darkseagreen4, key=1, label=lastLogUpdateTime, style=dashed];
m3_1340 -> m3_1346  [color=darkseagreen4, key=1, label=ibControllerLogFileName, style=dashed];
m3_1348 -> m3_1351  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_1345 -> m3_1346  [color=darkseagreen4, key=1, label=ibControllerLogFileName, style=dashed];
m3_1349 -> m3_1364  [color=darkseagreen4, key=1, label=separatorLine, style=dashed];
m3_1350 -> m3_1363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1351 -> m3_1366  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1376 -> m3_20  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_40  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_56  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_65  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_76  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_104  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_91  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_112  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_152  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_155  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_169  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_190  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_192  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_198  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_199  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_255  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_256  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_203  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_204  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_214  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_216  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_217  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_218  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_220  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_222  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_226  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_265  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_267  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_291  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_276  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_279  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_296  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_297  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_298  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_299  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_307  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_308  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_309  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_310  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_311  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_316  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_317  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_332  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_334  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_353  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_364  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_373  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_400  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_387  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_431  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_456  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_468  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_488  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_547  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_555  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_557  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_559  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_561  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_564  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_571  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_572  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_583  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_585  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_591  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_593  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_594  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_601  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_603  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_604  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_605  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_606  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_612  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_616  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_618  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_619  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_621  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_630  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_636  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_637  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_647  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_648  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_649  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_662  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_663  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_681  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_682  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_683  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_695  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_696  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_713  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_720  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_725  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_731  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_985  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_990  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_991  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_999  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1001  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1005  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1007  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1028  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1030  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1033  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1042  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1043  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1045  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1049  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1055  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1057  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1071  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1072  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1075  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1077  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1078  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1080  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1082  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1085  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1086  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1088  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1106  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1108  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1131  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1145  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1147  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1159  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1171  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1177  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1184  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1191  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1196  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1198  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1215  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1237  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1246  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1248  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1293  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1376 -> m3_1372  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m3_1377 -> m3_104  [color=darkseagreen4, key=1, label=orders, style=dashed];
m3_1378 -> m3_109  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_1381 -> m3_181  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_1381 -> m3_185  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_1382 -> m3_182  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_1383 -> m3_186  [color=darkseagreen4, key=1, label=details, style=dashed];
m3_1384 -> m3_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_1385 -> m3_294  [color=darkseagreen4, key=1, label=firstAccountUpdateReceived, style=dashed];
m3_1386 -> m3_396  [color=darkseagreen4, key=1, label=requestId, style=dashed];
m3_1388 -> m3_401  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_1389 -> m3_419  [color=darkseagreen4, key=1, label=exchanges, style=dashed];
m3_1390 -> m3_439  [color=darkseagreen4, key=1, label=contractDetails, style=dashed];
m3_1391 -> m3_442  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_1392 -> m3_517  [color=darkseagreen4, key=1, label=invertedSymbol, style=dashed];
m3_1393 -> m3_517  [color=darkseagreen4, key=1, label=normalSymbol, style=dashed];
m3_1394 -> m3_520  [color=darkseagreen4, key=1, label=marketDataTicker, style=dashed];
m3_1395 -> m3_522  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_1396 -> m3_523  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_1396 -> m3_532  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m3_1397 -> m3_527  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m3_1397 -> m3_531  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m3_1398 -> m3_528  [color=darkseagreen4, key=1, label=data, style=dashed];
m3_1399 -> m3_1223  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m3_1400 -> m3_1223  [color=darkseagreen4, key=1, label=futuresExchanges, style=dashed];
m3_1401 -> m3_1233  [color=darkseagreen4, key=1, label=exchangeFilter, style=dashed];
m3_1402 -> m3_1275  [color=darkseagreen4, key=1, label=requestStartTime, style=dashed];
m3_1403 -> m3_1275  [color=darkseagreen4, key=1, label=requestEndTime, style=dashed];
m3_1404 -> m3_1317  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m3_1404 -> m3_1325  [color=darkseagreen4, key=1, label=historicalTicker, style=dashed];
m3_1405 -> m3_1319  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m3_1407 -> m3_1321  [color=darkseagreen4, key=1, label=historyPiece, style=dashed];
m3_1408 -> m3_1322  [color=darkseagreen4, key=1, label=dataDownloading, style=dashed];
m3_1409 -> m3_1326  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m3_1409 -> m3_1332  [color=darkseagreen4, key=1, label=dataDownloaded, style=dashed];
m3_1410 -> m3_1364  [color=darkseagreen4, key=1, label=separatorLine, style=dashed];
m4_17 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m4_17 -> m4_20  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m4_17 -> m4_21  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m4_17 -> m4_22  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m4_33 -> m4_18  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.BollingerBands", style=dashed];
m4_33 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.BollingerBands", style=dashed];
m4_33 -> m4_20  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.BollingerBands", style=dashed];
m4_33 -> m4_21  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.BollingerBands", style=dashed];
m4_33 -> m4_26  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.BollingerBands", style=dashed];
m4_33 -> m4_27  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.BollingerBands", style=dashed];
m4_33 -> m4_28  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.BollingerBands", style=dashed];
m4_33 -> m4_29  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.BollingerBands", style=dashed];
m4_33 -> m4_30  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.BollingerBands", style=dashed];
m5_7 -> m5_9  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_7 -> m5_13  [color=darkseagreen4, key=1, label=double, style=dashed];
m5_7 -> m5_15  [color=darkseagreen4, key=1, label=double, style=dashed];
m5_77 -> m5_84  [color=green, key=1, label=string, style=dashed];
m5_77 -> m5_85  [color=green, key=1, label=JToken, style=dashed];
m5_77 -> m5_86  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m5_77 -> m5_87  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m5_80 -> m5_84  [color=green, key=1, label=environment, style=dashed];
m5_83 -> m5_85  [color=green, key=1, label=JToken, style=dashed];
m5_83 -> m5_87  [color=green, key=1, label=JToken, style=dashed];
m5_22 -> m5_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType", style=dashed];
m5_26 -> m5_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_26 -> m5_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_29 -> m5_33  [color=darkseagreen4, key=1, label=token, style=dashed];
m5_53 -> m5_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_53 -> m5_65  [color=darkseagreen4, key=1, label=T, style=dashed];
m5_67 -> m5_69  [color=darkseagreen4, key=1, label=value, style=dashed];
m5_67 -> m5_70  [color=darkseagreen4, key=1, label=value, style=dashed];
m5_66 -> m5_68  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_66 -> m5_69  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_66 -> m5_70  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_11 -> m5_13  [color=darkseagreen4, key=1, label=currentEnvironment, style=dashed];
m5_10 -> m5_15  [color=darkseagreen4, key=1, label=environments, style=dashed];
m5_10 -> m5_20  [color=darkseagreen4, key=1, label=environments, style=dashed];
m5_34 -> m5_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
m5_34 -> m5_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
m5_34 -> m5_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
m5_34 -> m5_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
m5_34 -> m5_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
m5_34 -> m5_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
m10_39 -> m10_9  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CandlestickPatterns.ShootingStar", style=dashed];
m10_39 -> m10_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CandlestickPatterns.ShootingStar", style=dashed];
m10_39 -> m10_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CandlestickPatterns.ShootingStar", style=dashed];
m10_39 -> m10_36  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.CandlestickPatterns.ShootingStar", style=dashed];
m11_8 -> m11_11  [color=green, key=1, label=quote, style=dashed];
m11_9 -> m11_12  [color=green, key=1, label=trade, style=dashed];
m11_10 -> m11_12  [color=green, key=1, label=cryptoSecurity, style=dashed];
m11_13 -> m11_15  [color=green, key=1, label=price, style=dashed];
m11_13 -> m11_16  [color=green, key=1, label=price, style=dashed];
m11_13 -> m11_17  [color=green, key=1, label=price, style=dashed];
m11_13 -> m11_18  [color=green, key=1, label=price, style=dashed];
m11_38 -> m11_34  [color=green, key=1, label="QuantConnect.Tests.Common.Orders.Fills.LatestPriceFillModelTests.TestableLatestFillModel", style=dashed];
m12_8 -> m12_10  [color=green, key=1, label=order, style=dashed];
m12_13 -> m12_5  [color=green, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m12_13 -> m12_9  [color=green, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m13_6 -> m13_12  [color=darkseagreen4, key=1, label=bool, style=dashed];
m13_6 -> m13_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m13_6 -> m13_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m13_6 -> m13_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m13_14 -> m13_16  [color=darkseagreen4, key=1, label=seedData, style=dashed];
m13_14 -> m13_17  [color=darkseagreen4, key=1, label=seedData, style=dashed];
m13_30 -> m13_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.BrokerageModelSecurityInitializer", style=dashed];
m17_28 -> m17_31  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m17_34 -> m17_37  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m17_30 -> m17_32  [color=green, key=1, label=order, style=dashed];
m17_40 -> m17_43  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m17_46 -> m17_49  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m17_52 -> m17_55  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m17_21 -> m17_25  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m17_35 -> m17_9  [color=green, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_35 -> m17_10  [color=green, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_35 -> m17_24  [color=green, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_35 -> m17_30  [color=green, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_35 -> m17_31  [color=green, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_35 -> m17_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_35 -> m17_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_35 -> m17_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_35 -> m17_18  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_58 -> m17_61  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m17_9 -> m17_11  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m17_17 -> m17_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m17_8 -> m17_10  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m17_8 -> m17_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m17_14 -> m17_18  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m17_2 -> m17_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m17_2 -> m17_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_5 -> m17_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m17_5 -> m17_11  [color=darkseagreen4, key=1, label=TSecond, style=dashed];
m17_6 -> m17_11  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m17_63 -> m17_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m17_64 -> m17_10  [color=darkseagreen4, key=1, label=bool, style=dashed];
m17_65 -> m17_11  [color=darkseagreen4, key=1, label=TSecond, style=dashed];
m18_0 -> m18_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
m18_0 -> m18_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m18_0 -> m18_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m18_0 -> m18_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m18_18 -> m18_24  [color=darkseagreen4, key=1, label="QuantConnect.Util.Composer", style=dashed];
m18_19 -> m18_24  [color=darkseagreen4, key=1, label=setupHandlerTypeName, style=dashed];
m18_20 -> m18_24  [color=darkseagreen4, key=1, label=transactionHandlerTypeName, style=dashed];
m18_21 -> m18_24  [color=darkseagreen4, key=1, label=realTimeHandlerTypeName, style=dashed];
m18_22 -> m18_24  [color=darkseagreen4, key=1, label=dataFeedHandlerTypeName, style=dashed];
m18_40 -> m18_33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m20_257 -> m20_261  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_443 -> m20_454  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1ServerDisconnectedArgs", style=dashed];
m20_439 -> m20_460  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_440 -> m20_466  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs", style=dashed];
m20_445 -> m20_447  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1TextLineEventArgs", style=dashed];
m20_444 -> m20_451  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1ServerReconnectFailedArgs", style=dashed];
m20_376 -> m20_382  [color=darkseagreen4, key=1, label=bool, style=dashed];
m20_377 -> m20_380  [color=darkseagreen4, key=1, label=item, style=dashed];
m20_377 -> m20_381  [color=darkseagreen4, key=1, label=item, style=dashed];
m20_377 -> m20_383  [color=darkseagreen4, key=1, label=item, style=dashed];
m20_157 -> m20_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_158 -> m20_162  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_164  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_166  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_168  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_170  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_172  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_174  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_176  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_178  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_180  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_182  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_184  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_186  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_188  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_190  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_192  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_196  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_198  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_201  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_203  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_205  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_207  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_209  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_222  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_225  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_229  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_231  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_233  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_235  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_237  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_239  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_241  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_243  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_158 -> m20_245  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_211 -> m20_214  [color=darkseagreen4, key=1, label=splits, style=dashed];
m20_216 -> m20_219  [color=darkseagreen4, key=1, label=splits, style=dashed];
m20_357 -> m20_359  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_8 -> m20_14  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_16  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_18  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_20  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_22  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_24  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_26  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_28  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_30  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_32  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_34  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_36  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_38  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_40  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_42  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_43  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_54  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_56  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_58  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_60  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_62  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_64  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_67  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_69  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_71  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_73  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_75  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_77  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_79  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_81  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_83  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_85  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_87  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_89  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_91  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_93  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_95  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_98  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_100  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_102  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_107  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_109  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_111  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_113  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_115  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_117  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_121  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_123  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_126  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_128  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_130  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_8 -> m20_132  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_333 -> m20_337  [color=darkseagreen4, key=1, label=tempActive, style=dashed];
m20_335 -> m20_339  [color=darkseagreen4, key=1, label=tempRegionOn, style=dashed];
m20_438 -> m20_457  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_441 -> m20_463  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs", style=dashed];
m20_442 -> m20_469  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs", style=dashed];
m20_387 -> m20_390  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_387 -> m20_391  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_405 -> m20_407  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_409  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_410  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_412  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_413  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_415  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_416  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_418  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_419  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_421  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_423  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_425  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_426  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_428  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_429  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_431  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_433  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_405 -> m20_435  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.TextLineEventArgs", style=dashed];
m20_266 -> m20_268  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_266 -> m20_270  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_266 -> m20_273  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_266 -> m20_275  [color=darkseagreen4, key=1, label=fields, style=dashed];
m20_472 -> m20_12  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_14  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_16  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_18  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_20  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_22  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_24  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_26  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_28  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_30  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_32  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_34  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_36  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_38  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_40  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_54  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_56  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_58  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_60  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_62  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_64  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_69  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_71  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_73  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_75  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_77  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_79  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_81  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_83  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_85  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_87  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_89  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_91  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_93  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_95  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_100  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_102  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_107  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_109  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_111  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_113  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_115  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_117  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_121  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_123  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_126  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_128  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_130  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_472 -> m20_132  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1SummaryUpdateEventArgs", style=dashed];
m20_473 -> m20_162  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_164  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_166  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_168  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_170  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_172  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_174  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_176  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_178  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_180  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_182  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_184  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_186  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_188  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_190  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_192  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_196  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_198  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_201  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_203  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_205  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_207  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_209  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_212  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_214  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_217  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_219  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_222  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_225  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_229  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_231  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_233  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_235  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_237  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_239  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_241  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_243  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_473 -> m20_245  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1FundamentalEventArgs", style=dashed];
m20_474 -> m20_253  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1TimerEventArgs", style=dashed];
m20_475 -> m20_261  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1NewsEventArgs", style=dashed];
m20_476 -> m20_268  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs", style=dashed];
m20_476 -> m20_270  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs", style=dashed];
m20_476 -> m20_273  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs", style=dashed];
m20_476 -> m20_275  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.Level1RegionalEventArgs", style=dashed];
m20_477 -> m20_288  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_290  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_292  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_298  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_300  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_302  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_307  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_309  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_311  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_313  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_317  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_319  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_321  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_325  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_327  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_329  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_338  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_340  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_477 -> m20_343  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1WatchItem", style=dashed];
m20_478 -> m20_352  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_353  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_358  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_359  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_363  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_366  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_369  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_373  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_378  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_380  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_381  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_388  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_390  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_391  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_395  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_399  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_400  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_402  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_407  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_410  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_413  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_416  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_419  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_426  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_429  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_435  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_446  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_447  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_450  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_451  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_453  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_454  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_456  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_457  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_459  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_460  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_462  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_463  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_465  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_466  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_468  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m20_478 -> m20_469  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.IQFeed.IQLevel1Client", style=dashed];
m21_10 -> m21_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.SecurityValues", style=dashed];
m21_26 -> m21_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Analysis.AlphaAnalysisContext", style=dashed];
m22_23 -> m22_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader", style=dashed];
m22_23 -> m22_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader", style=dashed];
m22_23 -> m22_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader", style=dashed];
m22_23 -> m22_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader", style=dashed];
m22_23 -> m22_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader", style=dashed];
m22_23 -> m22_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader", style=dashed];
m23_200 -> m23_203  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m23_200 -> m23_205  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m23_200 -> m23_207  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m23_191 -> m23_195  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_227 -> m23_229  [color=darkseagreen4, key=1, label=security, style=dashed];
m23_227 -> m23_230  [color=darkseagreen4, key=1, label=security, style=dashed];
m23_228 -> m23_230  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m23_296 -> m23_319  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m23_296 -> m23_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m23_320 -> m23_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m23_452 -> m23_454  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m23_452 -> m23_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m23_452 -> m23_462  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m23_452 -> m23_463  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m23_454 -> m23_456  [color=darkseagreen4, key=1, label=security, style=dashed];
m23_454 -> m23_457  [color=darkseagreen4, key=1, label=security, style=dashed];
m23_454 -> m23_458  [color=darkseagreen4, key=1, label=security, style=dashed];
m23_459 -> m23_477  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_461 -> m23_467  [color=darkseagreen4, key=1, label=ret, style=dashed];
m23_466 -> m23_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_90 -> m23_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_92 -> m23_92  [color=darkseagreen4, key=1, label=value, style=dashed];
m23_273 -> m23_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_88 -> m23_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m23_252 -> m23_252  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m23_482 -> m23_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_239 -> m23_241  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m23_246 -> m23_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_247 -> m23_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_218 -> m23_504  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_508 -> m23_511  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_103 -> m23_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_67 -> m23_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_68 -> m23_70  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m23_71 -> m23_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m23_70 -> m23_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m23_434 -> m23_440  [color=darkseagreen4, key=1, label=option, style=dashed];
m23_434 -> m23_441  [color=darkseagreen4, key=1, label=option, style=dashed];
m23_435 -> m23_437  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m23_336 -> m23_340  [color=darkseagreen4, key=1, label=bool, style=dashed];
m23_336 -> m23_341  [color=darkseagreen4, key=1, label=bool, style=dashed];
m23_95 -> m23_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m23_381 -> m23_538  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m23_381 -> m23_539  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m23_381 -> m23_541  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_543 -> m23_545  [color=darkseagreen4, key=1, label=security, style=dashed];
m23_264 -> m23_269  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m23_126 -> m23_138  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m23_129 -> m23_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_129 -> m23_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_129 -> m23_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_129 -> m23_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_391 -> m23_393  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m23_391 -> m23_399  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m23_388 -> m23_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m23_388 -> m23_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m23_387 -> m23_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m23_387 -> m23_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m23_429 -> m23_431  [color=darkseagreen4, key=1, label=future, style=dashed];
m23_417 -> m23_419  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m23_417 -> m23_425  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m23_414 -> m23_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m23_414 -> m23_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m23_413 -> m23_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m23_413 -> m23_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m23_356 -> m23_358  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_356 -> m23_359  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m23_356 -> m23_360  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_356 -> m23_361  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_356 -> m23_362  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m23_356 -> m23_363  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m23_356 -> m23_365  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_367 -> m23_369  [color=darkseagreen4, key=1, label=security, style=dashed];
m23_116 -> m23_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m23_117 -> m23_120  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m23_286 -> m23_302  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m23_286 -> m23_305  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m23_519 -> m23_522  [color=darkseagreen4, key=1, label=message, style=dashed];
m23_568 -> m23_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_172  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_196  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_201  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_205  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_207  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_225  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_227  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_241  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_266  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_268  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_269  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_274  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_275  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_282  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_300  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_304  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_305  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_308  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_309  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_311  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_317  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_321  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_337  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_351  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_354  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_358  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_360  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_362  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_368  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_371  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_379  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_383  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_393  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_395  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_398  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_409  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_419  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_421  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_424  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_430  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_437  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_440  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_444  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_447  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_450  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_454  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_455  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_458  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_462  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_463  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_465  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_488  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_491  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_498  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_502  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_504  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_509  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_511  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_513  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_515  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_520  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_522  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_526  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_538  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_544  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_548  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_568 -> m23_552  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m23_569 -> m23_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m23_570 -> m23_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_571 -> m23_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m24_16 -> m24_18  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m24_16 -> m24_22  [color=darkseagreen4, key=1, label="QuantConnect.TradingDayType", style=dashed];
m24_17 -> m24_24  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_17 -> m24_26  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_17 -> m24_28  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_17 -> m24_30  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_17 -> m24_32  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_17 -> m24_34  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_17 -> m24_36  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_17 -> m24_38  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_21 -> m24_24  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_21 -> m24_26  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_21 -> m24_28  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_21 -> m24_30  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_21 -> m24_32  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_21 -> m24_34  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_21 -> m24_36  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_21 -> m24_38  [color=darkseagreen4, key=1, label="QuantConnect.TradingDay", style=dashed];
m24_23 -> m24_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Delisting", style=dashed];
m24_15 -> m24_51  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m24_42 -> m24_44  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m24_56 -> m24_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_56 -> m24_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_52 -> m24_75  [color=darkseagreen4, key=1, label=currentDate, style=dashed];
m24_52 -> m24_78  [color=darkseagreen4, key=1, label=currentDate, style=dashed];
m24_43 -> m24_47  [color=darkseagreen4, key=1, label=holidays, style=dashed];
m24_49 -> m24_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_50 -> m24_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_80 -> m24_13  [color=green, key=1, label="QuantConnect.TradingCalendar", style=dashed];
m24_80 -> m24_9  [color=darkseagreen4, key=1, label="QuantConnect.TradingCalendar", style=dashed];
m24_80 -> m24_18  [color=darkseagreen4, key=1, label="QuantConnect.TradingCalendar", style=dashed];
m24_82 -> m24_75  [color=darkseagreen4, key=1, label=currentDate, style=dashed];
m24_82 -> m24_78  [color=darkseagreen4, key=1, label=currentDate, style=dashed];
m24_81 -> m24_22  [color=darkseagreen4, key=1, label="QuantConnect.TradingDayType", style=dashed];
m25_13 -> m25_17  [color=green, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m25_18 -> m25_23  [color=green, key=1, label=symbol, style=dashed];
m25_18 -> m25_24  [color=green, key=1, label=symbol, style=dashed];
m25_21 -> m25_24  [color=green, key=1, label=holdings, style=dashed];
m25_28 -> m25_1  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m25_28 -> m25_2  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m25_28 -> m25_3  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m25_28 -> m25_4  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m25_28 -> m25_5  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m25_28 -> m25_6  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m25_28 -> m25_7  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m25_28 -> m25_14  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m25_28 -> m25_23  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m25_28 -> m25_24  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", style=dashed];
m30_74 -> m30_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_128 -> m30_131  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m30_128 -> m30_133  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m30_81 -> m30_84  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m30_63 -> m30_66  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_63 -> m30_67  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m30_157 -> m30_66  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_157 -> m30_72  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_157 -> m30_74  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_157 -> m30_82  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_157 -> m30_84  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_157 -> m30_88  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_157 -> m30_90  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_157 -> m30_129  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_157 -> m30_131  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_157 -> m30_133  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m30_157 -> m30_134  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m31_0 -> m31_8  [color=green, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m31_1 -> m31_3  [color=green, key=1, label=filter, style=dashed];
m31_2 -> m31_7  [color=green, key=1, label="System.Exception", style=dashed];
m31_2 -> m31_8  [color=green, key=1, label="System.Exception", style=dashed];
m31_20 -> m31_24  [color=green, key=1, label=current, style=dashed];
m31_20 -> m31_25  [color=green, key=1, label=current, style=dashed];
m31_33 -> m31_45  [color=green, key=1, label="System.Exception", style=dashed];
m31_43 -> m31_45  [color=green, key=1, label=handler, style=dashed];
m31_6 -> m31_8  [color=green, key=1, label="System.Exception", style=dashed];
m31_48 -> m31_8  [color=green, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m31_49 -> m31_19  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator", style=dashed];
m31_49 -> m31_21  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator", style=dashed];
m31_49 -> m31_24  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator", style=dashed];
m31_49 -> m31_25  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator", style=dashed];
m31_49 -> m31_23  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator", style=dashed];
m31_49 -> m31_36  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator", style=dashed];
m31_49 -> m31_40  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator", style=dashed];
m31_49 -> m31_45  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFilterEnumerator", style=dashed];
m32_68 -> m32_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_68 -> m32_88  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_84 -> m32_90  [color=darkseagreen4, key=1, label=order, style=dashed];
m32_31 -> m32_33  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m32_100 -> m32_47  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
}
