digraph  {
m3_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="44-44"];
m3_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="_dataCacheProvider = dataCacheProvider", span="46-46"];
m3_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="_date = date", span="47-47"];
m3_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="_config = config", span="48-48"];
m3_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="_isLiveMode = isLiveMode", span="49-49"];
m3_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="_factory = (BaseData)ObjectActivator.GetActivator(config.Type).Invoke(new object[] { config.Type })", span="50-50"];
m3_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="44-44"];
m3_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="70-70"];
m3_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="SubscriptionDataSourceReader.CheckRemoteFileCache()", span="72-72"];
m3_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", color=red, community=0, file="CollectionSubscriptionDataSourceReader.cs", label="4: yield return instances;", span="112-112"];
m3_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="source.TransportMedium", span="77-77"];
m3_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="reader = new RestSubscriptionStreamReader(source.Source)", span="81-81"];
m3_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="reader = new LocalFileSubscriptionStreamReader(_dataCacheProvider, source.Source)", span="84-84"];
m3_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="reader = new RemoteFileSubscriptionStreamReader(_dataCacheProvider, source.Source, Globals.Cache)", span="87-87"];
m3_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="OnInvalidSource(source, new Exception(''Reader must generate a BaseDataCollection with the FileFormat.Collection''))", span="102-102"];
m3_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="IStreamReader reader = null", span="74-74"];
m3_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="SubscriptionTransportMedium.Rest", span="80-80"];
m3_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="SubscriptionTransportMedium.LocalFile", span="83-83"];
m3_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="SubscriptionTransportMedium.RemoteFile", span="86-86"];
m3_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="var raw = ''''", span="91-91"];
m3_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="!reader.EndOfStream", span="92-92"];
m3_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="raw = reader.ReadLine()", span="97-97"];
m3_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="BaseDataCollection instances", span="94-94"];
m3_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="var result = _factory.Reader(_config, raw, _date, _isLiveMode)", span="98-98"];
m3_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="OnReaderError(raw, err)", span="108-108"];
m3_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="instances = result as BaseDataCollection", span="99-99"];
m3_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="instances == null", span="100-100"];
m3_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label=Exception, span="106-106"];
m3_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="70-70"];
m3_45 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m3_8 [cluster="System.Func<T, TResult>.Invoke(T)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m3_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", span="127-127"];
m3_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="var handler = ReaderError", span="129-129"];
m3_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="handler(this, new ReaderErrorEventArgs(line, exception))", span="130-130"];
m3_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="handler != null", span="130-130"];
m3_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnReaderError(string, System.Exception)", span="127-127"];
m3_37 [cluster="System.Exception.Exception(string)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m3_36 [cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144"];
m3_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.LocalFileSubscriptionStreamReader.LocalFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="41-41"];
m3_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", span="45-45"];
m3_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RemoteFileSubscriptionStreamReader.RemoteFileSubscriptionStreamReader(QuantConnect.Interfaces.IDataCacheProvider, string, string)", span="37-37"];
m3_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="46-46"];
m3_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.CheckRemoteFileCache()", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.CheckRemoteFileCache()", span="58-58"];
m3_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="138-138"];
m3_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="var handler = InvalidSource", span="140-140"];
m3_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="handler(this, new InvalidSourceEventArgs(source, exception))", span="141-141"];
m3_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="handler != null", span="141-141"];
m3_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.OnInvalidSource(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="138-138"];
m3_35 [cluster="QuantConnect.Interfaces.IStreamReader.ReadLine()", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Interfaces.IStreamReader.ReadLine()", span="38-38"];
m3_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Transport.RestSubscriptionStreamReader.RestSubscriptionStreamReader(string)", span="35-35"];
m3_7 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="50-50"];
m3_51 [file="CollectionSubscriptionDataSourceReader.cs", label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", span=""];
m4_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33"];
m4_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="CommissionReport = commissionReport", span="35-35"];
m4_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", file="CommissionReportEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs.CommissionReportEventArgs(CommissionReport)", span="33-33"];
m4_3 [file="CommissionReportEventArgs.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs", span=""];
m5_0 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="Entry QuantConnect.Packets.Controls.Controls()", span="70-70"];
m5_1 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="MinuteLimit = 500", span="72-72"];
m5_2 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="SecondLimit = 100", span="73-73"];
m5_3 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="TickLimit = 30", span="74-74"];
m5_4 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="RamAllocation = 1024", span="75-75"];
m5_5 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="BacktestLogLimit = 10000", span="76-76"];
m5_6 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="DailyLogLimit = 3000000", span="77-77"];
m5_7 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="RemainingLogAllowance = 10000", span="78-78"];
m5_8 [cluster="QuantConnect.Packets.Controls.Controls()", file="Controls.cs", label="Exit QuantConnect.Packets.Controls.Controls()", span="70-70"];
m5_9 [file="Controls.cs", label="QuantConnect.Packets.Controls", span=""];
m6_66 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="127-127"];
m6_56 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="DefaultMarginCallModel.cs", label="!security.Holdings.Invested", span="182-182"];
m6_21 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="DefaultMarginCallModel.cs", label="decimal margin = 1/leverage", span="91-91"];
m6_0 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35"];
m6_1 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="3: initialMarginRequirement < 0 || initialMarginRequirement > 1", span="37-37"];
m6_2 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", color=green, community=0, file="DefaultMarginCallModel.cs", label="3: throw new ArgumentException(''Initial margin requirement must be between 0 and 1'');", span="39-39"];
m6_3 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="DefaultMarginCallModel.cs", label="maintenanceMarginRequirement < 0 || maintenanceMarginRequirement > 1", span="42-42"];
m6_54 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="DefaultMarginCallModel.cs", label="totalMargin <= netLiquidationValue*(1 + marginBuffer)", span="177-177"];
m6_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="var previousState = kvp.Value.State", span="64-64"];
m6_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="var insightPeriod = _resolution.ToTimeSpan().Multiply(_period)", span="69-69"];
m6_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label=state, span="71-71"];
m6_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="state != previousState && rsi.IsReady", span="67-67"];
m6_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="var state = GetState(rsi, previousState)", span="65-65"];
m6_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="State.TrippedLow", span="73-73"];
m6_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="104-104"];
m6_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="95-95"];
m6_26 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="changes.RemovedSecurities.Count > 0", span="98-98"];
m6_61 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="DefaultMarginCallModel.cs", label="security.Holdings.IsLong", span="195-195"];
m6_63 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="DefaultMarginCallModel.cs", label="return new MarketOrder(security.Symbol, quantity, security.Time, ''Margin Call'', security.Type);", span="201-201"];
m6_64 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="172-172"];
m6_65 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m6_67 [cluster="System.Math.Max(int, int)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m6_68 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="51-51"];
m6_60 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="DefaultMarginCallModel.cs", label="quantity = Math.Max(1, Math.Min((int)security.Holdings.AbsoluteQuantity, quantity))", span="194-194"];
m6_58 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="DefaultMarginCallModel.cs", label="decimal delta = totalMargin - netLiquidationValue", span="188-188"];
m6_81 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="DefaultMarginCallModel.cs", label="Symbol = symbol", span="192-192"];
m6_82 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="DefaultMarginCallModel.cs", label="RSI = rsi", span="193-193"];
m6_83 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="DefaultMarginCallModel.cs", label="State = State.Middle", span="194-194"];
m6_84 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData.SymbolData(QuantConnect.Symbol, QuantConnect.Indicators.RelativeStrengthIndex)", span="190-190"];
m6_52 [cluster="System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ToHashSet<T, TResult>(System.Func<T, TResult>)", span="82-82"];
m6_59 [cluster="Unk.Select", file="DefaultMarginCallModel.cs", label="Entry Unk.Select", span=""];
m6_53 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m6_62 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106"];
m6_55 [cluster="System.Collections.Generic.HashSet<T>.Clear()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.HashSet<T>.Clear()", span="0-0"];
m6_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="979-979"];
m6_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="var removed = changes.RemovedSecurities.ToHashSet(x => x.Symbol)", span="100-100"];
m6_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="insights.Add(new Insight(symbol, InsightType.Price, InsightDirection.Up, insightPeriod))", span="74-74"];
m6_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="State.TrippedHigh", span="77-77"];
m6_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="insights.Add(new Insight(symbol, InsightType.Price, InsightDirection.Down, insightPeriod))", span="78-78"];
m6_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="var rsi = kvp.Value.RSI", span="63-63"];
m6_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="DefaultMarginCallModel.cs", label="4: var insights = new List<Insight>()", span="59-59"];
m6_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="DefaultMarginCallModel.cs", label="4: _symbolDataBySymbol", span="60-60"];
m6_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="57-57"];
m6_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="DefaultMarginCallModel.cs", label="var symbol = kvp.Key", span="62-62"];
m6_19 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="DefaultMarginCallModel.cs", label="leverage < 1", span="86-86"];
m6_18 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="84-84"];
m6_20 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="DefaultMarginCallModel.cs", label="throw new ArgumentException(''Leverage must be greater than or equal to 1.'');", span="88-88"];
m6_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", span="150-150"];
m6_23 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
m6_24 [cluster="System.TimeSpan.Multiply(double)", file="DefaultMarginCallModel.cs", label="Entry System.TimeSpan.Multiply(double)", span="230-230"];
m6_30 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="116-116"];
m6_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="changes.AddedSecurities.Count > 0", span="112-112"];
m6_36 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="changes.AddedSecurities", span="115-115"];
m6_38 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="var rsi = algorithm.RSI(added.Symbol, _period, MovingAverageType.Wilders, _resolution)", span="119-119"];
m6_42 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="var history = algorithm.History(newSymbolData.Select(x => x.Symbol), _period, _resolution)", span="127-127"];
m6_31 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="DefaultMarginCallModel.cs", label="return security.Holdings.AbsoluteHoldingsCost*MaintenanceMarginRequirement;", span="118-118"];
m6_32 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="116-116"];
m6_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="subscription.Consolidators.Clear()", span="106-106"];
m6_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="var newSymbolData = new List<SymbolData>()", span="114-114"];
m6_41 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="newSymbolData.Add(symbolData)", span="122-122"];
m6_37 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="!_symbolDataBySymbol.ContainsKey(added.Symbol)", span="117-117"];
m6_39 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="var symbolData = new SymbolData(added.Symbol, rsi)", span="120-120"];
m6_40 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="_symbolDataBySymbol[added.Symbol] = symbolData", span="121-121"];
m6_43 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label=history, span="128-128"];
m6_44 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="slice.Keys", span="130-130"];
m6_45 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="var value = slice[symbol]", span="132-132"];
m6_49 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="_symbolDataBySymbol.TryGetValue(symbol, out symbolData)", span="137-137"];
m6_46 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="var list = value as IList", span="133-133"];
m6_47 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="var data = (BaseData) (list != null ? list[list.Count - 1] : value)", span="134-134"];
m6_48 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="SymbolData symbolData", span="136-136"];
m6_50 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="symbolData.RSI.Update(data.EndTime, data.Value)", span="139-139"];
m6_51 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="95-95"];
m6_69 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="QuantConnect.Securities.SecurityMarginModel", span=""];
m6_71 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="rsi < 30m", span="157-157"];
m6_73 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="previous == State.TrippedLow", span="162-162"];
m6_74 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="rsi > 35m", span="164-164"];
m6_76 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="previous == State.TrippedHigh", span="170-170"];
m6_77 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="rsi < 65m", span="172-172"];
m6_79 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="return previous;", span="178-178"];
m6_70 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="return State.TrippedHigh;", span="154-154"];
m6_72 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="return State.TrippedLow;", span="159-159"];
m6_75 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="return State.Middle;", span="166-166"];
m6_78 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="return State.Middle;", span="174-174"];
m6_80 [cluster="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.GetState(QuantConnect.Indicators.RelativeStrengthIndex, QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State)", span="150-150"];
m6_85 [file="DefaultMarginCallModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", span=""];
m6_86 [file="DefaultMarginCallModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", span=""];
m7_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m7_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="RequestId = requestId", span="45-45"];
m7_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Contract = contract", span="46-46"];
m7_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Execution = execution", span="47-47"];
m7_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m7_8 [cluster="Unk.Format", file="ExecutionDetailsEventArgs.cs", label="Entry Unk.Format", span=""];
m7_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="ExecutionDetailsEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m7_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", color=green, community=0, file="ExecutionDetailsEventArgs.cs", label="1: return string.Format(\r\n                ''RequestId: {0}, Symbol: {1}, OrderId: {2}, Time: {3}, Side: {4}, Shares: {5}, Price: {6}, CumQty: {7}, PermId: {8}'',\r\n                RequestId, Contract.Symbol, Execution.OrderId, Execution.Time, Execution.Side, Execution.Shares, Execution.Price, Execution.CumQty, Execution.PermId);", span="55-57"];
m7_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="ExecutionDetailsEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m7_9 [file="ExecutionDetailsEventArgs.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", span=""];
m8_43 [cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Extensions.cs", label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202"];
m8_23 [cluster="System.Math.Abs(decimal)", file="Extensions.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m8_19 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", span="62-62"];
m8_20 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Extensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m8_50 [cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", file="Extensions.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", span="207-207"];
m8_69 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.IntradayVwap(string)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.IntradayVwap(string)", span="204-204"];
m8_74 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.IntradayVwap(string)", file="Extensions.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.IntradayVwap(string)", span="204-204"];
m8_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Extensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m8_89 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", span="256-256"];
m8_96 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="var tick = input as Tick", span="258-258"];
m8_101 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="var tradeBar = input as TradeBar", span="267-267"];
m8_97 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="tick?.TickType == TickType.Trade", span="260-260"];
m8_98 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="volume = tick.Quantity", span="262-262"];
m8_99 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="averagePrice = tick.LastPrice", span="263-263"];
m8_100 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="return true;", span="264-264"];
m8_102 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="tradeBar?.IsFillForward == false", span="268-268"];
m8_103 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="volume = tradeBar.Volume", span="270-270"];
m8_104 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="averagePrice = (tradeBar.High + tradeBar.Low + tradeBar.Close) / 3m", span="271-271"];
m8_106 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="volume = 0", span="275-275"];
m8_105 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="return true;", span="272-272"];
m8_107 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="averagePrice = 0", span="276-276"];
m8_108 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="return false;", span="277-277"];
m8_109 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="Extensions.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", span="256-256"];
m8_21 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", span="140-140"];
m8_51 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="Extensions.cs", label="var vwap = data.VWAP", span="142-142"];
m8_52 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="Extensions.cs", label="unorderedQuantity > 0", span="143-143"];
m8_53 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="Extensions.cs", label="var price = data.Security.BidPrice == 0\r\n                    ? data.Security.Price\r\n                    : data.Security.BidPrice", span="145-147"];
m8_56 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="Extensions.cs", label="var price = data.Security.AskPrice == 0\r\n                    ? data.Security.AskPrice\r\n                    : data.Security.Price", span="156-158"];
m8_54 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="Extensions.cs", label="price < vwap", span="149-149"];
m8_57 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="Extensions.cs", label="price > vwap", span="160-160"];
m8_55 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="Extensions.cs", label="return true;", span="151-151"];
m8_59 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="Extensions.cs", label="return false;", span="166-166"];
m8_58 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="Extensions.cs", label="return true;", span="162-162"];
m8_60 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="Extensions.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", span="140-140"];
m8_42 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="Extensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m8_94 [cluster="System.NotImplementedException.NotImplementedException(string)", file="Extensions.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m8_95 [cluster="Unk.nameof", file="Extensions.cs", label="Entry Unk.nameof", span=""];
m8_27 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", span="169-169"];
m8_71 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="182-182"];
m8_48 [cluster="lambda expression", file="Extensions.cs", label="kvp.Value.ContainsMember(symbol)", span="134-134"];
m8_47 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="134-134"];
m8_49 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="134-134"];
m8_72 [cluster="lambda expression", file="Extensions.cs", label="(BaseData) bd", span="182-182"];
m8_73 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="182-182"];
m8_25 [cluster="System.Math.Sign(decimal)", file="Extensions.cs", label="Entry System.Math.Sign(decimal)", span="0-0"];
m8_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m8_40 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", span="175-175"];
m8_61 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="Extensions.cs", label="Security = security", span="177-177"];
m8_62 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="Extensions.cs", label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, security.Resolution)", span="178-178"];
m8_63 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="Extensions.cs", label="var name = algorithm.CreateIndicatorName(security.Symbol, ''VWAP'', security.Resolution)", span="179-179"];
m8_65 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="Extensions.cs", label="algorithm.RegisterIndicator(security.Symbol, VWAP, Consolidator, bd => (BaseData) bd)", span="182-182"];
m8_64 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="Extensions.cs", label="VWAP = new IntradayVwap(name)", span="180-180"];
m8_66 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="Extensions.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", span="175-175"];
m8_91 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", span="248-248"];
m8_92 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="throw new NotImplementedException($''{nameof(IntradayVwap)}.{nameof(ComputeNextValue)} should never be invoked.'');", span="250-250"];
m8_93 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", span="248-248"];
m8_75 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", span="212-212"];
m8_76 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="decimal volume, averagePrice", span="214-214"];
m8_77 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="!TryGetVolumeAndAveragePrice(input, out volume, out averagePrice)", span="215-215"];
m8_79 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="_lastDate != input.EndTime.Date", span="221-221"];
m8_82 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="_lastDate = input.EndTime.Date", span="225-225"];
m8_86 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="return input.Value;", span="235-235"];
m8_78 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="return new IndicatorResult(0, IndicatorStatus.InvalidInput);", span="217-217"];
m8_83 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="_sumOfVolume += volume", span="229-229"];
m8_84 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="_sumOfPriceTimesVolume += averagePrice * volume", span="230-230"];
m8_80 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="_sumOfVolume = 0m", span="223-223"];
m8_81 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="_sumOfPriceTimesVolume = 0m", span="224-224"];
m8_85 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="_sumOfVolume == 0m", span="232-232"];
m8_87 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="return _sumOfPriceTimesVolume / _sumOfVolume;", span="238-238"];
m8_88 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="Extensions.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", span="212-212"];
m8_28 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="103-103"];
m8_29 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Extensions.cs", label="changes.AddedSecurities", span="105-105"];
m8_31 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Extensions.cs", label="_symbolData[added.Symbol] = new SymbolData(algorithm, added)", span="109-109"];
m8_32 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Extensions.cs", label="changes.RemovedSecurities", span="113-113"];
m8_35 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Extensions.cs", label="IsSafeToRemove(algorithm, removed.Symbol)", span="119-119"];
m8_37 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Extensions.cs", label="algorithm.SubscriptionManager.RemoveConsolidator(removed.Symbol, data.Consolidator)", span="122-122"];
m8_30 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Extensions.cs", label="!_symbolData.ContainsKey(added.Symbol)", span="107-107"];
m8_33 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Extensions.cs", label="SymbolData data", span="116-116"];
m8_34 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Extensions.cs", label="_symbolData.TryGetValue(removed.Symbol, out data)", span="117-117"];
m8_36 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Extensions.cs", label="_symbolData.Remove(removed.Symbol)", span="121-121"];
m8_38 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="Extensions.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="103-103"];
m8_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1270-1270"];
m8_0 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="49-49"];
m8_1 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="_targetsCollection.AddRange(targets)", span="52-52"];
m8_4 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="var unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="59-59"];
m8_13 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="algorithm.MarketOrder(data.Security.Symbol, Math.Sign(unorderedQuantity) * orderSize)", span="85-85"];
m8_14 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="90-90"];
m8_2 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label=_targetsCollection, span="54-54"];
m8_3 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="var symbol = target.Symbol", span="56-56"];
m8_16 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="_targetsCollection.Remove(target.Symbol)", span="93-93"];
m8_6 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="!_symbolData.TryGetValue(symbol, out data)", span="63-63"];
m8_5 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="SymbolData data", span="62-62"];
m8_8 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="PriceIsFavorable(data, unorderedQuantity)", span="75-75"];
m8_10 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="var orderSize = Math.Min(maxOrderSize, Math.Abs(unorderedQuantity))", span="79-79"];
m8_7 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="data.Security.Price == 0m", span="69-69"];
m8_9 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="var maxOrderSize = OrderSizing.PercentVolume(data.Security, MaximumOrderQuantityPercentVolume)", span="78-78"];
m8_11 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="orderSize -= orderSize % data.Security.SymbolProperties.LotSize", span="82-82"];
m8_12 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="orderSize != 0", span="83-83"];
m8_15 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="unorderedQuantity == 0m", span="91-91"];
m8_17 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="49-49"];
m8_46 [cluster="Unk.Any", file="Extensions.cs", label="Entry Unk.Any", span=""];
m8_41 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="131-131"];
m8_44 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="Extensions.cs", label="return !algorithm.UniverseManager.Any(kvp => kvp.Value.ContainsMember(symbol));", span="134-134"];
m8_45 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="Extensions.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="131-131"];
m8_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1431-1431"];
m8_18 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="91-91"];
m8_90 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="Extensions.cs", label="Entry QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45"];
m8_24 [cluster="System.Math.Min(decimal, decimal)", file="Extensions.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m8_22 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.PercentVolume(QuantConnect.Securities.Security, decimal)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.PercentVolume(QuantConnect.Securities.Security, decimal)", span="33-33"];
m8_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="Extensions.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464"];
m8_110 [file="Extensions.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", span=""];
m8_111 [file="Extensions.cs", label="QuantConnect.Symbol", span=""];
m8_112 [file="Extensions.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", span=""];
m8_113 [file="Extensions.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", span=""];
m11_6 [cluster="QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", file="Future.cs", label="Entry QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", span="29-29"];
m11_30 [cluster="System.Func<T, TResult>.Invoke(T)", file="Future.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m11_7 [cluster="System.TimeSpan.FromDays(double)", file="Future.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m11_25 [cluster="QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", file="Future.cs", label="Entry QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", span="33-33"];
m11_9 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="78-78"];
m11_10 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SettlementType = SettlementType.Cash", span="96-96"];
m11_12 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="_symbolProperties = symbolProperties", span="98-98"];
m11_11 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Holdings = new FutureHolding(this)", span="97-97"];
m11_13 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SetFilter(TimeSpan.Zero, TimeSpan.FromDays(35))", span="99-99"];
m11_14 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="78-78"];
m11_8 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="146-146"];
m11_15 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="SetFilter(universe => universe.Expiration(minExpiry, maxExpiry))", span="148-148"];
m11_16 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="146-146"];
m11_0 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="47-47"];
m11_1 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SettlementType = SettlementType.Cash", span="65-65"];
m11_3 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="_symbolProperties = symbolProperties", span="67-67"];
m11_2 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Holdings = new FutureHolding(this)", span="66-66"];
m11_4 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SetFilter(TimeSpan.Zero, TimeSpan.FromDays(35))", span="68-68"];
m11_5 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="47-47"];
m11_17 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", span="156-156"];
m11_22 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func = universe =>\r\n            {\r\n                var futureUniverse = universe as FutureFilterUniverse;\r\n                return universeFunc(futureUniverse);\r\n            }", span="158-162"];
m11_23 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="ContractFilter = new FuncSecurityDerivativeFilter(func)", span="164-164"];
m11_24 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", span="156-156"];
m11_21 [cluster="QuantConnect.Securities.FutureFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="Entry QuantConnect.Securities.FutureFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="111-111"];
m11_26 [cluster="lambda expression", file="Future.cs", label="Entry lambda expression", span="158-162"];
m11_19 [cluster="lambda expression", file="Future.cs", label="universe.Expiration(minExpiry, maxExpiry)", span="148-148"];
m11_18 [cluster="lambda expression", file="Future.cs", label="Entry lambda expression", span="148-148"];
m11_20 [cluster="lambda expression", file="Future.cs", label="Exit lambda expression", span="148-148"];
m11_28 [cluster="lambda expression", file="Future.cs", label="return universeFunc(futureUniverse);", span="161-161"];
m11_27 [cluster="lambda expression", file="Future.cs", label="var futureUniverse = universe as FutureFilterUniverse", span="160-160"];
m11_29 [cluster="lambda expression", file="Future.cs", label="Exit lambda expression", span="158-162"];
m11_31 [file="Future.cs", label="QuantConnect.Securities.Future.Future", span=""];
m11_32 [file="Future.cs", label="System.TimeSpan", span=""];
m11_33 [file="Future.cs", label="System.TimeSpan", span=""];
m11_34 [file="Future.cs", label="System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>", span=""];
m12_4 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="59-59"];
m12_35 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", span="75-75"];
m12_36 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="77-77"];
m12_39 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(isValidSecurityType, _unit.CanSubmitOrder(GDAXTestsHelpers.GetSecurity(1.0m, securityType), order.Object, out message))", span="81-81"];
m12_37 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="var order = new Mock<QuantConnect.Orders.Order>()", span="78-78"];
m12_38 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.Quantity = 10.0m", span="79-79"];
m12_40 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", span="75-75"];
m12_47 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m12_17 [cluster="Unk.CanUpdateOrder", file="GDAXBrokerageModelTests.cs", label="Entry Unk.CanUpdateOrder", span=""];
m12_15 [cluster="QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", span="54-54"];
m12_27 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerageModelTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_11 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", span="34-34"];
m12_12 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="36-36"];
m12_13 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(false, _unit.CanUpdateOrder(GDAXTestsHelpers.GetSecurity(), Mock.Of<QuantConnect.Orders.Order>(),\r\n                new QuantConnect.Orders.UpdateOrderRequest(DateTime.UtcNow, 1, new QuantConnect.Orders.UpdateOrderFields()), out message))", span="37-38"];
m12_14 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", span="34-34"];
m12_48 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="250-250"];
m12_3 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", span="12-12"];
m12_16 [cluster="QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", span="20-20"];
m12_6 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", span="28-28"];
m12_7 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", file="GDAXBrokerageModelTests.cs", label="Assert.IsInstanceOf<GDAXFeeModel>(_unit.GetFeeModel(GDAXTestsHelpers.GetSecurity()))", span="30-30"];
m12_8 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", span="28-28"];
m12_10 [cluster="Unk.>", file="GDAXBrokerageModelTests.cs", label="Entry Unk.>", span=""];
m12_26 [cluster="Mock<QuantConnect.Orders.Order>.cstr", file="GDAXBrokerageModelTests.cs", label="Entry Mock<QuantConnect.Orders.Order>.cstr", span=""];
m12_18 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", span="43-43"];
m12_19 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="45-45"];
m12_22 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label=isUpdate, span="49-49"];
m12_24 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(!isUpdate, _unit.CanSubmitOrder(GDAXTestsHelpers.GetSecurity(), order.Object, out message))", span="54-54"];
m12_20 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="var order = new Mock<QuantConnect.Orders.Order>()", span="46-46"];
m12_21 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.Quantity = 10.0m", span="47-47"];
m12_23 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.BrokerId = new List<string>() {''abc123''}", span="51-51"];
m12_25 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", span="43-43"];
m12_5 [cluster="Unk.AreEqual", file="GDAXBrokerageModelTests.cs", label="Entry Unk.AreEqual", span=""];
m12_9 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="69-69"];
m12_49 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="95-95"];
m12_28 [cluster="Unk.CanSubmitOrder", file="GDAXBrokerageModelTests.cs", label="Entry Unk.CanSubmitOrder", span=""];
m12_29 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", span="59-59"];
m12_30 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="61-61"];
m12_32 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="order.Object.Quantity = orderQuantity", span="64-64"];
m12_33 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(isValidOrderQuantity, _unit.CanSubmitOrder(GDAXTestsHelpers.GetSecurity(), order.Object, out message))", span="66-66"];
m12_31 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="var order = new Mock<QuantConnect.Orders.Order>()", span="62-62"];
m12_34 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", span="59-59"];
m12_41 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", span="90-90"];
m12_42 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="92-92"];
m12_44 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="var order = Order.CreateOrder(new SubmitOrderRequest(orderType, SecurityType.Crypto, security.Symbol, 10.0m, 1.0m, 10.0m, DateTime.Now, ''Test Order''))", span="94-94"];
m12_45 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(isValidOrderType, _unit.CanSubmitOrder(security, order, out message))", span="96-96"];
m12_43 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="var security = GDAXTestsHelpers.GetSecurity()", span="93-93"];
m12_46 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", span="90-90"];
m12_0 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", span="22-22"];
m12_1 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(3, _unit.GetLeverage(GDAXTestsHelpers.GetSecurity()))", span="24-24"];
m12_2 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", span="22-22"];
m12_50 [file="GDAXBrokerageModelTests.cs", label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", span=""];
m13_0 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="35-35"];
m13_1 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="order.Type == OrderType.Limit", span="38-38"];
m13_4 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="decimal fee = security.Price * (order.Quantity < 0 ? (order.Quantity * -1) : order.Quantity) * divisor", span="46-46"];
m13_2 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="return 0m;", span="40-40"];
m13_3 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=red, community=0, file="GDAXFeeModel.cs", label="8: decimal divisor = 0.025m", span="44-44"];
m13_5 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="return fee;", span="47-47"];
m13_6 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="Exit QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="35-35"];
m15_63 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="171-171"];
m15_64 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => l - r);", span="173-173"];
m15_65 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="171-171"];
m15_127 [cluster="QuantConnect.Indicators.Minimum.Minimum(string, int)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.Minimum.Minimum(string, int)", span="51-51"];
m15_79 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="215-215"];
m15_80 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => r == 0m ? new IndicatorResult(0m, IndicatorStatus.MathError) : new IndicatorResult(l / r));", span="217-217"];
m15_81 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="215-215"];
m15_86 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="230-230"];
m15_87 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(name, left, right, (l, r) => r == 0m ? new IndicatorResult(0m, IndicatorStatus.MathError) : new IndicatorResult(l / r));", span="232-232"];
m15_88 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="230-230"];
m15_97 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="259-259"];
m15_98 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => l * r);", span="261-261"];
m15_99 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="259-259"];
m15_0 [cluster="QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)", span="36-36"];
m15_1 [cluster="QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)", file="IndicatorExtensions.cs", label="return indicator.Update(new IndicatorDataPoint(time, value));", span="38-38"];
m15_2 [cluster="QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Update(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.DateTime, decimal)", span="36-36"];
m15_3 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="40-40"];
m15_4 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m15_123 [cluster="QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="313-313"];
m15_124 [cluster="QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="Minimum minOfLeft = new Minimum(string.Format(''MIN{0}_Of_{1}'', period, left.Name), period).Of(left, waitForFirstToReady)", span="316-316"];
m15_125 [cluster="QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="return minOfLeft;", span="317-317"];
m15_126 [cluster="QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.MIN<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="313-313"];
m15_54 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(string, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", span="83-83"];
m15_24 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="215-215"];
m15_25 [cluster="lambda expression", color=green, community=0, file="IndicatorExtensions.cs", label="1: Entry lambda expression", span="81-88"];
m15_26 [cluster="lambda expression", file="IndicatorExtensions.cs", label="x.Update(consolidated)", span="83-83"];
m15_31 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="90-98"];
m15_32 [cluster="lambda expression", color=green, community=0, file="IndicatorExtensions.cs", label="8: y.Update(consolidated)", span="92-92"];
m15_33 [cluster="lambda expression", color=green, community=0, file="IndicatorExtensions.cs", label="4: x.Samples == y.Samples", span="93-93"];
m15_34 [cluster="lambda expression", file="IndicatorExtensions.cs", label="numerator.Update(consolidated.Time, consolidated.Value * x.Current.Value)", span="95-95"];
m15_51 [cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="142-142"];
m15_52 [cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(name, left, right, (l, r) => l + r);", span="144-144"];
m15_53 [cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="142-142"];
m15_69 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="186-186"];
m15_70 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(name, left, right, (l, r) => l - r);", span="188-188"];
m15_71 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="186-186"];
m15_103 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="274-274"];
m15_104 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(name, left, right, (l, r) => l * r);", span="276-276"];
m15_105 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="274-274"];
m15_106 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="276-276"];
m15_10 [cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.SecurityHolding)", file="IndicatorExtensions.cs", label="_totalSaleVolume = holding._totalSaleVolume", span="57-57"];
m15_11 [cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.SecurityHolding)", file="IndicatorExtensions.cs", label="_profit = holding._profit", span="58-58"];
m15_9 [cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.SecurityHolding)", file="IndicatorExtensions.cs", label="_price = holding._price", span="56-56"];
m15_12 [cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.SecurityHolding)", file="IndicatorExtensions.cs", label="_lastTradeProfit = holding._lastTradeProfit", span="59-59"];
m15_27 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m15_28 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", color=green, community=0, file="IndicatorExtensions.cs", label="0: _averagePrice = averagePrice", span="385-385"];
m15_35 [cluster="QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", span="402-402"];
m15_29 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", color=green, community=0, file="IndicatorExtensions.cs", label="6: _quantity = quantity", span="386-386"];
m15_36 [cluster="QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", color=green, community=0, file="IndicatorExtensions.cs", label="5: _price = closingPrice", span="404-404"];
m15_49 [cluster="lambda expression", file="IndicatorExtensions.cs", label="l + r", span="129-129"];
m15_48 [cluster="lambda expression", file="IndicatorExtensions.cs", label="QuantConnect.Securities.SecurityHolding", span=""];
m15_50 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="129-129"];
m15_56 [cluster="lambda expression", file="IndicatorExtensions.cs", label="l + r", span="144-144"];
m15_55 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="144-144"];
m15_57 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="144-144"];
m15_67 [cluster="lambda expression", file="IndicatorExtensions.cs", label="l - r", span="173-173"];
m15_66 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="173-173"];
m15_68 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="173-173"];
m15_73 [cluster="lambda expression", file="IndicatorExtensions.cs", label="l - r", span="188-188"];
m15_72 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="188-188"];
m15_74 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="188-188"];
m15_83 [cluster="lambda expression", file="IndicatorExtensions.cs", label="r == 0m ? new IndicatorResult(0m, IndicatorStatus.MathError) : new IndicatorResult(l / r)", span="217-217"];
m15_82 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="217-217"];
m15_84 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="217-217"];
m15_90 [cluster="lambda expression", file="IndicatorExtensions.cs", label="r == 0m ? new IndicatorResult(0m, IndicatorStatus.MathError) : new IndicatorResult(l / r)", span="232-232"];
m15_89 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="232-232"];
m15_91 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="232-232"];
m15_101 [cluster="lambda expression", file="IndicatorExtensions.cs", label="l * r", span="261-261"];
m15_100 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Entry lambda expression", span="261-261"];
m15_102 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="261-261"];
m15_107 [cluster="lambda expression", file="IndicatorExtensions.cs", label="l * r", span="276-276"];
m15_108 [cluster="lambda expression", file="IndicatorExtensions.cs", label="Exit lambda expression", span="276-276"];
m15_115 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int, decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int, decimal)", span="42-42"];
m15_117 [cluster="TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", file="IndicatorExtensions.cs", label="Entry TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", span="49-49"];
m15_128 [cluster="QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="326-326"];
m15_129 [cluster="QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="SimpleMovingAverage smaOfLeft = new SimpleMovingAverage(string.Format(''SMA{0}_Of_{1}'', period, left.Name), period).Of(left, waitForFirstToReady)", span="329-329"];
m15_130 [cluster="QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="return smaOfLeft;", span="330-330"];
m15_131 [cluster="QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.SMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="326-326"];
m15_62 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="171-171"];
m15_18 [cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)", file="IndicatorExtensions.cs", label="value.Updated += (sender, consolidated) =>\r\n            {\r\n                x.Update(consolidated);\r\n                if (x.Samples == y.Samples)\r\n                {\r\n                    numerator.Update(consolidated.Time, consolidated.Value * y.Current.Value);\r\n                }  \r\n            }", span="81-88"];
m15_19 [cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)", color=green, community=0, file="IndicatorExtensions.cs", label="4: weight.Updated += (sender, consolidated) =>\r\n            {\r\n                y.Update(consolidated);\r\n                if (x.Samples == y.Samples)\r\n                {\r\n                    numerator.Update(consolidated.Time, consolidated.Value * x.Current.Value);\r\n                }\r\n                denominator.Update(consolidated);\r\n            }", span="90-98"];
m15_20 [cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)", file="IndicatorExtensions.cs", label="return numerator.Over(denominator);", span="100-100"];
m15_38 [cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="var constantIndicator = new ConstantIndicator<IndicatorDataPoint>(constant.ToString(CultureInfo.InvariantCulture), constant)", span="114-114"];
m15_39 [cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", color=green, community=0, file="IndicatorExtensions.cs", label="2: return left.Plus(constantIndicator);", span="115-115"];
m15_40 [cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="112-112"];
m15_41 [cluster="QuantConnect.Indicators.ConstantIndicator<T>.ConstantIndicator(string, decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.ConstantIndicator<T>.ConstantIndicator(string, decimal)", span="42-42"];
m15_42 [cluster="decimal.ToString(System.IFormatProvider)", file="IndicatorExtensions.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m15_43 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="127-127"];
m15_44 [cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="127-127"];
m15_122 [cluster="QuantConnect.Indicators.Maximum.Maximum(string, int)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.Maximum.Maximum(string, int)", span="51-51"];
m15_92 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="244-244"];
m15_93 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="var constantIndicator = new ConstantIndicator<IndicatorDataPoint>(constant.ToString(CultureInfo.InvariantCulture), constant)", span="246-246"];
m15_94 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="return left.Times(constantIndicator);", span="247-247"];
m15_95 [cluster="QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="244-244"];
m15_37 [cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="112-112"];
m15_118 [cluster="QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="300-300"];
m15_119 [cluster="QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="Maximum maxOfLeft = new Maximum(string.Format(''MAX{0}_Of_{1}'', period, left.Name), period).Of(left, waitForFirstToReady)", span="303-303"];
m15_120 [cluster="QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="return maxOfLeft;", span="304-304"];
m15_121 [cluster="QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.MAX<T>(QuantConnect.Indicators.IndicatorBase<T>, int, bool)", span="300-300"];
m15_5 [cluster="QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", span="49-49"];
m15_6 [cluster="QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", file="IndicatorExtensions.cs", label="first.Updated += (sender, consolidated) =>\r\n            {\r\n                // only send the data along if we're ready\r\n                if (!waitForFirstToReady || first.IsReady)\r\n                {\r\n                    second.Update(consolidated);\r\n                }\r\n            }", span="53-60"];
m15_7 [cluster="QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", file="IndicatorExtensions.cs", label="return second;", span="62-62"];
m15_8 [cluster="QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Of<T, TSecond>(TSecond, QuantConnect.Indicators.IndicatorBase<T>, bool)", span="49-49"];
m15_13 [cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)", span="72-72"];
m15_14 [cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)", file="IndicatorExtensions.cs", label="var x = new WindowIdentity(period)", span="76-76"];
m15_15 [cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)", file="IndicatorExtensions.cs", label="var y = new WindowIdentity(period)", span="77-77"];
m15_16 [cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)", color=green, community=0, file="IndicatorExtensions.cs", label="4: var numerator = new Sum(''Sum_xy'', period)", span="78-78"];
m15_17 [cluster="QuantConnect.Indicators.IndicatorExtensions.WeightedBy<T, TWeight>(QuantConnect.Indicators.IndicatorBase<T>, TWeight, int)", file="IndicatorExtensions.cs", label="var denominator = new Sum(''Sum_y'', period)", span="79-79"];
m15_75 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="200-200"];
m15_76 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="var constantIndicator = new ConstantIndicator<IndicatorDataPoint>(constant.ToString(CultureInfo.InvariantCulture), constant)", span="202-202"];
m15_77 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="return left.Over(constantIndicator);", span="203-203"];
m15_78 [cluster="QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="200-200"];
m15_96 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="259-259"];
m15_23 [cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="366-366"];
m15_45 [cluster="QuantConnect.Indicators.IndicatorExtensions.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="IndicatorExtensions.cs", label="return new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) => l + r);", span="129-129"];
m15_58 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="156-156"];
m15_59 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="var constantIndicator = new ConstantIndicator<IndicatorDataPoint>(constant.ToString(CultureInfo.InvariantCulture), constant)", span="158-158"];
m15_60 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="return left.Minus(constantIndicator);", span="159-159"];
m15_61 [cluster="QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, decimal)", span="156-156"];
m15_132 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m15_46 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="IndicatorExtensions.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="618-618"];
m15_47 [cluster="QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", span="99-99"];
m15_85 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45"];
m15_22 [cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", color=green, community=0, file="IndicatorExtensions.cs", label="5: _totalSaleVolume += saleValue", span="368-368"];
m15_116 [cluster="string.Format(string, object, object)", file="IndicatorExtensions.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m15_30 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106"];
m15_109 [cluster="QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)", span="286-286"];
m15_110 [cluster="QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)", file="IndicatorExtensions.cs", label="decimal k = smoothingFactor.HasValue ? k = smoothingFactor.Value : ExponentialMovingAverage.SmoothingFactorDefault(period)", span="289-289"];
m15_111 [cluster="QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)", file="IndicatorExtensions.cs", label="ExponentialMovingAverage emaOfLeft = new ExponentialMovingAverage(string.Format(''EMA{0}_Of_{1}'', period, left.Name), period, k).Of(left, waitForFirstToReady)", span="290-290"];
m15_112 [cluster="QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)", file="IndicatorExtensions.cs", label="return emaOfLeft;", span="291-291"];
m15_113 [cluster="QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Indicators.IndicatorExtensions.EMA<T>(QuantConnect.Indicators.IndicatorBase<T>, int, decimal?, bool)", span="286-286"];
m15_114 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.SmoothingFactorDefault(int)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.SmoothingFactorDefault(int)", span="71-71"];
m15_21 [cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="366-366"];
m15_133 [file="IndicatorExtensions.cs", label="QuantConnect.Indicators.IndicatorBase<T>", span=""];
m15_134 [file="IndicatorExtensions.cs", label=bool, span=""];
m15_135 [file="IndicatorExtensions.cs", label=TSecond, span=""];
m15_136 [file="IndicatorExtensions.cs", label=x, span=""];
m15_137 [file="IndicatorExtensions.cs", label=y, span=""];
m15_138 [file="IndicatorExtensions.cs", label=numerator, span=""];
m15_139 [file="IndicatorExtensions.cs", label=denominator, span=""];
m17_16 [cluster="Unk.ToArray", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToArray", span=""];
m17_6 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="int ribbonCount = 8", span="53-53"];
m17_7 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="int ribbonInterval = 15", span="54-54"];
m17_17 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="55-55"];
m17_18 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="SMA(symbol, (x + 1)*ribbonInterval, Resolution.Daily)", span="55-55"];
m17_19 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="55-55"];
m17_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="940-940"];
m17_21 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="63-63"];
m17_26 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="4: decimal tolerance = 0.00015m", span="77-77"];
m17_24 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="previous.Date == Time.Date", span="74-74"];
m17_27 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="1: var holdings = Portfolio[symbol].Quantity", span="78-78"];
m17_29 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="fast > slow * (1 + tolerance)", span="84-84"];
m17_28 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="4: holdings <= 0", span="81-81"];
m17_32 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="holdings > 0 && fast < slow", span="93-93"];
m17_35 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="Plot(symbol, ''Price'', data[symbol].Price)", span="99-99"];
m17_22 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="!slow.IsReady", span="71-71"];
m17_25 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="return;", span="74-74"];
m17_30 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="Log(''BUY  >> '' + Securities[symbol].Price)", span="86-86"];
m17_31 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="SetHoldings(symbol, 1.0)", span="87-87"];
m17_33 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="Log(''SELL >> '' + Securities[symbol].Price)", span="95-95"];
m17_34 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="Liquidate(symbol)", span="96-96"];
m17_36 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="Plot(symbol, fast, slow)", span="102-102"];
m17_37 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="Plot(''Ribbon'', ribbon)", span="103-103"];
m17_38 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="previous = Time", span="105-105"];
m17_23 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="return;", span="71-71"];
m17_39 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="63-63"];
m17_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m17_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="323-323"];
m17_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1617-1617"];
m17_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="198-198"];
m17_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m17_14 [cluster="System.Linq.Enumerable.Range(int, int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m17_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m17_2 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="SetEndDate(2015, 01, 01)", span="42-42"];
m17_3 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="AddSecurity(SecurityType.Equity, symbol, Resolution.Minute)", span="45-45"];
m17_4 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="fast = EMA(symbol, 15, Resolution.Daily)", span="48-48"];
m17_5 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="slow = EMA(symbol, 30, Resolution.Daily)", span="51-51"];
m17_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m17_0 [cluster="QuantConnect.Brokerages.Tradier.TradierAccountTypeSettings.TradierAccountTypeSettings()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierAccountTypeSettings.TradierAccountTypeSettings()", span="181-181"];
m17_1 [cluster="QuantConnect.Brokerages.Tradier.TradierAccountTypeSettings.TradierAccountTypeSettings()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierAccountTypeSettings.TradierAccountTypeSettings()", span="181-181"];
m17_8 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="ribbon = Enumerable.Range(0, ribbonCount).Select(x => SMA(symbol, (x + 1)*ribbonInterval, Resolution.Daily)).ToArray()", span="55-55"];
m17_9 [cluster="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.Initialize()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm.Initialize()", span="38-38"];
m17_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151"];
m17_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1257-1257"];
m17_15 [cluster="Unk.Select", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Select", span=""];
m17_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="232-232"];
m17_46 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", span=""];
m17_47 [file="InteractiveBrokersBrokerage.cs", label=ribbonInterval, span=""];
m21_67 [cluster="string.Contains(string)", file="LeanDataPathComponents.cs", label="Entry string.Contains(string)", span="0-0"];
m21_62 [cluster="string.LastIndexOf(string, System.StringComparison)", file="LeanDataPathComponents.cs", label="Entry string.LastIndexOf(string, System.StringComparison)", span="0-0"];
m21_53 [cluster="string.Split(params char[])", file="LeanDataPathComponents.cs", label="Entry string.Split(params char[])", span="0-0"];
m21_55 [cluster="System.Enum.TryParse<TEnum>(string, bool, out TEnum)", file="LeanDataPathComponents.cs", label="Entry System.Enum.TryParse<TEnum>(string, bool, out TEnum)", span="0-0"];
m21_0 [cluster="QuantConnect.Util.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime, QuantConnect.TickType)", file="LeanDataPathComponents.cs", label="Entry QuantConnect.Util.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime, QuantConnect.TickType)", span="85-85"];
m21_1 [cluster="QuantConnect.Util.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime, QuantConnect.TickType)", file="LeanDataPathComponents.cs", label="Date = date", span="87-87"];
m21_2 [cluster="QuantConnect.Util.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime, QuantConnect.TickType)", file="LeanDataPathComponents.cs", label="SecurityType = securityType", span="88-88"];
m21_3 [cluster="QuantConnect.Util.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime, QuantConnect.TickType)", file="LeanDataPathComponents.cs", label="Market = market", span="89-89"];
m21_4 [cluster="QuantConnect.Util.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime, QuantConnect.TickType)", file="LeanDataPathComponents.cs", label="Resolution = resolution", span="90-90"];
m21_59 [cluster="string.Substring(int, int)", file="LeanDataPathComponents.cs", label="Entry string.Substring(int, int)", span="0-0"];
m21_58 [cluster="string.LastIndexOf(string)", file="LeanDataPathComponents.cs", label="Entry string.LastIndexOf(string)", span="0-0"];
m21_54 [cluster="System.FormatException.FormatException(string)", file="LeanDataPathComponents.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m21_66 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="LeanDataPathComponents.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m21_57 [cluster="System.IO.Path.GetFileNameWithoutExtension(string)", file="LeanDataPathComponents.cs", label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0"];
m21_61 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="LeanDataPathComponents.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m21_65 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="LeanDataPathComponents.cs", label="Entry QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="147-147"];
m21_60 [cluster="string.IndexOf(string, System.StringComparison)", file="LeanDataPathComponents.cs", label="Entry string.IndexOf(string, System.StringComparison)", span="0-0"];
m21_63 [cluster="string.Substring(int)", file="LeanDataPathComponents.cs", label="Entry string.Substring(int)", span="0-0"];
m21_64 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", file="LeanDataPathComponents.cs", label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", span="99-99"];
m21_9 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", span=""];
m21_38 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", color=green, community=0, file="LeanDataPathComponents.cs", label="4: ticker = parts[parts.Length - securityTypeOffset + TickerOffset]", span="157-157"];
m21_12 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var parts = path.Split('/', '\\')", span="107-107"];
m21_20 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var securityTypeOffset = LowResSecurityTypeOffset", span="124-124"];
m21_31 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="securityTypeOffset == LowResSecurityTypeOffset", span="140-140"];
m21_24 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="securityTypeOffset = HighResSecurityTypeOffset", span="129-129"];
m21_17 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="int TickerOffset = 3", span="116-116"];
m21_39 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var date = securityTypeOffset == LowResSecurityTypeOffset ? DateTime.MinValue : DateTime.ParseExact(filename.Substring(0, filename.IndexOf(''_'', StringComparison.Ordinal)), DateFormat.EightCharacter, null)", span="160-160"];
m21_45 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="symbol = Symbol.CreateOption(ticker, market, style, OptionRight.Call | OptionRight.Put, 0, SecurityIdentifier.DefaultDate)", span="168-168"];
m21_47 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="symbol = Symbol.CreateFuture(ticker, market, SecurityIdentifier.DefaultDate)", span="172-172"];
m21_48 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="symbol = Symbol.Create(ticker, securityType, market)", span="176-176"];
m21_11 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var filename = fileinfo.Name", span="106-106"];
m21_13 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="int LowResSecurityTypeOffset = 4", span="110-110"];
m21_18 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="parts.Length < LowResSecurityTypeOffset", span="119-119"];
m21_22 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var rawValue = parts[parts.Length - securityTypeOffset]", span="126-126"];
m21_25 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="rawValue = parts[parts.Length - securityTypeOffset]", span="130-130"];
m21_28 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var market = parts[parts.Length - securityTypeOffset + MarketOffset]", span="137-137"];
m21_29 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var resolution = (Resolution) Enum.Parse(typeof (Resolution), parts[parts.Length - securityTypeOffset + ResolutionOffset], true)", span="138-138"];
m21_21 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="SecurityType securityType", span="125-125"];
m21_14 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="int HighResSecurityTypeOffset = 5", span="111-111"];
m21_30 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="string ticker", span="139-139"];
m21_32 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="ticker = Path.GetFileNameWithoutExtension(path)", span="142-142"];
m21_23 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="!Enum.TryParse(rawValue, true, out securityType)", span="127-127"];
m21_16 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="int ResolutionOffset = 2", span="115-115"];
m21_36 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="securityType == SecurityType.Future", span="149-149"];
m21_37 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="ticker = ticker.Substring(0, ticker.LastIndexOf(''_''))", span="152-152"];
m21_40 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="Symbol symbol", span="162-162"];
m21_50 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="return new LeanDataPathComponents(securityType, market, resolution, symbol, filename, date, tickType);", span="181-181"];
m21_35 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="ticker = tickerWithoutStyle.Substring(0, tickerWithoutStyle.LastIndexOf(''_''))", span="147-147"];
m21_44 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var style = (OptionStyle) Enum.Parse(typeof (OptionStyle), rawValue, true)", span="167-167"];
m21_49 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var tickType = filename.Contains(''_quote'') ? TickType.Quote : (filename.Contains(''_openinterest'') ? TickType.OpenInterest : TickType.Trade)", span="179-179"];
m21_46 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="securityType == SecurityType.Future", span="170-170"];
m21_26 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="!Enum.TryParse(rawValue, true, out securityType)", span="131-131"];
m21_10 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var fileinfo = new FileInfo(path)", span="105-105"];
m21_19 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="throw new FormatException(''Unexpected path format: '' + path);", span="121-121"];
m21_27 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="throw new FormatException(''Unexpected path format: '' + path);", span="133-133"];
m21_42 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var withoutExtension = Path.GetFileNameWithoutExtension(filename)", span="165-165"];
m21_15 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="int MarketOffset = 1", span="114-114"];
m21_33 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="securityType == SecurityType.Option", span="143-143"];
m21_34 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="var tickerWithoutStyle = ticker.Substring(0, ticker.LastIndexOf(''_''))", span="146-146"];
m21_41 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="securityType == SecurityType.Option", span="163-163"];
m21_43 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="rawValue = withoutExtension.Substring(withoutExtension.LastIndexOf(''_'', StringComparison.Ordinal) + 1)", span="166-166"];
m21_51 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="LeanDataPathComponents.cs", label="Exit QuantConnect.Util.LeanDataPathComponents.Parse(string)", span="101-101"];
m21_52 [cluster="System.IO.FileInfo.FileInfo(string)", file="LeanDataPathComponents.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m21_8 [cluster="QuantConnect.Util.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime, QuantConnect.TickType)", file="LeanDataPathComponents.cs", label="Exit QuantConnect.Util.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime, QuantConnect.TickType)", span="85-85"];
m21_5 [cluster="QuantConnect.Util.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime, QuantConnect.TickType)", file="LeanDataPathComponents.cs", label="Filename = filename", span="91-91"];
m21_6 [cluster="QuantConnect.Util.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime, QuantConnect.TickType)", file="LeanDataPathComponents.cs", label="Symbol = symbol", span="92-92"];
m21_7 [cluster="QuantConnect.Util.LeanDataPathComponents.LeanDataPathComponents(QuantConnect.SecurityType, string, QuantConnect.Resolution, QuantConnect.Symbol, string, System.DateTime, QuantConnect.TickType)", file="LeanDataPathComponents.cs", label="TickType = tickType", span="93-93"];
m21_56 [cluster="System.Enum.Parse(System.Type, string, bool)", file="LeanDataPathComponents.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m21_68 [file="LeanDataPathComponents.cs", label="QuantConnect.Util.LeanDataPathComponents", span=""];
m22_20 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="LeanDataTests.cs", label="throw new ArgumentException(''Leverage must be greater than or equal to 1.'');", span="88-88"];
m22_66 [cluster="Unk.IsInstanceOf", file="LeanDataTests.cs", label="Entry Unk.IsInstanceOf", span=""];
m22_106 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="170-170"];
m22_107 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(OpenInterest)))", span="172-172"];
m22_108 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(TradeBar)))", span="173-173"];
m22_109 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(QuoteBar)))", span="174-174"];
m22_110 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.IsCommonLeanDataType(typeof(Bitcoin)))", span="175-175"];
m22_111 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="170-170"];
m22_29 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78"];
m22_11 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="LeanDataTests.cs", label="throw new ArgumentException(''Leverage must be greater than or equal to 1.'');", span="59-59"];
m22_13 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="LeanDataTests.cs", label="MaintenanceMarginRequirement = 1/leverage", span="63-63"];
m22_12 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="LeanDataTests.cs", label="InitialMarginRequirement = 1/leverage", span="62-62"];
m22_14 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", span="55-55"];
m22_80 [cluster="string.LastIndexOf(string, System.StringComparison)", file="LeanDataTests.cs", label="Entry string.LastIndexOf(string, System.StringComparison)", span="0-0"];
m22_142 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218"];
m22_148 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="226-226"];
m22_149 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="227-227"];
m22_150 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Tick)", span="228-228"];
m22_151 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="229-229"];
m22_152 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2017-01-04'').Date)", span="230-230"];
m22_155 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="234-234"];
m22_156 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="235-235"];
m22_157 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="236-236"];
m22_158 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="237-237"];
m22_159 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="238-238"];
m22_162 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="242-242"];
m22_163 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="243-243"];
m22_164 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Hour)", span="244-244"];
m22_165 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''gbpusd'')", span="245-245"];
m22_166 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="246-246"];
m22_169 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="250-250"];
m22_170 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="251-251"];
m22_171 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="252-252"];
m22_172 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="253-253"];
m22_173 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-02'').Date)", span="254-254"];
m22_176 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="258-258"];
m22_177 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="259-259"];
m22_178 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Daily)", span="260-260"];
m22_179 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''aapl'')", span="261-261"];
m22_180 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="262-262"];
m22_183 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="266-266"];
m22_184 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="267-267"];
m22_185 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="268-268"];
m22_186 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''goog'')", span="269-269"];
m22_187 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2007-01-03'').Date)", span="270-270"];
m22_190 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Cfd)", span="274-274"];
m22_191 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="275-275"];
m22_192 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="276-276"];
m22_193 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''bcousd'')", span="277-277"];
m22_194 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="278-278"];
m22_147 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(customPath, out symbol, out date, out resolution))", span="225-225"];
m22_153 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var mixedPathSeperators = @''Data//forex/fxcm\/minute//eurusd\\20160101_quote.zip''", span="232-232"];
m22_154 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(mixedPathSeperators, out symbol, out date, out resolution))", span="233-233"];
m22_160 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var longRelativePath = ''../../../../../../../../../Data/forex/fxcm/hour/gbpusd.zip''", span="240-240"];
m22_161 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(longRelativePath, out symbol, out date, out resolution))", span="241-241"];
m22_167 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var shortRelativePath = ''Data/forex/fxcm/minute/eurusd/20160102_quote.zip''", span="248-248"];
m22_168 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(shortRelativePath, out symbol, out date, out resolution))", span="249-249"];
m22_174 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var dailyEquitiesPath = ''Data/equity/usa/daily/aapl.zip''", span="256-256"];
m22_175 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(dailyEquitiesPath, out symbol, out date, out resolution))", span="257-257"];
m22_181 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var minuteEquitiesPath = ''Data/equity/usa/minute/googl/20070103_trade.zip''", span="264-264"];
m22_182 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(minuteEquitiesPath, out symbol, out date, out resolution))", span="265-265"];
m22_188 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var cfdPath = ''Data/cfd/oanda/minute/bcousd/20160101_trade.zip''", span="272-272"];
m22_189 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Assert.IsTrue(LeanData.TryParsePath(cfdPath, out symbol, out date, out resolution))", span="273-273"];
m22_146 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="var customPath = ''a/very/custom/path/forex/oanda/tick/eurusd/20170104_quote.zip''", span="224-224"];
m22_145 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Resolution resolution", span="222-222"];
m22_143 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="DateTime date", span="220-220"];
m22_144 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Symbol symbol", span="221-221"];
m22_195 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218"];
m22_213 [cluster="System.Collections.Generic.List<T>.List()", file="LeanDataTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m22_63 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="return new MarketOrder(security.Symbol, quantity, security.Time, ''Margin Call'', security.Type);", span="201-201"];
m22_30 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="116-116"];
m22_104 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="258-258"];
m22_25 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(line.Split(',').Length, 11)", span="68-68"];
m22_26 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="parameters.Config.Type == typeof(TradeBar)", span="71-71"];
m22_27 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(line.Split(',').Length, 6)", span="73-73"];
m22_28 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="61-61"];
m22_9 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="40-40"];
m22_10 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="372-372"];
m22_216 [cluster="Unk.ToArray", file="LeanDataTests.cs", label="Entry Unk.ToArray", span=""];
m22_64 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="172-172"];
m22_119 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="687-687"];
m22_227 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="433-433"];
m22_256 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Data = data", span="435-435"];
m22_257 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="SecurityType = securityType", span="436-436"];
m22_258 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Resolution = resolution", span="437-437"];
m22_259 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="ExpectedLine = expectedLine", span="438-438"];
m22_260 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data is Tick", span="439-439"];
m22_261 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="var tick = (Tick) data", span="441-441"];
m22_263 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data is TradeBar", span="444-444"];
m22_265 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data is QuoteBar", span="448-448"];
m22_268 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data.Symbol.ID.SecurityType == SecurityType.Forex || data.Symbol.ID.SecurityType == SecurityType.Cfd", span="458-458"];
m22_271 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Name = SecurityType + ''_'' + data.GetType().Name", span="465-465"];
m22_272 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data.GetType() != typeof (Tick) || Resolution != Resolution.Tick", span="467-467"];
m22_274 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="data is Tick", span="472-472"];
m22_275 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Name += ''_'' + ((Tick) data).TickType", span="474-474"];
m22_267 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="throw new NotImplementedException();", span="454-454"];
m22_262 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="TickType = tick.TickType", span="442-442"];
m22_264 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="TickType = TickType.Trade", span="446-446"];
m22_266 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="TickType = TickType.Quote", span="450-450"];
m22_269 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="TickType = TickType.Quote", span="460-460"];
m22_270 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Config = new SubscriptionDataConfig(Data.GetType(), Data.Symbol, Resolution, TimeZones.Utc, TimeZones.Utc, false, true, false, false, TickType)", span="463-463"];
m22_273 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Name += ''_'' + Resolution", span="469-469"];
m22_276 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="433-433"];
m22_243 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", color=green, community=0, file="LeanDataTests.cs", label="4: ExpectedZipEntryName = expectedZipEntryName", span="408-408"];
m22_214 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="401-401"];
m22_238 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", color=green, community=0, file="LeanDataTests.cs", label="8: Symbol = symbol", span="403-403"];
m22_239 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", color=green, community=0, file="LeanDataTests.cs", label="8: Date = date", span="404-404"];
m22_240 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", color=green, community=0, file="LeanDataTests.cs", label="8: Resolution = resolution", span="405-405"];
m22_241 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", color=green, community=0, file="LeanDataTests.cs", label="8: TickType = tickType", span="406-406"];
m22_242 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", color=green, community=0, file="LeanDataTests.cs", label="8: ExpectedZipFileName = expectedZipFileName", span="407-407"];
m22_244 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", color=green, community=0, file="LeanDataTests.cs", label="4: ExpectedRelativeZipFilePath = Path.Combine(expectedRelativeZipFileDirectory, expectedZipFileName).Replace(''/'', Path.DirectorySeparatorChar.ToString())", span="409-409"];
m22_245 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", color=green, community=0, file="LeanDataTests.cs", label="4: ExpectedZipFilePath = Path.Combine(Globals.DataFolder, ExpectedRelativeZipFilePath)", span="410-410"];
m22_246 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", color=green, community=0, file="LeanDataTests.cs", label="8: Name = SecurityType + ''_'' + resolution", span="412-412"];
m22_247 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", color=green, community=0, file="LeanDataTests.cs", label="8: BaseDataType = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="414-414"];
m22_248 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", color=green, community=0, file="LeanDataTests.cs", label="4: symbol.ID.SecurityType == SecurityType.Option && resolution != Resolution.Tick", span="415-415"];
m22_249 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="BaseDataType = typeof(QuoteBar)", span="417-417"];
m22_250 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="Config = new SubscriptionDataConfig(BaseDataType, symbol, resolution, TimeZones.NewYork, TimeZones.NewYork, true, false, false, false, tickType)", span="419-419"];
m22_251 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="401-401"];
m22_235 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="383-383"];
m22_217 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="335-335"];
m22_218 [cluster="lambda expression", color=green, community=0, file="LeanDataTests.cs", label="4: new TestCaseData(x).SetName(x.Name)", span="335-335"];
m22_219 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="335-335"];
m22_236 [cluster="lambda expression", file="LeanDataTests.cs", label="new TestCaseData(x).SetName(x.Name)", span="383-383"];
m22_237 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="383-383"];
m22_234 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m22_255 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m22_233 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m22_253 [cluster="char.ToString()", file="LeanDataTests.cs", label="Entry char.ToString()", span="0-0"];
m22_87 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="expected += ''#'' + parameters.ExpectedZipEntryName", span="143-143"];
m22_83 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var factory = (BaseData)Activator.CreateInstance(parameters.BaseDataType)", span="138-138"];
m22_82 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="136-136"];
m22_84 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var source = factory.GetSource(parameters.Config, parameters.Date, false)", span="139-139"];
m22_88 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(expected, source.Source)", span="145-145"];
m22_85 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var expected = parameters.ExpectedZipFilePath", span="140-140"];
m22_86 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="parameters.SecurityType == SecurityType.Option", span="141-141"];
m22_89 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="136-136"];
m22_230 [cluster="System.TimeSpan.FromMinutes(double)", file="LeanDataTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m22_81 [cluster="string.Substring(int, int)", file="LeanDataTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m22_197 [cluster="System.DateTime.Parse(string)", file="LeanDataTests.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m22_31 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="LeanDataTests.cs", label="return security.Holdings.AbsoluteHoldingsCost*MaintenanceMarginRequirement;", span="118-118"];
m22_32 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="116-116"];
m22_33 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="128-128"];
m22_34 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="var holdings = security.Holdings", span="130-130"];
m22_35 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="direction == OrderDirection.Hold", span="132-132"];
m22_36 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="return portfolio.MarginRemaining;", span="134-134"];
m22_37 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="holdings.IsLong", span="139-139"];
m22_38 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label=direction, span="141-141"];
m22_40 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="return portfolio.MarginRemaining;", span="144-144"];
m22_51 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="54-54"];
m22_56 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="!security.Holdings.Invested", span="182-182"];
m22_39 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="OrderDirection.Buy", span="143-143"];
m22_41 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="OrderDirection.Sell", span="145-145"];
m22_50 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="128-128"];
m22_52 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="172-172"];
m22_55 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="return null;", span="179-179"];
m22_57 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="return null;", span="184-184"];
m22_49 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="return portfolio.MarginRemaining;", span="161-161"];
m22_54 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="totalMargin <= netLiquidationValue*(1 + marginBuffer)", span="177-177"];
m22_61 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="security.Holdings.IsLong", span="195-195"];
m22_42 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="return security.MarginModel.GetMaintenanceMargin(security)*2 + portfolio.MarginRemaining;", span="146-146"];
m22_43 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="holdings.IsShort", span="149-149"];
m22_44 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label=direction, span="151-151"];
m22_45 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="OrderDirection.Buy", span="153-153"];
m22_46 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="return security.MarginModel.GetMaintenanceMargin(security)*2 + portfolio.MarginRemaining;", span="154-154"];
m22_47 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="OrderDirection.Sell", span="155-155"];
m22_48 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="LeanDataTests.cs", label="return portfolio.MarginRemaining;", span="156-156"];
m22_53 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="decimal marginBuffer = 0.10m", span="175-175"];
m22_58 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="decimal delta = totalMargin - netLiquidationValue", span="188-188"];
m22_59 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="int quantity = (int) (Math.Round(delta/security.Price, MidpointRounding.AwayFromZero) / MaintenanceMarginRequirement)", span="191-191"];
m22_60 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="quantity = Math.Max(1, Math.Min((int)security.Holdings.AbsoluteQuantity, quantity))", span="194-194"];
m22_62 [cluster="QuantConnect.Securities.SecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="LeanDataTests.cs", label="quantity *= -1", span="198-198"];
m22_114 [cluster="Unk.IsFalse", file="LeanDataTests.cs", label="Entry Unk.IsFalse", span=""];
m22_141 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="723-723"];
m22_232 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m22_212 [cluster="System.DateTime.DateTime(int, int, int)", file="LeanDataTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m22_113 [cluster="Unk.IsTrue", file="LeanDataTests.cs", label="Entry Unk.IsTrue", span=""];
m22_68 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="121-121"];
m22_220 [cluster="TestCaseData.cstr", file="LeanDataTests.cs", label="Entry TestCaseData.cstr", span=""];
m22_277 [cluster="System.NotImplementedException.NotImplementedException()", file="LeanDataTests.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m22_115 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179"];
m22_116 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Cfd), TickType.Quote)", span="181-181"];
m22_117 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Forex), TickType.Quote)", span="182-182"];
m22_118 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179"];
m22_15 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="350-350"];
m22_16 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="54-54"];
m22_17 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var path = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="56-56"];
m22_120 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186"];
m22_125 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(invalidPath, out symbol, out date, out resolution))", span="193-193"];
m22_127 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(nonExistantPath, out symbol, out date, out resolution))", span="196-196"];
m22_129 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(notAPath, out symbol, out date, out resolution))", span="199-199"];
m22_131 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(emptyPath, out symbol, out date, out resolution))", span="202-202"];
m22_133 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(nullPath, out symbol, out date, out resolution))", span="205-205"];
m22_135 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsTradePath, out symbol, out date, out resolution))", span="208-208"];
m22_137 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsOpenInterestPath, out symbol, out date, out resolution))", span="211-211"];
m22_139 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsQuotePath, out symbol, out date, out resolution))", span="214-214"];
m22_124 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var invalidPath = ''forex/fxcm/eurusd/20160101_quote.zip''", span="192-192"];
m22_126 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var nonExistantPath = ''Data/f/fxcm/eurusd/20160101_quote.zip''", span="195-195"];
m22_128 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var notAPath = ''ooooooooooooooooooooooooooooooooooooooooooooooooooooooo''", span="198-198"];
m22_130 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var  emptyPath = ''''", span="201-201"];
m22_132 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="string nullPath = null", span="204-204"];
m22_134 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var optionsTradePath = ''Data/option/u sa/minute/aapl/20140606_trade_american.zip''", span="207-207"];
m22_136 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var optionsOpenInterestPath = ''Data/option/usa/minute/aapl/20140609_openinterest_american.zip''", span="210-210"];
m22_138 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="var optionsQuotePath = ''Data/option/usa/minute/aapl/20140609_quote_american.zip''", span="213-213"];
m22_123 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Resolution resolution", span="190-190"];
m22_122 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Symbol symbol", span="189-189"];
m22_121 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="DateTime date", span="188-188"];
m22_140 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186"];
m22_196 [cluster="string.ToLower()", file="LeanDataTests.cs", label="Entry string.ToLower()", span="0-0"];
m22_8 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(parameters.ExpectedZipEntryName, entry)", span="43-43"];
m22_21 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="LeanDataTests.cs", label="decimal margin = 1/leverage", span="91-91"];
m22_23 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="LeanDataTests.cs", label="MaintenanceMarginRequirement = margin", span="93-93"];
m22_22 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="LeanDataTests.cs", label="InitialMarginRequirement = margin", span="92-92"];
m22_24 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="LeanDataTests.cs", label="Exit QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="84-84"];
m22_76 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Assert.AreEqual(normalizeZipFilePath, normalizedSourcePath)", span="132-132"];
m22_70 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var normalizedSourcePath = new FileInfo(source.Source).FullName", span="124-124"];
m22_75 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="normalizedSourcePath = normalizedSourcePath.Substring(0, indexOfHash)", span="130-130"];
m22_72 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var normalizeZipFilePath = new FileInfo(zipFilePath).FullName", span="126-126"];
m22_74 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="indexOfHash > 0", span="128-128"];
m22_69 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="QuantConnect.Securities.SecurityMarginModel", span=""];
m22_71 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var zipFilePath = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Data.Symbol, parameters.Data.Time.Date, parameters.Resolution, parameters.TickType)", span="125-125"];
m22_73 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="var indexOfHash = normalizedSourcePath.LastIndexOf(''#'', StringComparison.Ordinal)", span="127-127"];
m22_77 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="121-121"];
m22_0 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35"];
m22_2 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="LeanDataTests.cs", label="throw new ArgumentException(''Initial margin requirement must be between 0 and 1'');", span="39-39"];
m22_1 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="LeanDataTests.cs", label="initialMarginRequirement < 0 || initialMarginRequirement > 1", span="37-37"];
m22_3 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="LeanDataTests.cs", label="maintenanceMarginRequirement < 0 || maintenanceMarginRequirement > 1", span="42-42"];
m22_5 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", file="LeanDataTests.cs", label="InitialMarginRequirement = initialMarginRequirement", span="47-47"];
m22_231 [cluster="System.TimeSpan.FromDays(double)", file="LeanDataTests.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m22_6 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="40-40"];
m22_4 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="485-485"];
m22_7 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs", label="var entry = LeanData.GenerateZipEntryName(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="42-42"];
m22_18 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="LeanDataTests.cs", label="Entry QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="84-84"];
m22_19 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="LeanDataTests.cs", label="leverage < 1", span="86-86"];
m22_254 [cluster="string.Replace(string, string)", file="LeanDataTests.cs", label="Entry string.Replace(string, string)", span="0-0"];
m22_207 [cluster="Unk.Fail", file="LeanDataTests.cs", label="Entry Unk.Fail", span=""];
m22_90 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="149-149"];
m22_95 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tickType)", span="156-156"];
m22_97 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Second, TickType.OpenInterest), openInterestType)", span="159-159"];
m22_99 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Minute, TickType.Quote), quoteBarType)", span="162-162"];
m22_101 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Hour, TickType.Trade), tradeBarType)", span="165-165"];
m22_91 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="var tickType = typeof(Tick)", span="151-151"];
m22_94 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="var tradeBarType = typeof(TradeBar)", span="154-154"];
m22_96 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Daily, TickType.OpenInterest), tickType)", span="157-157"];
m22_92 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="var openInterestType = typeof(OpenInterest)", span="152-152"];
m22_98 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), openInterestType)", span="160-160"];
m22_93 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="var quoteBarType = typeof(QuoteBar)", span="153-153"];
m22_100 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Second, TickType.Trade), quoteBarType)", span="163-163"];
m22_102 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tradeBarType)", span="166-166"];
m22_103 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="149-149"];
m22_222 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="338-338"];
m22_223 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", color=green, community=0, file="LeanDataTests.cs", label="4: var time = new DateTime(2016, 02, 18, 9, 30, 0)", span="340-340"];
m22_224 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", color=green, community=0, file="LeanDataTests.cs", label="4: return new List<LeanDataLineTestParameters>\r\n            {\r\n                //equity\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY, Value = 1, Quantity = 2, TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Equity, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Equity, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Equity, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // options\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, null, 0, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)) {Bid = null}, SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,,,,,0,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, null, 0, TimeSpan.FromDays(1)) {Ask = null}, SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,,,,,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new Tick(time, Symbols.SPY_P_192_Feb19_2016, 0, 1, 3) {Value = 2m, TickType = TickType.Quote, BidSize = 2, AskSize = 4, Exchange = ''EX'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,30000,4,EX,1''),\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY_P_192_Feb19_2016, Value = 1, Quantity = 2,TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // forex\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.EURUSD, BidPrice = 1, Value =1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Forex, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Forex, Resolution.Minute, ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Forex, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n\r\n                // cfd\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.DE10YBEUR, BidPrice = 1, Value = 1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Cfd, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Cfd, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Cfd, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="341-383"];
m22_225 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="338-338"];
m22_252 [cluster="System.IO.Path.Combine(string, string)", file="LeanDataTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m22_78 [cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="160-160"];
m22_112 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanDataTests.cs", label="Entry QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="274-274"];
m22_226 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="LeanDataTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m22_79 [cluster="System.IO.FileInfo.FileInfo(string)", file="LeanDataTests.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m22_105 [cluster="Unk.AreNotEqual", file="LeanDataTests.cs", label="Entry Unk.AreNotEqual", span=""];
m22_215 [cluster="Unk.Select", file="LeanDataTests.cs", label="Entry Unk.Select", span=""];
m22_221 [cluster="Unk.SetName", file="LeanDataTests.cs", label="Entry Unk.SetName", span=""];
m22_65 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="LeanDataTests.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m22_208 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="LeanDataTests.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297"];
m22_210 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", color=green, community=0, file="LeanDataTests.cs", label="8: return new List<LeanDataTestParameters>\r\n            {\r\n                // equity\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Tick, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_Trade_Tick.csv'', ''equity/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Second, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_second_trade.csv'', ''equity/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Minute, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_minute_trade.csv'', ''equity/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Hour, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Daily, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/daily''),\r\n\r\n                // equity option trades\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_tick_trade_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_tick_quote_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_second_trade_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_second_quote_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_minute_trade_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_minute_quote_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n\r\n                // forex\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_tick_quote.csv'', ''forex/fxcm/tick/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_second_quote.csv'', ''forex/fxcm/second/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_minute_quote.csv'', ''forex/fxcm/minute/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Hour, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Daily, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/daily''),\r\n\r\n                // cfd\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_tick_quote.csv'', ''cfd/fxcm/tick/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_second_quote.csv'', ''cfd/fxcm/second/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_minute_quote.csv'', ''cfd/fxcm/minute/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Hour, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Daily, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/daily''),\r\n\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="300-335"];
m22_209 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="LeanDataTests.cs", label="var date = new DateTime(2016, 02, 17)", span="299-299"];
m22_211 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297"];
m22_228 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m22_67 [cluster="System.Math.Max(int, int)", file="LeanDataTests.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m22_202 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.Open, actual.Open)", span="291-291"];
m22_203 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.High, actual.High)", span="292-292"];
m22_204 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.Low, actual.Low)", span="293-293"];
m22_205 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Assert.AreEqual(expected.Close, actual.Close)", span="294-294"];
m22_198 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="expected == null && actual == null", span="283-283"];
m22_200 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="expected == null && actual != null", span="287-287"];
m22_201 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Assert.Fail(''Expected null bar'')", span="289-289"];
m22_199 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="return;", span="285-285"];
m22_206 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", span="281-281"];
m22_229 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m22_278 [file="LeanDataTests.cs", label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", span=""];
m22_279 [file="LeanDataTests.cs", label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", span=""];
m23_4 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="LeanDataWriter.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101"];
m23_55 [cluster="Unk.Single", file="LeanDataWriter.cs", label="Entry Unk.Single", span=""];
m23_57 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LeanDataWriter.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m23_19 [cluster="Unk.CreateOrderFromJObject", file="LeanDataWriter.cs", label="Entry Unk.CreateOrderFromJObject", span=""];
m23_84 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m23_13 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="74-74"];
m23_14 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="LeanDataWriter.cs", label="var jObject = JObject.Load(reader)", span="76-76"];
m23_15 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="LeanDataWriter.cs", label="var order = CreateOrderFromJObject(jObject)", span="78-78"];
m23_16 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="LeanDataWriter.cs", label="return order;", span="80-80"];
m23_17 [cluster="QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", file="LeanDataWriter.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.ReadJson(JsonReader, System.Type, object, JsonSerializer)", span="74-74"];
m23_12 [cluster="System.NotImplementedException.NotImplementedException(string)", file="LeanDataWriter.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m23_61 [cluster="lambda expression", file="LeanDataWriter.cs", label="Entry lambda expression", span="105-105"];
m23_0 [cluster="lambda expression", file="LeanDataWriter.cs", label="Entry lambda expression", span="31-32"];
m23_1 [cluster="lambda expression", file="LeanDataWriter.cs", label="Composer.Instance.GetExportedValueByTypeName<IMapFileProvider>(Config.Get(''map-file-provider'', ''LocalDiskMapFileProvider''))", span="32-32"];
m23_2 [cluster="lambda expression", file="LeanDataWriter.cs", label="Exit lambda expression", span="31-32"];
m23_62 [cluster="lambda expression", file="LeanDataWriter.cs", label="x.Value<string>()", span="105-105"];
m23_63 [cluster="lambda expression", file="LeanDataWriter.cs", label="Exit lambda expression", span="105-105"];
m23_59 [cluster="Symbol.cstr", file="LeanDataWriter.cs", label="Entry Symbol.cstr", span=""];
m23_60 [cluster="Unk.Create", file="LeanDataWriter.cs", label="Entry Unk.Create", span=""];
m23_52 [cluster="Unk.ToList", file="LeanDataWriter.cs", label="Entry Unk.ToList", span=""];
m23_9 [cluster="QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="62-62"];
m23_10 [cluster="QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="LeanDataWriter.cs", label="throw new NotImplementedException(''The OrderJsonConverter does not implement a WriteJson method;.'');", span="64-64"];
m23_11 [cluster="QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="LeanDataWriter.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="62-62"];
m23_49 [cluster="Unk.>", file="LeanDataWriter.cs", label="Entry Unk.>", span=""];
m23_83 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m23_8 [cluster="System.Type.IsAssignableFrom(System.Type)", file="LeanDataWriter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m23_88 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="36-36"];
m23_86 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51"];
m23_89 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", span="29-29"];
m23_20 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="88-88"];
m23_21 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="var orderType = (OrderType) jObject[''Type''].Value<int>()", span="91-91"];
m23_22 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="var order = CreateOrder(orderType, jObject)", span="92-92"];
m23_23 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.Id = jObject[''Id''].Value<int>()", span="95-95"];
m23_24 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.Status = (OrderStatus) jObject[''Status''].Value<int>()", span="96-96"];
m23_25 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.Time = jObject[''Time''].Value<DateTime>()", span="97-97"];
m23_26 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.Tag = jObject[''Tag''].Value<string>()", span="98-98"];
m23_27 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.Quantity = jObject[''Quantity''].Value<int>()", span="100-100"];
m23_28 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.Quantity = jObject[''Quantity''].Value<decimal>()", span="101-101"];
m23_29 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.Price = jObject[''Price''].Value<decimal>()", span="103-103"];
m23_30 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="var securityType = (SecurityType) jObject[''SecurityType''].Value<int>()", span="104-104"];
m23_31 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.BrokerId = jObject[''BrokerId''].Select(x => x.Value<string>()).ToList()", span="105-105"];
m23_32 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.ContingentId = jObject[''ContingentId''].Value<int>()", span="106-106"];
m23_34 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="var suppliedMarket = jObject.SelectTokens(''Symbol.ID.Market'')", span="111-111"];
m23_38 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="jObject.SelectTokens(''Symbol.ID'').Any()", span="122-122"];
m23_39 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="var sid = SecurityIdentifier.Parse(jObject.SelectTokens(''Symbol.ID'').Single().Value<string>())", span="124-124"];
m23_40 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="125-125"];
m23_42 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="jObject.SelectTokens(''Symbol.Value'').Any()", span="128-128"];
m23_43 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="var ticker = jObject.SelectTokens(''Symbol.Value'').Single().Value<string>()", span="131-131"];
m23_45 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="var tickerstring = jObject[''Symbol''].Value<string>()", span="136-136"];
m23_41 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.Symbol = new Symbol(sid, ticker)", span="126-126"];
m23_44 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.Symbol = Symbol.Create(ticker, securityType, market)", span="132-132"];
m23_46 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="order.Symbol = Symbol.Create(tickerstring, securityType, market)", span="137-137"];
m23_47 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="return order;", span="139-139"];
m23_37 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="new DefaultBrokerageModel().DefaultMarkets.TryGetValue(securityType, out market)", span="119-119"];
m23_33 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="string market = Market.USA", span="108-108"];
m23_35 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="suppliedMarket.Any()", span="112-112"];
m23_36 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="market = suppliedMarket.Single().Value<string>()", span="114-114"];
m23_48 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", file="LeanDataWriter.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(JObject)", span="88-88"];
m23_54 [cluster="Unk.Any", file="LeanDataWriter.cs", label="Entry Unk.Any", span=""];
m23_85 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m23_53 [cluster="Unk.SelectTokens", file="LeanDataWriter.cs", label="Entry Unk.SelectTokens", span=""];
m23_18 [cluster="Unk.Load", file="LeanDataWriter.cs", label="Entry Unk.Load", span=""];
m23_87 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m23_90 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="LeanDataWriter.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m23_58 [cluster="Unk.Parse", file="LeanDataWriter.cs", label="Entry Unk.Parse", span=""];
m23_50 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", span="145-145"];
m23_64 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="Order order", span="147-147"];
m23_65 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label=orderType, span="148-148"];
m23_69 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="order = new LimitOrder {LimitPrice = jObject[''LimitPrice''].Value<decimal>()}", span="155-155"];
m23_71 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="order = new StopMarketOrder\r\n                    {\r\n                        StopPrice = jObject[''StopPrice''].Value<decimal>()\r\n                    }", span="159-162"];
m23_73 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="order = new StopLimitOrder\r\n                    {\r\n                        LimitPrice = jObject[''LimitPrice''].Value<decimal>(),\r\n                        StopPrice = jObject[''StopPrice''].Value<decimal>()\r\n                    }", span="166-170"];
m23_66 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="OrderType.Market", span="150-150"];
m23_68 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="OrderType.Limit", span="154-154"];
m23_70 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="OrderType.StopMarket", span="158-158"];
m23_72 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="OrderType.StopLimit", span="165-165"];
m23_74 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="OrderType.MarketOnOpen", span="173-173"];
m23_76 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="OrderType.MarketOnClose", span="177-177"];
m23_78 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="OrderType.OptionExercise", span="181-181"];
m23_80 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="throw new ArgumentOutOfRangeException();", span="186-186"];
m23_67 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="order = new MarketOrder()", span="151-151"];
m23_75 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="order = new MarketOnOpenOrder()", span="174-174"];
m23_77 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="order = new MarketOnCloseOrder()", span="178-178"];
m23_79 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="order = new OptionExerciseOrder()", span="182-182"];
m23_81 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="return order;", span="188-188"];
m23_82 [cluster="QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", file="LeanDataWriter.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType, JObject)", span="145-145"];
m23_51 [cluster="Unk.Select", file="LeanDataWriter.cs", label="Entry Unk.Select", span=""];
m23_56 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="LeanDataWriter.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m23_3 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="LeanDataWriter.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m23_5 [cluster="QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", file="LeanDataWriter.cs", label="Entry QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", span="53-53"];
m23_6 [cluster="QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", file="LeanDataWriter.cs", label="return typeof(Order).IsAssignableFrom(objectType);", span="55-55"];
m23_7 [cluster="QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", file="LeanDataWriter.cs", label="Exit QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)", span="53-53"];
m23_91 [file="LeanDataWriter.cs", label="QuantConnect.Orders.OrderJsonConverter", span=""];
m24_32 [cluster="System.Linq.IOrderedEnumerable<TSource>.ThenByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="LimitOrder.cs", label="Entry System.Linq.IOrderedEnumerable<TSource>.ThenByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m24_0 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", span="35-35"];
m24_1 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", file="LimitOrder.cs", label="SetStartDate(2015, 12, 24)", span="37-37"];
m24_2 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", file="LimitOrder.cs", label="SetEndDate(2015, 12, 24)", span="38-38"];
m24_3 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", file="LimitOrder.cs", label="SetCash(10000)", span="39-39"];
m24_4 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", file="LimitOrder.cs", label="var equity = AddEquity(UnderlyingTicker)", span="41-41"];
m24_5 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", file="LimitOrder.cs", label="var option = AddOption(UnderlyingTicker)", span="42-42"];
m24_6 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", file="LimitOrder.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="44-44"];
m24_8 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", file="LimitOrder.cs", label="SetBenchmark(equity.Symbol)", span="50-50"];
m24_7 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", file="LimitOrder.cs", label="option.SetFilter(-2, +2, TimeSpan.Zero, TimeSpan.FromDays(10))", span="47-47"];
m24_9 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", file="LimitOrder.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.Initialize()", span="35-35"];
m24_41 [cluster="System.Math.Abs(decimal)", file="LimitOrder.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m24_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1358-1358"];
m24_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m24_45 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="92-92"];
m24_46 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="LimitOrder.cs", label="Log(orderEvent.ToString())", span="94-94"];
m24_47 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="LimitOrder.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="92-92"];
m24_19 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", span="57-57"];
m24_20 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="LimitOrder.cs", label="!Portfolio.Invested", span="59-59"];
m24_22 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="LimitOrder.cs", label="slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="62-62"];
m24_27 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="LimitOrder.cs", label="slice.Bars", span="81-81"];
m24_21 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="LimitOrder.cs", label="OptionChain chain", span="61-61"];
m24_26 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="LimitOrder.cs", label="Liquidate()", span="78-78"];
m24_23 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="LimitOrder.cs", label="var contract = chain\r\n                        .OrderBy(x => Math.Abs(chain.Underlying.Price - x.Strike))\r\n                        .ThenByDescending(x => x.Expiry)\r\n                        .FirstOrDefault()", span="65-68"];
m24_24 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="LimitOrder.cs", label="contract != null", span="70-70"];
m24_25 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="LimitOrder.cs", label="MarketOrder(contract.Symbol, 1)", span="72-72"];
m24_28 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="LimitOrder.cs", label="Console.WriteLine(''---> OnData: {0}, {1}, {2}'', Time, kpv.Key.Value, kpv.Value.Close.ToString(''0.00''))", span="83-83"];
m24_29 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", file="LimitOrder.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm.OnData(QuantConnect.Data.Slice)", span="57-57"];
m24_42 [cluster="lambda expression", file="LimitOrder.cs", label="Entry lambda expression", span="67-67"];
m24_39 [cluster="lambda expression", file="LimitOrder.cs", label="Math.Abs(chain.Underlying.Price - x.Strike)", span="66-66"];
m24_38 [cluster="lambda expression", file="LimitOrder.cs", label="Entry lambda expression", span="66-66"];
m24_40 [cluster="lambda expression", file="LimitOrder.cs", label="Exit lambda expression", span="66-66"];
m24_43 [cluster="lambda expression", file="LimitOrder.cs", label="x.Expiry", span="67-67"];
m24_44 [cluster="lambda expression", file="LimitOrder.cs", label="Exit lambda expression", span="67-67"];
m24_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1344-1344"];
m24_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070"];
m24_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="LimitOrder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m24_16 [cluster="System.TimeSpan.FromDays(double)", file="LimitOrder.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m24_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636"];
m24_17 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="LimitOrder.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="313-313"];
m24_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095"];
m24_30 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="LimitOrder.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m24_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="LimitOrder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m24_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m24_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019"];
m24_15 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="LimitOrder.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m24_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="LimitOrder.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="976-976"];
m24_37 [cluster="System.Console.WriteLine(string, object, object, object)", file="LimitOrder.cs", label="Entry System.Console.WriteLine(string, object, object, object)", span="0-0"];
m24_48 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="LimitOrder.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="153-153"];
m24_36 [cluster="decimal.ToString(string)", file="LimitOrder.cs", label="Entry decimal.ToString(string)", span="0-0"];
m24_50 [file="LimitOrder.cs", label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", span=""];
m24_51 [file="LimitOrder.cs", label=chain, span=""];
m25_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m25_0 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="36-36"];
m25_1 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="36-36"];
m25_7 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.Clone()", span="65-65"];
m25_8 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="var order = new MarketOnCloseOrder()", span="67-67"];
m25_9 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="CopyTo(order)", span="68-68"];
m25_10 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="return order;", span="69-69"];
m25_11 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.Clone()", span="65-65"];
m25_4 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m25_5 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnCloseOrder.cs", label="return Quantity*security.Price;", span="58-58"];
m25_6 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m25_2 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m25_3 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m25_13 [file="MarketOnCloseOrder.cs", label="QuantConnect.Orders.MarketOnCloseOrder", span=""];
m26_0 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m26_1 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m26_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m26_4 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m26_5 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="return Quantity*security.Price;", span="58-58"];
m26_6 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m26_7 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="65-65"];
m26_8 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="var order = new MarketOnOpenOrder()", span="67-67"];
m26_9 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="CopyTo(order)", span="68-68"];
m26_10 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="return order;", span="69-69"];
m26_11 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="65-65"];
m26_2 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m26_3 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m26_13 [file="MarketOnOpenOrder.cs", label="QuantConnect.Orders.MarketOnOpenOrder", span=""];
m27_7 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.Clone()", span="65-65"];
m27_8 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="var order = new MarketOrder()", span="67-67"];
m27_9 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="CopyTo(order)", span="68-68"];
m27_10 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="return order;", span="69-69"];
m27_11 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.Clone()", span="65-65"];
m27_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m27_2 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m27_3 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m27_0 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m27_1 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m27_4 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m27_5 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="return Quantity*security.Price;", span="58-58"];
m27_6 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m27_13 [file="MarketOrder.cs", label="QuantConnect.Orders.MarketOrder", span=""];
m28_2 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="41-41"];
m28_3 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", color=green, community=0, file="OptionExerciseOrder.cs", label="5: Price = Symbol.ID.StrikePrice", span="44-44"];
m28_4 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="41-41"];
m28_15 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m28_9 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="189-189"];
m28_5 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="59-59"];
m28_6 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="var option = (Option)security", span="61-61"];
m28_7 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="return option.GetExerciseQuantity(Quantity) * Price  / option.SymbolProperties.ContractMultiplier;", span="63-63"];
m28_8 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="59-59"];
m28_0 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", span="29-29"];
m28_1 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", span="29-29"];
m28_10 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.Clone()", span="70-70"];
m28_11 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="var order = new OptionExerciseOrder()", span="72-72"];
m28_12 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="CopyTo(order)", span="73-73"];
m28_13 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="return order;", span="74-74"];
m28_14 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.Clone()", span="70-70"];
m28_16 [file="OptionExerciseOrder.cs", label="QuantConnect.Orders.OptionExerciseOrder", span=""];
m30_38 [cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="OrderEvent.cs", label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202"];
m30_37 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="OrderEvent.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m30_36 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="OrderEvent.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m30_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="OrderEvent.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="104-104"];
m30_23 [cluster="System.TimeSpan.Multiply(double)", file="OrderEvent.cs", label="Entry System.TimeSpan.Multiply(double)", span="230-230"];
m30_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Equals(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="OrderEvent.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Equals(QuantConnect.Algorithm.Framework.Alphas.Insight)", span="250-250"];
m30_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="OrderEvent.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="104-104"];
m30_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=red, community=0, file="OrderEvent.cs", label="4: changes.RemovedSecurities", span="112-112"];
m30_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="OrderEvent.cs", label="8: SymbolData data", span="114-114"];
m30_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="OrderEvent.cs", label="3: _symbolData.TryGetValue(removed.Symbol, out data)", span="115-115"];
m30_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="OrderEvent.cs", label="algorithm.SubscriptionManager.RemoveConsolidator(data.Security.Symbol, data.Consolidator)", span="117-117"];
m30_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="OrderEvent.cs", label="4: algorithm.SubscriptionManager.RemoveConsolidator(data.Security.Symbol, data.Consolidator)", span="118-118"];
m30_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="OrderEvent.cs", label="_symbolData.TryGetValue(removed.Symbol, out data)", span="114-114"];
m30_26 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="OrderEvent.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", span="156-156"];
m30_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="OrderEvent.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="104-104"];
m30_46 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="OrderEvent.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m30_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="OrderEvent.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="66-66"];
m30_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=red, community=0, file="OrderEvent.cs", label="3: _symbolData.Values", span="68-68"];
m30_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="OrderEvent.cs", label="yield return insight;", span="95-95"];
m30_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="OrderEvent.cs", label="4: sd.Security.Price == 0", span="70-70"];
m30_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="OrderEvent.cs", label="8: var normalizedSignal = sd.MACD.Signal / sd.Security.Price", span="76-76"];
m30_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="OrderEvent.cs", label="direction == sd.PreviousDirection", span="87-87"];
m30_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=red, community=0, file="OrderEvent.cs", label="3: var insightPeriod = sd.DataResolution.Multiply(_fastPeriod)", span="92-92"];
m30_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="OrderEvent.cs", label="var insight = new Insight(sd.Security.Symbol, InsightType.Price, direction, insightPeriod)", span="93-93"];
m30_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="OrderEvent.cs", label="0: sd.PreviousDirection = insight.Direction", span="94-94"];
m30_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="OrderEvent.cs", label="3: var direction = InsightDirection.Flat", span="75-75"];
m30_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="OrderEvent.cs", label="4: normalizedSignal > BounceThresholdPercent", span="77-77"];
m30_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=red, community=0, file="OrderEvent.cs", label="3: normalizedSignal < -BounceThresholdPercent", span="81-81"];
m30_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="OrderEvent.cs", label="3: direction = InsightDirection.Up", span="79-79"];
m30_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="OrderEvent.cs", label="direction = InsightDirection.Down", span="83-83"];
m30_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="OrderEvent.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="66-66"];
m30_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="OrderEvent.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1450-1450"];
m30_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="OrderEvent.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1352-1352"];
m30_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="OrderEvent.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType)", span="131-131"];
m30_39 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="OrderEvent.cs", label="Security = security", span="133-133"];
m30_40 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="OrderEvent.cs", label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, security.Resolution)", span="134-134"];
m30_41 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="OrderEvent.cs", label="algorithm.SubscriptionManager.AddConsolidator(security.Symbol, Consolidator)", span="135-135"];
m30_42 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="OrderEvent.cs", label="MACD = algorithm.MACD(security.Symbol, fastPeriod, slowPeriod, signalPeriod, movingAverageType)", span="137-137"];
m30_43 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="OrderEvent.cs", label="algorithm.RegisterIndicator(security.Symbol, MACD, Consolidator)", span="139-139"];
m30_44 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="OrderEvent.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType)", span="131-131"];
m30_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="OrderEvent.cs", label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", span=""];
m30_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType)", file="OrderEvent.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType)", span="46-46"];
m30_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType)", color=green, community=0, file="OrderEvent.cs", label="4: _fastPeriod = fastPeriod", span="53-53"];
m30_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType)", color=green, community=0, file="OrderEvent.cs", label="8: _slowPeriod = slowPeriod", span="54-54"];
m30_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType)", color=green, community=0, file="OrderEvent.cs", label="8: _signalPeriod = signalPeriod", span="55-55"];
m30_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType)", color=green, community=0, file="OrderEvent.cs", label="4: _movingAverageType = movingAverageType", span="56-56"];
m30_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType)", file="OrderEvent.cs", label="_symbolData = new Dictionary<Symbol, SymbolData>()", span="57-57"];
m30_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType)", file="OrderEvent.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType)", span="46-46"];
m30_7 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="OrderEvent.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m30_49 [file="OrderEvent.cs", label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", span=""];
m30_50 [file="OrderEvent.cs", label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", span=""];
m31_16 [cluster="string.Format(string, params object[])", file="PandasConverter.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m31_11 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="PandasConverter.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.ToString()", span="119-119"];
m31_12 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="PandasConverter.cs", label="var proxy = Order.CreateOrder(this)", span="122-122"];
m31_13 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", color=red, community=0, file="PandasConverter.cs", label="4: return string.Format(''{0} UTC: Submit Order: ({1}) - {2} {3}'', Time, OrderId, proxy, Tag) + '' Status: '' + Status;", span="123-123"];
m31_14 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="PandasConverter.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.ToString()", span="119-119"];
m31_0 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="PandasConverter.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m31_1 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", color=red, community=0, file="PandasConverter.cs", label="8: SecurityType = securityType", span="95-95"];
m31_2 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="PandasConverter.cs", label="Symbol = symbol", span="96-96"];
m31_3 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="PandasConverter.cs", label="OrderType = orderType", span="97-97"];
m31_4 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="PandasConverter.cs", label="Quantity = quantity", span="98-98"];
m31_5 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="PandasConverter.cs", label="LimitPrice = limitPrice", span="99-99"];
m31_6 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", color=red, community=0, file="PandasConverter.cs", label="5: StopPrice = stopPrice", span="100-100"];
m31_7 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="PandasConverter.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m31_8 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="PandasConverter.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="107-107"];
m31_9 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", color=red, community=0, file="PandasConverter.cs", label="5: OrderId = orderId", span="109-109"];
m31_10 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="PandasConverter.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="107-107"];
m31_15 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="PandasConverter.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="258-258"];
m31_17 [file="PandasConverter.cs", label="QuantConnect.Orders.SubmitOrderRequest", span=""];
m32_39 [cluster="System.Math.Abs(decimal)", file="PandasConverterTests.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m32_54 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
m32_74 [cluster="Unk.All", file="PandasConverterTests.cs", label="Entry Unk.All", span=""];
m32_119 [cluster="Unk.ConvertOrderStatus", file="PandasConverterTests.cs", label="Entry Unk.ConvertOrderStatus", span=""];
m32_121 [cluster="Unk.Where", file="PandasConverterTests.cs", label="Entry Unk.Where", span=""];
m32_148 [cluster="Securities.Cash.cstr", file="PandasConverterTests.cs", label="Entry Securities.Cash.cstr", span=""];
m32_56 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m32_58 [cluster="int.ToString()", file="PandasConverterTests.cs", label="Entry int.ToString()", span="0-0"];
m32_161 [cluster="System.Collections.Generic.List<T>.Clear()", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m32_151 [cluster="Unk.ToUpper", file="PandasConverterTests.cs", label="Entry Unk.ToUpper", span=""];
m32_72 [cluster="System.Collections.Generic.List<T>.List()", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m32_115 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="PandasConverterTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m32_153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="288-288"];
m32_124 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="204-204"];
m32_75 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="135-135"];
m32_76 [cluster="lambda expression", color=green, community=1, file="PandasConverterTests.cs", label="5: a", span="135-135"];
m32_77 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="135-135"];
m32_125 [cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs", label="4: c.Value.BrokerId.Contains(item.BrokerId.First())", span="204-204"];
m32_126 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="204-204"];
m32_59 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="113-113"];
m32_60 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="1: throw new NotSupportedException(''GDAXBrokerage.UpdateOrder: Order update not supported. Please cancel and re-create.'');", span="115-115"];
m32_61 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="113-113"];
m32_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="83-83"];
m32_45 [cluster="Unk.GetAuthenticationToken", file="PandasConverterTests.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m32_82 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="150-150"];
m32_83 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: var list = new List<Order>()", span="152-152"];
m32_84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: var req = new RestRequest(''/orders?status=open&status=pending'', Method.GET)", span="156-156"];
m32_104 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="3: list.Add(order)", span="191-191"];
m32_107 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: list", span="200-200"];
m32_112 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="8: return list;", span="212-212"];
m32_85 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: GetAuthenticationToken(req)", span="157-157"];
m32_86 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: var response = RestClient.Execute(req)", span="158-158"];
m32_90 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: Order order = null", span="165-165"];
m32_92 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: order = new MarketOrder { Price = item.Price }", span="168-168"];
m32_94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: order = new LimitOrder { LimitPrice = item.Price }", span="172-172"];
m32_96 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: order = new StopMarketOrder { StopPrice = item.Price }", span="176-176"];
m32_103 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="1: order.Price = item.Price", span="190-190"];
m32_89 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: orders", span="163-163"];
m32_87 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: response != null", span="160-160"];
m32_108 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: item.Status.IsOpen()", span="202-202"];
m32_111 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: this.CachedOrderIDs[cached.First().Key] = item", span="207-207"];
m32_110 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: cached.Any()", span="205-205"];
m32_109 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: var cached = this.CachedOrderIDs.Where(c => c.Value.BrokerId.Contains(item.BrokerId.First()))", span="204-204"];
m32_88 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: var orders = JsonConvert.DeserializeObject<Messages.Order[]>(response.Content)", span="162-162"];
m32_97 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="8: OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode,\r\n                                ''GDAXBrokerage.GetOpenOrders: Unsupported order type returned from brokerage: '' + item.Type))", span="180-181"];
m32_105 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: Exception", span="195-195"];
m32_95 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="8: item.Type == ''stop''", span="174-174"];
m32_106 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="8: throw;", span="197-197"];
m32_91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="8: item.Type == ''market''", span="166-166"];
m32_93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: item.Type == ''limit''", span="170-170"];
m32_98 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: order.Quantity = item.Side == ''sell'' ? -item.Size : item.Size", span="185-185"];
m32_99 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: order.BrokerId = new List<string> { item.Id.ToString() }", span="186-186"];
m32_100 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: order.Symbol = ConvertProductId(item.ProductId)", span="187-187"];
m32_102 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="4: order.Status = ConvertOrderStatus(item)", span="189-189"];
m32_101 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="PandasConverterTests.cs", label="8: order.Time = DateTime.UtcNow", span="188-188"];
m32_113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="PandasConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="150-150"];
m32_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="104-104"];
m32_0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="43-43"];
m32_1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: LockStream()", span="45-45"];
m32_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: var req = new RestRequest(''/orders'', Method.POST)", span="47-47"];
m32_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: payload.size = Math.Abs(order.Quantity)", span="51-51"];
m32_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: dynamic payload = new ExpandoObject()", span="49-49"];
m32_5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: payload.side = order.Direction.ToString().ToLower()", span="52-52"];
m32_6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: payload.type = ConvertOrderType(order.Type)", span="53-53"];
m32_7 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="8: payload.price = order is LimitOrder ? ((LimitOrder)order).LimitPrice : order is StopMarketOrder ? ((StopMarketOrder)order).StopPrice : 0", span="54-54"];
m32_8 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: payload.product_id = ConvertSymbol(order.Symbol)", span="55-55"];
m32_9 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: _algorithm.BrokerageModel.AccountType == AccountType.Margin", span="57-57"];
m32_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: CachedOrderIDs.ContainsKey(order.Id)", span="79-79"];
m32_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: var brokerId = raw.Id", span="78-78"];
m32_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="8: CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="81-81"];
m32_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: order.BrokerId.Add(brokerId)", span="85-85"];
m32_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="90-90"];
m32_24 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: CachedOrderIDs.TryAdd(order.Id, order)", span="86-86"];
m32_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted })", span="93-93"];
m32_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.PlaceOrder: Order completed successfully orderid:'' + order.Id.ToString()))", span="95-95"];
m32_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: UnlockStream()", span="96-96"];
m32_30 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid })", span="100-100"];
m32_14 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: response.StatusCode == System.Net.HttpStatusCode.OK && response.Content != null", span="67-67"];
m32_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: var message = $''GDAXBrokerage.PlaceOrder: Order failed Order Id: {order.Id} timestamp: {order.Time} quantity: {order.Quantity} content: {response.Content}''", span="102-102"];
m32_13 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: var response = RestClient.Execute(req)", span="65-65"];
m32_32 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, message))", span="103-103"];
m32_11 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: req.AddJsonBody(payload)", span="62-62"];
m32_12 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: GetAuthenticationToken(req)", span="64-64"];
m32_10 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: payload.overdraft_enabled = true", span="59-59"];
m32_15 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: var raw = JsonConvert.DeserializeObject<Messages.Order>(response.Content)", span="69-69"];
m32_17 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GDAXBrokerage.PlaceOrder: Error parsing response from place order: '' + response.Content))", span="73-73"];
m32_16 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: raw == null || raw.Id == null", span="71-71"];
m32_18 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="8: UnlockStream()", span="74-74"];
m32_19 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="8: return false;", span="75-75"];
m32_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: return true;", span="97-97"];
m32_33 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="8: UnlockStream()", span="104-104"];
m32_34 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: return false;", span="105-105"];
m32_35 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="43-43"];
m32_37 [cluster="RestRequest.cstr", file="PandasConverterTests.cs", label="Entry RestRequest.cstr", span=""];
m32_38 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="PandasConverterTests.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m32_48 [cluster="BrokerageMessageEvent.cstr", file="PandasConverterTests.cs", label="Entry BrokerageMessageEvent.cstr", span=""];
m32_117 [cluster="Unk.ToString", file="PandasConverterTests.cs", label="Entry Unk.ToString", span=""];
m32_152 [cluster="Unk.Create", file="PandasConverterTests.cs", label="Entry Unk.Create", span=""];
m32_53 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="PandasConverterTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m32_44 [cluster="Unk.AddJsonBody", file="PandasConverterTests.cs", label="Entry Unk.AddJsonBody", span=""];
m32_47 [cluster="Unk.>", file="PandasConverterTests.cs", label="Entry Unk.>", span=""];
m32_41 [cluster="string.ToLower()", file="PandasConverterTests.cs", label="Entry string.ToLower()", span="0-0"];
m32_63 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="123-123"];
m32_64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: var success = new List<bool>()", span="125-125"];
m32_65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: order.BrokerId", span="127-127"];
m32_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: success.Add(response.StatusCode == System.Net.HttpStatusCode.OK)", span="132-132"];
m32_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: return success.All(a => a);", span="135-135"];
m32_66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: var req = new RestRequest(''/orders/'' + id, Method.DELETE)", span="129-129"];
m32_68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="4: var response = RestClient.Execute(req)", span="131-131"];
m32_67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", color=green, community=0, file="PandasConverterTests.cs", label="1: GetAuthenticationToken(req)", span="130-130"];
m32_71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="123-123"];
m32_81 [cluster="QuantConnect.Brokerages.IWebSocket.Close()", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="45-45"];
m32_114 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="PandasConverterTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m32_52 [cluster="Unk.Add", file="PandasConverterTests.cs", label="Entry Unk.Add", span=""];
m32_128 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m32_129 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="220-220"];
m32_130 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", color=green, community=0, file="PandasConverterTests.cs", label="1: return new List<Holding>();", span="227-227"];
m32_131 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="PandasConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="220-220"];
m32_40 [cluster="System.Enum.ToString()", file="PandasConverterTests.cs", label="Entry System.Enum.ToString()", span="0-0"];
m32_49 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m32_78 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="141-141"];
m32_79 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", color=green, community=0, file="PandasConverterTests.cs", label="4: WebSocket.Close()", span="143-143"];
m32_80 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="PandasConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="141-141"];
m32_122 [cluster="Unk.Any", file="PandasConverterTests.cs", label="Entry Unk.Any", span=""];
m32_150 [cluster="Unk.GetConversionRate", file="PandasConverterTests.cs", label="Entry Unk.GetConversionRate", span=""];
m32_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="286-286"];
m32_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="GetAuthenticationToken(req)", span="293-293"];
m32_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="var response = RestClient.Execute(req)", span="294-294"];
m32_165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="292-292"];
m32_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="295-295"];
m32_164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="order.BrokerId", span="290-290"];
m32_169 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="totalFee += (decimal)fill.fill_fees", span="297-297"];
m32_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="var totalFee = 0m", span="288-288"];
m32_170 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="return totalFee;", span="300-300"];
m32_171 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="PandasConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="286-286"];
m32_46 [cluster="Unk.Execute", file="PandasConverterTests.cs", label="Entry Unk.Execute", span=""];
m32_116 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="PandasConverterTests.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m32_51 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="PandasConverterTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m32_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="92-92"];
m32_57 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m32_132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="234-234"];
m32_133 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="4: var list = new List<Securities.Cash>()", span="236-236"];
m32_134 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="4: var req = new RestRequest(''/accounts'', Method.GET)", span="238-238"];
m32_140 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="4: list.Add(new Securities.Cash(item.Currency, item.Balance, 1))", span="248-248"];
m32_143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="4: list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, rate))", span="253-253"];
m32_145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="8: list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, tick.Price))", span="259-259"];
m32_146 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="4: return list;", span="263-263"];
m32_135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="1: GetAuthenticationToken(req)", span="239-239"];
m32_136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="4: var response = RestClient.Execute(req)", span="240-240"];
m32_137 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="4: JsonConvert.DeserializeObject<Messages.Account[]>(response.Content)", span="242-242"];
m32_139 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="4: item.Currency == ''USD''", span="246-246"];
m32_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="4: var rate = GetConversionRate(item.Currency)", span="252-252"];
m32_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="1: var tick = GetTick(Symbol.Create(item.Currency + ''USD'', SecurityType.Crypto, Market.GDAX))", span="257-257"];
m32_138 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="4: item.Balance > 0", span="244-244"];
m32_141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", color=green, community=0, file="PandasConverterTests.cs", label="4: new[] {''GBP'', ''EUR'' }.Contains(item.Currency)", span="250-250"];
m32_147 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="PandasConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="234-234"];
m32_73 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m32_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133"];
m32_149 [cluster="Unk.Contains", file="PandasConverterTests.cs", label="Entry Unk.Contains", span=""];
m32_120 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="PandasConverterTests.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m32_123 [cluster="Unk.First", file="PandasConverterTests.cs", label="Entry Unk.First", span=""];
m32_127 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m32_62 [cluster="System.NotSupportedException.NotSupportedException(string)", file="PandasConverterTests.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m32_160 [cluster="System.Collections.Generic.List<T>.ToArray()", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m32_154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="PandasConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="270-270"];
m32_155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="PandasConverterTests.cs", label=Ticks, span="272-272"];
m32_156 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="PandasConverterTests.cs", label="var copy = Ticks.ToArray()", span="274-274"];
m32_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="PandasConverterTests.cs", label="Ticks.Clear()", span="275-275"];
m32_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="PandasConverterTests.cs", label="return copy;", span="276-276"];
m32_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="PandasConverterTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="270-270"];
m32_55 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="PandasConverterTests.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
m32_118 [cluster="Unk.ConvertProductId", file="PandasConverterTests.cs", label="Entry Unk.ConvertProductId", span=""];
m32_172 [file="PandasConverterTests.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m32_173 [file="PandasConverterTests.cs", label=item, span=""];
m33_211 [cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108"];
m33_140 [cluster="System.Type.GetMethods()", file="QCAlgorithm.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m33_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851"];
m33_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label=_locked, span="853-853"];
m33_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="timeZone == null", span="858-858"];
m33_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="_timeKeeper.AddTimeZone(timeZone)", span="859-859"];
m33_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(timeZone)", span="860-860"];
m33_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="TimeRules.SetDefaultTimeZone(timeZone)", span="863-863"];
m33_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetTimeZone(): Cannot change time zone after algorithm running.'');", span="855-855"];
m33_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''timeZone'');", span="858-858"];
m33_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="851-851"];
m33_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m33_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Name = GetType().Name", span="92-92"];
m33_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Running", span="93-93"];
m33_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="IsWarmingUp = true", span="96-96"];
m33_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_startDate = new DateTime(1998, 01, 01)", span="103-103"];
m33_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_endDate = DateTime.Now.AddDays(-1)", span="104-104"];
m33_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_timeKeeper = new TimeKeeper(_startDate, new[] { TimeZones.NewYork })", span="107-107"];
m33_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork)", span="109-109"];
m33_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Settings = new AlgorithmSettings()", span="111-111"];
m33_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="SubscriptionManager = new SubscriptionManager(Settings, _timeKeeper)", span="114-114"];
m33_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Securities = new SecurityManager(_timeKeeper)", span="116-116"];
m33_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Transactions = new SecurityTransactionManager(Securities)", span="117-117"];
m33_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", color=green, community=0, file="QCAlgorithm.cs", label="1: Portfolio = new SecurityPortfolioManager(Securities, Transactions)", span="118-118"];
m33_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="BrokerageModel = new DefaultBrokerageModel()", span="119-119"];
m33_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Notify = new NotificationManager(false)", span="120-120"];
m33_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_runMode = RunMode.Series", span="123-123"];
m33_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_locked = false", span="126-126"];
m33_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="129-129"];
m33_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="132-132"];
m33_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="UniverseManager = new UniverseManager()", span="135-135"];
m33_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Universe = new UniverseDefinitions(this)", span="136-136"];
m33_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="UniverseSettings = new UniverseSettings(Resolution.Minute, 2m, true, false, TimeSpan.FromDays(1))", span="137-137"];
m33_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Schedule = new ScheduleManager(Securities, TimeZone)", span="140-140"];
m33_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="TradeBuilder = new TradeBuilder(FillGroupingMethod.FillToFill, FillMatchingMethod.FIFO)", span="143-143"];
m33_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(new DefaultBrokerageModel(AccountType.Margin),\r\n                                                                        new FuncSecuritySeeder(GetLastKnownPrice))", span="145-146"];
m33_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="CandlestickPatterns = new CandlestickPatterns(this)", span="148-148"];
m33_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="TradingCalendar = new TradingCalendar(Securities, _marketHoursDatabase)", span="151-151"];
m33_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="OptionChainProvider = new EmptyOptionChainProvider()", span="153-153"];
m33_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m33_427 [cluster="QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", span="48-48"];
m33_29 [cluster="object.GetType()", file="QCAlgorithm.cs", label="Entry object.GetType()", span="0-0"];
m33_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222"];
m33_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="return _locked;", span="1224-1224"];
m33_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1222-1222"];
m33_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832"];
m33_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="DateTimeZone tz", span="834-834"];
m33_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="tz = DateTimeZoneProviders.Tzdb[timeZone]", span="837-837"];
m33_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="throw new ArgumentException(string.Format(''TimeZone with id '{0}' was not found. For a complete list of time zones please visit: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones'', timeZone));", span="841-841"];
m33_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label=DateTimeZoneNotFoundException, span="839-839"];
m33_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="SetTimeZone(tz)", span="844-844"];
m33_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="832-832"];
m33_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m33_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524"];
m33_450 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Crypto>(SecurityType.Crypto, ticker, resolution, market, fillDataForward, leverage, false);", span="1526-1526"];
m33_451 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1524-1524"];
m33_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556"];
m33_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label=availableDataTypes, span="558-558"];
m33_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="SubscriptionManager.AvailableDataTypes[dataFeed.Key] = dataFeed.Value", span="560-560"];
m33_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="556-556"];
m33_212 [cluster="QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", span="48-48"];
m33_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(typeof(T), Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="1621-1622"];
m33_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611"];
m33_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="1614-1614"];
m33_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="1617-1617"];
m33_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="1618-1618"];
m33_498 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1624-1624"];
m33_499 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1611-1611"];
m33_533 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710"];
m33_534 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.cs", label="return SymbolCache.GetSymbol(ticker);", span="1712-1712"];
m33_535 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1710-1710"];
m33_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009"];
m33_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="SetCash((decimal)startingCash)", span="1011-1011"];
m33_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1009-1009"];
m33_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m33_199 [cluster="string.Format(string, object)", file="QCAlgorithm.cs", label="Entry string.Format(string, object)", span="0-0"];
m33_536 [cluster="QuantConnect.SymbolCache.GetSymbol(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.SymbolCache.GetSymbol(string)", span="47-47"];
m33_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m33_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="var end = new DateTime(year, month, day)", span="1100-1100"];
m33_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="end = end.Date.AddDays(1).Subtract(TimeSpan.FromTicks(1))", span="1103-1103"];
m33_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="SetEndDate(end)", span="1105-1105"];
m33_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label=Exception, span="1107-1107"];
m33_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1109-1109"];
m33_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m33_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732"];
m33_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="732-732"];
m33_476 [cluster="Unk.Any", file="QCAlgorithm.cs", label="Entry Unk.Any", span=""];
m33_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m33_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="BrokerageModel = model", span="897-897"];
m33_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(model, new FuncSecuritySeeder(GetLastKnownPrice))", span="901-901"];
m33_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="!_userSetSecurityInitializer", span="898-898"];
m33_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Securities.Values", span="904-904"];
m33_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="var leverage = security.Leverage", span="909-909"];
m33_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="SecurityInitializer.Initialize(security, false)", span="912-912"];
m33_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="security.SetLeverage(leverage)", span="915-915"];
m33_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m33_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m33_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="SetCash((decimal)startingCash)", span="1022-1022"];
m33_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m33_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175"];
m33_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label=_liveMode, span="1178-1178"];
m33_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end > DateTime.Now.Date.AddDays(-1)", span="1182-1182"];
m33_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end < _startDate", span="1190-1190"];
m33_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="1197-1197"];
m33_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="return;", span="1178-1178"];
m33_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end = DateTime.Now.Date.AddDays(-1)", span="1184-1184"];
m33_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="_startDate != new DateTime()", span="1188-1188"];
m33_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select end date greater than start date.'');", span="1192-1192"];
m33_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="!_locked", span="1200-1200"];
m33_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="_endDate = end", span="1202-1202"];
m33_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="1206-1206"];
m33_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1175-1175"];
m33_475 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m33_233 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654"];
m33_272 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m33_37 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m33_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249"];
m33_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="TradeBuilder = tradeBuilder", span="1251-1251"];
m33_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="TradeBuilder.SetLiveMode(LiveMode)", span="1252-1252"];
m33_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1249-1249"];
m33_554 [cluster="Unk.CreateSymbol", file="QCAlgorithm.cs", label="Entry Unk.CreateSymbol", span=""];
m33_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789"];
m33_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="789-789"];
m33_525 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683"];
m33_526 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Debug(''Quit(): '' + message)", span="1685-1685"];
m33_527 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Stopped", span="1686-1686"];
m33_528 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683"];
m33_39 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m33_452 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534"];
m33_453 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Security security", span="1536-1536"];
m33_454 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Securities.TryGetValue(symbol, out security)", span="1537-1537"];
m33_459 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="var universe = UniverseManager.Values.OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(symbol))", span="1548-1548"];
m33_461 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="var ret = universe.Remove(symbol)", span="1551-1551"];
m33_462 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="symbol == _benchmarkSymbol", span="1554-1554"];
m33_463 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Securities.Remove(symbol)", span="1556-1556"];
m33_455 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Transactions.CancelOpenOrders(security.Symbol)", span="1540-1540"];
m33_468 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="return false;", span="1567-1567"];
m33_456 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security.Cache.Reset()", span="1543-1543"];
m33_457 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security.Invested", span="1546-1546"];
m33_458 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Liquidate(security.Symbol)", span="1546-1546"];
m33_460 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="universe != null", span="1549-1549"];
m33_466 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="SubscriptionManager.HasCustomData = universe.Members.Any(x => x.Value.Subscriptions.Any(y => y.IsCustomData))", span="1562-1562"];
m33_467 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="return ret;", span="1564-1564"];
m33_464 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security = CreateBenchmarkSecurity()", span="1558-1558"];
m33_465 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1559-1559"];
m33_469 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1534-1534"];
m33_404 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m33_85 [cluster="Unk.AddEquity", file="QCAlgorithm.cs", label="Entry Unk.AddEquity", span=""];
m33_141 [cluster="Unk.Where", file="QCAlgorithm.cs", label="Entry Unk.Where", span=""];
m33_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740"];
m33_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="740-740"];
m33_295 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="QCAlgorithm.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m33_42 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m33_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528"];
m33_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="string value", span="530-530"];
m33_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="return _parameters.TryGetValue(name, out value) ? value : null;", span="531-531"];
m33_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="528-528"];
m33_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048"];
m33_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="!_locked", span="1050-1050"];
m33_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Portfolio.SetCash(symbol, startingCash, conversionRate)", span="1052-1052"];
m33_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1056-1056"];
m33_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1048-1048"];
m33_47 [cluster="QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", span="51-51"];
m33_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873"];
m33_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="mode != RunMode.Parallel", span="875-875"];
m33_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="return;", span="875-875"];
m33_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Debug(''Algorithm.SetRunMode(): RunMode-Parallel Type has been deprecated. Series analysis selected instead'')", span="876-876"];
m33_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="873-873"];
m33_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597"];
m33_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="OptionChainProvider = optionChainProvider", span="599-599"];
m33_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="597-597"];
m33_487 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577"];
m33_488 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m)", span="1584-1584"];
m33_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1577-1577"];
m33_345 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", span="30-30"];
m33_484 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1562-1562"];
m33_87 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="499-499"];
m33_88 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Value", span="499-499"];
m33_89 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="499-499"];
m33_120 [cluster="lambda expression", file="QCAlgorithm.cs", label="securityInitializer(security)", span="590-590"];
m33_119 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="590-590"];
m33_121 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="590-590"];
m33_148 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="624-624"];
m33_151 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="625-625"];
m33_154 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="626-626"];
m33_158 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="627-627"];
m33_149 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Name == ''OnData''", span="624-624"];
m33_150 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="624-624"];
m33_152 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.DeclaringType != typeof(QCAlgorithm)", span="625-625"];
m33_153 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="625-625"];
m33_155 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.GetParameters().Length == 1", span="626-626"];
m33_156 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="626-626"];
m33_159 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.GetParameters()[0].ParameterType == typeof (Slice)", span="627-627"];
m33_160 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="627-627"];
m33_252 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Key.Value == symbol", span="967-967"];
m33_251 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="967-967"];
m33_253 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="967-967"];
m33_478 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Members.ContainsKey(symbol)", span="1548-1548"];
m33_477 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1548-1548"];
m33_481 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1562-1562"];
m33_479 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1548-1548"];
m33_482 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Value.Subscriptions.Any(y => y.IsCustomData)", span="1562-1562"];
m33_483 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1562-1562"];
m33_485 [cluster="lambda expression", file="QCAlgorithm.cs", label="y.IsCustomData", span="1562-1562"];
m33_486 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1562-1562"];
m33_145 [cluster="Unk.Call", file="QCAlgorithm.cs", label="Entry Unk.Call", span=""];
m33_190 [cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68"];
m33_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813"];
m33_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="813-813"];
m33_30 [cluster="System.DateTime.DateTime(int, int, int)", file="QCAlgorithm.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m33_115 [cluster="QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="31-31"];
m33_403 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442"];
m33_473 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="QCAlgorithm.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m33_555 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771"];
m33_556 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="historyProvider == null", span="1773-1773"];
m33_558 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="HistoryProvider = historyProvider", span="1777-1777"];
m33_557 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''Algorithm.SetHistoryProvider(): Historical data provider cannot be null.'');", span="1775-1775"];
m33_559 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1771-1771"];
m33_222 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m33_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946"];
m33_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="string market = Market.USA", span="948-948"];
m33_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="this.BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="950-950"];
m33_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(symbol, securityType, market)", span="952-952"];
m33_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="946-946"];
m33_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963"];
m33_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="symbol = symbol.ToUpper()", span="966-966"];
m33_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="var security = Securities.FirstOrDefault(x => x.Key.Value == symbol).Value", span="967-967"];
m33_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="_benchmarkSymbol = security == null\r\n                ? QuantConnect.Symbol.Create(symbol, SecurityType.Equity, Market.USA)\r\n                : security.Symbol", span="968-970"];
m33_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="963-963"];
m33_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m33_502 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="1635-1635"];
m33_504 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="_debugMessages.Enqueue(message)", span="1636-1636"];
m33_505 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="_previousDebugMessage = message", span="1637-1637"];
m33_503 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="return;", span="1635-1635"];
m33_506 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m33_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823"];
m33_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="_timeKeeper.SetUtcDateTime(frontier)", span="825-825"];
m33_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="823-823"];
m33_377 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="488-488"];
m33_508 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646"];
m33_509 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="!_liveMode && message == ''''", span="1648-1648"];
m33_511 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="_logMessages.Enqueue(message)", span="1649-1649"];
m33_510 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="return;", span="1648-1648"];
m33_512 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1646-1646"];
m33_52 [cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.cs", label="Entry QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", span="18-18"];
m33_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769"];
m33_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="769-769"];
m33_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m33_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Benchmark = new FuncBenchmark(benchmark)", span="989-989"];
m33_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m33_316 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m33_51 [cluster="QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", span="34-34"];
m33_406 [cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", span="49-49"];
m33_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m33_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="_benchmarkSymbol = symbol", span="979-979"];
m33_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m33_314 [cluster="System.DateTime.DateTime()", file="QCAlgorithm.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m33_82 [cluster="Unk.Select", file="QCAlgorithm.cs", label="Entry Unk.Select", span=""];
m33_31 [cluster="System.DateTime.AddDays(double)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m33_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m33_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="SetSecurityInitializer(new FuncSecurityInitializer(securityInitializer))", span="581-581"];
m33_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m33_471 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="182-182"];
m33_102 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="QCAlgorithm.cs", label="Entry QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", span="59-59"];
m33_94 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m33_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779"];
m33_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="779-779"];
m33_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725"];
m33_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="725-725"];
m33_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651"];
m33_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="651-651"];
m33_41 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m33_57 [cluster="System.NotImplementedException.NotImplementedException(string)", file="QCAlgorithm.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m33_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m33_513 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1660-1660"];
m33_515 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="_errorMessages.Enqueue(message)", span="1661-1661"];
m33_516 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="_previousErrorMessage = message", span="1662-1662"];
m33_514 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="return;", span="1660-1660"];
m33_517 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m33_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797"];
m33_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="797-797"];
m33_84 [cluster="Unk.TryGetValue", file="QCAlgorithm.cs", label="Entry Unk.TryGetValue", span=""];
m33_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118"];
m33_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="_algorithmId = algorithmId", span="1120-1120"];
m33_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1118-1118"];
m33_174 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m33_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278"];
m33_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddSecurity(securityType, symbol, resolution, null, fillDataForward, leverage, extendedMarketHours);", span="1280-1280"];
m33_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1278-1278"];
m33_565 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798"];
m33_566 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Status = status", span="1800-1800"];
m33_567 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1798-1798"];
m33_278 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m33_49 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="47-47"];
m33_209 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m33_34 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="QCAlgorithm.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m33_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345"];
m33_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddSecurity<Equity>(SecurityType.Equity, ticker, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="1347-1347"];
m33_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1345-1345"];
m33_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m33_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="var start = new DateTime(year, month, day)", span="1075-1075"];
m33_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="start = start.Date", span="1078-1078"];
m33_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="SetStartDate(start)", span="1080-1080"];
m33_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label=Exception, span="1082-1082"];
m33_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1084-1084"];
m33_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m33_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472"];
m33_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Benchmark == null", span="475-475"];
m33_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="_benchmarkSymbol == null || _benchmarkSymbol == QuantConnect.Symbol.Empty", span="478-478"];
m33_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Securities.Select(x => x.Value).OfType<Option>()", span="499-499"];
m33_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)", span="480-480"];
m33_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Security security", span="486-486"];
m33_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="!Securities.TryGetValue(_benchmarkSymbol, out security)", span="487-487"];
m33_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="security = CreateBenchmarkSecurity()", span="490-490"];
m33_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Benchmark = new SecurityBenchmark(security)", span="495-495"];
m33_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="491-491"];
m33_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="var underlying = option.Symbol.Underlying", span="501-501"];
m33_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="506-506"];
m33_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="option.Underlying = equity", span="510-510"];
m33_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Security equity", span="502-502"];
m33_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="!Securities.TryGetValue(underlying, out equity)", span="503-503"];
m33_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity.VolatilityModel == VolatilityModel.Null", span="513-513"];
m33_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity.VolatilityModel = new StandardDeviationOfReturnsVolatilityModel(periods)", span="516-516"];
m33_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="int periods = 30", span="515-515"];
m33_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="472-472"];
m33_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468"];
m33_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var option = (Option)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1470-1471"];
m33_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var underlying = option.Symbol.Underlying", span="1474-1474"];
m33_438 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="1478-1478"];
m33_439 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="option.Underlying = equity", span="1480-1480"];
m33_440 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(option)", span="1482-1482"];
m33_441 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="return option;", span="1484-1484"];
m33_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Security equity", span="1475-1475"];
m33_437 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="!Securities.TryGetValue(underlying, out equity)", span="1476-1476"];
m33_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1468-1468"];
m33_198 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m33_53 [cluster="QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", span="25-25"];
m33_147 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m33_157 [cluster="Unk.GetParameters", file="QCAlgorithm.cs", label="Entry Unk.GetParameters", span=""];
m33_86 [cluster="QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", span="68-68"];
m33_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761"];
m33_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="OnEndOfDay(symbol.ToString())", span="763-763"];
m33_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="761-761"];
m33_46 [cluster="System.TimeSpan.FromDays(double)", file="QCAlgorithm.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m33_142 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.cs", label="Entry Unk.FirstOrDefault", span=""];
m33_407 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m33_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744"];
m33_547 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Resolution resolution", span="1747-1747"];
m33_548 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label=_liveMode, span="1748-1748"];
m33_549 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="resolution = Resolution.Second", span="1750-1750"];
m33_550 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="var hasNonAddSecurityUniverses = (\r\n                    from kvp in UniverseManager\r\n                    let config = kvp.Value.Configuration\r\n                    let symbol = UserDefinedUniverse.CreateSymbol(config.SecurityType, config.Market)\r\n                    where config.Symbol != symbol\r\n                    select kvp).Any()", span="1755-1760"];
m33_551 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="resolution = hasNonAddSecurityUniverses ? UniverseSettings.Resolution : Resolution.Daily", span="1762-1762"];
m33_552 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="return SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer, _benchmarkSymbol, resolution, true, 1m, false, true, false, LiveMode);", span="1764-1764"];
m33_553 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1744-1744"];
m33_81 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", span="31-31"];
m33_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230"];
m33_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="!_locked", span="1232-1232"];
m33_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_liveMode = live", span="1234-1234"];
m33_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Notify = new NotificationManager(live)", span="1235-1235"];
m33_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="TradeBuilder.SetLiveMode(live)", span="1236-1236"];
m33_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label=live, span="1238-1238"];
m33_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_startDate = DateTime.Today", span="1240-1240"];
m33_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_endDate = QuantConnect.Time.EndOfTime", span="1241-1241"];
m33_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1230-1230"];
m33_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538"];
m33_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="_parameters = parameters.ToDictionary()", span="541-541"];
m33_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="ParameterAttribute.ApplyAttributes(parameters, this)", span="544-544"];
m33_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label=Exception, span="546-546"];
m33_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Error(''Error applying parameter values: '' + err.Message)", span="548-548"];
m33_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="538-538"];
m33_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885"];
m33_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="SetBrokerageModel(Brokerages.BrokerageModel.Create(brokerage, accountType))", span="887-887"];
m33_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="885-885"];
m33_294 [cluster="System.TimeSpan.FromTicks(long)", file="QCAlgorithm.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m33_144 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0"];
m33_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462"];
m33_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.cs", label="throw new NotImplementedException(''Please override the Initialize() method'');", span="465-465"];
m33_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="462-462"];
m33_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718"];
m33_537 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="market == null", span="1721-1721"];
m33_538 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1723-1723"];
m33_539 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1725-1725"];
m33_541 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(ticker, out symbol)", span="1730-1730"];
m33_542 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="symbol = QuantConnect.Symbol.Create(ticker, securityType, market)", span="1732-1732"];
m33_543 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1735-1736"];
m33_540 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Symbol symbol", span="1729-1729"];
m33_544 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1737-1737"];
m33_545 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return (T)security;", span="1738-1738"];
m33_546 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1718-1718"];
m33_146 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m33_500 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m33_402 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m33_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m33_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="_userSetSecurityInitializer = true", span="571-571"];
m33_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="SecurityInitializer = securityInitializer", span="572-572"];
m33_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m33_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030"];
m33_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="!_locked", span="1032-1032"];
m33_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Portfolio.SetCash(startingCash)", span="1034-1034"];
m33_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1038-1038"];
m33_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1030-1030"];
m33_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m33_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="return AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours);", span="1265-1265"];
m33_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1263-1263"];
m33_501 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m33_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805"];
m33_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="805-805"];
m33_43 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m33_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616"];
m33_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="!_checkedForOnDataSlice", span="619-619"];
m33_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice(slice)", span="643-643"];
m33_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_checkedForOnDataSlice = true", span="621-621"];
m33_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice != null", span="641-641"];
m33_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var method = GetType().GetMethods()\r\n                    .Where(x => x.Name == ''OnData'')\r\n                    .Where(x => x.DeclaringType != typeof(QCAlgorithm))\r\n                    .Where(x => x.GetParameters().Length == 1)\r\n                    .FirstOrDefault(x => x.GetParameters()[0].ParameterType == typeof (Slice))", span="623-627"];
m33_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="method == null", span="629-629"];
m33_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var call = Expression.Call(self, method, parameter)", span="636-636"];
m33_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="return;", span="631-631"];
m33_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var self = Expression.Constant(this)", span="634-634"];
m33_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var parameter = Expression.Parameter(typeof (Slice), ''data'')", span="635-635"];
m33_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var lambda = Expression.Lambda<Action<Slice>>(call, parameter)", span="637-637"];
m33_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice = lambda.Compile()", span="638-638"];
m33_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="616-616"];
m33_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var canonicalSecurity = (Option) SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1378-1380"];
m33_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359"];
m33_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="market == null", span="1361-1361"];
m33_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var alias = ''?'' + underlying", span="1370-1370"];
m33_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(underlying, SecurityType.Option, market, alias)", span="1373-1373"];
m33_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, underlying, SecurityType.Option)", span="1376-1376"];
m33_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, underlying, SecurityType.Option, CashBook.AccountCurrency)", span="1377-1377"];
m33_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1388-1388"];
m33_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Option, out market)", span="1363-1363"];
m33_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Symbol canonicalSymbol", span="1369-1369"];
m33_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Option);", span="1365-1365"];
m33_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1371-1371"];
m33_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1386-1386"];
m33_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1390-1390"];
m33_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSecurity.IsTradable = false", span="1381-1381"];
m33_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Securities.Add(canonicalSecurity)", span="1382-1382"];
m33_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="universe = new OptionChainUniverse(canonicalSecurity, settings, SecurityInitializer, LiveMode)", span="1389-1389"];
m33_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return canonicalSecurity;", span="1393-1393"];
m33_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Universe universe", span="1385-1385"];
m33_400 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1359-1359"];
m33_405 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m33_480 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m33_244 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m33_560 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784"];
m33_561 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="exception == null", span="1786-1786"];
m33_563 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="RunTimeError = exception", span="1791-1791"];
m33_562 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''Algorithm.SetRunTimeError(): Algorithm.RunTimeError cannot be set to null.'');", span="1788-1788"];
m33_564 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1784-1784"];
m33_101 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m33_376 [cluster="QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", span="60-60"];
m33_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450"];
m33_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var future = (Future)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1452-1453"];
m33_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(future)", span="1455-1455"];
m33_431 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="return future;", span="1457-1457"];
m33_432 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1450-1450"];
m33_232 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="28-28"];
m33_44 [cluster="QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", span="45-45"];
m33_417 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var canonicalSecurity = (Future)SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1424-1426"];
m33_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405"];
m33_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="market == null", span="1407-1407"];
m33_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var alias = ''/'' + symbol", span="1416-1416"];
m33_414 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(symbol, SecurityType.Future, market, alias)", span="1419-1419"];
m33_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, symbol, SecurityType.Future)", span="1422-1422"];
m33_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, symbol, SecurityType.Future, CashBook.AccountCurrency)", span="1423-1423"];
m33_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1434-1434"];
m33_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Future, out market)", span="1409-1409"];
m33_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Symbol canonicalSymbol", span="1415-1415"];
m33_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Future);", span="1411-1411"];
m33_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1417-1417"];
m33_421 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1432-1432"];
m33_424 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1436-1436"];
m33_418 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSecurity.IsTradable = false", span="1427-1427"];
m33_419 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Securities.Add(canonicalSecurity)", span="1428-1428"];
m33_423 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="universe = new FuturesChainUniverse(canonicalSecurity, settings, SubscriptionManager, SecurityInitializer)", span="1435-1435"];
m33_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return canonicalSecurity;", span="1439-1439"];
m33_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Universe universe", span="1431-1431"];
m33_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1405-1405"];
m33_48 [cluster="QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", file="QCAlgorithm.cs", label="Entry QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", span="61-61"];
m33_50 [cluster="QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", span="33-33"];
m33_45 [cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59"];
m33_260 [cluster="QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", span="30-30"];
m33_401 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m33_329 [cluster="System.DateTime.AddTicks(long)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m33_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293"];
m33_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="securityType == SecurityType.Option", span="1296-1296"];
m33_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddOption(symbol, resolution, market, fillDataForward, leverage);", span="1298-1298"];
m33_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="securityType == SecurityType.Future", span="1301-1301"];
m33_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddFuture(symbol, resolution, market, fillDataForward, leverage);", span="1303-1303"];
m33_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="market == null", span="1308-1308"];
m33_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1310-1310"];
m33_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1312-1312"];
m33_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(symbol, out symbolObject)", span="1317-1317"];
m33_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="symbolObject = QuantConnect.Symbol.Create(symbol, securityType, market)", span="1319-1319"];
m33_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                    symbolObject, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1322-1323"];
m33_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Symbol symbolObject", span="1316-1316"];
m33_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1325-1325"];
m33_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return security;", span="1326-1326"];
m33_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label=Exception, span="1328-1328"];
m33_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Error(''Algorithm.AddSecurity(): '' + err)", span="1330-1330"];
m33_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return null;", span="1331-1331"];
m33_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293"];
m33_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753"];
m33_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="753-753"];
m33_36 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m33_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596"];
m33_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddData<T>(symbol, resolution, TimeZones.NewYork, fillDataForward, leverage)", span="1599-1599"];
m33_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1596-1596"];
m33_210 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="QCAlgorithm.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m33_315 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m33_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496"];
m33_444 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Forex>(SecurityType.Forex, ticker, resolution, market, fillDataForward, leverage, false);", span="1498-1498"];
m33_445 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1496-1496"];
m33_77 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m33_529 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695"];
m33_530 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label=quit, span="1697-1697"];
m33_531 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Stopped", span="1699-1699"];
m33_532 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1695-1695"];
m33_83 [cluster="Unk.>", file="QCAlgorithm.cs", label="Entry Unk.>", span=""];
m33_33 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m33_446 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510"];
m33_447 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Cfd>(SecurityType.Cfd, ticker, resolution, market, fillDataForward, leverage, false);", span="1512-1512"];
m33_448 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1510-1510"];
m33_250 [cluster="string.ToUpper()", file="QCAlgorithm.cs", label="Entry string.ToUpper()", span="0-0"];
m33_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m33_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="SetSecurityInitializer(new FuncSecurityInitializer((security, seedSecurity) => securityInitializer(security)))", span="590-590"];
m33_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m33_35 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m33_32 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m33_78 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m33_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927"];
m33_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="handler == null", span="929-929"];
m33_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="BrokerageMessageHandler = handler", span="934-934"];
m33_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''handler'');", span="931-931"];
m33_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="927-927"];
m33_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129"];
m33_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label=_liveMode, span="1132-1132"];
m33_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start < (new DateTime(1900, 01, 01))", span="1136-1136"];
m33_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start > _endDate", span="1144-1144"];
m33_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start = start.RoundDown(TimeSpan.FromDays(1))", span="1151-1151"];
m33_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="return;", span="1132-1132"];
m33_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="1138-1138"];
m33_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="_endDate != new DateTime()", span="1142-1142"];
m33_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select start date less than end date.'');", span="1146-1146"];
m33_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="!_locked", span="1154-1154"];
m33_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="_startDate = start", span="1159-1159"];
m33_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="!LiveMode", span="1157-1157"];
m33_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="1165-1165"];
m33_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="SetDateTime(_startDate.ConvertToUtc(TimeZone))", span="1160-1160"];
m33_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1129-1129"];
m33_472 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m33_518 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671"];
m33_519 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="var message = error.Message", span="1673-1673"];
m33_520 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1674-1674"];
m33_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="_errorMessages.Enqueue(message)", span="1675-1675"];
m33_523 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="_previousErrorMessage = message", span="1676-1676"];
m33_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="return;", span="1674-1674"];
m33_524 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1671-1671"];
m33_122 [cluster="System.Action<T>.Invoke(T)", file="QCAlgorithm.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m33_507 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="QCAlgorithm.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m33_143 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m33_40 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="41-41"];
m33_470 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m33_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214"];
m33_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="_locked = true", span="1216-1216"];
m33_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1214-1214"];
m33_474 [cluster="Unk.Remove", file="QCAlgorithm.cs", label="Entry Unk.Remove", span=""];
m33_568 [file="QCAlgorithm.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m33_569 [file="QCAlgorithm.cs", label="System.Action<QuantConnect.Securities.Security>", span=""];
m33_570 [file="QCAlgorithm.cs", label=string, span=""];
m33_571 [file="QCAlgorithm.cs", label="QuantConnect.Symbol", span=""];
m34_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, double)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, double)", span="122-122"];
m34_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, double)", file="QCAlgorithm.Plotting.cs", label="Plot(chart, series, (decimal)value)", span="124-124"];
m34_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, double)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, double)", span="122-122"];
m34_54 [cluster="QuantConnect.Chart.Chart(string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
m34_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Record(string, decimal)", span="86-86"];
m34_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Plot(series, value)", span="89-89"];
m34_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Record(string, decimal)", span="86-86"];
m34_4 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m34_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, double)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Record(string, double)", span="75-75"];
m34_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, double)", file="QCAlgorithm.Plotting.cs", label="Plot(series, value)", span="77-77"];
m34_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, double)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Record(string, double)", span="75-75"];
m34_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, float)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, float)", span="113-113"];
m34_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, float)", file="QCAlgorithm.Plotting.cs", label="Plot(series, (decimal)value)", span="115-115"];
m34_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, float)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, float)", span="113-113"];
m34_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="210-210"];
m34_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="i.Updated += (sender, args) =>\r\n                {\r\n                    Plot(chart, ilocal);\r\n                }", span="217-220"];
m34_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="var ilocal = i", span="216-216"];
m34_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label=indicators, span="213-213"];
m34_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="210-210"];
m34_93 [cluster="int.ToString()", file="QCAlgorithm.Plotting.cs", label="Entry int.ToString()", span="0-0"];
m34_57 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212"];
m34_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, int)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, int)", span="131-131"];
m34_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, int)", file="QCAlgorithm.Plotting.cs", label="Plot(chart, series, (decimal)value)", span="133-133"];
m34_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, int)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, int)", span="131-131"];
m34_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m34_59 [cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", span="282-282"];
m34_109 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Entry lambda expression", span="293-293"];
m34_79 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Plotting.cs", label="7: !waitForReady || ilocal.IsReady", span="236-236"];
m34_78 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Entry lambda expression", span="234-240"];
m34_80 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Plot(chart, ilocal)", span="238-238"];
m34_81 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Exit lambda expression", span="234-240"];
m34_71 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Plot(chart, ilocal)", span="219-219"];
m34_70 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Entry lambda expression", span="217-220"];
m34_72 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Exit lambda expression", span="217-220"];
m34_110 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="chart.GetUpdates()", span="293-293"];
m34_111 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Exit lambda expression", span="293-293"];
m34_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, int)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Record(string, int)", span="66-66"];
m34_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, int)", file="QCAlgorithm.Plotting.cs", label="Plot(series, value)", span="68-68"];
m34_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, int)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Record(string, int)", span="66-66"];
m34_112 [cluster="QuantConnect.Chart.GetUpdates()", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Chart.GetUpdates()", span="91-91"];
m34_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", span="96-96"];
m34_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", file="QCAlgorithm.Plotting.cs", label="Plot(series, (decimal)value)", span="97-97"];
m34_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", span="96-96"];
m34_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m34_53 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Plotting.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m34_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, float)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, float)", span="140-140"];
m34_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, float)", file="QCAlgorithm.Plotting.cs", label="Plot(chart, series, (decimal)value)", span="142-142"];
m34_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, float)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, float)", span="140-140"];
m34_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", span="260-260"];
m34_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="QCAlgorithm.Plotting.cs", label="SetRuntimeStatistic(name, value.ToString(CultureInfo.InvariantCulture))", span="262-262"];
m34_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", span="260-260"];
m34_107 [cluster="Unk.ToList", file="QCAlgorithm.Plotting.cs", label="Entry Unk.ToList", span=""];
m34_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m34_89 [cluster="decimal.ToString(System.IFormatProvider)", file="QCAlgorithm.Plotting.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m34_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="198-198"];
m34_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", color=green, community=0, file="QCAlgorithm.Plotting.cs", label="8: indicators", span="201-201"];
m34_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", color=green, community=0, file="QCAlgorithm.Plotting.cs", label="4: Plot(chart, indicator.Name, indicator)", span="203-203"];
m34_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="198-198"];
m34_85 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m34_55 [cluster="Unk.Sum", file="QCAlgorithm.Plotting.cs", label="Entry Unk.Sum", span=""];
m34_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", span="104-104"];
m34_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="QCAlgorithm.Plotting.cs", label="Plot(series, (decimal)value)", span="106-106"];
m34_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", span="104-104"];
m34_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="291-291"];
m34_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="var updates = _charts.Values.Select(chart => chart.GetUpdates()).ToList()", span="293-293"];
m34_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label=_charts, span="298-298"];
m34_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label=clearChartData, span="295-295"];
m34_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="return updates;", span="306-306"];
m34_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="chart.Value.Series", span="300-300"];
m34_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="series.Value.Purge()", span="302-302"];
m34_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="291-291"];
m34_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", span="270-270"];
m34_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="QCAlgorithm.Plotting.cs", label="SetRuntimeStatistic(name, value.ToString())", span="272-272"];
m34_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", span="270-270"];
m34_58 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74"];
m34_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151"];
m34_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", color=green, community=0, file="QCAlgorithm.Plotting.cs", label="4: _charts.Add(chart, new Chart(chart))", span="162-162"];
m34_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="!_charts.ContainsKey(chart)", span="160-160"];
m34_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="var thisChart = _charts[chart]", span="165-165"];
m34_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", color=green, community=0, file="QCAlgorithm.Plotting.cs", label="4: !thisChart.Series.ContainsKey(series)", span="166-166"];
m34_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="var seriesCount = (from x in _charts.Values select x.Series.Count).Sum()", span="169-169"];
m34_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="var thisSeries = thisChart.Series[series]", span="181-181"];
m34_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="Error(''Exceeded maximum series count: Each backtest can have up to 10 series in total.'')", span="173-173"];
m34_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="thisSeries.Values.Count < 4000 || _liveMode", span="182-182"];
m34_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="thisSeries.AddPoint(UtcTime, value, _liveMode)", span="184-184"];
m34_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="Debug(''Exceeded maximum points per chart, data skipped.'')", span="188-188"];
m34_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="(chart == ''Strategy Equity'' && series == ''Equity'') || (chart == ''Daily Performance'') || (chart == ''Meta'')", span="154-154"];
m34_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="thisChart.AddSeries(new Series(series, SeriesType.Line, 0, ''$''))", span="178-178"];
m34_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="seriesCount > 10", span="171-171"];
m34_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="return;", span="174-174"];
m34_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="throw new Exception(''Algorithm.Plot(): 'Equity', 'Daily Performance' and 'Meta' are reserved chart names created for all charts.'');", span="156-156"];
m34_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151"];
m34_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="54-54"];
m34_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Plot(''Strategy Equity'', series, value)", span="57-57"];
m34_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="54-54"];
m34_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", span="227-227"];
m34_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", color=green, community=0, file="QCAlgorithm.Plotting.cs", label="3: i.Updated += (sender, args) =>\r\n                {\r\n                    if (!waitForReady || ilocal.IsReady)\r\n                    {\r\n                        Plot(chart, ilocal);\r\n                    }\r\n                }", span="234-240"];
m34_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label=indicators, span="230-230"];
m34_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="var ilocal = i", span="233-233"];
m34_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", span="227-227"];
m34_97 [cluster="double.ToString(System.IFormatProvider)", file="QCAlgorithm.Plotting.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m34_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", span="280-280"];
m34_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="QCAlgorithm.Plotting.cs", label="SetRuntimeStatistic(name, value.ToString(CultureInfo.InvariantCulture))", span="282-282"];
m34_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", span="280-280"];
m34_106 [cluster="Unk.Select", file="QCAlgorithm.Plotting.cs", label="Entry Unk.Select", span=""];
m34_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", span="40-40"];
m34_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="QCAlgorithm.Plotting.cs", label="!_charts.ContainsKey(chart.Name)", span="42-42"];
m34_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="QCAlgorithm.Plotting.cs", label="_charts.Add(chart.Name, chart)", span="44-44"];
m34_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", span="40-40"];
m34_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", span="250-250"];
m34_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="QCAlgorithm.Plotting.cs", label="RuntimeStatistics.AddOrUpdate(name, value)", span="252-252"];
m34_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", span="250-250"];
m34_108 [cluster="QuantConnect.Series.Purge()", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Series.Purge()", span="333-333"];
m34_113 [file="QCAlgorithm.Plotting.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m34_116 [file="QCAlgorithm.Plotting.cs", label=bool, span=""];
m34_117 [file="QCAlgorithm.Plotting.cs", label=ilocal, span=""];
m34_118 [file="QCAlgorithm.Plotting.cs", label=string, span=""];
m34_114 [file="QCAlgorithm.Plotting.cs", label=string, span=""];
m34_115 [file="QCAlgorithm.Plotting.cs", label=ilocal, span=""];
m35_86 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="166-166"];
m35_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="418-418"];
m35_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="420-420"];
m35_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="418-418"];
m35_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1366-1366"];
m35_322 [cluster="Unk.Split", file="QCAlgorithm.Python.cs", label="Entry Unk.Split", span=""];
m35_181 [cluster="Unk.PlotIndicator", file="QCAlgorithm.Python.cs", label="Entry Unk.PlotIndicator", span=""];
m35_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m35_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="664-664"];
m35_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="85-85"];
m35_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="83-83"];
m35_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="88-88"];
m35_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="89-89"];
m35_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="var security = SecurityManager.CreateSecurity(dataType, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="92-93"];
m35_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="AddToUserDefinedUniverse(security)", span="95-95"];
m35_161 [cluster="Unk.ToArray", file="QCAlgorithm.Python.cs", label="Entry Unk.ToArray", span=""];
m35_120 [cluster="QuantConnect.Securities.Cash.ToString()", file="QCAlgorithm.Python.cs", label="decimal rate = ConversionRate", span="228-228"];
m35_127 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market)", span="276-276"];
m35_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="516-516"];
m35_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="RegisterIndicator(symbol, filteredIdentity, ResolveConsolidator(symbol, resolution), pyselector)", span="522-522"];
m35_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="519-519"];
m35_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="521-521"];
m35_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return filteredIdentity;", span="523-523"];
m35_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="520-520"];
m35_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="518-518"];
m35_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="516-516"];
m35_90 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="(string)x", span="166-166"];
m35_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="466-466"];
m35_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="468-468"];
m35_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="466-466"];
m35_321 [cluster="Unk.Repr", file="QCAlgorithm.Python.cs", label="Entry Unk.Repr", span=""];
m35_129 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", span="239-239"];
m35_130 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="QCAlgorithm.Python.cs", label="string market", span="241-241"];
m35_131 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="QCAlgorithm.Python.cs", label="!markets.TryGetValue(securityType, out market)", span="242-242"];
m35_33 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="string invert = CashBook.AccountCurrency + Symbol", span="145-145"];
m35_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="163-163"];
m35_76 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="151-151"];
m35_87 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="selector(d).Select(x => (string)x)", span="166-166"];
m35_3 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.Python.cs", label="Amount = amount", span="74-74"];
m35_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="163-163"];
m35_23 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="QCAlgorithm.Python.cs", label=_locker, span="116-116"];
m35_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="450-450"];
m35_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="452-452"];
m35_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="450-450"];
m35_324 [cluster="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", file="QCAlgorithm.Python.cs", label="Entry System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", span="0-0"];
m35_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="895-895"];
m35_128 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="276-276"];
m35_39 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="SecuritySymbol = config.Symbol", span="156-156"];
m35_313 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m35_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, universeSettings, selector)", span="252-252"];
m35_122 [cluster="QuantConnect.Securities.Cash.ToString()", file="QCAlgorithm.Python.cs", label="return string.Format(''{0}: {1,15} @ ${2,10} = {3}{4}'',\r\n                Symbol,\r\n                Amount.ToString(''0.00''),\r\n                rate.ToString(''0.00####''),\r\n                Currencies.GetCurrencySymbol(Symbol),\r\n                Math.Round(ValueInAccountCurrency, 2)\r\n                );", span="230-236"];
m35_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="235-235"];
m35_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="566-566"];
m35_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="568-568"];
m35_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, start, end, resolution));", span="571-571"];
m35_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="569-569"];
m35_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="569-569"];
m35_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="566-566"];
m35_323 [cluster="Unk.Replace", file="QCAlgorithm.Python.cs", label="Entry Unk.Replace", span=""];
m35_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1444-1444"];
m35_160 [cluster="Unk.Where", file="QCAlgorithm.Python.cs", label="Entry Unk.Where", span=""];
m35_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(name, d => selector(d).Select(x => (string)x))", span="151-151"];
m35_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="324-324"];
m35_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="326-326"];
m35_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="324-324"];
m35_311 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m35_78 [cluster="Unk.Select", file="QCAlgorithm.Python.cs", label="Entry Unk.Select", span=""];
m35_294 [cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", span="31-31"];
m35_119 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m35_121 [cluster="FuncUniverse.cstr", file="QCAlgorithm.Python.cs", label="Entry FuncUniverse.cstr", span=""];
m35_123 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="275-276"];
m35_81 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="151-151"];
m35_312 [cluster="string.IsNullOrWhiteSpace(string)", file="QCAlgorithm.Python.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m35_79 [cluster="Unk.Concat", file="QCAlgorithm.Python.cs", label="Entry Unk.Concat", span=""];
m35_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="235-235"];
m35_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(market, name, securityType)", span="267-267"];
m35_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="270-270"];
m35_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="179-179"];
m35_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="191-191"];
m35_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="206-206"];
m35_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="220-220"];
m35_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, UniverseSettings, selector)", span="237-237"];
m35_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="250-250"];
m35_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="269-269"];
m35_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<IEnumerable<IBaseData>, object[]>(pySelector)", span="273-273"];
m35_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="177-177"];
m35_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="265-265"];
m35_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="193-193"];
m35_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="191-191"];
m35_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, universeSettings, selector)", span="208-208"];
m35_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="206-206"];
m35_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, universeSettings, selector)", span="222-222"];
m35_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="220-220"];
m35_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="250-250"];
m35_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="268-268"];
m35_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var config = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, true, isFilteredSubscription: false)", span="271-271"];
m35_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(new FuncUniverse(config, universeSettings, SecurityInitializer, d => selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))))", span="275-276"];
m35_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="265-265"];
m35_36 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="SecuritySymbol = config.Symbol", span="151-151"];
m35_37 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: return null;", span="152-152"];
m35_38 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="config.Symbol.Value == invert", span="154-154"];
m35_41 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="return null;", span="158-158"];
m35_42 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="QCAlgorithm.Python.cs", label="5: var markets = securities.Keys.GroupBy(x => x.SecurityType).ToDictionary(x => x.Key, y => y.First().ID.Market)", span="164-164"];
m35_43 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="markets.ContainsKey(SecurityType.Cfd) && !markets.ContainsKey(SecurityType.Forex)", span="165-165"];
m35_182 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="428-428"];
m35_183 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: x != null", span="428-428"];
m35_184 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="428-428"];
m35_50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label=potentials, span="180-180"];
m35_56 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="!cashBook.TryGetValue(symbolProperties.QuoteCurrency, out quoteCash)", span="188-188"];
m35_66 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="security = new Crypto.Crypto(exchangeHours, quoteCash, config, symbolProperties)", span="205-205"];
m35_124 [cluster="decimal.RoundToSignificantDigits(int)", file="QCAlgorithm.Python.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
m35_49 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (QuoteBar)", span="179-179"];
m35_55 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="Cash quoteCash", span="187-187"];
m35_65 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="securityType == SecurityType.Crypto", span="203-203"];
m35_75 [cluster="Unk.ToDictionary", file="QCAlgorithm.Python.cs", label="Entry Unk.ToDictionary", span=""];
m35_163 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="392-392"];
m35_169 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="406-406"];
m35_175 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="420-420"];
m35_188 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="436-436"];
m35_194 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="444-444"];
m35_200 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="452-452"];
m35_206 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="460-460"];
m35_212 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Entry lambda expression", span="468-468"];
m35_51 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="symbol.Value == normal || symbol.Value == invert", span="182-182"];
m35_52 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="_invertRealTimePrice = symbol.Value == invert", span="184-184"];
m35_57 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="throw new Exception(''Unable to resolve quote cash: '' + symbolProperties.QuoteCurrency + ''. This is required to add conversion feed: '' + symbol.ToString());", span="190-190"];
m35_58 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="192-192"];
m35_67 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="security = new Forex.Forex(exchangeHours, quoteCash, config, symbolProperties)", span="209-209"];
m35_68 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="securities.Add(config.Symbol, security)", span="211-211"];
m35_88 [cluster="QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.Crypto.Crypto.Crypto(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="37-37"];
m35_89 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m35_125 [cluster="System.Math.Round(decimal, int)", file="QCAlgorithm.Python.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m35_126 [cluster="decimal.ToString(string)", file="QCAlgorithm.Python.cs", label="Entry decimal.ToString(string)", span="0-0"];
m35_77 [cluster="Unk.Add", file="QCAlgorithm.Python.cs", label="Entry Unk.Add", span=""];
m35_165 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="392-392"];
m35_164 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="392-392"];
m35_171 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="406-406"];
m35_170 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="406-406"];
m35_177 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="420-420"];
m35_176 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="420-420"];
m35_190 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="436-436"];
m35_189 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="436-436"];
m35_196 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="444-444"];
m35_195 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="444-444"];
m35_202 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="452-452"];
m35_201 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="452-452"];
m35_208 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="460-460"];
m35_207 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="460-460"];
m35_214 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="Exit lambda expression", span="468-468"];
m35_213 [cluster="lambda expression", file="QCAlgorithm.Python.cs", label="x != null", span="468-468"];
m35_54 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, securityType, Symbol)", span="186-186"];
m35_53 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="var securityType = symbol.ID.SecurityType", span="185-185"];
m35_60 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="var config = subscriptions.Add(objectType, TickType.Quote, symbol, minimumResolution, marketHoursDbEntry.DataTimeZone, exchangeHours.TimeZone, false, true, false, true)", span="195-195"];
m35_59 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="193-193"];
m35_70 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="return security;", span="213-213"];
m35_69 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol.Value + '' for cash '' + Symbol + '' currency feed'')", span="212-212"];
m35_91 [cluster="Unk.Trace", file="QCAlgorithm.Python.cs", label="Entry Unk.Trace", span=""];
m35_80 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.Python.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m35_71 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", span="218-218"];
m35_72 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="133-133"];
m35_74 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.Python.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m35_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="598-598"];
m35_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="SetBrokerageModel(new BrokerageModelPythonWrapper(model))", span="600-600"];
m35_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="598-598"];
m35_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="376-376"];
m35_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, consolidator, selector)", span="378-378"];
m35_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="376-376"];
m35_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="350-350"];
m35_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="352-352"];
m35_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="350-350"];
m35_4 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.Python.cs", label="ConversionRate = conversionRate", span="75-75"];
m35_5 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.Python.cs", label="Symbol = symbol.ToUpper()", span="76-76"];
m35_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m35_22 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m35_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="458-458"];
m35_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, waitForReady, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="460-460"];
m35_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="458-458"];
m35_32 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="string normal = Symbol + CashBook.AccountCurrency", span="144-144"];
m35_326 [cluster="Unk.HasAttr", file="QCAlgorithm.Python.cs", label="Entry Unk.HasAttr", span=""];
m35_136 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m35_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="QuantConnect.Securities.Cash", span=""];
m35_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", span=""];
m35_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="363-363"];
m35_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, consolidator, selector)", span="365-365"];
m35_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="363-363"];
m35_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="987-987"];
m35_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1265-1265"];
m35_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m35_238 [cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Python.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m35_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41"];
m35_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="_converter = new PandasConverter()", span="43-43"];
m35_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41"];
m35_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m35_35 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="config.Symbol.Value == normal", span="149-149"];
m35_162 [cluster="Unk.Plot", file="QCAlgorithm.Python.cs", label="Entry Unk.Plot", span=""];
m35_40 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="_invertRealTimePrice = true", span="157-157"];
m35_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="579-579"];
m35_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="631-631"];
m35_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: Py.GIL()", span="633-633"];
m35_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: !PyList.IsListType(pyObject)", span="636-636"];
m35_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: var tmp = new PyList()", span="638-638"];
m35_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="8: var symbols = new List<Symbol>()", span="643-643"];
m35_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: tmp.Append(pyObject)", span="639-639"];
m35_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: pyObject = tmp", span="640-640"];
m35_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: pyObject", span="644-644"];
m35_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: symbols.Add(symbol)", span="653-653"];
m35_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: string.IsNullOrWhiteSpace(symbol.Value)", span="648-648"];
m35_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="8: var symbol = (Symbol)item.AsManagedObject(typeof(Symbol))", span="646-646"];
m35_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="8: return symbols.Count == 0 ? null : symbols;", span="655-655"];
m35_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="631-631"];
m35_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="298-298"];
m35_17 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="101-101"];
m35_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="534-534"];
m35_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="536-536"];
m35_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, periods, resolution));", span="539-539"];
m35_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="537-537"];
m35_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="537-537"];
m35_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="534-534"];
m35_18 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m35_19 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m35_20 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", color=red, community=0, file="QCAlgorithm.Python.cs", label="4: Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m35_21 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m35_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="165-165"];
m35_24 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="QCAlgorithm.Python.cs", label="Amount = amount", span="118-118"];
m35_29 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: _isBaseCurrency = true", span="138-138"];
m35_26 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="133-133"];
m35_30 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="QCAlgorithm.Python.cs", label="3: ConversionRate = 1.0m", span="139-139"];
m35_25 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m35_27 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: Symbol == CashBook.AccountCurrency", span="135-135"];
m35_28 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: SecuritySymbol = QuantConnect.Symbol.Empty", span="137-137"];
m35_31 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="return null;", span="140-140"];
m35_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="426-426"];
m35_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="428-428"];
m35_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="426-426"];
m35_290 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", span="32-32"];
m35_309 [cluster="PyList.cstr", file="QCAlgorithm.Python.cs", label="Entry PyList.cstr", span=""];
m35_132 [cluster="QuantConnect.Securities.Cash.CreateSymbol(System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, string, System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>, QuantConnect.SecurityType)", file="QCAlgorithm.Python.cs", label="market = marketMap[securityType]", span="244-244"];
m35_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="298-298"];
m35_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<TradeBar>(symbol, indicator, resolution)", span="300-300"];
m35_328 [cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0"];
m35_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69"];
m35_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m35_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1219-1219"];
m35_229 [cluster="QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", span="35-35"];
m35_61 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="SecuritySymbol = config.Symbol", span="196-196"];
m35_63 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="securityType == SecurityType.Cfd", span="199-199"];
m35_62 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="Security security", span="198-198"];
m35_64 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="security = new Cfd.Cfd(exchangeHours, quoteCash, config, symbolProperties)", span="201-201"];
m35_310 [cluster="Unk.Append", file="QCAlgorithm.Python.cs", label="Entry Unk.Append", span=""];
m35_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="389-389"];
m35_308 [cluster="Unk.IsListType", file="QCAlgorithm.Python.cs", label="Entry Unk.IsListType", span=""];
m35_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1380-1380"];
m35_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="QCAlgorithm.Python.cs", label="AddUniverse(securityType, name, resolution, market, universeSettings, d => selector(d).Select(x => (string)x))", span="166-166"];
m35_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: Py.GIL()", span="666-666"];
m35_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: var an = new AssemblyName(type.Repr().Split('.')[1].Replace(''\'>'', ''''))", span="668-668"];
m35_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="4: var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.Run)", span="669-669"];
m35_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="return moduleBuilder.DefineType(an.Name,\r\n                        TypeAttributes.Public |\r\n                        TypeAttributes.Class |\r\n                        TypeAttributes.AutoClass |\r\n                        TypeAttributes.AnsiClass |\r\n                        TypeAttributes.BeforeFieldInit |\r\n                        TypeAttributes.AutoLayout,\r\n                        // If the type has IsAuthCodeSet member, it is a PythonQuandl\r\n                        type.HasAttr(''IsAuthCodeSet'') ? typeof(PythonQuandl) : typeof(PythonData))\r\n                    .CreateType();", span="671-680"];
m35_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", color=green, community=0, file="QCAlgorithm.Python.cs", label="1: var moduleBuilder = assemblyBuilder.DefineDynamicModule(''MainModule'')", span="670-670"];
m35_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="664-664"];
m35_248 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m35_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="177-177"];
m35_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="579-579"];
m35_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="SetBenchmark((Symbol)benchmark.AsManagedObject(typeof(Symbol)))", span="589-589"];
m35_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="SetBenchmark(pyBenchmark)", span="586-586"];
m35_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Py.GIL()", span="581-581"];
m35_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="pyBenchmark != null", span="584-584"];
m35_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="var pyBenchmark = PythonUtil.ToFunc<DateTime, decimal>(benchmark)", span="583-583"];
m35_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="587-587"];
m35_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="579-579"];
m35_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="568-568"];
m35_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="550-550"];
m35_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="552-552"];
m35_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return _converter.GetDataFrame(History(symbols, span, resolution));", span="555-555"];
m35_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="symbols == null", span="553-553"];
m35_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="return null;", span="553-553"];
m35_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="550-550"];
m35_277 [cluster="QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", span="38-38"];
m35_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="607-607"];
m35_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="SetSecurityInitializer(securityInitializer1)", span="612-612"];
m35_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="SetSecurityInitializer(securityInitializer2)", span="619-619"];
m35_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="SetSecurityInitializer(new SecurityInitializerPythonWrapper(securityInitializer))", span="623-623"];
m35_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="var securityInitializer1 = PythonUtil.ToAction<Security>(securityInitializer)", span="609-609"];
m35_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="securityInitializer1 != null", span="610-610"];
m35_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="613-613"];
m35_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="var securityInitializer2 = PythonUtil.ToAction<Security, bool>(securityInitializer)", span="616-616"];
m35_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="securityInitializer2 != null", span="617-617"];
m35_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="return;", span="620-620"];
m35_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="607-607"];
m35_325 [cluster="System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", span="0-0"];
m35_292 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", span="53-53"];
m35_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="434-434"];
m35_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="436-436"];
m35_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="434-434"];
m35_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="442-442"];
m35_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="PlotIndicator(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="444-444"];
m35_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="442-442"];
m35_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="337-337"];
m35_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="339-339"];
m35_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="337-337"];
m35_44 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="markets.Add(SecurityType.Forex, markets[SecurityType.Cfd])", span="167-167"];
m35_47 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="var potentials = Currencies.CurrencyPairs.Select(fx => CreateSymbol(marketMap, fx, markets, SecurityType.Forex))\r\n                .Concat(Currencies.CfdCurrencyPairs.Select(cfd => CreateSymbol(marketMap, cfd, markets, SecurityType.Cfd)))\r\n                .Concat(Currencies.CryptoCurrencyPairs.Select(crypto => CreateSymbol(marketMap, crypto, markets, SecurityType.Crypto)))", span="174-176"];
m35_45 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="markets.ContainsKey(SecurityType.Forex) && !markets.ContainsKey(SecurityType.Cfd)", span="169-169"];
m35_46 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="markets.Add(SecurityType.Cfd, markets[SecurityType.Forex])", span="171-171"];
m35_48 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="var minimumResolution = subscriptions.Subscriptions.Select(x => x.Resolution).DefaultIfEmpty(Resolution.Minute).Min()", span="178-178"];
m35_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="QCAlgorithm.Python.cs", label=markets, span=""];
m35_320 [cluster="AssemblyName.cstr", file="QCAlgorithm.Python.cs", label="Entry AssemblyName.cstr", span=""];
m35_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="496-496"];
m35_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="498-498"];
m35_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="RegisterIndicator(symbol, filteredIdentity, resolution, pyselector)", span="502-502"];
m35_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="499-499"];
m35_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="501-501"];
m35_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return filteredIdentity;", span="503-503"];
m35_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="500-500"];
m35_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="496-496"];
m35_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.Python.cs", label="AddData(CreateType(type), symbol, resolution, timeZone, fillDataForward, leverage)", span="71-71"];
m35_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="404-404"];
m35_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="406-406"];
m35_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="404-404"];
m35_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="588-588"];
m35_327 [cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", file="QCAlgorithm.Python.cs", label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", span="0-0"];
m35_34 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="QCAlgorithm.Python.cs", label="subscriptions.Subscriptions.Where(config => config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd ||\r\n            config.SecurityType == SecurityType.Crypto)", span="146-147"];
m35_271 [cluster="Unk.GIL", file="QCAlgorithm.Python.cs", label="Entry Unk.GIL", span=""];
m35_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="480-480"];
m35_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="var resolution = GetSubscription(symbol).Resolution", span="482-482"];
m35_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="return FilteredIdentity(symbol, resolution, selector, filter, fieldName);", span="483-483"];
m35_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="480-480"];
m35_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="390-390"];
m35_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="392-392"];
m35_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="QCAlgorithm.Python.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="390-390"];
m35_329 [file="QCAlgorithm.Python.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m35_330 [file="QCAlgorithm.Python.cs", label=coarse, span=""];
m35_331 [file="QCAlgorithm.Python.cs", label=coarse, span=""];
m35_332 [file="QCAlgorithm.Python.cs", label=fine, span=""];
m35_333 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m35_335 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m35_336 [file="QCAlgorithm.Python.cs", label="QuantConnect.SecurityType", span=""];
m35_337 [file="QCAlgorithm.Python.cs", label=string, span=""];
m35_338 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m35_334 [file="QCAlgorithm.Python.cs", label=selector, span=""];
m36_281 [cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120"];
m36_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
m36_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: var request = CreateSubmitOrderRequest(OrderType.StopMarket, security, quantity, tag, stopPrice: stopPrice)", span="413-413"];
m36_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="412-412"];
m36_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="414-414"];
m36_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="417-417"];
m36_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="420-420"];
m36_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="415-415"];
m36_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
m36_73 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="222-222"];
m36_202 [cluster="int.ToString()", file="QCAlgorithm.Trading.cs", label="Entry int.ToString()", span="0-0"];
m36_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531"];
m36_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return Order(strategy, Math.Abs(quantity) * -1);", span="533-533"];
m36_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531"];
m36_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85"];
m36_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1);", span="87-87"];
m36_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85"];
m36_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="848-848"];
m36_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="850-850"];
m36_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="848-848"];
m36_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m36_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="42-42"];
m36_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m36_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547"];
m36_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var optionSeq = Securities.Where(kv => kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike)", span="559-562"];
m36_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var marketOrder = MarketOrder(option, optionLeg.Quantity * strategyQuantity, tag: strategyTag)", span="576-576"];
m36_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var limitOrder = LimitOrder(option, optionLeg.Quantity * strategyQuantity, optionLeg.OrderPrice, tag: strategyTag)", span="580-580"];
m36_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="!Securities.ContainsKey(strategy.Underlying)", span="594-594"];
m36_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var marketOrder = MarketOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, tag: strategyTag)", span="603-603"];
m36_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var limitOrder = LimitOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, underlyingLeg.OrderPrice, tag: strategyTag)", span="607-607"];
m36_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.OptionLegs", span="557-557"];
m36_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="optionSeq.Count() != 1", span="564-564"];
m36_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var option = optionSeq.First().Key", span="571-571"];
m36_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var strategyTag = strategy.Name + '' ('' + strategyQuantity.ToString() + '')''", span="552-552"];
m36_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Market", span="575-575"];
m36_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(marketOrder)", span="577-577"];
m36_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Limit", span="579-579"];
m36_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(limitOrder)", span="581-581"];
m36_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.UnderlyingLegs", span="592-592"];
m36_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var error = string.Format(''Couldn't find the option contract underlying in algorithm securities list. Underlying: {0}'', strategy.Underlying.ToString())", span="596-596"];
m36_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="underlyingLeg.OrderType", span="600-600"];
m36_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Market", span="602-602"];
m36_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(marketOrder)", span="604-604"];
m36_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Limit", span="606-606"];
m36_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(limitOrder)", span="608-608"];
m36_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var orders = new List<OrderTicket>()", span="549-549"];
m36_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.OptionLegs != null", span="555-555"];
m36_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var error = string.Format(''Couldn't find the option contract in algorithm securities list. Underlying: {0}, option {1}, strike {2}, expiration: {3}'',\r\n                                strategy.Underlying.ToString(), optionLeg.Right.ToString(), optionLeg.Strike.ToString(), optionLeg.Expiration.ToString())", span="566-567"];
m36_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.UnderlyingLegs != null", span="590-590"];
m36_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="optionLeg.OrderType", span="573-573"];
m36_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + optionLeg.OrderType.ToString());", span="584-584"];
m36_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return orders;", span="615-615"];
m36_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + underlyingLeg.OrderType.ToString());", span="611-611"];
m36_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(error);", span="597-597"];
m36_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(error);", span="568-568"];
m36_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547"];
m36_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397"];
m36_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="399-399"];
m36_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397"];
m36_204 [cluster="Unk.Count", file="QCAlgorithm.Trading.cs", label="Entry Unk.Count", span=""];
m36_216 [cluster="string.Format(string, object)", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, object)", span="0-0"];
m36_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928"];
m36_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var feeToPriceRatio = 0", span="959-959"];
m36_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var iterations = 0", span="969-969"];
m36_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="930-930"];
m36_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var targetPortfolioValue = target * Portfolio.TotalPortfolioValue", span="940-940"];
m36_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var unitPrice = new MarketOrder(symbol, 1, UtcTime).GetValue(security)", span="948-948"];
m36_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var marginRemaining = Portfolio.GetMarginRemaining(symbol, direction)", span="952-952"];
m36_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var order = new MarketOrder(security.Symbol, orderQuantity, UtcTime)", span="984-984"];
m36_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="target == 0", span="937-937"];
m36_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="decimal orderQuantity = targetOrderValue / unitPrice", span="962-962"];
m36_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="decimal orderFees", span="958-958"];
m36_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="feeToPriceRatio > 0", span="977-977"];
m36_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity -= feeToPriceRatio", span="978-978"];
m36_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity % security.SymbolProperties.LotSize != 0", span="964-964"];
m36_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity = orderQuantity - (orderQuantity % security.SymbolProperties.LotSize)", span="966-966"];
m36_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity > 0 && (marginRequired > marginRemaining || orderValue + orderFees > targetOrderValue)", span="994-994"];
m36_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="iterations > 0", span="974-974"];
m36_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="iterations++", span="992-992"];
m36_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var price = security.Price", span="931-931"];
m36_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return -security.Holdings.Quantity;", span="937-937"];
m36_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var currentHoldingsValue = security.Holdings.HoldingsValue", span="941-941"];
m36_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderValue = order.GetValue(security)", span="985-985"];
m36_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="986-986"];
m36_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="marginRequired = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="990-990"];
m36_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity % security.SymbolProperties.LotSize != 0", span="997-997"];
m36_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity = orderQuantity - (orderQuantity % security.SymbolProperties.LotSize)", span="999-999"];
m36_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var targetOrderValue = Math.Abs(targetPortfolioValue - currentHoldingsValue)", span="944-944"];
m36_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var direction = targetPortfolioValue > currentHoldingsValue ? OrderDirection.Buy : OrderDirection.Sell", span="945-945"];
m36_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="unitPrice == 0", span="949-949"];
m36_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="feeToPriceRatio = (int)(orderFees / unitPrice)", span="987-987"];
m36_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="marginRemaining <= 0", span="953-953"];
m36_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="orderQuantity--", span="980-980"];
m36_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return 0;", span="934-934"];
m36_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return (direction == OrderDirection.Sell ? -1 : 1) * orderQuantity;", span="1003-1003"];
m36_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return 0;", span="949-949"];
m36_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return 0;", span="953-953"];
m36_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="price == 0", span="934-934"];
m36_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="decimal orderValue", span="957-957"];
m36_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="decimal marginRequired", span="956-956"];
m36_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928"];
m36_66 [cluster="Unk.Any", file="QCAlgorithm.Trading.cs", label="Entry Unk.Any", span=""];
m36_209 [cluster="string.Format(string, params object[])", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m36_213 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m36_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m36_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="837-837"];
m36_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m36_277 [cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154"];
m36_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m36_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="294-294"];
m36_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m36_3 [cluster="System.Math.Abs(int)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m36_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m36_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="863-863"];
m36_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m36_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304"];
m36_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="306-306"];
m36_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304"];
m36_12 [cluster="System.Math.Abs(decimal)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m36_8 [cluster="System.Math.Abs(double)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m36_203 [cluster="Unk.Where", file="QCAlgorithm.Trading.cs", label="Entry Unk.Where", span=""];
m36_304 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254"];
m36_201 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m36_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542"];
m36_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return GenerateOrders(strategy, quantity);", span="544-544"];
m36_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542"];
m36_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272"];
m36_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: var request = CreateSubmitOrderRequest(OrderType.MarketOnOpen, security, quantity, tag)", span="275-275"];
m36_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="274-274"];
m36_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="276-276"];
m36_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="279-279"];
m36_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="282-282"];
m36_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="277-277"];
m36_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272"];
m36_74 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="206-206"];
m36_217 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="559-562"];
m36_307 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="765-765"];
m36_218 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike", span="559-562"];
m36_219 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="559-562"];
m36_309 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="765-765"];
m36_308 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Value", span="765-765"];
m36_75 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Resolution != Resolution.Daily", span="206-206"];
m36_76 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="206-206"];
m36_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m36_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!Securities.TryGetValue(symbol, out security)", span="880-880"];
m36_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="882-882"];
m36_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=Portfolio, span="889-889"];
m36_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Order(holdingSymbol, -holdings.Quantity, false, tag)", span="896-896"];
m36_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var quantity = CalculateOrderQuantity(symbol, percentage)", span="902-902"];
m36_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="MarketOrder(symbol, quantity, false, tag)", span="905-905"];
m36_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Security security", span="879-879"];
m36_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=liquidateExistingHoldings, span="887-887"];
m36_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return;", span="883-883"];
m36_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="893-893"];
m36_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var holdingSymbol = kvp.Key", span="891-891"];
m36_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var holdings = kvp.Value", span="892-892"];
m36_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Math.Abs(quantity) > 0", span="903-903"];
m36_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m36_385 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m36_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350"];
m36_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="352-352"];
m36_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350"];
m36_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1041-1041"];
m36_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)quantity);", span="1043-1043"];
m36_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1041-1041"];
m36_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
m36_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: var request = CreateSubmitOrderRequest(OrderType.Limit, security, quantity, tag, limitPrice: limitPrice)", span="366-366"];
m36_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="365-365"];
m36_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="367-367"];
m36_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="370-370"];
m36_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="373-373"];
m36_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="368-368"];
m36_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
m36_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158"];
m36_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="160-160"];
m36_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", span="158-158"];
m36_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
m36_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="434-434"];
m36_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
m36_279 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m36_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640"];
m36_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Securities.TryGetValue(request.Symbol, out security)", span="645-645"];
m36_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Portfolio.CashBook.TryGetValue(quoteCurrency, out quoteCash)", span="683-683"];
m36_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="697-697"];
m36_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Transactions.OrdersCount > _maxOrders", span="714-714"];
m36_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Status = AlgorithmStatus.Stopped", span="716-716"];
m36_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="717-717"];
m36_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="740-740"];
m36_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Security security", span="644-644"];
m36_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MissingSecurity, ''You haven't requested '' + request.Symbol.ToString() + '' data. Add this with AddSecurity() in the Initialize() Method.'');", span="647-647"];
m36_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity == 0 || request.Symbol == null || request.Symbol == QuantConnect.Symbol.Empty || Math.Abs(request.Quantity) < security.SymbolProperties.LotSize", span="651-651"];
m36_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.IsTradable", span="656-656"];
m36_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var price = security.Price", span="661-661"];
m36_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="664-664"];
m36_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.OptionExercise && !security.Exchange.ExchangeOpen", span="670-670"];
m36_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var quoteCurrency = security.QuoteCurrency.Symbol", span="682-682"];
m36_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.QuoteCurrency.ConversionRate == 0m", span="687-687"];
m36_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.Type == SecurityType.Forex || security.Type == SecurityType.Crypto", span="693-693"];
m36_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var baseCurrency = ((IBaseCurrencySymbol)security).BaseCurrencySymbol", span="696-696"];
m36_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.HasData", span="708-708"];
m36_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.Type != SecurityType.Option", span="722-722"];
m36_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.Holdings.IsShort", span="725-725"];
m36_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity > security.Holdings.Quantity", span="728-728"];
m36_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="737-737"];
m36_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.QuoteCurrencyRequired, request.Symbol.Value + '': requires '' + quoteCurrency + '' in the cashbook to trade.'');", span="685-685"];
m36_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' in the cashbook to trade.'');", span="699-699"];
m36_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="baseCash.ConversionRate == 0m", span="701-701"];
m36_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.OptionExercise", span="720-720"];
m36_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var latestSubmissionTime = nextMarketClose.AddMinutes(-15.50)", span="739-739"];
m36_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="745-745"];
m36_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Success(request);", span="750-750"];
m36_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.ZeroQuantity(request);", span="653-653"];
m36_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="658-658"];
m36_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="666-666"];
m36_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="672-672"];
m36_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="677-677"];
m36_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ConversionRateZero, request.Symbol.Value + '': requires '' + quoteCurrency + '' to have a non-zero conversion rate. This can be caused by lack of data.'');", span="689-689"];
m36_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexConversionRateZero, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' to have non-zero conversion rates. This can be caused by lack of data.'');", span="703-703"];
m36_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityHasNoData, ''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'');", span="710-710"];
m36_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonExercisableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is not exercisable.'');", span="723-723"];
m36_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''The security with symbol ''' + request.Symbol.ToString() + ''' has a short option position. Only long option positions are exercisable.'');", span="726-726"];
m36_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''Cannot exercise more contracts of ''' + request.Symbol.ToString() + ''' than is currently available in the portfolio. '');", span="729-729"];
m36_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity <= 0.0m", span="731-731"];
m36_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="OrderResponse.ZeroQuantity(request)", span="732-732"];
m36_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.MarketOnClose", span="735-735"];
m36_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="price == 0", span="675-675"];
m36_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Cash quoteCash", span="681-681"];
m36_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Cash baseCash", span="695-695"];
m36_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640"];
m36_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1051-1051"];
m36_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="var time = UtcTime.ConvertFromUtc(exchangeHours.TimeZone)", span="1057-1057"];
m36_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="var exchangeHours = MarketHoursDatabase\r\n                .FromDataFolder()\r\n                .GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType)", span="1053-1055"];
m36_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="return exchangeHours.IsOpen(time, false);", span="1059-1059"];
m36_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1051-1051"];
m36_16 [cluster="System.Math.Abs(float)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(float)", span="0-0"];
m36_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1633-1633"];
m36_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m36_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)quantity);", span="129-129"];
m36_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m36_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
m36_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity);", span="138-138"];
m36_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
m36_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
m36_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="250-250"];
m36_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
m36_206 [cluster="System.Enum.ToString()", file="QCAlgorithm.Trading.cs", label="Entry System.Enum.ToString()", span="0-0"];
m36_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="1017-1017"];
m36_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity, asynchronous, tag);", span="1019-1019"];
m36_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="1017-1017"];
m36_215 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m36_303 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m36_71 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="405-405"];
m36_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625"];
m36_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecksImpl(request)", span="627-627"];
m36_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Error(response.ErrorMessage)", span="630-630"];
m36_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="628-628"];
m36_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return response;", span="632-632"];
m36_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625"];
m36_214 [cluster="Unk.LimitOrder", file="QCAlgorithm.Trading.cs", label="Entry Unk.LimitOrder", span=""];
m36_402 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m36_403 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124"];
m36_406 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m36_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96"];
m36_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1);", span="98-98"];
m36_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96"];
m36_212 [cluster="Unk.MarketOrder", file="QCAlgorithm.Trading.cs", label="Entry Unk.MarketOrder", span=""];
m36_400 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m36_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1658-1658"];
m36_278 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m36_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384"];
m36_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="386-386"];
m36_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384"];
m36_205 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m36_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
m36_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return Order(strategy, Math.Abs(quantity));", span="522-522"];
m36_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
m36_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184"];
m36_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="186-186"];
m36_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184"];
m36_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1029-1029"];
m36_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity);", span="1031-1031"];
m36_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1029-1029"];
m36_276 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
m36_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
m36_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="262-262"];
m36_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
m36_382 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m36_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
m36_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice)", span="463-463"];
m36_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="462-462"];
m36_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="464-464"];
m36_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="467-467"];
m36_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="471-471"];
m36_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="465-465"];
m36_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
m36_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
m36_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="339-339"];
m36_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
m36_401 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m36_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", span="1062-1062"];
m36_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag);", span="1064-1064"];
m36_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, decimal, decimal)", span="1062-1062"];
m36_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m36_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, Math.Abs(quantity));", span="64-64"];
m36_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m36_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
m36_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: var request = CreateSubmitOrderRequest(OrderType.OptionExercise, option, quantity, tag)", span="485-485"];
m36_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var option = (Option)Securities[optionSymbol]", span="483-483"];
m36_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label=IsWarmingUp, span="488-488"];
m36_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="490-490"];
m36_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="494-494"];
m36_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="497-497"];
m36_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.AddOrder(request)", span="501-501"];
m36_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="506-506"];
m36_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="!asynchronous", span="504-504"];
m36_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="preOrderCheckResponse.IsError", span="495-495"];
m36_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return ticket;", span="509-509"];
m36_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
m36_69 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="414-414"];
m36_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820"];
m36_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="!_locked", span="822-822"];
m36_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="_maxOrders = max", span="824-824"];
m36_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820"];
m36_280 [cluster="System.DateTime.AddMinutes(double)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m36_211 [cluster="Unk.First", file="QCAlgorithm.Trading.cs", label="Entry Unk.First", span=""];
m36_305 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="210-210"];
m36_381 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47"];
m36_208 [cluster="System.DateTime.ToString()", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m36_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m36_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, quantity);", span="147-147"];
m36_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m36_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m36_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="173-173"];
m36_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m36_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
m36_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="1: var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag)", span="319-319"];
m36_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="318-318"];
m36_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="320-320"];
m36_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="323-323"];
m36_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="326-326"];
m36_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="321-321"];
m36_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
m36_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="915-915"];
m36_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return CalculateOrderQuantity(symbol, (decimal)target);", span="917-917"];
m36_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="915-915"];
m36_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m36_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="4: var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag)", span="214-214"];
m36_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="199-199"];
m36_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!security.Exchange.ExchangeOpen", span="203-203"];
m36_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=IsWarmingUp, span="217-217"];
m36_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="219-219"];
m36_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="223-223"];
m36_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="226-226"];
m36_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.AddOrder(request)", span="230-230"];
m36_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="205-205"];
m36_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="209-209"];
m36_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="235-235"];
m36_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!asynchronous", span="233-233"];
m36_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var anyNonDailySubscriptions = security.Subscriptions.Any(x => x.Resolution != Resolution.Daily)", span="206-206"];
m36_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="preOrderCheckResponse.IsError", span="224-224"];
m36_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return ticket;", span="238-238"];
m36_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="mooTicket.SubmitRequest.Response.IsSuccess && !anyNonDailySubscriptions", span="207-207"];
m36_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return mooTicket;", span="211-211"];
m36_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m36_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m36_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="75-75"];
m36_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m36_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m36_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1m);", span="109-109"];
m36_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m36_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m36_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="53-53"];
m36_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m36_383 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m36_210 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="QCAlgorithm.Trading.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m36_275 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m36_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m36_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Securities.Keys.OrderBy(x => x.Value)", span="765-765"];
m36_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var orders = Transactions.GetOpenOrders(symbol)", span="772-772"];
m36_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var quantity = Portfolio[symbol].Quantity", span="775-775"];
m36_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.GetOrderTicket(order.Id)", span="788-788"];
m36_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Transactions.CancelOrder(order.Id, tag)", span="797-797"];
m36_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Order(symbol, -quantity - marketOrdersQuantity)", span="805-805"];
m36_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="symbolToLiquidate = symbolToLiquidate ?? QuantConnect.Symbol.Empty", span="763-763"];
m36_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="orderIdList.Add(ticket.OrderId)", span="808-808"];
m36_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="symbol != symbolToLiquidate && symbolToLiquidate != QuantConnect.Symbol.Empty", span="768-768"];
m36_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="778-778"];
m36_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="quantity != 0", span="802-802"];
m36_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="ticket.Status == OrderStatus.Filled", span="806-806"];
m36_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="return orderIdList;", span="813-813"];
m36_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label=orders, span="783-783"];
m36_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="order.Type == OrderType.Market", span="785-785"];
m36_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="ticket != null", span="789-789"];
m36_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="792-792"];
m36_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var marketOrdersQuantity = 0m", span="782-782"];
m36_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var orderIdList = new List<int>()", span="762-762"];
m36_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m36_72 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144"];
m36_384 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m36_306 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164"];
m36_207 [cluster="decimal.ToString()", file="QCAlgorithm.Trading.cs", label="Entry decimal.ToString()", span="0-0"];
m36_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m36_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="120-120"];
m36_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m36_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
m36_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="448-448"];
m36_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
m36_407 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m36_408 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Securities.Option.OptionStrategy", span=""];
m36_409 [file="QCAlgorithm.Trading.cs", label=optionLeg, span=""];
m38_44 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="703-703"];
m38_45 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="703-703"];
m38_46 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="703-703"];
m38_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38"];
m38_0 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m38_1 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="27-27"];
m38_2 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="29-29"];
m38_6 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.Language)", span="37-37"];
m38_3 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="32-32"];
m38_4 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="33-33"];
m38_5 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="34-34"];
m38_7 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="25-25"];
m38_41 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m38_49 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="714-714"];
m38_50 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="715-715"];
m38_51 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="716-716"];
m38_52 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m38_48 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m38_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m38_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63"];
m38_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86"];
m38_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                //new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="640-703"];
m38_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109"];
m38_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132"];
m38_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155"];
m38_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178"];
m38_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201"];
m38_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224"];
m38_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247"];
m38_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270"];
m38_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293"];
m38_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316"];
m38_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339"];
m38_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362"];
m38_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.27''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''-0.002''},\r\n                {''Beta'', ''0.411''},\r\n                {''Annual Standard Deviation'', ''0.112''},\r\n                {''Annual Variance'', ''0.013''},\r\n                {''Information Ratio'', ''-0.352''},\r\n                {''Tracking Error'', ''0.134''},\r\n                {''Treynor Ratio'', ''0.073''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="364-385"];
m38_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408"];
m38_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431"];
m38_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454"];
m38_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477"];
m38_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500"];
m38_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523"];
m38_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="525-546"];
m38_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="548-569"];
m38_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="571-592"];
m38_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="RegressionTests.cs", label="4: var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''-16.58%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''19.400%''},\r\n                {''Expectancy'', ''-0.667''},\r\n                {''Net Profit'', ''-16.499%''},\r\n                {''Sharpe Ratio'', ''-5.342''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.00''},\r\n                {''Alpha'', ''-11.859''},\r\n                {''Beta'', ''2.85''},\r\n                {''Annual Standard Deviation'', ''1.487''},\r\n                {''Annual Variance'', ''2.21''},\r\n                {''Information Ratio'', ''-8.353''},\r\n                {''Tracking Error'', ''1.115''},\r\n                {''Treynor Ratio'', ''-2.786''},\r\n                {''Total Fees'', ''$19077.09''}\r\n            }", span="594-615"];
m38_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638"];
m38_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m38_40 [cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m38_47 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m38_42 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m38_43 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m38_8 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="RegressionTests.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m38_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m38_53 [file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m39_88 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m39_124 [cluster="Unk.Where", file="SecurityPortfolioManager.cs", label="Entry Unk.Where", span=""];
m39_212 [cluster="decimal.RoundToSignificantDigits(int)", file="SecurityPortfolioManager.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
m39_28 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Remove(QuantConnect.Symbol)", span="122-122"];
m39_29 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager and objects cannot be removed.'');", span="122-122"];
m39_30 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Remove(QuantConnect.Symbol)", span="122-122"];
m39_173 [cluster="QuantConnect.Securities.Security.GetLastData()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="585-585"];
m39_62 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="244-244"];
m39_63 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="return Securities.Select(x => new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)).GetEnumerator();", span="246-246"];
m39_64 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="244-244"];
m39_229 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m39_47 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", span="221-221"];
m39_48 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Security security", span="223-223"];
m39_49 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="var success = Securities.TryGetValue(symbol, out security)", span="224-224"];
m39_50 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="holding = success ? security.Holdings : null", span="225-225"];
m39_51 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="return success;", span="226-226"];
m39_52 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", span="221-221"];
m39_46 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m39_144 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", span="688-688"];
m39_175 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionSecurities = Securities\r\n                                   .Where(x => x.Value.Type == SecurityType.Option && split.Symbol == x.Key.Underlying && x.Value.Holdings.Invested)\r\n                                   .ToList()", span="691-693"];
m39_181 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var splitFactor = split.SplitFactor", span="707-707"];
m39_176 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label=optionSecurities, span="695-695"];
m39_177 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var symbol = securityKV.Key", span="697-697"];
m39_178 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var security = securityKV.Value", span="698-698"];
m39_182 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var newSymbol = GetSplitAdjustedSymbol(symbol, splitFactor)", span="708-708"];
m39_184 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Securities.Remove(symbol)", span="712-712"];
m39_179 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var mode = security.DataNormalizationMode", span="701-701"];
m39_185 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionHoldings = new Option.OptionHolding(Securities[newSymbol], (Option.OptionHolding)security.Holdings)", span="713-713"];
m39_188 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionHoldings = (Option.OptionHolding)security.Holdings", span="719-719"];
m39_180 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="mode != DataNormalizationMode.Raw", span="702-702"];
m39_186 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="optionHoldings.SplitUnderlying(splitFactor)", span="714-714"];
m39_189 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="optionHoldings.SplitUnderlying(splitFactor)", span="720-720"];
m39_183 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="newSymbol != null", span="710-710"];
m39_187 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Securities[newSymbol].Holdings = optionHoldings", span="715-715"];
m39_190 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", span="688-688"];
m39_13 [cluster="System.Collections.Generic.List<T>.List()", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m39_199 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", span="725-725"];
m39_200 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var inverseFactor = 1.0m / splitFactor", span="727-727"];
m39_203 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", color=red, community=0, file="SecurityPortfolioManager.cs", label="8: Func<Symbol, bool> symbolIsFound = x => \r\n            {\r\n                var rootSymbol = newRootSymbol ?? symbol.Underlying.Value;\r\n                var strike = newStrike != 0.0m ? newStrike : symbol.ID.StrikePrice;\r\n\r\n                return x.HasUnderlying == true &&\r\n                        x.Underlying.Value == rootSymbol &&\r\n                        x.ID.Date == symbol.ID.Date &&\r\n                        x.ID.OptionRight == symbol.ID.OptionRight &&\r\n                        x.ID.Market == symbol.ID.Market &&\r\n                        x.ID.OptionStyle == symbol.ID.OptionStyle &&\r\n                        x.ID.StrikePrice == strike;\r\n            }", span="732-744"];
m39_204 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="splitFactor > 1.0m", span="747-747"];
m39_205 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newRootSymbol = symbol.Underlying.Value + ''1''", span="750-750"];
m39_207 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newStrike = Math.Round(symbol.ID.StrikePrice / inverseFactor, 2)", span="757-757"];
m39_208 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newStrike = Math.Round(symbol.ID.StrikePrice / inverseFactor, 2)", span="762-762"];
m39_209 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newRootSymbol = symbol.Underlying.Value + ''1''", span="763-763"];
m39_201 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="decimal newStrike = 0.0m", span="729-729"];
m39_206 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="inverseFactor.RoundToSignificantDigits(5) % 1 == 0", span="754-754"];
m39_202 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="string newRootSymbol = null", span="730-730"];
m39_210 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="return Securities\r\n                    .Select(x => x.Key)\r\n                    .Where(symbolIsFound)\r\n                    .FirstOrDefault();", span="766-769"];
m39_211 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", span="725-725"];
m39_18 [cluster="System.NotImplementedException.NotImplementedException(string)", file="SecurityPortfolioManager.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m39_138 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="101-101"];
m39_87 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m39_192 [cluster="Unk.GetSplitAdjustedSymbol", file="SecurityPortfolioManager.cs", label="Entry Unk.GetSplitAdjustedSymbol", span=""];
m39_131 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="595-595"];
m39_132 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var security = Securities[dividend.Symbol]", span="597-597"];
m39_135 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var total = security.Holdings.Quantity*dividend.Distribution", span="604-604"];
m39_133 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var mode = security.DataNormalizationMode", span="600-600"];
m39_134 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="mode == DataNormalizationMode.Raw || mode == DataNormalizationMode.SplitAdjusted", span="601-601"];
m39_136 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.AddAmount(total)", span="607-607"];
m39_137 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="595-595"];
m39_15 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Add(QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding)", span="91-91"];
m39_16 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager. To add a new asset add the required data during initialization.'');", span="91-91"];
m39_17 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Add(QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding)", span="91-91"];
m39_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", span="175-175"];
m39_39 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="array = new KeyValuePair<Symbol, SecurityHolding>[Securities.Count]", span="177-177"];
m39_42 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="i >= index", span="181-181"];
m39_40 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="var i = 0", span="178-178"];
m39_43 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="array[i] = new KeyValuePair<Symbol, SecurityHolding>(asset.Key, asset.Value.Holdings)", span="183-183"];
m39_41 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label=Securities, span="179-179"];
m39_44 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="i++", span="185-185"];
m39_45 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", span="175-175"];
m39_215 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="732-744"];
m39_59 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="236-236"];
m39_60 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)", span="236-236"];
m39_61 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="236-236"];
m39_65 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="246-246"];
m39_66 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)", span="246-246"];
m39_67 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="246-246"];
m39_68 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="295-295"];
m39_69 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Value.Holdings.AbsoluteHoldingsCost", span="295-295"];
m39_70 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="295-295"];
m39_71 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="372-372"];
m39_72 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Value.Type == SecurityType.Future", span="372-372"];
m39_73 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="372-372"];
m39_74 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="373-373"];
m39_75 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Value.Holdings.UnrealizedProfit", span="373-373"];
m39_76 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="373-373"];
m39_128 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="576-576"];
m39_129 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Holdings.Quantity != 0 && x.Price != 0", span="576-576"];
m39_130 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="576-576"];
m39_197 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Value.Type == SecurityType.Option && split.Symbol == x.Key.Underlying && x.Value.Holdings.Invested", span="692-692"];
m39_196 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="692-692"];
m39_198 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="692-692"];
m39_216 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="var rootSymbol = newRootSymbol ?? symbol.Underlying.Value", span="734-734"];
m39_217 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="var strike = newStrike != 0.0m ? newStrike : symbol.ID.StrikePrice", span="735-735"];
m39_218 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="return x.HasUnderlying == true &&\r\n                        x.Underlying.Value == rootSymbol &&\r\n                        x.ID.Date == symbol.ID.Date &&\r\n                        x.ID.OptionRight == symbol.ID.OptionRight &&\r\n                        x.ID.Market == symbol.ID.Market &&\r\n                        x.ID.OptionStyle == symbol.ID.OptionStyle &&\r\n                        x.ID.StrikePrice == strike;", span="737-743"];
m39_220 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="767-767"];
m39_219 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="732-744"];
m39_221 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Key", span="767-767"];
m39_222 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="767-767"];
m39_195 [cluster="QuantConnect.Securities.Option.OptionHolding.SplitUnderlying(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Option.OptionHolding.SplitUnderlying(decimal)", span="48-48"];
m39_223 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="781-781"];
m39_224 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="var clone = time", span="783-783"];
m39_227 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Transactions.TransactionRecord.Add(clone, transactionProfitLoss)", span="788-788"];
m39_225 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Transactions.TransactionRecord.ContainsKey(clone)", span="784-784"];
m39_226 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="clone = clone.AddMilliseconds(1)", span="786-786"];
m39_228 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="781-781"];
m39_230 [cluster="System.DateTime.AddMilliseconds(double)", file="SecurityPortfolioManager.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m39_251 [cluster="System.Collections.Generic.List<T>.Remove(T)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0"];
m39_174 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
m39_231 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m39_80 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m39_81 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Cash item", span="485-485"];
m39_82 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="CashBook.TryGetValue(symbol, out item)", span="486-486"];
m39_83 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="item.SetAmount(cash)", span="488-488"];
m39_84 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="item.ConversionRate = conversionRate", span="489-489"];
m39_85 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="CashBook.Add(symbol, cash, conversionRate)", span="493-493"];
m39_86 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m39_12 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="50-50"];
m39_102 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="541-541"];
m39_103 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="issueMarginCallWarning = false", span="543-543"];
m39_104 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var totalMarginUsed = TotalMarginUsed", span="545-545"];
m39_105 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="totalMarginUsed <= 0", span="548-548"];
m39_107 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var averageHoldingsLeverage = TotalAbsoluteHoldingsCost/totalMarginUsed", span="554-554"];
m39_118 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginCallOrder = MarginCallModel.GenerateMarginCallOrder(security, totalPortfolioValue, totalMarginUsed, maintenanceMarginRequirement)", span="579-579"];
m39_106 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="return new List<SubmitOrderRequest>();", span="550-550"];
m39_108 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="averageHoldingsLeverage <= 1.0m", span="555-555"];
m39_109 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="return new List<SubmitOrderRequest>();", span="557-557"];
m39_110 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginRemaining = MarginRemaining", span="560-560"];
m39_111 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var totalPortfolioValue = TotalPortfolioValue", span="563-563"];
m39_112 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginRemaining <= totalPortfolioValue*0.05m", span="564-564"];
m39_115 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginRemaining <= 0", span="573-573"];
m39_113 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="issueMarginCallWarning = true", span="566-566"];
m39_114 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginCallOrders = new List<SubmitOrderRequest>()", span="570-570"];
m39_120 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginCallOrders.Add(marginCallOrder)", span="582-582"];
m39_121 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="issueMarginCallWarning = marginCallOrders.Count > 0", span="585-585"];
m39_122 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="return marginCallOrders;", span="588-588"];
m39_116 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="Securities.Values.Where(x => x.Holdings.Quantity != 0 && x.Price != 0)", span="576-576"];
m39_117 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var maintenanceMarginRequirement = security.MarginModel.GetMaintenanceMarginRequirement(security)", span="578-578"];
m39_119 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginCallOrder != null && marginCallOrder.Quantity != 0", span="580-580"];
m39_123 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="541-541"];
m39_58 [cluster="Unk.GetEnumerator", file="SecurityPortfolioManager.cs", label="Entry Unk.GetEnumerator", span=""];
m39_238 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", span="812-812"];
m39_239 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label=_unsettledCashAmountsLocker, span="814-814"];
m39_240 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts.Add(item)", span="816-816"];
m39_241 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", span="812-812"];
m39_191 [cluster="Unk.ToList", file="SecurityPortfolioManager.cs", label="Entry Unk.ToList", span=""];
m39_143 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", span="625-625"];
m39_145 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var security = Securities[split.Symbol]", span="627-627"];
m39_151 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var quantity = security.Holdings.Quantity / split.SplitFactor", span="643-643"];
m39_152 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var avgPrice = security.Holdings.AveragePrice * split.SplitFactor", span="644-644"];
m39_154 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var extraCash = leftOver * split.ReferencePrice", span="648-648"];
m39_160 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="next.Value *= split.SplitFactor", span="663-663"];
m39_163 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.Open *= split.SplitFactor", span="669-669"];
m39_164 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.High *= split.SplitFactor", span="670-670"];
m39_165 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.Low *= split.SplitFactor", span="671-671"];
m39_168 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick.AskPrice *= split.SplitFactor", span="678-678"];
m39_169 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick.BidPrice *= split.SplitFactor", span="679-679"];
m39_146 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.Type != SecurityType.Equity", span="630-630"];
m39_148 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var mode = security.DataNormalizationMode", span="636-636"];
m39_156 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.Holdings.SetHoldings(avgPrice, (int)quantity)", span="651-651"];
m39_157 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var next = security.GetLastData()", span="654-654"];
m39_170 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.SetMarketPrice(next)", span="682-682"];
m39_147 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="return;", span="632-632"];
m39_149 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="mode != DataNormalizationMode.Raw", span="637-637"];
m39_150 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="return;", span="639-639"];
m39_153 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var leftOver = quantity - (int)quantity", span="647-647"];
m39_155 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.AddAmount(extraCash)", span="649-649"];
m39_158 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="next == null", span="655-655"];
m39_161 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var tradeBar = next as TradeBar", span="666-666"];
m39_166 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var tick = next as Tick", span="675-675"];
m39_159 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="return;", span="661-661"];
m39_162 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar != null", span="667-667"];
m39_167 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick != null", span="676-676"];
m39_171 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", span="625-625"];
m39_89 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m39_90 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="var security = Securities[symbol]", span="505-505"];
m39_91 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="return security.MarginModel.GetMarginRemaining(this, security, direction);", span="506-506"];
m39_92 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m39_139 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="615-615"];
m39_140 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="ApplySplitToEquities(split)", span="617-617"];
m39_141 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="ApplySplitToOptions(split)", span="618-618"];
m39_142 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="615-615"];
m39_35 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="140-140"];
m39_36 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="return Securities.ContainsKey(pair.Key);", span="142-142"];
m39_37 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="140-140"];
m39_14 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m39_194 [cluster="QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Option.OptionHolding)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Option.OptionHolding)", span="39-39"];
m39_54 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="234-234"];
m39_55 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="return Securities.Select(x => new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)).GetEnumerator();", span="236-236"];
m39_56 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="234-234"];
m39_31 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="129-129"];
m39_32 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="return Securities.ContainsKey(symbol);", span="131-131"];
m39_33 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="129-129"];
m39_94 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="516-516"];
m39_95 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="return GetMarginRemaining(symbol, direction);", span="518-518"];
m39_96 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="516-516"];
m39_97 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="529-529"];
m39_98 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="var security = Securities[fill.Symbol]", span="531-531"];
m39_99 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="security.PortfolioModel.ProcessFill(this, security, fill)", span="532-532"];
m39_100 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="529-529"];
m39_0 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m39_1 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="Securities = securityManager", span="67-67"];
m39_2 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="Transactions = transactions", span="68-68"];
m39_3 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", color=red, community=0, file="SecurityPortfolioManager.cs", label="8: MarginCallModel = new DefaultMarginCallModel(this)", span="69-69"];
m39_4 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="CashBook = new CashBook()", span="71-71"];
m39_5 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="UnsettledCashBook = new CashBook()", span="72-72"];
m39_6 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts = new List<UnsettledCashAmount>()", span="73-73"];
m39_7 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash = CashBook[CashBook.AccountCurrency]", span="75-75"];
m39_8 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="_baseCurrencyUnsettledCash = UnsettledCashBook[CashBook.AccountCurrency]", span="76-76"];
m39_9 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.SetAmount(100000)", span="79-79"];
m39_10 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m39_101 [cluster="QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="30-30"];
m39_53 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m39_214 [cluster="Unk.FirstOrDefault", file="SecurityPortfolioManager.cs", label="Entry Unk.FirstOrDefault", span=""];
m39_232 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="796-796"];
m39_233 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Security security", span="798-798"];
m39_234 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Securities.TryGetValue(symbol, out security)", span="800-800"];
m39_235 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="return security;", span="802-802"];
m39_236 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="return null;", span="805-805"];
m39_237 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="796-796"];
m39_242 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823"];
m39_243 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label=_unsettledCashAmountsLocker, span="825-825"];
m39_245 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="timeUtc >= item.SettlementTimeUtc", span="830-830"];
m39_244 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts.ToList()", span="827-827"];
m39_246 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts.Remove(item)", span="833-833"];
m39_247 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="UnsettledCashBook[item.Currency].AddAmount(-item.Amount)", span="836-836"];
m39_248 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="CashBook[item.Currency].AddAmount(item.Amount)", span="839-839"];
m39_249 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823"];
m39_250 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m39_34 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m39_22 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Clear()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Clear()", span="106-106"];
m39_23 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Clear()", file="SecurityPortfolioManager.cs", label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager and cannot be cleared.'');", span="106-106"];
m39_24 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Clear()", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Clear()", span="106-106"];
m39_93 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63"];
m39_125 [cluster="Unk.GetMaintenanceMarginRequirement", file="SecurityPortfolioManager.cs", label="Entry Unk.GetMaintenanceMarginRequirement", span=""];
m39_213 [cluster="System.Math.Round(decimal, int)", file="SecurityPortfolioManager.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m39_11 [cluster="QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", span="41-41"];
m39_25 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="114-114"];
m39_26 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager and objects cannot be removed.'');", span="114-114"];
m39_27 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="114-114"];
m39_77 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m39_78 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.SetAmount(cash)", span="474-474"];
m39_79 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m39_127 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m39_172 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m39_57 [cluster="Unk.Select", file="SecurityPortfolioManager.cs", label="Entry Unk.Select", span=""];
m39_126 [cluster="Unk.GenerateMarginCallOrder", file="SecurityPortfolioManager.cs", label="Entry Unk.GenerateMarginCallOrder", span=""];
m39_19 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="99-99"];
m39_20 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager. To add a new asset add the required data during initialization.'');", span="99-99"];
m39_21 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="99-99"];
m39_193 [cluster="Unk.Remove", file="SecurityPortfolioManager.cs", label="Entry Unk.Remove", span=""];
m39_252 [file="SecurityPortfolioManager.cs", label="QuantConnect.Securities.SecurityPortfolioManager", span=""];
m39_253 [file="SecurityPortfolioManager.cs", label="QuantConnect.Data.Market.Split", span=""];
m39_254 [file="SecurityPortfolioManager.cs", label="QuantConnect.Symbol", span=""];
m39_255 [file="SecurityPortfolioManager.cs", label=newRootSymbol, span=""];
m39_256 [file="SecurityPortfolioManager.cs", label=newStrike, span=""];
m40_37 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m40_9 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="81-81"];
m40_10 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Quantity < 0", span="84-84"];
m40_11 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return Quantity*Math.Max(LimitPrice, security.Price);", span="86-86"];
m40_13 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return Quantity*Math.Min(LimitPrice, security.Price);", span="92-92"];
m40_12 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Quantity > 0", span="90-90"];
m40_14 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return 0m;", span="95-95"];
m40_15 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="81-81"];
m40_31 [cluster="string.Format(string, object, object, object)", file="StopLimitOrder.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m40_16 [cluster="System.Math.Max(decimal, decimal)", file="StopLimitOrder.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m40_32 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.Clone()", span="131-131"];
m40_33 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="var order = new StopLimitOrder {StopPrice = StopPrice, LimitPrice = LimitPrice}", span="133-133"];
m40_34 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="CopyTo(order)", span="134-134"];
m40_35 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="return order;", span="135-135"];
m40_36 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.Clone()", span="131-131"];
m40_29 [cluster="QuantConnect.Orders.Order.ToString()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="215-215"];
m40_17 [cluster="System.Math.Min(decimal, decimal)", file="StopLimitOrder.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m40_25 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192"];
m40_0 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51"];
m40_1 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51"];
m40_2 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="64-64"];
m40_3 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", color=green, community=0, file="StopLimitOrder.cs", label="2: StopPrice = stopPrice", span="67-67"];
m40_4 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="StopLimitOrder.cs", label="LimitPrice = limitPrice", span="68-68"];
m40_5 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="StopLimitOrder.cs", label="tag == ''''", span="70-70"];
m40_6 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="StopLimitOrder.cs", label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'') + '' Limit Price: '' + limitPrice.ToString(''C'')", span="73-73"];
m40_7 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="64-64"];
m40_26 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.ToString()", span="122-122"];
m40_27 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="return string.Format(''{0} at stop {1} limit {2}'', base.ToString(), StopPrice.SmartRounding(), LimitPrice.SmartRounding());", span="124-124"];
m40_28 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.ToString()", span="122-122"];
m40_18 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="102-102"];
m40_19 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="base.ApplyUpdateOrderRequest(request)", span="104-104"];
m40_20 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="request.StopPrice.HasValue", span="105-105"];
m40_21 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="StopPrice = request.StopPrice.Value", span="107-107"];
m40_22 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="request.LimitPrice.HasValue", span="109-109"];
m40_23 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="LimitPrice = request.LimitPrice.Value", span="111-111"];
m40_24 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="102-102"];
m40_8 [cluster="decimal.ToString(string)", file="StopLimitOrder.cs", label="Entry decimal.ToString(string)", span="0-0"];
m40_30 [cluster="decimal.SmartRounding()", file="StopLimitOrder.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m40_38 [file="StopLimitOrder.cs", label="QuantConnect.Orders.StopLimitOrder", span=""];
m41_23 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.ToString()", span="106-106"];
m41_24 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="StopMarketOrder.cs", label="return string.Format(''{0} at stop {1}'', base.ToString(), StopPrice.SmartRounding());", span="108-108"];
m41_25 [cluster="QuantConnect.Orders.StopMarketOrder.ToString()", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.ToString()", span="106-106"];
m41_8 [cluster="System.Math.Abs(int)", file="StopMarketOrder.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m41_9 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(int)", file="StopMarketOrder.cs", label="Entry QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(int)", span="22-22"];
m41_10 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(int)", file="StopMarketOrder.cs", label="return new LimitOrder(Symbol, Math.Abs(quantity), _lowLimit, DateTime.Now, type: SecurityType);", span="24-24"];
m41_11 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(int)", file="StopMarketOrder.cs", label="Exit QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(int)", span="22-22"];
m41_12 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", file="StopMarketOrder.cs", label="Entry QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", span="27-27"];
m41_13 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", file="StopMarketOrder.cs", label="var limit = (LimitOrder) order", span="31-31"];
m41_14 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", file="StopMarketOrder.cs", label="order.Quantity > 0", span="32-32"];
m41_0 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m41_1 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m41_2 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m41_3 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", color=green, community=0, file="StopMarketOrder.cs", label="4: StopPrice = stopPrice", span="56-56"];
m41_29 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.StopMarketOrder.Clone()", span="115-115"];
m41_30 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="var order = new StopMarketOrder {StopPrice = StopPrice}", span="117-117"];
m41_31 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="CopyTo(order)", span="118-118"];
m41_32 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="return order;", span="119-119"];
m41_33 [cluster="QuantConnect.Orders.StopMarketOrder.Clone()", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.Clone()", span="115-115"];
m41_34 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m41_4 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="StopMarketOrder.cs", label="tag == ''''", span="58-58"];
m41_5 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="StopMarketOrder.cs", label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'')", span="61-61"];
m41_6 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m41_7 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="55-55"];
m41_15 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", file="StopMarketOrder.cs", label="limit.LimitPrice *= 2", span="35-35"];
m41_16 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", file="StopMarketOrder.cs", label="limit.LimitPrice /= 2", span="40-40"];
m41_26 [cluster="QuantConnect.Orders.Order.ToString()", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="215-215"];
m41_28 [cluster="string.Format(string, object, object)", file="StopMarketOrder.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m41_22 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192"];
m41_17 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", file="StopMarketOrder.cs", label="return true;", span="42-42"];
m41_18 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", file="StopMarketOrder.cs", label="Exit QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Orders.Order, decimal)", span="27-27"];
m41_20 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="StopPrice = request.StopPrice.Value", span="95-95"];
m41_19 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters", span=""];
m41_21 [cluster="QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopMarketOrder.cs", label="Exit QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="90-90"];
m41_27 [cluster="decimal.SmartRounding()", file="StopMarketOrder.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m41_35 [file="StopMarketOrder.cs", label="QuantConnect.Orders.StopMarketOrder", span=""];
m42_16 [cluster="string.Format(string, params object[])", file="SubmitOrderRequest.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m42_11 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.ToString()", span="119-119"];
m42_12 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="var proxy = Order.CreateOrder(this)", span="122-122"];
m42_13 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="return string.Format(''{0} UTC: Submit Order: ({1}) - {2} {3}'', Time, OrderId, proxy, Tag) + '' Status: '' + Status;", span="123-123"];
m42_14 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.ToString()", span="119-119"];
m42_0 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m42_1 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="SubmitOrderRequest.cs", label="SecurityType = securityType", span="95-95"];
m42_2 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="SubmitOrderRequest.cs", label="Symbol = symbol", span="96-96"];
m42_3 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="SubmitOrderRequest.cs", label="OrderType = orderType", span="97-97"];
m42_4 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="SubmitOrderRequest.cs", label="Quantity = quantity", span="98-98"];
m42_5 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="SubmitOrderRequest.cs", label="LimitPrice = limitPrice", span="99-99"];
m42_6 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="SubmitOrderRequest.cs", label="StopPrice = stopPrice", span="100-100"];
m42_7 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
m42_8 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="107-107"];
m42_9 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="SubmitOrderRequest.cs", label="OrderId = orderId", span="109-109"];
m42_10 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="107-107"];
m42_15 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="250-250"];
m42_17 [file="SubmitOrderRequest.cs", label="QuantConnect.Orders.SubmitOrderRequest", span=""];
m43_43 [cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="SubscriptionManager.cs", label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108"];
m43_38 [cluster="Unk.Where", file="SubscriptionManager.cs", label="Entry Unk.Where", span=""];
m43_63 [cluster="Unk.IsAssignableFrom", file="SubscriptionManager.cs", label="Entry Unk.IsAssignableFrom", span=""];
m43_8 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="91-91"];
m43_9 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="var dataType = typeof(TradeBar)", span="94-94"];
m43_10 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", color=green, community=0, file="SubscriptionManager.cs", label="4: resolution == Resolution.Tick", span="95-95"];
m43_12 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="var tickType = LeanData.GetCommonTickTypeForCommonDataTypes(dataType, symbol.SecurityType)", span="99-99"];
m43_13 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="return Add(dataType, tickType, symbol, resolution, timeZone, exchangeTimeZone, isCustomData, fillDataForward, extendedMarketHours);", span="100-100"];
m43_11 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="dataType = typeof(Tick)", span="97-97"];
m43_14 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="91-91"];
m43_77 [cluster="System.Collections.Generic.List<T>.List()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m43_90 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="SubscriptionManager.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="258-258"];
m43_15 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="687-687"];
m43_47 [cluster="QuantConnect.Symbol.IsCanonical()", file="SubscriptionManager.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m43_37 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m43_87 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="237-237"];
m43_44 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="144-144"];
m43_48 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="145-145"];
m43_45 [cluster="lambda expression", file="SubscriptionManager.cs", label="!x.Symbol.IsCanonical()", span="144-144"];
m43_46 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="144-144"];
m43_49 [cluster="lambda expression", file="SubscriptionManager.cs", label="x.Symbol.Value", span="145-145"];
m43_50 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="145-145"];
m43_69 [cluster="lambda expression", file="SubscriptionManager.cs", label="x.Symbol == symbol", span="172-172"];
m43_68 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="172-172"];
m43_71 [cluster="lambda expression", file="SubscriptionManager.cs", label="Entry lambda expression", span="194-194"];
m43_70 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="172-172"];
m43_72 [cluster="lambda expression", file="SubscriptionManager.cs", label="x.Type.Name", span="194-194"];
m43_73 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="194-194"];
m43_88 [cluster="lambda expression", file="SubscriptionManager.cs", label="new Tuple<Type, TickType>(LeanData.GetDataType(resolution, tickType), tickType)", span="237-237"];
m43_89 [cluster="lambda expression", file="SubscriptionManager.cs", label="Exit lambda expression", span="237-237"];
m43_34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m43_6 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m43_16 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="119-119"];
m43_17 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="dataTimeZone == null", span="121-121"];
m43_19 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="exchangeTimeZone == null", span="125-125"];
m43_21 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="var newConfig = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, fillDataForward, extendedMarketHours, isInternalFeed, isCustomData, isFilteredSubscription: isFilteredSubscription, tickType: tickType)", span="131-131"];
m43_29 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="_timeKeeper.AddTimeZone(exchangeTimeZone)", span="156-156"];
m43_30 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="HasCustomData = HasCustomData || isCustomData", span="159-159"];
m43_18 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="throw new ArgumentNullException(''dataTimeZone'', ''DataTimeZone is a required parameter for new subscriptions.  Set to the time zone the raw data is time stamped in.'');", span="123-123"];
m43_20 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="throw new ArgumentNullException(''exchangeTimeZone'', ''ExchangeTimeZone is a required parameter for new subscriptions.  Set to the time zone the security exchange resides in.'');", span="127-127"];
m43_22 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Subscriptions.Contains(newConfig)", span="134-134"];
m43_23 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Log.Trace(''SubscriptionManager.Add(): subscription already added: '' + newConfig)", span="136-136"];
m43_24 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="return newConfig;", span="137-137"];
m43_25 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Subscriptions.Add(newConfig)", span="140-140"];
m43_31 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="return newConfig;", span="161-161"];
m43_26 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="var uniqueCount = Subscriptions\r\n                .Where(x => !x.Symbol.IsCanonical())\r\n                .DistinctBy(x => x.Symbol.Value)\r\n                .Count()", span="143-146"];
m43_27 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="uniqueCount > _algorithmSettings.DataSubscriptionLimit", span="147-147"];
m43_28 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="throw new Exception(\r\n                    string.Format(\r\n                        ''The maximum number of concurrent market data subscriptions was exceeded ({0}). Please reduce the number of symbols requested or increase the limit using Settings.DataSubscriptionLimit.'',\r\n                        _algorithmSettings.DataSubscriptionLimit));", span="149-152"];
m43_32 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="119-119"];
m43_39 [cluster="Unk.DistinctBy", file="SubscriptionManager.cs", label="Entry Unk.DistinctBy", span=""];
m43_41 [cluster="System.Exception.Exception(string)", file="SubscriptionManager.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m43_78 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", span="218-218"];
m43_79 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="return AvailableDataTypes[securityType];", span="220-220"];
m43_80 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", span="218-218"];
m43_61 [cluster="Unk.ToList", file="SubscriptionManager.cs", label="Entry Unk.ToList", span=""];
m43_7 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m43_74 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", color=green, community=0, file="SubscriptionManager.cs", label="4: return new Dictionary<SecurityType, List<TickType>>()\r\n            {\r\n                {SecurityType.Base, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Forex, new List<TickType>() { TickType.Quote } },\r\n                {SecurityType.Equity, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Option, new List<TickType>() { TickType.Quote, TickType.Trade, TickType.OpenInterest } },\r\n                {SecurityType.Cfd, new List<TickType>() { TickType.Quote } },\r\n                {SecurityType.Future, new List<TickType>() { TickType.Quote, TickType.Trade, TickType.OpenInterest } },\r\n                {SecurityType.Commodity, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Crypto, new List<TickType>() { TickType.Quote, TickType.Trade } },\r\n            };", span="202-212"];
m43_75 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m43_62 [cluster="System.ArgumentException.ArgumentException(string)", file="SubscriptionManager.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m43_35 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m43_64 [cluster="Unk.Add", file="SubscriptionManager.cs", label="Entry Unk.Add", span=""];
m43_83 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="return new List<Tuple<Type, TickType>> { new Tuple<Type, TickType>(typeof(ZipEntryName), TickType.Quote) };", span="234-234"];
m43_81 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m43_82 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label=isCanonical, span="232-232"];
m43_84 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="return AvailableDataTypes[symbolSecurityType].Select(tickType => new Tuple<Type, TickType>(LeanData.GetDataType(resolution, tickType), tickType)).ToList();", span="237-237"];
m43_85 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m43_0 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m43_1 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="_algorithmSettings = algorithmSettings", span="59-59"];
m43_2 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="_timeKeeper = timeKeeper", span="60-60"];
m43_3 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Subscriptions = new HashSet<SubscriptionDataConfig>()", span="62-62"];
m43_4 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="AvailableDataTypes = DefaultDataTypes()", span="65-65"];
m43_5 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m43_42 [cluster="string.Format(string, object)", file="SubscriptionManager.cs", label="Entry string.Format(string, object)", span="0-0"];
m43_51 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m43_52 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="var subscriptions = Subscriptions.Where(x => x.Symbol == symbol).ToList()", span="172-172"];
m43_54 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="throw new ArgumentException(''Please subscribe to this symbol before adding a consolidator for it. Symbol: '' + symbol.Value);", span="177-177"];
m43_56 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="consolidator.InputType.IsAssignableFrom(subscription.Type)", span="183-183"];
m43_57 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="subscription.Consolidators.Add(consolidator)", span="185-185"];
m43_59 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", color=green, community=0, file="SubscriptionManager.cs", label="8: throw new ArgumentException(string.Format(''Type mismatch found between consolidator and symbol. '' +\r\n                ''Symbol: {0} does not support input type: {1}. Supported types: {2}.'',\r\n                symbol.Value, \r\n                consolidator.InputType.Name,\r\n                string.Join('','', subscriptions.Select(x => x.Type.Name))));", span="190-194"];
m43_53 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="subscriptions.Count == 0", span="174-174"];
m43_55 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label=subscriptions, span="180-180"];
m43_58 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="return;", span="186-186"];
m43_60 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SubscriptionManager.cs", label="Exit QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m43_66 [cluster="Unk.Join", file="SubscriptionManager.cs", label="Entry Unk.Join", span=""];
m43_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m43_67 [cluster="string.Format(string, object, object, object)", file="SubscriptionManager.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m43_36 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SubscriptionManager.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m43_86 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="SubscriptionManager.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m43_65 [cluster="Unk.Select", file="SubscriptionManager.cs", label="Entry Unk.Select", span=""];
m43_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SubscriptionManager.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m43_33 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="SubscriptionManager.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m43_91 [file="SubscriptionManager.cs", label="QuantConnect.Data.SubscriptionManager", span=""];
m43_92 [file="SubscriptionManager.cs", label="QuantConnect.Symbol", span=""];
m43_93 [file="SubscriptionManager.cs", label="QuantConnect.Resolution", span=""];
m44_24 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", span="78-78"];
m44_25 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="80-80"];
m44_26 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(3, types.Count)", span="82-82"];
m44_27 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[0].Item1)", span="83-83"];
m44_28 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Quote, types[0].Item2)", span="84-84"];
m44_29 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[1].Item1)", span="85-85"];
m44_30 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Trade, types[1].Item2)", span="86-86"];
m44_31 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[2].Item1)", span="87-87"];
m44_32 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.OpenInterest, types[2].Item2)", span="88-88"];
m44_33 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsTick(QuantConnect.SecurityType, QuantConnect.Resolution)", span="78-78"];
m44_52 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m44_7 [cluster="Unk.AreEqual", file="SubscriptionManagerTests.cs", label="Entry Unk.AreEqual", span=""];
m44_50 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m44_49 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m44_14 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", span="62-62"];
m44_15 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="64-64"];
m44_16 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(3, types.Count)", span="66-66"];
m44_17 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(QuoteBar), types[0].Item1)", span="67-67"];
m44_18 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Quote, types[0].Item2)", span="68-68"];
m44_19 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(TradeBar), types[1].Item1)", span="69-69"];
m44_20 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.Trade, types[1].Item2)", span="70-70"];
m44_21 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(OpenInterest), types[2].Item1)", span="71-71"];
m44_22 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(TickType.OpenInterest, types[2].Item2)", span="72-72"];
m44_23 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesFuturesOptionsMinute(QuantConnect.SecurityType, QuantConnect.Resolution)", span="62-62"];
m44_8 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m44_9 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution, true)", span="52-52"];
m44_11 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedDataType, types[0].Item1)", span="55-55"];
m44_12 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedTickType, types[0].Item2)", span="56-56"];
m44_10 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(1, types.Count)", span="54-54"];
m44_13 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCanonical(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="50-50"];
m44_51 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m44_6 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="115-115"];
m44_45 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="var timeKeeper = new TimeKeeper(DateTime.UtcNow)", span="117-117"];
m44_47 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="return subscriptionManager.LookupSubscriptionConfigDataTypes(securityType, resolution, isCanonical);", span="119-119"];
m44_46 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="var subscriptionManager = new SubscriptionManager(new AlgorithmSettings(), timeKeeper)", span="118-118"];
m44_48 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetSubscriptionDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="115-115"];
m44_34 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", span="94-94"];
m44_35 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(SecurityType.Crypto, resolution)", span="96-96"];
m44_37 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="resolution == Resolution.Tick", span="100-100"];
m44_36 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(2, types.Count)", span="98-98"];
m44_38 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[0].Item1)", span="102-102"];
m44_39 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(typeof(Tick), types[1].Item1)", span="103-103"];
m44_40 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=green, community=0, file="SubscriptionManagerTests.cs", label="8: Assert.AreEqual(typeof(QuoteBar), types[0].Item1)", span="107-107"];
m44_41 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=green, community=0, file="SubscriptionManagerTests.cs", label="4: Assert.AreEqual(typeof(TradeBar), types[1].Item1)", span="108-108"];
m44_42 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=green, community=0, file="SubscriptionManagerTests.cs", label="4: Assert.AreEqual(TickType.Quote, types[0].Item2)", span="111-111"];
m44_43 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", color=green, community=0, file="SubscriptionManagerTests.cs", label="4: Assert.AreEqual(TickType.Trade, types[1].Item2)", span="112-112"];
m44_44 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesCrypto(QuantConnect.Resolution)", span="94-94"];
m44_0 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Entry QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="36-36"];
m44_1 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="var types = GetSubscriptionDataTypes(securityType, resolution)", span="38-38"];
m44_3 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedDataType, types[0].Item1)", span="41-41"];
m44_4 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(expectedTickType, types[0].Item2)", span="42-42"];
m44_2 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Assert.AreEqual(1, types.Count)", span="40-40"];
m44_5 [cluster="QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", file="SubscriptionManagerTests.cs", label="Exit QuantConnect.Tests.Common.Data.SubscriptionManagerTests.GetsSubscriptionDataTypesSingle(QuantConnect.SecurityType, QuantConnect.Resolution, System.Type, QuantConnect.TickType)", span="36-36"];
m45_137 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Tick.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m45_152 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="Tick.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="290-290"];
m45_48 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", span="177-177"];
m45_49 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="var csv = line.Split(',')", span="179-179"];
m45_51 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="Symbol = symbol", span="181-181"];
m45_50 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="180-180"];
m45_52 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="Time = DateTime.ParseExact(csv[0], DateFormat.Forex, CultureInfo.InvariantCulture)", span="182-182"];
m45_55 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="BidPrice = Convert.ToDecimal(csv[1], CultureInfo.InvariantCulture)", span="185-185"];
m45_56 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="AskPrice = Convert.ToDecimal(csv[2], CultureInfo.InvariantCulture)", span="186-186"];
m45_53 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="Value = (BidPrice + AskPrice) / 2", span="183-183"];
m45_54 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="TickType = TickType.Quote", span="184-184"];
m45_57 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string)", span="177-177"];
m45_14 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="117-117"];
m45_15 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Symbol = original.Symbol", span="119-119"];
m45_16 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Time = new DateTime(original.Time.Ticks)", span="120-120"];
m45_17 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Value = original.Value", span="121-121"];
m45_18 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="BidPrice = original.BidPrice", span="122-122"];
m45_19 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="AskPrice = original.AskPrice", span="123-123"];
m45_20 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Exchange = original.Exchange", span="124-124"];
m45_21 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="SaleCondition = original.SaleCondition", span="125-125"];
m45_22 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Quantity = original.Quantity", span="126-126"];
m45_23 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Suspicious = original.Suspicious", span="127-127"];
m45_25 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="TickType = original.TickType", span="129-129"];
m45_26 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="BidSize = original.BidSize", span="130-130"];
m45_27 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="AskSize = original.AskSize", span="131-131"];
m45_24 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="128-128"];
m45_28 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="117-117"];
m45_154 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", file="Tick.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="57-57"];
m45_163 [cluster="System.Convert.ToDecimal(decimal)", file="Tick.cs", label="Entry System.Convert.ToDecimal(decimal)", span="0-0"];
m45_155 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="371-371"];
m45_156 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="Value = lastTrade", span="373-373"];
m45_157 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="BidPrice = bidPrice", span="374-374"];
m45_158 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="AskPrice = askPrice", span="375-375"];
m45_159 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="BidSize = bidSize", span="376-376"];
m45_160 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="AskSize = askSize", span="377-377"];
m45_161 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="Quantity = Convert.ToDecimal(volume)", span="378-378"];
m45_162 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="371-371"];
m45_58 [cluster="string.Split(params char[])", file="Tick.cs", label="Entry string.Split(params char[])", span="0-0"];
m45_29 [cluster="System.DateTime.DateTime(long)", file="Tick.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m45_148 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="source += ''#'' + LeanData.GenerateZipEntryName(config.Symbol, date, config.Resolution, config.TickType)", span="357-357"];
m45_143 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="345-345"];
m45_144 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label=isLiveMode, span="347-347"];
m45_146 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="var source = LeanData.GenerateZipFilePath(Globals.DataFolder, config.Symbol, date, config.Resolution, config.TickType)", span="353-353"];
m45_147 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="config.SecurityType == SecurityType.Option ||\r\n                config.SecurityType == SecurityType.Future", span="354-355"];
m45_145 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="350-350"];
m45_149 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile, FileFormat.Csv);", span="359-359"];
m45_150 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="345-345"];
m45_39 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m45_40 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="163-163"];
m45_41 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="Time = time", span="164-164"];
m45_42 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="Symbol = symbol", span="165-165"];
m45_43 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="Value = last", span="166-166"];
m45_45 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="BidPrice = bid", span="168-168"];
m45_46 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="AskPrice = ask", span="169-169"];
m45_44 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="TickType = TickType.Quote", span="167-167"];
m45_47 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m45_74 [cluster="System.DateTime.AddMilliseconds(double)", file="Tick.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m45_61 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", span="195-195"];
m45_62 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="var csv = line.Split(',')", span="197-197"];
m45_64 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Symbol = symbol", span="199-199"];
m45_65 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Time = baseDate.Date.AddMilliseconds(csv[0].ToInt32())", span="200-200"];
m45_66 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Value = csv[1].ToDecimal() / GetScaleFactor(symbol.SecurityType)", span="201-201"];
m45_63 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="198-198"];
m45_68 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Quantity = csv[2].ToDecimal()", span="203-203"];
m45_69 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Exchange = csv[3].Trim()", span="204-204"];
m45_70 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="SaleCondition = csv[4]", span="205-205"];
m45_71 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Suspicious = csv[5].ToInt32() == 1", span="206-206"];
m45_67 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="TickType = TickType.Trade", span="202-202"];
m45_72 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", span="195-195"];
m45_138 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="327-327"];
m45_139 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label=isLiveMode, span="329-329"];
m45_141 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="return new Tick(config, line, date);", span="335-335"];
m45_140 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="return new Tick();", span="332-332"];
m45_142 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="327-327"];
m45_73 [cluster="string.ToInt32()", file="Tick.cs", label="Entry string.ToInt32()", span="297-297"];
m45_78 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="215-215"];
m45_79 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="219-219"];
m45_80 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="var scaleFactor = GetScaleFactor(config.SecurityType)", span="222-222"];
m45_81 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="config.SecurityType", span="224-224"];
m45_83 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="var csv = line.ToCsv(6)", span="228-228"];
m45_84 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Symbol = config.Symbol", span="229-229"];
m45_85 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="230-230"];
m45_86 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = config.GetNormalizedPrice(csv[1].ToDecimal() / scaleFactor)", span="231-231"];
m45_96 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="var csv = line.ToCsv(3)", span="247-247"];
m45_97 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Symbol = config.Symbol", span="248-248"];
m45_99 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="250-250"];
m45_105 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="var csv = line.ToCsv(7)", span="260-260"];
m45_106 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType = config.TickType", span="261-261"];
m45_107 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Time = date.Date.AddMilliseconds(csv[0].ToInt64()).ConvertTo(config.DataTimeZone, config.ExchangeTimeZone)", span="262-262"];
m45_108 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Symbol = config.Symbol", span="263-263"];
m45_110 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = config.GetNormalizedPrice(csv[1].ToDecimal()/scaleFactor)", span="267-267"];
m45_118 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="BidPrice = config.GetNormalizedPrice(csv[1].ToDecimal()/scaleFactor)", span="281-281"];
m45_121 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="AskPrice = config.GetNormalizedPrice(csv[3].ToDecimal()/scaleFactor)", span="286-286"];
m45_82 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Equity", span="226-226"];
m45_93 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Forex", span="243-243"];
m45_103 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Future", span="257-257"];
m45_88 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Quantity = csv[2].ToDecimal()", span="233-233"];
m45_89 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="csv.Count > 3", span="234-234"];
m45_90 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Exchange = csv[3]", span="236-236"];
m45_91 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SaleCondition = csv[4]", span="237-237"];
m45_92 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Suspicious = (csv[5] == ''1'')", span="238-238"];
m45_87 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType = TickType.Trade", span="232-232"];
m45_130 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label=Exception, span="313-313"];
m45_94 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Cfd", span="244-244"];
m45_95 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", color=red, community=0, file="Tick.cs", label="4: SecurityType.Crypto", span="245-245"];
m45_100 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="BidPrice = csv[1].ToDecimal()", span="251-251"];
m45_101 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="AskPrice = csv[2].ToDecimal()", span="252-252"];
m45_98 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType = TickType.Quote", span="249-249"];
m45_102 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = (BidPrice + AskPrice) / 2", span="253-253"];
m45_104 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SecurityType.Option", span="258-258"];
m45_111 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Quantity = csv[2].ToDecimal()", span="268-268"];
m45_112 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Exchange = csv[3]", span="269-269"];
m45_113 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="SaleCondition = csv[4]", span="270-270"];
m45_114 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Suspicious = csv[5] == ''1''", span="271-271"];
m45_116 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = csv[1].ToDecimal()", span="275-275"];
m45_117 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="csv[1].Length != 0", span="279-279"];
m45_119 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="BidSize = csv[2].ToDecimal()", span="282-282"];
m45_120 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="csv[3].Length != 0", span="284-284"];
m45_122 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="AskSize = csv[4].ToDecimal()", span="287-287"];
m45_123 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Exchange = csv[5]", span="289-289"];
m45_124 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Suspicious = csv[6] == ''1''", span="290-290"];
m45_109 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType == TickType.Trade", span="265-265"];
m45_115 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="TickType == TickType.OpenInterest", span="273-273"];
m45_125 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="BidPrice != 0", span="292-292"];
m45_126 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="AskPrice != 0", span="294-294"];
m45_129 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = AskPrice", span="305-305"];
m45_127 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = (BidPrice + AskPrice)/2m", span="296-296"];
m45_128 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Value = BidPrice", span="300-300"];
m45_131 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Log.Error(err)", span="315-315"];
m45_132 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="215-215"];
m45_136 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="Tick.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="277-277"];
m45_59 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="Tick.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m45_164 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.IsValid()", span="384-384"];
m45_165 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="Tick.cs", label="return (TickType == TickType.Trade && LastPrice > 0.0m && Quantity > 0) ||\r\n                   (TickType == TickType.Quote && AskPrice > 0.0m && AskSize > 0) ||\r\n                   (TickType == TickType.Quote && BidPrice > 0.0m && BidSize > 0) ||\r\n                   (TickType == TickType.OpenInterest && Value > 0);", span="386-389"];
m45_166 [cluster="QuantConnect.Data.Market.Tick.IsValid()", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.IsValid()", span="384-384"];
m45_151 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="Tick.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="44-44"];
m45_135 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="Tick.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m45_30 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m45_31 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="144-144"];
m45_32 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="Time = time", span="145-145"];
m45_33 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="Symbol = symbol", span="146-146"];
m45_34 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="Value = (bid + ask) / 2", span="147-147"];
m45_36 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="BidPrice = bid", span="149-149"];
m45_37 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="AskPrice = ask", span="150-150"];
m45_35 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="TickType = TickType.Quote", span="148-148"];
m45_38 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m45_75 [cluster="string.ToDecimal()", file="Tick.cs", label="Entry string.ToDecimal()", span="248-248"];
m45_76 [cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", span="401-401"];
m45_170 [cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="Tick.cs", label="return securityType == SecurityType.Equity || securityType == SecurityType.Option ? 10000m : 1;", span="403-403"];
m45_171 [cluster="QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.GetScaleFactor(QuantConnect.SecurityType)", span="401-401"];
m45_77 [cluster="string.Trim()", file="Tick.cs", label="Entry string.Trim()", span="0-0"];
m45_153 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="Tick.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="372-372"];
m45_133 [cluster="string.ToCsv(int)", file="Tick.cs", label="Entry string.ToCsv(int)", span="329-329"];
m45_0 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m45_1 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Value = 0", span="100-100"];
m45_2 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Time = new DateTime()", span="101-101"];
m45_3 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="DataType = MarketDataType.Tick", span="102-102"];
m45_4 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Symbol = Symbol.Empty", span="103-103"];
m45_5 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="TickType = TickType.Trade", span="104-104"];
m45_6 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Quantity = 0", span="105-105"];
m45_7 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Exchange = ''''", span="106-106"];
m45_8 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="SaleCondition = ''''", span="107-107"];
m45_9 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Suspicious = false", span="108-108"];
m45_10 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="BidSize = 0", span="109-109"];
m45_11 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="AskSize = 0", span="110-110"];
m45_12 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m45_13 [cluster="System.DateTime.DateTime()", file="Tick.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m45_134 [cluster="string.ToInt64()", file="Tick.cs", label="Entry string.ToInt64()", span="313-313"];
m45_167 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="396-396"];
m45_168 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="return new Tick(this);", span="398-398"];
m45_169 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Clone()", span="396-396"];
m45_60 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="Tick.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
m45_172 [file="Tick.cs", label="QuantConnect.Data.Market.Tick", span=""];
m46_54 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
m46_119 [cluster="Unk.ConvertOrderStatus", file="TradeBar.cs", label="Entry Unk.ConvertOrderStatus", span=""];
m46_39 [cluster="System.Math.Abs(decimal)", file="TradeBar.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m46_74 [cluster="Unk.All", file="TradeBar.cs", label="Entry Unk.All", span=""];
m46_121 [cluster="Unk.Where", file="TradeBar.cs", label="Entry Unk.Where", span=""];
m46_148 [cluster="Securities.Cash.cstr", file="TradeBar.cs", label="Entry Securities.Cash.cstr", span=""];
m46_8 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="payload.product_id = ConvertSymbol(order.Symbol)", span="55-55"];
m46_9 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="_algorithm.BrokerageModel.AccountType == AccountType.Margin", span="57-57"];
m46_56 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m46_58 [cluster="int.ToString()", file="TradeBar.cs", label="Entry int.ToString()", span="0-0"];
m46_161 [cluster="System.Collections.Generic.List<T>.Clear()", file="TradeBar.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m46_151 [cluster="Unk.ToUpper", file="TradeBar.cs", label="Entry Unk.ToUpper", span=""];
m46_72 [cluster="System.Collections.Generic.List<T>.List()", file="TradeBar.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m46_115 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="TradeBar.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m46_153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="288-288"];
m46_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var req = new RestRequest(''/orders'', Method.POST)", span="47-47"];
m46_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="dynamic payload = new ExpandoObject()", span="49-49"];
m46_75 [cluster="lambda expression", file="TradeBar.cs", label="Entry lambda expression", span="135-135"];
m46_125 [cluster="lambda expression", file="TradeBar.cs", label="c.Value.BrokerId.Contains(item.BrokerId.First())", span="204-204"];
m46_124 [cluster="lambda expression", file="TradeBar.cs", label="Entry lambda expression", span="204-204"];
m46_126 [cluster="lambda expression", file="TradeBar.cs", label="Exit lambda expression", span="204-204"];
m46_76 [cluster="lambda expression", file="TradeBar.cs", label=a, span="135-135"];
m46_77 [cluster="lambda expression", file="TradeBar.cs", label="Exit lambda expression", span="135-135"];
m46_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="83-83"];
m46_45 [cluster="Unk.GetAuthenticationToken", file="TradeBar.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m46_82 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="150-150"];
m46_97 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="TradeBar.cs", label="4: OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode,\r\n                                ''GDAXBrokerage.GetOpenOrders: Unsupported order type returned from brokerage: '' + item.Type))", span="180-181"];
m46_86 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="var response = RestClient.Execute(req)", span="158-158"];
m46_89 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label=orders, span="163-163"];
m46_95 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="item.Type == ''stop''", span="174-174"];
m46_99 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="order.BrokerId = new List<string> { item.Id.ToString() }", span="186-186"];
m46_111 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", color=green, community=0, file="TradeBar.cs", label="4: this.CachedOrderIDs[cached.First().Key] = item", span="207-207"];
m46_107 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label=list, span="200-200"];
m46_109 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="var cached = this.CachedOrderIDs.Where(c => c.Value.BrokerId.Contains(item.BrokerId.First()))", span="204-204"];
m46_110 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="cached.Any()", span="205-205"];
m46_85 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="GetAuthenticationToken(req)", span="157-157"];
m46_100 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="order.Symbol = ConvertProductId(item.ProductId)", span="187-187"];
m46_102 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="order.Status = ConvertOrderStatus(item)", span="189-189"];
m46_84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="var req = new RestRequest(''/orders?status=open&status=pending'', Method.GET)", span="156-156"];
m46_87 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="response != null", span="160-160"];
m46_88 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="var orders = JsonConvert.DeserializeObject<Messages.Order[]>(response.Content)", span="162-162"];
m46_104 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="list.Add(order)", span="191-191"];
m46_90 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="Order order = null", span="165-165"];
m46_105 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label=Exception, span="195-195"];
m46_91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="item.Type == ''market''", span="166-166"];
m46_92 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="order = new MarketOrder { Price = item.Price }", span="168-168"];
m46_93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="item.Type == ''limit''", span="170-170"];
m46_94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="order = new LimitOrder { LimitPrice = item.Price }", span="172-172"];
m46_96 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="order = new StopMarketOrder { StopPrice = item.Price }", span="176-176"];
m46_98 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="order.Quantity = item.Side == ''sell'' ? -item.Size : item.Size", span="185-185"];
m46_103 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="order.Price = item.Price", span="190-190"];
m46_83 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="var list = new List<Order>()", span="152-152"];
m46_108 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="item.Status.IsOpen()", span="202-202"];
m46_112 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="return list;", span="212-212"];
m46_101 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="order.Time = DateTime.UtcNow", span="188-188"];
m46_106 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="throw;", span="197-197"];
m46_113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="150-150"];
m46_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="104-104"];
m46_0 [cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="TradeBar.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="48-48"];
m46_30 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="TradeBar.cs", label="4: OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid })", span="100-100"];
m46_14 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="TradeBar.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="93-93"];
m46_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var message = $''GDAXBrokerage.PlaceOrder: Order failed Order Id: {order.Id} timestamp: {order.Time} quantity: {order.Quantity} content: {response.Content}''", span="102-102"];
m46_1 [cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="TradeBar.cs", label="Exit QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="48-48"];
m46_12 [cluster="QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="88-88"];
m46_13 [cluster="QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="88-88"];
m46_17 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="TradeBar.cs", label="Exit QuantConnect.Interfaces.IBrokerage.Disconnect()", span="98-98"];
m46_18 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="UnlockStream()", span="74-74"];
m46_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="CachedOrderIDs.ContainsKey(order.Id)", span="79-79"];
m46_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="81-81"];
m46_24 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="CachedOrderIDs.TryAdd(order.Id, order)", span="86-86"];
m46_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="90-90"];
m46_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted })", span="93-93"];
m46_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.PlaceOrder: Order completed successfully orderid:'' + order.Id.ToString()))", span="95-95"];
m46_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="UnlockStream()", span="96-96"];
m46_32 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, message))", span="103-103"];
m46_33 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="UnlockStream()", span="104-104"];
m46_4 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="TradeBar.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="60-60"];
m46_5 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="TradeBar.cs", label="Exit QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="60-60"];
m46_6 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="67-67"];
m46_7 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="67-67"];
m46_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="order.BrokerId.Add(brokerId)", span="85-85"];
m46_15 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="TradeBar.cs", label="Exit QuantConnect.Interfaces.IBrokerage.Connect()", span="93-93"];
m46_16 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="TradeBar.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="98-98"];
m46_10 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="81-81"];
m46_11 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="81-81"];
m46_19 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return false;", span="75-75"];
m46_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var brokerId = raw.Id", span="78-78"];
m46_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return true;", span="97-97"];
m46_34 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return false;", span="105-105"];
m46_35 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="43-43"];
m46_117 [cluster="Unk.ToString", file="TradeBar.cs", label="Entry Unk.ToString", span=""];
m46_48 [cluster="BrokerageMessageEvent.cstr", file="TradeBar.cs", label="Entry BrokerageMessageEvent.cstr", span=""];
m46_152 [cluster="Unk.Create", file="TradeBar.cs", label="Entry Unk.Create", span=""];
m46_37 [cluster="RestRequest.cstr", file="TradeBar.cs", label="Entry RestRequest.cstr", span=""];
m46_38 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="TradeBar.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m46_53 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="TradeBar.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m46_44 [cluster="Unk.AddJsonBody", file="TradeBar.cs", label="Entry Unk.AddJsonBody", span=""];
m46_47 [cluster="Unk.>", file="TradeBar.cs", label="Entry Unk.>", span=""];
m46_41 [cluster="string.ToLower()", file="TradeBar.cs", label="Entry string.ToLower()", span="0-0"];
m46_63 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="123-123"];
m46_67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="GetAuthenticationToken(req)", span="130-130"];
m46_68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var response = RestClient.Execute(req)", span="131-131"];
m46_66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var req = new RestRequest(''/orders/'' + id, Method.DELETE)", span="129-129"];
m46_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="success.Add(response.StatusCode == System.Net.HttpStatusCode.OK)", span="132-132"];
m46_64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var success = new List<bool>()", span="125-125"];
m46_65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="order.BrokerId", span="127-127"];
m46_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return success.All(a => a);", span="135-135"];
m46_71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="123-123"];
m46_81 [cluster="QuantConnect.Brokerages.IWebSocket.Close()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="45-45"];
m46_114 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="TradeBar.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m46_52 [cluster="Unk.Add", file="TradeBar.cs", label="Entry Unk.Add", span=""];
m46_128 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="TradeBar.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m46_129 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="220-220"];
m46_130 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="TradeBar.cs", label="return new List<Holding>();", span="227-227"];
m46_131 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="220-220"];
m46_40 [cluster="System.Enum.ToString()", file="TradeBar.cs", label="Entry System.Enum.ToString()", span="0-0"];
m46_49 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m46_78 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="141-141"];
m46_79 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="TradeBar.cs", label="WebSocket.Close()", span="143-143"];
m46_80 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="141-141"];
m46_122 [cluster="Unk.Any", file="TradeBar.cs", label="Entry Unk.Any", span=""];
m46_150 [cluster="Unk.GetConversionRate", file="TradeBar.cs", label="Entry Unk.GetConversionRate", span=""];
m46_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="286-286"];
m46_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TradeBar.cs", label="GetAuthenticationToken(req)", span="293-293"];
m46_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var response = RestClient.Execute(req)", span="294-294"];
m46_165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="292-292"];
m46_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="295-295"];
m46_164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TradeBar.cs", label="order.BrokerId", span="290-290"];
m46_169 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TradeBar.cs", label="totalFee += (decimal)fill.fill_fees", span="297-297"];
m46_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var totalFee = 0m", span="288-288"];
m46_170 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return totalFee;", span="300-300"];
m46_171 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="286-286"];
m46_46 [cluster="Unk.Execute", file="TradeBar.cs", label="Entry Unk.Execute", span=""];
m46_116 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="TradeBar.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="41-41"];
m46_51 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="TradeBar.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m46_118 [cluster="Unk.ConvertProductId", file="TradeBar.cs", label="Entry Unk.ConvertProductId", span=""];
m46_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="92-92"];
m46_57 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m46_132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="234-234"];
m46_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="var tick = GetTick(Symbol.Create(item.Currency + ''USD'', SecurityType.Crypto, Market.GDAX))", span="257-257"];
m46_135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="GetAuthenticationToken(req)", span="239-239"];
m46_136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="var response = RestClient.Execute(req)", span="240-240"];
m46_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="var rate = GetConversionRate(item.Currency)", span="252-252"];
m46_137 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="JsonConvert.DeserializeObject<Messages.Account[]>(response.Content)", span="242-242"];
m46_141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="new[] {''GBP'', ''EUR'' }.Contains(item.Currency)", span="250-250"];
m46_145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, tick.Price))", span="259-259"];
m46_134 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="var req = new RestRequest(''/accounts'', Method.GET)", span="238-238"];
m46_143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="list.Add(new Securities.Cash(item.Currency.ToUpper(), item.Balance, rate))", span="253-253"];
m46_140 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="list.Add(new Securities.Cash(item.Currency, item.Balance, 1))", span="248-248"];
m46_138 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="item.Balance > 0", span="244-244"];
m46_146 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="return list;", span="263-263"];
m46_139 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="item.Currency == ''USD''", span="246-246"];
m46_133 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="var list = new List<Securities.Cash>()", span="236-236"];
m46_147 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="234-234"];
m46_73 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TradeBar.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m46_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133"];
m46_149 [cluster="Unk.Contains", file="TradeBar.cs", label="Entry Unk.Contains", span=""];
m46_120 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="TradeBar.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m46_123 [cluster="Unk.First", file="TradeBar.cs", label="Entry Unk.First", span=""];
m46_160 [cluster="System.Collections.Generic.List<T>.ToArray()", file="TradeBar.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m46_127 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="TradeBar.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m46_154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="270-270"];
m46_155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="TradeBar.cs", label=Ticks, span="272-272"];
m46_156 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="TradeBar.cs", label="var copy = Ticks.ToArray()", span="274-274"];
m46_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="TradeBar.cs", label="Ticks.Clear()", span="275-275"];
m46_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="TradeBar.cs", label="return copy;", span="276-276"];
m46_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="270-270"];
m46_55 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="TradeBar.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="128-128"];
m46_172 [file="TradeBar.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m46_173 [file="TradeBar.cs", label=item, span=""];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_5 -> m3_8  [key=2, style=dotted];
m3_6 -> m3_0  [color=blue, key=0, style=bold];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_29  [color=red, key=0, style=bold];
m3_9 -> m3_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_9 -> m3_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_9 -> m3_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_9 -> m3_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_9 -> m3_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_31  [key=2, style=dotted];
m3_29 -> m3_20  [color=red, key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_15  [key=0, style=solid];
m3_12 -> m3_17  [key=0, style=solid];
m3_14 -> m3_19  [key=0, style=solid];
m3_14 -> m3_32  [key=2, style=dotted];
m3_16 -> m3_19  [key=0, style=solid];
m3_16 -> m3_33  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_34  [key=2, style=dotted];
m3_18 -> m3_20  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_18 -> m3_22  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_26 -> m3_20  [key=0, style=solid];
m3_26 -> m3_37  [key=2, style=dotted];
m3_26 -> m3_38  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_11  [color=darkorchid, key=3, label="Local variable QuantConnect.Interfaces.IStreamReader reader", style=bold];
m3_13 -> m3_14  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_19  [color=darkorchid, key=3, label="Local variable string raw", style=bold];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_30  [key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_35  [key=2, style=dotted];
m3_22 -> m3_28  [color=darkseagreen4, key=1, label=raw, style=dashed];
m3_21 -> m3_22  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_36  [key=2, style=dotted];
m3_28 -> m3_20  [key=0, style=solid];
m3_28 -> m3_39  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_29  [color=red, key=1, label=instances, style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=0, style=solid];
m3_25 -> m3_29  [color=red, key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_30 -> m3_9  [color=blue, key=0, style=bold];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_39 -> m3_19  [color=darkorchid, key=3, label="Parameter variable string line", style=bold];
m3_39 -> m3_27  [color=darkorchid, key=3, label="Parameter variable System.Exception exception", style=bold];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_42  [color=darkseagreen4, key=1, label=handler, style=dashed];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_44  [key=2, style=dotted];
m3_42 -> m3_45  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_43  [key=0, style=solid];
m3_43 -> m3_39  [color=blue, key=0, style=bold];
m3_38 -> m3_46  [key=0, style=solid];
m3_38 -> m3_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_38 -> m3_9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataSource source", style=bold];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_48  [color=darkseagreen4, key=1, label=handler, style=dashed];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_50  [key=2, style=dotted];
m3_48 -> m3_45  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_49  [key=0, style=solid];
m3_49 -> m3_38  [color=blue, key=0, style=bold];
m3_32 -> m3_0  [color=darkorchid, key=3, label="Field variable QuantConnect.Interfaces.IDataCacheProvider _dataCacheProvider", style=bold];
m3_51 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m3_51 -> m3_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader", style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_3 -> m4_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.CommissionReportEventArgs", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_0  [color=blue, key=0, style=bold];
m5_9 -> m5_1  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m5_9 -> m5_2  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m5_9 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m5_9 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m5_9 -> m5_5  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m5_9 -> m5_6  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m5_9 -> m5_7  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m6_66 -> m6_67  [key=0, style=solid];
m6_56 -> m6_58  [key=0, style=solid];
m6_56 -> m6_57  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [color=darkseagreen4, key=1, label=margin, style=dashed];
m6_0 -> m6_1  [color=green, key=0, style=solid];
m6_0 -> m6_2  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_0 -> m6_5  [color=green, key=1, label=decimal, style=dashed];
m6_0 -> m6_6  [color=green, key=1, label=decimal, style=dashed];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m6_1 -> m6_2  [color=green, key=0, style=solid];
m6_1 -> m6_3  [color=green, key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_7  [color=green, key=0, style=solid];
m6_2 -> m6_8  [color=green, key=2, style=dotted];
m6_3 -> m6_0  [color=blue, key=0, style=bold];
m6_3 -> m6_5  [color=green, key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_56  [key=0, style=solid];
m6_9 -> m6_12  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m6_9 -> m6_13  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_9  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m6_9 -> m6_11  [color=darkseagreen4, key=1, label=previousState, style=dashed];
m6_9 -> m6_18  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_23  [key=2, style=dotted];
m6_12 -> m6_24  [key=2, style=dotted];
m6_12 -> m6_15  [color=darkseagreen4, key=1, label=insightPeriod, style=dashed];
m6_12 -> m6_17  [color=darkseagreen4, key=1, label=insightPeriod, style=dashed];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_16  [key=0, style=solid];
m6_11 -> m6_8  [key=2, style=dotted];
m6_11 -> m6_14  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_18  [key=0, style=solid];
m6_10 -> m6_12  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_22  [key=2, style=dotted];
m6_10 -> m6_13  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_10 -> m6_18  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_14 -> m6_9  [color=blue, key=0, style=bold];
m6_14 -> m6_15  [key=0, style=solid];
m6_25 -> m6_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_25 -> m6_26  [key=0, style=solid];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m6_27 -> m6_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_27 -> m6_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m6_27 -> m6_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m6_27 -> m6_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_27 -> m6_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_29  [key=2, style=dotted];
m6_28 -> m6_25  [color=blue, key=0, style=bold];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_34  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_63  [key=0, style=solid];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_68  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_52  [color=blue, key=0, style=bold];
m6_65 -> m6_63  [color=blue, key=0, style=bold];
m6_67 -> m6_68  [key=0, style=solid];
m6_68 -> m6_66  [color=blue, key=0, style=bold];
m6_60 -> m6_60  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_66  [key=2, style=dotted];
m6_60 -> m6_67  [key=2, style=dotted];
m6_60 -> m6_62  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m6_60 -> m6_63  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m6_58 -> m6_81  [key=0, style=solid];
m6_58 -> m6_82  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m6_58 -> m6_59  [key=0, style=solid];
m6_81 -> m6_82  [key=0, style=solid];
m6_82 -> m6_83  [key=0, style=solid];
m6_83 -> m6_84  [key=0, style=solid];
m6_84 -> m6_58  [color=blue, key=0, style=bold];
m6_52 -> m6_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_54  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m6_52 -> m6_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_52 -> m6_58  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m6_52 -> m6_60  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_52 -> m6_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_52 -> m6_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_65  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_62  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m6_55 -> m6_64  [key=0, style=solid];
m6_57 -> m6_64  [key=0, style=solid];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_52  [key=2, style=dotted];
m6_29 -> m6_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_29 -> m6_31  [color=darkseagreen4, key=1, label=removed, style=dashed];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_18  [key=0, style=solid];
m6_15 -> m6_25  [key=2, style=dotted];
m6_15 -> m6_26  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_15  [color=blue, key=0, style=bold];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_25  [key=2, style=dotted];
m6_17 -> m6_26  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_8  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m6_8 -> m6_10  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m6_8 -> m6_11  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m6_5 -> m6_6  [color=green, key=0, style=solid];
m6_5 -> m6_21  [key=2, style=dotted];
m6_5 -> m6_15  [color=darkseagreen4, key=1, label=insights, style=dashed];
m6_5 -> m6_17  [color=darkseagreen4, key=1, label=insights, style=dashed];
m6_5 -> m6_19  [color=darkseagreen4, key=1, label=insights, style=dashed];
m6_6 -> m6_7  [color=green, key=0, style=solid];
m6_6 -> m6_19  [key=0, style=solid];
m6_4 -> m6_7  [key=0, style=solid];
m6_4 -> m6_8  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_7 -> m6_0  [color=blue, key=0, style=bold];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_7  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m6_7 -> m6_15  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_7 -> m6_17  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=0, style=solid];
m6_18 -> m6_6  [key=0, style=solid];
m6_18 -> m6_18  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m6_18 -> m6_21  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m6_18 -> m6_19  [key=0, style=solid];
m6_20 -> m6_4  [color=blue, key=0, style=bold];
m6_20 -> m6_8  [key=2, style=dotted];
m6_20 -> m6_24  [key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_69  [key=0, style=solid];
m6_22 -> m6_71  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m6_22 -> m6_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m6_22 -> m6_74  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m6_22 -> m6_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m6_22 -> m6_77  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.RelativeStrengthIndex", style=dashed];
m6_22 -> m6_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State", style=dashed];
m6_22 -> m6_8  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.RelativeStrengthIndex rsi", style=bold];
m6_22 -> m6_9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State previous", style=bold];
m6_22 -> m6_38  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State GetState", style=bold];
m6_22 -> m6_72  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State GetState", style=bold];
m6_22 -> m6_75  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State GetState", style=bold];
m6_22 -> m6_22  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.State GetState", style=bold];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_18  [color=blue, key=0, style=bold];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_34  [key=0, style=solid];
m6_30 -> m6_32  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m6_30 -> m6_33  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_51  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_42  [key=0, style=solid];
m6_36 -> m6_38  [color=darkseagreen4, key=1, label=added, style=dashed];
m6_36 -> m6_39  [color=darkseagreen4, key=1, label=added, style=dashed];
m6_36 -> m6_40  [color=darkseagreen4, key=1, label=added, style=dashed];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_57  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_59  [key=2, style=dotted];
m6_42 -> m6_60  [key=2, style=dotted];
m6_42 -> m6_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_30  [key=0, style=solid];
m6_31 -> m6_53  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_54  [key=2, style=dotted];
m6_32 -> m6_30  [color=blue, key=0, style=bold];
m6_33 -> m6_30  [key=0, style=solid];
m6_33 -> m6_55  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_21  [key=2, style=dotted];
m6_35 -> m6_41  [color=darkseagreen4, key=1, label=newSymbolData, style=dashed];
m6_35 -> m6_42  [color=darkseagreen4, key=1, label=newSymbolData, style=dashed];
m6_41 -> m6_36  [key=0, style=solid];
m6_41 -> m6_26  [key=2, style=dotted];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_36  [key=0, style=solid];
m6_37 -> m6_56  [key=2, style=dotted];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_58  [key=2, style=dotted];
m6_39 -> m6_41  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m6_40 -> m6_41  [key=0, style=solid];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_51  [key=0, style=solid];
m6_43 -> m6_45  [color=darkseagreen4, key=1, label=slice, style=dashed];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_43  [key=0, style=solid];
m6_44 -> m6_49  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_47  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_44  [key=0, style=solid];
m6_49 -> m6_61  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_50  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_48 -> m6_49  [key=0, style=solid];
m6_50 -> m6_44  [key=0, style=solid];
m6_50 -> m6_62  [key=2, style=dotted];
m6_51 -> m6_27  [color=blue, key=0, style=bold];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_71  [key=0, style=solid];
m6_69 -> m6_5  [color=green, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m6_69 -> m6_6  [color=green, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m6_69 -> m6_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m6_69 -> m6_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m6_69 -> m6_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m6_69 -> m6_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m6_69 -> m6_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m6_69 -> m6_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m6_69 -> m6_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m6_69 -> m6_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_73  [key=0, style=solid];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_76  [key=0, style=solid];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_76  [key=0, style=solid];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_79  [key=0, style=solid];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_79  [key=0, style=solid];
m6_79 -> m6_80  [key=0, style=solid];
m6_70 -> m6_80  [key=0, style=solid];
m6_72 -> m6_80  [key=0, style=solid];
m6_75 -> m6_80  [key=0, style=solid];
m6_78 -> m6_80  [key=0, style=solid];
m6_80 -> m6_22  [color=blue, key=0, style=bold];
m6_85 -> m6_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m6_85 -> m6_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m6_85 -> m6_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m6_85 -> m6_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m6_85 -> m6_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m6_85 -> m6_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m6_85 -> m6_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m6_85 -> m6_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m6_85 -> m6_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m6_85 -> m6_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m6_85 -> m6_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel", style=dashed];
m6_86 -> m6_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", style=dashed];
m6_86 -> m6_82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", style=dashed];
m6_86 -> m6_83  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.RsiAlphaModel.SymbolData", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label=Contract, style=dashed];
m7_0 -> m7_3  [color=darkseagreen4, key=1, label=Execution, style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_0  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [color=green, key=0, style=solid];
m7_6 -> m7_7  [color=green, key=0, style=solid];
m7_6 -> m7_8  [color=green, key=2, style=dotted];
m7_7 -> m7_5  [color=blue, key=0, style=bold];
m7_9 -> m7_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m7_9 -> m7_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m7_9 -> m7_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m7_9 -> m7_6  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m8_69 -> m8_74  [key=0, style=solid];
m8_74 -> m8_69  [color=blue, key=0, style=bold];
m8_89 -> m8_96  [key=0, style=solid];
m8_89 -> m8_101  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_98  [color=darkseagreen4, key=1, label=tick, style=dashed];
m8_96 -> m8_99  [color=darkseagreen4, key=1, label=tick, style=dashed];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_103  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_101 -> m8_104  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_101  [key=0, style=solid];
m8_98 -> m8_99  [key=0, style=solid];
m8_99 -> m8_100  [key=0, style=solid];
m8_100 -> m8_109  [key=0, style=solid];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_106  [key=0, style=solid];
m8_103 -> m8_104  [key=0, style=solid];
m8_104 -> m8_105  [key=0, style=solid];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_109  [color=darkseagreen4, key=1, label="out decimal", style=dashed];
m8_105 -> m8_109  [key=0, style=solid];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_109  [color=darkseagreen4, key=1, label="out decimal", style=dashed];
m8_108 -> m8_109  [key=0, style=solid];
m8_109 -> m8_89  [color=blue, key=0, style=bold];
m8_21 -> m8_51  [key=0, style=solid];
m8_21 -> m8_52  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m8_21 -> m8_53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m8_21 -> m8_56  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_54  [color=darkseagreen4, key=1, label=vwap, style=dashed];
m8_51 -> m8_57  [color=darkseagreen4, key=1, label=vwap, style=dashed];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_56  [key=0, style=solid];
m8_53 -> m8_54  [key=0, style=solid];
m8_56 -> m8_57  [key=0, style=solid];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_59  [key=0, style=solid];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_59  [key=0, style=solid];
m8_55 -> m8_60  [key=0, style=solid];
m8_59 -> m8_60  [key=0, style=solid];
m8_58 -> m8_60  [key=0, style=solid];
m8_60 -> m8_21  [color=blue, key=0, style=bold];
m8_71 -> m8_72  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_50  [key=2, style=dotted];
m8_48 -> m8_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m8_47 -> m8_48  [key=0, style=solid];
m8_49 -> m8_47  [color=blue, key=0, style=bold];
m8_72 -> m8_73  [key=0, style=solid];
m8_73 -> m8_71  [color=blue, key=0, style=bold];
m8_40 -> m8_61  [key=0, style=solid];
m8_40 -> m8_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m8_40 -> m8_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m8_40 -> m8_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_67  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_68  [key=2, style=dotted];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_70  [key=2, style=dotted];
m8_65 -> m8_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_69  [key=2, style=dotted];
m8_66 -> m8_40  [color=blue, key=0, style=bold];
m8_91 -> m8_92  [key=0, style=solid];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_94  [key=2, style=dotted];
m8_92 -> m8_95  [key=2, style=dotted];
m8_93 -> m8_91  [color=blue, key=0, style=bold];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_77  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m8_75 -> m8_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m8_75 -> m8_82  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m8_75 -> m8_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m8_76 -> m8_77  [key=0, style=solid];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_79  [key=0, style=solid];
m8_77 -> m8_89  [key=2, style=dotted];
m8_77 -> m8_83  [color=darkseagreen4, key=1, label=volume, style=dashed];
m8_77 -> m8_84  [color=darkseagreen4, key=1, label=volume, style=dashed];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_83  [key=0, style=solid];
m8_82 -> m8_83  [key=0, style=solid];
m8_86 -> m8_88  [key=0, style=solid];
m8_78 -> m8_88  [key=0, style=solid];
m8_78 -> m8_90  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_84 -> m8_85  [key=0, style=solid];
m8_80 -> m8_81  [key=0, style=solid];
m8_81 -> m8_82  [key=0, style=solid];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_87  [key=0, style=solid];
m8_87 -> m8_88  [key=0, style=solid];
m8_88 -> m8_75  [color=blue, key=0, style=bold];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m8_28 -> m8_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m8_28 -> m8_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m8_28 -> m8_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_32  [key=0, style=solid];
m8_29 -> m8_31  [color=darkseagreen4, key=1, label=added, style=dashed];
m8_31 -> m8_29  [key=0, style=solid];
m8_31 -> m8_40  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_38  [key=0, style=solid];
m8_32 -> m8_34  [color=darkseagreen4, key=1, label=removed, style=dashed];
m8_32 -> m8_35  [color=darkseagreen4, key=1, label=removed, style=dashed];
m8_32 -> m8_36  [color=darkseagreen4, key=1, label=removed, style=dashed];
m8_32 -> m8_37  [color=darkseagreen4, key=1, label=removed, style=dashed];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_32  [key=0, style=solid];
m8_35 -> m8_41  [key=2, style=dotted];
m8_37 -> m8_32  [key=0, style=solid];
m8_37 -> m8_43  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_29  [key=0, style=solid];
m8_30 -> m8_39  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_32  [key=0, style=solid];
m8_34 -> m8_20  [key=2, style=dotted];
m8_34 -> m8_37  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_42  [key=2, style=dotted];
m8_38 -> m8_28  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m8_0 -> m8_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m8_0 -> m8_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_18  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_19  [key=2, style=dotted];
m8_4 -> m8_8  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m8_4 -> m8_10  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m8_4 -> m8_13  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_25  [key=2, style=dotted];
m8_13 -> m8_26  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_19  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_17  [key=0, style=solid];
m8_2 -> m8_4  [color=darkseagreen4, key=1, label=target, style=dashed];
m8_2 -> m8_14  [color=darkseagreen4, key=1, label=target, style=dashed];
m8_2 -> m8_16  [color=darkseagreen4, key=1, label=target, style=dashed];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_6  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_16 -> m8_2  [key=0, style=solid];
m8_16 -> m8_27  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_2  [key=0, style=solid];
m8_6 -> m8_20  [key=2, style=dotted];
m8_6 -> m8_8  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_6 -> m8_9  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_6 -> m8_11  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_6 -> m8_13  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_5 -> m8_6  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_14  [key=0, style=solid];
m8_8 -> m8_21  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_23  [key=2, style=dotted];
m8_10 -> m8_24  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_2  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_22  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_11  [color=darkseagreen4, key=1, label=orderSize, style=dashed];
m8_11 -> m8_13  [color=darkseagreen4, key=1, label=orderSize, style=dashed];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_2  [key=0, style=solid];
m8_17 -> m8_0  [color=blue, key=0, style=bold];
m8_41 -> m8_44  [key=0, style=solid];
m8_41 -> m8_48  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_46  [key=2, style=dotted];
m8_44 -> m8_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_45 -> m8_41  [color=blue, key=0, style=bold];
m8_110 -> m8_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m8_110 -> m8_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m8_110 -> m8_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m8_110 -> m8_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m8_110 -> m8_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m8_110 -> m8_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m8_110 -> m8_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m8_110 -> m8_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m8_110 -> m8_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m8_110 -> m8_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m8_110 -> m8_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m8_111 -> m8_48  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m8_112 -> m8_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m8_112 -> m8_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m8_112 -> m8_64  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m8_112 -> m8_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m8_113 -> m8_77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m8_113 -> m8_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m8_113 -> m8_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m8_113 -> m8_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m8_113 -> m8_82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m8_113 -> m8_83  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m8_113 -> m8_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m8_113 -> m8_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m8_113 -> m8_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m11_25 -> m11_25  [color=darkorchid, key=3, label="Field variable int DefaultSettlementDays", style=bold];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolProperties", style=dashed];
m11_10 -> m11_11  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_6  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_7  [key=2, style=dotted];
m11_13 -> m11_8  [key=2, style=dotted];
m11_14 -> m11_9  [color=blue, key=0, style=bold];
m11_8 -> m11_15  [key=0, style=solid];
m11_8 -> m11_19  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_17  [key=2, style=dotted];
m11_15 -> m11_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_16 -> m11_8  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolProperties", style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_6  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_7  [key=2, style=dotted];
m11_4 -> m11_8  [key=2, style=dotted];
m11_5 -> m11_0  [color=blue, key=0, style=bold];
m11_17 -> m11_22  [key=0, style=solid];
m11_17 -> m11_28  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>", style=dashed];
m11_17 -> m11_15  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse> universeFunc", style=bold];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IDerivativeSecurityFilterUniverse", style=dashed];
m11_22 -> m11_22  [color=darkorchid, key=3, label="Local variable System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse> func", style=bold];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_25  [key=2, style=dotted];
m11_24 -> m11_17  [color=blue, key=0, style=bold];
m11_26 -> m11_27  [key=0, style=solid];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_21  [key=2, style=dotted];
m11_18 -> m11_19  [key=0, style=solid];
m11_20 -> m11_18  [color=blue, key=0, style=bold];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_30  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_29 -> m11_26  [color=blue, key=0, style=bold];
m11_31 -> m11_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m11_31 -> m11_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m11_31 -> m11_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m11_31 -> m11_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m11_31 -> m11_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m11_31 -> m11_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m11_31 -> m11_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m11_31 -> m11_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m11_31 -> m11_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m11_31 -> m11_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m11_32 -> m11_19  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_33 -> m11_19  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m11_34 -> m11_28  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>", style=dashed];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_39  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m12_36 -> m12_37  [key=0, style=solid];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_3  [key=2, style=dotted];
m12_39 -> m12_28  [key=2, style=dotted];
m12_39 -> m12_5  [key=2, style=dotted];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_26  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_38  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_40 -> m12_35  [color=blue, key=0, style=bold];
m12_11 -> m12_12  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_3  [key=2, style=dotted];
m12_13 -> m12_10  [key=2, style=dotted];
m12_13 -> m12_15  [key=2, style=dotted];
m12_13 -> m12_16  [key=2, style=dotted];
m12_13 -> m12_17  [key=2, style=dotted];
m12_13 -> m12_5  [key=2, style=dotted];
m12_14 -> m12_11  [color=blue, key=0, style=bold];
m12_6 -> m12_7  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_3  [key=2, style=dotted];
m12_7 -> m12_9  [key=2, style=dotted];
m12_7 -> m12_10  [key=2, style=dotted];
m12_8 -> m12_6  [color=blue, key=0, style=bold];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_22  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_18 -> m12_24  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_19 -> m12_20  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_24  [key=0, style=solid];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_3  [key=2, style=dotted];
m12_24 -> m12_28  [key=2, style=dotted];
m12_24 -> m12_5  [key=2, style=dotted];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_26  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_21  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_21 -> m12_23  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_21 -> m12_24  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_27  [key=2, style=dotted];
m12_23 -> m12_23  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_25 -> m12_18  [color=blue, key=0, style=bold];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_32  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_29 -> m12_33  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_30 -> m12_31  [key=0, style=solid];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_3  [key=2, style=dotted];
m12_33 -> m12_28  [key=2, style=dotted];
m12_33 -> m12_5  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_26  [key=2, style=dotted];
m12_34 -> m12_29  [color=blue, key=0, style=bold];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_44  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m12_41 -> m12_45  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_42 -> m12_43  [key=0, style=solid];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_47  [key=2, style=dotted];
m12_44 -> m12_48  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_49  [key=2, style=dotted];
m12_45 -> m12_5  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_3  [key=2, style=dotted];
m12_43 -> m12_45  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_46 -> m12_41  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_1 -> m12_4  [key=2, style=dotted];
m12_1 -> m12_5  [key=2, style=dotted];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_50 -> m12_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m12_50 -> m12_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m12_50 -> m12_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m12_50 -> m12_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m12_50 -> m12_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m12_50 -> m12_39  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m12_50 -> m12_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m13_0 -> m13_2  [color=darkorchid, key=3, label="method methodReturn decimal GetOrderFee", style=bold];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [color=red, key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid];
m13_2 -> m13_6  [key=0, style=solid];
m13_3 -> m13_4  [color=red, key=0, style=solid];
m13_3 -> m13_3  [color=red, key=3, label="Local variable decimal divisor", style=bold];
m13_5 -> m13_6  [key=0, style=solid];
m13_6 -> m13_0  [color=blue, key=0, style=bold];
m15_63 -> m15_64  [key=0, style=solid];
m15_64 -> m15_65  [key=0, style=solid];
m15_64 -> m15_47  [key=2, style=dotted];
m15_64 -> m15_67  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_65 -> m15_63  [color=blue, key=0, style=bold];
m15_79 -> m15_80  [key=0, style=solid];
m15_80 -> m15_81  [key=0, style=solid];
m15_80 -> m15_47  [key=2, style=dotted];
m15_80 -> m15_83  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_81 -> m15_79  [color=blue, key=0, style=bold];
m15_86 -> m15_87  [key=0, style=solid];
m15_87 -> m15_88  [key=0, style=solid];
m15_87 -> m15_54  [key=2, style=dotted];
m15_87 -> m15_90  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_88 -> m15_86  [color=blue, key=0, style=bold];
m15_97 -> m15_98  [key=0, style=solid];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_47  [key=2, style=dotted];
m15_98 -> m15_101  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_99 -> m15_97  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=2, style=dotted];
m15_1 -> m15_4  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_0  [color=blue, key=0, style=bold];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_0  [color=blue, key=0, style=bold];
m15_123 -> m15_124  [key=0, style=solid];
m15_124 -> m15_125  [key=0, style=solid];
m15_124 -> m15_127  [key=2, style=dotted];
m15_124 -> m15_116  [key=2, style=dotted];
m15_124 -> m15_117  [key=2, style=dotted];
m15_124 -> m15_5  [color=darkorchid, key=3, label="Local variable QuantConnect.Indicators.Minimum minOfLeft", style=bold];
m15_125 -> m15_126  [key=0, style=solid];
m15_126 -> m15_123  [color=blue, key=0, style=bold];
m15_24 -> m15_25  [color=green, key=0, style=solid];
m15_24 -> m15_17  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right", style=bold];
m15_24 -> m15_76  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right", style=bold];
m15_25 -> m15_26  [color=green, key=0, style=solid];
m15_25 -> m15_28  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m15_26 -> m15_24  [color=blue, key=0, style=bold];
m15_26 -> m15_27  [key=0, style=solid];
m15_26 -> m15_4  [key=2, style=dotted];
m15_31 -> m15_32  [color=green, key=0, style=solid];
m15_31 -> m15_33  [color=green, key=1, label=decimal, style=dashed];
m15_31 -> m15_34  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m15_31 -> m15_35  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m15_32 -> m15_33  [color=green, key=0, style=solid];
m15_32 -> m15_4  [key=2, style=dotted];
m15_33 -> m15_34  [color=green, key=0, style=solid];
m15_33 -> m15_35  [key=0, style=solid];
m15_34 -> m15_31  [color=blue, key=0, style=bold];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_30  [key=2, style=dotted];
m15_51 -> m15_52  [key=0, style=solid];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_54  [key=2, style=dotted];
m15_52 -> m15_56  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_53 -> m15_51  [color=blue, key=0, style=bold];
m15_69 -> m15_70  [key=0, style=solid];
m15_70 -> m15_71  [key=0, style=solid];
m15_70 -> m15_54  [key=2, style=dotted];
m15_70 -> m15_73  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_71 -> m15_69  [color=blue, key=0, style=bold];
m15_103 -> m15_104  [key=0, style=solid];
m15_104 -> m15_105  [key=0, style=solid];
m15_104 -> m15_54  [key=2, style=dotted];
m15_104 -> m15_107  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_105 -> m15_103  [color=blue, key=0, style=bold];
m15_106 -> m15_107  [key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_12  [key=0, style=solid];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_4  [key=2, style=dotted];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_11  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m15_12 -> m15_9  [color=blue, key=0, style=bold];
m15_12 -> m15_13  [key=0, style=solid];
m15_27 -> m15_28  [color=green, key=0, style=solid];
m15_27 -> m15_29  [key=0, style=solid];
m15_28 -> m15_29  [color=green, key=0, style=solid];
m15_28 -> m15_30  [key=2, style=dotted];
m15_35 -> m15_36  [color=green, key=0, style=solid];
m15_35 -> m15_4  [key=2, style=dotted];
m15_29 -> m15_25  [color=blue, key=0, style=bold];
m15_29 -> m15_30  [color=green, key=0, style=solid];
m15_36 -> m15_31  [color=blue, key=0, style=bold];
m15_36 -> m15_37  [color=green, key=0, style=solid];
m15_49 -> m15_50  [key=0, style=solid];
m15_48 -> m15_49  [key=0, style=solid];
m15_48 -> m15_16  [color=green, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_19  [color=green, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_22  [color=green, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_25  [color=green, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_28  [color=green, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_29  [color=green, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_32  [color=green, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_33  [color=green, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_36  [color=green, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_39  [color=green, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_41  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_48 -> m15_43  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_50 -> m15_48  [color=blue, key=0, style=bold];
m15_56 -> m15_57  [key=0, style=solid];
m15_55 -> m15_56  [key=0, style=solid];
m15_57 -> m15_55  [color=blue, key=0, style=bold];
m15_67 -> m15_68  [key=0, style=solid];
m15_66 -> m15_67  [key=0, style=solid];
m15_68 -> m15_66  [color=blue, key=0, style=bold];
m15_73 -> m15_74  [key=0, style=solid];
m15_72 -> m15_73  [key=0, style=solid];
m15_74 -> m15_72  [color=blue, key=0, style=bold];
m15_83 -> m15_84  [key=0, style=solid];
m15_83 -> m15_85  [key=2, style=dotted];
m15_82 -> m15_83  [key=0, style=solid];
m15_84 -> m15_82  [color=blue, key=0, style=bold];
m15_90 -> m15_91  [key=0, style=solid];
m15_90 -> m15_85  [key=2, style=dotted];
m15_89 -> m15_90  [key=0, style=solid];
m15_91 -> m15_89  [color=blue, key=0, style=bold];
m15_101 -> m15_102  [key=0, style=solid];
m15_100 -> m15_101  [key=0, style=solid];
m15_102 -> m15_100  [color=blue, key=0, style=bold];
m15_107 -> m15_108  [key=0, style=solid];
m15_108 -> m15_106  [color=blue, key=0, style=bold];
m15_128 -> m15_129  [key=0, style=solid];
m15_129 -> m15_130  [key=0, style=solid];
m15_129 -> m15_132  [key=2, style=dotted];
m15_129 -> m15_116  [key=2, style=dotted];
m15_129 -> m15_117  [key=2, style=dotted];
m15_129 -> m15_5  [color=darkorchid, key=3, label="Local variable QuantConnect.Indicators.SimpleMovingAverage smaOfLeft", style=bold];
m15_130 -> m15_131  [key=0, style=solid];
m15_131 -> m15_128  [color=blue, key=0, style=bold];
m15_62 -> m15_59  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right", style=bold];
m15_18 -> m15_19  [color=green, key=0, style=solid];
m15_18 -> m15_26  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m15_18 -> m15_28  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m15_19 -> m15_20  [color=green, key=0, style=solid];
m15_19 -> m15_32  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m15_19 -> m15_34  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m15_19 -> m15_35  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m15_20 -> m15_18  [color=blue, key=0, style=bold];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_24  [key=2, style=dotted];
m15_38 -> m15_39  [color=green, key=0, style=solid];
m15_38 -> m15_41  [key=2, style=dotted];
m15_38 -> m15_42  [key=2, style=dotted];
m15_39 -> m15_40  [color=green, key=0, style=solid];
m15_39 -> m15_41  [color=green, key=0, style=solid];
m15_39 -> m15_43  [key=2, style=dotted];
m15_40 -> m15_44  [key=0, style=solid];
m15_40 -> m15_37  [color=blue, key=0, style=bold];
m15_41 -> m15_42  [key=0, style=solid];
m15_41 -> m15_45  [key=2, style=dotted];
m15_41 -> m15_46  [key=2, style=dotted];
m15_42 -> m15_43  [key=0, style=solid];
m15_42 -> m15_47  [key=2, style=dotted];
m15_43 -> m15_44  [key=0, style=solid];
m15_43 -> m15_38  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right", style=bold];
m15_44 -> m15_38  [color=blue, key=0, style=bold];
m15_44 -> m15_45  [key=0, style=solid];
m15_92 -> m15_93  [key=0, style=solid];
m15_92 -> m15_94  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_92 -> m15_96  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> Times", style=bold];
m15_93 -> m15_94  [key=0, style=solid];
m15_93 -> m15_41  [key=2, style=dotted];
m15_93 -> m15_42  [key=2, style=dotted];
m15_94 -> m15_95  [key=0, style=solid];
m15_94 -> m15_96  [key=2, style=dotted];
m15_95 -> m15_92  [color=blue, key=0, style=bold];
m15_37 -> m15_35  [color=blue, key=0, style=bold];
m15_37 -> m15_38  [key=0, style=solid];
m15_37 -> m15_39  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_37 -> m15_43  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> Plus", style=bold];
m15_118 -> m15_119  [key=0, style=solid];
m15_119 -> m15_120  [key=0, style=solid];
m15_119 -> m15_122  [key=2, style=dotted];
m15_119 -> m15_116  [key=2, style=dotted];
m15_119 -> m15_117  [key=2, style=dotted];
m15_119 -> m15_5  [color=darkorchid, key=3, label="Local variable QuantConnect.Indicators.Maximum maxOfLeft", style=bold];
m15_120 -> m15_121  [key=0, style=solid];
m15_121 -> m15_118  [color=blue, key=0, style=bold];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_7  [color=darkseagreen4, key=1, label=TSecond, style=dashed];
m15_5 -> m15_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_5 -> m15_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_5 -> m15_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m15_5 -> m15_11  [color=darkseagreen4, key=1, label=TSecond, style=dashed];
m15_5 -> m15_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_5 -> m15_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m15_5 -> m15_5  [color=darkorchid, key=3, label="method methodReturn TSecond Of", style=bold];
m15_5 -> m15_109  [color=darkorchid, key=3, label="Parameter variable bool waitForFirstToReady", style=bold];
m15_5 -> m15_118  [color=darkorchid, key=3, label="Parameter variable bool waitForFirstToReady", style=bold];
m15_5 -> m15_123  [color=darkorchid, key=3, label="Parameter variable bool waitForFirstToReady", style=bold];
m15_5 -> m15_128  [color=darkorchid, key=3, label="Parameter variable bool waitForFirstToReady", style=bold];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_11  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m15_7 -> m15_8  [key=0, style=solid];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_5  [color=blue, key=0, style=bold];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m15_13 -> m15_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m15_13 -> m15_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m15_13 -> m15_18  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m15_13 -> m15_19  [color=darkseagreen4, key=1, label=TWeight, style=dashed];
m15_13 -> m15_24  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> WeightedBy", style=bold];
m15_14 -> m15_5  [color=blue, key=0, style=bold];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_22  [key=2, style=dotted];
m15_14 -> m15_18  [color=darkseagreen4, key=1, label=x, style=dashed];
m15_14 -> m15_26  [color=darkseagreen4, key=1, label=x, style=dashed];
m15_14 -> m15_27  [color=darkseagreen4, key=1, label=x, style=dashed];
m15_14 -> m15_19  [color=darkseagreen4, key=1, label=x, style=dashed];
m15_14 -> m15_33  [color=darkseagreen4, key=1, label=x, style=dashed];
m15_14 -> m15_34  [color=darkseagreen4, key=1, label=x, style=dashed];
m15_15 -> m15_16  [color=green, key=0, style=solid];
m15_15 -> m15_22  [key=2, style=dotted];
m15_15 -> m15_18  [color=darkseagreen4, key=1, label=y, style=dashed];
m15_15 -> m15_27  [color=darkseagreen4, key=1, label=y, style=dashed];
m15_15 -> m15_28  [color=darkseagreen4, key=1, label=y, style=dashed];
m15_15 -> m15_19  [color=darkseagreen4, key=1, label=y, style=dashed];
m15_15 -> m15_32  [color=darkseagreen4, key=1, label=y, style=dashed];
m15_15 -> m15_33  [color=darkseagreen4, key=1, label=y, style=dashed];
m15_16 -> m15_17  [color=green, key=0, style=solid];
m15_16 -> m15_23  [key=2, style=dotted];
m15_16 -> m15_18  [color=darkseagreen4, key=1, label=numerator, style=dashed];
m15_16 -> m15_28  [color=darkseagreen4, key=1, label=numerator, style=dashed];
m15_16 -> m15_19  [color=darkseagreen4, key=1, label=numerator, style=dashed];
m15_16 -> m15_34  [color=darkseagreen4, key=1, label=numerator, style=dashed];
m15_16 -> m15_20  [color=darkseagreen4, key=1, label=numerator, style=dashed];
m15_17 -> m15_15  [color=blue, key=0, style=bold];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_23  [key=2, style=dotted];
m15_17 -> m15_19  [color=darkseagreen4, key=1, label=denominator, style=dashed];
m15_17 -> m15_35  [color=darkseagreen4, key=1, label=denominator, style=dashed];
m15_17 -> m15_20  [color=darkseagreen4, key=1, label=denominator, style=dashed];
m15_75 -> m15_76  [key=0, style=solid];
m15_75 -> m15_77  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_75 -> m15_24  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> Over", style=bold];
m15_76 -> m15_77  [key=0, style=solid];
m15_76 -> m15_41  [key=2, style=dotted];
m15_76 -> m15_42  [key=2, style=dotted];
m15_77 -> m15_78  [key=0, style=solid];
m15_77 -> m15_24  [key=2, style=dotted];
m15_78 -> m15_75  [color=blue, key=0, style=bold];
m15_96 -> m15_93  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> right", style=bold];
m15_23 -> m15_21  [color=blue, key=0, style=bold];
m15_45 -> m15_45  [color=darkorchid, key=3, label="method methodReturn TSecond Of", style=bold];
m15_45 -> m15_46  [key=0, style=solid];
m15_45 -> m15_47  [key=2, style=dotted];
m15_45 -> m15_49  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_60  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m15_58 -> m15_62  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.CompositeIndicator<QuantConnect.Indicators.IndicatorDataPoint> Minus", style=bold];
m15_59 -> m15_60  [key=0, style=solid];
m15_59 -> m15_41  [key=2, style=dotted];
m15_59 -> m15_42  [key=2, style=dotted];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_62  [key=2, style=dotted];
m15_61 -> m15_58  [color=blue, key=0, style=bold];
m15_46 -> m15_44  [color=blue, key=0, style=bold];
m15_22 -> m15_23  [color=green, key=0, style=solid];
m15_30 -> m15_27  [color=blue, key=0, style=bold];
m15_109 -> m15_110  [key=0, style=solid];
m15_109 -> m15_111  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m15_110 -> m15_111  [key=0, style=solid];
m15_110 -> m15_114  [key=2, style=dotted];
m15_111 -> m15_112  [key=0, style=solid];
m15_111 -> m15_115  [key=2, style=dotted];
m15_111 -> m15_116  [key=2, style=dotted];
m15_111 -> m15_117  [key=2, style=dotted];
m15_111 -> m15_5  [color=darkorchid, key=3, label="Local variable QuantConnect.Indicators.ExponentialMovingAverage emaOfLeft", style=bold];
m15_112 -> m15_113  [key=0, style=solid];
m15_113 -> m15_109  [color=blue, key=0, style=bold];
m15_21 -> m15_13  [color=blue, key=0, style=bold];
m15_21 -> m15_22  [color=green, key=0, style=solid];
m15_133 -> m15_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m15_134 -> m15_10  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_135 -> m15_11  [color=darkseagreen4, key=1, label=TSecond, style=dashed];
m15_136 -> m15_26  [color=darkseagreen4, key=1, label=x, style=dashed];
m15_136 -> m15_27  [color=darkseagreen4, key=1, label=x, style=dashed];
m15_136 -> m15_33  [color=darkseagreen4, key=1, label=x, style=dashed];
m15_136 -> m15_34  [color=darkseagreen4, key=1, label=x, style=dashed];
m15_137 -> m15_27  [color=darkseagreen4, key=1, label=y, style=dashed];
m15_137 -> m15_28  [color=darkseagreen4, key=1, label=y, style=dashed];
m15_137 -> m15_32  [color=darkseagreen4, key=1, label=y, style=dashed];
m15_137 -> m15_33  [color=darkseagreen4, key=1, label=y, style=dashed];
m15_138 -> m15_28  [color=darkseagreen4, key=1, label=numerator, style=dashed];
m15_138 -> m15_34  [color=darkseagreen4, key=1, label=numerator, style=dashed];
m15_139 -> m15_35  [color=darkseagreen4, key=1, label=denominator, style=dashed];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_8  [color=darkseagreen4, key=1, label=ribbonCount, style=dashed];
m17_6 -> m17_6  [color=darkorchid, key=3, label="Local variable int ribbonCount", style=bold];
m17_7 -> m17_6  [color=blue, key=0, style=bold];
m17_7 -> m17_4  [color=darkorchid, key=3, label="Local variable int ribbonInterval", style=bold];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_18  [color=darkseagreen4, key=1, label=ribbonInterval, style=dashed];
m17_17 -> m17_18  [key=0, style=solid];
m17_18 -> m17_19  [key=0, style=solid];
m17_18 -> m17_20  [key=2, style=dotted];
m17_19 -> m17_17  [color=blue, key=0, style=bold];
m17_21 -> m17_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m17_21 -> m17_22  [key=0, style=solid];
m17_26 -> m17_26  [color=green, key=3, label="Local variable decimal tolerance", style=bold];
m17_26 -> m17_27  [color=green, key=0, style=solid];
m17_26 -> m17_29  [color=green, key=1, label=tolerance, style=dashed];
m17_24 -> m17_26  [color=green, key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_27 -> m17_28  [color=green, key=0, style=solid];
m17_27 -> m17_32  [color=green, key=1, label=holdings, style=dashed];
m17_29 -> m17_30  [key=0, style=solid];
m17_29 -> m17_32  [key=0, style=solid];
m17_28 -> m17_29  [color=green, key=0, style=solid];
m17_28 -> m17_32  [color=green, key=0, style=solid];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_35  [key=0, style=solid];
m17_35 -> m17_28  [color=green, key=3, label="Property variable System.DateTime UniversalTime", style=bold];
m17_35 -> m17_36  [key=0, style=solid];
m17_35 -> m17_43  [key=2, style=dotted];
m17_22 -> m17_24  [key=0, style=solid];
m17_22 -> m17_23  [key=0, style=solid];
m17_25 -> m17_39  [key=0, style=solid];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_40  [key=2, style=dotted];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_41  [key=2, style=dotted];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_40  [key=2, style=dotted];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_42  [key=2, style=dotted];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_44  [key=2, style=dotted];
m17_37 -> m17_38  [key=0, style=solid];
m17_37 -> m17_45  [key=2, style=dotted];
m17_38 -> m17_39  [key=0, style=solid];
m17_23 -> m17_39  [key=0, style=solid];
m17_39 -> m17_21  [color=blue, key=0, style=bold];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_11  [key=2, style=dotted];
m17_3 -> m17_2  [color=blue, key=0, style=bold];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_12  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_13  [key=2, style=dotted];
m17_5 -> m17_4  [color=blue, key=0, style=bold];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_13  [key=2, style=dotted];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_10  [key=2, style=dotted];
m17_1 -> m17_0  [color=blue, key=0, style=bold];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_14  [key=2, style=dotted];
m17_8 -> m17_15  [key=2, style=dotted];
m17_8 -> m17_16  [key=2, style=dotted];
m17_8 -> m17_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_9 -> m17_0  [color=blue, key=0, style=bold];
m17_46 -> m17_27  [color=green, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_46 -> m17_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Examples.MovingAverageCrossAlgorithm", style=dashed];
m17_47 -> m17_18  [color=darkseagreen4, key=1, label=ribbonInterval, style=dashed];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_2  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m21_0 -> m21_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_0 -> m21_4  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m21_0 -> m21_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_0 -> m21_6  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m21_0 -> m21_7  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m21_1 -> m21_2  [key=0, style=solid];
m21_2 -> m21_3  [key=0, style=solid];
m21_3 -> m21_4  [key=0, style=solid];
m21_4 -> m21_0  [color=blue, key=0, style=bold];
m21_4 -> m21_5  [key=0, style=solid];
m21_9 -> m21_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_9 -> m21_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_9 -> m21_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_9 -> m21_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m21_9 -> m21_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m21_9 -> m21_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m21_9 -> m21_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m21_38 -> m21_39  [color=green, key=0, style=solid];
m21_38 -> m21_45  [color=green, key=1, label=ticker, style=dashed];
m21_38 -> m21_47  [color=green, key=1, label=ticker, style=dashed];
m21_38 -> m21_48  [color=green, key=1, label=ticker, style=dashed];
m21_12 -> m21_38  [color=green, key=1, label=parts, style=dashed];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_53  [key=2, style=dotted];
m21_12 -> m21_18  [color=darkseagreen4, key=1, label=parts, style=dashed];
m21_12 -> m21_22  [color=darkseagreen4, key=1, label=parts, style=dashed];
m21_12 -> m21_25  [color=darkseagreen4, key=1, label=parts, style=dashed];
m21_12 -> m21_28  [color=darkseagreen4, key=1, label=parts, style=dashed];
m21_12 -> m21_29  [color=darkseagreen4, key=1, label=parts, style=dashed];
m21_20 -> m21_38  [color=green, key=1, label=securityTypeOffset, style=dashed];
m21_20 -> m21_21  [key=0, style=solid];
m21_20 -> m21_22  [color=darkseagreen4, key=1, label=securityTypeOffset, style=dashed];
m21_20 -> m21_28  [color=darkseagreen4, key=1, label=securityTypeOffset, style=dashed];
m21_20 -> m21_29  [color=darkseagreen4, key=1, label=securityTypeOffset, style=dashed];
m21_20 -> m21_31  [color=darkseagreen4, key=1, label=securityTypeOffset, style=dashed];
m21_20 -> m21_39  [color=darkseagreen4, key=1, label=securityTypeOffset, style=dashed];
m21_20 -> m21_13  [color=darkorchid, key=3, label="Local variable int securityTypeOffset", style=bold];
m21_20 -> m21_14  [color=darkorchid, key=3, label="Local variable int securityTypeOffset", style=bold];
m21_31 -> m21_38  [color=green, key=0, style=solid];
m21_31 -> m21_32  [key=0, style=solid];
m21_24 -> m21_38  [color=green, key=1, label=securityTypeOffset, style=dashed];
m21_24 -> m21_31  [color=darkseagreen4, key=1, label=securityTypeOffset, style=dashed];
m21_24 -> m21_25  [key=0, style=solid];
m21_24 -> m21_28  [color=darkseagreen4, key=1, label=securityTypeOffset, style=dashed];
m21_24 -> m21_29  [color=darkseagreen4, key=1, label=securityTypeOffset, style=dashed];
m21_24 -> m21_39  [color=darkseagreen4, key=1, label=securityTypeOffset, style=dashed];
m21_17 -> m21_38  [color=green, key=1, label=TickerOffset, style=dashed];
m21_17 -> m21_17  [color=darkorchid, key=3, label="Local variable int TickerOffset", style=bold];
m21_17 -> m21_18  [key=0, style=solid];
m21_39 -> m21_40  [key=0, style=solid];
m21_39 -> m21_60  [key=2, style=dotted];
m21_39 -> m21_59  [key=2, style=dotted];
m21_39 -> m21_61  [key=2, style=dotted];
m21_39 -> m21_50  [color=darkseagreen4, key=1, label=date, style=dashed];
m21_45 -> m21_49  [key=0, style=solid];
m21_45 -> m21_64  [key=2, style=dotted];
m21_45 -> m21_50  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_47 -> m21_49  [key=0, style=solid];
m21_47 -> m21_65  [key=2, style=dotted];
m21_47 -> m21_50  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_48 -> m21_49  [key=0, style=solid];
m21_48 -> m21_66  [key=2, style=dotted];
m21_48 -> m21_50  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_39  [color=darkseagreen4, key=1, label=filename, style=dashed];
m21_11 -> m21_42  [color=darkseagreen4, key=1, label=filename, style=dashed];
m21_11 -> m21_49  [color=darkseagreen4, key=1, label=filename, style=dashed];
m21_11 -> m21_50  [color=darkseagreen4, key=1, label=filename, style=dashed];
m21_13 -> m21_20  [color=darkseagreen4, key=1, label=LowResSecurityTypeOffset, style=dashed];
m21_13 -> m21_31  [color=darkseagreen4, key=1, label=LowResSecurityTypeOffset, style=dashed];
m21_13 -> m21_39  [color=darkseagreen4, key=1, label=LowResSecurityTypeOffset, style=dashed];
m21_13 -> m21_13  [color=darkorchid, key=3, label="Local variable int LowResSecurityTypeOffset", style=bold];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_18  [color=darkseagreen4, key=1, label=LowResSecurityTypeOffset, style=dashed];
m21_18 -> m21_20  [key=0, style=solid];
m21_18 -> m21_19  [key=0, style=solid];
m21_22 -> m21_23  [key=0, style=solid];
m21_25 -> m21_26  [key=0, style=solid];
m21_28 -> m21_45  [color=darkseagreen4, key=1, label=market, style=dashed];
m21_28 -> m21_47  [color=darkseagreen4, key=1, label=market, style=dashed];
m21_28 -> m21_48  [color=darkseagreen4, key=1, label=market, style=dashed];
m21_28 -> m21_29  [key=0, style=solid];
m21_28 -> m21_50  [color=darkseagreen4, key=1, label=market, style=dashed];
m21_29 -> m21_30  [key=0, style=solid];
m21_29 -> m21_56  [key=2, style=dotted];
m21_29 -> m21_50  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m21_21 -> m21_22  [key=0, style=solid];
m21_14 -> m21_24  [color=darkseagreen4, key=1, label=HighResSecurityTypeOffset, style=dashed];
m21_14 -> m21_14  [color=darkorchid, key=3, label="Local variable int HighResSecurityTypeOffset", style=bold];
m21_14 -> m21_15  [key=0, style=solid];
m21_30 -> m21_31  [key=0, style=solid];
m21_32 -> m21_45  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_32 -> m21_47  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_32 -> m21_48  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_32 -> m21_33  [key=0, style=solid];
m21_32 -> m21_57  [key=2, style=dotted];
m21_32 -> m21_34  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_32 -> m21_37  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_48  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_23 -> m21_28  [key=0, style=solid];
m21_23 -> m21_55  [key=2, style=dotted];
m21_23 -> m21_33  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_23 -> m21_36  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_23 -> m21_41  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_23 -> m21_46  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_23 -> m21_50  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_16 -> m21_17  [key=0, style=solid];
m21_16 -> m21_29  [color=darkseagreen4, key=1, label=ResolutionOffset, style=dashed];
m21_16 -> m21_16  [color=darkorchid, key=3, label="Local variable int ResolutionOffset", style=bold];
m21_36 -> m21_39  [key=0, style=solid];
m21_36 -> m21_37  [key=0, style=solid];
m21_37 -> m21_39  [key=0, style=solid];
m21_37 -> m21_45  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_37 -> m21_47  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_37 -> m21_48  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_37 -> m21_37  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_37 -> m21_58  [key=2, style=dotted];
m21_37 -> m21_59  [key=2, style=dotted];
m21_40 -> m21_41  [key=0, style=solid];
m21_50 -> m21_51  [key=0, style=solid];
m21_50 -> m21_0  [key=2, style=dotted];
m21_35 -> m21_45  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_35 -> m21_47  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_35 -> m21_48  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_35 -> m21_36  [key=0, style=solid];
m21_35 -> m21_37  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m21_35 -> m21_59  [key=2, style=dotted];
m21_35 -> m21_58  [key=2, style=dotted];
m21_44 -> m21_45  [key=0, style=solid];
m21_44 -> m21_56  [key=2, style=dotted];
m21_49 -> m21_50  [key=0, style=solid];
m21_49 -> m21_67  [key=2, style=dotted];
m21_46 -> m21_47  [key=0, style=solid];
m21_46 -> m21_48  [key=0, style=solid];
m21_26 -> m21_48  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_26 -> m21_28  [key=0, style=solid];
m21_26 -> m21_36  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_26 -> m21_50  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_26 -> m21_46  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_26 -> m21_27  [key=0, style=solid];
m21_26 -> m21_55  [key=2, style=dotted];
m21_26 -> m21_33  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_26 -> m21_41  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m21_10 -> m21_11  [key=0, style=solid];
m21_10 -> m21_52  [key=2, style=dotted];
m21_19 -> m21_51  [key=0, style=solid];
m21_19 -> m21_54  [key=2, style=dotted];
m21_27 -> m21_51  [key=0, style=solid];
m21_27 -> m21_54  [key=2, style=dotted];
m21_42 -> m21_43  [key=0, style=solid];
m21_42 -> m21_57  [key=2, style=dotted];
m21_15 -> m21_28  [color=darkseagreen4, key=1, label=MarketOffset, style=dashed];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_15  [color=darkorchid, key=3, label="Local variable int MarketOffset", style=bold];
m21_33 -> m21_36  [key=0, style=solid];
m21_33 -> m21_34  [key=0, style=solid];
m21_34 -> m21_59  [key=2, style=dotted];
m21_34 -> m21_35  [key=0, style=solid];
m21_34 -> m21_58  [key=2, style=dotted];
m21_41 -> m21_46  [key=0, style=solid];
m21_41 -> m21_42  [key=0, style=solid];
m21_43 -> m21_44  [key=0, style=solid];
m21_43 -> m21_62  [key=2, style=dotted];
m21_43 -> m21_63  [key=2, style=dotted];
m21_51 -> m21_9  [color=blue, key=0, style=bold];
m21_8 -> m21_0  [color=blue, key=0, style=bold];
m21_5 -> m21_6  [key=0, style=solid];
m21_6 -> m21_7  [key=0, style=solid];
m21_6 -> m21_8  [key=2, style=dotted];
m21_7 -> m21_5  [color=blue, key=0, style=bold];
m21_7 -> m21_8  [key=0, style=solid];
m21_68 -> m21_1  [color=darkseagreen4, key=1, label="QuantConnect.Util.LeanDataPathComponents", style=dashed];
m21_68 -> m21_2  [color=darkseagreen4, key=1, label="QuantConnect.Util.LeanDataPathComponents", style=dashed];
m21_68 -> m21_3  [color=darkseagreen4, key=1, label="QuantConnect.Util.LeanDataPathComponents", style=dashed];
m21_68 -> m21_4  [color=darkseagreen4, key=1, label="QuantConnect.Util.LeanDataPathComponents", style=dashed];
m21_68 -> m21_5  [color=darkseagreen4, key=1, label="QuantConnect.Util.LeanDataPathComponents", style=dashed];
m21_68 -> m21_6  [color=darkseagreen4, key=1, label="QuantConnect.Util.LeanDataPathComponents", style=dashed];
m21_68 -> m21_7  [color=darkseagreen4, key=1, label="QuantConnect.Util.LeanDataPathComponents", style=dashed];
m22_20 -> m22_24  [key=0, style=solid];
m22_20 -> m22_8  [key=2, style=dotted];
m22_106 -> m22_107  [key=0, style=solid];
m22_107 -> m22_113  [key=2, style=dotted];
m22_107 -> m22_108  [key=0, style=solid];
m22_107 -> m22_112  [key=2, style=dotted];
m22_108 -> m22_113  [key=2, style=dotted];
m22_108 -> m22_109  [key=0, style=solid];
m22_108 -> m22_112  [key=2, style=dotted];
m22_109 -> m22_113  [key=2, style=dotted];
m22_109 -> m22_110  [key=0, style=solid];
m22_109 -> m22_112  [key=2, style=dotted];
m22_110 -> m22_114  [key=2, style=dotted];
m22_110 -> m22_112  [key=2, style=dotted];
m22_110 -> m22_111  [key=0, style=solid];
m22_111 -> m22_106  [color=blue, key=0, style=bold];
m22_11 -> m22_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_14  [key=0, style=solid];
m22_11 -> m22_8  [key=2, style=dotted];
m22_13 -> m22_5  [key=2, style=dotted];
m22_13 -> m22_14  [key=0, style=solid];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_15  [key=2, style=dotted];
m22_14 -> m22_11  [color=blue, key=0, style=bold];
m22_14 -> m22_9  [color=blue, key=0, style=bold];
m22_142 -> m22_143  [key=0, style=solid];
m22_148 -> m22_5  [key=2, style=dotted];
m22_148 -> m22_149  [key=0, style=solid];
m22_149 -> m22_5  [key=2, style=dotted];
m22_149 -> m22_150  [key=0, style=solid];
m22_150 -> m22_5  [key=2, style=dotted];
m22_150 -> m22_151  [key=0, style=solid];
m22_151 -> m22_5  [key=2, style=dotted];
m22_151 -> m22_152  [key=0, style=solid];
m22_151 -> m22_196  [key=2, style=dotted];
m22_152 -> m22_5  [key=2, style=dotted];
m22_152 -> m22_153  [key=0, style=solid];
m22_152 -> m22_197  [key=2, style=dotted];
m22_155 -> m22_5  [key=2, style=dotted];
m22_155 -> m22_156  [key=0, style=solid];
m22_156 -> m22_5  [key=2, style=dotted];
m22_156 -> m22_157  [key=0, style=solid];
m22_157 -> m22_5  [key=2, style=dotted];
m22_157 -> m22_158  [key=0, style=solid];
m22_158 -> m22_5  [key=2, style=dotted];
m22_158 -> m22_159  [key=0, style=solid];
m22_158 -> m22_196  [key=2, style=dotted];
m22_159 -> m22_5  [key=2, style=dotted];
m22_159 -> m22_160  [key=0, style=solid];
m22_159 -> m22_197  [key=2, style=dotted];
m22_162 -> m22_5  [key=2, style=dotted];
m22_162 -> m22_163  [key=0, style=solid];
m22_163 -> m22_5  [key=2, style=dotted];
m22_163 -> m22_164  [key=0, style=solid];
m22_164 -> m22_5  [key=2, style=dotted];
m22_164 -> m22_165  [key=0, style=solid];
m22_165 -> m22_5  [key=2, style=dotted];
m22_165 -> m22_166  [key=0, style=solid];
m22_165 -> m22_196  [key=2, style=dotted];
m22_166 -> m22_5  [key=2, style=dotted];
m22_166 -> m22_167  [key=0, style=solid];
m22_169 -> m22_5  [key=2, style=dotted];
m22_169 -> m22_170  [key=0, style=solid];
m22_170 -> m22_5  [key=2, style=dotted];
m22_170 -> m22_171  [key=0, style=solid];
m22_171 -> m22_5  [key=2, style=dotted];
m22_171 -> m22_172  [key=0, style=solid];
m22_172 -> m22_5  [key=2, style=dotted];
m22_172 -> m22_173  [key=0, style=solid];
m22_172 -> m22_196  [key=2, style=dotted];
m22_173 -> m22_5  [key=2, style=dotted];
m22_173 -> m22_174  [key=0, style=solid];
m22_173 -> m22_197  [key=2, style=dotted];
m22_176 -> m22_5  [key=2, style=dotted];
m22_176 -> m22_177  [key=0, style=solid];
m22_177 -> m22_5  [key=2, style=dotted];
m22_177 -> m22_178  [key=0, style=solid];
m22_178 -> m22_5  [key=2, style=dotted];
m22_178 -> m22_179  [key=0, style=solid];
m22_179 -> m22_5  [key=2, style=dotted];
m22_179 -> m22_180  [key=0, style=solid];
m22_179 -> m22_196  [key=2, style=dotted];
m22_180 -> m22_5  [key=2, style=dotted];
m22_180 -> m22_181  [key=0, style=solid];
m22_183 -> m22_5  [key=2, style=dotted];
m22_183 -> m22_184  [key=0, style=solid];
m22_184 -> m22_5  [key=2, style=dotted];
m22_184 -> m22_185  [key=0, style=solid];
m22_185 -> m22_5  [key=2, style=dotted];
m22_185 -> m22_186  [key=0, style=solid];
m22_186 -> m22_5  [key=2, style=dotted];
m22_186 -> m22_187  [key=0, style=solid];
m22_186 -> m22_196  [key=2, style=dotted];
m22_187 -> m22_5  [key=2, style=dotted];
m22_187 -> m22_188  [key=0, style=solid];
m22_187 -> m22_197  [key=2, style=dotted];
m22_190 -> m22_5  [key=2, style=dotted];
m22_190 -> m22_191  [key=0, style=solid];
m22_191 -> m22_5  [key=2, style=dotted];
m22_191 -> m22_192  [key=0, style=solid];
m22_192 -> m22_5  [key=2, style=dotted];
m22_192 -> m22_193  [key=0, style=solid];
m22_193 -> m22_5  [key=2, style=dotted];
m22_193 -> m22_194  [key=0, style=solid];
m22_193 -> m22_196  [key=2, style=dotted];
m22_194 -> m22_5  [key=2, style=dotted];
m22_194 -> m22_195  [key=0, style=solid];
m22_194 -> m22_197  [key=2, style=dotted];
m22_147 -> m22_148  [key=0, style=solid];
m22_147 -> m22_149  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_147 -> m22_150  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m22_147 -> m22_151  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_147 -> m22_152  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_147 -> m22_141  [key=2, style=dotted];
m22_147 -> m22_113  [key=2, style=dotted];
m22_153 -> m22_153  [color=darkorchid, key=3, label="Local variable string mixedPathSeperators", style=bold];
m22_153 -> m22_154  [key=0, style=solid];
m22_154 -> m22_155  [key=0, style=solid];
m22_154 -> m22_156  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_154 -> m22_157  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m22_154 -> m22_158  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_154 -> m22_159  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_154 -> m22_141  [key=2, style=dotted];
m22_154 -> m22_113  [key=2, style=dotted];
m22_160 -> m22_160  [color=darkorchid, key=3, label="Local variable string longRelativePath", style=bold];
m22_160 -> m22_161  [key=0, style=solid];
m22_161 -> m22_162  [key=0, style=solid];
m22_161 -> m22_163  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_161 -> m22_164  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m22_161 -> m22_165  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_161 -> m22_166  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_161 -> m22_141  [key=2, style=dotted];
m22_161 -> m22_113  [key=2, style=dotted];
m22_167 -> m22_167  [color=darkorchid, key=3, label="Local variable string shortRelativePath", style=bold];
m22_167 -> m22_168  [key=0, style=solid];
m22_168 -> m22_169  [key=0, style=solid];
m22_168 -> m22_170  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_168 -> m22_171  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m22_168 -> m22_172  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_168 -> m22_173  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_168 -> m22_141  [key=2, style=dotted];
m22_168 -> m22_113  [key=2, style=dotted];
m22_174 -> m22_174  [color=darkorchid, key=3, label="Local variable string dailyEquitiesPath", style=bold];
m22_174 -> m22_175  [key=0, style=solid];
m22_175 -> m22_176  [key=0, style=solid];
m22_175 -> m22_177  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_175 -> m22_178  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m22_175 -> m22_179  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_175 -> m22_180  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_175 -> m22_141  [key=2, style=dotted];
m22_175 -> m22_113  [key=2, style=dotted];
m22_181 -> m22_181  [color=darkorchid, key=3, label="Local variable string minuteEquitiesPath", style=bold];
m22_181 -> m22_182  [key=0, style=solid];
m22_182 -> m22_183  [key=0, style=solid];
m22_182 -> m22_184  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_182 -> m22_185  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m22_182 -> m22_186  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_182 -> m22_187  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_182 -> m22_141  [key=2, style=dotted];
m22_182 -> m22_113  [key=2, style=dotted];
m22_188 -> m22_188  [color=darkorchid, key=3, label="Local variable string cfdPath", style=bold];
m22_188 -> m22_189  [key=0, style=solid];
m22_189 -> m22_190  [key=0, style=solid];
m22_189 -> m22_191  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_189 -> m22_192  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m22_189 -> m22_193  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m22_189 -> m22_194  [color=darkseagreen4, key=1, label=date, style=dashed];
m22_189 -> m22_141  [key=2, style=dotted];
m22_189 -> m22_113  [key=2, style=dotted];
m22_146 -> m22_147  [key=0, style=solid];
m22_146 -> m22_146  [color=darkorchid, key=3, label="Local variable string customPath", style=bold];
m22_145 -> m22_146  [key=0, style=solid];
m22_143 -> m22_144  [key=0, style=solid];
m22_144 -> m22_145  [key=0, style=solid];
m22_195 -> m22_142  [color=blue, key=0, style=bold];
m22_63 -> m22_64  [key=0, style=solid];
m22_63 -> m22_68  [key=2, style=dotted];
m22_63 -> m22_63  [color=darkorchid, key=3, label="Local variable string emptyPath", style=bold];
m22_30 -> m22_31  [key=0, style=solid];
m22_25 -> m22_26  [key=0, style=solid];
m22_25 -> m22_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m22_25 -> m22_5  [key=2, style=dotted];
m22_25 -> m22_30  [key=2, style=dotted];
m22_26 -> m22_27  [key=0, style=solid];
m22_26 -> m22_29  [key=2, style=dotted];
m22_26 -> m22_28  [key=0, style=solid];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_5  [key=2, style=dotted];
m22_27 -> m22_30  [key=2, style=dotted];
m22_28 -> m22_25  [color=blue, key=0, style=bold];
m22_28 -> m22_21  [color=blue, key=0, style=bold];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_12  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m22_9 -> m22_13  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m22_9 -> m22_6  [color=blue, key=0, style=bold];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_12  [key=0, style=solid];
m22_64 -> m22_52  [color=blue, key=0, style=bold];
m22_227 -> m22_256  [key=0, style=solid];
m22_227 -> m22_257  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m22_227 -> m22_258  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m22_227 -> m22_259  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_227 -> m22_260  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m22_227 -> m22_261  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m22_227 -> m22_263  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m22_227 -> m22_265  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m22_227 -> m22_268  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m22_227 -> m22_271  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m22_227 -> m22_272  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m22_227 -> m22_274  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m22_227 -> m22_275  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m22_256 -> m22_257  [key=0, style=solid];
m22_257 -> m22_258  [key=0, style=solid];
m22_258 -> m22_259  [key=0, style=solid];
m22_259 -> m22_260  [key=0, style=solid];
m22_260 -> m22_261  [key=0, style=solid];
m22_260 -> m22_263  [key=0, style=solid];
m22_261 -> m22_262  [key=0, style=solid];
m22_263 -> m22_264  [key=0, style=solid];
m22_263 -> m22_265  [key=0, style=solid];
m22_265 -> m22_266  [key=0, style=solid];
m22_265 -> m22_267  [key=0, style=solid];
m22_268 -> m22_269  [key=0, style=solid];
m22_268 -> m22_270  [key=0, style=solid];
m22_271 -> m22_272  [key=0, style=solid];
m22_271 -> m22_63  [key=2, style=dotted];
m22_272 -> m22_273  [key=0, style=solid];
m22_272 -> m22_274  [key=0, style=solid];
m22_272 -> m22_63  [key=2, style=dotted];
m22_274 -> m22_276  [key=0, style=solid];
m22_274 -> m22_275  [key=0, style=solid];
m22_275 -> m22_276  [key=0, style=solid];
m22_267 -> m22_276  [key=0, style=solid];
m22_267 -> m22_277  [key=2, style=dotted];
m22_262 -> m22_268  [key=0, style=solid];
m22_264 -> m22_268  [key=0, style=solid];
m22_266 -> m22_268  [key=0, style=solid];
m22_269 -> m22_270  [key=0, style=solid];
m22_270 -> m22_271  [key=0, style=solid];
m22_270 -> m22_255  [key=2, style=dotted];
m22_270 -> m22_63  [key=2, style=dotted];
m22_273 -> m22_274  [key=0, style=solid];
m22_276 -> m22_227  [color=blue, key=0, style=bold];
m22_243 -> m22_244  [color=green, key=0, style=solid];
m22_214 -> m22_238  [color=green, key=0, style=solid];
m22_214 -> m22_239  [color=green, key=1, label="System.DateTime", style=dashed];
m22_214 -> m22_240  [color=green, key=1, label="QuantConnect.Resolution", style=dashed];
m22_214 -> m22_241  [color=green, key=1, label="QuantConnect.TickType", style=dashed];
m22_214 -> m22_242  [color=green, key=1, label=string, style=dashed];
m22_214 -> m22_243  [color=green, key=1, label=string, style=dashed];
m22_214 -> m22_244  [color=green, key=1, label=string, style=dashed];
m22_214 -> m22_246  [color=green, key=1, label="QuantConnect.Resolution", style=dashed];
m22_214 -> m22_247  [color=green, key=1, label="QuantConnect.Resolution", style=dashed];
m22_214 -> m22_248  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m22_214 -> m22_250  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_238 -> m22_239  [color=green, key=0, style=solid];
m22_239 -> m22_240  [color=green, key=0, style=solid];
m22_240 -> m22_241  [color=green, key=0, style=solid];
m22_241 -> m22_242  [color=green, key=0, style=solid];
m22_242 -> m22_243  [color=green, key=0, style=solid];
m22_244 -> m22_245  [color=green, key=0, style=solid];
m22_244 -> m22_252  [color=green, key=2, style=dotted];
m22_244 -> m22_253  [color=green, key=2, style=dotted];
m22_244 -> m22_254  [color=green, key=2, style=dotted];
m22_245 -> m22_246  [color=green, key=0, style=solid];
m22_245 -> m22_252  [color=green, key=2, style=dotted];
m22_246 -> m22_247  [color=green, key=0, style=solid];
m22_247 -> m22_248  [color=green, key=0, style=solid];
m22_248 -> m22_249  [color=green, key=0, style=solid];
m22_248 -> m22_250  [color=green, key=0, style=solid];
m22_249 -> m22_250  [key=0, style=solid];
m22_250 -> m22_251  [key=0, style=solid];
m22_250 -> m22_255  [key=2, style=dotted];
m22_251 -> m22_214  [color=blue, key=0, style=bold];
m22_235 -> m22_236  [key=0, style=solid];
m22_217 -> m22_218  [color=green, key=0, style=solid];
m22_218 -> m22_219  [color=green, key=0, style=solid];
m22_218 -> m22_220  [color=green, key=2, style=dotted];
m22_218 -> m22_221  [color=green, key=2, style=dotted];
m22_219 -> m22_217  [color=blue, key=0, style=bold];
m22_236 -> m22_220  [key=2, style=dotted];
m22_236 -> m22_221  [key=2, style=dotted];
m22_236 -> m22_237  [key=0, style=solid];
m22_237 -> m22_235  [color=blue, key=0, style=bold];
m22_87 -> m22_88  [key=0, style=solid];
m22_87 -> m22_87  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_83 -> m22_64  [key=2, style=dotted];
m22_83 -> m22_84  [key=0, style=solid];
m22_82 -> m22_83  [key=0, style=solid];
m22_82 -> m22_84  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_82 -> m22_85  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_82 -> m22_86  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_82 -> m22_87  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_84 -> m22_85  [key=0, style=solid];
m22_84 -> m22_78  [key=2, style=dotted];
m22_84 -> m22_88  [color=darkseagreen4, key=1, label=source, style=dashed];
m22_88 -> m22_5  [key=2, style=dotted];
m22_88 -> m22_89  [key=0, style=solid];
m22_85 -> m22_88  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_85 -> m22_86  [key=0, style=solid];
m22_85 -> m22_87  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_86 -> m22_88  [key=0, style=solid];
m22_86 -> m22_87  [key=0, style=solid];
m22_89 -> m22_82  [color=blue, key=0, style=bold];
m22_31 -> m22_32  [key=0, style=solid];
m22_31 -> m22_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_31 -> m22_34  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_31 -> m22_35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_31 -> m22_36  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_31 -> m22_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_31 -> m22_38  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_31 -> m22_40  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_31 -> m22_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_31 -> m22_56  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_32 -> m22_63  [key=2, style=dotted];
m22_32 -> m22_33  [key=0, style=solid];
m22_32 -> m22_64  [key=2, style=dotted];
m22_32 -> m22_30  [color=blue, key=0, style=bold];
m22_33 -> m22_34  [key=0, style=solid];
m22_33 -> m22_65  [key=2, style=dotted];
m22_33 -> m22_35  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m22_33 -> m22_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m22_33 -> m22_37  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m22_33 -> m22_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m22_33 -> m22_39  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m22_33 -> m22_41  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m22_33 -> m22_50  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m22_33 -> m22_52  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m22_33 -> m22_55  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m22_33 -> m22_57  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m22_33 -> m22_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m22_33 -> m22_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m22_33 -> m22_44  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m22_33 -> m22_46  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m22_33 -> m22_48  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m22_33 -> m22_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_66  [key=2, style=dotted];
m22_34 -> m22_37  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m22_34 -> m22_43  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m22_35 -> m22_36  [key=0, style=solid];
m22_35 -> m22_5  [key=2, style=dotted];
m22_35 -> m22_37  [key=0, style=solid];
m22_36 -> m22_37  [key=0, style=solid];
m22_36 -> m22_5  [key=2, style=dotted];
m22_36 -> m22_50  [key=0, style=solid];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_5  [key=2, style=dotted];
m22_37 -> m22_43  [key=0, style=solid];
m22_38 -> m22_39  [key=0, style=solid];
m22_38 -> m22_5  [key=2, style=dotted];
m22_38 -> m22_41  [key=0, style=solid];
m22_40 -> m22_41  [key=0, style=solid];
m22_40 -> m22_42  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_40 -> m22_43  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_40 -> m22_44  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_40 -> m22_45  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_40 -> m22_46  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_40 -> m22_47  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_40 -> m22_48  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_40 -> m22_49  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_40 -> m22_50  [key=0, style=solid];
m22_51 -> m22_52  [key=0, style=solid];
m22_51 -> m22_53  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_51 -> m22_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_56 -> m22_57  [key=0, style=solid];
m22_56 -> m22_58  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_56 -> m22_59  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_56 -> m22_60  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_56 -> m22_61  [color=darkseagreen4, key=1, label=expected, style=dashed];
m22_39 -> m22_40  [key=0, style=solid];
m22_39 -> m22_50  [key=0, style=solid];
m22_41 -> m22_42  [key=0, style=solid];
m22_41 -> m22_43  [color=darkseagreen4, key=1, label=actual, style=dashed];
m22_41 -> m22_44  [color=darkseagreen4, key=1, label=actual, style=dashed];
m22_41 -> m22_45  [color=darkseagreen4, key=1, label=actual, style=dashed];
m22_41 -> m22_46  [color=darkseagreen4, key=1, label=actual, style=dashed];
m22_41 -> m22_47  [color=darkseagreen4, key=1, label=actual, style=dashed];
m22_41 -> m22_48  [color=darkseagreen4, key=1, label=actual, style=dashed];
m22_41 -> m22_49  [color=darkseagreen4, key=1, label=actual, style=dashed];
m22_50 -> m22_51  [key=0, style=solid];
m22_50 -> m22_55  [key=0, style=solid];
m22_50 -> m22_33  [color=blue, key=0, style=bold];
m22_52 -> m22_53  [key=0, style=solid];
m22_52 -> m22_54  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m22_52 -> m22_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m22_52 -> m22_58  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m22_52 -> m22_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m22_52 -> m22_60  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m22_52 -> m22_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m22_52 -> m22_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m22_52 -> m22_55  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.Order GenerateMarginCallOrder", style=bold];
m22_55 -> m22_62  [key=0, style=solid];
m22_55 -> m22_56  [key=0, style=solid];
m22_55 -> m22_64  [key=0, style=solid];
m22_57 -> m22_58  [key=0, style=solid];
m22_57 -> m22_59  [color=darkseagreen4, key=1, label=actual, style=dashed];
m22_57 -> m22_60  [color=darkseagreen4, key=1, label=actual, style=dashed];
m22_57 -> m22_61  [color=darkseagreen4, key=1, label=actual, style=dashed];
m22_57 -> m22_64  [key=0, style=solid];
m22_49 -> m22_62  [key=0, style=solid];
m22_49 -> m22_5  [key=2, style=dotted];
m22_49 -> m22_50  [key=0, style=solid];
m22_54 -> m22_62  [key=0, style=solid];
m22_54 -> m22_5  [key=2, style=dotted];
m22_54 -> m22_55  [key=0, style=solid];
m22_54 -> m22_56  [key=0, style=solid];
m22_61 -> m22_62  [key=0, style=solid];
m22_61 -> m22_5  [key=2, style=dotted];
m22_61 -> m22_63  [key=0, style=solid];
m22_61 -> m22_61  [color=darkorchid, key=3, label="Local variable string nonExistantPath", style=bold];
m22_42 -> m22_5  [key=2, style=dotted];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_50  [key=0, style=solid];
m22_42 -> m22_51  [key=2, style=dotted];
m22_43 -> m22_5  [key=2, style=dotted];
m22_43 -> m22_44  [key=0, style=solid];
m22_43 -> m22_49  [key=0, style=solid];
m22_44 -> m22_5  [key=2, style=dotted];
m22_44 -> m22_45  [key=0, style=solid];
m22_44 -> m22_47  [key=0, style=solid];
m22_45 -> m22_5  [key=2, style=dotted];
m22_45 -> m22_46  [key=0, style=solid];
m22_46 -> m22_5  [key=2, style=dotted];
m22_46 -> m22_47  [key=0, style=solid];
m22_46 -> m22_50  [key=0, style=solid];
m22_46 -> m22_51  [key=2, style=dotted];
m22_47 -> m22_5  [key=2, style=dotted];
m22_47 -> m22_48  [key=0, style=solid];
m22_48 -> m22_49  [key=0, style=solid];
m22_48 -> m22_5  [key=2, style=dotted];
m22_48 -> m22_50  [key=0, style=solid];
m22_53 -> m22_54  [key=0, style=solid];
m22_53 -> m22_67  [key=2, style=dotted];
m22_53 -> m22_53  [color=darkorchid, key=3, label="Local variable decimal marginBuffer", style=bold];
m22_58 -> m22_67  [key=2, style=dotted];
m22_58 -> m22_59  [key=0, style=solid];
m22_59 -> m22_67  [key=2, style=dotted];
m22_59 -> m22_60  [key=0, style=solid];
m22_59 -> m22_65  [key=2, style=dotted];
m22_60 -> m22_61  [key=0, style=solid];
m22_60 -> m22_5  [key=2, style=dotted];
m22_60 -> m22_66  [key=2, style=dotted];
m22_60 -> m22_67  [key=2, style=dotted];
m22_60 -> m22_60  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m22_60 -> m22_62  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m22_60 -> m22_63  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m22_62 -> m22_31  [color=blue, key=0, style=bold];
m22_62 -> m22_63  [key=0, style=solid];
m22_62 -> m22_62  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m22_68 -> m22_69  [key=0, style=solid];
m22_68 -> m22_71  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_115 -> m22_116  [key=0, style=solid];
m22_116 -> m22_5  [key=2, style=dotted];
m22_116 -> m22_117  [key=0, style=solid];
m22_116 -> m22_119  [key=2, style=dotted];
m22_117 -> m22_5  [key=2, style=dotted];
m22_117 -> m22_118  [key=0, style=solid];
m22_117 -> m22_119  [key=2, style=dotted];
m22_118 -> m22_115  [color=blue, key=0, style=bold];
m22_15 -> m22_16  [key=0, style=solid];
m22_16 -> m22_17  [key=0, style=solid];
m22_16 -> m22_18  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_17 -> m22_15  [color=blue, key=0, style=bold];
m22_17 -> m22_18  [key=0, style=solid];
m22_17 -> m22_20  [key=2, style=dotted];
m22_120 -> m22_121  [key=0, style=solid];
m22_125 -> m22_141  [key=2, style=dotted];
m22_125 -> m22_126  [key=0, style=solid];
m22_125 -> m22_114  [key=2, style=dotted];
m22_127 -> m22_141  [key=2, style=dotted];
m22_127 -> m22_128  [key=0, style=solid];
m22_127 -> m22_114  [key=2, style=dotted];
m22_129 -> m22_141  [key=2, style=dotted];
m22_129 -> m22_130  [key=0, style=solid];
m22_129 -> m22_114  [key=2, style=dotted];
m22_131 -> m22_141  [key=2, style=dotted];
m22_131 -> m22_132  [key=0, style=solid];
m22_131 -> m22_114  [key=2, style=dotted];
m22_133 -> m22_141  [key=2, style=dotted];
m22_133 -> m22_134  [key=0, style=solid];
m22_133 -> m22_114  [key=2, style=dotted];
m22_135 -> m22_141  [key=2, style=dotted];
m22_135 -> m22_136  [key=0, style=solid];
m22_135 -> m22_114  [key=2, style=dotted];
m22_137 -> m22_141  [key=2, style=dotted];
m22_137 -> m22_138  [key=0, style=solid];
m22_137 -> m22_114  [key=2, style=dotted];
m22_139 -> m22_141  [key=2, style=dotted];
m22_139 -> m22_140  [key=0, style=solid];
m22_139 -> m22_114  [key=2, style=dotted];
m22_124 -> m22_125  [key=0, style=solid];
m22_124 -> m22_124  [color=darkorchid, key=3, label="Local variable string invalidPath", style=bold];
m22_126 -> m22_127  [key=0, style=solid];
m22_126 -> m22_126  [color=darkorchid, key=3, label="Local variable string nonExistantPath", style=bold];
m22_128 -> m22_129  [key=0, style=solid];
m22_128 -> m22_128  [color=darkorchid, key=3, label="Local variable string notAPath", style=bold];
m22_130 -> m22_131  [key=0, style=solid];
m22_130 -> m22_130  [color=darkorchid, key=3, label="Local variable string emptyPath", style=bold];
m22_132 -> m22_133  [key=0, style=solid];
m22_132 -> m22_132  [color=darkorchid, key=3, label="Local variable string nullPath", style=bold];
m22_134 -> m22_135  [key=0, style=solid];
m22_134 -> m22_134  [color=darkorchid, key=3, label="Local variable string optionsTradePath", style=bold];
m22_136 -> m22_137  [key=0, style=solid];
m22_136 -> m22_136  [color=darkorchid, key=3, label="Local variable string optionsOpenInterestPath", style=bold];
m22_138 -> m22_139  [key=0, style=solid];
m22_138 -> m22_138  [color=darkorchid, key=3, label="Local variable string optionsQuotePath", style=bold];
m22_123 -> m22_124  [key=0, style=solid];
m22_122 -> m22_123  [key=0, style=solid];
m22_121 -> m22_122  [key=0, style=solid];
m22_140 -> m22_120  [color=blue, key=0, style=bold];
m22_8 -> m22_5  [key=2, style=dotted];
m22_8 -> m22_9  [key=0, style=solid];
m22_21 -> m22_23  [color=darkseagreen4, key=1, label=margin, style=dashed];
m22_21 -> m22_22  [key=0, style=solid];
m22_21 -> m22_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_21 -> m22_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_23 -> m22_5  [key=2, style=dotted];
m22_23 -> m22_24  [key=0, style=solid];
m22_22 -> m22_23  [key=0, style=solid];
m22_22 -> m22_25  [color=darkseagreen4, key=1, label=line, style=dashed];
m22_22 -> m22_27  [color=darkseagreen4, key=1, label=line, style=dashed];
m22_22 -> m22_29  [key=2, style=dotted];
m22_24 -> m22_25  [key=0, style=solid];
m22_24 -> m22_26  [key=0, style=solid];
m22_24 -> m22_18  [color=blue, key=0, style=bold];
m22_76 -> m22_5  [key=2, style=dotted];
m22_76 -> m22_77  [key=0, style=solid];
m22_70 -> m22_76  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m22_70 -> m22_71  [key=0, style=solid];
m22_70 -> m22_79  [key=2, style=dotted];
m22_70 -> m22_73  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m22_70 -> m22_75  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m22_75 -> m22_76  [key=0, style=solid];
m22_75 -> m22_75  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m22_75 -> m22_81  [key=2, style=dotted];
m22_72 -> m22_76  [color=darkseagreen4, key=1, label=normalizeZipFilePath, style=dashed];
m22_72 -> m22_73  [key=0, style=solid];
m22_72 -> m22_79  [key=2, style=dotted];
m22_74 -> m22_76  [key=0, style=solid];
m22_74 -> m22_75  [key=0, style=solid];
m22_69 -> m22_78  [key=2, style=dotted];
m22_69 -> m22_70  [key=0, style=solid];
m22_69 -> m22_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m22_69 -> m22_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m22_69 -> m22_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m22_69 -> m22_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m22_69 -> m22_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m22_69 -> m22_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m22_69 -> m22_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m22_69 -> m22_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m22_69 -> m22_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m22_69 -> m22_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
m22_71 -> m22_72  [key=0, style=solid];
m22_71 -> m22_20  [key=2, style=dotted];
m22_73 -> m22_75  [color=darkseagreen4, key=1, label=indexOfHash, style=dashed];
m22_73 -> m22_74  [key=0, style=solid];
m22_73 -> m22_80  [key=2, style=dotted];
m22_77 -> m22_68  [color=blue, key=0, style=bold];
m22_0 -> m22_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_3  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m22_0 -> m22_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m22_0 -> m22_6  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m22_2 -> m22_5  [key=2, style=dotted];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_7  [key=0, style=solid];
m22_2 -> m22_8  [key=2, style=dotted];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_4  [key=2, style=dotted];
m22_1 -> m22_3  [key=0, style=solid];
m22_3 -> m22_0  [color=blue, key=0, style=bold];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_5  [key=0, style=solid];
m22_5 -> m22_6  [key=0, style=solid];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_4 -> m22_7  [key=0, style=solid];
m22_4 -> m22_8  [key=2, style=dotted];
m22_7 -> m22_0  [color=blue, key=0, style=bold];
m22_7 -> m22_8  [key=0, style=solid];
m22_7 -> m22_10  [key=2, style=dotted];
m22_18 -> m22_5  [key=2, style=dotted];
m22_18 -> m22_19  [key=0, style=solid];
m22_18 -> m22_21  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m22_19 -> m22_16  [color=blue, key=0, style=bold];
m22_19 -> m22_20  [key=0, style=solid];
m22_19 -> m22_21  [key=0, style=solid];
m22_90 -> m22_91  [key=0, style=solid];
m22_95 -> m22_5  [key=2, style=dotted];
m22_95 -> m22_96  [key=0, style=solid];
m22_95 -> m22_104  [key=2, style=dotted];
m22_97 -> m22_5  [key=2, style=dotted];
m22_97 -> m22_98  [key=0, style=solid];
m22_97 -> m22_104  [key=2, style=dotted];
m22_99 -> m22_5  [key=2, style=dotted];
m22_99 -> m22_100  [key=0, style=solid];
m22_99 -> m22_104  [key=2, style=dotted];
m22_101 -> m22_5  [key=2, style=dotted];
m22_101 -> m22_102  [key=0, style=solid];
m22_101 -> m22_104  [key=2, style=dotted];
m22_91 -> m22_95  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m22_91 -> m22_92  [key=0, style=solid];
m22_91 -> m22_96  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m22_94 -> m22_95  [key=0, style=solid];
m22_94 -> m22_101  [color=darkseagreen4, key=1, label=tradeBarType, style=dashed];
m22_94 -> m22_102  [color=darkseagreen4, key=1, label=tradeBarType, style=dashed];
m22_96 -> m22_97  [key=0, style=solid];
m22_96 -> m22_104  [key=2, style=dotted];
m22_96 -> m22_105  [key=2, style=dotted];
m22_92 -> m22_97  [color=darkseagreen4, key=1, label=openInterestType, style=dashed];
m22_92 -> m22_93  [key=0, style=solid];
m22_92 -> m22_98  [color=darkseagreen4, key=1, label=openInterestType, style=dashed];
m22_98 -> m22_99  [key=0, style=solid];
m22_98 -> m22_104  [key=2, style=dotted];
m22_98 -> m22_105  [key=2, style=dotted];
m22_93 -> m22_99  [color=darkseagreen4, key=1, label=quoteBarType, style=dashed];
m22_93 -> m22_94  [key=0, style=solid];
m22_93 -> m22_100  [color=darkseagreen4, key=1, label=quoteBarType, style=dashed];
m22_100 -> m22_101  [key=0, style=solid];
m22_100 -> m22_104  [key=2, style=dotted];
m22_100 -> m22_105  [key=2, style=dotted];
m22_102 -> m22_104  [key=2, style=dotted];
m22_102 -> m22_103  [key=0, style=solid];
m22_102 -> m22_105  [key=2, style=dotted];
m22_103 -> m22_90  [color=blue, key=0, style=bold];
m22_222 -> m22_223  [color=green, key=0, style=solid];
m22_223 -> m22_224  [color=green, key=0, style=solid];
m22_223 -> m22_226  [color=green, key=2, style=dotted];
m22_224 -> m22_225  [color=green, key=0, style=solid];
m22_224 -> m22_213  [color=green, key=2, style=dotted];
m22_224 -> m22_227  [color=green, key=2, style=dotted];
m22_224 -> m22_228  [color=green, key=2, style=dotted];
m22_224 -> m22_229  [color=green, key=2, style=dotted];
m22_224 -> m22_230  [color=green, key=2, style=dotted];
m22_224 -> m22_231  [color=green, key=2, style=dotted];
m22_224 -> m22_232  [color=green, key=2, style=dotted];
m22_224 -> m22_233  [color=green, key=2, style=dotted];
m22_224 -> m22_234  [color=green, key=2, style=dotted];
m22_224 -> m22_215  [color=green, key=2, style=dotted];
m22_224 -> m22_216  [color=green, key=2, style=dotted];
m22_224 -> m22_235  [color=green, key=1, label="lambda expression", style=dashed];
m22_225 -> m22_222  [color=blue, key=0, style=bold];
m22_208 -> m22_209  [key=0, style=solid];
m22_210 -> m22_211  [color=green, key=0, style=solid];
m22_210 -> m22_213  [color=green, key=2, style=dotted];
m22_210 -> m22_214  [color=green, key=2, style=dotted];
m22_210 -> m22_215  [color=green, key=2, style=dotted];
m22_210 -> m22_216  [color=green, key=2, style=dotted];
m22_210 -> m22_217  [color=green, key=1, label="lambda expression", style=dashed];
m22_209 -> m22_210  [color=green, key=0, style=solid];
m22_209 -> m22_212  [key=2, style=dotted];
m22_211 -> m22_208  [color=blue, key=0, style=bold];
m22_67 -> m22_51  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.IBar expected", style=bold];
m22_67 -> m22_52  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.IBar actual", style=bold];
m22_67 -> m22_198  [key=0, style=solid];
m22_67 -> m22_200  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m22_67 -> m22_202  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m22_67 -> m22_203  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m22_67 -> m22_204  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m22_67 -> m22_205  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m22_202 -> m22_5  [key=2, style=dotted];
m22_202 -> m22_203  [key=0, style=solid];
m22_203 -> m22_5  [key=2, style=dotted];
m22_203 -> m22_204  [key=0, style=solid];
m22_204 -> m22_5  [key=2, style=dotted];
m22_204 -> m22_205  [key=0, style=solid];
m22_205 -> m22_5  [key=2, style=dotted];
m22_205 -> m22_206  [key=0, style=solid];
m22_198 -> m22_199  [key=0, style=solid];
m22_198 -> m22_200  [key=0, style=solid];
m22_200 -> m22_202  [key=0, style=solid];
m22_200 -> m22_201  [key=0, style=solid];
m22_201 -> m22_202  [key=0, style=solid];
m22_201 -> m22_207  [key=2, style=dotted];
m22_199 -> m22_206  [key=0, style=solid];
m22_206 -> m22_67  [color=blue, key=0, style=bold];
m22_278 -> m22_238  [color=green, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_278 -> m22_239  [color=green, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_278 -> m22_240  [color=green, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_278 -> m22_241  [color=green, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_278 -> m22_242  [color=green, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_278 -> m22_243  [color=green, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_278 -> m22_244  [color=green, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_278 -> m22_246  [color=green, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_278 -> m22_247  [color=green, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_278 -> m22_245  [color=green, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_278 -> m22_249  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_278 -> m22_250  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m22_279 -> m22_256  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_257  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_258  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_259  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_271  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_272  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_275  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_262  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_264  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_266  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_269  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_270  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m22_279 -> m22_273  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_15  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m23_14 -> m23_15  [key=0, style=solid];
m23_14 -> m23_18  [key=2, style=dotted];
m23_15 -> m23_16  [key=0, style=solid];
m23_15 -> m23_19  [key=2, style=dotted];
m23_16 -> m23_17  [key=0, style=solid];
m23_17 -> m23_13  [color=blue, key=0, style=bold];
m23_61 -> m23_62  [key=0, style=solid];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_3  [key=2, style=dotted];
m23_1 -> m23_4  [key=2, style=dotted];
m23_2 -> m23_0  [color=blue, key=0, style=bold];
m23_62 -> m23_63  [key=0, style=solid];
m23_62 -> m23_49  [key=2, style=dotted];
m23_63 -> m23_61  [color=blue, key=0, style=bold];
m23_9 -> m23_10  [key=0, style=solid];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_12  [key=2, style=dotted];
m23_11 -> m23_9  [color=blue, key=0, style=bold];
m23_20 -> m23_21  [key=0, style=solid];
m23_20 -> m23_22  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_23  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_24  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_25  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_26  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_27  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_28  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_29  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_30  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_31  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_32  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_34  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_38  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_39  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_40  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_42  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_43  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_20 -> m23_45  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_49  [key=2, style=dotted];
m23_22 -> m23_23  [key=0, style=solid];
m23_22 -> m23_50  [key=2, style=dotted];
m23_22 -> m23_24  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_22 -> m23_25  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_22 -> m23_26  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_22 -> m23_27  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_22 -> m23_28  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_22 -> m23_29  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_22 -> m23_31  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_22 -> m23_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_22 -> m23_41  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_22 -> m23_44  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_22 -> m23_46  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_22 -> m23_47  [color=darkseagreen4, key=1, label=order, style=dashed];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_49  [key=2, style=dotted];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_49  [key=2, style=dotted];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_49  [key=2, style=dotted];
m23_26 -> m23_27  [key=0, style=solid];
m23_26 -> m23_49  [key=2, style=dotted];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_29  [key=0, style=solid];
m23_27 -> m23_49  [key=2, style=dotted];
m23_28 -> m23_29  [key=0, style=solid];
m23_28 -> m23_49  [key=2, style=dotted];
m23_29 -> m23_30  [key=0, style=solid];
m23_29 -> m23_49  [key=2, style=dotted];
m23_30 -> m23_31  [key=0, style=solid];
m23_30 -> m23_49  [key=2, style=dotted];
m23_30 -> m23_37  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m23_30 -> m23_44  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m23_30 -> m23_46  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m23_31 -> m23_32  [key=0, style=solid];
m23_31 -> m23_51  [key=2, style=dotted];
m23_31 -> m23_52  [key=2, style=dotted];
m23_31 -> m23_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_32 -> m23_33  [key=0, style=solid];
m23_32 -> m23_49  [key=2, style=dotted];
m23_34 -> m23_35  [key=0, style=solid];
m23_34 -> m23_53  [key=2, style=dotted];
m23_34 -> m23_36  [color=darkseagreen4, key=1, label=suppliedMarket, style=dashed];
m23_38 -> m23_39  [key=0, style=solid];
m23_38 -> m23_42  [key=0, style=solid];
m23_38 -> m23_53  [key=2, style=dotted];
m23_38 -> m23_54  [key=2, style=dotted];
m23_39 -> m23_40  [key=0, style=solid];
m23_39 -> m23_53  [key=2, style=dotted];
m23_39 -> m23_55  [key=2, style=dotted];
m23_39 -> m23_49  [key=2, style=dotted];
m23_39 -> m23_58  [key=2, style=dotted];
m23_39 -> m23_41  [color=darkseagreen4, key=1, label=sid, style=dashed];
m23_40 -> m23_41  [key=0, style=solid];
m23_40 -> m23_53  [key=2, style=dotted];
m23_40 -> m23_55  [key=2, style=dotted];
m23_40 -> m23_49  [key=2, style=dotted];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_45  [key=0, style=solid];
m23_42 -> m23_53  [key=2, style=dotted];
m23_42 -> m23_54  [key=2, style=dotted];
m23_43 -> m23_44  [key=0, style=solid];
m23_43 -> m23_53  [key=2, style=dotted];
m23_43 -> m23_55  [key=2, style=dotted];
m23_43 -> m23_49  [key=2, style=dotted];
m23_45 -> m23_46  [key=0, style=solid];
m23_45 -> m23_49  [key=2, style=dotted];
m23_41 -> m23_47  [key=0, style=solid];
m23_41 -> m23_59  [key=2, style=dotted];
m23_44 -> m23_47  [key=0, style=solid];
m23_44 -> m23_60  [key=2, style=dotted];
m23_46 -> m23_47  [key=0, style=solid];
m23_46 -> m23_60  [key=2, style=dotted];
m23_47 -> m23_48  [key=0, style=solid];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_56  [key=2, style=dotted];
m23_37 -> m23_57  [key=2, style=dotted];
m23_37 -> m23_44  [color=darkseagreen4, key=1, label=market, style=dashed];
m23_37 -> m23_46  [color=darkseagreen4, key=1, label=market, style=dashed];
m23_33 -> m23_34  [key=0, style=solid];
m23_35 -> m23_36  [key=0, style=solid];
m23_35 -> m23_37  [key=0, style=solid];
m23_35 -> m23_54  [key=2, style=dotted];
m23_36 -> m23_38  [key=0, style=solid];
m23_36 -> m23_55  [key=2, style=dotted];
m23_36 -> m23_49  [key=2, style=dotted];
m23_36 -> m23_44  [color=darkseagreen4, key=1, label=market, style=dashed];
m23_36 -> m23_46  [color=darkseagreen4, key=1, label=market, style=dashed];
m23_48 -> m23_20  [color=blue, key=0, style=bold];
m23_50 -> m23_64  [key=0, style=solid];
m23_50 -> m23_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m23_50 -> m23_69  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_50 -> m23_71  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_50 -> m23_73  [color=darkseagreen4, key=1, label=JObject, style=dashed];
m23_50 -> m23_21  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m23_50 -> m23_20  [color=darkorchid, key=3, label="Parameter variable JObject jObject", style=bold];
m23_64 -> m23_65  [key=0, style=solid];
m23_65 -> m23_66  [key=0, style=solid];
m23_65 -> m23_68  [key=0, style=solid];
m23_65 -> m23_70  [key=0, style=solid];
m23_65 -> m23_72  [key=0, style=solid];
m23_65 -> m23_74  [key=0, style=solid];
m23_65 -> m23_76  [key=0, style=solid];
m23_65 -> m23_78  [key=0, style=solid];
m23_65 -> m23_80  [key=0, style=solid];
m23_69 -> m23_81  [key=0, style=solid];
m23_69 -> m23_84  [key=2, style=dotted];
m23_69 -> m23_49  [key=2, style=dotted];
m23_71 -> m23_81  [key=0, style=solid];
m23_71 -> m23_85  [key=2, style=dotted];
m23_71 -> m23_49  [key=2, style=dotted];
m23_73 -> m23_81  [key=0, style=solid];
m23_73 -> m23_86  [key=2, style=dotted];
m23_73 -> m23_49  [key=2, style=dotted];
m23_66 -> m23_67  [key=0, style=solid];
m23_68 -> m23_69  [key=0, style=solid];
m23_70 -> m23_71  [key=0, style=solid];
m23_72 -> m23_73  [key=0, style=solid];
m23_74 -> m23_75  [key=0, style=solid];
m23_76 -> m23_77  [key=0, style=solid];
m23_78 -> m23_79  [key=0, style=solid];
m23_80 -> m23_82  [key=0, style=solid];
m23_80 -> m23_90  [key=2, style=dotted];
m23_67 -> m23_81  [key=0, style=solid];
m23_67 -> m23_83  [key=2, style=dotted];
m23_75 -> m23_81  [key=0, style=solid];
m23_75 -> m23_87  [key=2, style=dotted];
m23_77 -> m23_81  [key=0, style=solid];
m23_77 -> m23_88  [key=2, style=dotted];
m23_79 -> m23_81  [key=0, style=solid];
m23_79 -> m23_89  [key=2, style=dotted];
m23_81 -> m23_82  [key=0, style=solid];
m23_82 -> m23_50  [color=blue, key=0, style=bold];
m23_5 -> m23_6  [key=0, style=solid];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_8  [key=2, style=dotted];
m23_7 -> m23_5  [color=blue, key=0, style=bold];
m23_91 -> m23_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderJsonConverter", style=dashed];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_10  [key=2, style=dotted];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_11  [key=2, style=dotted];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_12  [key=2, style=dotted];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_13  [key=2, style=dotted];
m24_4 -> m24_6  [color=darkseagreen4, key=1, label=equity, style=dashed];
m24_4 -> m24_8  [color=darkseagreen4, key=1, label=equity, style=dashed];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_14  [key=2, style=dotted];
m24_5 -> m24_7  [color=darkseagreen4, key=1, label=option, style=dashed];
m24_6 -> m24_7  [key=0, style=solid];
m24_6 -> m24_15  [key=2, style=dotted];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> m24_18  [key=2, style=dotted];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_16  [key=2, style=dotted];
m24_7 -> m24_17  [key=2, style=dotted];
m24_9 -> m24_0  [color=blue, key=0, style=bold];
m24_45 -> m24_46  [key=0, style=solid];
m24_46 -> m24_47  [key=0, style=solid];
m24_46 -> m24_48  [key=2, style=dotted];
m24_46 -> m24_49  [key=2, style=dotted];
m24_47 -> m24_45  [color=blue, key=0, style=bold];
m24_19 -> m24_20  [key=0, style=solid];
m24_19 -> m24_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m24_19 -> m24_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m24_20 -> m24_21  [key=0, style=solid];
m24_20 -> m24_26  [key=0, style=solid];
m24_22 -> m24_23  [key=0, style=solid];
m24_22 -> m24_27  [key=0, style=solid];
m24_22 -> m24_30  [key=2, style=dotted];
m24_22 -> m24_39  [color=darkseagreen4, key=1, label=chain, style=dashed];
m24_27 -> m24_28  [key=0, style=solid];
m24_27 -> m24_29  [key=0, style=solid];
m24_21 -> m24_22  [key=0, style=solid];
m24_26 -> m24_27  [key=0, style=solid];
m24_26 -> m24_35  [key=2, style=dotted];
m24_23 -> m24_24  [key=0, style=solid];
m24_23 -> m24_31  [key=2, style=dotted];
m24_23 -> m24_32  [key=2, style=dotted];
m24_23 -> m24_33  [key=2, style=dotted];
m24_23 -> m24_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_23 -> m24_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_23 -> m24_25  [color=darkseagreen4, key=1, label=contract, style=dashed];
m24_24 -> m24_25  [key=0, style=solid];
m24_24 -> m24_27  [key=0, style=solid];
m24_25 -> m24_27  [key=0, style=solid];
m24_25 -> m24_34  [key=2, style=dotted];
m24_28 -> m24_27  [key=0, style=solid];
m24_28 -> m24_36  [key=2, style=dotted];
m24_28 -> m24_37  [key=2, style=dotted];
m24_28 -> m24_28  [color=darkseagreen4, key=1, label=kpv, style=dashed];
m24_29 -> m24_19  [color=blue, key=0, style=bold];
m24_42 -> m24_43  [key=0, style=solid];
m24_39 -> m24_40  [key=0, style=solid];
m24_39 -> m24_41  [key=2, style=dotted];
m24_38 -> m24_39  [key=0, style=solid];
m24_40 -> m24_38  [color=blue, key=0, style=bold];
m24_43 -> m24_44  [key=0, style=solid];
m24_44 -> m24_42  [color=blue, key=0, style=bold];
m24_50 -> m24_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_50 -> m24_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_50 -> m24_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_50 -> m24_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_50 -> m24_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_50 -> m24_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_50 -> m24_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_50 -> m24_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_50 -> m24_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_50 -> m24_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_50 -> m24_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_50 -> m24_46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionTradesAlgorithm", style=dashed];
m24_51 -> m24_39  [color=darkseagreen4, key=1, label=chain, style=dashed];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_0  [color=blue, key=0, style=bold];
m25_7 -> m25_8  [key=0, style=solid];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_0  [key=2, style=dotted];
m25_8 -> m25_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_12  [key=2, style=dotted];
m25_10 -> m25_11  [key=0, style=solid];
m25_11 -> m25_7  [color=blue, key=0, style=bold];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_6 -> m25_4  [color=blue, key=0, style=bold];
m25_2 -> m25_3  [key=0, style=solid];
m25_3 -> m25_2  [color=blue, key=0, style=bold];
m25_13 -> m25_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m25_13 -> m25_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_0  [color=blue, key=0, style=bold];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_6 -> m26_4  [color=blue, key=0, style=bold];
m26_7 -> m26_8  [key=0, style=solid];
m26_8 -> m26_9  [key=0, style=solid];
m26_8 -> m26_0  [key=2, style=dotted];
m26_8 -> m26_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_12  [key=2, style=dotted];
m26_10 -> m26_11  [key=0, style=solid];
m26_11 -> m26_7  [color=blue, key=0, style=bold];
m26_2 -> m26_3  [key=0, style=solid];
m26_3 -> m26_2  [color=blue, key=0, style=bold];
m26_13 -> m26_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m26_13 -> m26_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m27_7 -> m27_8  [key=0, style=solid];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_0  [key=2, style=dotted];
m27_8 -> m27_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_12  [key=2, style=dotted];
m27_10 -> m27_11  [key=0, style=solid];
m27_11 -> m27_7  [color=blue, key=0, style=bold];
m27_2 -> m27_3  [key=0, style=solid];
m27_3 -> m27_2  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_0  [color=blue, key=0, style=bold];
m27_4 -> m27_5  [key=0, style=solid];
m27_5 -> m27_6  [key=0, style=solid];
m27_6 -> m27_4  [color=blue, key=0, style=bold];
m27_13 -> m27_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
m27_13 -> m27_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
m28_2 -> m28_3  [color=green, key=0, style=solid];
m28_3 -> m28_4  [color=green, key=0, style=solid];
m28_4 -> m28_2  [color=blue, key=0, style=bold];
m28_5 -> m28_6  [key=0, style=solid];
m28_6 -> m28_7  [key=0, style=solid];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_9  [key=2, style=dotted];
m28_8 -> m28_5  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [color=blue, key=0, style=bold];
m28_10 -> m28_11  [key=0, style=solid];
m28_11 -> m28_12  [key=0, style=solid];
m28_11 -> m28_0  [key=2, style=dotted];
m28_11 -> m28_13  [color=darkseagreen4, key=1, label=order, style=dashed];
m28_12 -> m28_13  [key=0, style=solid];
m28_12 -> m28_15  [key=2, style=dotted];
m28_13 -> m28_14  [key=0, style=solid];
m28_14 -> m28_10  [color=blue, key=0, style=bold];
m28_16 -> m28_3  [color=green, key=1, label="QuantConnect.Orders.OptionExerciseOrder", style=dashed];
m28_16 -> m28_7  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OptionExerciseOrder", style=dashed];
m28_16 -> m28_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OptionExerciseOrder", style=dashed];
m30_25 -> m30_31  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_25 -> m30_26  [key=0, style=solid];
m30_25 -> m30_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_25 -> m30_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m30_27 -> m30_28  [color=red, key=0, style=solid];
m30_27 -> m30_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_27 -> m30_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m30_27 -> m30_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_28 -> m30_29  [color=green, key=0, style=solid];
m30_28 -> m30_30  [color=red, key=0, style=solid];
m30_28 -> m30_34  [key=0, style=solid];
m30_29 -> m30_28  [color=red, key=0, style=solid];
m30_29 -> m30_35  [key=2, style=dotted];
m30_29 -> m30_36  [key=2, style=dotted];
m30_29 -> m30_26  [key=0, style=solid];
m30_29 -> m30_30  [color=green, key=0, style=solid];
m30_30 -> m30_31  [color=green, key=0, style=solid];
m30_30 -> m30_34  [key=0, style=solid];
m30_30 -> m30_32  [color=darkseagreen4, key=1, label=removed, style=dashed];
m30_30 -> m30_28  [color=green, key=0, style=solid];
m30_30 -> m30_37  [color=green, key=2, style=dotted];
m30_33 -> m30_30  [key=0, style=solid];
m30_33 -> m30_38  [key=2, style=dotted];
m30_31 -> m30_32  [key=0, style=solid];
m30_31 -> m30_28  [color=green, key=0, style=solid];
m30_31 -> m30_38  [color=green, key=2, style=dotted];
m30_32 -> m30_33  [key=0, style=solid];
m30_32 -> m30_30  [key=0, style=solid];
m30_32 -> m30_37  [key=2, style=dotted];
m30_26 -> m30_28  [key=0, style=solid];
m30_26 -> m30_29  [key=0, style=solid];
m30_34 -> m30_27  [color=blue, key=0, style=bold];
m30_34 -> m30_25  [color=blue, key=0, style=bold];
m30_8 -> m30_9  [color=red, key=0, style=solid];
m30_8 -> m30_21  [color=crimson, key=0, style=bold];
m30_9 -> m30_10  [color=green, key=0, style=solid];
m30_9 -> m30_22  [color=red, key=0, style=solid];
m30_9 -> m30_12  [color=green, key=1, label=sd, style=dashed];
m30_9 -> m30_17  [color=darkseagreen4, key=1, label=sd, style=dashed];
m30_9 -> m30_18  [color=darkseagreen4, key=1, label=sd, style=dashed];
m30_9 -> m30_19  [color=darkseagreen4, key=1, label=sd, style=dashed];
m30_9 -> m30_20  [color=green, key=1, label=sd, style=dashed];
m30_21 -> m30_9  [color=red, key=0, style=solid];
m30_10 -> m30_11  [color=green, key=0, style=solid];
m30_10 -> m30_9  [color=green, key=0, style=solid];
m30_12 -> m30_13  [color=green, key=0, style=solid];
m30_12 -> m30_15  [color=green, key=1, label=normalizedSignal, style=dashed];
m30_17 -> m30_18  [color=red, key=0, style=solid];
m30_17 -> m30_23  [key=2, style=dotted];
m30_17 -> m30_9  [key=0, style=solid];
m30_18 -> m30_19  [color=red, key=0, style=solid];
m30_18 -> m30_24  [color=red, key=2, style=dotted];
m30_18 -> m30_20  [color=red, key=1, label=insight, style=dashed];
m30_18 -> m30_21  [color=red, key=1, label=insight, style=dashed];
m30_18 -> m30_28  [color=red, key=3, label="Field variable string Message", style=bold];
m30_18 -> m30_23  [key=2, style=dotted];
m30_19 -> m30_20  [color=green, key=0, style=solid];
m30_19 -> m30_9  [color=red, key=0, style=solid];
m30_19 -> m30_25  [key=2, style=dotted];
m30_19 -> m30_24  [key=2, style=dotted];
m30_19 -> m30_21  [color=darkseagreen4, key=1, label=insight, style=dashed];
m30_20 -> m30_21  [color=green, key=0, style=solid];
m30_20 -> m30_26  [key=2, style=dotted];
m30_11 -> m30_12  [color=green, key=0, style=solid];
m30_11 -> m30_18  [color=red, key=1, label=direction, style=dashed];
m30_11 -> m30_17  [color=green, key=1, label=direction, style=dashed];
m30_11 -> m30_19  [color=green, key=1, label=direction, style=dashed];
m30_13 -> m30_14  [color=green, key=0, style=solid];
m30_13 -> m30_15  [color=green, key=0, style=solid];
m30_15 -> m30_16  [color=red, key=0, style=solid];
m30_15 -> m30_17  [color=red, key=0, style=solid];
m30_14 -> m30_17  [color=green, key=0, style=solid];
m30_14 -> m30_18  [color=red, key=1, label=direction, style=dashed];
m30_14 -> m30_28  [color=red, key=3, label="Property variable QuantConnect.Orders.OrderDirection Direction", style=bold];
m30_14 -> m30_19  [color=green, key=1, label=direction, style=dashed];
m30_16 -> m30_17  [key=0, style=solid];
m30_16 -> m30_18  [color=red, key=1, label=direction, style=dashed];
m30_16 -> m30_19  [color=darkseagreen4, key=1, label=direction, style=dashed];
m30_22 -> m30_8  [color=blue, key=0, style=bold];
m30_35 -> m30_39  [key=0, style=solid];
m30_35 -> m30_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_35 -> m30_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_35 -> m30_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_35 -> m30_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m30_39 -> m30_40  [key=0, style=solid];
m30_40 -> m30_41  [key=0, style=solid];
m30_40 -> m30_45  [key=2, style=dotted];
m30_41 -> m30_42  [key=0, style=solid];
m30_41 -> m30_46  [key=2, style=dotted];
m30_42 -> m30_43  [key=0, style=solid];
m30_42 -> m30_47  [key=2, style=dotted];
m30_43 -> m30_44  [key=0, style=solid];
m30_43 -> m30_48  [key=2, style=dotted];
m30_44 -> m30_35  [color=blue, key=0, style=bold];
m30_47 -> m30_1  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_47 -> m30_2  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_47 -> m30_3  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_47 -> m30_4  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_47 -> m30_30  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_47 -> m30_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_47 -> m30_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_47 -> m30_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_47 -> m30_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_0 -> m30_1  [color=green, key=0, style=solid];
m30_0 -> m30_2  [color=green, key=1, label=int, style=dashed];
m30_0 -> m30_3  [color=green, key=1, label=int, style=dashed];
m30_0 -> m30_4  [color=green, key=1, label="QuantConnect.Indicators.MovingAverageType", style=dashed];
m30_1 -> m30_2  [color=green, key=0, style=solid];
m30_1 -> m30_28  [color=red, key=3, label="Field variable decimal FillPrice", style=bold];
m30_2 -> m30_3  [color=green, key=0, style=solid];
m30_3 -> m30_4  [color=green, key=0, style=solid];
m30_4 -> m30_5  [color=green, key=0, style=solid];
m30_5 -> m30_6  [key=0, style=solid];
m30_5 -> m30_7  [key=2, style=dotted];
m30_6 -> m30_0  [color=blue, key=0, style=bold];
m30_49 -> m30_1  [color=red, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_49 -> m30_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_49 -> m30_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_49 -> m30_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_49 -> m30_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_49 -> m30_9  [color=red, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_49 -> m30_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_49 -> m30_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_49 -> m30_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m30_50 -> m30_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m30_50 -> m30_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m30_50 -> m30_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m30_50 -> m30_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m30_50 -> m30_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m31_11 -> m31_12  [key=0, style=solid];
m31_12 -> m31_13  [color=red, key=0, style=solid];
m31_12 -> m31_15  [key=2, style=dotted];
m31_13 -> m31_14  [color=red, key=0, style=solid];
m31_13 -> m31_16  [color=red, key=2, style=dotted];
m31_14 -> m31_11  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [color=red, key=0, style=solid];
m31_0 -> m31_2  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_0 -> m31_3  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m31_0 -> m31_4  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_0 -> m31_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_0 -> m31_6  [color=red, key=1, label=decimal, style=dashed];
m31_1 -> m31_2  [color=red, key=0, style=solid];
m31_2 -> m31_3  [key=0, style=solid];
m31_3 -> m31_4  [key=0, style=solid];
m31_4 -> m31_5  [key=0, style=solid];
m31_5 -> m31_6  [color=red, key=0, style=solid];
m31_6 -> m31_7  [color=red, key=0, style=solid];
m31_7 -> m31_0  [color=blue, key=0, style=bold];
m31_8 -> m31_9  [color=red, key=0, style=solid];
m31_9 -> m31_10  [color=red, key=0, style=solid];
m31_10 -> m31_8  [color=blue, key=0, style=bold];
m31_17 -> m31_1  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_17 -> m31_2  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_17 -> m31_3  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_17 -> m31_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_17 -> m31_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_17 -> m31_6  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_17 -> m31_9  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_17 -> m31_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_17 -> m31_13  [color=red, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m32_124 -> m32_125  [color=green, key=0, style=solid];
m32_75 -> m32_76  [color=green, key=0, style=solid];
m32_76 -> m32_77  [color=green, key=0, style=solid];
m32_77 -> m32_75  [color=blue, key=0, style=bold];
m32_125 -> m32_125  [color=green, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m32_125 -> m32_126  [color=green, key=0, style=solid];
m32_125 -> m32_127  [color=green, key=2, style=dotted];
m32_125 -> m32_128  [color=green, key=2, style=dotted];
m32_126 -> m32_124  [color=blue, key=0, style=bold];
m32_59 -> m32_60  [color=green, key=0, style=solid];
m32_60 -> m32_61  [color=green, key=0, style=solid];
m32_60 -> m32_62  [color=green, key=2, style=dotted];
m32_61 -> m32_59  [color=blue, key=0, style=bold];
m32_82 -> m32_83  [color=green, key=0, style=solid];
m32_83 -> m32_84  [color=green, key=0, style=solid];
m32_83 -> m32_72  [color=green, key=2, style=dotted];
m32_83 -> m32_104  [color=green, key=1, label=list, style=dashed];
m32_83 -> m32_107  [color=green, key=1, label=list, style=dashed];
m32_83 -> m32_112  [color=green, key=1, label=list, style=dashed];
m32_84 -> m32_85  [color=green, key=0, style=solid];
m32_84 -> m32_37  [color=green, key=2, style=dotted];
m32_84 -> m32_86  [color=green, key=1, label=req, style=dashed];
m32_104 -> m32_89  [color=green, key=0, style=solid];
m32_104 -> m32_73  [color=green, key=2, style=dotted];
m32_107 -> m32_108  [color=green, key=0, style=solid];
m32_107 -> m32_112  [color=green, key=0, style=solid];
m32_107 -> m32_109  [color=green, key=1, label=item, style=dashed];
m32_107 -> m32_125  [color=green, key=1, label=item, style=dashed];
m32_107 -> m32_111  [color=green, key=1, label=item, style=dashed];
m32_112 -> m32_113  [color=green, key=0, style=solid];
m32_85 -> m32_86  [color=green, key=0, style=solid];
m32_85 -> m32_45  [color=green, key=2, style=dotted];
m32_86 -> m32_87  [color=green, key=0, style=solid];
m32_86 -> m32_46  [color=green, key=2, style=dotted];
m32_86 -> m32_88  [color=green, key=1, label=response, style=dashed];
m32_86 -> m32_97  [color=green, key=1, label=response, style=dashed];
m32_90 -> m32_104  [color=green, key=1, label=order, style=dashed];
m32_90 -> m32_91  [color=green, key=0, style=solid];
m32_90 -> m32_98  [color=green, key=1, label=order, style=dashed];
m32_90 -> m32_99  [color=green, key=1, label=order, style=dashed];
m32_90 -> m32_100  [color=green, key=1, label=order, style=dashed];
m32_90 -> m32_101  [color=green, key=1, label=order, style=dashed];
m32_90 -> m32_102  [color=green, key=1, label=order, style=dashed];
m32_90 -> m32_103  [color=green, key=1, label=order, style=dashed];
m32_92 -> m32_104  [color=green, key=1, label=order, style=dashed];
m32_92 -> m32_98  [color=green, key=0, style=solid];
m32_92 -> m32_114  [color=green, key=2, style=dotted];
m32_92 -> m32_99  [color=green, key=1, label=order, style=dashed];
m32_92 -> m32_100  [color=green, key=1, label=order, style=dashed];
m32_92 -> m32_101  [color=green, key=1, label=order, style=dashed];
m32_92 -> m32_102  [color=green, key=1, label=order, style=dashed];
m32_92 -> m32_103  [color=green, key=1, label=order, style=dashed];
m32_94 -> m32_104  [color=green, key=1, label=order, style=dashed];
m32_94 -> m32_98  [color=green, key=0, style=solid];
m32_94 -> m32_115  [color=green, key=2, style=dotted];
m32_94 -> m32_99  [color=green, key=1, label=order, style=dashed];
m32_94 -> m32_100  [color=green, key=1, label=order, style=dashed];
m32_94 -> m32_101  [color=green, key=1, label=order, style=dashed];
m32_94 -> m32_102  [color=green, key=1, label=order, style=dashed];
m32_94 -> m32_103  [color=green, key=1, label=order, style=dashed];
m32_96 -> m32_104  [color=green, key=1, label=order, style=dashed];
m32_96 -> m32_98  [color=green, key=0, style=solid];
m32_96 -> m32_116  [color=green, key=2, style=dotted];
m32_96 -> m32_99  [color=green, key=1, label=order, style=dashed];
m32_96 -> m32_100  [color=green, key=1, label=order, style=dashed];
m32_96 -> m32_101  [color=green, key=1, label=order, style=dashed];
m32_96 -> m32_102  [color=green, key=1, label=order, style=dashed];
m32_96 -> m32_103  [color=green, key=1, label=order, style=dashed];
m32_103 -> m32_104  [color=green, key=0, style=solid];
m32_89 -> m32_107  [color=green, key=0, style=solid];
m32_89 -> m32_97  [color=green, key=1, label=item, style=dashed];
m32_89 -> m32_105  [color=green, key=0, style=solid];
m32_89 -> m32_90  [color=green, key=0, style=solid];
m32_89 -> m32_91  [color=green, key=1, label=item, style=dashed];
m32_89 -> m32_92  [color=green, key=1, label=item, style=dashed];
m32_89 -> m32_93  [color=green, key=1, label=item, style=dashed];
m32_89 -> m32_94  [color=green, key=1, label=item, style=dashed];
m32_89 -> m32_95  [color=green, key=1, label=item, style=dashed];
m32_89 -> m32_96  [color=green, key=1, label=item, style=dashed];
m32_89 -> m32_98  [color=green, key=1, label=item, style=dashed];
m32_89 -> m32_99  [color=green, key=1, label=item, style=dashed];
m32_89 -> m32_100  [color=green, key=1, label=item, style=dashed];
m32_89 -> m32_102  [color=green, key=1, label=item, style=dashed];
m32_89 -> m32_103  [color=green, key=1, label=item, style=dashed];
m32_87 -> m32_107  [color=green, key=0, style=solid];
m32_87 -> m32_88  [color=green, key=0, style=solid];
m32_87 -> m32_105  [color=green, key=0, style=solid];
m32_108 -> m32_107  [color=green, key=0, style=solid];
m32_108 -> m32_109  [color=green, key=0, style=solid];
m32_108 -> m32_120  [color=green, key=2, style=dotted];
m32_111 -> m32_107  [color=green, key=0, style=solid];
m32_111 -> m32_123  [color=green, key=2, style=dotted];
m32_110 -> m32_107  [color=green, key=0, style=solid];
m32_110 -> m32_111  [color=green, key=0, style=solid];
m32_110 -> m32_122  [color=green, key=2, style=dotted];
m32_109 -> m32_110  [color=green, key=0, style=solid];
m32_109 -> m32_121  [color=green, key=2, style=dotted];
m32_109 -> m32_124  [color=green, key=1, label="lambda expression", style=dashed];
m32_109 -> m32_111  [color=green, key=1, label=cached, style=dashed];
m32_88 -> m32_89  [color=green, key=0, style=solid];
m32_88 -> m32_47  [color=green, key=2, style=dotted];
m32_97 -> m32_89  [color=green, key=0, style=solid];
m32_97 -> m32_48  [color=green, key=2, style=dotted];
m32_97 -> m32_49  [color=green, key=2, style=dotted];
m32_105 -> m32_106  [color=green, key=0, style=solid];
m32_95 -> m32_97  [color=green, key=0, style=solid];
m32_95 -> m32_96  [color=green, key=0, style=solid];
m32_106 -> m32_113  [color=green, key=0, style=solid];
m32_91 -> m32_92  [color=green, key=0, style=solid];
m32_91 -> m32_93  [color=green, key=0, style=solid];
m32_93 -> m32_94  [color=green, key=0, style=solid];
m32_93 -> m32_95  [color=green, key=0, style=solid];
m32_98 -> m32_99  [color=green, key=0, style=solid];
m32_99 -> m32_100  [color=green, key=0, style=solid];
m32_99 -> m32_72  [color=green, key=2, style=dotted];
m32_99 -> m32_117  [color=green, key=2, style=dotted];
m32_100 -> m32_101  [color=green, key=0, style=solid];
m32_100 -> m32_118  [color=green, key=2, style=dotted];
m32_102 -> m32_103  [color=green, key=0, style=solid];
m32_102 -> m32_119  [color=green, key=2, style=dotted];
m32_101 -> m32_102  [color=green, key=0, style=solid];
m32_113 -> m32_82  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [color=green, key=0, style=solid];
m32_0 -> m32_4  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_5  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_6  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_7  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_8  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_21  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_22  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_23  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_24  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_25  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_26  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_27  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_30  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_0 -> m32_31  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_1 -> m32_2  [color=green, key=0, style=solid];
m32_1 -> m32_36  [color=green, key=2, style=dotted];
m32_2 -> m32_3  [color=green, key=0, style=solid];
m32_2 -> m32_37  [color=green, key=2, style=dotted];
m32_2 -> m32_11  [color=green, key=1, label=req, style=dashed];
m32_2 -> m32_12  [color=green, key=1, label=req, style=dashed];
m32_2 -> m32_13  [color=green, key=1, label=req, style=dashed];
m32_4 -> m32_5  [color=green, key=0, style=solid];
m32_4 -> m32_39  [color=green, key=2, style=dotted];
m32_3 -> m32_4  [color=green, key=0, style=solid];
m32_3 -> m32_5  [color=green, key=1, label=payload, style=dashed];
m32_3 -> m32_6  [color=green, key=1, label=payload, style=dashed];
m32_3 -> m32_7  [color=green, key=1, label=payload, style=dashed];
m32_3 -> m32_8  [color=green, key=1, label=payload, style=dashed];
m32_3 -> m32_38  [color=green, key=2, style=dotted];
m32_3 -> m32_10  [color=green, key=1, label=payload, style=dashed];
m32_3 -> m32_11  [color=green, key=1, label=payload, style=dashed];
m32_5 -> m32_6  [color=green, key=0, style=solid];
m32_5 -> m32_40  [color=green, key=2, style=dotted];
m32_5 -> m32_41  [color=green, key=2, style=dotted];
m32_6 -> m32_7  [color=green, key=0, style=solid];
m32_6 -> m32_42  [color=green, key=2, style=dotted];
m32_7 -> m32_8  [color=green, key=0, style=solid];
m32_8 -> m32_9  [color=green, key=0, style=solid];
m32_8 -> m32_43  [color=green, key=2, style=dotted];
m32_9 -> m32_11  [color=green, key=0, style=solid];
m32_9 -> m32_10  [color=green, key=0, style=solid];
m32_21 -> m32_22  [color=green, key=0, style=solid];
m32_21 -> m32_23  [color=green, key=0, style=solid];
m32_21 -> m32_51  [color=green, key=2, style=dotted];
m32_20 -> m32_21  [color=green, key=0, style=solid];
m32_20 -> m32_22  [color=green, key=1, label=brokerId, style=dashed];
m32_20 -> m32_23  [color=green, key=1, label=brokerId, style=dashed];
m32_22 -> m32_25  [color=green, key=0, style=solid];
m32_22 -> m32_52  [color=green, key=2, style=dotted];
m32_23 -> m32_24  [color=green, key=0, style=solid];
m32_23 -> m32_52  [color=green, key=2, style=dotted];
m32_25 -> m32_26  [color=green, key=0, style=solid];
m32_25 -> m32_54  [color=green, key=2, style=dotted];
m32_25 -> m32_53  [color=green, key=2, style=dotted];
m32_24 -> m32_25  [color=green, key=0, style=solid];
m32_24 -> m32_53  [color=green, key=2, style=dotted];
m32_26 -> m32_27  [color=green, key=0, style=solid];
m32_26 -> m32_55  [color=green, key=2, style=dotted];
m32_26 -> m32_56  [color=green, key=2, style=dotted];
m32_27 -> m32_28  [color=green, key=0, style=solid];
m32_27 -> m32_57  [color=green, key=2, style=dotted];
m32_27 -> m32_58  [color=green, key=2, style=dotted];
m32_27 -> m32_49  [color=green, key=2, style=dotted];
m32_28 -> m32_29  [color=green, key=0, style=solid];
m32_28 -> m32_50  [color=green, key=2, style=dotted];
m32_30 -> m32_31  [color=green, key=0, style=solid];
m32_30 -> m32_55  [color=green, key=2, style=dotted];
m32_30 -> m32_56  [color=green, key=2, style=dotted];
m32_14 -> m32_30  [color=green, key=0, style=solid];
m32_14 -> m32_15  [color=green, key=0, style=solid];
m32_31 -> m32_32  [color=green, key=0, style=solid];
m32_13 -> m32_31  [color=green, key=1, label=response, style=dashed];
m32_13 -> m32_14  [color=green, key=0, style=solid];
m32_13 -> m32_46  [color=green, key=2, style=dotted];
m32_13 -> m32_15  [color=green, key=1, label=response, style=dashed];
m32_13 -> m32_17  [color=green, key=1, label=response, style=dashed];
m32_32 -> m32_33  [color=green, key=0, style=solid];
m32_32 -> m32_57  [color=green, key=2, style=dotted];
m32_32 -> m32_49  [color=green, key=2, style=dotted];
m32_11 -> m32_12  [color=green, key=0, style=solid];
m32_11 -> m32_44  [color=green, key=2, style=dotted];
m32_12 -> m32_13  [color=green, key=0, style=solid];
m32_12 -> m32_45  [color=green, key=2, style=dotted];
m32_10 -> m32_11  [color=green, key=0, style=solid];
m32_15 -> m32_16  [color=green, key=0, style=solid];
m32_15 -> m32_47  [color=green, key=2, style=dotted];
m32_15 -> m32_20  [color=green, key=1, label=raw, style=dashed];
m32_17 -> m32_18  [color=green, key=0, style=solid];
m32_17 -> m32_48  [color=green, key=2, style=dotted];
m32_17 -> m32_49  [color=green, key=2, style=dotted];
m32_16 -> m32_17  [color=green, key=0, style=solid];
m32_16 -> m32_20  [color=green, key=0, style=solid];
m32_18 -> m32_19  [color=green, key=0, style=solid];
m32_18 -> m32_50  [color=green, key=2, style=dotted];
m32_19 -> m32_35  [color=green, key=0, style=solid];
m32_29 -> m32_35  [color=green, key=0, style=solid];
m32_33 -> m32_34  [color=green, key=0, style=solid];
m32_33 -> m32_50  [color=green, key=2, style=dotted];
m32_34 -> m32_35  [color=green, key=0, style=solid];
m32_35 -> m32_0  [color=blue, key=0, style=bold];
m32_63 -> m32_64  [color=green, key=0, style=solid];
m32_63 -> m32_65  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_64 -> m32_65  [color=green, key=0, style=solid];
m32_64 -> m32_72  [color=green, key=2, style=dotted];
m32_64 -> m32_69  [color=green, key=1, label=success, style=dashed];
m32_64 -> m32_70  [color=green, key=1, label=success, style=dashed];
m32_65 -> m32_66  [color=green, key=0, style=solid];
m32_65 -> m32_70  [color=green, key=0, style=solid];
m32_69 -> m32_65  [color=green, key=0, style=solid];
m32_69 -> m32_73  [color=green, key=2, style=dotted];
m32_70 -> m32_71  [color=green, key=0, style=solid];
m32_70 -> m32_74  [color=green, key=2, style=dotted];
m32_70 -> m32_75  [color=green, key=1, label="lambda expression", style=dashed];
m32_66 -> m32_67  [color=green, key=0, style=solid];
m32_66 -> m32_37  [color=green, key=2, style=dotted];
m32_66 -> m32_68  [color=green, key=1, label=req, style=dashed];
m32_68 -> m32_69  [color=green, key=0, style=solid];
m32_68 -> m32_46  [color=green, key=2, style=dotted];
m32_67 -> m32_68  [color=green, key=0, style=solid];
m32_67 -> m32_45  [color=green, key=2, style=dotted];
m32_71 -> m32_63  [color=blue, key=0, style=bold];
m32_129 -> m32_130  [color=green, key=0, style=solid];
m32_130 -> m32_131  [color=green, key=0, style=solid];
m32_130 -> m32_72  [color=green, key=2, style=dotted];
m32_131 -> m32_129  [color=blue, key=0, style=bold];
m32_78 -> m32_79  [color=green, key=0, style=solid];
m32_79 -> m32_80  [color=green, key=0, style=solid];
m32_79 -> m32_81  [color=green, key=2, style=dotted];
m32_80 -> m32_78  [color=blue, key=0, style=bold];
m32_162 -> m32_164  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m32_162 -> m32_163  [key=0, style=solid];
m32_166 -> m32_45  [key=2, style=dotted];
m32_166 -> m32_167  [key=0, style=solid];
m32_167 -> m32_46  [key=2, style=dotted];
m32_167 -> m32_168  [key=0, style=solid];
m32_165 -> m32_37  [key=2, style=dotted];
m32_165 -> m32_166  [key=0, style=solid];
m32_165 -> m32_167  [color=darkseagreen4, key=1, label=req, style=dashed];
m32_168 -> m32_47  [key=2, style=dotted];
m32_168 -> m32_169  [key=0, style=solid];
m32_164 -> m32_165  [key=0, style=solid];
m32_164 -> m32_170  [key=0, style=solid];
m32_169 -> m32_164  [key=0, style=solid];
m32_169 -> m32_169  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m32_169 -> m32_170  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m32_163 -> m32_164  [key=0, style=solid];
m32_163 -> m32_169  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m32_163 -> m32_170  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m32_170 -> m32_171  [key=0, style=solid];
m32_171 -> m32_162  [color=blue, key=0, style=bold];
m32_132 -> m32_133  [color=green, key=0, style=solid];
m32_133 -> m32_134  [color=green, key=0, style=solid];
m32_133 -> m32_72  [color=green, key=2, style=dotted];
m32_133 -> m32_140  [color=green, key=1, label=list, style=dashed];
m32_133 -> m32_143  [color=green, key=1, label=list, style=dashed];
m32_133 -> m32_145  [color=green, key=1, label=list, style=dashed];
m32_133 -> m32_146  [color=green, key=1, label=list, style=dashed];
m32_134 -> m32_135  [color=green, key=0, style=solid];
m32_134 -> m32_37  [color=green, key=2, style=dotted];
m32_134 -> m32_136  [color=green, key=1, label=req, style=dashed];
m32_140 -> m32_137  [color=green, key=0, style=solid];
m32_140 -> m32_148  [color=green, key=2, style=dotted];
m32_140 -> m32_73  [color=green, key=2, style=dotted];
m32_143 -> m32_137  [color=green, key=0, style=solid];
m32_143 -> m32_148  [color=green, key=2, style=dotted];
m32_143 -> m32_151  [color=green, key=2, style=dotted];
m32_143 -> m32_73  [color=green, key=2, style=dotted];
m32_145 -> m32_137  [color=green, key=0, style=solid];
m32_145 -> m32_148  [color=green, key=2, style=dotted];
m32_145 -> m32_151  [color=green, key=2, style=dotted];
m32_145 -> m32_73  [color=green, key=2, style=dotted];
m32_146 -> m32_147  [color=green, key=0, style=solid];
m32_135 -> m32_136  [color=green, key=0, style=solid];
m32_135 -> m32_45  [color=green, key=2, style=dotted];
m32_136 -> m32_137  [color=green, key=0, style=solid];
m32_136 -> m32_46  [color=green, key=2, style=dotted];
m32_137 -> m32_140  [color=green, key=1, label=item, style=dashed];
m32_137 -> m32_143  [color=green, key=1, label=item, style=dashed];
m32_137 -> m32_145  [color=green, key=1, label=item, style=dashed];
m32_137 -> m32_146  [color=green, key=0, style=solid];
m32_137 -> m32_138  [color=green, key=0, style=solid];
m32_137 -> m32_47  [color=green, key=2, style=dotted];
m32_137 -> m32_139  [color=green, key=1, label=item, style=dashed];
m32_137 -> m32_141  [color=green, key=1, label=item, style=dashed];
m32_137 -> m32_142  [color=green, key=1, label=item, style=dashed];
m32_137 -> m32_144  [color=green, key=1, label=item, style=dashed];
m32_139 -> m32_140  [color=green, key=0, style=solid];
m32_139 -> m32_141  [color=green, key=0, style=solid];
m32_142 -> m32_143  [color=green, key=0, style=solid];
m32_142 -> m32_150  [color=green, key=2, style=dotted];
m32_144 -> m32_145  [color=green, key=0, style=solid];
m32_144 -> m32_152  [color=green, key=2, style=dotted];
m32_144 -> m32_153  [color=green, key=2, style=dotted];
m32_138 -> m32_137  [color=green, key=0, style=solid];
m32_138 -> m32_139  [color=green, key=0, style=solid];
m32_141 -> m32_142  [color=green, key=0, style=solid];
m32_141 -> m32_144  [color=green, key=0, style=solid];
m32_141 -> m32_149  [color=green, key=2, style=dotted];
m32_147 -> m32_132  [color=blue, key=0, style=bold];
m32_154 -> m32_155  [key=0, style=solid];
m32_155 -> m32_156  [key=0, style=solid];
m32_156 -> m32_157  [key=0, style=solid];
m32_156 -> m32_160  [key=2, style=dotted];
m32_156 -> m32_158  [color=darkseagreen4, key=1, label=copy, style=dashed];
m32_157 -> m32_158  [key=0, style=solid];
m32_157 -> m32_161  [key=2, style=dotted];
m32_158 -> m32_159  [key=0, style=solid];
m32_159 -> m32_154  [color=blue, key=0, style=bold];
m32_172 -> m32_1  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_21  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_22  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_24  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_25  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_26  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_27  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_30  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_12  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_13  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_9  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_17  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_18  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_28  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_32  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_33  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_67  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_68  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_79  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_85  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_86  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_97  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_100  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_102  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_109  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_111  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_135  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_136  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_142  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_144  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_155  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_156  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_166  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_172 -> m32_167  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m32_173 -> m32_125  [color=green, key=1, label=item, style=dashed];
m33_200 -> m33_201  [key=0, style=solid];
m33_200 -> m33_203  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m33_200 -> m33_205  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m33_200 -> m33_206  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m33_200 -> m33_207  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m33_200 -> m33_192  [color=darkorchid, key=3, label="Parameter variable DateTimeZone timeZone", style=bold];
m33_201 -> m33_202  [key=0, style=solid];
m33_201 -> m33_203  [key=0, style=solid];
m33_203 -> m33_204  [key=0, style=solid];
m33_203 -> m33_205  [key=0, style=solid];
m33_205 -> m33_206  [key=0, style=solid];
m33_205 -> m33_211  [key=2, style=dotted];
m33_206 -> m33_207  [key=0, style=solid];
m33_206 -> m33_33  [key=2, style=dotted];
m33_207 -> m33_208  [key=0, style=solid];
m33_207 -> m33_212  [key=2, style=dotted];
m33_202 -> m33_208  [key=0, style=solid];
m33_202 -> m33_209  [key=2, style=dotted];
m33_204 -> m33_208  [key=0, style=solid];
m33_204 -> m33_210  [key=2, style=dotted];
m33_208 -> m33_200  [color=blue, key=0, style=bold];
m33_0 -> m33_1  [key=0, style=solid];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_29  [key=2, style=dotted];
m33_2 -> m33_3  [key=0, style=solid];
m33_3 -> m33_4  [key=0, style=solid];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_30  [key=2, style=dotted];
m33_5 -> m33_6  [key=0, style=solid];
m33_5 -> m33_31  [key=2, style=dotted];
m33_6 -> m33_7  [key=0, style=solid];
m33_6 -> m33_32  [key=2, style=dotted];
m33_7 -> m33_8  [key=0, style=solid];
m33_7 -> m33_33  [key=2, style=dotted];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> m33_34  [key=2, style=dotted];
m33_9 -> m33_10  [key=0, style=solid];
m33_9 -> m33_35  [key=2, style=dotted];
m33_10 -> m33_11  [key=0, style=solid];
m33_10 -> m33_36  [key=2, style=dotted];
m33_11 -> m33_12  [color=green, key=0, style=solid];
m33_11 -> m33_37  [key=2, style=dotted];
m33_12 -> m33_13  [color=green, key=0, style=solid];
m33_12 -> m33_38  [color=green, key=2, style=dotted];
m33_13 -> m33_14  [key=0, style=solid];
m33_13 -> m33_39  [key=2, style=dotted];
m33_14 -> m33_15  [key=0, style=solid];
m33_14 -> m33_40  [key=2, style=dotted];
m33_15 -> m33_16  [key=0, style=solid];
m33_16 -> m33_17  [key=0, style=solid];
m33_17 -> m33_18  [key=0, style=solid];
m33_17 -> m33_41  [key=2, style=dotted];
m33_18 -> m33_19  [key=0, style=solid];
m33_18 -> m33_42  [key=2, style=dotted];
m33_19 -> m33_20  [key=0, style=solid];
m33_19 -> m33_43  [key=2, style=dotted];
m33_20 -> m33_21  [key=0, style=solid];
m33_20 -> m33_44  [key=2, style=dotted];
m33_21 -> m33_22  [key=0, style=solid];
m33_21 -> m33_45  [key=2, style=dotted];
m33_21 -> m33_46  [key=2, style=dotted];
m33_22 -> m33_23  [key=0, style=solid];
m33_22 -> m33_47  [key=2, style=dotted];
m33_23 -> m33_24  [key=0, style=solid];
m33_23 -> m33_48  [key=2, style=dotted];
m33_24 -> m33_25  [key=0, style=solid];
m33_24 -> m33_49  [key=2, style=dotted];
m33_24 -> m33_39  [key=2, style=dotted];
m33_24 -> m33_50  [key=2, style=dotted];
m33_25 -> m33_26  [key=0, style=solid];
m33_25 -> m33_51  [key=2, style=dotted];
m33_26 -> m33_27  [key=0, style=solid];
m33_26 -> m33_52  [key=2, style=dotted];
m33_27 -> m33_28  [key=0, style=solid];
m33_27 -> m33_53  [key=2, style=dotted];
m33_28 -> m33_0  [color=blue, key=0, style=bold];
m33_333 -> m33_334  [key=0, style=solid];
m33_333 -> m33_35  [color=darkorchid, key=3, label="method methodReturn bool GetLocked", style=bold];
m33_334 -> m33_335  [key=0, style=solid];
m33_335 -> m33_333  [color=blue, key=0, style=bold];
m33_191 -> m33_192  [key=0, style=solid];
m33_191 -> m33_193  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_191 -> m33_195  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_192 -> m33_193  [key=0, style=solid];
m33_193 -> m33_194  [key=0, style=solid];
m33_193 -> m33_196  [key=0, style=solid];
m33_195 -> m33_197  [key=0, style=solid];
m33_195 -> m33_198  [key=2, style=dotted];
m33_195 -> m33_199  [key=2, style=dotted];
m33_194 -> m33_195  [key=0, style=solid];
m33_196 -> m33_197  [key=0, style=solid];
m33_196 -> m33_200  [key=2, style=dotted];
m33_197 -> m33_191  [color=blue, key=0, style=bold];
m33_449 -> m33_450  [key=0, style=solid];
m33_449 -> m33_381  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Crypto.Crypto AddCrypto", style=bold];
m33_450 -> m33_451  [key=0, style=solid];
m33_450 -> m33_381  [key=2, style=dotted];
m33_451 -> m33_449  [color=blue, key=0, style=bold];
m33_104 -> m33_105  [key=0, style=solid];
m33_105 -> m33_106  [key=0, style=solid];
m33_105 -> m33_107  [key=0, style=solid];
m33_106 -> m33_105  [key=0, style=solid];
m33_106 -> m33_106  [color=darkseagreen4, key=1, label=dataFeed, style=dashed];
m33_107 -> m33_104  [color=blue, key=0, style=bold];
m33_497 -> m33_498  [key=0, style=solid];
m33_497 -> m33_403  [key=2, style=dotted];
m33_493 -> m33_494  [key=0, style=solid];
m33_493 -> m33_495  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_493 -> m33_496  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_493 -> m33_497  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m33_493 -> m33_490  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m33_494 -> m33_495  [key=0, style=solid];
m33_494 -> m33_401  [key=2, style=dotted];
m33_494 -> m33_497  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m33_495 -> m33_496  [key=0, style=solid];
m33_495 -> m33_500  [key=2, style=dotted];
m33_495 -> m33_501  [key=2, style=dotted];
m33_495 -> m33_497  [color=darkseagreen4, key=1, label=symbolObject, style=dashed];
m33_496 -> m33_497  [key=0, style=solid];
m33_496 -> m33_402  [key=2, style=dotted];
m33_498 -> m33_499  [key=0, style=solid];
m33_498 -> m33_80  [key=2, style=dotted];
m33_499 -> m33_493  [color=blue, key=0, style=bold];
m33_533 -> m33_534  [key=0, style=solid];
m33_534 -> m33_535  [key=0, style=solid];
m33_534 -> m33_536  [key=2, style=dotted];
m33_535 -> m33_533  [color=blue, key=0, style=bold];
m33_261 -> m33_262  [key=0, style=solid];
m33_262 -> m33_263  [key=0, style=solid];
m33_262 -> m33_264  [key=2, style=dotted];
m33_263 -> m33_261  [color=blue, key=0, style=bold];
m33_38 -> m33_45  [color=darkorchid, key=3, label="Field variable string _previousDebugMessage", style=bold];
m33_38 -> m33_218  [color=darkorchid, key=3, label="Field variable string _previousDebugMessage", style=bold];
m33_287 -> m33_288  [key=0, style=solid];
m33_288 -> m33_289  [key=0, style=solid];
m33_288 -> m33_30  [key=2, style=dotted];
m33_289 -> m33_290  [key=0, style=solid];
m33_289 -> m33_31  [key=2, style=dotted];
m33_289 -> m33_294  [key=2, style=dotted];
m33_289 -> m33_295  [key=2, style=dotted];
m33_289 -> m33_289  [color=darkseagreen4, key=1, label=end, style=dashed];
m33_290 -> m33_291  [key=0, style=solid];
m33_290 -> m33_293  [key=0, style=solid];
m33_290 -> m33_296  [key=2, style=dotted];
m33_291 -> m33_292  [key=0, style=solid];
m33_292 -> m33_293  [key=0, style=solid];
m33_292 -> m33_209  [key=2, style=dotted];
m33_293 -> m33_287  [color=blue, key=0, style=bold];
m33_165 -> m33_166  [key=0, style=solid];
m33_166 -> m33_165  [color=blue, key=0, style=bold];
m33_223 -> m33_224  [key=0, style=solid];
m33_223 -> m33_226  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.IBrokerageModel", style=dashed];
m33_224 -> m33_225  [key=0, style=solid];
m33_226 -> m33_227  [key=0, style=solid];
m33_226 -> m33_49  [key=2, style=dotted];
m33_226 -> m33_50  [key=2, style=dotted];
m33_225 -> m33_226  [key=0, style=solid];
m33_225 -> m33_231  [key=0, style=solid];
m33_227 -> m33_228  [key=0, style=solid];
m33_227 -> m33_231  [key=0, style=solid];
m33_227 -> m33_229  [color=darkseagreen4, key=1, label=security, style=dashed];
m33_227 -> m33_230  [color=darkseagreen4, key=1, label=security, style=dashed];
m33_228 -> m33_229  [key=0, style=solid];
m33_228 -> m33_230  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m33_229 -> m33_230  [key=0, style=solid];
m33_229 -> m33_232  [key=2, style=dotted];
m33_230 -> m33_227  [key=0, style=solid];
m33_230 -> m33_233  [key=2, style=dotted];
m33_231 -> m33_223  [color=blue, key=0, style=bold];
m33_265 -> m33_266  [key=0, style=solid];
m33_266 -> m33_267  [key=0, style=solid];
m33_266 -> m33_264  [key=2, style=dotted];
m33_267 -> m33_265  [color=blue, key=0, style=bold];
m33_296 -> m33_317  [key=0, style=solid];
m33_296 -> m33_319  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_296 -> m33_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_296 -> m33_324  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_296 -> m33_288  [color=darkorchid, key=3, label="Parameter variable System.DateTime end", style=bold];
m33_317 -> m33_318  [key=0, style=solid];
m33_317 -> m33_319  [key=0, style=solid];
m33_319 -> m33_320  [key=0, style=solid];
m33_319 -> m33_321  [key=0, style=solid];
m33_319 -> m33_31  [key=2, style=dotted];
m33_322 -> m33_323  [key=0, style=solid];
m33_322 -> m33_324  [key=0, style=solid];
m33_324 -> m33_325  [key=0, style=solid];
m33_324 -> m33_46  [key=2, style=dotted];
m33_324 -> m33_315  [key=2, style=dotted];
m33_324 -> m33_31  [key=2, style=dotted];
m33_324 -> m33_329  [key=2, style=dotted];
m33_324 -> m33_324  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_324 -> m33_326  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_318 -> m33_328  [key=0, style=solid];
m33_320 -> m33_321  [key=0, style=solid];
m33_320 -> m33_31  [key=2, style=dotted];
m33_320 -> m33_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_320 -> m33_324  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_321 -> m33_322  [key=0, style=solid];
m33_321 -> m33_324  [key=0, style=solid];
m33_321 -> m33_314  [key=2, style=dotted];
m33_323 -> m33_328  [key=0, style=solid];
m33_323 -> m33_209  [key=2, style=dotted];
m33_325 -> m33_326  [key=0, style=solid];
m33_325 -> m33_327  [key=0, style=solid];
m33_326 -> m33_328  [key=0, style=solid];
m33_327 -> m33_328  [key=0, style=solid];
m33_327 -> m33_209  [key=2, style=dotted];
m33_328 -> m33_296  [color=blue, key=0, style=bold];
m33_346 -> m33_347  [key=0, style=solid];
m33_347 -> m33_348  [key=0, style=solid];
m33_348 -> m33_349  [key=0, style=solid];
m33_348 -> m33_345  [key=2, style=dotted];
m33_349 -> m33_346  [color=blue, key=0, style=bold];
m33_179 -> m33_180  [key=0, style=solid];
m33_180 -> m33_179  [color=blue, key=0, style=bold];
m33_525 -> m33_526  [key=0, style=solid];
m33_526 -> m33_527  [key=0, style=solid];
m33_526 -> m33_218  [key=2, style=dotted];
m33_527 -> m33_528  [key=0, style=solid];
m33_528 -> m33_525  [color=blue, key=0, style=bold];
m33_452 -> m33_453  [key=0, style=solid];
m33_452 -> m33_454  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m33_452 -> m33_459  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m33_452 -> m33_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m33_452 -> m33_461  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m33_452 -> m33_462  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m33_452 -> m33_463  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m33_453 -> m33_454  [key=0, style=solid];
m33_453 -> m33_79  [color=darkorchid, key=3, label="Local variable QuantConnect.Securities.Security security", style=bold];
m33_454 -> m33_455  [key=0, style=solid];
m33_454 -> m33_468  [key=0, style=solid];
m33_454 -> m33_78  [key=2, style=dotted];
m33_454 -> m33_456  [color=darkseagreen4, key=1, label=security, style=dashed];
m33_454 -> m33_457  [color=darkseagreen4, key=1, label=security, style=dashed];
m33_454 -> m33_458  [color=darkseagreen4, key=1, label=security, style=dashed];
m33_459 -> m33_460  [key=0, style=solid];
m33_459 -> m33_473  [key=2, style=dotted];
m33_459 -> m33_142  [key=2, style=dotted];
m33_459 -> m33_477  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_459 -> m33_461  [color=darkseagreen4, key=1, label=universe, style=dashed];
m33_459 -> m33_466  [color=darkseagreen4, key=1, label=universe, style=dashed];
m33_461 -> m33_462  [key=0, style=solid];
m33_461 -> m33_474  [key=2, style=dotted];
m33_461 -> m33_467  [color=darkseagreen4, key=1, label=ret, style=dashed];
m33_462 -> m33_463  [key=0, style=solid];
m33_462 -> m33_466  [key=0, style=solid];
m33_463 -> m33_464  [key=0, style=solid];
m33_463 -> m33_475  [key=2, style=dotted];
m33_455 -> m33_456  [key=0, style=solid];
m33_455 -> m33_470  [key=2, style=dotted];
m33_468 -> m33_469  [key=0, style=solid];
m33_456 -> m33_457  [key=0, style=solid];
m33_456 -> m33_471  [key=2, style=dotted];
m33_457 -> m33_458  [key=0, style=solid];
m33_457 -> m33_459  [key=0, style=solid];
m33_458 -> m33_459  [key=0, style=solid];
m33_458 -> m33_472  [key=2, style=dotted];
m33_460 -> m33_461  [key=0, style=solid];
m33_460 -> m33_468  [key=0, style=solid];
m33_466 -> m33_467  [key=0, style=solid];
m33_466 -> m33_476  [key=2, style=dotted];
m33_466 -> m33_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_467 -> m33_469  [key=0, style=solid];
m33_464 -> m33_465  [key=0, style=solid];
m33_464 -> m33_79  [key=2, style=dotted];
m33_465 -> m33_466  [key=0, style=solid];
m33_465 -> m33_80  [key=2, style=dotted];
m33_469 -> m33_452  [color=blue, key=0, style=bold];
m33_167 -> m33_168  [key=0, style=solid];
m33_168 -> m33_167  [color=blue, key=0, style=bold];
m33_90 -> m33_91  [key=0, style=solid];
m33_90 -> m33_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_91 -> m33_92  [key=0, style=solid];
m33_92 -> m33_93  [key=0, style=solid];
m33_92 -> m33_94  [key=2, style=dotted];
m33_92 -> m33_92  [color=darkseagreen4, key=1, label=value, style=dashed];
m33_93 -> m33_90  [color=blue, key=0, style=bold];
m33_273 -> m33_274  [key=0, style=solid];
m33_273 -> m33_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_274 -> m33_275  [key=0, style=solid];
m33_274 -> m33_276  [key=0, style=solid];
m33_275 -> m33_277  [key=0, style=solid];
m33_275 -> m33_278  [key=2, style=dotted];
m33_276 -> m33_277  [key=0, style=solid];
m33_276 -> m33_209  [key=2, style=dotted];
m33_277 -> m33_273  [color=blue, key=0, style=bold];
m33_213 -> m33_214  [key=0, style=solid];
m33_214 -> m33_215  [key=0, style=solid];
m33_214 -> m33_216  [key=0, style=solid];
m33_215 -> m33_217  [key=0, style=solid];
m33_216 -> m33_217  [key=0, style=solid];
m33_216 -> m33_218  [key=2, style=dotted];
m33_217 -> m33_213  [color=blue, key=0, style=bold];
m33_123 -> m33_124  [key=0, style=solid];
m33_124 -> m33_125  [key=0, style=solid];
m33_125 -> m33_123  [color=blue, key=0, style=bold];
m33_487 -> m33_488  [key=0, style=solid];
m33_488 -> m33_489  [key=0, style=solid];
m33_488 -> m33_490  [key=2, style=dotted];
m33_489 -> m33_487  [color=blue, key=0, style=bold];
m33_484 -> m33_485  [key=0, style=solid];
m33_87 -> m33_88  [key=0, style=solid];
m33_88 -> m33_89  [key=0, style=solid];
m33_88 -> m33_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m33_89 -> m33_87  [color=blue, key=0, style=bold];
m33_120 -> m33_121  [key=0, style=solid];
m33_120 -> m33_122  [key=2, style=dotted];
m33_119 -> m33_120  [key=0, style=solid];
m33_121 -> m33_119  [color=blue, key=0, style=bold];
m33_148 -> m33_149  [key=0, style=solid];
m33_151 -> m33_152  [key=0, style=solid];
m33_154 -> m33_155  [key=0, style=solid];
m33_158 -> m33_159  [key=0, style=solid];
m33_149 -> m33_150  [key=0, style=solid];
m33_150 -> m33_148  [color=blue, key=0, style=bold];
m33_152 -> m33_153  [key=0, style=solid];
m33_153 -> m33_151  [color=blue, key=0, style=bold];
m33_155 -> m33_156  [key=0, style=solid];
m33_155 -> m33_157  [key=2, style=dotted];
m33_156 -> m33_154  [color=blue, key=0, style=bold];
m33_159 -> m33_160  [key=0, style=solid];
m33_159 -> m33_157  [key=2, style=dotted];
m33_160 -> m33_158  [color=blue, key=0, style=bold];
m33_252 -> m33_253  [key=0, style=solid];
m33_252 -> m33_252  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m33_251 -> m33_252  [key=0, style=solid];
m33_253 -> m33_251  [color=blue, key=0, style=bold];
m33_478 -> m33_479  [key=0, style=solid];
m33_478 -> m33_480  [key=2, style=dotted];
m33_477 -> m33_478  [key=0, style=solid];
m33_481 -> m33_482  [key=0, style=solid];
m33_479 -> m33_477  [color=blue, key=0, style=bold];
m33_482 -> m33_483  [key=0, style=solid];
m33_482 -> m33_476  [key=2, style=dotted];
m33_482 -> m33_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_483 -> m33_481  [color=blue, key=0, style=bold];
m33_485 -> m33_486  [key=0, style=solid];
m33_486 -> m33_484  [color=blue, key=0, style=bold];
m33_185 -> m33_186  [key=0, style=solid];
m33_186 -> m33_185  [color=blue, key=0, style=bold];
m33_555 -> m33_556  [key=0, style=solid];
m33_555 -> m33_558  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IHistoryProvider", style=dashed];
m33_556 -> m33_557  [key=0, style=solid];
m33_556 -> m33_558  [key=0, style=solid];
m33_558 -> m33_559  [key=0, style=solid];
m33_557 -> m33_559  [key=0, style=solid];
m33_557 -> m33_210  [key=2, style=dotted];
m33_559 -> m33_555  [color=blue, key=0, style=bold];
m33_239 -> m33_240  [key=0, style=solid];
m33_239 -> m33_241  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m33_239 -> m33_242  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m33_240 -> m33_241  [key=0, style=solid];
m33_241 -> m33_242  [key=0, style=solid];
m33_241 -> m33_244  [key=2, style=dotted];
m33_242 -> m33_243  [key=0, style=solid];
m33_242 -> m33_77  [key=2, style=dotted];
m33_243 -> m33_239  [color=blue, key=0, style=bold];
m33_245 -> m33_246  [key=0, style=solid];
m33_246 -> m33_247  [key=0, style=solid];
m33_246 -> m33_250  [key=2, style=dotted];
m33_246 -> m33_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_246 -> m33_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_246 -> m33_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_247 -> m33_248  [key=0, style=solid];
m33_247 -> m33_142  [key=2, style=dotted];
m33_247 -> m33_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_248 -> m33_249  [key=0, style=solid];
m33_248 -> m33_77  [key=2, style=dotted];
m33_249 -> m33_245  [color=blue, key=0, style=bold];
m33_218 -> m33_502  [key=0, style=solid];
m33_218 -> m33_504  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_218 -> m33_505  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_218 -> m33_216  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m33_502 -> m33_503  [key=0, style=solid];
m33_502 -> m33_504  [key=0, style=solid];
m33_504 -> m33_505  [key=0, style=solid];
m33_504 -> m33_507  [key=2, style=dotted];
m33_505 -> m33_506  [key=0, style=solid];
m33_503 -> m33_506  [key=0, style=solid];
m33_506 -> m33_218  [color=blue, key=0, style=bold];
m33_187 -> m33_188  [key=0, style=solid];
m33_188 -> m33_189  [key=0, style=solid];
m33_188 -> m33_190  [key=2, style=dotted];
m33_189 -> m33_187  [color=blue, key=0, style=bold];
m33_508 -> m33_509  [key=0, style=solid];
m33_508 -> m33_511  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_509 -> m33_510  [key=0, style=solid];
m33_509 -> m33_511  [key=0, style=solid];
m33_511 -> m33_512  [key=0, style=solid];
m33_511 -> m33_507  [key=2, style=dotted];
m33_510 -> m33_512  [key=0, style=solid];
m33_512 -> m33_508  [color=blue, key=0, style=bold];
m33_175 -> m33_176  [key=0, style=solid];
m33_176 -> m33_175  [color=blue, key=0, style=bold];
m33_257 -> m33_258  [key=0, style=solid];
m33_258 -> m33_259  [key=0, style=solid];
m33_258 -> m33_260  [key=2, style=dotted];
m33_259 -> m33_257  [color=blue, key=0, style=bold];
m33_254 -> m33_255  [key=0, style=solid];
m33_255 -> m33_256  [key=0, style=solid];
m33_256 -> m33_254  [color=blue, key=0, style=bold];
m33_112 -> m33_113  [key=0, style=solid];
m33_113 -> m33_114  [key=0, style=solid];
m33_113 -> m33_115  [key=2, style=dotted];
m33_113 -> m33_108  [key=2, style=dotted];
m33_114 -> m33_112  [color=blue, key=0, style=bold];
m33_177 -> m33_178  [key=0, style=solid];
m33_178 -> m33_177  [color=blue, key=0, style=bold];
m33_163 -> m33_164  [key=0, style=solid];
m33_164 -> m33_163  [color=blue, key=0, style=bold];
m33_161 -> m33_162  [key=0, style=solid];
m33_162 -> m33_161  [color=blue, key=0, style=bold];
m33_103 -> m33_513  [key=0, style=solid];
m33_103 -> m33_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_103 -> m33_516  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_513 -> m33_514  [key=0, style=solid];
m33_513 -> m33_515  [key=0, style=solid];
m33_515 -> m33_516  [key=0, style=solid];
m33_515 -> m33_507  [key=2, style=dotted];
m33_516 -> m33_517  [key=0, style=solid];
m33_514 -> m33_517  [key=0, style=solid];
m33_517 -> m33_103  [color=blue, key=0, style=bold];
m33_181 -> m33_182  [key=0, style=solid];
m33_182 -> m33_181  [color=blue, key=0, style=bold];
m33_297 -> m33_298  [key=0, style=solid];
m33_298 -> m33_299  [key=0, style=solid];
m33_299 -> m33_297  [color=blue, key=0, style=bold];
m33_353 -> m33_354  [key=0, style=solid];
m33_353 -> m33_350  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m33_353 -> m33_351  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m33_353 -> m33_356  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m33_354 -> m33_355  [key=0, style=solid];
m33_354 -> m33_356  [key=2, style=dotted];
m33_355 -> m33_353  [color=blue, key=0, style=bold];
m33_565 -> m33_566  [key=0, style=solid];
m33_566 -> m33_567  [key=0, style=solid];
m33_567 -> m33_565  [color=blue, key=0, style=bold];
m33_378 -> m33_379  [key=0, style=solid];
m33_378 -> m33_381  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Equity.Equity AddEquity", style=bold];
m33_379 -> m33_380  [key=0, style=solid];
m33_379 -> m33_381  [key=2, style=dotted];
m33_380 -> m33_378  [color=blue, key=0, style=bold];
m33_279 -> m33_280  [key=0, style=solid];
m33_280 -> m33_281  [key=0, style=solid];
m33_280 -> m33_30  [key=2, style=dotted];
m33_281 -> m33_282  [key=0, style=solid];
m33_281 -> m33_281  [color=darkseagreen4, key=1, label=start, style=dashed];
m33_282 -> m33_283  [key=0, style=solid];
m33_282 -> m33_285  [key=0, style=solid];
m33_282 -> m33_286  [key=2, style=dotted];
m33_283 -> m33_284  [key=0, style=solid];
m33_284 -> m33_285  [key=0, style=solid];
m33_284 -> m33_209  [key=2, style=dotted];
m33_285 -> m33_279  [color=blue, key=0, style=bold];
m33_58 -> m33_59  [key=0, style=solid];
m33_59 -> m33_60  [key=0, style=solid];
m33_59 -> m33_67  [key=0, style=solid];
m33_60 -> m33_61  [key=0, style=solid];
m33_60 -> m33_62  [key=0, style=solid];
m33_67 -> m33_68  [key=0, style=solid];
m33_67 -> m33_76  [key=0, style=solid];
m33_67 -> m33_82  [key=2, style=dotted];
m33_67 -> m33_83  [key=2, style=dotted];
m33_67 -> m33_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_67 -> m33_71  [color=darkseagreen4, key=1, label=option, style=dashed];
m33_67 -> m33_72  [color=darkseagreen4, key=1, label=option, style=dashed];
m33_61 -> m33_62  [key=0, style=solid];
m33_61 -> m33_77  [key=2, style=dotted];
m33_62 -> m33_63  [key=0, style=solid];
m33_62 -> m33_79  [color=darkorchid, key=3, label="Local variable QuantConnect.Securities.Security security", style=bold];
m33_63 -> m33_64  [key=0, style=solid];
m33_63 -> m33_66  [key=0, style=solid];
m33_63 -> m33_78  [key=2, style=dotted];
m33_64 -> m33_65  [key=0, style=solid];
m33_64 -> m33_79  [key=2, style=dotted];
m33_64 -> m33_66  [color=darkseagreen4, key=1, label=security, style=dashed];
m33_66 -> m33_67  [key=0, style=solid];
m33_66 -> m33_81  [key=2, style=dotted];
m33_65 -> m33_66  [key=0, style=solid];
m33_65 -> m33_80  [key=2, style=dotted];
m33_68 -> m33_69  [key=0, style=solid];
m33_68 -> m33_70  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m33_68 -> m33_71  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m33_71 -> m33_72  [key=0, style=solid];
m33_71 -> m33_85  [key=2, style=dotted];
m33_71 -> m33_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m33_71 -> m33_75  [color=darkseagreen4, key=1, label=equity, style=dashed];
m33_72 -> m33_73  [key=0, style=solid];
m33_72 -> m33_72  [color=darkseagreen4, key=1, label=option, style=dashed];
m33_69 -> m33_70  [key=0, style=solid];
m33_70 -> m33_71  [key=0, style=solid];
m33_70 -> m33_72  [key=0, style=solid];
m33_70 -> m33_84  [key=2, style=dotted];
m33_70 -> m33_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m33_70 -> m33_75  [color=darkseagreen4, key=1, label=equity, style=dashed];
m33_73 -> m33_74  [key=0, style=solid];
m33_73 -> m33_67  [key=0, style=solid];
m33_75 -> m33_67  [key=0, style=solid];
m33_75 -> m33_86  [key=2, style=dotted];
m33_74 -> m33_75  [key=0, style=solid];
m33_74 -> m33_74  [color=darkorchid, key=3, label="Local variable int periods", style=bold];
m33_76 -> m33_58  [color=blue, key=0, style=bold];
m33_433 -> m33_434  [key=0, style=solid];
m33_434 -> m33_435  [key=0, style=solid];
m33_434 -> m33_377  [key=2, style=dotted];
m33_434 -> m33_438  [color=darkseagreen4, key=1, label=option, style=dashed];
m33_434 -> m33_439  [color=darkseagreen4, key=1, label=option, style=dashed];
m33_434 -> m33_440  [color=darkseagreen4, key=1, label=option, style=dashed];
m33_434 -> m33_441  [color=darkseagreen4, key=1, label=option, style=dashed];
m33_435 -> m33_436  [key=0, style=solid];
m33_435 -> m33_437  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m33_435 -> m33_438  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m33_438 -> m33_439  [key=0, style=solid];
m33_438 -> m33_378  [key=2, style=dotted];
m33_439 -> m33_440  [key=0, style=solid];
m33_440 -> m33_441  [key=0, style=solid];
m33_440 -> m33_80  [key=2, style=dotted];
m33_441 -> m33_442  [key=0, style=solid];
m33_436 -> m33_437  [key=0, style=solid];
m33_436 -> m33_378  [color=darkorchid, key=3, label="Local variable QuantConnect.Securities.Security equity", style=bold];
m33_437 -> m33_438  [key=0, style=solid];
m33_437 -> m33_439  [key=0, style=solid];
m33_437 -> m33_78  [key=2, style=dotted];
m33_442 -> m33_433  [color=blue, key=0, style=bold];
m33_171 -> m33_172  [key=0, style=solid];
m33_172 -> m33_173  [key=0, style=solid];
m33_172 -> m33_174  [key=2, style=dotted];
m33_172 -> m33_169  [key=2, style=dotted];
m33_173 -> m33_171  [color=blue, key=0, style=bold];
m33_79 -> m33_547  [key=0, style=solid];
m33_547 -> m33_548  [key=0, style=solid];
m33_548 -> m33_549  [key=0, style=solid];
m33_548 -> m33_550  [key=0, style=solid];
m33_549 -> m33_552  [key=0, style=solid];
m33_550 -> m33_551  [key=0, style=solid];
m33_550 -> m33_554  [key=2, style=dotted];
m33_550 -> m33_476  [key=2, style=dotted];
m33_550 -> m33_550  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m33_551 -> m33_552  [key=0, style=solid];
m33_552 -> m33_553  [key=0, style=solid];
m33_552 -> m33_377  [key=2, style=dotted];
m33_553 -> m33_79  [color=blue, key=0, style=bold];
m33_336 -> m33_337  [key=0, style=solid];
m33_336 -> m33_338  [color=darkseagreen4, key=1, label=bool, style=dashed];
m33_336 -> m33_339  [color=darkseagreen4, key=1, label=bool, style=dashed];
m33_336 -> m33_340  [color=darkseagreen4, key=1, label=bool, style=dashed];
m33_336 -> m33_341  [color=darkseagreen4, key=1, label=bool, style=dashed];
m33_337 -> m33_338  [key=0, style=solid];
m33_337 -> m33_344  [key=0, style=solid];
m33_338 -> m33_339  [key=0, style=solid];
m33_339 -> m33_340  [key=0, style=solid];
m33_339 -> m33_40  [key=2, style=dotted];
m33_340 -> m33_341  [key=0, style=solid];
m33_340 -> m33_345  [key=2, style=dotted];
m33_341 -> m33_342  [key=0, style=solid];
m33_341 -> m33_344  [key=0, style=solid];
m33_342 -> m33_343  [key=0, style=solid];
m33_343 -> m33_344  [key=0, style=solid];
m33_344 -> m33_336  [color=blue, key=0, style=bold];
m33_95 -> m33_96  [key=0, style=solid];
m33_95 -> m33_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m33_96 -> m33_97  [key=0, style=solid];
m33_96 -> m33_101  [key=2, style=dotted];
m33_97 -> m33_98  [key=0, style=solid];
m33_97 -> m33_100  [key=0, style=solid];
m33_97 -> m33_102  [key=2, style=dotted];
m33_98 -> m33_99  [key=0, style=solid];
m33_99 -> m33_100  [key=0, style=solid];
m33_99 -> m33_103  [key=2, style=dotted];
m33_100 -> m33_95  [color=blue, key=0, style=bold];
m33_219 -> m33_220  [key=0, style=solid];
m33_220 -> m33_221  [key=0, style=solid];
m33_220 -> m33_222  [key=2, style=dotted];
m33_220 -> m33_223  [key=2, style=dotted];
m33_221 -> m33_219  [color=blue, key=0, style=bold];
m33_54 -> m33_55  [key=0, style=solid];
m33_55 -> m33_56  [key=0, style=solid];
m33_55 -> m33_57  [key=2, style=dotted];
m33_56 -> m33_54  [color=blue, key=0, style=bold];
m33_381 -> m33_537  [key=0, style=solid];
m33_381 -> m33_538  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m33_381 -> m33_539  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m33_381 -> m33_541  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_381 -> m33_542  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m33_381 -> m33_543  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m33_381 -> m33_61  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m33_381 -> m33_444  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m33_381 -> m33_447  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m33_381 -> m33_450  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m33_381 -> m33_378  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m33_381 -> m33_443  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m33_381 -> m33_446  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m33_381 -> m33_449  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m33_537 -> m33_538  [key=0, style=solid];
m33_537 -> m33_540  [key=0, style=solid];
m33_538 -> m33_539  [key=0, style=solid];
m33_538 -> m33_540  [key=0, style=solid];
m33_538 -> m33_244  [key=2, style=dotted];
m33_538 -> m33_542  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_539 -> m33_546  [key=0, style=solid];
m33_539 -> m33_209  [key=2, style=dotted];
m33_541 -> m33_542  [key=0, style=solid];
m33_541 -> m33_543  [key=0, style=solid];
m33_541 -> m33_376  [key=2, style=dotted];
m33_542 -> m33_543  [key=0, style=solid];
m33_542 -> m33_77  [key=2, style=dotted];
m33_543 -> m33_544  [key=0, style=solid];
m33_543 -> m33_377  [key=2, style=dotted];
m33_543 -> m33_545  [color=darkseagreen4, key=1, label=security, style=dashed];
m33_540 -> m33_541  [key=0, style=solid];
m33_544 -> m33_545  [key=0, style=solid];
m33_544 -> m33_80  [key=2, style=dotted];
m33_545 -> m33_546  [key=0, style=solid];
m33_546 -> m33_381  [color=blue, key=0, style=bold];
m33_108 -> m33_109  [key=0, style=solid];
m33_108 -> m33_110  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityInitializer", style=dashed];
m33_109 -> m33_110  [key=0, style=solid];
m33_110 -> m33_111  [key=0, style=solid];
m33_111 -> m33_108  [color=blue, key=0, style=bold];
m33_264 -> m33_268  [key=0, style=solid];
m33_264 -> m33_269  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m33_264 -> m33_261  [color=darkorchid, key=3, label="Parameter variable decimal startingCash", style=bold];
m33_264 -> m33_265  [color=darkorchid, key=3, label="Parameter variable decimal startingCash", style=bold];
m33_268 -> m33_269  [key=0, style=solid];
m33_268 -> m33_270  [key=0, style=solid];
m33_269 -> m33_271  [key=0, style=solid];
m33_269 -> m33_272  [key=2, style=dotted];
m33_270 -> m33_271  [key=0, style=solid];
m33_270 -> m33_209  [key=2, style=dotted];
m33_271 -> m33_264  [color=blue, key=0, style=bold];
m33_350 -> m33_351  [key=0, style=solid];
m33_350 -> m33_353  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m33_351 -> m33_352  [key=0, style=solid];
m33_351 -> m33_353  [key=2, style=dotted];
m33_352 -> m33_350  [color=blue, key=0, style=bold];
m33_183 -> m33_184  [key=0, style=solid];
m33_184 -> m33_183  [color=blue, key=0, style=bold];
m33_126 -> m33_127  [key=0, style=solid];
m33_126 -> m33_138  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m33_127 -> m33_128  [key=0, style=solid];
m33_127 -> m33_137  [key=0, style=solid];
m33_138 -> m33_139  [key=0, style=solid];
m33_138 -> m33_122  [key=2, style=dotted];
m33_128 -> m33_129  [key=0, style=solid];
m33_137 -> m33_138  [key=0, style=solid];
m33_137 -> m33_139  [key=0, style=solid];
m33_129 -> m33_130  [key=0, style=solid];
m33_129 -> m33_29  [key=2, style=dotted];
m33_129 -> m33_140  [key=2, style=dotted];
m33_129 -> m33_141  [key=2, style=dotted];
m33_129 -> m33_142  [key=2, style=dotted];
m33_129 -> m33_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_129 -> m33_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_129 -> m33_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_129 -> m33_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_129 -> m33_134  [color=darkseagreen4, key=1, label=method, style=dashed];
m33_130 -> m33_131  [key=0, style=solid];
m33_130 -> m33_132  [key=0, style=solid];
m33_134 -> m33_135  [key=0, style=solid];
m33_134 -> m33_145  [key=2, style=dotted];
m33_131 -> m33_139  [key=0, style=solid];
m33_132 -> m33_133  [key=0, style=solid];
m33_132 -> m33_143  [key=2, style=dotted];
m33_132 -> m33_134  [color=darkseagreen4, key=1, label=self, style=dashed];
m33_133 -> m33_134  [key=0, style=solid];
m33_133 -> m33_144  [key=2, style=dotted];
m33_133 -> m33_135  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m33_135 -> m33_136  [key=0, style=solid];
m33_135 -> m33_146  [key=2, style=dotted];
m33_136 -> m33_137  [key=0, style=solid];
m33_136 -> m33_147  [key=2, style=dotted];
m33_139 -> m33_126  [color=blue, key=0, style=bold];
m33_391 -> m33_392  [key=0, style=solid];
m33_391 -> m33_403  [key=2, style=dotted];
m33_391 -> m33_393  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m33_391 -> m33_397  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m33_391 -> m33_399  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m33_374 -> m33_382  [key=0, style=solid];
m33_374 -> m33_386  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_374 -> m33_388  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_374 -> m33_389  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_374 -> m33_390  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_374 -> m33_391  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m33_374 -> m33_396  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m33_374 -> m33_356  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m33_382 -> m33_383  [key=0, style=solid];
m33_382 -> m33_385  [key=0, style=solid];
m33_386 -> m33_387  [key=0, style=solid];
m33_386 -> m33_388  [color=darkseagreen4, key=1, label=alias, style=dashed];
m33_388 -> m33_389  [key=0, style=solid];
m33_388 -> m33_77  [key=2, style=dotted];
m33_388 -> m33_391  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_388 -> m33_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_388 -> m33_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_389 -> m33_390  [key=0, style=solid];
m33_389 -> m33_401  [key=2, style=dotted];
m33_389 -> m33_391  [color=darkseagreen4, key=1, label=marketHoursEntry, style=dashed];
m33_390 -> m33_391  [key=0, style=solid];
m33_390 -> m33_402  [key=2, style=dotted];
m33_396 -> m33_397  [key=0, style=solid];
m33_396 -> m33_45  [key=2, style=dotted];
m33_383 -> m33_384  [key=0, style=solid];
m33_383 -> m33_385  [key=0, style=solid];
m33_383 -> m33_244  [key=2, style=dotted];
m33_383 -> m33_388  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_383 -> m33_389  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_383 -> m33_390  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_385 -> m33_386  [key=0, style=solid];
m33_384 -> m33_400  [key=0, style=solid];
m33_384 -> m33_209  [key=2, style=dotted];
m33_387 -> m33_388  [key=0, style=solid];
m33_387 -> m33_389  [key=0, style=solid];
m33_387 -> m33_376  [key=2, style=dotted];
m33_387 -> m33_391  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_387 -> m33_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_387 -> m33_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_395 -> m33_396  [key=0, style=solid];
m33_395 -> m33_399  [key=0, style=solid];
m33_395 -> m33_405  [key=2, style=dotted];
m33_398 -> m33_399  [key=0, style=solid];
m33_398 -> m33_407  [key=2, style=dotted];
m33_392 -> m33_393  [key=0, style=solid];
m33_393 -> m33_394  [key=0, style=solid];
m33_393 -> m33_404  [key=2, style=dotted];
m33_397 -> m33_398  [key=0, style=solid];
m33_397 -> m33_406  [key=2, style=dotted];
m33_399 -> m33_400  [key=0, style=solid];
m33_394 -> m33_395  [key=0, style=solid];
m33_400 -> m33_374  [color=blue, key=0, style=bold];
m33_560 -> m33_561  [key=0, style=solid];
m33_560 -> m33_563  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m33_561 -> m33_562  [key=0, style=solid];
m33_561 -> m33_563  [key=0, style=solid];
m33_563 -> m33_564  [key=0, style=solid];
m33_562 -> m33_564  [key=0, style=solid];
m33_562 -> m33_210  [key=2, style=dotted];
m33_564 -> m33_560  [color=blue, key=0, style=bold];
m33_428 -> m33_429  [key=0, style=solid];
m33_429 -> m33_430  [key=0, style=solid];
m33_429 -> m33_377  [key=2, style=dotted];
m33_429 -> m33_431  [color=darkseagreen4, key=1, label=future, style=dashed];
m33_430 -> m33_431  [key=0, style=solid];
m33_430 -> m33_80  [key=2, style=dotted];
m33_431 -> m33_432  [key=0, style=solid];
m33_432 -> m33_428  [color=blue, key=0, style=bold];
m33_417 -> m33_418  [key=0, style=solid];
m33_417 -> m33_403  [key=2, style=dotted];
m33_417 -> m33_419  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m33_417 -> m33_423  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m33_417 -> m33_425  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m33_375 -> m33_408  [key=0, style=solid];
m33_375 -> m33_412  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_375 -> m33_414  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_375 -> m33_415  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_375 -> m33_416  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_375 -> m33_417  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m33_375 -> m33_422  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m33_375 -> m33_356  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m33_408 -> m33_409  [key=0, style=solid];
m33_408 -> m33_411  [key=0, style=solid];
m33_412 -> m33_413  [key=0, style=solid];
m33_412 -> m33_414  [color=darkseagreen4, key=1, label=alias, style=dashed];
m33_414 -> m33_415  [key=0, style=solid];
m33_414 -> m33_77  [key=2, style=dotted];
m33_414 -> m33_417  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_414 -> m33_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_414 -> m33_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_415 -> m33_416  [key=0, style=solid];
m33_415 -> m33_401  [key=2, style=dotted];
m33_415 -> m33_417  [color=darkseagreen4, key=1, label=marketHoursEntry, style=dashed];
m33_416 -> m33_417  [key=0, style=solid];
m33_416 -> m33_402  [key=2, style=dotted];
m33_422 -> m33_423  [key=0, style=solid];
m33_422 -> m33_45  [key=2, style=dotted];
m33_409 -> m33_410  [key=0, style=solid];
m33_409 -> m33_411  [key=0, style=solid];
m33_409 -> m33_244  [key=2, style=dotted];
m33_409 -> m33_414  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_409 -> m33_415  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_409 -> m33_416  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_411 -> m33_412  [key=0, style=solid];
m33_410 -> m33_426  [key=0, style=solid];
m33_410 -> m33_209  [key=2, style=dotted];
m33_413 -> m33_414  [key=0, style=solid];
m33_413 -> m33_415  [key=0, style=solid];
m33_413 -> m33_376  [key=2, style=dotted];
m33_413 -> m33_417  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_413 -> m33_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_413 -> m33_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m33_421 -> m33_422  [key=0, style=solid];
m33_421 -> m33_425  [key=0, style=solid];
m33_421 -> m33_405  [key=2, style=dotted];
m33_424 -> m33_425  [key=0, style=solid];
m33_424 -> m33_407  [key=2, style=dotted];
m33_418 -> m33_419  [key=0, style=solid];
m33_419 -> m33_420  [key=0, style=solid];
m33_419 -> m33_404  [key=2, style=dotted];
m33_423 -> m33_424  [key=0, style=solid];
m33_423 -> m33_427  [key=2, style=dotted];
m33_425 -> m33_426  [key=0, style=solid];
m33_420 -> m33_421  [key=0, style=solid];
m33_426 -> m33_375  [color=blue, key=0, style=bold];
m33_45 -> m33_45  [color=darkorchid, key=3, label="Field variable string _algorithmId", style=bold];
m33_45 -> m33_297  [color=darkorchid, key=3, label="Field variable string _algorithmId", style=bold];
m33_356 -> m33_357  [key=0, style=solid];
m33_356 -> m33_358  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_356 -> m33_359  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m33_356 -> m33_360  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_356 -> m33_361  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_356 -> m33_362  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m33_356 -> m33_363  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m33_356 -> m33_365  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_356 -> m33_366  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m33_356 -> m33_367  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m33_356 -> m33_353  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m33_356 -> m33_60  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m33_356 -> m33_374  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m33_356 -> m33_375  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m33_357 -> m33_358  [key=0, style=solid];
m33_357 -> m33_359  [key=0, style=solid];
m33_358 -> m33_373  [key=0, style=solid];
m33_358 -> m33_374  [key=2, style=dotted];
m33_359 -> m33_360  [key=0, style=solid];
m33_359 -> m33_361  [key=0, style=solid];
m33_360 -> m33_373  [key=0, style=solid];
m33_360 -> m33_375  [key=2, style=dotted];
m33_361 -> m33_362  [key=0, style=solid];
m33_361 -> m33_364  [key=0, style=solid];
m33_362 -> m33_363  [key=0, style=solid];
m33_362 -> m33_364  [key=0, style=solid];
m33_362 -> m33_244  [key=2, style=dotted];
m33_362 -> m33_366  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_363 -> m33_373  [key=0, style=solid];
m33_363 -> m33_209  [key=2, style=dotted];
m33_365 -> m33_366  [key=0, style=solid];
m33_365 -> m33_367  [key=0, style=solid];
m33_365 -> m33_376  [key=2, style=dotted];
m33_366 -> m33_367  [key=0, style=solid];
m33_366 -> m33_77  [key=2, style=dotted];
m33_367 -> m33_368  [key=0, style=solid];
m33_367 -> m33_377  [key=2, style=dotted];
m33_367 -> m33_369  [color=darkseagreen4, key=1, label=security, style=dashed];
m33_364 -> m33_365  [key=0, style=solid];
m33_368 -> m33_369  [key=0, style=solid];
m33_368 -> m33_80  [key=2, style=dotted];
m33_369 -> m33_373  [key=0, style=solid];
m33_370 -> m33_371  [key=0, style=solid];
m33_371 -> m33_372  [key=0, style=solid];
m33_371 -> m33_103  [key=2, style=dotted];
m33_372 -> m33_373  [key=0, style=solid];
m33_373 -> m33_356  [color=blue, key=0, style=bold];
m33_169 -> m33_170  [key=0, style=solid];
m33_170 -> m33_169  [color=blue, key=0, style=bold];
m33_36 -> m33_296  [color=darkorchid, key=3, label="Field variable System.DateTime _endDate", style=bold];
m33_490 -> m33_491  [key=0, style=solid];
m33_490 -> m33_487  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m33_490 -> m33_552  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m33_491 -> m33_492  [key=0, style=solid];
m33_491 -> m33_493  [key=2, style=dotted];
m33_492 -> m33_490  [color=blue, key=0, style=bold];
m33_443 -> m33_444  [key=0, style=solid];
m33_443 -> m33_381  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Forex.Forex AddForex", style=bold];
m33_444 -> m33_445  [key=0, style=solid];
m33_444 -> m33_381  [key=2, style=dotted];
m33_445 -> m33_443  [color=blue, key=0, style=bold];
m33_529 -> m33_530  [key=0, style=solid];
m33_530 -> m33_531  [key=0, style=solid];
m33_530 -> m33_532  [key=0, style=solid];
m33_531 -> m33_532  [key=0, style=solid];
m33_532 -> m33_529  [color=blue, key=0, style=bold];
m33_446 -> m33_447  [key=0, style=solid];
m33_446 -> m33_381  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Cfd.Cfd AddCfd", style=bold];
m33_447 -> m33_448  [key=0, style=solid];
m33_447 -> m33_381  [key=2, style=dotted];
m33_448 -> m33_446  [color=blue, key=0, style=bold];
m33_116 -> m33_117  [key=0, style=solid];
m33_116 -> m33_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m33_117 -> m33_118  [key=0, style=solid];
m33_117 -> m33_115  [key=2, style=dotted];
m33_117 -> m33_108  [key=2, style=dotted];
m33_117 -> m33_120  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m33_118 -> m33_116  [color=blue, key=0, style=bold];
m33_78 -> m33_234  [color=darkorchid, key=3, label="Property variable QuantConnect.Brokerages.IBrokerageMessageHandler BrokerageMessageHandler", style=bold];
m33_234 -> m33_235  [key=0, style=solid];
m33_234 -> m33_237  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.IBrokerageMessageHandler", style=dashed];
m33_235 -> m33_236  [key=0, style=solid];
m33_235 -> m33_237  [key=0, style=solid];
m33_237 -> m33_238  [key=0, style=solid];
m33_236 -> m33_238  [key=0, style=solid];
m33_236 -> m33_210  [key=2, style=dotted];
m33_238 -> m33_234  [color=blue, key=0, style=bold];
m33_286 -> m33_300  [key=0, style=solid];
m33_286 -> m33_302  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_286 -> m33_305  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_286 -> m33_307  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_286 -> m33_280  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m33_300 -> m33_301  [key=0, style=solid];
m33_300 -> m33_302  [key=0, style=solid];
m33_302 -> m33_303  [key=0, style=solid];
m33_302 -> m33_304  [key=0, style=solid];
m33_302 -> m33_30  [key=2, style=dotted];
m33_305 -> m33_306  [key=0, style=solid];
m33_305 -> m33_307  [key=0, style=solid];
m33_307 -> m33_308  [key=0, style=solid];
m33_307 -> m33_46  [key=2, style=dotted];
m33_307 -> m33_315  [key=2, style=dotted];
m33_307 -> m33_307  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_307 -> m33_310  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m33_301 -> m33_313  [key=0, style=solid];
m33_303 -> m33_313  [key=0, style=solid];
m33_303 -> m33_209  [key=2, style=dotted];
m33_304 -> m33_305  [key=0, style=solid];
m33_304 -> m33_307  [key=0, style=solid];
m33_304 -> m33_314  [key=2, style=dotted];
m33_306 -> m33_313  [key=0, style=solid];
m33_306 -> m33_209  [key=2, style=dotted];
m33_308 -> m33_309  [key=0, style=solid];
m33_308 -> m33_312  [key=0, style=solid];
m33_310 -> m33_311  [key=0, style=solid];
m33_309 -> m33_310  [key=0, style=solid];
m33_309 -> m33_313  [key=0, style=solid];
m33_312 -> m33_313  [key=0, style=solid];
m33_312 -> m33_209  [key=2, style=dotted];
m33_311 -> m33_313  [key=0, style=solid];
m33_311 -> m33_316  [key=2, style=dotted];
m33_311 -> m33_187  [key=2, style=dotted];
m33_313 -> m33_286  [color=blue, key=0, style=bold];
m33_518 -> m33_519  [key=0, style=solid];
m33_519 -> m33_520  [key=0, style=solid];
m33_519 -> m33_522  [color=darkseagreen4, key=1, label=message, style=dashed];
m33_519 -> m33_523  [color=darkseagreen4, key=1, label=message, style=dashed];
m33_520 -> m33_521  [key=0, style=solid];
m33_520 -> m33_522  [key=0, style=solid];
m33_522 -> m33_523  [key=0, style=solid];
m33_522 -> m33_507  [key=2, style=dotted];
m33_523 -> m33_524  [key=0, style=solid];
m33_521 -> m33_524  [key=0, style=solid];
m33_524 -> m33_518  [color=blue, key=0, style=bold];
m33_330 -> m33_331  [key=0, style=solid];
m33_331 -> m33_332  [key=0, style=solid];
m33_332 -> m33_330  [color=blue, key=0, style=bold];
m33_568 -> m33_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_12  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_64  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_66  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_71  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_96  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_124  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_129  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_136  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_172  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_196  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_201  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_205  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_206  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_207  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_224  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_225  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_226  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_227  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_237  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_241  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_242  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_247  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_248  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_255  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_258  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_266  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_268  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_269  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_274  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_275  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_282  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_298  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_300  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_304  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_305  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_308  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_309  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_310  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_311  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_317  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_321  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_326  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_331  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_337  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_338  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_339  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_342  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_343  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_347  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_351  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_354  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_358  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_360  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_362  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_367  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_368  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_371  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_379  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_383  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_389  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_390  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_391  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_393  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_395  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_397  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_398  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_409  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_415  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_416  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_417  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_419  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_421  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_423  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_424  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_429  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_430  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_434  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_437  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_438  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_440  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_444  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_447  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_450  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_454  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_455  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_458  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_459  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_462  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_463  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_464  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_465  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_466  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_488  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_491  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_494  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_496  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_497  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_498  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_502  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_504  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_505  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_509  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_511  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_513  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_515  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_516  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_520  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_522  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_523  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_526  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_527  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_531  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_538  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_543  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_544  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_548  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_550  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_551  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_552  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_558  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_563  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_568 -> m33_566  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m33_569 -> m33_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m33_570 -> m33_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_571 -> m33_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m34_28 -> m34_29  [key=0, style=solid];
m34_29 -> m34_9  [key=2, style=dotted];
m34_29 -> m34_30  [key=0, style=solid];
m34_30 -> m34_28  [color=blue, key=0, style=bold];
m34_18 -> m34_19  [key=0, style=solid];
m34_19 -> m34_20  [key=0, style=solid];
m34_19 -> m34_6  [key=2, style=dotted];
m34_20 -> m34_18  [color=blue, key=0, style=bold];
m34_14 -> m34_15  [key=0, style=solid];
m34_15 -> m34_16  [key=0, style=solid];
m34_15 -> m34_17  [key=2, style=dotted];
m34_16 -> m34_14  [color=blue, key=0, style=bold];
m34_25 -> m34_26  [key=0, style=solid];
m34_26 -> m34_27  [key=0, style=solid];
m34_26 -> m34_6  [key=2, style=dotted];
m34_27 -> m34_25  [color=blue, key=0, style=bold];
m34_65 -> m34_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_65 -> m34_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_65 -> m34_66  [key=0, style=solid];
m34_68 -> m34_66  [key=0, style=solid];
m34_67 -> m34_68  [key=0, style=solid];
m34_67 -> m34_71  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m34_67 -> m34_66  [color=darkorchid, key=3, label="Local variable QuantConnect.Indicators.IndicatorBase<T> ilocal", style=bold];
m34_66 -> m34_68  [color=darkseagreen4, key=1, label=i, style=dashed];
m34_66 -> m34_67  [key=0, style=solid];
m34_66 -> m34_69  [key=0, style=solid];
m34_69 -> m34_65  [color=blue, key=0, style=bold];
m34_31 -> m34_32  [key=0, style=solid];
m34_32 -> m34_9  [key=2, style=dotted];
m34_32 -> m34_33  [key=0, style=solid];
m34_33 -> m34_31  [color=blue, key=0, style=bold];
m34_109 -> m34_110  [key=0, style=solid];
m34_79 -> m34_80  [color=green, key=0, style=solid];
m34_79 -> m34_81  [color=green, key=0, style=solid];
m34_78 -> m34_79  [color=green, key=0, style=solid];
m34_80 -> m34_61  [key=2, style=dotted];
m34_80 -> m34_81  [key=0, style=solid];
m34_81 -> m34_78  [color=blue, key=0, style=bold];
m34_71 -> m34_61  [key=2, style=dotted];
m34_71 -> m34_72  [key=0, style=solid];
m34_70 -> m34_71  [key=0, style=solid];
m34_72 -> m34_70  [color=blue, key=0, style=bold];
m34_110 -> m34_111  [key=0, style=solid];
m34_110 -> m34_112  [key=2, style=dotted];
m34_111 -> m34_109  [color=blue, key=0, style=bold];
m34_10 -> m34_11  [key=0, style=solid];
m34_11 -> m34_12  [key=0, style=solid];
m34_11 -> m34_13  [key=2, style=dotted];
m34_12 -> m34_10  [color=blue, key=0, style=bold];
m34_17 -> m34_21  [key=0, style=solid];
m34_17 -> m34_14  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m34_21 -> m34_22  [key=0, style=solid];
m34_21 -> m34_6  [key=2, style=dotted];
m34_22 -> m34_17  [color=blue, key=0, style=bold];
m34_34 -> m34_35  [key=0, style=solid];
m34_35 -> m34_9  [key=2, style=dotted];
m34_35 -> m34_36  [key=0, style=solid];
m34_36 -> m34_34  [color=blue, key=0, style=bold];
m34_86 -> m34_87  [key=0, style=solid];
m34_87 -> m34_88  [key=0, style=solid];
m34_87 -> m34_89  [key=2, style=dotted];
m34_87 -> m34_82  [key=2, style=dotted];
m34_88 -> m34_86  [color=blue, key=0, style=bold];
m34_61 -> m34_62  [color=green, key=0, style=solid];
m34_61 -> m34_63  [color=green, key=1, label=string, style=dashed];
m34_61 -> m34_65  [color=darkorchid, key=3, label="Parameter variable string chart", style=bold];
m34_61 -> m34_73  [color=darkorchid, key=3, label="Parameter variable string chart", style=bold];
m34_61 -> m34_67  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T>[] indicators", style=bold];
m34_61 -> m34_75  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T>[] indicators", style=bold];
m34_62 -> m34_63  [color=green, key=0, style=solid];
m34_62 -> m34_64  [color=green, key=0, style=solid];
m34_63 -> m34_62  [color=green, key=0, style=solid];
m34_63 -> m34_9  [color=green, key=2, style=dotted];
m34_64 -> m34_61  [color=blue, key=0, style=bold];
m34_13 -> m34_23  [key=0, style=solid];
m34_13 -> m34_10  [color=darkorchid, key=3, label="Parameter variable int value", style=bold];
m34_23 -> m34_24  [key=0, style=solid];
m34_23 -> m34_6  [key=2, style=dotted];
m34_24 -> m34_13  [color=blue, key=0, style=bold];
m34_98 -> m34_99  [key=0, style=solid];
m34_98 -> m34_100  [color=darkseagreen4, key=1, label=bool, style=dashed];
m34_99 -> m34_100  [key=0, style=solid];
m34_99 -> m34_106  [key=2, style=dotted];
m34_99 -> m34_107  [key=2, style=dotted];
m34_99 -> m34_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_99 -> m34_104  [color=darkseagreen4, key=1, label=updates, style=dashed];
m34_101 -> m34_102  [key=0, style=solid];
m34_101 -> m34_104  [key=0, style=solid];
m34_100 -> m34_101  [key=0, style=solid];
m34_100 -> m34_104  [key=0, style=solid];
m34_104 -> m34_105  [key=0, style=solid];
m34_102 -> m34_101  [key=0, style=solid];
m34_102 -> m34_102  [color=darkseagreen4, key=1, label=chart, style=dashed];
m34_102 -> m34_103  [key=0, style=solid];
m34_103 -> m34_102  [key=0, style=solid];
m34_103 -> m34_103  [color=darkseagreen4, key=1, label=series, style=dashed];
m34_103 -> m34_108  [key=2, style=dotted];
m34_105 -> m34_98  [color=blue, key=0, style=bold];
m34_90 -> m34_91  [key=0, style=solid];
m34_91 -> m34_92  [key=0, style=solid];
m34_91 -> m34_93  [key=2, style=dotted];
m34_91 -> m34_82  [key=2, style=dotted];
m34_92 -> m34_90  [color=blue, key=0, style=bold];
m34_9 -> m34_40  [color=green, key=1, label=string, style=dashed];
m34_9 -> m34_42  [color=green, key=1, label=string, style=dashed];
m34_9 -> m34_62  [color=green, key=3, label="Parameter variable decimal value", style=bold];
m34_9 -> m34_37  [key=0, style=solid];
m34_9 -> m34_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_9 -> m34_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_9 -> m34_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_9 -> m34_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_9 -> m34_50  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m34_9 -> m34_7  [color=darkorchid, key=3, label="Parameter variable string chart", style=bold];
m34_9 -> m34_28  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m34_9 -> m34_31  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m34_9 -> m34_34  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m34_9 -> m34_61  [color=darkorchid, key=3, label="Parameter variable string chart", style=bold];
m34_9 -> m34_6  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m34_40 -> m34_41  [color=green, key=0, style=solid];
m34_40 -> m34_54  [color=green, key=2, style=dotted];
m34_40 -> m34_5  [color=green, key=2, style=dotted];
m34_39 -> m34_40  [color=green, key=0, style=solid];
m34_39 -> m34_41  [key=0, style=solid];
m34_39 -> m34_4  [key=2, style=dotted];
m34_41 -> m34_42  [color=green, key=0, style=solid];
m34_41 -> m34_47  [color=darkseagreen4, key=1, label=thisChart, style=dashed];
m34_41 -> m34_48  [color=darkseagreen4, key=1, label=thisChart, style=dashed];
m34_42 -> m34_43  [color=green, key=0, style=solid];
m34_42 -> m34_48  [color=green, key=0, style=solid];
m34_42 -> m34_4  [color=green, key=2, style=dotted];
m34_43 -> m34_43  [color=darkseagreen4, key=1, label=x, style=dashed];
m34_43 -> m34_44  [key=0, style=solid];
m34_43 -> m34_55  [key=2, style=dotted];
m34_48 -> m34_49  [key=0, style=solid];
m34_48 -> m34_50  [color=darkseagreen4, key=1, label=thisSeries, style=dashed];
m34_45 -> m34_46  [key=0, style=solid];
m34_45 -> m34_56  [key=2, style=dotted];
m34_49 -> m34_50  [key=0, style=solid];
m34_49 -> m34_51  [key=0, style=solid];
m34_50 -> m34_52  [key=0, style=solid];
m34_50 -> m34_59  [key=2, style=dotted];
m34_51 -> m34_52  [key=0, style=solid];
m34_51 -> m34_60  [key=2, style=dotted];
m34_37 -> m34_39  [key=0, style=solid];
m34_37 -> m34_38  [key=0, style=solid];
m34_47 -> m34_48  [key=0, style=solid];
m34_47 -> m34_57  [key=2, style=dotted];
m34_47 -> m34_58  [key=2, style=dotted];
m34_44 -> m34_45  [key=0, style=solid];
m34_44 -> m34_47  [key=0, style=solid];
m34_46 -> m34_52  [key=0, style=solid];
m34_38 -> m34_52  [key=0, style=solid];
m34_38 -> m34_53  [key=2, style=dotted];
m34_52 -> m34_9  [color=blue, key=0, style=bold];
m34_6 -> m34_7  [key=0, style=solid];
m34_6 -> m34_18  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m34_6 -> m34_17  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m34_6 -> m34_13  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m34_6 -> m34_25  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m34_7 -> m34_9  [key=2, style=dotted];
m34_7 -> m34_8  [key=0, style=solid];
m34_8 -> m34_6  [color=blue, key=0, style=bold];
m34_73 -> m34_76  [color=green, key=1, label=string, style=dashed];
m34_73 -> m34_79  [color=green, key=1, label=bool, style=dashed];
m34_73 -> m34_74  [key=0, style=solid];
m34_73 -> m34_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_76 -> m34_74  [color=green, key=0, style=solid];
m34_74 -> m34_76  [color=green, key=1, label=i, style=dashed];
m34_74 -> m34_75  [key=0, style=solid];
m34_74 -> m34_77  [key=0, style=solid];
m34_75 -> m34_76  [color=green, key=0, style=solid];
m34_75 -> m34_79  [color=green, key=1, label=ilocal, style=dashed];
m34_75 -> m34_74  [color=darkorchid, key=3, label="Local variable QuantConnect.Indicators.IndicatorBase<T> ilocal", style=bold];
m34_75 -> m34_80  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m34_77 -> m34_73  [color=blue, key=0, style=bold];
m34_94 -> m34_95  [key=0, style=solid];
m34_95 -> m34_96  [key=0, style=solid];
m34_95 -> m34_97  [key=2, style=dotted];
m34_95 -> m34_82  [key=2, style=dotted];
m34_96 -> m34_94  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [key=0, style=solid];
m34_0 -> m34_2  [color=darkseagreen4, key=1, label="QuantConnect.Chart", style=dashed];
m34_1 -> m34_4  [key=2, style=dotted];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_3  [key=0, style=solid];
m34_2 -> m34_5  [key=2, style=dotted];
m34_2 -> m34_3  [key=0, style=solid];
m34_3 -> m34_0  [color=blue, key=0, style=bold];
m34_82 -> m34_83  [key=0, style=solid];
m34_82 -> m34_86  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m34_82 -> m34_90  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m34_82 -> m34_94  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m34_83 -> m34_84  [key=0, style=solid];
m34_83 -> m34_85  [key=2, style=dotted];
m34_84 -> m34_82  [color=blue, key=0, style=bold];
m34_113 -> m34_40  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_63  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_76  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_68  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_71  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_83  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_113 -> m34_101  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m34_116 -> m34_79  [color=green, key=1, label=bool, style=dashed];
m34_117 -> m34_79  [color=green, key=1, label=ilocal, style=dashed];
m34_117 -> m34_80  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m34_118 -> m34_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_114 -> m34_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_115 -> m34_71  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m35_86 -> m35_87  [key=0, style=solid];
m35_172 -> m35_173  [key=0, style=solid];
m35_173 -> m35_160  [key=2, style=dotted];
m35_173 -> m35_161  [key=2, style=dotted];
m35_173 -> m35_174  [key=0, style=solid];
m35_173 -> m35_162  [key=2, style=dotted];
m35_173 -> m35_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_174 -> m35_172  [color=blue, key=0, style=bold];
m35_9 -> m35_10  [key=0, style=solid];
m35_9 -> m35_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m35_9 -> m35_7  [color=blue, key=0, style=bold];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_12  [key=0, style=solid];
m35_10 -> m35_314  [color=green, key=0, style=solid];
m35_10 -> m35_315  [color=green, key=1, label=PyObject, style=dashed];
m35_10 -> m35_318  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m35_10 -> m35_7  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m35_10 -> m35_92  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m35_10 -> m35_96  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m35_10 -> m35_99  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m35_10 -> m35_102  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m35_10 -> m35_105  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m35_10 -> m35_108  [color=darkorchid, key=3, label="Parameter variable PyObject type", style=bold];
m35_12 -> m35_13  [key=0, style=solid];
m35_12 -> m35_14  [color=darkseagreen4, key=1, label=rate, style=dashed];
m35_12 -> m35_15  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m35_12 -> m35_18  [key=2, style=dotted];
m35_11 -> m35_16  [key=0, style=solid];
m35_11 -> m35_10  [color=darkorchid, key=3, label="Parameter variable System.Type dataType", style=bold];
m35_11 -> m35_12  [key=0, style=solid];
m35_11 -> m35_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_11 -> m35_15  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m35_11 -> m35_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_11 -> m35_7  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m35_13 -> m35_14  [key=0, style=solid];
m35_13 -> m35_15  [key=0, style=solid];
m35_13 -> m35_19  [key=2, style=dotted];
m35_13 -> m35_20  [key=2, style=dotted];
m35_14 -> m35_15  [key=0, style=solid];
m35_14 -> m35_14  [color=darkseagreen4, key=1, label=rate, style=dashed];
m35_14 -> m35_21  [key=2, style=dotted];
m35_15 -> m35_16  [key=0, style=solid];
m35_15 -> m35_22  [key=2, style=dotted];
m35_16 -> m35_9  [color=blue, key=0, style=bold];
m35_16 -> m35_17  [key=0, style=solid];
m35_16 -> m35_23  [key=2, style=dotted];
m35_120 -> m35_121  [key=0, style=solid];
m35_127 -> m35_128  [key=0, style=solid];
m35_127 -> m35_119  [key=2, style=dotted];
m35_230 -> m35_235  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_230 -> m35_231  [key=0, style=solid];
m35_230 -> m35_232  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m35_230 -> m35_233  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m35_230 -> m35_234  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.FilteredIdentity FilteredIdentity", style=bold];
m35_235 -> m35_236  [key=0, style=solid];
m35_235 -> m35_239  [key=2, style=dotted];
m35_235 -> m35_153  [key=2, style=dotted];
m35_232 -> m35_235  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m35_232 -> m35_32  [key=2, style=dotted];
m35_232 -> m35_233  [key=0, style=solid];
m35_234 -> m35_235  [key=0, style=solid];
m35_234 -> m35_229  [key=2, style=dotted];
m35_234 -> m35_236  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m35_236 -> m35_237  [key=0, style=solid];
m35_233 -> m35_32  [key=2, style=dotted];
m35_233 -> m35_234  [key=0, style=solid];
m35_231 -> m35_232  [key=0, style=solid];
m35_231 -> m35_234  [color=darkseagreen4, key=1, label=name, style=dashed];
m35_231 -> m35_238  [key=2, style=dotted];
m35_237 -> m35_230  [color=blue, key=0, style=bold];
m35_90 -> m35_91  [key=0, style=solid];
m35_209 -> m35_210  [key=0, style=solid];
m35_210 -> m35_160  [key=2, style=dotted];
m35_210 -> m35_161  [key=2, style=dotted];
m35_210 -> m35_181  [key=2, style=dotted];
m35_210 -> m35_211  [key=0, style=solid];
m35_210 -> m35_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_211 -> m35_209  [color=blue, key=0, style=bold];
m35_129 -> m35_130  [key=0, style=solid];
m35_129 -> m35_131  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.SecurityType, string>", style=dashed];
m35_129 -> m35_132  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m35_129 -> m35_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_130 -> m35_131  [key=0, style=solid];
m35_130 -> m35_132  [key=2, style=dotted];
m35_131 -> m35_129  [color=blue, key=0, style=bold];
m35_131 -> m35_132  [key=0, style=solid];
m35_131 -> m35_133  [key=0, style=solid];
m35_131 -> m35_135  [key=2, style=dotted];
m35_33 -> m35_34  [key=0, style=solid];
m35_33 -> m35_38  [color=darkseagreen4, key=1, label=invert, style=dashed];
m35_33 -> m35_51  [color=darkseagreen4, key=1, label=invert, style=dashed];
m35_33 -> m35_52  [color=darkseagreen4, key=1, label=invert, style=dashed];
m35_85 -> m35_82  [color=blue, key=0, style=bold];
m35_76 -> m35_40  [key=2, style=dotted];
m35_76 -> m35_77  [key=0, style=solid];
m35_76 -> m35_78  [key=2, style=dotted];
m35_76 -> m35_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_87 -> m35_39  [key=2, style=dotted];
m35_87 -> m35_40  [key=2, style=dotted];
m35_87 -> m35_88  [key=0, style=solid];
m35_87 -> m35_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_3 -> m35_4  [key=0, style=solid];
m35_82 -> m35_84  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m35_82 -> m35_83  [key=0, style=solid];
m35_23 -> m35_24  [key=0, style=solid];
m35_197 -> m35_198  [key=0, style=solid];
m35_198 -> m35_160  [key=2, style=dotted];
m35_198 -> m35_161  [key=2, style=dotted];
m35_198 -> m35_181  [key=2, style=dotted];
m35_198 -> m35_199  [key=0, style=solid];
m35_198 -> m35_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_199 -> m35_197  [color=blue, key=0, style=bold];
m35_128 -> m35_126  [color=blue, key=0, style=bold];
m35_39 -> m35_40  [key=0, style=solid];
m35_109 -> m35_10  [key=2, style=dotted];
m35_109 -> m35_110  [key=0, style=solid];
m35_109 -> m35_95  [key=2, style=dotted];
m35_122 -> m35_123  [key=0, style=solid];
m35_122 -> m35_126  [key=2, style=dotted];
m35_122 -> m35_127  [key=2, style=dotted];
m35_122 -> m35_125  [key=2, style=dotted];
m35_122 -> m35_128  [key=2, style=dotted];
m35_105 -> m35_106  [key=0, style=solid];
m35_256 -> m35_257  [key=0, style=solid];
m35_256 -> m35_260  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m35_256 -> m35_242  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m35_257 -> m35_246  [key=2, style=dotted];
m35_257 -> m35_258  [key=0, style=solid];
m35_257 -> m35_260  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m35_260 -> m35_261  [key=0, style=solid];
m35_260 -> m35_262  [key=2, style=dotted];
m35_260 -> m35_248  [key=2, style=dotted];
m35_258 -> m35_260  [key=0, style=solid];
m35_258 -> m35_259  [key=0, style=solid];
m35_259 -> m35_261  [key=0, style=solid];
m35_261 -> m35_256  [color=blue, key=0, style=bold];
m35_73 -> m35_33  [key=2, style=dotted];
m35_73 -> m35_74  [key=0, style=solid];
m35_73 -> m35_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_140 -> m35_141  [key=0, style=solid];
m35_141 -> m35_142  [key=0, style=solid];
m35_141 -> m35_139  [key=2, style=dotted];
m35_142 -> m35_140  [color=blue, key=0, style=bold];
m35_119 -> m35_120  [key=0, style=solid];
m35_121 -> m35_122  [key=0, style=solid];
m35_121 -> m35_124  [key=2, style=dotted];
m35_121 -> m35_125  [key=2, style=dotted];
m35_121 -> m35_121  [color=darkseagreen4, key=1, label=rate, style=dashed];
m35_123 -> m35_119  [color=blue, key=0, style=bold];
m35_123 -> m35_124  [key=0, style=solid];
m35_81 -> m35_79  [color=blue, key=0, style=bold];
m35_79 -> m35_80  [key=0, style=solid];
m35_107 -> m35_108  [key=0, style=solid];
m35_107 -> m35_109  [key=2, style=dotted];
m35_107 -> m35_105  [color=blue, key=0, style=bold];
m35_111 -> m35_112  [key=0, style=solid];
m35_111 -> m35_109  [key=2, style=dotted];
m35_111 -> m35_18  [key=2, style=dotted];
m35_111 -> m35_113  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m35_114 -> m35_115  [key=0, style=solid];
m35_114 -> m35_109  [key=2, style=dotted];
m35_114 -> m35_119  [key=2, style=dotted];
m35_93 -> m35_94  [key=0, style=solid];
m35_93 -> m35_10  [key=2, style=dotted];
m35_93 -> m35_95  [key=2, style=dotted];
m35_96 -> m35_97  [key=0, style=solid];
m35_99 -> m35_100  [key=0, style=solid];
m35_102 -> m35_103  [key=0, style=solid];
m35_106 -> m35_107  [key=0, style=solid];
m35_106 -> m35_10  [key=2, style=dotted];
m35_106 -> m35_95  [key=2, style=dotted];
m35_110 -> m35_111  [key=0, style=solid];
m35_110 -> m35_108  [color=blue, key=0, style=bold];
m35_113 -> m35_114  [key=0, style=solid];
m35_113 -> m35_115  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m35_116 -> m35_117  [key=0, style=solid];
m35_116 -> m35_32  [key=2, style=dotted];
m35_116 -> m35_124  [color=darkseagreen4, key=1, label=selector, style=dashed];
m35_94 -> m35_95  [key=0, style=solid];
m35_94 -> m35_92  [color=blue, key=0, style=bold];
m35_95 -> m35_93  [color=blue, key=0, style=bold];
m35_95 -> m35_10  [color=darkorchid, key=3, label="Parameter variable System.Type dataType", style=bold];
m35_95 -> m35_12  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m35_95 -> m35_111  [key=0, style=solid];
m35_95 -> m35_117  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m35_95 -> m35_124  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m35_95 -> m35_114  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m35_95 -> m35_115  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m35_95 -> m35_116  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m35_95 -> m35_127  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m35_95 -> m35_105  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m35_95 -> m35_108  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m35_95 -> m35_92  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m35_95 -> m35_96  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m35_95 -> m35_99  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m35_95 -> m35_102  [color=darkorchid, key=3, label="Parameter variable PyObject pySelector", style=bold];
m35_97 -> m35_98  [key=0, style=solid];
m35_97 -> m35_10  [key=2, style=dotted];
m35_97 -> m35_95  [key=2, style=dotted];
m35_98 -> m35_96  [color=blue, key=0, style=bold];
m35_100 -> m35_101  [key=0, style=solid];
m35_100 -> m35_10  [key=2, style=dotted];
m35_100 -> m35_95  [key=2, style=dotted];
m35_101 -> m35_99  [color=blue, key=0, style=bold];
m35_103 -> m35_104  [key=0, style=solid];
m35_103 -> m35_105  [key=2, style=dotted];
m35_103 -> m35_10  [key=2, style=dotted];
m35_103 -> m35_95  [key=2, style=dotted];
m35_104 -> m35_102  [color=blue, key=0, style=bold];
m35_108 -> m35_106  [color=blue, key=0, style=bold];
m35_108 -> m35_109  [key=0, style=solid];
m35_112 -> m35_110  [color=blue, key=0, style=bold];
m35_112 -> m35_113  [key=0, style=solid];
m35_112 -> m35_115  [color=darkseagreen4, key=1, label=dataTimeZone, style=dashed];
m35_115 -> m35_113  [color=blue, key=0, style=bold];
m35_115 -> m35_117  [color=darkseagreen4, key=1, label=config, style=dashed];
m35_115 -> m35_116  [key=0, style=solid];
m35_115 -> m35_120  [key=2, style=dotted];
m35_117 -> m35_118  [key=0, style=solid];
m35_117 -> m35_121  [key=2, style=dotted];
m35_117 -> m35_122  [key=2, style=dotted];
m35_117 -> m35_124  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m35_118 -> m35_116  [color=blue, key=0, style=bold];
m35_118 -> m35_95  [color=blue, key=0, style=bold];
m35_36 -> m35_37  [color=green, key=0, style=solid];
m35_37 -> m35_38  [color=green, key=0, style=solid];
m35_37 -> m35_39  [color=green, key=2, style=dotted];
m35_37 -> m35_40  [color=green, key=2, style=dotted];
m35_37 -> m35_41  [color=green, key=1, label="lambda expression", style=dashed];
m35_37 -> m35_72  [key=0, style=solid];
m35_38 -> m35_36  [color=blue, key=0, style=bold];
m35_38 -> m35_39  [key=0, style=solid];
m35_38 -> m35_34  [key=0, style=solid];
m35_41 -> m35_42  [color=green, key=0, style=solid];
m35_41 -> m35_72  [key=0, style=solid];
m35_42 -> m35_43  [color=green, key=0, style=solid];
m35_42 -> m35_74  [key=2, style=dotted];
m35_42 -> m35_75  [key=2, style=dotted];
m35_42 -> m35_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_42 -> m35_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_42 -> m35_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_42 -> m35_44  [color=darkseagreen4, key=1, label=markets, style=dashed];
m35_42 -> m35_45  [color=darkseagreen4, key=1, label=markets, style=dashed];
m35_42 -> m35_46  [color=darkseagreen4, key=1, label=markets, style=dashed];
m35_42 -> m35_47  [color=darkseagreen4, key=1, label=markets, style=dashed];
m35_42 -> m35_107  [color=darkseagreen4, key=1, label=markets, style=dashed];
m35_42 -> m35_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m35_42 -> m35_114  [color=darkseagreen4, key=1, label=markets, style=dashed];
m35_43 -> m35_41  [color=blue, key=0, style=bold];
m35_43 -> m35_44  [key=0, style=solid];
m35_43 -> m35_45  [key=0, style=solid];
m35_43 -> m35_76  [key=2, style=dotted];
m35_182 -> m35_183  [color=green, key=0, style=solid];
m35_183 -> m35_184  [color=green, key=0, style=solid];
m35_184 -> m35_182  [color=blue, key=0, style=bold];
m35_50 -> m35_39  [key=2, style=dotted];
m35_50 -> m35_40  [key=2, style=dotted];
m35_50 -> m35_51  [key=0, style=solid];
m35_50 -> m35_52  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m35_50 -> m35_71  [key=0, style=solid];
m35_50 -> m35_53  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m35_50 -> m35_54  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m35_50 -> m35_57  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m35_50 -> m35_58  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m35_50 -> m35_60  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m35_50 -> m35_69  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m35_56 -> m35_39  [key=2, style=dotted];
m35_56 -> m35_40  [key=2, style=dotted];
m35_56 -> m35_57  [key=0, style=solid];
m35_56 -> m35_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_56 -> m35_83  [key=2, style=dotted];
m35_56 -> m35_64  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m35_56 -> m35_66  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m35_56 -> m35_67  [color=darkseagreen4, key=1, label=quoteCash, style=dashed];
m35_66 -> m35_39  [key=2, style=dotted];
m35_66 -> m35_40  [key=2, style=dotted];
m35_66 -> m35_67  [key=0, style=solid];
m35_66 -> m35_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_66 -> m35_88  [key=2, style=dotted];
m35_66 -> m35_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m35_124 -> m35_39  [key=2, style=dotted];
m35_124 -> m35_40  [key=2, style=dotted];
m35_124 -> m35_125  [key=0, style=solid];
m35_124 -> m35_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_49 -> m35_50  [key=0, style=solid];
m35_49 -> m35_60  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m35_55 -> m35_56  [key=0, style=solid];
m35_65 -> m35_66  [key=0, style=solid];
m35_65 -> m35_67  [key=0, style=solid];
m35_75 -> m35_76  [key=0, style=solid];
m35_163 -> m35_164  [key=0, style=solid];
m35_169 -> m35_170  [key=0, style=solid];
m35_175 -> m35_176  [key=0, style=solid];
m35_188 -> m35_189  [key=0, style=solid];
m35_194 -> m35_195  [key=0, style=solid];
m35_200 -> m35_201  [key=0, style=solid];
m35_206 -> m35_207  [key=0, style=solid];
m35_212 -> m35_213  [key=0, style=solid];
m35_51 -> m35_49  [color=blue, key=0, style=bold];
m35_51 -> m35_52  [key=0, style=solid];
m35_51 -> m35_50  [key=0, style=solid];
m35_52 -> m35_53  [key=0, style=solid];
m35_57 -> m35_55  [color=blue, key=0, style=bold];
m35_57 -> m35_72  [key=0, style=solid];
m35_57 -> m35_84  [key=2, style=dotted];
m35_57 -> m35_85  [key=2, style=dotted];
m35_58 -> m35_59  [key=0, style=solid];
m35_58 -> m35_86  [key=2, style=dotted];
m35_58 -> m35_60  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m35_67 -> m35_65  [color=blue, key=0, style=bold];
m35_67 -> m35_68  [key=0, style=solid];
m35_67 -> m35_89  [key=2, style=dotted];
m35_67 -> m35_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m35_68 -> m35_69  [key=0, style=solid];
m35_68 -> m35_90  [key=2, style=dotted];
m35_88 -> m35_86  [color=blue, key=0, style=bold];
m35_89 -> m35_90  [key=0, style=solid];
m35_125 -> m35_123  [color=blue, key=0, style=bold];
m35_126 -> m35_127  [key=0, style=solid];
m35_77 -> m35_75  [color=blue, key=0, style=bold];
m35_165 -> m35_163  [color=blue, key=0, style=bold];
m35_164 -> m35_165  [key=0, style=solid];
m35_171 -> m35_169  [color=blue, key=0, style=bold];
m35_170 -> m35_171  [key=0, style=solid];
m35_177 -> m35_175  [color=blue, key=0, style=bold];
m35_176 -> m35_177  [key=0, style=solid];
m35_190 -> m35_188  [color=blue, key=0, style=bold];
m35_189 -> m35_190  [key=0, style=solid];
m35_196 -> m35_194  [color=blue, key=0, style=bold];
m35_195 -> m35_196  [key=0, style=solid];
m35_202 -> m35_200  [color=blue, key=0, style=bold];
m35_201 -> m35_202  [key=0, style=solid];
m35_208 -> m35_206  [color=blue, key=0, style=bold];
m35_207 -> m35_208  [key=0, style=solid];
m35_214 -> m35_212  [color=blue, key=0, style=bold];
m35_213 -> m35_214  [key=0, style=solid];
m35_54 -> m35_52  [color=blue, key=0, style=bold];
m35_54 -> m35_55  [key=0, style=solid];
m35_54 -> m35_82  [key=2, style=dotted];
m35_54 -> m35_56  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m35_54 -> m35_57  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m35_54 -> m35_64  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m35_54 -> m35_66  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m35_54 -> m35_67  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m35_53 -> m35_54  [key=0, style=solid];
m35_53 -> m35_63  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m35_53 -> m35_65  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m35_60 -> m35_58  [color=blue, key=0, style=bold];
m35_60 -> m35_61  [key=0, style=solid];
m35_60 -> m35_77  [key=2, style=dotted];
m35_60 -> m35_64  [color=darkseagreen4, key=1, label=config, style=dashed];
m35_60 -> m35_66  [color=darkseagreen4, key=1, label=config, style=dashed];
m35_60 -> m35_67  [color=darkseagreen4, key=1, label=config, style=dashed];
m35_60 -> m35_68  [color=darkseagreen4, key=1, label=config, style=dashed];
m35_59 -> m35_60  [key=0, style=solid];
m35_59 -> m35_64  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m35_59 -> m35_66  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m35_59 -> m35_67  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m35_70 -> m35_68  [color=blue, key=0, style=bold];
m35_70 -> m35_72  [key=0, style=solid];
m35_69 -> m35_70  [key=0, style=solid];
m35_69 -> m35_91  [key=2, style=dotted];
m35_91 -> m35_89  [color=blue, key=0, style=bold];
m35_80 -> m35_81  [key=0, style=solid];
m35_71 -> m35_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_71 -> m35_72  [key=0, style=solid];
m35_71 -> m35_7  [key=2, style=dotted];
m35_71 -> m35_92  [key=2, style=dotted];
m35_72 -> m35_73  [key=0, style=solid];
m35_72 -> m35_32  [key=2, style=dotted];
m35_72 -> m35_76  [color=darkseagreen4, key=1, label=selector, style=dashed];
m35_72 -> m35_26  [color=blue, key=0, style=bold];
m35_74 -> m35_71  [color=blue, key=0, style=bold];
m35_274 -> m35_275  [key=0, style=solid];
m35_275 -> m35_276  [key=0, style=solid];
m35_275 -> m35_277  [key=2, style=dotted];
m35_275 -> m35_278  [key=2, style=dotted];
m35_276 -> m35_274  [color=blue, key=0, style=bold];
m35_154 -> m35_155  [key=0, style=solid];
m35_155 -> m35_156  [key=0, style=solid];
m35_155 -> m35_153  [key=2, style=dotted];
m35_156 -> m35_154  [color=blue, key=0, style=bold];
m35_147 -> m35_148  [key=0, style=solid];
m35_148 -> m35_149  [key=0, style=solid];
m35_148 -> m35_146  [key=2, style=dotted];
m35_149 -> m35_147  [color=blue, key=0, style=bold];
m35_4 -> m35_5  [key=0, style=solid];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_7  [key=2, style=dotted];
m35_5 -> m35_8  [key=2, style=dotted];
m35_6 -> m35_4  [color=blue, key=0, style=bold];
m35_6 -> m35_0  [color=blue, key=0, style=bold];
m35_22 -> m35_23  [key=0, style=solid];
m35_22 -> m35_24  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_203 -> m35_204  [key=0, style=solid];
m35_204 -> m35_160  [key=2, style=dotted];
m35_204 -> m35_161  [key=2, style=dotted];
m35_204 -> m35_181  [key=2, style=dotted];
m35_204 -> m35_205  [key=0, style=solid];
m35_204 -> m35_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_205 -> m35_203  [color=blue, key=0, style=bold];
m35_32 -> m35_33  [key=0, style=solid];
m35_32 -> m35_35  [color=darkseagreen4, key=1, label=normal, style=dashed];
m35_32 -> m35_51  [color=darkseagreen4, key=1, label=normal, style=dashed];
m35_136 -> m35_137  [key=0, style=solid];
m35_137 -> m35_138  [key=0, style=solid];
m35_137 -> m35_139  [key=2, style=dotted];
m35_137 -> m35_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_20  [color=red, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_24  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_33  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_39  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_47  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_107  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_114  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_52  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_69  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_120  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_137 -> m35_122  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m35_138 -> m35_136  [color=blue, key=0, style=bold];
m35_138 -> m35_107  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m35_138 -> m35_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m35_138 -> m35_114  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m35_150 -> m35_151  [key=0, style=solid];
m35_151 -> m35_152  [key=0, style=solid];
m35_151 -> m35_153  [key=2, style=dotted];
m35_152 -> m35_150  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [key=0, style=solid];
m35_0 -> m35_3  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_0 -> m35_4  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_0 -> m35_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_3  [key=0, style=solid];
m35_2 -> m35_6  [key=0, style=solid];
m35_2 -> m35_7  [key=2, style=dotted];
m35_2 -> m35_0  [color=blue, key=0, style=bold];
m35_35 -> m35_36  [key=0, style=solid];
m35_35 -> m35_38  [key=0, style=solid];
m35_40 -> m35_41  [key=0, style=solid];
m35_246 -> m35_296  [color=green, key=0, style=solid];
m35_246 -> m35_297  [color=green, key=1, label=PyObject, style=dashed];
m35_246 -> m35_299  [color=green, key=1, label=PyObject, style=dashed];
m35_246 -> m35_302  [color=green, key=1, label=PyObject, style=dashed];
m35_246 -> m35_298  [color=green, key=3, label="Parameter variable PyObject pyObject", style=bold];
m35_246 -> m35_240  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m35_246 -> m35_249  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m35_246 -> m35_256  [color=darkorchid, key=3, label="Parameter variable PyObject pyObject", style=bold];
m35_296 -> m35_297  [color=green, key=0, style=solid];
m35_296 -> m35_271  [color=green, key=2, style=dotted];
m35_297 -> m35_298  [color=green, key=0, style=solid];
m35_297 -> m35_301  [color=green, key=0, style=solid];
m35_297 -> m35_308  [color=green, key=2, style=dotted];
m35_298 -> m35_299  [color=green, key=0, style=solid];
m35_298 -> m35_309  [color=green, key=2, style=dotted];
m35_298 -> m35_300  [color=green, key=1, label=tmp, style=dashed];
m35_301 -> m35_302  [color=green, key=0, style=solid];
m35_301 -> m35_311  [color=green, key=2, style=dotted];
m35_301 -> m35_305  [color=green, key=1, label=symbols, style=dashed];
m35_301 -> m35_306  [color=green, key=1, label=symbols, style=dashed];
m35_299 -> m35_300  [color=green, key=0, style=solid];
m35_299 -> m35_310  [color=green, key=2, style=dotted];
m35_300 -> m35_302  [color=green, key=1, label=PyObject, style=dashed];
m35_300 -> m35_301  [color=green, key=0, style=solid];
m35_302 -> m35_303  [color=green, key=0, style=solid];
m35_302 -> m35_306  [color=green, key=0, style=solid];
m35_305 -> m35_302  [color=green, key=0, style=solid];
m35_305 -> m35_313  [color=green, key=2, style=dotted];
m35_304 -> m35_302  [color=green, key=0, style=solid];
m35_304 -> m35_305  [color=green, key=0, style=solid];
m35_304 -> m35_312  [color=green, key=2, style=dotted];
m35_303 -> m35_305  [color=green, key=1, label=symbol, style=dashed];
m35_303 -> m35_304  [color=green, key=0, style=solid];
m35_303 -> m35_35  [color=green, key=2, style=dotted];
m35_306 -> m35_307  [color=green, key=0, style=solid];
m35_307 -> m35_246  [color=blue, key=0, style=bold];
m35_135 -> m35_133  [color=blue, key=0, style=bold];
m35_17 -> m35_11  [color=blue, key=0, style=bold];
m35_17 -> m35_18  [key=0, style=solid];
m35_17 -> m35_19  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m35_240 -> m35_241  [key=0, style=solid];
m35_240 -> m35_244  [color=darkseagreen4, key=1, label=int, style=dashed];
m35_240 -> m35_242  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m35_241 -> m35_246  [key=2, style=dotted];
m35_241 -> m35_242  [key=0, style=solid];
m35_241 -> m35_244  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m35_244 -> m35_245  [key=0, style=solid];
m35_244 -> m35_247  [key=2, style=dotted];
m35_244 -> m35_248  [key=2, style=dotted];
m35_242 -> m35_244  [key=0, style=solid];
m35_242 -> m35_243  [key=0, style=solid];
m35_243 -> m35_245  [key=0, style=solid];
m35_245 -> m35_240  [color=blue, key=0, style=bold];
m35_18 -> m35_19  [key=0, style=solid];
m35_19 -> m35_20  [color=red, key=0, style=solid];
m35_20 -> m35_21  [color=red, key=0, style=solid];
m35_21 -> m35_17  [color=blue, key=0, style=bold];
m35_83 -> m35_84  [key=0, style=solid];
m35_83 -> m35_32  [key=2, style=dotted];
m35_83 -> m35_87  [color=darkseagreen4, key=1, label=selector, style=dashed];
m35_24 -> m35_29  [color=green, key=1, label=PyObject, style=dashed];
m35_24 -> m35_30  [color=green, key=1, label=PyObject, style=dashed];
m35_24 -> m35_25  [key=0, style=solid];
m35_29 -> m35_30  [color=green, key=0, style=solid];
m35_29 -> m35_34  [color=green, key=2, style=dotted];
m35_29 -> m35_35  [color=green, key=2, style=dotted];
m35_26 -> m35_29  [color=green, key=0, style=solid];
m35_26 -> m35_27  [color=green, key=0, style=solid];
m35_26 -> m35_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m35_26 -> m35_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_26 -> m35_47  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m35_26 -> m35_107  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m35_26 -> m35_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m35_26 -> m35_114  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>", style=dashed];
m35_26 -> m35_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m35_26 -> m35_54  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SymbolPropertiesDatabase", style=dashed];
m35_26 -> m35_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m35_26 -> m35_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.MarketHoursDatabase", style=dashed];
m35_26 -> m35_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m35_26 -> m35_68  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m35_30 -> m35_31  [color=green, key=0, style=solid];
m35_30 -> m35_35  [color=green, key=2, style=dotted];
m35_30 -> m35_33  [color=green, key=2, style=dotted];
m35_25 -> m35_26  [color=green, key=0, style=solid];
m35_25 -> m35_27  [color=green, key=1, label=coarse, style=dashed];
m35_25 -> m35_37  [color=green, key=1, label=coarse, style=dashed];
m35_25 -> m35_32  [key=2, style=dotted];
m35_25 -> m35_22  [color=blue, key=0, style=bold];
m35_27 -> m35_28  [color=green, key=0, style=solid];
m35_27 -> m35_33  [color=green, key=2, style=dotted];
m35_27 -> m35_36  [color=green, key=1, label="lambda expression", style=dashed];
m35_27 -> m35_32  [key=0, style=solid];
m35_28 -> m35_31  [color=green, key=0, style=solid];
m35_28 -> m35_29  [key=0, style=solid];
m35_31 -> m35_24  [color=blue, key=0, style=bold];
m35_31 -> m35_72  [key=0, style=solid];
m35_178 -> m35_179  [color=green, key=0, style=solid];
m35_179 -> m35_180  [color=green, key=0, style=solid];
m35_179 -> m35_160  [color=green, key=2, style=dotted];
m35_179 -> m35_161  [color=green, key=2, style=dotted];
m35_179 -> m35_181  [color=green, key=2, style=dotted];
m35_179 -> m35_182  [color=green, key=1, label="lambda expression", style=dashed];
m35_180 -> m35_178  [color=blue, key=0, style=bold];
m35_132 -> m35_133  [key=0, style=solid];
m35_133 -> m35_134  [key=0, style=solid];
m35_133 -> m35_136  [key=2, style=dotted];
m35_134 -> m35_129  [color=blue, key=0, style=bold];
m35_134 -> m35_135  [key=0, style=solid];
m35_134 -> m35_132  [key=2, style=dotted];
m35_7 -> m35_5  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m35_7 -> m35_8  [key=0, style=solid];
m35_7 -> m35_4  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m35_61 -> m35_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_61 -> m35_62  [key=0, style=solid];
m35_63 -> m35_33  [key=2, style=dotted];
m35_63 -> m35_64  [key=0, style=solid];
m35_63 -> m35_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_62 -> m35_63  [key=0, style=solid];
m35_62 -> m35_32  [key=2, style=dotted];
m35_62 -> m35_66  [color=darkseagreen4, key=1, label=selector, style=dashed];
m35_64 -> m35_61  [color=blue, key=0, style=bold];
m35_64 -> m35_68  [key=0, style=solid];
m35_64 -> m35_87  [key=2, style=dotted];
m35_64 -> m35_70  [color=darkseagreen4, key=1, label=security, style=dashed];
m35_84 -> m35_33  [key=2, style=dotted];
m35_84 -> m35_85  [key=0, style=solid];
m35_84 -> m35_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_314 -> m35_315  [color=green, key=0, style=solid];
m35_314 -> m35_271  [color=green, key=2, style=dotted];
m35_315 -> m35_316  [color=green, key=0, style=solid];
m35_315 -> m35_320  [color=green, key=2, style=dotted];
m35_315 -> m35_321  [color=green, key=2, style=dotted];
m35_315 -> m35_322  [color=green, key=2, style=dotted];
m35_315 -> m35_323  [color=green, key=2, style=dotted];
m35_315 -> m35_318  [color=green, key=1, label=an, style=dashed];
m35_316 -> m35_317  [color=green, key=0, style=solid];
m35_316 -> m35_324  [color=green, key=2, style=dotted];
m35_318 -> m35_319  [key=0, style=solid];
m35_318 -> m35_326  [key=2, style=dotted];
m35_318 -> m35_327  [key=2, style=dotted];
m35_318 -> m35_328  [key=2, style=dotted];
m35_317 -> m35_318  [color=green, key=0, style=solid];
m35_317 -> m35_325  [color=green, key=2, style=dotted];
m35_319 -> m35_10  [color=blue, key=0, style=bold];
m35_92 -> m35_93  [key=0, style=solid];
m35_263 -> m35_269  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m35_263 -> m35_264  [key=0, style=solid];
m35_263 -> m35_265  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m35_269 -> m35_35  [key=2, style=dotted];
m35_269 -> m35_270  [key=0, style=solid];
m35_269 -> m35_273  [key=2, style=dotted];
m35_267 -> m35_268  [key=0, style=solid];
m35_267 -> m35_272  [key=2, style=dotted];
m35_264 -> m35_271  [key=2, style=dotted];
m35_264 -> m35_265  [key=0, style=solid];
m35_266 -> m35_269  [key=0, style=solid];
m35_266 -> m35_267  [key=0, style=solid];
m35_265 -> m35_267  [color=darkseagreen4, key=1, label=pyBenchmark, style=dashed];
m35_265 -> m35_32  [key=2, style=dotted];
m35_265 -> m35_266  [key=0, style=solid];
m35_268 -> m35_270  [key=0, style=solid];
m35_270 -> m35_263  [color=blue, key=0, style=bold];
m35_249 -> m35_250  [key=0, style=solid];
m35_249 -> m35_253  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m35_249 -> m35_242  [color=darkorchid, key=3, label="method methodReturn PyObject History", style=bold];
m35_250 -> m35_246  [key=2, style=dotted];
m35_250 -> m35_251  [key=0, style=solid];
m35_250 -> m35_253  [color=darkseagreen4, key=1, label=symbols, style=dashed];
m35_253 -> m35_254  [key=0, style=solid];
m35_253 -> m35_255  [key=2, style=dotted];
m35_253 -> m35_248  [key=2, style=dotted];
m35_251 -> m35_253  [key=0, style=solid];
m35_251 -> m35_252  [key=0, style=solid];
m35_252 -> m35_254  [key=0, style=solid];
m35_254 -> m35_249  [color=blue, key=0, style=bold];
m35_279 -> m35_288  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m35_279 -> m35_280  [key=0, style=solid];
m35_279 -> m35_284  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m35_282 -> m35_283  [key=0, style=solid];
m35_282 -> m35_291  [key=2, style=dotted];
m35_286 -> m35_287  [key=0, style=solid];
m35_286 -> m35_293  [key=2, style=dotted];
m35_288 -> m35_289  [key=0, style=solid];
m35_288 -> m35_294  [key=2, style=dotted];
m35_288 -> m35_295  [key=2, style=dotted];
m35_280 -> m35_282  [color=darkseagreen4, key=1, label=securityInitializer1, style=dashed];
m35_280 -> m35_281  [key=0, style=solid];
m35_280 -> m35_290  [key=2, style=dotted];
m35_281 -> m35_282  [key=0, style=solid];
m35_281 -> m35_284  [key=0, style=solid];
m35_283 -> m35_289  [key=0, style=solid];
m35_284 -> m35_286  [color=darkseagreen4, key=1, label=securityInitializer2, style=dashed];
m35_284 -> m35_285  [key=0, style=solid];
m35_284 -> m35_292  [key=2, style=dotted];
m35_285 -> m35_286  [key=0, style=solid];
m35_285 -> m35_288  [key=0, style=solid];
m35_287 -> m35_289  [key=0, style=solid];
m35_289 -> m35_279  [color=blue, key=0, style=bold];
m35_185 -> m35_186  [key=0, style=solid];
m35_186 -> m35_160  [key=2, style=dotted];
m35_186 -> m35_161  [key=2, style=dotted];
m35_186 -> m35_181  [key=2, style=dotted];
m35_186 -> m35_187  [key=0, style=solid];
m35_186 -> m35_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_187 -> m35_185  [color=blue, key=0, style=bold];
m35_191 -> m35_192  [key=0, style=solid];
m35_192 -> m35_160  [key=2, style=dotted];
m35_192 -> m35_161  [key=2, style=dotted];
m35_192 -> m35_181  [key=2, style=dotted];
m35_192 -> m35_193  [key=0, style=solid];
m35_192 -> m35_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_193 -> m35_191  [color=blue, key=0, style=bold];
m35_143 -> m35_144  [key=0, style=solid];
m35_144 -> m35_145  [key=0, style=solid];
m35_144 -> m35_146  [key=2, style=dotted];
m35_145 -> m35_143  [color=blue, key=0, style=bold];
m35_44 -> m35_45  [key=0, style=solid];
m35_44 -> m35_46  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m35_44 -> m35_77  [key=2, style=dotted];
m35_47 -> m35_33  [key=2, style=dotted];
m35_47 -> m35_48  [key=0, style=solid];
m35_47 -> m35_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_47 -> m35_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_47 -> m35_78  [key=2, style=dotted];
m35_47 -> m35_79  [key=2, style=dotted];
m35_47 -> m35_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_47 -> m35_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_47 -> m35_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_47 -> m35_50  [color=darkseagreen4, key=1, label=potentials, style=dashed];
m35_45 -> m35_47  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m35_45 -> m35_32  [key=2, style=dotted];
m35_45 -> m35_50  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m35_45 -> m35_46  [key=0, style=solid];
m35_45 -> m35_76  [key=2, style=dotted];
m35_46 -> m35_47  [key=0, style=solid];
m35_46 -> m35_32  [key=2, style=dotted];
m35_46 -> m35_56  [color=darkseagreen4, key=1, label=fine, style=dashed];
m35_46 -> m35_77  [key=2, style=dotted];
m35_48 -> m35_44  [color=blue, key=0, style=bold];
m35_48 -> m35_49  [key=0, style=solid];
m35_48 -> m35_78  [key=2, style=dotted];
m35_48 -> m35_80  [key=2, style=dotted];
m35_48 -> m35_81  [key=2, style=dotted];
m35_48 -> m35_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_48 -> m35_60  [color=darkseagreen4, key=1, label=minimumResolution, style=dashed];
m35_139 -> m35_107  [color=darkseagreen4, key=1, label=markets, style=dashed];
m35_139 -> m35_111  [color=darkseagreen4, key=1, label=markets, style=dashed];
m35_139 -> m35_114  [color=darkseagreen4, key=1, label=markets, style=dashed];
m35_220 -> m35_216  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m35_220 -> m35_221  [key=0, style=solid];
m35_220 -> m35_225  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_220 -> m35_215  [color=darkorchid, key=3, label="Parameter variable string fieldName", style=bold];
m35_220 -> m35_222  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m35_220 -> m35_223  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m35_220 -> m35_224  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.FilteredIdentity FilteredIdentity", style=bold];
m35_221 -> m35_222  [key=0, style=solid];
m35_221 -> m35_228  [key=2, style=dotted];
m35_221 -> m35_224  [color=darkseagreen4, key=1, label=name, style=dashed];
m35_225 -> m35_226  [key=0, style=solid];
m35_225 -> m35_139  [key=2, style=dotted];
m35_222 -> m35_225  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m35_222 -> m35_32  [key=2, style=dotted];
m35_222 -> m35_223  [key=0, style=solid];
m35_224 -> m35_225  [key=0, style=solid];
m35_224 -> m35_229  [key=2, style=dotted];
m35_224 -> m35_226  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m35_226 -> m35_227  [key=0, style=solid];
m35_223 -> m35_32  [key=2, style=dotted];
m35_223 -> m35_224  [key=0, style=solid];
m35_227 -> m35_220  [color=blue, key=0, style=bold];
m35_8 -> m35_10  [key=2, style=dotted];
m35_8 -> m35_9  [key=0, style=solid];
m35_8 -> m35_11  [key=2, style=dotted];
m35_166 -> m35_167  [key=0, style=solid];
m35_167 -> m35_160  [key=2, style=dotted];
m35_167 -> m35_161  [key=2, style=dotted];
m35_167 -> m35_168  [key=0, style=solid];
m35_167 -> m35_162  [key=2, style=dotted];
m35_167 -> m35_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_168 -> m35_166  [color=blue, key=0, style=bold];
m35_34 -> m35_35  [key=0, style=solid];
m35_34 -> m35_42  [key=0, style=solid];
m35_34 -> m35_73  [key=2, style=dotted];
m35_34 -> m35_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_34 -> m35_36  [color=darkseagreen4, key=1, label=config, style=dashed];
m35_34 -> m35_38  [color=darkseagreen4, key=1, label=config, style=dashed];
m35_34 -> m35_39  [color=darkseagreen4, key=1, label=config, style=dashed];
m35_215 -> m35_216  [key=0, style=solid];
m35_215 -> m35_217  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m35_215 -> m35_220  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.FilteredIdentity FilteredIdentity", style=bold];
m35_216 -> m35_217  [key=0, style=solid];
m35_216 -> m35_219  [key=2, style=dotted];
m35_217 -> m35_218  [key=0, style=solid];
m35_217 -> m35_220  [key=2, style=dotted];
m35_218 -> m35_215  [color=blue, key=0, style=bold];
m35_157 -> m35_158  [key=0, style=solid];
m35_158 -> m35_160  [key=2, style=dotted];
m35_158 -> m35_161  [key=2, style=dotted];
m35_158 -> m35_159  [key=0, style=solid];
m35_158 -> m35_162  [key=2, style=dotted];
m35_158 -> m35_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_159 -> m35_157  [color=blue, key=0, style=bold];
m35_329 -> m35_30  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_27  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_179  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_134  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_148  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_151  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_155  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_158  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_186  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_192  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_198  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_204  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_210  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_217  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_221  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_225  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_235  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_241  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_244  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_250  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_253  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_260  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_267  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_269  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_275  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_282  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_286  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_329 -> m35_288  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m35_330 -> m35_37  [color=green, key=1, label=coarse, style=dashed];
m35_331 -> m35_50  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m35_332 -> m35_56  [color=darkseagreen4, key=1, label=fine, style=dashed];
m35_333 -> m35_66  [color=darkseagreen4, key=1, label=selector, style=dashed];
m35_335 -> m35_87  [color=darkseagreen4, key=1, label=selector, style=dashed];
m35_336 -> m35_124  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m35_336 -> m35_127  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m35_337 -> m35_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_337 -> m35_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_338 -> m35_124  [color=darkseagreen4, key=1, label=selector, style=dashed];
m35_334 -> m35_76  [color=darkseagreen4, key=1, label=selector, style=dashed];
m36_121 -> m36_126  [color=green, key=1, label=decimal, style=dashed];
m36_121 -> m36_125  [key=0, style=solid];
m36_121 -> m36_118  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_121 -> m36_122  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_126 -> m36_127  [color=green, key=0, style=solid];
m36_126 -> m36_68  [color=green, key=2, style=dotted];
m36_126 -> m36_129  [color=green, key=1, label=request, style=dashed];
m36_126 -> m36_130  [color=green, key=1, label=request, style=dashed];
m36_125 -> m36_126  [color=green, key=0, style=solid];
m36_127 -> m36_70  [key=2, style=dotted];
m36_127 -> m36_128  [key=0, style=solid];
m36_127 -> m36_129  [color=darkseagreen4, key=1, label=response, style=dashed];
m36_129 -> m36_131  [key=0, style=solid];
m36_129 -> m36_71  [key=2, style=dotted];
m36_130 -> m36_131  [key=0, style=solid];
m36_130 -> m36_72  [key=2, style=dotted];
m36_128 -> m36_129  [key=0, style=solid];
m36_128 -> m36_130  [key=0, style=solid];
m36_131 -> m36_121  [color=blue, key=0, style=bold];
m36_163 -> m36_164  [key=0, style=solid];
m36_163 -> m36_162  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Sell", style=bold];
m36_164 -> m36_165  [key=0, style=solid];
m36_164 -> m36_3  [key=2, style=dotted];
m36_164 -> m36_162  [key=2, style=dotted];
m36_165 -> m36_163  [color=blue, key=0, style=bold];
m36_17 -> m36_18  [key=0, style=solid];
m36_17 -> m36_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m36_18 -> m36_19  [key=0, style=solid];
m36_18 -> m36_3  [key=2, style=dotted];
m36_18 -> m36_4  [key=2, style=dotted];
m36_19 -> m36_17  [color=blue, key=0, style=bold];
m36_318 -> m36_319  [key=0, style=solid];
m36_319 -> m36_320  [key=0, style=solid];
m36_319 -> m36_317  [key=2, style=dotted];
m36_320 -> m36_318  [color=blue, key=0, style=bold];
m36_0 -> m36_1  [key=0, style=solid];
m36_0 -> m36_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_3  [key=2, style=dotted];
m36_1 -> m36_4  [key=2, style=dotted];
m36_2 -> m36_0  [color=blue, key=0, style=bold];
m36_168 -> m36_173  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_168 -> m36_180  [color=darkseagreen4, key=1, label=int, style=dashed];
m36_168 -> m36_183  [color=darkseagreen4, key=1, label=int, style=dashed];
m36_168 -> m36_188  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_168 -> m36_193  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_168 -> m36_196  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_168 -> m36_162  [color=darkorchid, key=3, label="Parameter variable int strategyQuantity", style=bold];
m36_168 -> m36_169  [key=0, style=solid];
m36_168 -> m36_170  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_168 -> m36_171  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_168 -> m36_172  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_168 -> m36_218  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_168 -> m36_175  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_168 -> m36_186  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_168 -> m36_187  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_168 -> m36_189  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_173 -> m36_174  [key=0, style=solid];
m36_173 -> m36_203  [key=2, style=dotted];
m36_173 -> m36_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_173 -> m36_177  [color=darkseagreen4, key=1, label=optionSeq, style=dashed];
m36_180 -> m36_181  [key=0, style=solid];
m36_180 -> m36_212  [key=2, style=dotted];
m36_183 -> m36_184  [key=0, style=solid];
m36_183 -> m36_214  [key=2, style=dotted];
m36_188 -> m36_189  [key=0, style=solid];
m36_188 -> m36_191  [key=0, style=solid];
m36_188 -> m36_215  [key=2, style=dotted];
m36_193 -> m36_194  [key=0, style=solid];
m36_193 -> m36_41  [key=2, style=dotted];
m36_196 -> m36_197  [key=0, style=solid];
m36_196 -> m36_104  [key=2, style=dotted];
m36_172 -> m36_173  [key=0, style=solid];
m36_172 -> m36_180  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m36_172 -> m36_183  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m36_172 -> m36_186  [key=0, style=solid];
m36_172 -> m36_218  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m36_172 -> m36_175  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m36_172 -> m36_178  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m36_172 -> m36_185  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m36_174 -> m36_175  [key=0, style=solid];
m36_174 -> m36_177  [key=0, style=solid];
m36_174 -> m36_204  [key=2, style=dotted];
m36_177 -> m36_180  [color=darkseagreen4, key=1, label=option, style=dashed];
m36_177 -> m36_183  [color=darkseagreen4, key=1, label=option, style=dashed];
m36_177 -> m36_178  [key=0, style=solid];
m36_177 -> m36_211  [key=2, style=dotted];
m36_170 -> m36_180  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m36_170 -> m36_183  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m36_170 -> m36_193  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m36_170 -> m36_196  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m36_170 -> m36_171  [key=0, style=solid];
m36_170 -> m36_202  [key=2, style=dotted];
m36_179 -> m36_180  [key=0, style=solid];
m36_181 -> m36_172  [key=0, style=solid];
m36_181 -> m36_213  [key=2, style=dotted];
m36_182 -> m36_183  [key=0, style=solid];
m36_184 -> m36_172  [key=0, style=solid];
m36_184 -> m36_213  [key=2, style=dotted];
m36_187 -> m36_188  [key=0, style=solid];
m36_187 -> m36_193  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m36_187 -> m36_196  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m36_187 -> m36_199  [key=0, style=solid];
m36_187 -> m36_191  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m36_187 -> m36_198  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m36_189 -> m36_190  [key=0, style=solid];
m36_189 -> m36_205  [key=2, style=dotted];
m36_189 -> m36_216  [key=2, style=dotted];
m36_191 -> m36_192  [key=0, style=solid];
m36_191 -> m36_195  [key=0, style=solid];
m36_191 -> m36_198  [key=0, style=solid];
m36_192 -> m36_193  [key=0, style=solid];
m36_194 -> m36_187  [key=0, style=solid];
m36_194 -> m36_213  [key=2, style=dotted];
m36_195 -> m36_196  [key=0, style=solid];
m36_197 -> m36_187  [key=0, style=solid];
m36_197 -> m36_213  [key=2, style=dotted];
m36_169 -> m36_170  [key=0, style=solid];
m36_169 -> m36_181  [color=darkseagreen4, key=1, label=orders, style=dashed];
m36_169 -> m36_184  [color=darkseagreen4, key=1, label=orders, style=dashed];
m36_169 -> m36_194  [color=darkseagreen4, key=1, label=orders, style=dashed];
m36_169 -> m36_197  [color=darkseagreen4, key=1, label=orders, style=dashed];
m36_169 -> m36_201  [key=2, style=dotted];
m36_169 -> m36_199  [color=darkseagreen4, key=1, label=orders, style=dashed];
m36_171 -> m36_172  [key=0, style=solid];
m36_171 -> m36_186  [key=0, style=solid];
m36_175 -> m36_205  [key=2, style=dotted];
m36_175 -> m36_176  [key=0, style=solid];
m36_175 -> m36_206  [key=2, style=dotted];
m36_175 -> m36_207  [key=2, style=dotted];
m36_175 -> m36_208  [key=2, style=dotted];
m36_175 -> m36_209  [key=2, style=dotted];
m36_186 -> m36_187  [key=0, style=solid];
m36_186 -> m36_199  [key=0, style=solid];
m36_178 -> m36_179  [key=0, style=solid];
m36_178 -> m36_182  [key=0, style=solid];
m36_178 -> m36_185  [key=0, style=solid];
m36_185 -> m36_200  [key=0, style=solid];
m36_185 -> m36_210  [key=2, style=dotted];
m36_185 -> m36_206  [key=2, style=dotted];
m36_199 -> m36_200  [key=0, style=solid];
m36_198 -> m36_200  [key=0, style=solid];
m36_198 -> m36_210  [key=2, style=dotted];
m36_198 -> m36_206  [key=2, style=dotted];
m36_190 -> m36_200  [key=0, style=solid];
m36_190 -> m36_210  [key=2, style=dotted];
m36_176 -> m36_200  [key=0, style=solid];
m36_176 -> m36_210  [key=2, style=dotted];
m36_200 -> m36_168  [color=blue, key=0, style=bold];
m36_122 -> m36_121  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopMarketOrder", style=bold];
m36_122 -> m36_123  [key=0, style=solid];
m36_123 -> m36_121  [key=2, style=dotted];
m36_123 -> m36_124  [key=0, style=solid];
m36_124 -> m36_122  [color=blue, key=0, style=bold];
m36_338 -> m36_54  [color=green, key=3, label="method methodReturn decimal CalculateOrderQuantity", style=bold];
m36_338 -> m36_342  [key=0, style=solid];
m36_338 -> m36_346  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m36_338 -> m36_348  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m36_338 -> m36_352  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_338 -> m36_355  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_338 -> m36_317  [color=darkorchid, key=3, label="Parameter variable decimal target", style=bold];
m36_338 -> m36_339  [color=darkorchid, key=3, label="Parameter variable decimal target", style=bold];
m36_361 -> m36_54  [color=green, key=3, label="Local variable int feeToPriceRatio", style=bold];
m36_361 -> m36_362  [key=0, style=solid];
m36_361 -> m36_367  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m36_361 -> m36_368  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m36_365 -> m36_54  [color=green, key=3, label="Local variable int iterations", style=bold];
m36_365 -> m36_366  [key=0, style=solid];
m36_365 -> m36_375  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m36_342 -> m36_343  [key=0, style=solid];
m36_342 -> m36_347  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_342 -> m36_349  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_342 -> m36_352  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_342 -> m36_363  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_342 -> m36_364  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_342 -> m36_370  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_342 -> m36_371  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_342 -> m36_372  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_342 -> m36_374  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_342 -> m36_377  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_342 -> m36_378  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_348 -> m36_349  [key=0, style=solid];
m36_348 -> m36_350  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m36_348 -> m36_351  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m36_352 -> m36_353  [key=0, style=solid];
m36_352 -> m36_381  [key=2, style=dotted];
m36_352 -> m36_382  [key=2, style=dotted];
m36_352 -> m36_362  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m36_352 -> m36_373  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m36_355 -> m36_356  [key=0, style=solid];
m36_355 -> m36_383  [key=2, style=dotted];
m36_355 -> m36_376  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m36_370 -> m36_371  [key=0, style=solid];
m36_370 -> m36_381  [key=2, style=dotted];
m36_370 -> m36_372  [color=darkseagreen4, key=1, label=order, style=dashed];
m36_370 -> m36_374  [color=darkseagreen4, key=1, label=order, style=dashed];
m36_346 -> m36_348  [key=0, style=solid];
m36_346 -> m36_347  [key=0, style=solid];
m36_362 -> m36_361  [color=darkorchid, key=3, label="Local variable decimal orderQuantity", style=bold];
m36_362 -> m36_370  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_362 -> m36_363  [key=0, style=solid];
m36_362 -> m36_364  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_362 -> m36_368  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_362 -> m36_369  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_362 -> m36_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_362 -> m36_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_362 -> m36_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_362 -> m36_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_360 -> m36_361  [key=0, style=solid];
m36_367 -> m36_368  [key=0, style=solid];
m36_367 -> m36_369  [key=0, style=solid];
m36_368 -> m36_370  [key=0, style=solid];
m36_368 -> m36_368  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_368 -> m36_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_368 -> m36_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_368 -> m36_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_368 -> m36_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_363 -> m36_365  [key=0, style=solid];
m36_363 -> m36_364  [key=0, style=solid];
m36_364 -> m36_365  [key=0, style=solid];
m36_364 -> m36_370  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_364 -> m36_368  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_364 -> m36_364  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_364 -> m36_369  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_364 -> m36_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_364 -> m36_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_364 -> m36_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_364 -> m36_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_376 -> m36_365  [key=0, style=solid];
m36_376 -> m36_377  [key=0, style=solid];
m36_366 -> m36_370  [key=0, style=solid];
m36_366 -> m36_367  [key=0, style=solid];
m36_375 -> m36_376  [key=0, style=solid];
m36_375 -> m36_375  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m36_343 -> m36_344  [key=0, style=solid];
m36_347 -> m36_380  [key=0, style=solid];
m36_349 -> m36_350  [key=0, style=solid];
m36_349 -> m36_351  [color=darkseagreen4, key=1, label=currentHoldingsValue, style=dashed];
m36_371 -> m36_376  [color=darkseagreen4, key=1, label=orderValue, style=dashed];
m36_371 -> m36_372  [key=0, style=solid];
m36_371 -> m36_382  [key=2, style=dotted];
m36_372 -> m36_376  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
m36_372 -> m36_373  [key=0, style=solid];
m36_372 -> m36_384  [key=2, style=dotted];
m36_374 -> m36_376  [color=darkseagreen4, key=1, label=marginRequired, style=dashed];
m36_374 -> m36_375  [key=0, style=solid];
m36_374 -> m36_385  [key=2, style=dotted];
m36_377 -> m36_378  [key=0, style=solid];
m36_377 -> m36_379  [key=0, style=solid];
m36_378 -> m36_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_378 -> m36_379  [key=0, style=solid];
m36_350 -> m36_362  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m36_350 -> m36_376  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m36_350 -> m36_12  [key=2, style=dotted];
m36_350 -> m36_351  [key=0, style=solid];
m36_351 -> m36_352  [key=0, style=solid];
m36_351 -> m36_355  [color=darkseagreen4, key=1, label=direction, style=dashed];
m36_351 -> m36_379  [color=darkseagreen4, key=1, label=direction, style=dashed];
m36_353 -> m36_355  [key=0, style=solid];
m36_353 -> m36_354  [key=0, style=solid];
m36_373 -> m36_374  [key=0, style=solid];
m36_356 -> m36_357  [key=0, style=solid];
m36_356 -> m36_358  [key=0, style=solid];
m36_369 -> m36_370  [key=0, style=solid];
m36_369 -> m36_376  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_369 -> m36_377  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_369 -> m36_378  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_369 -> m36_369  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_369 -> m36_379  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m36_345 -> m36_380  [key=0, style=solid];
m36_379 -> m36_380  [key=0, style=solid];
m36_354 -> m36_380  [key=0, style=solid];
m36_357 -> m36_380  [key=0, style=solid];
m36_344 -> m36_346  [key=0, style=solid];
m36_344 -> m36_345  [key=0, style=solid];
m36_359 -> m36_360  [key=0, style=solid];
m36_358 -> m36_359  [key=0, style=solid];
m36_380 -> m36_338  [color=blue, key=0, style=bold];
m36_314 -> m36_315  [key=0, style=solid];
m36_315 -> m36_316  [key=0, style=solid];
m36_315 -> m36_317  [key=2, style=dotted];
m36_316 -> m36_314  [color=blue, key=0, style=bold];
m36_90 -> m36_93  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnCloseOrder", style=bold];
m36_90 -> m36_91  [key=0, style=solid];
m36_91 -> m36_93  [key=2, style=dotted];
m36_91 -> m36_92  [key=0, style=solid];
m36_92 -> m36_90  [color=blue, key=0, style=bold];
m36_321 -> m36_322  [key=0, style=solid];
m36_322 -> m36_323  [key=0, style=solid];
m36_322 -> m36_317  [key=2, style=dotted];
m36_323 -> m36_321  [color=blue, key=0, style=bold];
m36_94 -> m36_93  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnCloseOrder", style=bold];
m36_94 -> m36_95  [key=0, style=solid];
m36_95 -> m36_93  [key=2, style=dotted];
m36_95 -> m36_96  [key=0, style=solid];
m36_96 -> m36_94  [color=blue, key=0, style=bold];
m36_162 -> m36_166  [key=0, style=solid];
m36_162 -> m36_159  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Option.OptionStrategy strategy", style=bold];
m36_162 -> m36_163  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Option.OptionStrategy strategy", style=bold];
m36_162 -> m36_168  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Order", style=bold];
m36_166 -> m36_167  [key=0, style=solid];
m36_166 -> m36_168  [key=2, style=dotted];
m36_167 -> m36_162  [color=blue, key=0, style=bold];
m36_65 -> m36_84  [color=green, key=1, label=decimal, style=dashed];
m36_65 -> m36_35  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_65 -> m36_83  [key=0, style=solid];
m36_65 -> m36_77  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_65 -> m36_80  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_84 -> m36_85  [color=green, key=0, style=solid];
m36_84 -> m36_68  [color=green, key=2, style=dotted];
m36_84 -> m36_87  [color=green, key=1, label=request, style=dashed];
m36_84 -> m36_88  [color=green, key=1, label=request, style=dashed];
m36_83 -> m36_84  [color=green, key=0, style=solid];
m36_85 -> m36_70  [key=2, style=dotted];
m36_85 -> m36_86  [key=0, style=solid];
m36_85 -> m36_87  [color=darkseagreen4, key=1, label=response, style=dashed];
m36_87 -> m36_89  [key=0, style=solid];
m36_87 -> m36_71  [key=2, style=dotted];
m36_88 -> m36_89  [key=0, style=solid];
m36_88 -> m36_72  [key=2, style=dotted];
m36_86 -> m36_87  [key=0, style=solid];
m36_86 -> m36_88  [key=0, style=solid];
m36_89 -> m36_65  [color=blue, key=0, style=bold];
m36_74 -> m36_75  [key=0, style=solid];
m36_217 -> m36_218  [key=0, style=solid];
m36_307 -> m36_308  [key=0, style=solid];
m36_218 -> m36_218  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m36_218 -> m36_219  [key=0, style=solid];
m36_219 -> m36_217  [color=blue, key=0, style=bold];
m36_309 -> m36_307  [color=blue, key=0, style=bold];
m36_308 -> m36_309  [key=0, style=solid];
m36_75 -> m36_76  [key=0, style=solid];
m36_76 -> m36_74  [color=blue, key=0, style=bold];
m36_317 -> m36_325  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_317 -> m36_326  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_317 -> m36_333  [color=darkseagreen4, key=1, label=string, style=dashed];
m36_317 -> m36_334  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_317 -> m36_336  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_317 -> m36_324  [key=0, style=solid];
m36_317 -> m36_328  [color=darkseagreen4, key=1, label=bool, style=dashed];
m36_317 -> m36_332  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_317 -> m36_314  [color=darkorchid, key=3, label="Parameter variable bool liquidateExistingHoldings", style=bold];
m36_317 -> m36_318  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_317 -> m36_321  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_325 -> m36_326  [key=0, style=solid];
m36_325 -> m36_328  [key=0, style=solid];
m36_325 -> m36_275  [key=2, style=dotted];
m36_326 -> m36_327  [key=0, style=solid];
m36_326 -> m36_205  [key=2, style=dotted];
m36_326 -> m36_226  [key=2, style=dotted];
m36_329 -> m36_330  [key=0, style=solid];
m36_329 -> m36_334  [key=0, style=solid];
m36_333 -> m36_329  [key=0, style=solid];
m36_333 -> m36_38  [key=2, style=dotted];
m36_334 -> m36_338  [key=2, style=dotted];
m36_334 -> m36_335  [key=0, style=solid];
m36_334 -> m36_336  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m36_336 -> m36_35  [key=2, style=dotted];
m36_336 -> m36_337  [key=0, style=solid];
m36_324 -> m36_325  [key=0, style=solid];
m36_328 -> m36_329  [key=0, style=solid];
m36_328 -> m36_334  [key=0, style=solid];
m36_327 -> m36_337  [key=0, style=solid];
m36_332 -> m36_329  [key=0, style=solid];
m36_332 -> m36_333  [key=0, style=solid];
m36_330 -> m36_333  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m36_330 -> m36_332  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m36_330 -> m36_330  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m36_330 -> m36_331  [key=0, style=solid];
m36_331 -> m36_333  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m36_331 -> m36_332  [key=0, style=solid];
m36_331 -> m36_331  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m36_335 -> m36_336  [key=0, style=solid];
m36_335 -> m36_12  [key=2, style=dotted];
m36_335 -> m36_337  [key=0, style=solid];
m36_337 -> m36_317  [color=blue, key=0, style=bold];
m36_108 -> m36_107  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket LimitOrder", style=bold];
m36_108 -> m36_109  [key=0, style=solid];
m36_109 -> m36_107  [key=2, style=dotted];
m36_109 -> m36_110  [key=0, style=solid];
m36_110 -> m36_108  [color=blue, key=0, style=bold];
m36_392 -> m36_393  [key=0, style=solid];
m36_392 -> m36_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m36_393 -> m36_394  [key=0, style=solid];
m36_393 -> m36_4  [key=2, style=dotted];
m36_394 -> m36_392  [color=blue, key=0, style=bold];
m36_107 -> m36_112  [color=green, key=1, label=decimal, style=dashed];
m36_107 -> m36_111  [key=0, style=solid];
m36_107 -> m36_104  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_107 -> m36_108  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_112 -> m36_113  [color=green, key=0, style=solid];
m36_112 -> m36_68  [color=green, key=2, style=dotted];
m36_112 -> m36_115  [color=green, key=1, label=request, style=dashed];
m36_112 -> m36_116  [color=green, key=1, label=request, style=dashed];
m36_111 -> m36_112  [color=green, key=0, style=solid];
m36_113 -> m36_70  [key=2, style=dotted];
m36_113 -> m36_114  [key=0, style=solid];
m36_113 -> m36_115  [color=darkseagreen4, key=1, label=response, style=dashed];
m36_115 -> m36_117  [key=0, style=solid];
m36_115 -> m36_71  [key=2, style=dotted];
m36_116 -> m36_117  [key=0, style=solid];
m36_116 -> m36_72  [key=2, style=dotted];
m36_114 -> m36_115  [key=0, style=solid];
m36_114 -> m36_116  [key=0, style=solid];
m36_117 -> m36_107  [color=blue, key=0, style=bold];
m36_38 -> m36_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m36_38 -> m36_39  [key=0, style=solid];
m36_38 -> m36_336  [color=darkorchid, key=3, label="Parameter variable bool asynchronous", style=bold];
m36_38 -> m36_330  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m36_38 -> m36_386  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m36_38 -> m36_317  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_39 -> m36_35  [key=2, style=dotted];
m36_39 -> m36_40  [key=0, style=solid];
m36_40 -> m36_38  [color=blue, key=0, style=bold];
m36_132 -> m36_135  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopLimitOrder", style=bold];
m36_132 -> m36_133  [key=0, style=solid];
m36_133 -> m36_135  [key=2, style=dotted];
m36_133 -> m36_134  [key=0, style=solid];
m36_134 -> m36_132  [color=blue, key=0, style=bold];
m36_225 -> m36_70  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m36_225 -> m36_228  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_227  [key=0, style=solid];
m36_225 -> m36_229  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_230  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_231  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_233  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_235  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_236  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_237  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_238  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_240  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_244  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_246  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_251  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_253  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_255  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_259  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_261  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_263  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_264  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_265  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_266  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_267  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_268  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_272  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_225 -> m36_273  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m36_228 -> m36_229  [key=0, style=solid];
m36_228 -> m36_230  [key=0, style=solid];
m36_228 -> m36_275  [key=2, style=dotted];
m36_228 -> m36_232  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_234  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_235  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_237  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_242  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_245  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_247  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_249  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_254  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_260  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_262  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_264  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_269  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_228 -> m36_271  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_243 -> m36_244  [key=0, style=solid];
m36_243 -> m36_245  [key=0, style=solid];
m36_243 -> m36_278  [key=2, style=dotted];
m36_250 -> m36_251  [key=0, style=solid];
m36_250 -> m36_252  [key=0, style=solid];
m36_250 -> m36_278  [key=2, style=dotted];
m36_256 -> m36_257  [key=0, style=solid];
m36_256 -> m36_259  [key=0, style=solid];
m36_257 -> m36_258  [key=0, style=solid];
m36_258 -> m36_274  [key=0, style=solid];
m36_258 -> m36_216  [key=2, style=dotted];
m36_258 -> m36_276  [key=2, style=dotted];
m36_271 -> m36_272  [key=0, style=solid];
m36_271 -> m36_273  [key=0, style=solid];
m36_227 -> m36_228  [key=0, style=solid];
m36_229 -> m36_274  [key=0, style=solid];
m36_229 -> m36_205  [key=2, style=dotted];
m36_229 -> m36_276  [key=2, style=dotted];
m36_230 -> m36_12  [key=2, style=dotted];
m36_230 -> m36_231  [key=0, style=solid];
m36_230 -> m36_232  [key=0, style=solid];
m36_232 -> m36_233  [key=0, style=solid];
m36_232 -> m36_234  [key=0, style=solid];
m36_234 -> m36_235  [key=0, style=solid];
m36_234 -> m36_239  [color=darkseagreen4, key=1, label=price, style=dashed];
m36_235 -> m36_236  [key=0, style=solid];
m36_235 -> m36_237  [key=0, style=solid];
m36_237 -> m36_238  [key=0, style=solid];
m36_237 -> m36_239  [key=0, style=solid];
m36_242 -> m36_243  [key=0, style=solid];
m36_242 -> m36_244  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m36_242 -> m36_246  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m36_242 -> m36_251  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m36_242 -> m36_253  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m36_245 -> m36_246  [key=0, style=solid];
m36_245 -> m36_247  [key=0, style=solid];
m36_247 -> m36_248  [key=0, style=solid];
m36_247 -> m36_254  [key=0, style=solid];
m36_249 -> m36_250  [key=0, style=solid];
m36_249 -> m36_251  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m36_249 -> m36_253  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m36_254 -> m36_256  [key=0, style=solid];
m36_254 -> m36_255  [key=0, style=solid];
m36_260 -> m36_261  [key=0, style=solid];
m36_260 -> m36_262  [key=0, style=solid];
m36_262 -> m36_263  [key=0, style=solid];
m36_262 -> m36_264  [key=0, style=solid];
m36_264 -> m36_265  [key=0, style=solid];
m36_264 -> m36_266  [key=0, style=solid];
m36_269 -> m36_270  [key=0, style=solid];
m36_269 -> m36_279  [key=2, style=dotted];
m36_244 -> m36_274  [key=0, style=solid];
m36_244 -> m36_276  [key=2, style=dotted];
m36_251 -> m36_274  [key=0, style=solid];
m36_251 -> m36_276  [key=2, style=dotted];
m36_252 -> m36_254  [key=0, style=solid];
m36_252 -> m36_253  [key=0, style=solid];
m36_259 -> m36_260  [key=0, style=solid];
m36_259 -> m36_268  [key=0, style=solid];
m36_270 -> m36_271  [key=0, style=solid];
m36_270 -> m36_280  [key=2, style=dotted];
m36_272 -> m36_274  [key=0, style=solid];
m36_272 -> m36_276  [key=2, style=dotted];
m36_273 -> m36_274  [key=0, style=solid];
m36_273 -> m36_281  [key=2, style=dotted];
m36_231 -> m36_274  [key=0, style=solid];
m36_231 -> m36_277  [key=2, style=dotted];
m36_233 -> m36_274  [key=0, style=solid];
m36_233 -> m36_276  [key=2, style=dotted];
m36_233 -> m36_205  [key=2, style=dotted];
m36_236 -> m36_274  [key=0, style=solid];
m36_236 -> m36_276  [key=2, style=dotted];
m36_238 -> m36_274  [key=0, style=solid];
m36_238 -> m36_276  [key=2, style=dotted];
m36_240 -> m36_274  [key=0, style=solid];
m36_240 -> m36_276  [key=2, style=dotted];
m36_240 -> m36_205  [key=2, style=dotted];
m36_246 -> m36_274  [key=0, style=solid];
m36_246 -> m36_276  [key=2, style=dotted];
m36_253 -> m36_274  [key=0, style=solid];
m36_253 -> m36_276  [key=2, style=dotted];
m36_255 -> m36_274  [key=0, style=solid];
m36_255 -> m36_276  [key=2, style=dotted];
m36_261 -> m36_274  [key=0, style=solid];
m36_261 -> m36_276  [key=2, style=dotted];
m36_261 -> m36_205  [key=2, style=dotted];
m36_263 -> m36_274  [key=0, style=solid];
m36_263 -> m36_276  [key=2, style=dotted];
m36_263 -> m36_205  [key=2, style=dotted];
m36_265 -> m36_274  [key=0, style=solid];
m36_265 -> m36_276  [key=2, style=dotted];
m36_265 -> m36_205  [key=2, style=dotted];
m36_266 -> m36_267  [key=0, style=solid];
m36_266 -> m36_268  [key=0, style=solid];
m36_267 -> m36_268  [key=0, style=solid];
m36_267 -> m36_277  [key=2, style=dotted];
m36_268 -> m36_269  [key=0, style=solid];
m36_268 -> m36_273  [key=0, style=solid];
m36_239 -> m36_240  [key=0, style=solid];
m36_239 -> m36_241  [key=0, style=solid];
m36_241 -> m36_242  [key=0, style=solid];
m36_248 -> m36_249  [key=0, style=solid];
m36_274 -> m36_225  [color=blue, key=0, style=bold];
m36_395 -> m36_396  [key=0, style=solid];
m36_397 -> m36_398  [key=0, style=solid];
m36_397 -> m36_402  [key=2, style=dotted];
m36_396 -> m36_397  [key=0, style=solid];
m36_396 -> m36_400  [key=2, style=dotted];
m36_396 -> m36_401  [key=2, style=dotted];
m36_396 -> m36_398  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m36_398 -> m36_399  [key=0, style=solid];
m36_398 -> m36_403  [key=2, style=dotted];
m36_399 -> m36_395  [color=blue, key=0, style=bold];
m36_29 -> m36_30  [key=0, style=solid];
m36_29 -> m36_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m36_30 -> m36_31  [key=0, style=solid];
m36_30 -> m36_4  [key=2, style=dotted];
m36_31 -> m36_29  [color=blue, key=0, style=bold];
m36_32 -> m36_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m36_32 -> m36_33  [key=0, style=solid];
m36_33 -> m36_35  [key=2, style=dotted];
m36_33 -> m36_34  [key=0, style=solid];
m36_34 -> m36_32  [color=blue, key=0, style=bold];
m36_77 -> m36_65  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnOpenOrder", style=bold];
m36_77 -> m36_78  [key=0, style=solid];
m36_78 -> m36_65  [key=2, style=dotted];
m36_78 -> m36_79  [key=0, style=solid];
m36_79 -> m36_77  [color=blue, key=0, style=bold];
m36_386 -> m36_387  [key=0, style=solid];
m36_386 -> m36_38  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m36_387 -> m36_388  [key=0, style=solid];
m36_387 -> m36_38  [key=2, style=dotted];
m36_388 -> m36_386  [color=blue, key=0, style=bold];
m36_70 -> m36_54  [color=green, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m36_70 -> m36_84  [color=green, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m36_70 -> m36_98  [color=green, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m36_70 -> m36_112  [color=green, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m36_70 -> m36_126  [color=green, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m36_70 -> m36_140  [color=green, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m36_70 -> m36_148  [color=green, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m36_70 -> m36_220  [key=0, style=solid];
m36_220 -> m36_221  [key=0, style=solid];
m36_220 -> m36_225  [key=2, style=dotted];
m36_220 -> m36_222  [color=darkseagreen4, key=1, label=response, style=dashed];
m36_220 -> m36_223  [color=darkseagreen4, key=1, label=response, style=dashed];
m36_222 -> m36_223  [key=0, style=solid];
m36_222 -> m36_226  [key=2, style=dotted];
m36_221 -> m36_222  [key=0, style=solid];
m36_221 -> m36_223  [key=0, style=solid];
m36_223 -> m36_224  [key=0, style=solid];
m36_224 -> m36_70  [color=blue, key=0, style=bold];
m36_20 -> m36_21  [key=0, style=solid];
m36_20 -> m36_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m36_21 -> m36_22  [key=0, style=solid];
m36_21 -> m36_8  [key=2, style=dotted];
m36_21 -> m36_4  [key=2, style=dotted];
m36_22 -> m36_20  [color=blue, key=0, style=bold];
m36_118 -> m36_121  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopMarketOrder", style=bold];
m36_118 -> m36_119  [key=0, style=solid];
m36_119 -> m36_121  [key=2, style=dotted];
m36_119 -> m36_120  [key=0, style=solid];
m36_120 -> m36_118  [color=blue, key=0, style=bold];
m36_159 -> m36_160  [key=0, style=solid];
m36_159 -> m36_162  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Orders.OrderTicket> Buy", style=bold];
m36_160 -> m36_161  [key=0, style=solid];
m36_160 -> m36_3  [key=2, style=dotted];
m36_160 -> m36_162  [key=2, style=dotted];
m36_161 -> m36_159  [color=blue, key=0, style=bold];
m36_44 -> m36_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
m36_44 -> m36_45  [key=0, style=solid];
m36_45 -> m36_35  [key=2, style=dotted];
m36_45 -> m36_46  [key=0, style=solid];
m36_46 -> m36_44  [color=blue, key=0, style=bold];
m36_389 -> m36_390  [key=0, style=solid];
m36_389 -> m36_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m36_390 -> m36_391  [key=0, style=solid];
m36_390 -> m36_4  [key=2, style=dotted];
m36_391 -> m36_389  [color=blue, key=0, style=bold];
m36_80 -> m36_65  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOnOpenOrder", style=bold];
m36_80 -> m36_81  [key=0, style=solid];
m36_81 -> m36_65  [key=2, style=dotted];
m36_81 -> m36_82  [key=0, style=solid];
m36_82 -> m36_80  [color=blue, key=0, style=bold];
m36_135 -> m36_140  [color=green, key=1, label=decimal, style=dashed];
m36_135 -> m36_139  [key=0, style=solid];
m36_135 -> m36_132  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_135 -> m36_136  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_140 -> m36_141  [color=green, key=0, style=solid];
m36_140 -> m36_68  [color=green, key=2, style=dotted];
m36_140 -> m36_143  [color=green, key=1, label=request, style=dashed];
m36_140 -> m36_144  [color=green, key=1, label=request, style=dashed];
m36_139 -> m36_140  [color=green, key=0, style=solid];
m36_141 -> m36_70  [key=2, style=dotted];
m36_141 -> m36_142  [key=0, style=solid];
m36_141 -> m36_143  [color=darkseagreen4, key=1, label=response, style=dashed];
m36_143 -> m36_145  [key=0, style=solid];
m36_143 -> m36_71  [key=2, style=dotted];
m36_144 -> m36_145  [key=0, style=solid];
m36_144 -> m36_72  [key=2, style=dotted];
m36_142 -> m36_143  [key=0, style=solid];
m36_142 -> m36_144  [key=0, style=solid];
m36_145 -> m36_135  [color=blue, key=0, style=bold];
m36_104 -> m36_107  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket LimitOrder", style=bold];
m36_104 -> m36_105  [key=0, style=solid];
m36_104 -> m36_170  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_105 -> m36_107  [key=2, style=dotted];
m36_105 -> m36_106  [key=0, style=solid];
m36_106 -> m36_104  [color=blue, key=0, style=bold];
m36_68 -> m36_54  [color=green, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m36_68 -> m36_84  [color=green, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m36_68 -> m36_98  [color=green, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m36_68 -> m36_112  [color=green, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m36_68 -> m36_126  [color=green, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m36_68 -> m36_140  [color=green, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m36_68 -> m36_148  [color=green, key=3, label="Parameter variable QuantConnect.Orders.OrderType orderType", style=bold];
m36_68 -> m36_404  [color=green, key=0, style=solid];
m36_68 -> m36_35  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_68 -> m36_47  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m36_68 -> m36_83  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m36_68 -> m36_97  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m36_68 -> m36_111  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m36_68 -> m36_125  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m36_68 -> m36_139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m36_68 -> m36_147  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m36_68 -> m36_65  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_68 -> m36_93  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_68 -> m36_107  [color=darkorchid, key=3, label="Parameter variable decimal limitPrice", style=bold];
m36_68 -> m36_121  [color=darkorchid, key=3, label="Parameter variable decimal stopPrice", style=bold];
m36_68 -> m36_135  [color=darkorchid, key=3, label="Parameter variable decimal stopPrice", style=bold];
m36_68 -> m36_146  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_404 -> m36_405  [color=green, key=0, style=solid];
m36_404 -> m36_406  [color=green, key=2, style=dotted];
m36_405 -> m36_68  [color=blue, key=0, style=bold];
m36_9 -> m36_10  [key=0, style=solid];
m36_9 -> m36_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m36_10 -> m36_11  [key=0, style=solid];
m36_10 -> m36_12  [key=2, style=dotted];
m36_10 -> m36_4  [key=2, style=dotted];
m36_11 -> m36_9  [color=blue, key=0, style=bold];
m36_146 -> m36_148  [color=green, key=1, label=int, style=dashed];
m36_146 -> m36_147  [key=0, style=solid];
m36_146 -> m36_155  [color=darkseagreen4, key=1, label=bool, style=dashed];
m36_146 -> m36_154  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket ExerciseOption", style=bold];
m36_148 -> m36_149  [color=green, key=0, style=solid];
m36_148 -> m36_68  [color=green, key=2, style=dotted];
m36_148 -> m36_150  [color=green, key=1, label=request, style=dashed];
m36_148 -> m36_151  [color=green, key=1, label=request, style=dashed];
m36_148 -> m36_153  [color=green, key=1, label=request, style=dashed];
m36_148 -> m36_154  [color=green, key=1, label=request, style=dashed];
m36_147 -> m36_148  [color=green, key=0, style=solid];
m36_149 -> m36_150  [key=0, style=solid];
m36_149 -> m36_151  [key=0, style=solid];
m36_150 -> m36_158  [key=0, style=solid];
m36_150 -> m36_69  [key=2, style=dotted];
m36_151 -> m36_70  [key=2, style=dotted];
m36_151 -> m36_152  [key=0, style=solid];
m36_151 -> m36_153  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m36_153 -> m36_158  [key=0, style=solid];
m36_153 -> m36_71  [key=2, style=dotted];
m36_154 -> m36_155  [key=0, style=solid];
m36_154 -> m36_72  [key=2, style=dotted];
m36_154 -> m36_156  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m36_154 -> m36_157  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m36_156 -> m36_157  [key=0, style=solid];
m36_156 -> m36_73  [key=2, style=dotted];
m36_155 -> m36_156  [key=0, style=solid];
m36_155 -> m36_157  [key=0, style=solid];
m36_152 -> m36_153  [key=0, style=solid];
m36_152 -> m36_154  [key=0, style=solid];
m36_157 -> m36_158  [key=0, style=solid];
m36_158 -> m36_146  [color=blue, key=0, style=bold];
m36_69 -> m36_70  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.OrderResponse response", style=bold];
m36_310 -> m36_311  [key=0, style=solid];
m36_310 -> m36_312  [color=darkseagreen4, key=1, label=int, style=dashed];
m36_311 -> m36_312  [key=0, style=solid];
m36_311 -> m36_313  [key=0, style=solid];
m36_312 -> m36_313  [key=0, style=solid];
m36_313 -> m36_310  [color=blue, key=0, style=bold];
m36_4 -> m36_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Order", style=bold];
m36_4 -> m36_36  [key=0, style=solid];
m36_4 -> m36_285  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m36_4 -> m36_0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m36_4 -> m36_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m36_4 -> m36_9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m36_4 -> m36_13  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m36_4 -> m36_17  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m36_4 -> m36_20  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m36_4 -> m36_23  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m36_4 -> m36_26  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m36_4 -> m36_29  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m36_4 -> m36_389  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m36_4 -> m36_392  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m36_36 -> m36_35  [key=2, style=dotted];
m36_36 -> m36_37  [key=0, style=solid];
m36_37 -> m36_4  [color=blue, key=0, style=bold];
m36_41 -> m36_35  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
m36_41 -> m36_42  [key=0, style=solid];
m36_41 -> m36_170  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_42 -> m36_35  [key=2, style=dotted];
m36_42 -> m36_43  [key=0, style=solid];
m36_43 -> m36_41  [color=blue, key=0, style=bold];
m36_93 -> m36_98  [color=green, key=1, label=decimal, style=dashed];
m36_93 -> m36_97  [key=0, style=solid];
m36_93 -> m36_90  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_93 -> m36_94  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_98 -> m36_99  [color=green, key=0, style=solid];
m36_98 -> m36_68  [color=green, key=2, style=dotted];
m36_98 -> m36_101  [color=green, key=1, label=request, style=dashed];
m36_98 -> m36_102  [color=green, key=1, label=request, style=dashed];
m36_97 -> m36_98  [color=green, key=0, style=solid];
m36_99 -> m36_70  [key=2, style=dotted];
m36_99 -> m36_100  [key=0, style=solid];
m36_99 -> m36_101  [color=darkseagreen4, key=1, label=response, style=dashed];
m36_101 -> m36_103  [key=0, style=solid];
m36_101 -> m36_71  [key=2, style=dotted];
m36_102 -> m36_103  [key=0, style=solid];
m36_102 -> m36_72  [key=2, style=dotted];
m36_100 -> m36_101  [key=0, style=solid];
m36_100 -> m36_102  [key=0, style=solid];
m36_103 -> m36_93  [color=blue, key=0, style=bold];
m36_339 -> m36_338  [color=darkorchid, key=3, label="method methodReturn decimal CalculateOrderQuantity", style=bold];
m36_339 -> m36_340  [key=0, style=solid];
m36_340 -> m36_338  [key=2, style=dotted];
m36_340 -> m36_341  [key=0, style=solid];
m36_341 -> m36_339  [color=blue, key=0, style=bold];
m36_35 -> m36_54  [color=green, key=1, label=decimal, style=dashed];
m36_35 -> m36_47  [key=0, style=solid];
m36_35 -> m36_49  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m36_35 -> m36_61  [color=darkseagreen4, key=1, label=bool, style=dashed];
m36_35 -> m36_32  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m36_35 -> m36_4  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m36_35 -> m36_38  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_35 -> m36_41  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_35 -> m36_44  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_35 -> m36_317  [color=darkorchid, key=3, label="Parameter variable string tag", style=bold];
m36_35 -> m36_334  [color=darkorchid, key=3, label="Parameter variable decimal quantity", style=bold];
m36_35 -> m36_336  [color=darkorchid, key=3, label="Parameter variable bool asynchronous", style=bold];
m36_35 -> m36_60  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket MarketOrder", style=bold];
m36_54 -> m36_55  [color=green, key=0, style=solid];
m36_54 -> m36_68  [color=green, key=2, style=dotted];
m36_54 -> m36_56  [color=green, key=1, label=request, style=dashed];
m36_54 -> m36_57  [color=green, key=1, label=request, style=dashed];
m36_54 -> m36_59  [color=green, key=1, label=request, style=dashed];
m36_54 -> m36_60  [color=green, key=1, label=request, style=dashed];
m36_47 -> m36_54  [color=green, key=1, label=security, style=dashed];
m36_47 -> m36_48  [key=0, style=solid];
m36_47 -> m36_49  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_47 -> m36_50  [color=darkseagreen4, key=1, label=security, style=dashed];
m36_48 -> m36_54  [color=green, key=0, style=solid];
m36_48 -> m36_49  [key=0, style=solid];
m36_55 -> m36_56  [key=0, style=solid];
m36_55 -> m36_57  [key=0, style=solid];
m36_56 -> m36_64  [key=0, style=solid];
m36_56 -> m36_69  [key=2, style=dotted];
m36_57 -> m36_70  [key=2, style=dotted];
m36_57 -> m36_58  [key=0, style=solid];
m36_57 -> m36_59  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m36_59 -> m36_64  [key=0, style=solid];
m36_59 -> m36_71  [key=2, style=dotted];
m36_60 -> m36_61  [key=0, style=solid];
m36_60 -> m36_72  [key=2, style=dotted];
m36_60 -> m36_62  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m36_60 -> m36_63  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m36_49 -> m36_65  [key=2, style=dotted];
m36_49 -> m36_50  [key=0, style=solid];
m36_49 -> m36_51  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m36_49 -> m36_52  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m36_49 -> m36_53  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m36_52 -> m36_53  [key=0, style=solid];
m36_52 -> m36_67  [key=2, style=dotted];
m36_62 -> m36_63  [key=0, style=solid];
m36_62 -> m36_73  [key=2, style=dotted];
m36_61 -> m36_62  [key=0, style=solid];
m36_61 -> m36_63  [key=0, style=solid];
m36_50 -> m36_51  [key=0, style=solid];
m36_50 -> m36_66  [key=2, style=dotted];
m36_50 -> m36_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_58 -> m36_59  [key=0, style=solid];
m36_58 -> m36_60  [key=0, style=solid];
m36_63 -> m36_64  [key=0, style=solid];
m36_51 -> m36_52  [key=0, style=solid];
m36_51 -> m36_53  [key=0, style=solid];
m36_53 -> m36_64  [key=0, style=solid];
m36_64 -> m36_35  [color=blue, key=0, style=bold];
m36_13 -> m36_14  [key=0, style=solid];
m36_13 -> m36_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m36_14 -> m36_15  [key=0, style=solid];
m36_14 -> m36_16  [key=2, style=dotted];
m36_14 -> m36_4  [key=2, style=dotted];
m36_15 -> m36_13  [color=blue, key=0, style=bold];
m36_23 -> m36_24  [key=0, style=solid];
m36_23 -> m36_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m36_24 -> m36_25  [key=0, style=solid];
m36_24 -> m36_16  [key=2, style=dotted];
m36_24 -> m36_4  [key=2, style=dotted];
m36_25 -> m36_23  [color=blue, key=0, style=bold];
m36_5 -> m36_6  [key=0, style=solid];
m36_5 -> m36_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Buy", style=bold];
m36_6 -> m36_7  [key=0, style=solid];
m36_6 -> m36_8  [key=2, style=dotted];
m36_6 -> m36_4  [key=2, style=dotted];
m36_7 -> m36_5  [color=blue, key=0, style=bold];
m36_282 -> m36_296  [color=darkseagreen4, key=1, label=string, style=dashed];
m36_282 -> m36_284  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_282 -> m36_283  [key=0, style=solid];
m36_285 -> m36_286  [key=0, style=solid];
m36_285 -> m36_301  [key=0, style=solid];
m36_285 -> m36_303  [key=2, style=dotted];
m36_285 -> m36_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_285 -> m36_287  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m36_285 -> m36_288  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m36_285 -> m36_298  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m36_287 -> m36_288  [key=0, style=solid];
m36_287 -> m36_304  [key=2, style=dotted];
m36_287 -> m36_289  [color=darkseagreen4, key=1, label=orders, style=dashed];
m36_287 -> m36_291  [color=darkseagreen4, key=1, label=orders, style=dashed];
m36_288 -> m36_289  [key=0, style=solid];
m36_288 -> m36_297  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m36_288 -> m36_298  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m36_293 -> m36_294  [key=0, style=solid];
m36_293 -> m36_305  [key=2, style=dotted];
m36_293 -> m36_295  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m36_296 -> m36_291  [key=0, style=solid];
m36_296 -> m36_306  [key=2, style=dotted];
m36_298 -> m36_299  [key=0, style=solid];
m36_298 -> m36_4  [key=2, style=dotted];
m36_298 -> m36_300  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m36_284 -> m36_285  [key=0, style=solid];
m36_284 -> m36_284  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_284 -> m36_286  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_300 -> m36_285  [key=0, style=solid];
m36_300 -> m36_213  [key=2, style=dotted];
m36_286 -> m36_285  [key=0, style=solid];
m36_286 -> m36_287  [key=0, style=solid];
m36_289 -> m36_285  [key=0, style=solid];
m36_289 -> m36_290  [key=0, style=solid];
m36_297 -> m36_285  [key=0, style=solid];
m36_297 -> m36_298  [key=0, style=solid];
m36_299 -> m36_285  [key=0, style=solid];
m36_299 -> m36_300  [key=0, style=solid];
m36_301 -> m36_302  [key=0, style=solid];
m36_291 -> m36_293  [color=darkseagreen4, key=1, label=order, style=dashed];
m36_291 -> m36_296  [color=darkseagreen4, key=1, label=order, style=dashed];
m36_291 -> m36_297  [key=0, style=solid];
m36_291 -> m36_292  [key=0, style=solid];
m36_292 -> m36_293  [key=0, style=solid];
m36_292 -> m36_296  [key=0, style=solid];
m36_294 -> m36_291  [key=0, style=solid];
m36_294 -> m36_295  [key=0, style=solid];
m36_295 -> m36_298  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m36_295 -> m36_291  [key=0, style=solid];
m36_295 -> m36_295  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m36_290 -> m36_298  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m36_290 -> m36_291  [key=0, style=solid];
m36_290 -> m36_295  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m36_290 -> m36_290  [color=darkorchid, key=3, label="Local variable decimal marketOrdersQuantity", style=bold];
m36_283 -> m36_284  [key=0, style=solid];
m36_283 -> m36_300  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m36_283 -> m36_301  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m36_283 -> m36_201  [key=2, style=dotted];
m36_302 -> m36_282  [color=blue, key=0, style=bold];
m36_26 -> m36_27  [key=0, style=solid];
m36_26 -> m36_4  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Sell", style=bold];
m36_27 -> m36_28  [key=0, style=solid];
m36_27 -> m36_12  [key=2, style=dotted];
m36_27 -> m36_4  [key=2, style=dotted];
m36_28 -> m36_26  [color=blue, key=0, style=bold];
m36_136 -> m36_135  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket StopLimitOrder", style=bold];
m36_136 -> m36_137  [key=0, style=solid];
m36_137 -> m36_135  [key=2, style=dotted];
m36_137 -> m36_138  [key=0, style=solid];
m36_138 -> m36_136  [color=blue, key=0, style=bold];
m36_407 -> m36_54  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_84  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_98  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_112  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_126  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_140  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_148  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_404  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_56  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_78  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_83  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_101  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_115  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_116  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_119  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_123  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_129  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_133  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_139  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_147  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_151  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_154  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_156  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_164  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_166  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_180  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_183  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_193  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_196  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_222  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_228  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_243  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_250  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_256  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_258  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_271  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_285  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_287  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_288  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_293  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_296  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_298  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_311  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_312  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_315  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_319  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_326  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_329  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_333  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_336  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_342  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_352  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_355  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_370  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_387  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_390  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_393  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_407 -> m36_397  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m36_408 -> m36_218  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m36_409 -> m36_218  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m38_44 -> m38_45  [key=0, style=solid];
m38_45 -> m38_46  [key=0, style=solid];
m38_45 -> m38_47  [key=2, style=dotted];
m38_45 -> m38_48  [key=2, style=dotted];
m38_46 -> m38_44  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [key=0, style=solid];
m38_0 -> m38_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m38_0 -> m38_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_8  [key=2, style=dotted];
m38_2 -> m38_3  [key=0, style=solid];
m38_2 -> m38_6  [key=0, style=solid];
m38_6 -> m38_7  [key=0, style=solid];
m38_6 -> m38_9  [key=2, style=dotted];
m38_3 -> m38_4  [key=0, style=solid];
m38_3 -> m38_8  [key=2, style=dotted];
m38_4 -> m38_5  [key=0, style=solid];
m38_4 -> m38_8  [key=2, style=dotted];
m38_5 -> m38_6  [key=0, style=solid];
m38_5 -> m38_8  [key=2, style=dotted];
m38_7 -> m38_0  [color=blue, key=0, style=bold];
m38_41 -> m38_49  [key=0, style=solid];
m38_41 -> m38_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m38_41 -> m38_51  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m38_49 -> m38_50  [key=0, style=solid];
m38_50 -> m38_51  [key=0, style=solid];
m38_51 -> m38_52  [key=0, style=solid];
m38_52 -> m38_41  [color=blue, key=0, style=bold];
m38_10 -> m38_11  [key=0, style=solid];
m38_11 -> m38_12  [key=0, style=solid];
m38_11 -> m38_39  [key=2, style=dotted];
m38_11 -> m38_37  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m38_12 -> m38_13  [key=0, style=solid];
m38_12 -> m38_39  [key=2, style=dotted];
m38_12 -> m38_37  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m38_37 -> m38_38  [key=0, style=solid];
m38_37 -> m38_40  [key=2, style=dotted];
m38_37 -> m38_41  [key=2, style=dotted];
m38_37 -> m38_42  [key=2, style=dotted];
m38_37 -> m38_43  [key=2, style=dotted];
m38_37 -> m38_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_13 -> m38_14  [key=0, style=solid];
m38_13 -> m38_39  [key=2, style=dotted];
m38_13 -> m38_37  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m38_14 -> m38_15  [key=0, style=solid];
m38_14 -> m38_39  [key=2, style=dotted];
m38_14 -> m38_37  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m38_15 -> m38_16  [key=0, style=solid];
m38_15 -> m38_39  [key=2, style=dotted];
m38_15 -> m38_37  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m38_16 -> m38_17  [key=0, style=solid];
m38_16 -> m38_39  [key=2, style=dotted];
m38_16 -> m38_37  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m38_17 -> m38_18  [key=0, style=solid];
m38_17 -> m38_39  [key=2, style=dotted];
m38_17 -> m38_37  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m38_18 -> m38_19  [key=0, style=solid];
m38_18 -> m38_39  [key=2, style=dotted];
m38_18 -> m38_37  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m38_19 -> m38_20  [key=0, style=solid];
m38_19 -> m38_39  [key=2, style=dotted];
m38_19 -> m38_37  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m38_20 -> m38_21  [key=0, style=solid];
m38_20 -> m38_39  [key=2, style=dotted];
m38_20 -> m38_37  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_39  [key=2, style=dotted];
m38_21 -> m38_37  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m38_22 -> m38_23  [key=0, style=solid];
m38_22 -> m38_39  [key=2, style=dotted];
m38_22 -> m38_37  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m38_23 -> m38_24  [key=0, style=solid];
m38_23 -> m38_39  [key=2, style=dotted];
m38_23 -> m38_37  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m38_24 -> m38_25  [key=0, style=solid];
m38_24 -> m38_39  [key=2, style=dotted];
m38_24 -> m38_37  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m38_25 -> m38_26  [key=0, style=solid];
m38_25 -> m38_39  [key=2, style=dotted];
m38_25 -> m38_37  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m38_26 -> m38_27  [key=0, style=solid];
m38_26 -> m38_39  [key=2, style=dotted];
m38_26 -> m38_37  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m38_27 -> m38_28  [key=0, style=solid];
m38_27 -> m38_39  [key=2, style=dotted];
m38_27 -> m38_37  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m38_28 -> m38_29  [key=0, style=solid];
m38_28 -> m38_39  [key=2, style=dotted];
m38_28 -> m38_37  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m38_29 -> m38_30  [key=0, style=solid];
m38_29 -> m38_39  [key=2, style=dotted];
m38_29 -> m38_37  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m38_30 -> m38_31  [key=0, style=solid];
m38_30 -> m38_39  [key=2, style=dotted];
m38_30 -> m38_37  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m38_31 -> m38_32  [key=0, style=solid];
m38_31 -> m38_39  [key=2, style=dotted];
m38_31 -> m38_37  [color=darkseagreen4, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m38_32 -> m38_33  [key=0, style=solid];
m38_32 -> m38_39  [key=2, style=dotted];
m38_32 -> m38_37  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m38_33 -> m38_34  [key=0, style=solid];
m38_33 -> m38_39  [key=2, style=dotted];
m38_33 -> m38_37  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m38_34 -> m38_35  [color=red, key=0, style=solid];
m38_34 -> m38_39  [key=2, style=dotted];
m38_34 -> m38_37  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m38_35 -> m38_36  [color=red, key=0, style=solid];
m38_35 -> m38_39  [color=red, key=2, style=dotted];
m38_35 -> m38_37  [color=red, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m38_36 -> m38_37  [key=0, style=solid];
m38_36 -> m38_39  [key=2, style=dotted];
m38_38 -> m38_10  [color=blue, key=0, style=bold];
m38_53 -> m38_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m38_53 -> m38_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m38_53 -> m38_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m39_28 -> m39_29  [key=0, style=solid];
m39_29 -> m39_30  [key=0, style=solid];
m39_29 -> m39_18  [key=2, style=dotted];
m39_30 -> m39_28  [color=blue, key=0, style=bold];
m39_62 -> m39_63  [key=0, style=solid];
m39_63 -> m39_64  [key=0, style=solid];
m39_63 -> m39_57  [key=2, style=dotted];
m39_63 -> m39_58  [key=2, style=dotted];
m39_63 -> m39_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_64 -> m39_62  [color=blue, key=0, style=bold];
m39_47 -> m39_48  [key=0, style=solid];
m39_47 -> m39_49  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_48 -> m39_49  [key=0, style=solid];
m39_49 -> m39_50  [key=0, style=solid];
m39_49 -> m39_53  [key=2, style=dotted];
m39_49 -> m39_51  [color=darkseagreen4, key=1, label=success, style=dashed];
m39_50 -> m39_51  [key=0, style=solid];
m39_50 -> m39_52  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.SecurityHolding", style=dashed];
m39_51 -> m39_52  [key=0, style=solid];
m39_52 -> m39_47  [color=blue, key=0, style=bold];
m39_144 -> m39_175  [key=0, style=solid];
m39_144 -> m39_197  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_144 -> m39_181  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_144 -> m39_139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.Split split", style=bold];
m39_175 -> m39_176  [key=0, style=solid];
m39_175 -> m39_124  [key=2, style=dotted];
m39_175 -> m39_191  [key=2, style=dotted];
m39_175 -> m39_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_181 -> m39_182  [key=0, style=solid];
m39_181 -> m39_186  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m39_181 -> m39_189  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m39_176 -> m39_177  [key=0, style=solid];
m39_176 -> m39_190  [key=0, style=solid];
m39_176 -> m39_178  [color=darkseagreen4, key=1, label=securityKV, style=dashed];
m39_177 -> m39_178  [key=0, style=solid];
m39_177 -> m39_182  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m39_177 -> m39_184  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m39_178 -> m39_179  [key=0, style=solid];
m39_178 -> m39_185  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_178 -> m39_188  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_182 -> m39_183  [key=0, style=solid];
m39_182 -> m39_192  [key=2, style=dotted];
m39_182 -> m39_185  [color=darkseagreen4, key=1, label=newSymbol, style=dashed];
m39_182 -> m39_187  [color=darkseagreen4, key=1, label=newSymbol, style=dashed];
m39_184 -> m39_185  [key=0, style=solid];
m39_184 -> m39_193  [key=2, style=dotted];
m39_179 -> m39_180  [key=0, style=solid];
m39_185 -> m39_186  [key=0, style=solid];
m39_185 -> m39_194  [key=2, style=dotted];
m39_185 -> m39_187  [color=darkseagreen4, key=1, label=optionHoldings, style=dashed];
m39_188 -> m39_189  [key=0, style=solid];
m39_180 -> m39_181  [key=0, style=solid];
m39_180 -> m39_176  [key=0, style=solid];
m39_186 -> m39_187  [key=0, style=solid];
m39_186 -> m39_195  [key=2, style=dotted];
m39_189 -> m39_176  [key=0, style=solid];
m39_189 -> m39_195  [key=2, style=dotted];
m39_183 -> m39_184  [key=0, style=solid];
m39_183 -> m39_188  [key=0, style=solid];
m39_187 -> m39_176  [key=0, style=solid];
m39_190 -> m39_144  [color=blue, key=0, style=bold];
m39_199 -> m39_200  [key=0, style=solid];
m39_199 -> m39_203  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
m39_199 -> m39_216  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_199 -> m39_217  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_199 -> m39_218  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_199 -> m39_204  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m39_199 -> m39_205  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_199 -> m39_207  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_199 -> m39_208  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_199 -> m39_209  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_200 -> m39_201  [key=0, style=solid];
m39_200 -> m39_206  [color=darkseagreen4, key=1, label=inverseFactor, style=dashed];
m39_200 -> m39_207  [color=darkseagreen4, key=1, label=inverseFactor, style=dashed];
m39_200 -> m39_208  [color=darkseagreen4, key=1, label=inverseFactor, style=dashed];
m39_203 -> m39_204  [color=red, key=0, style=solid];
m39_203 -> m39_218  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
m39_203 -> m39_210  [color=red, key=1, label=symbolIsFound, style=dashed];
m39_203 -> m39_203  [color=red, key=3, label="Local variable System.Func<QuantConnect.Symbol, bool> symbolIsFound", style=bold];
m39_204 -> m39_205  [key=0, style=solid];
m39_204 -> m39_206  [key=0, style=solid];
m39_205 -> m39_206  [key=0, style=solid];
m39_207 -> m39_210  [key=0, style=solid];
m39_207 -> m39_213  [key=2, style=dotted];
m39_208 -> m39_209  [key=0, style=solid];
m39_208 -> m39_213  [key=2, style=dotted];
m39_209 -> m39_210  [key=0, style=solid];
m39_201 -> m39_202  [key=0, style=solid];
m39_201 -> m39_203  [color=red, key=1, label=newStrike, style=dashed];
m39_201 -> m39_217  [color=darkseagreen4, key=1, label=newStrike, style=dashed];
m39_201 -> m39_201  [color=darkorchid, key=3, label="Local variable decimal newStrike", style=bold];
m39_206 -> m39_207  [key=0, style=solid];
m39_206 -> m39_208  [key=0, style=solid];
m39_206 -> m39_212  [key=2, style=dotted];
m39_202 -> m39_203  [color=red, key=0, style=solid];
m39_202 -> m39_216  [color=darkseagreen4, key=1, label=newRootSymbol, style=dashed];
m39_202 -> m39_183  [color=darkorchid, key=3, label="Local variable string newRootSymbol", style=bold];
m39_210 -> m39_211  [key=0, style=solid];
m39_210 -> m39_57  [key=2, style=dotted];
m39_210 -> m39_124  [key=2, style=dotted];
m39_210 -> m39_214  [key=2, style=dotted];
m39_210 -> m39_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_211 -> m39_199  [color=blue, key=0, style=bold];
m39_131 -> m39_132  [key=0, style=solid];
m39_131 -> m39_135  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Dividend", style=dashed];
m39_132 -> m39_133  [key=0, style=solid];
m39_132 -> m39_135  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_135 -> m39_136  [key=0, style=solid];
m39_133 -> m39_134  [key=0, style=solid];
m39_134 -> m39_135  [key=0, style=solid];
m39_134 -> m39_137  [key=0, style=solid];
m39_136 -> m39_137  [key=0, style=solid];
m39_136 -> m39_138  [key=2, style=dotted];
m39_137 -> m39_131  [color=blue, key=0, style=bold];
m39_15 -> m39_16  [key=0, style=solid];
m39_16 -> m39_17  [key=0, style=solid];
m39_16 -> m39_18  [key=2, style=dotted];
m39_17 -> m39_15  [color=blue, key=0, style=bold];
m39_38 -> m39_39  [key=0, style=solid];
m39_38 -> m39_42  [color=darkseagreen4, key=1, label=int, style=dashed];
m39_39 -> m39_40  [key=0, style=solid];
m39_39 -> m39_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[]", style=dashed];
m39_42 -> m39_43  [key=0, style=solid];
m39_42 -> m39_44  [key=0, style=solid];
m39_40 -> m39_41  [key=0, style=solid];
m39_40 -> m39_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m39_40 -> m39_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m39_40 -> m39_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m39_40 -> m39_40  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m39_43 -> m39_44  [key=0, style=solid];
m39_43 -> m39_46  [key=2, style=dotted];
m39_43 -> m39_43  [color=darkseagreen4, key=1, label=asset, style=dashed];
m39_41 -> m39_42  [key=0, style=solid];
m39_41 -> m39_45  [key=0, style=solid];
m39_41 -> m39_43  [color=darkseagreen4, key=1, label=asset, style=dashed];
m39_44 -> m39_41  [key=0, style=solid];
m39_44 -> m39_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m39_45 -> m39_38  [color=blue, key=0, style=bold];
m39_215 -> m39_216  [key=0, style=solid];
m39_215 -> m39_218  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_59 -> m39_60  [key=0, style=solid];
m39_60 -> m39_61  [key=0, style=solid];
m39_60 -> m39_46  [key=2, style=dotted];
m39_60 -> m39_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m39_61 -> m39_59  [color=blue, key=0, style=bold];
m39_65 -> m39_66  [key=0, style=solid];
m39_66 -> m39_67  [key=0, style=solid];
m39_66 -> m39_46  [key=2, style=dotted];
m39_66 -> m39_66  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m39_67 -> m39_65  [color=blue, key=0, style=bold];
m39_68 -> m39_69  [key=0, style=solid];
m39_69 -> m39_70  [key=0, style=solid];
m39_69 -> m39_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m39_70 -> m39_68  [color=blue, key=0, style=bold];
m39_71 -> m39_72  [key=0, style=solid];
m39_72 -> m39_73  [key=0, style=solid];
m39_72 -> m39_72  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m39_73 -> m39_71  [color=blue, key=0, style=bold];
m39_74 -> m39_75  [key=0, style=solid];
m39_75 -> m39_76  [key=0, style=solid];
m39_76 -> m39_74  [color=blue, key=0, style=bold];
m39_128 -> m39_129  [key=0, style=solid];
m39_129 -> m39_130  [key=0, style=solid];
m39_130 -> m39_128  [color=blue, key=0, style=bold];
m39_197 -> m39_198  [key=0, style=solid];
m39_197 -> m39_197  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m39_196 -> m39_197  [key=0, style=solid];
m39_198 -> m39_196  [color=blue, key=0, style=bold];
m39_216 -> m39_217  [key=0, style=solid];
m39_216 -> m39_218  [color=darkseagreen4, key=1, label=rootSymbol, style=dashed];
m39_217 -> m39_218  [key=0, style=solid];
m39_218 -> m39_219  [key=0, style=solid];
m39_220 -> m39_221  [key=0, style=solid];
m39_219 -> m39_215  [color=blue, key=0, style=bold];
m39_221 -> m39_222  [key=0, style=solid];
m39_221 -> m39_221  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m39_222 -> m39_220  [color=blue, key=0, style=bold];
m39_223 -> m39_224  [key=0, style=solid];
m39_223 -> m39_227  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m39_224 -> m39_225  [key=0, style=solid];
m39_224 -> m39_226  [color=darkseagreen4, key=1, label=clone, style=dashed];
m39_224 -> m39_227  [color=darkseagreen4, key=1, label=clone, style=dashed];
m39_224 -> m39_223  [color=darkorchid, key=3, label="Local variable System.DateTime clone", style=bold];
m39_227 -> m39_228  [key=0, style=solid];
m39_227 -> m39_231  [key=2, style=dotted];
m39_225 -> m39_226  [key=0, style=solid];
m39_225 -> m39_227  [key=0, style=solid];
m39_225 -> m39_229  [key=2, style=dotted];
m39_226 -> m39_225  [key=0, style=solid];
m39_226 -> m39_230  [key=2, style=dotted];
m39_226 -> m39_226  [color=darkseagreen4, key=1, label=clone, style=dashed];
m39_226 -> m39_227  [color=darkseagreen4, key=1, label=clone, style=dashed];
m39_228 -> m39_223  [color=blue, key=0, style=bold];
m39_80 -> m39_81  [key=0, style=solid];
m39_80 -> m39_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_80 -> m39_83  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m39_80 -> m39_84  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m39_80 -> m39_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m39_81 -> m39_82  [key=0, style=solid];
m39_82 -> m39_83  [key=0, style=solid];
m39_82 -> m39_85  [key=0, style=solid];
m39_82 -> m39_87  [key=2, style=dotted];
m39_82 -> m39_84  [color=darkseagreen4, key=1, label=item, style=dashed];
m39_83 -> m39_84  [key=0, style=solid];
m39_83 -> m39_14  [key=2, style=dotted];
m39_84 -> m39_86  [key=0, style=solid];
m39_85 -> m39_86  [key=0, style=solid];
m39_85 -> m39_88  [key=2, style=dotted];
m39_86 -> m39_80  [color=blue, key=0, style=bold];
m39_102 -> m39_103  [key=0, style=solid];
m39_102 -> m39_114  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest> ScanForMarginCall", style=bold];
m39_103 -> m39_104  [key=0, style=solid];
m39_103 -> m39_123  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m39_104 -> m39_105  [key=0, style=solid];
m39_104 -> m39_107  [color=darkseagreen4, key=1, label=totalMarginUsed, style=dashed];
m39_104 -> m39_118  [color=darkseagreen4, key=1, label=totalMarginUsed, style=dashed];
m39_105 -> m39_106  [key=0, style=solid];
m39_105 -> m39_107  [key=0, style=solid];
m39_107 -> m39_108  [key=0, style=solid];
m39_118 -> m39_119  [key=0, style=solid];
m39_118 -> m39_126  [key=2, style=dotted];
m39_118 -> m39_120  [color=darkseagreen4, key=1, label=marginCallOrder, style=dashed];
m39_106 -> m39_123  [key=0, style=solid];
m39_106 -> m39_13  [key=2, style=dotted];
m39_108 -> m39_109  [key=0, style=solid];
m39_108 -> m39_110  [key=0, style=solid];
m39_109 -> m39_123  [key=0, style=solid];
m39_109 -> m39_13  [key=2, style=dotted];
m39_110 -> m39_111  [key=0, style=solid];
m39_110 -> m39_112  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m39_110 -> m39_115  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m39_111 -> m39_112  [key=0, style=solid];
m39_111 -> m39_118  [color=darkseagreen4, key=1, label=totalPortfolioValue, style=dashed];
m39_112 -> m39_113  [key=0, style=solid];
m39_112 -> m39_114  [key=0, style=solid];
m39_115 -> m39_116  [key=0, style=solid];
m39_115 -> m39_122  [key=0, style=solid];
m39_113 -> m39_114  [key=0, style=solid];
m39_113 -> m39_123  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m39_114 -> m39_115  [key=0, style=solid];
m39_114 -> m39_13  [key=2, style=dotted];
m39_114 -> m39_120  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m39_114 -> m39_121  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m39_114 -> m39_122  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m39_120 -> m39_116  [key=0, style=solid];
m39_120 -> m39_127  [key=2, style=dotted];
m39_121 -> m39_122  [key=0, style=solid];
m39_121 -> m39_123  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m39_122 -> m39_123  [key=0, style=solid];
m39_116 -> m39_117  [key=0, style=solid];
m39_116 -> m39_121  [key=0, style=solid];
m39_116 -> m39_124  [key=2, style=dotted];
m39_116 -> m39_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_116 -> m39_118  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_117 -> m39_118  [key=0, style=solid];
m39_117 -> m39_125  [key=2, style=dotted];
m39_119 -> m39_120  [key=0, style=solid];
m39_119 -> m39_116  [key=0, style=solid];
m39_123 -> m39_102  [color=blue, key=0, style=bold];
m39_238 -> m39_239  [key=0, style=solid];
m39_238 -> m39_240  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UnsettledCashAmount", style=dashed];
m39_239 -> m39_240  [key=0, style=solid];
m39_240 -> m39_241  [key=0, style=solid];
m39_240 -> m39_127  [key=2, style=dotted];
m39_241 -> m39_238  [color=blue, key=0, style=bold];
m39_143 -> m39_145  [key=0, style=solid];
m39_143 -> m39_151  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_143 -> m39_152  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_143 -> m39_154  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_143 -> m39_160  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_143 -> m39_163  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_143 -> m39_164  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_143 -> m39_165  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_143 -> m39_168  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_143 -> m39_169  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_143 -> m39_139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.Split split", style=bold];
m39_145 -> m39_146  [key=0, style=solid];
m39_145 -> m39_148  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_145 -> m39_151  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_145 -> m39_152  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_145 -> m39_156  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_145 -> m39_157  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_145 -> m39_170  [color=darkseagreen4, key=1, label=security, style=dashed];
m39_151 -> m39_152  [key=0, style=solid];
m39_151 -> m39_153  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m39_151 -> m39_156  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m39_152 -> m39_153  [key=0, style=solid];
m39_152 -> m39_156  [color=darkseagreen4, key=1, label=avgPrice, style=dashed];
m39_154 -> m39_155  [key=0, style=solid];
m39_160 -> m39_161  [key=0, style=solid];
m39_163 -> m39_164  [key=0, style=solid];
m39_164 -> m39_165  [key=0, style=solid];
m39_165 -> m39_166  [key=0, style=solid];
m39_168 -> m39_169  [key=0, style=solid];
m39_169 -> m39_170  [key=0, style=solid];
m39_146 -> m39_147  [key=0, style=solid];
m39_146 -> m39_148  [key=0, style=solid];
m39_148 -> m39_149  [key=0, style=solid];
m39_156 -> m39_157  [key=0, style=solid];
m39_156 -> m39_172  [key=2, style=dotted];
m39_157 -> m39_158  [key=0, style=solid];
m39_157 -> m39_173  [key=2, style=dotted];
m39_157 -> m39_160  [color=darkseagreen4, key=1, label=next, style=dashed];
m39_157 -> m39_161  [color=darkseagreen4, key=1, label=next, style=dashed];
m39_157 -> m39_166  [color=darkseagreen4, key=1, label=next, style=dashed];
m39_157 -> m39_170  [color=darkseagreen4, key=1, label=next, style=dashed];
m39_170 -> m39_171  [key=0, style=solid];
m39_170 -> m39_174  [key=2, style=dotted];
m39_147 -> m39_171  [key=0, style=solid];
m39_149 -> m39_150  [key=0, style=solid];
m39_149 -> m39_151  [key=0, style=solid];
m39_150 -> m39_171  [key=0, style=solid];
m39_153 -> m39_154  [key=0, style=solid];
m39_155 -> m39_156  [key=0, style=solid];
m39_155 -> m39_138  [key=2, style=dotted];
m39_158 -> m39_159  [key=0, style=solid];
m39_158 -> m39_160  [key=0, style=solid];
m39_161 -> m39_162  [key=0, style=solid];
m39_161 -> m39_163  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m39_161 -> m39_164  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m39_161 -> m39_165  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m39_166 -> m39_167  [key=0, style=solid];
m39_166 -> m39_168  [color=darkseagreen4, key=1, label=tick, style=dashed];
m39_166 -> m39_169  [color=darkseagreen4, key=1, label=tick, style=dashed];
m39_159 -> m39_171  [key=0, style=solid];
m39_162 -> m39_163  [key=0, style=solid];
m39_162 -> m39_166  [key=0, style=solid];
m39_167 -> m39_168  [key=0, style=solid];
m39_167 -> m39_170  [key=0, style=solid];
m39_171 -> m39_143  [color=blue, key=0, style=bold];
m39_89 -> m39_90  [key=0, style=solid];
m39_89 -> m39_91  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m39_89 -> m39_94  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderDirection direction", style=bold];
m39_90 -> m39_91  [key=0, style=solid];
m39_91 -> m39_92  [key=0, style=solid];
m39_91 -> m39_93  [key=2, style=dotted];
m39_92 -> m39_89  [color=blue, key=0, style=bold];
m39_139 -> m39_140  [key=0, style=solid];
m39_139 -> m39_141  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_140 -> m39_141  [key=0, style=solid];
m39_140 -> m39_143  [key=2, style=dotted];
m39_141 -> m39_142  [key=0, style=solid];
m39_141 -> m39_144  [key=2, style=dotted];
m39_142 -> m39_139  [color=blue, key=0, style=bold];
m39_35 -> m39_36  [key=0, style=solid];
m39_36 -> m39_37  [key=0, style=solid];
m39_36 -> m39_34  [key=2, style=dotted];
m39_36 -> m39_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>", style=dashed];
m39_37 -> m39_35  [color=blue, key=0, style=bold];
m39_54 -> m39_55  [key=0, style=solid];
m39_55 -> m39_56  [key=0, style=solid];
m39_55 -> m39_57  [key=2, style=dotted];
m39_55 -> m39_58  [key=2, style=dotted];
m39_55 -> m39_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_56 -> m39_54  [color=blue, key=0, style=bold];
m39_31 -> m39_32  [key=0, style=solid];
m39_32 -> m39_33  [key=0, style=solid];
m39_32 -> m39_34  [key=2, style=dotted];
m39_33 -> m39_31  [color=blue, key=0, style=bold];
m39_94 -> m39_95  [key=0, style=solid];
m39_94 -> m39_89  [color=darkorchid, key=3, label="method methodReturn decimal GetBuyingPower", style=bold];
m39_95 -> m39_96  [key=0, style=solid];
m39_95 -> m39_89  [key=2, style=dotted];
m39_96 -> m39_94  [color=blue, key=0, style=bold];
m39_97 -> m39_98  [key=0, style=solid];
m39_97 -> m39_99  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m39_98 -> m39_99  [key=0, style=solid];
m39_99 -> m39_100  [key=0, style=solid];
m39_99 -> m39_101  [key=2, style=dotted];
m39_100 -> m39_97  [color=blue, key=0, style=bold];
m39_0 -> m39_1  [key=0, style=solid];
m39_0 -> m39_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m39_1 -> m39_2  [key=0, style=solid];
m39_2 -> m39_3  [color=red, key=0, style=solid];
m39_3 -> m39_4  [color=red, key=0, style=solid];
m39_3 -> m39_11  [color=red, key=2, style=dotted];
m39_4 -> m39_5  [key=0, style=solid];
m39_4 -> m39_12  [key=2, style=dotted];
m39_5 -> m39_6  [key=0, style=solid];
m39_5 -> m39_12  [key=2, style=dotted];
m39_6 -> m39_7  [key=0, style=solid];
m39_6 -> m39_13  [key=2, style=dotted];
m39_7 -> m39_8  [key=0, style=solid];
m39_8 -> m39_9  [key=0, style=solid];
m39_9 -> m39_10  [key=0, style=solid];
m39_9 -> m39_14  [key=2, style=dotted];
m39_10 -> m39_0  [color=blue, key=0, style=bold];
m39_232 -> m39_233  [key=0, style=solid];
m39_232 -> m39_234  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_232 -> m39_183  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security QuantConnect.Securities.ISecurityProvider.GetSecurity", style=bold];
m39_233 -> m39_234  [key=0, style=solid];
m39_234 -> m39_235  [key=0, style=solid];
m39_234 -> m39_236  [key=0, style=solid];
m39_234 -> m39_53  [key=2, style=dotted];
m39_235 -> m39_237  [key=0, style=solid];
m39_236 -> m39_237  [key=0, style=solid];
m39_237 -> m39_232  [color=blue, key=0, style=bold];
m39_242 -> m39_243  [key=0, style=solid];
m39_242 -> m39_245  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m39_243 -> m39_244  [key=0, style=solid];
m39_245 -> m39_246  [key=0, style=solid];
m39_245 -> m39_244  [key=0, style=solid];
m39_244 -> m39_245  [key=0, style=solid];
m39_244 -> m39_249  [key=0, style=solid];
m39_244 -> m39_250  [key=2, style=dotted];
m39_244 -> m39_246  [color=darkseagreen4, key=1, label=item, style=dashed];
m39_244 -> m39_247  [color=darkseagreen4, key=1, label=item, style=dashed];
m39_244 -> m39_248  [color=darkseagreen4, key=1, label=item, style=dashed];
m39_246 -> m39_247  [key=0, style=solid];
m39_246 -> m39_251  [key=2, style=dotted];
m39_247 -> m39_248  [key=0, style=solid];
m39_247 -> m39_138  [key=2, style=dotted];
m39_248 -> m39_244  [key=0, style=solid];
m39_248 -> m39_138  [key=2, style=dotted];
m39_249 -> m39_242  [color=blue, key=0, style=bold];
m39_22 -> m39_23  [key=0, style=solid];
m39_23 -> m39_24  [key=0, style=solid];
m39_23 -> m39_18  [key=2, style=dotted];
m39_24 -> m39_22  [color=blue, key=0, style=bold];
m39_25 -> m39_26  [key=0, style=solid];
m39_26 -> m39_27  [key=0, style=solid];
m39_26 -> m39_18  [key=2, style=dotted];
m39_27 -> m39_25  [color=blue, key=0, style=bold];
m39_77 -> m39_78  [key=0, style=solid];
m39_78 -> m39_79  [key=0, style=solid];
m39_78 -> m39_14  [key=2, style=dotted];
m39_79 -> m39_77  [color=blue, key=0, style=bold];
m39_19 -> m39_20  [key=0, style=solid];
m39_20 -> m39_21  [key=0, style=solid];
m39_20 -> m39_18  [key=2, style=dotted];
m39_21 -> m39_19  [color=blue, key=0, style=bold];
m39_252 -> m39_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_3  [color=red, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_39  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_41  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_55  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_78  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_82  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_85  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_90  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_91  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_95  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_98  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_99  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_104  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_107  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_110  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_116  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_118  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_132  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_136  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_140  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_141  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_145  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_155  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_175  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_182  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_184  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_185  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_187  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_210  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_225  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_227  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_234  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_239  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_240  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_243  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_244  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_246  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_247  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_252 -> m39_248  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m39_253 -> m39_197  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m39_254 -> m39_216  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_254 -> m39_217  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_254 -> m39_218  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m39_255 -> m39_216  [color=darkseagreen4, key=1, label=newRootSymbol, style=dashed];
m39_256 -> m39_217  [color=darkseagreen4, key=1, label=newStrike, style=dashed];
m40_9 -> m40_10  [key=0, style=solid];
m40_9 -> m40_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m40_9 -> m40_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m40_9 -> m40_14  [color=darkorchid, key=3, label="method methodReturn decimal GetValueImpl", style=bold];
m40_10 -> m40_11  [key=0, style=solid];
m40_10 -> m40_12  [key=0, style=solid];
m40_11 -> m40_15  [key=0, style=solid];
m40_11 -> m40_16  [key=2, style=dotted];
m40_13 -> m40_15  [key=0, style=solid];
m40_13 -> m40_17  [key=2, style=dotted];
m40_12 -> m40_13  [key=0, style=solid];
m40_12 -> m40_14  [key=0, style=solid];
m40_14 -> m40_15  [key=0, style=solid];
m40_15 -> m40_9  [color=blue, key=0, style=bold];
m40_32 -> m40_33  [key=0, style=solid];
m40_33 -> m40_34  [key=0, style=solid];
m40_33 -> m40_0  [key=2, style=dotted];
m40_33 -> m40_35  [color=darkseagreen4, key=1, label=order, style=dashed];
m40_34 -> m40_35  [key=0, style=solid];
m40_34 -> m40_37  [key=2, style=dotted];
m40_35 -> m40_36  [key=0, style=solid];
m40_36 -> m40_32  [color=blue, key=0, style=bold];
m40_0 -> m40_1  [key=0, style=solid];
m40_1 -> m40_0  [color=blue, key=0, style=bold];
m40_2 -> m40_3  [color=green, key=0, style=solid];
m40_2 -> m40_4  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_2 -> m40_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_2 -> m40_6  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_3 -> m40_4  [color=green, key=0, style=solid];
m40_4 -> m40_5  [key=0, style=solid];
m40_5 -> m40_6  [key=0, style=solid];
m40_5 -> m40_7  [key=0, style=solid];
m40_6 -> m40_7  [key=0, style=solid];
m40_6 -> m40_8  [key=2, style=dotted];
m40_7 -> m40_2  [color=blue, key=0, style=bold];
m40_26 -> m40_27  [key=0, style=solid];
m40_27 -> m40_28  [key=0, style=solid];
m40_27 -> m40_29  [key=2, style=dotted];
m40_27 -> m40_30  [key=2, style=dotted];
m40_27 -> m40_31  [key=2, style=dotted];
m40_28 -> m40_26  [color=blue, key=0, style=bold];
m40_18 -> m40_19  [key=0, style=solid];
m40_18 -> m40_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m40_18 -> m40_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m40_18 -> m40_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m40_18 -> m40_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m40_19 -> m40_20  [key=0, style=solid];
m40_19 -> m40_25  [key=2, style=dotted];
m40_20 -> m40_21  [key=0, style=solid];
m40_20 -> m40_22  [key=0, style=solid];
m40_21 -> m40_22  [key=0, style=solid];
m40_22 -> m40_23  [key=0, style=solid];
m40_22 -> m40_24  [key=0, style=solid];
m40_23 -> m40_24  [key=0, style=solid];
m40_24 -> m40_18  [color=blue, key=0, style=bold];
m40_38 -> m40_3  [color=green, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m40_38 -> m40_34  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m41_23 -> m41_24  [key=0, style=solid];
m41_24 -> m41_25  [key=0, style=solid];
m41_24 -> m41_26  [key=2, style=dotted];
m41_24 -> m41_27  [key=2, style=dotted];
m41_24 -> m41_28  [key=2, style=dotted];
m41_25 -> m41_23  [color=blue, key=0, style=bold];
m41_8 -> m41_9  [key=0, style=solid];
m41_8 -> m41_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m41_8 -> m41_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m41_8 -> m41_13  [color=darkorchid, key=3, label="method methodReturn decimal GetValueImpl", style=bold];
m41_9 -> m41_10  [key=0, style=solid];
m41_9 -> m41_11  [key=0, style=solid];
m41_10 -> m41_14  [key=0, style=solid];
m41_10 -> m41_15  [key=2, style=dotted];
m41_10 -> m41_11  [key=0, style=solid];
m41_10 -> m41_7  [key=2, style=dotted];
m41_10 -> m41_8  [key=2, style=dotted];
m41_11 -> m41_12  [key=0, style=solid];
m41_11 -> m41_13  [key=0, style=solid];
m41_11 -> m41_9  [color=blue, key=0, style=bold];
m41_12 -> m41_14  [key=0, style=solid];
m41_12 -> m41_16  [key=2, style=dotted];
m41_12 -> m41_13  [key=0, style=solid];
m41_12 -> m41_17  [color=darkorchid, key=3, label="method methodReturn bool ModifyOrderToFill", style=bold];
m41_13 -> m41_14  [key=0, style=solid];
m41_13 -> m41_15  [color=darkseagreen4, key=1, label=limit, style=dashed];
m41_13 -> m41_16  [color=darkseagreen4, key=1, label=limit, style=dashed];
m41_14 -> m41_8  [color=blue, key=0, style=bold];
m41_14 -> m41_15  [key=0, style=solid];
m41_14 -> m41_16  [key=0, style=solid];
m41_0 -> m41_1  [key=0, style=solid];
m41_0 -> m41_2  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m41_1 -> m41_2  [key=0, style=solid];
m41_1 -> m41_0  [color=blue, key=0, style=bold];
m41_2 -> m41_3  [color=green, key=0, style=solid];
m41_2 -> m41_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_2 -> m41_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m41_3 -> m41_0  [color=blue, key=0, style=bold];
m41_3 -> m41_4  [color=green, key=0, style=solid];
m41_29 -> m41_30  [key=0, style=solid];
m41_30 -> m41_31  [key=0, style=solid];
m41_30 -> m41_0  [key=2, style=dotted];
m41_30 -> m41_32  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_31 -> m41_32  [key=0, style=solid];
m41_31 -> m41_34  [key=2, style=dotted];
m41_32 -> m41_33  [key=0, style=solid];
m41_33 -> m41_29  [color=blue, key=0, style=bold];
m41_4 -> m41_5  [key=0, style=solid];
m41_4 -> m41_6  [key=0, style=solid];
m41_5 -> m41_6  [key=0, style=solid];
m41_5 -> m41_7  [key=2, style=dotted];
m41_5 -> m41_8  [key=2, style=dotted];
m41_6 -> m41_4  [color=blue, key=0, style=bold];
m41_6 -> m41_2  [color=blue, key=0, style=bold];
m41_15 -> m41_17  [key=0, style=solid];
m41_16 -> m41_17  [key=0, style=solid];
m41_17 -> m41_18  [key=0, style=solid];
m41_17 -> m41_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m41_17 -> m41_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m41_18 -> m41_19  [key=0, style=solid];
m41_18 -> m41_22  [key=2, style=dotted];
m41_18 -> m41_12  [color=blue, key=0, style=bold];
m41_20 -> m41_21  [key=0, style=solid];
m41_19 -> m41_20  [key=0, style=solid];
m41_19 -> m41_21  [key=0, style=solid];
m41_19 -> m41_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters", style=dashed];
m41_19 -> m41_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters", style=dashed];
m41_19 -> m41_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters", style=dashed];
m41_19 -> m41_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters", style=dashed];
m41_21 -> m41_17  [color=blue, key=0, style=bold];
m41_35 -> m41_3  [color=green, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m41_35 -> m41_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m41_35 -> m41_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m41_35 -> m41_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m41_35 -> m41_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m41_35 -> m41_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m41_35 -> m41_18  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m41_35 -> m41_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m41_35 -> m41_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m41_35 -> m41_30  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m41_35 -> m41_31  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m42_11 -> m42_12  [key=0, style=solid];
m42_12 -> m42_13  [key=0, style=solid];
m42_12 -> m42_15  [key=2, style=dotted];
m42_13 -> m42_14  [key=0, style=solid];
m42_13 -> m42_16  [key=2, style=dotted];
m42_14 -> m42_11  [color=blue, key=0, style=bold];
m42_0 -> m42_1  [key=0, style=solid];
m42_0 -> m42_2  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m42_0 -> m42_3  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m42_0 -> m42_4  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m42_0 -> m42_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m42_0 -> m42_6  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m42_1 -> m42_2  [key=0, style=solid];
m42_2 -> m42_3  [key=0, style=solid];
m42_3 -> m42_4  [key=0, style=solid];
m42_4 -> m42_5  [key=0, style=solid];
m42_5 -> m42_6  [key=0, style=solid];
m42_6 -> m42_7  [key=0, style=solid];
m42_7 -> m42_0  [color=blue, key=0, style=bold];
m42_8 -> m42_9  [key=0, style=solid];
m42_9 -> m42_10  [key=0, style=solid];
m42_10 -> m42_8  [color=blue, key=0, style=bold];
m42_17 -> m42_1  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m42_17 -> m42_2  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m42_17 -> m42_3  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m42_17 -> m42_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m42_17 -> m42_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m42_17 -> m42_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m42_17 -> m42_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m42_17 -> m42_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m42_17 -> m42_13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_8 -> m43_9  [key=0, style=solid];
m43_8 -> m43_10  [color=green, key=1, label="QuantConnect.Resolution", style=dashed];
m43_8 -> m43_12  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_8 -> m43_13  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_8 -> m43_16  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.SubscriptionDataConfig Add", style=bold];
m43_9 -> m43_10  [color=green, key=0, style=solid];
m43_9 -> m43_12  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m43_9 -> m43_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m43_10 -> m43_11  [color=green, key=0, style=solid];
m43_10 -> m43_12  [color=green, key=0, style=solid];
m43_12 -> m43_13  [key=0, style=solid];
m43_12 -> m43_15  [key=2, style=dotted];
m43_13 -> m43_14  [key=0, style=solid];
m43_13 -> m43_16  [key=2, style=dotted];
m43_11 -> m43_12  [key=0, style=solid];
m43_11 -> m43_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m43_14 -> m43_8  [color=blue, key=0, style=bold];
m43_87 -> m43_88  [key=0, style=solid];
m43_44 -> m43_45  [key=0, style=solid];
m43_48 -> m43_49  [key=0, style=solid];
m43_45 -> m43_46  [key=0, style=solid];
m43_45 -> m43_47  [key=2, style=dotted];
m43_46 -> m43_44  [color=blue, key=0, style=bold];
m43_49 -> m43_50  [key=0, style=solid];
m43_50 -> m43_48  [color=blue, key=0, style=bold];
m43_69 -> m43_70  [key=0, style=solid];
m43_68 -> m43_69  [key=0, style=solid];
m43_71 -> m43_72  [key=0, style=solid];
m43_70 -> m43_68  [color=blue, key=0, style=bold];
m43_72 -> m43_73  [key=0, style=solid];
m43_73 -> m43_71  [color=blue, key=0, style=bold];
m43_88 -> m43_89  [key=0, style=solid];
m43_88 -> m43_86  [key=2, style=dotted];
m43_88 -> m43_90  [key=2, style=dotted];
m43_89 -> m43_87  [color=blue, key=0, style=bold];
m43_16 -> m43_17  [key=0, style=solid];
m43_16 -> m43_19  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m43_16 -> m43_21  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m43_16 -> m43_29  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m43_16 -> m43_30  [color=darkseagreen4, key=1, label=bool, style=dashed];
m43_16 -> m43_9  [color=darkorchid, key=3, label="Parameter variable System.Type dataType", style=bold];
m43_16 -> m43_12  [color=darkorchid, key=3, label="Parameter variable QuantConnect.TickType tickType", style=bold];
m43_16 -> m43_8  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m43_17 -> m43_18  [key=0, style=solid];
m43_17 -> m43_19  [key=0, style=solid];
m43_19 -> m43_20  [key=0, style=solid];
m43_19 -> m43_21  [key=0, style=solid];
m43_21 -> m43_22  [key=0, style=solid];
m43_21 -> m43_34  [key=2, style=dotted];
m43_21 -> m43_23  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m43_21 -> m43_24  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m43_21 -> m43_25  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m43_21 -> m43_31  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m43_29 -> m43_30  [key=0, style=solid];
m43_29 -> m43_43  [key=2, style=dotted];
m43_30 -> m43_31  [key=0, style=solid];
m43_18 -> m43_32  [key=0, style=solid];
m43_18 -> m43_33  [key=2, style=dotted];
m43_20 -> m43_32  [key=0, style=solid];
m43_20 -> m43_33  [key=2, style=dotted];
m43_22 -> m43_23  [key=0, style=solid];
m43_22 -> m43_25  [key=0, style=solid];
m43_22 -> m43_35  [key=2, style=dotted];
m43_23 -> m43_24  [key=0, style=solid];
m43_23 -> m43_36  [key=2, style=dotted];
m43_24 -> m43_32  [key=0, style=solid];
m43_25 -> m43_26  [key=0, style=solid];
m43_25 -> m43_37  [key=2, style=dotted];
m43_31 -> m43_32  [key=0, style=solid];
m43_26 -> m43_27  [key=0, style=solid];
m43_26 -> m43_38  [key=2, style=dotted];
m43_26 -> m43_39  [key=2, style=dotted];
m43_26 -> m43_40  [key=2, style=dotted];
m43_26 -> m43_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_26 -> m43_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_27 -> m43_28  [key=0, style=solid];
m43_27 -> m43_29  [key=0, style=solid];
m43_28 -> m43_32  [key=0, style=solid];
m43_28 -> m43_41  [key=2, style=dotted];
m43_28 -> m43_42  [key=2, style=dotted];
m43_32 -> m43_16  [color=blue, key=0, style=bold];
m43_78 -> m43_79  [key=0, style=solid];
m43_79 -> m43_80  [key=0, style=solid];
m43_80 -> m43_78  [color=blue, key=0, style=bold];
m43_7 -> m43_74  [color=green, key=0, style=solid];
m43_74 -> m43_75  [color=green, key=0, style=solid];
m43_74 -> m43_76  [color=green, key=2, style=dotted];
m43_74 -> m43_77  [color=green, key=2, style=dotted];
m43_74 -> m43_74  [color=green, key=3, label="Local variable string optionsOpenInterestPath", style=bold];
m43_75 -> m43_7  [color=blue, key=0, style=bold];
m43_83 -> m43_85  [key=0, style=solid];
m43_83 -> m43_77  [key=2, style=dotted];
m43_83 -> m43_86  [key=2, style=dotted];
m43_81 -> m43_82  [key=0, style=solid];
m43_81 -> m43_84  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m43_81 -> m43_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m43_82 -> m43_83  [key=0, style=solid];
m43_82 -> m43_84  [key=0, style=solid];
m43_82 -> m43_82  [color=green, key=3, label="Local variable string mixedPathSeperators", style=bold];
m43_84 -> m43_85  [key=0, style=solid];
m43_84 -> m43_65  [key=2, style=dotted];
m43_84 -> m43_61  [key=2, style=dotted];
m43_84 -> m43_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_85 -> m43_81  [color=blue, key=0, style=bold];
m43_0 -> m43_1  [key=0, style=solid];
m43_0 -> m43_2  [color=darkseagreen4, key=1, label="QuantConnect.TimeKeeper", style=dashed];
m43_1 -> m43_2  [key=0, style=solid];
m43_2 -> m43_3  [key=0, style=solid];
m43_3 -> m43_4  [key=0, style=solid];
m43_3 -> m43_6  [key=2, style=dotted];
m43_4 -> m43_5  [key=0, style=solid];
m43_4 -> m43_7  [key=2, style=dotted];
m43_5 -> m43_0  [color=blue, key=0, style=bold];
m43_51 -> m43_52  [key=0, style=solid];
m43_51 -> m43_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_51 -> m43_54  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_51 -> m43_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m43_51 -> m43_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m43_51 -> m43_59  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m43_52 -> m43_53  [key=0, style=solid];
m43_52 -> m43_38  [key=2, style=dotted];
m43_52 -> m43_61  [key=2, style=dotted];
m43_52 -> m43_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_52 -> m43_55  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m43_52 -> m43_59  [color=green, key=1, label=subscriptions, style=dashed];
m43_54 -> m43_60  [key=0, style=solid];
m43_54 -> m43_62  [key=2, style=dotted];
m43_56 -> m43_57  [key=0, style=solid];
m43_56 -> m43_55  [key=0, style=solid];
m43_56 -> m43_63  [key=2, style=dotted];
m43_57 -> m43_58  [key=0, style=solid];
m43_57 -> m43_64  [key=2, style=dotted];
m43_59 -> m43_60  [color=green, key=0, style=solid];
m43_59 -> m43_62  [color=green, key=2, style=dotted];
m43_59 -> m43_65  [color=green, key=2, style=dotted];
m43_59 -> m43_66  [color=green, key=2, style=dotted];
m43_59 -> m43_67  [color=green, key=2, style=dotted];
m43_59 -> m43_71  [color=green, key=1, label="lambda expression", style=dashed];
m43_59 -> m43_59  [color=green, key=3, label="Local variable string invalidPath", style=bold];
m43_53 -> m43_54  [key=0, style=solid];
m43_53 -> m43_55  [key=0, style=solid];
m43_55 -> m43_56  [key=0, style=solid];
m43_55 -> m43_59  [color=green, key=0, style=solid];
m43_55 -> m43_57  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m43_58 -> m43_60  [key=0, style=solid];
m43_60 -> m43_51  [color=blue, key=0, style=bold];
m43_91 -> m43_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_52  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_91 -> m43_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m43_92 -> m43_69  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_93 -> m43_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m44_24 -> m44_25  [key=0, style=solid];
m44_25 -> m44_26  [key=0, style=solid];
m44_25 -> m44_6  [key=2, style=dotted];
m44_25 -> m44_27  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_25 -> m44_28  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_25 -> m44_29  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_25 -> m44_30  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_25 -> m44_31  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_25 -> m44_32  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_26 -> m44_27  [key=0, style=solid];
m44_26 -> m44_7  [key=2, style=dotted];
m44_27 -> m44_28  [key=0, style=solid];
m44_27 -> m44_7  [key=2, style=dotted];
m44_28 -> m44_29  [key=0, style=solid];
m44_28 -> m44_7  [key=2, style=dotted];
m44_29 -> m44_30  [key=0, style=solid];
m44_29 -> m44_7  [key=2, style=dotted];
m44_30 -> m44_31  [key=0, style=solid];
m44_30 -> m44_7  [key=2, style=dotted];
m44_31 -> m44_32  [key=0, style=solid];
m44_31 -> m44_7  [key=2, style=dotted];
m44_32 -> m44_33  [key=0, style=solid];
m44_32 -> m44_7  [key=2, style=dotted];
m44_33 -> m44_24  [color=blue, key=0, style=bold];
m44_14 -> m44_15  [key=0, style=solid];
m44_15 -> m44_16  [key=0, style=solid];
m44_15 -> m44_6  [key=2, style=dotted];
m44_15 -> m44_17  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_15 -> m44_18  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_15 -> m44_19  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_15 -> m44_20  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_15 -> m44_21  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_15 -> m44_22  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_16 -> m44_17  [key=0, style=solid];
m44_16 -> m44_7  [key=2, style=dotted];
m44_17 -> m44_18  [key=0, style=solid];
m44_17 -> m44_7  [key=2, style=dotted];
m44_18 -> m44_19  [key=0, style=solid];
m44_18 -> m44_7  [key=2, style=dotted];
m44_19 -> m44_20  [key=0, style=solid];
m44_19 -> m44_7  [key=2, style=dotted];
m44_20 -> m44_21  [key=0, style=solid];
m44_20 -> m44_7  [key=2, style=dotted];
m44_21 -> m44_22  [key=0, style=solid];
m44_21 -> m44_7  [key=2, style=dotted];
m44_22 -> m44_23  [key=0, style=solid];
m44_22 -> m44_7  [key=2, style=dotted];
m44_23 -> m44_14  [color=blue, key=0, style=bold];
m44_8 -> m44_9  [key=0, style=solid];
m44_8 -> m44_11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m44_8 -> m44_12  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m44_9 -> m44_10  [key=0, style=solid];
m44_9 -> m44_6  [key=2, style=dotted];
m44_9 -> m44_11  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_9 -> m44_12  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_11 -> m44_12  [key=0, style=solid];
m44_11 -> m44_7  [key=2, style=dotted];
m44_12 -> m44_13  [key=0, style=solid];
m44_12 -> m44_7  [key=2, style=dotted];
m44_10 -> m44_11  [key=0, style=solid];
m44_10 -> m44_7  [key=2, style=dotted];
m44_13 -> m44_8  [color=blue, key=0, style=bold];
m44_6 -> m44_45  [key=0, style=solid];
m44_6 -> m44_47  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m44_6 -> m44_0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m44_6 -> m44_8  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m44_6 -> m44_14  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m44_6 -> m44_24  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m44_6 -> m44_35  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m44_6 -> m44_34  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m44_6 -> m44_9  [color=darkorchid, key=3, label="Parameter variable bool isCanonical", style=bold];
m44_45 -> m44_46  [key=0, style=solid];
m44_45 -> m44_49  [key=2, style=dotted];
m44_47 -> m44_48  [key=0, style=solid];
m44_47 -> m44_52  [key=2, style=dotted];
m44_46 -> m44_47  [key=0, style=solid];
m44_46 -> m44_50  [key=2, style=dotted];
m44_46 -> m44_51  [key=2, style=dotted];
m44_48 -> m44_6  [color=blue, key=0, style=bold];
m44_34 -> m44_35  [key=0, style=solid];
m44_34 -> m44_37  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m44_35 -> m44_36  [key=0, style=solid];
m44_35 -> m44_6  [key=2, style=dotted];
m44_35 -> m44_38  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_35 -> m44_39  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_35 -> m44_40  [color=green, key=1, label=types, style=dashed];
m44_35 -> m44_41  [color=green, key=1, label=types, style=dashed];
m44_35 -> m44_42  [color=green, key=1, label=types, style=dashed];
m44_35 -> m44_43  [color=green, key=1, label=types, style=dashed];
m44_37 -> m44_38  [key=0, style=solid];
m44_37 -> m44_40  [color=green, key=0, style=solid];
m44_36 -> m44_37  [key=0, style=solid];
m44_36 -> m44_7  [key=2, style=dotted];
m44_38 -> m44_39  [key=0, style=solid];
m44_38 -> m44_7  [key=2, style=dotted];
m44_39 -> m44_42  [color=green, key=0, style=solid];
m44_39 -> m44_7  [key=2, style=dotted];
m44_40 -> m44_41  [color=green, key=0, style=solid];
m44_40 -> m44_7  [color=green, key=2, style=dotted];
m44_41 -> m44_42  [color=green, key=0, style=solid];
m44_41 -> m44_7  [color=green, key=2, style=dotted];
m44_42 -> m44_43  [color=green, key=0, style=solid];
m44_42 -> m44_7  [color=green, key=2, style=dotted];
m44_43 -> m44_44  [color=green, key=0, style=solid];
m44_43 -> m44_7  [color=green, key=2, style=dotted];
m44_44 -> m44_34  [color=blue, key=0, style=bold];
m44_0 -> m44_1  [key=0, style=solid];
m44_0 -> m44_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m44_0 -> m44_4  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m44_1 -> m44_2  [key=0, style=solid];
m44_1 -> m44_6  [key=2, style=dotted];
m44_1 -> m44_3  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_1 -> m44_4  [color=darkseagreen4, key=1, label=types, style=dashed];
m44_3 -> m44_4  [key=0, style=solid];
m44_3 -> m44_7  [key=2, style=dotted];
m44_4 -> m44_5  [key=0, style=solid];
m44_4 -> m44_7  [key=2, style=dotted];
m44_2 -> m44_3  [key=0, style=solid];
m44_2 -> m44_7  [key=2, style=dotted];
m44_5 -> m44_0  [color=blue, key=0, style=bold];
m45_48 -> m45_49  [key=0, style=solid];
m45_48 -> m45_51  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_49 -> m45_50  [key=0, style=solid];
m45_49 -> m45_58  [key=2, style=dotted];
m45_49 -> m45_52  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_49 -> m45_55  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_49 -> m45_56  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_51 -> m45_52  [key=0, style=solid];
m45_50 -> m45_51  [key=0, style=solid];
m45_52 -> m45_53  [key=0, style=solid];
m45_52 -> m45_59  [key=2, style=dotted];
m45_55 -> m45_56  [key=0, style=solid];
m45_55 -> m45_60  [key=2, style=dotted];
m45_56 -> m45_57  [key=0, style=solid];
m45_56 -> m45_60  [key=2, style=dotted];
m45_53 -> m45_54  [key=0, style=solid];
m45_54 -> m45_55  [key=0, style=solid];
m45_57 -> m45_48  [color=blue, key=0, style=bold];
m45_14 -> m45_15  [key=0, style=solid];
m45_14 -> m45_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_14 -> m45_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_14 -> m45_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_14 -> m45_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_14 -> m45_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_14 -> m45_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_14 -> m45_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_14 -> m45_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_14 -> m45_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_14 -> m45_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_14 -> m45_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_15 -> m45_16  [key=0, style=solid];
m45_16 -> m45_17  [key=0, style=solid];
m45_16 -> m45_29  [key=2, style=dotted];
m45_17 -> m45_18  [key=0, style=solid];
m45_18 -> m45_19  [key=0, style=solid];
m45_19 -> m45_20  [key=0, style=solid];
m45_20 -> m45_21  [key=0, style=solid];
m45_21 -> m45_22  [key=0, style=solid];
m45_22 -> m45_23  [key=0, style=solid];
m45_23 -> m45_24  [key=0, style=solid];
m45_25 -> m45_26  [key=0, style=solid];
m45_26 -> m45_27  [key=0, style=solid];
m45_27 -> m45_28  [key=0, style=solid];
m45_24 -> m45_25  [key=0, style=solid];
m45_28 -> m45_14  [color=blue, key=0, style=bold];
m45_154 -> m45_154  [color=darkorchid, key=3, label="Field variable decimal BidPrice", style=bold];
m45_154 -> m45_30  [color=darkorchid, key=3, label="Field variable decimal BidPrice", style=bold];
m45_154 -> m45_39  [color=darkorchid, key=3, label="Field variable decimal BidPrice", style=bold];
m45_154 -> m45_155  [color=darkorchid, key=3, label="Field variable decimal BidPrice", style=bold];
m45_155 -> m45_156  [key=0, style=solid];
m45_155 -> m45_157  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_155 -> m45_158  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_155 -> m45_159  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_155 -> m45_160  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_155 -> m45_161  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_156 -> m45_157  [key=0, style=solid];
m45_157 -> m45_158  [key=0, style=solid];
m45_158 -> m45_159  [key=0, style=solid];
m45_159 -> m45_160  [key=0, style=solid];
m45_160 -> m45_161  [key=0, style=solid];
m45_161 -> m45_162  [key=0, style=solid];
m45_161 -> m45_163  [key=2, style=dotted];
m45_162 -> m45_155  [color=blue, key=0, style=bold];
m45_148 -> m45_149  [key=0, style=solid];
m45_148 -> m45_153  [key=2, style=dotted];
m45_148 -> m45_148  [color=darkseagreen4, key=1, label=source, style=dashed];
m45_143 -> m45_144  [key=0, style=solid];
m45_143 -> m45_146  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_143 -> m45_147  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_143 -> m45_148  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_144 -> m45_145  [key=0, style=solid];
m45_144 -> m45_146  [key=0, style=solid];
m45_146 -> m45_147  [key=0, style=solid];
m45_146 -> m45_152  [key=2, style=dotted];
m45_146 -> m45_148  [color=darkseagreen4, key=1, label=source, style=dashed];
m45_146 -> m45_149  [color=darkseagreen4, key=1, label=source, style=dashed];
m45_147 -> m45_148  [key=0, style=solid];
m45_147 -> m45_149  [key=0, style=solid];
m45_145 -> m45_150  [key=0, style=solid];
m45_145 -> m45_151  [key=2, style=dotted];
m45_149 -> m45_150  [key=0, style=solid];
m45_149 -> m45_154  [key=2, style=dotted];
m45_150 -> m45_143  [color=blue, key=0, style=bold];
m45_39 -> m45_40  [key=0, style=solid];
m45_39 -> m45_41  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m45_39 -> m45_42  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_39 -> m45_43  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_39 -> m45_45  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_39 -> m45_46  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_40 -> m45_41  [key=0, style=solid];
m45_41 -> m45_42  [key=0, style=solid];
m45_42 -> m45_43  [key=0, style=solid];
m45_43 -> m45_44  [key=0, style=solid];
m45_45 -> m45_46  [key=0, style=solid];
m45_46 -> m45_47  [key=0, style=solid];
m45_44 -> m45_45  [key=0, style=solid];
m45_47 -> m45_39  [color=blue, key=0, style=bold];
m45_61 -> m45_62  [key=0, style=solid];
m45_61 -> m45_64  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_61 -> m45_65  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m45_61 -> m45_66  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_62 -> m45_63  [key=0, style=solid];
m45_62 -> m45_58  [key=2, style=dotted];
m45_62 -> m45_65  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_62 -> m45_66  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_62 -> m45_68  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_62 -> m45_69  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_62 -> m45_70  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_62 -> m45_71  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_64 -> m45_65  [key=0, style=solid];
m45_65 -> m45_66  [key=0, style=solid];
m45_65 -> m45_73  [key=2, style=dotted];
m45_65 -> m45_74  [key=2, style=dotted];
m45_66 -> m45_67  [key=0, style=solid];
m45_66 -> m45_75  [key=2, style=dotted];
m45_66 -> m45_76  [key=2, style=dotted];
m45_63 -> m45_64  [key=0, style=solid];
m45_68 -> m45_69  [key=0, style=solid];
m45_68 -> m45_75  [key=2, style=dotted];
m45_69 -> m45_70  [key=0, style=solid];
m45_69 -> m45_77  [key=2, style=dotted];
m45_70 -> m45_71  [key=0, style=solid];
m45_71 -> m45_72  [key=0, style=solid];
m45_71 -> m45_73  [key=2, style=dotted];
m45_67 -> m45_68  [key=0, style=solid];
m45_72 -> m45_61  [color=blue, key=0, style=bold];
m45_138 -> m45_139  [key=0, style=solid];
m45_138 -> m45_141  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_139 -> m45_140  [key=0, style=solid];
m45_139 -> m45_141  [key=0, style=solid];
m45_141 -> m45_142  [key=0, style=solid];
m45_141 -> m45_78  [key=2, style=dotted];
m45_140 -> m45_142  [key=0, style=solid];
m45_140 -> m45_0  [key=2, style=dotted];
m45_142 -> m45_138  [color=blue, key=0, style=bold];
m45_78 -> m45_79  [key=0, style=solid];
m45_78 -> m45_80  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_81  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_78 -> m45_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_85  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_78 -> m45_97  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_78 -> m45_106  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_107  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_108  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_110  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_78 -> m45_121  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m45_79 -> m45_80  [key=0, style=solid];
m45_80 -> m45_81  [key=0, style=solid];
m45_80 -> m45_76  [key=2, style=dotted];
m45_80 -> m45_86  [color=darkseagreen4, key=1, label=scaleFactor, style=dashed];
m45_80 -> m45_110  [color=darkseagreen4, key=1, label=scaleFactor, style=dashed];
m45_80 -> m45_118  [color=darkseagreen4, key=1, label=scaleFactor, style=dashed];
m45_80 -> m45_121  [color=darkseagreen4, key=1, label=scaleFactor, style=dashed];
m45_81 -> m45_82  [key=0, style=solid];
m45_81 -> m45_93  [key=0, style=solid];
m45_81 -> m45_103  [key=0, style=solid];
m45_83 -> m45_84  [key=0, style=solid];
m45_83 -> m45_133  [key=2, style=dotted];
m45_83 -> m45_85  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_83 -> m45_86  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_83 -> m45_88  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_83 -> m45_89  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_83 -> m45_90  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_83 -> m45_91  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_83 -> m45_92  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_84 -> m45_85  [key=0, style=solid];
m45_85 -> m45_86  [key=0, style=solid];
m45_85 -> m45_134  [key=2, style=dotted];
m45_85 -> m45_74  [key=2, style=dotted];
m45_85 -> m45_135  [key=2, style=dotted];
m45_86 -> m45_87  [key=0, style=solid];
m45_86 -> m45_75  [key=2, style=dotted];
m45_86 -> m45_136  [key=2, style=dotted];
m45_96 -> m45_97  [key=0, style=solid];
m45_96 -> m45_133  [key=2, style=dotted];
m45_96 -> m45_99  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_96 -> m45_100  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_96 -> m45_101  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_97 -> m45_98  [key=0, style=solid];
m45_99 -> m45_100  [key=0, style=solid];
m45_99 -> m45_134  [key=2, style=dotted];
m45_99 -> m45_74  [key=2, style=dotted];
m45_99 -> m45_135  [key=2, style=dotted];
m45_105 -> m45_106  [key=0, style=solid];
m45_105 -> m45_133  [key=2, style=dotted];
m45_105 -> m45_107  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_110  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_111  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_112  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_113  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_114  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_116  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_117  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_118  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_119  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_120  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_121  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_122  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_123  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_105 -> m45_124  [color=darkseagreen4, key=1, label=csv, style=dashed];
m45_106 -> m45_107  [key=0, style=solid];
m45_107 -> m45_108  [key=0, style=solid];
m45_107 -> m45_134  [key=2, style=dotted];
m45_107 -> m45_74  [key=2, style=dotted];
m45_107 -> m45_135  [key=2, style=dotted];
m45_108 -> m45_109  [key=0, style=solid];
m45_110 -> m45_111  [key=0, style=solid];
m45_110 -> m45_75  [key=2, style=dotted];
m45_110 -> m45_136  [key=2, style=dotted];
m45_118 -> m45_119  [key=0, style=solid];
m45_118 -> m45_75  [key=2, style=dotted];
m45_118 -> m45_136  [key=2, style=dotted];
m45_121 -> m45_122  [key=0, style=solid];
m45_121 -> m45_75  [key=2, style=dotted];
m45_121 -> m45_136  [key=2, style=dotted];
m45_82 -> m45_83  [key=0, style=solid];
m45_93 -> m45_94  [key=0, style=solid];
m45_103 -> m45_104  [key=0, style=solid];
m45_88 -> m45_89  [key=0, style=solid];
m45_88 -> m45_75  [key=2, style=dotted];
m45_89 -> m45_90  [key=0, style=solid];
m45_89 -> m45_130  [key=0, style=solid];
m45_89 -> m45_132  [key=0, style=solid];
m45_90 -> m45_91  [key=0, style=solid];
m45_91 -> m45_92  [key=0, style=solid];
m45_92 -> m45_130  [key=0, style=solid];
m45_92 -> m45_132  [key=0, style=solid];
m45_87 -> m45_88  [key=0, style=solid];
m45_130 -> m45_131  [key=0, style=solid];
m45_94 -> m45_95  [color=red, key=0, style=solid];
m45_95 -> m45_96  [color=red, key=0, style=solid];
m45_100 -> m45_101  [key=0, style=solid];
m45_100 -> m45_75  [key=2, style=dotted];
m45_101 -> m45_102  [key=0, style=solid];
m45_101 -> m45_75  [key=2, style=dotted];
m45_98 -> m45_99  [key=0, style=solid];
m45_102 -> m45_130  [key=0, style=solid];
m45_102 -> m45_132  [key=0, style=solid];
m45_104 -> m45_105  [key=0, style=solid];
m45_111 -> m45_112  [key=0, style=solid];
m45_111 -> m45_75  [key=2, style=dotted];
m45_112 -> m45_113  [key=0, style=solid];
m45_113 -> m45_114  [key=0, style=solid];
m45_114 -> m45_130  [key=0, style=solid];
m45_114 -> m45_132  [key=0, style=solid];
m45_116 -> m45_130  [key=0, style=solid];
m45_116 -> m45_132  [key=0, style=solid];
m45_116 -> m45_75  [key=2, style=dotted];
m45_117 -> m45_118  [key=0, style=solid];
m45_117 -> m45_120  [key=0, style=solid];
m45_119 -> m45_120  [key=0, style=solid];
m45_119 -> m45_75  [key=2, style=dotted];
m45_120 -> m45_121  [key=0, style=solid];
m45_120 -> m45_123  [key=0, style=solid];
m45_122 -> m45_123  [key=0, style=solid];
m45_122 -> m45_75  [key=2, style=dotted];
m45_123 -> m45_124  [key=0, style=solid];
m45_124 -> m45_125  [key=0, style=solid];
m45_109 -> m45_110  [key=0, style=solid];
m45_109 -> m45_115  [key=0, style=solid];
m45_115 -> m45_116  [key=0, style=solid];
m45_115 -> m45_117  [key=0, style=solid];
m45_125 -> m45_126  [key=0, style=solid];
m45_125 -> m45_129  [key=0, style=solid];
m45_126 -> m45_127  [key=0, style=solid];
m45_126 -> m45_128  [key=0, style=solid];
m45_129 -> m45_130  [key=0, style=solid];
m45_129 -> m45_132  [key=0, style=solid];
m45_127 -> m45_130  [key=0, style=solid];
m45_127 -> m45_132  [key=0, style=solid];
m45_128 -> m45_130  [key=0, style=solid];
m45_128 -> m45_132  [key=0, style=solid];
m45_131 -> m45_132  [key=0, style=solid];
m45_131 -> m45_137  [key=2, style=dotted];
m45_132 -> m45_78  [color=blue, key=0, style=bold];
m45_164 -> m45_165  [key=0, style=solid];
m45_165 -> m45_166  [key=0, style=solid];
m45_166 -> m45_164  [color=blue, key=0, style=bold];
m45_30 -> m45_31  [key=0, style=solid];
m45_30 -> m45_32  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m45_30 -> m45_33  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m45_30 -> m45_34  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_30 -> m45_36  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_30 -> m45_37  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m45_31 -> m45_32  [key=0, style=solid];
m45_32 -> m45_33  [key=0, style=solid];
m45_33 -> m45_34  [key=0, style=solid];
m45_34 -> m45_35  [key=0, style=solid];
m45_36 -> m45_37  [key=0, style=solid];
m45_37 -> m45_38  [key=0, style=solid];
m45_35 -> m45_36  [key=0, style=solid];
m45_38 -> m45_30  [color=blue, key=0, style=bold];
m45_76 -> m45_170  [key=0, style=solid];
m45_170 -> m45_171  [key=0, style=solid];
m45_171 -> m45_76  [color=blue, key=0, style=bold];
m45_0 -> m45_1  [key=0, style=solid];
m45_1 -> m45_2  [key=0, style=solid];
m45_2 -> m45_3  [key=0, style=solid];
m45_2 -> m45_13  [key=2, style=dotted];
m45_3 -> m45_4  [key=0, style=solid];
m45_4 -> m45_5  [key=0, style=solid];
m45_5 -> m45_6  [key=0, style=solid];
m45_6 -> m45_7  [key=0, style=solid];
m45_7 -> m45_8  [key=0, style=solid];
m45_8 -> m45_9  [key=0, style=solid];
m45_9 -> m45_10  [key=0, style=solid];
m45_10 -> m45_11  [key=0, style=solid];
m45_11 -> m45_12  [key=0, style=solid];
m45_12 -> m45_0  [color=blue, key=0, style=bold];
m45_167 -> m45_168  [key=0, style=solid];
m45_168 -> m45_169  [key=0, style=solid];
m45_168 -> m45_14  [key=2, style=dotted];
m45_169 -> m45_167  [color=blue, key=0, style=bold];
m45_172 -> m45_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_45  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_51  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_52  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_54  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_55  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_64  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_66  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_67  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_68  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_69  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_70  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_71  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_85  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_87  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_88  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_90  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_91  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_92  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_97  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_98  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_100  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_101  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_102  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_106  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_107  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_108  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_109  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_110  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_111  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_112  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_113  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_114  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_115  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_116  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_119  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_121  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_122  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_123  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_124  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_125  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_126  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_127  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_128  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_129  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_156  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_157  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_158  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_159  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_160  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_161  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_165  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m45_172 -> m45_168  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m46_8 -> m46_9  [key=0, style=solid];
m46_8 -> m46_43  [key=2, style=dotted];
m46_9 -> m46_8  [color=blue, key=0, style=bold];
m46_9 -> m46_10  [key=0, style=solid];
m46_9 -> m46_11  [key=0, style=solid];
m46_2 -> m46_3  [key=0, style=solid];
m46_2 -> m46_12  [color=darkseagreen4, key=1, label=req, style=dashed];
m46_2 -> m46_13  [color=darkseagreen4, key=1, label=req, style=dashed];
m46_2 -> m46_37  [key=2, style=dotted];
m46_2 -> m46_11  [color=darkseagreen4, key=1, label=req, style=dashed];
m46_3 -> m46_2  [color=blue, key=0, style=bold];
m46_3 -> m46_4  [key=0, style=solid];
m46_3 -> m46_5  [color=darkseagreen4, key=1, label=payload, style=dashed];
m46_3 -> m46_6  [color=darkseagreen4, key=1, label=payload, style=dashed];
m46_3 -> m46_7  [color=darkseagreen4, key=1, label=payload, style=dashed];
m46_3 -> m46_8  [color=darkseagreen4, key=1, label=payload, style=dashed];
m46_3 -> m46_10  [color=darkseagreen4, key=1, label=payload, style=dashed];
m46_3 -> m46_11  [color=darkseagreen4, key=1, label=payload, style=dashed];
m46_3 -> m46_38  [key=2, style=dotted];
m46_75 -> m46_76  [key=0, style=solid];
m46_125 -> m46_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m46_125 -> m46_126  [key=0, style=solid];
m46_125 -> m46_127  [key=2, style=dotted];
m46_125 -> m46_128  [key=2, style=dotted];
m46_124 -> m46_125  [key=0, style=solid];
m46_126 -> m46_124  [color=blue, key=0, style=bold];
m46_76 -> m46_77  [key=0, style=solid];
m46_77 -> m46_75  [color=blue, key=0, style=bold];
m46_82 -> m46_83  [key=0, style=solid];
m46_97 -> m46_89  [color=green, key=0, style=solid];
m46_97 -> m46_48  [color=green, key=2, style=dotted];
m46_97 -> m46_49  [color=green, key=2, style=dotted];
m46_97 -> m46_99  [color=green, key=3, label="method methodReturn QuantConnect.Data.BaseData Reader", style=bold];
m46_97 -> m46_144  [color=green, key=3, label="method methodReturn QuantConnect.Data.BaseData Reader", style=bold];
m46_86 -> m46_97  [color=green, key=1, label=response, style=dashed];
m46_86 -> m46_87  [key=0, style=solid];
m46_86 -> m46_46  [key=2, style=dotted];
m46_86 -> m46_88  [color=darkseagreen4, key=1, label=response, style=dashed];
m46_89 -> m46_97  [color=green, key=1, label=item, style=dashed];
m46_89 -> m46_90  [key=0, style=solid];
m46_89 -> m46_105  [key=0, style=solid];
m46_89 -> m46_107  [key=0, style=solid];
m46_89 -> m46_91  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_89 -> m46_92  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_89 -> m46_93  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_89 -> m46_94  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_89 -> m46_95  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_89 -> m46_96  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_89 -> m46_98  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_89 -> m46_99  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_89 -> m46_100  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_89 -> m46_102  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_89 -> m46_103  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_95 -> m46_97  [color=green, key=0, style=solid];
m46_95 -> m46_96  [key=0, style=solid];
m46_99 -> m46_100  [key=0, style=solid];
m46_99 -> m46_72  [key=2, style=dotted];
m46_99 -> m46_117  [key=2, style=dotted];
m46_111 -> m46_107  [color=green, key=0, style=solid];
m46_111 -> m46_123  [color=green, key=2, style=dotted];
m46_107 -> m46_111  [color=green, key=1, label=item, style=dashed];
m46_107 -> m46_108  [key=0, style=solid];
m46_107 -> m46_112  [key=0, style=solid];
m46_107 -> m46_109  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_107 -> m46_125  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_109 -> m46_111  [color=green, key=1, label=cached, style=dashed];
m46_109 -> m46_110  [key=0, style=solid];
m46_109 -> m46_121  [key=2, style=dotted];
m46_109 -> m46_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_110 -> m46_111  [color=green, key=0, style=solid];
m46_110 -> m46_107  [key=0, style=solid];
m46_110 -> m46_122  [key=2, style=dotted];
m46_85 -> m46_86  [key=0, style=solid];
m46_85 -> m46_45  [key=2, style=dotted];
m46_100 -> m46_101  [key=0, style=solid];
m46_100 -> m46_118  [key=2, style=dotted];
m46_102 -> m46_103  [key=0, style=solid];
m46_102 -> m46_119  [key=2, style=dotted];
m46_84 -> m46_86  [color=darkseagreen4, key=1, label=req, style=dashed];
m46_84 -> m46_85  [key=0, style=solid];
m46_84 -> m46_37  [key=2, style=dotted];
m46_87 -> m46_107  [key=0, style=solid];
m46_87 -> m46_88  [key=0, style=solid];
m46_87 -> m46_105  [key=0, style=solid];
m46_88 -> m46_89  [key=0, style=solid];
m46_88 -> m46_47  [key=2, style=dotted];
m46_104 -> m46_89  [key=0, style=solid];
m46_104 -> m46_73  [key=2, style=dotted];
m46_90 -> m46_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_90 -> m46_100  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_90 -> m46_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_90 -> m46_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_90 -> m46_91  [key=0, style=solid];
m46_90 -> m46_98  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_90 -> m46_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_90 -> m46_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_105 -> m46_106  [key=0, style=solid];
m46_91 -> m46_92  [key=0, style=solid];
m46_91 -> m46_93  [key=0, style=solid];
m46_92 -> m46_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_92 -> m46_100  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_92 -> m46_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_92 -> m46_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_92 -> m46_98  [key=0, style=solid];
m46_92 -> m46_114  [key=2, style=dotted];
m46_92 -> m46_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_92 -> m46_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_93 -> m46_95  [key=0, style=solid];
m46_93 -> m46_94  [key=0, style=solid];
m46_94 -> m46_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_94 -> m46_100  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_94 -> m46_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_94 -> m46_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_94 -> m46_98  [key=0, style=solid];
m46_94 -> m46_115  [key=2, style=dotted];
m46_94 -> m46_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_94 -> m46_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_96 -> m46_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_96 -> m46_100  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_96 -> m46_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_96 -> m46_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_96 -> m46_98  [key=0, style=solid];
m46_96 -> m46_116  [key=2, style=dotted];
m46_96 -> m46_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_96 -> m46_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m46_98 -> m46_99  [key=0, style=solid];
m46_98 -> m46_63  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Algorithm.Framework.QCAlgorithmFramework algorithm", style=bold];
m46_103 -> m46_104  [key=0, style=solid];
m46_83 -> m46_107  [color=darkseagreen4, key=1, label=list, style=dashed];
m46_83 -> m46_84  [key=0, style=solid];
m46_83 -> m46_104  [color=darkseagreen4, key=1, label=list, style=dashed];
m46_83 -> m46_72  [key=2, style=dotted];
m46_83 -> m46_112  [color=darkseagreen4, key=1, label=list, style=dashed];
m46_108 -> m46_107  [key=0, style=solid];
m46_108 -> m46_109  [key=0, style=solid];
m46_108 -> m46_120  [key=2, style=dotted];
m46_112 -> m46_113  [key=0, style=solid];
m46_101 -> m46_102  [key=0, style=solid];
m46_106 -> m46_113  [key=0, style=solid];
m46_113 -> m46_82  [color=blue, key=0, style=bold];
m46_0 -> m46_30  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_1  [key=0, style=solid];
m46_0 -> m46_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_7  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_8  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_25  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_26  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_0 -> m46_31  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_30 -> m46_31  [color=green, key=0, style=solid];
m46_30 -> m46_55  [color=green, key=2, style=dotted];
m46_30 -> m46_56  [color=green, key=2, style=dotted];
m46_14 -> m46_30  [color=green, key=0, style=solid];
m46_14 -> m46_15  [key=0, style=solid];
m46_31 -> m46_32  [key=0, style=solid];
m46_1 -> m46_86  [color=darkorchid, key=3, label="Property variable decimal Open", style=bold];
m46_1 -> m46_1  [color=darkorchid, key=3, label="Property variable decimal Open", style=bold];
m46_1 -> m46_2  [key=0, style=solid];
m46_1 -> m46_36  [key=2, style=dotted];
m46_1 -> m46_0  [color=blue, key=0, style=bold];
m46_12 -> m46_13  [key=0, style=solid];
m46_12 -> m46_45  [key=2, style=dotted];
m46_13 -> m46_14  [key=0, style=solid];
m46_13 -> m46_31  [color=darkseagreen4, key=1, label=response, style=dashed];
m46_13 -> m46_46  [key=2, style=dotted];
m46_13 -> m46_15  [color=darkseagreen4, key=1, label=response, style=dashed];
m46_13 -> m46_17  [color=darkseagreen4, key=1, label=response, style=dashed];
m46_13 -> m46_12  [color=blue, key=0, style=bold];
m46_17 -> m46_48  [key=2, style=dotted];
m46_17 -> m46_49  [key=2, style=dotted];
m46_17 -> m46_18  [key=0, style=solid];
m46_17 -> m46_16  [color=blue, key=0, style=bold];
m46_18 -> m46_19  [key=0, style=solid];
m46_18 -> m46_50  [key=2, style=dotted];
m46_21 -> m46_22  [key=0, style=solid];
m46_21 -> m46_23  [key=0, style=solid];
m46_21 -> m46_51  [key=2, style=dotted];
m46_22 -> m46_25  [key=0, style=solid];
m46_22 -> m46_52  [key=2, style=dotted];
m46_24 -> m46_25  [key=0, style=solid];
m46_24 -> m46_53  [key=2, style=dotted];
m46_25 -> m46_26  [key=0, style=solid];
m46_25 -> m46_54  [key=2, style=dotted];
m46_25 -> m46_53  [key=2, style=dotted];
m46_26 -> m46_55  [key=2, style=dotted];
m46_26 -> m46_56  [key=2, style=dotted];
m46_26 -> m46_27  [key=0, style=solid];
m46_27 -> m46_49  [key=2, style=dotted];
m46_27 -> m46_28  [key=0, style=solid];
m46_27 -> m46_57  [key=2, style=dotted];
m46_27 -> m46_58  [key=2, style=dotted];
m46_28 -> m46_29  [key=0, style=solid];
m46_28 -> m46_50  [key=2, style=dotted];
m46_32 -> m46_49  [key=2, style=dotted];
m46_32 -> m46_33  [key=0, style=solid];
m46_32 -> m46_57  [key=2, style=dotted];
m46_33 -> m46_34  [key=0, style=solid];
m46_33 -> m46_50  [key=2, style=dotted];
m46_4 -> m46_5  [key=0, style=solid];
m46_4 -> m46_39  [key=2, style=dotted];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_40  [key=2, style=dotted];
m46_5 -> m46_41  [key=2, style=dotted];
m46_5 -> m46_4  [color=blue, key=0, style=bold];
m46_6 -> m46_7  [key=0, style=solid];
m46_6 -> m46_42  [key=2, style=dotted];
m46_7 -> m46_8  [key=0, style=solid];
m46_7 -> m46_6  [color=blue, key=0, style=bold];
m46_23 -> m46_24  [key=0, style=solid];
m46_23 -> m46_52  [key=2, style=dotted];
m46_15 -> m46_16  [key=0, style=solid];
m46_15 -> m46_47  [key=2, style=dotted];
m46_15 -> m46_20  [color=darkseagreen4, key=1, label=raw, style=dashed];
m46_15 -> m46_14  [color=blue, key=0, style=bold];
m46_16 -> m46_86  [color=darkorchid, key=3, label="Property variable decimal Low", style=bold];
m46_16 -> m46_17  [key=0, style=solid];
m46_16 -> m46_16  [color=darkorchid, key=3, label="Property variable decimal Low", style=bold];
m46_16 -> m46_20  [key=0, style=solid];
m46_10 -> m46_11  [key=0, style=solid];
m46_11 -> m46_12  [key=0, style=solid];
m46_11 -> m46_44  [key=2, style=dotted];
m46_11 -> m46_10  [color=blue, key=0, style=bold];
m46_19 -> m46_35  [key=0, style=solid];
m46_20 -> m46_21  [key=0, style=solid];
m46_20 -> m46_22  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m46_20 -> m46_23  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m46_29 -> m46_35  [key=0, style=solid];
m46_34 -> m46_35  [key=0, style=solid];
m46_35 -> m46_0  [color=blue, key=0, style=bold];
m46_63 -> m46_64  [key=0, style=solid];
m46_63 -> m46_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_67 -> m46_68  [key=0, style=solid];
m46_67 -> m46_45  [key=2, style=dotted];
m46_68 -> m46_69  [key=0, style=solid];
m46_68 -> m46_46  [key=2, style=dotted];
m46_66 -> m46_67  [key=0, style=solid];
m46_66 -> m46_68  [color=darkseagreen4, key=1, label=req, style=dashed];
m46_66 -> m46_37  [key=2, style=dotted];
m46_69 -> m46_65  [key=0, style=solid];
m46_69 -> m46_73  [key=2, style=dotted];
m46_64 -> m46_72  [key=2, style=dotted];
m46_64 -> m46_69  [color=darkseagreen4, key=1, label=success, style=dashed];
m46_64 -> m46_65  [key=0, style=solid];
m46_64 -> m46_70  [color=darkseagreen4, key=1, label=success, style=dashed];
m46_65 -> m46_66  [key=0, style=solid];
m46_65 -> m46_70  [key=0, style=solid];
m46_70 -> m46_71  [key=0, style=solid];
m46_70 -> m46_74  [key=2, style=dotted];
m46_70 -> m46_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_71 -> m46_63  [color=blue, key=0, style=bold];
m46_129 -> m46_130  [key=0, style=solid];
m46_130 -> m46_72  [key=2, style=dotted];
m46_130 -> m46_131  [key=0, style=solid];
m46_131 -> m46_129  [color=blue, key=0, style=bold];
m46_78 -> m46_79  [key=0, style=solid];
m46_79 -> m46_80  [key=0, style=solid];
m46_79 -> m46_81  [key=2, style=dotted];
m46_80 -> m46_78  [color=blue, key=0, style=bold];
m46_162 -> m46_164  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m46_162 -> m46_163  [key=0, style=solid];
m46_166 -> m46_167  [key=0, style=solid];
m46_166 -> m46_45  [key=2, style=dotted];
m46_167 -> m46_144  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.Market.TradeBar ParseEquity", style=bold];
m46_167 -> m46_168  [key=0, style=solid];
m46_167 -> m46_46  [key=2, style=dotted];
m46_165 -> m46_166  [key=0, style=solid];
m46_165 -> m46_167  [color=darkseagreen4, key=1, label=req, style=dashed];
m46_165 -> m46_37  [key=2, style=dotted];
m46_168 -> m46_169  [key=0, style=solid];
m46_168 -> m46_47  [key=2, style=dotted];
m46_164 -> m46_165  [key=0, style=solid];
m46_164 -> m46_170  [key=0, style=solid];
m46_169 -> m46_164  [key=0, style=solid];
m46_169 -> m46_169  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m46_169 -> m46_170  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m46_163 -> m46_164  [key=0, style=solid];
m46_163 -> m46_169  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m46_163 -> m46_170  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m46_170 -> m46_171  [key=0, style=solid];
m46_171 -> m46_162  [color=blue, key=0, style=bold];
m46_132 -> m46_133  [key=0, style=solid];
m46_144 -> m46_97  [color=green, key=3, label="Parameter variable System.DateTime date", style=bold];
m46_144 -> m46_145  [key=0, style=solid];
m46_144 -> m46_152  [key=2, style=dotted];
m46_144 -> m46_153  [key=2, style=dotted];
m46_144 -> m46_167  [color=darkorchid, key=3, label="Parameter variable System.DateTime date", style=bold];
m46_135 -> m46_136  [key=0, style=solid];
m46_135 -> m46_45  [key=2, style=dotted];
m46_136 -> m46_137  [key=0, style=solid];
m46_136 -> m46_46  [key=2, style=dotted];
m46_142 -> m46_143  [key=0, style=solid];
m46_142 -> m46_150  [key=2, style=dotted];
m46_137 -> m46_144  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_137 -> m46_142  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_137 -> m46_138  [key=0, style=solid];
m46_137 -> m46_146  [key=0, style=solid];
m46_137 -> m46_47  [key=2, style=dotted];
m46_137 -> m46_139  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_137 -> m46_140  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_137 -> m46_141  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_137 -> m46_143  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_137 -> m46_145  [color=darkseagreen4, key=1, label=item, style=dashed];
m46_141 -> m46_144  [key=0, style=solid];
m46_141 -> m46_142  [key=0, style=solid];
m46_141 -> m46_149  [key=2, style=dotted];
m46_145 -> m46_137  [key=0, style=solid];
m46_145 -> m46_148  [key=2, style=dotted];
m46_145 -> m46_151  [key=2, style=dotted];
m46_145 -> m46_73  [key=2, style=dotted];
m46_134 -> m46_135  [key=0, style=solid];
m46_134 -> m46_136  [color=darkseagreen4, key=1, label=req, style=dashed];
m46_134 -> m46_37  [key=2, style=dotted];
m46_143 -> m46_137  [key=0, style=solid];
m46_143 -> m46_148  [key=2, style=dotted];
m46_143 -> m46_151  [key=2, style=dotted];
m46_143 -> m46_73  [key=2, style=dotted];
m46_140 -> m46_137  [key=0, style=solid];
m46_140 -> m46_73  [key=2, style=dotted];
m46_140 -> m46_148  [key=2, style=dotted];
m46_138 -> m46_137  [key=0, style=solid];
m46_138 -> m46_139  [key=0, style=solid];
m46_146 -> m46_147  [key=0, style=solid];
m46_139 -> m46_141  [key=0, style=solid];
m46_139 -> m46_140  [key=0, style=solid];
m46_133 -> m46_145  [color=darkseagreen4, key=1, label=list, style=dashed];
m46_133 -> m46_72  [key=2, style=dotted];
m46_133 -> m46_134  [key=0, style=solid];
m46_133 -> m46_143  [color=darkseagreen4, key=1, label=list, style=dashed];
m46_133 -> m46_140  [color=darkseagreen4, key=1, label=list, style=dashed];
m46_133 -> m46_146  [color=darkseagreen4, key=1, label=list, style=dashed];
m46_147 -> m46_132  [color=blue, key=0, style=bold];
m46_154 -> m46_155  [key=0, style=solid];
m46_155 -> m46_156  [key=0, style=solid];
m46_156 -> m46_157  [key=0, style=solid];
m46_156 -> m46_160  [key=2, style=dotted];
m46_156 -> m46_158  [color=darkseagreen4, key=1, label=copy, style=dashed];
m46_157 -> m46_158  [key=0, style=solid];
m46_157 -> m46_161  [key=2, style=dotted];
m46_158 -> m46_159  [key=0, style=solid];
m46_159 -> m46_154  [color=blue, key=0, style=bold];
m46_172 -> m46_30  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_97  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_111  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_13  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_17  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_18  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_25  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_26  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_33  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_67  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_68  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_79  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_85  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_86  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_102  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_109  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_135  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_136  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_144  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_155  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_156  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_166  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_172 -> m46_167  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m46_173 -> m46_125  [color=darkseagreen4, key=1, label=item, style=dashed];
}
