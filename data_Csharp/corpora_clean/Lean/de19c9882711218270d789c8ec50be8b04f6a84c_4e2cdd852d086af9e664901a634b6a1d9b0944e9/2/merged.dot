digraph  {
n190 [label="QuantConnect.Python.PandasConverter", span=""];
n191 [label=getVolume, span=""];
n192 [label=toQuoteBar, span=""];
n193 [label=value, span=""];
n194 [label="QuantConnect.Symbol", span=""];
n0 [label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36", cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)"];
n1 [label="pandas == null", span="40-40", cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)"];
n4 [label="_pandas = pandas", span="48-48", cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)"];
n2 [label="Py.GIL()", span="42-42", cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)"];
n3 [label="pandas = Py.Import(''pandas'')", span="44-44", cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)"];
n8 [label="Entry Unk.GIL", span="", cluster="Unk.GIL"];
n9 [label="Entry Unk.Import", span="", cluster="Unk.Import"];
n5 [label=PythonException, span="50-50", cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)"];
n7 [label="Exit QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36", cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)"];
n6 [label="Logging.Log.Error($''PandasConverter: Failed to import pandas module: {pythonException}'')", span="52-52", cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)"];
n10 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)"];
n11 [label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)"];
n12 [label="var symbols = data.SelectMany(x => x.Keys).Distinct().OrderBy(x => x.Value)", span="63-63", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n21 [label="var items = new PyObject[]\r\n                    {\r\n                        dataFrame,\r\n                        GetDataFrame(data.Get<QuoteBar>(symbol)),\r\n                        GetDataFrame(data.Get<TradeBar>(symbol))\r\n                    }", span="85-90", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n13 [label="Symbol underlying = null", span="67-67", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n25 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)"];
n26 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()"];
n27 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)"];
n36 [label="Entry lambda expression", span="63-63", cluster="lambda expression"];
n39 [label="Entry lambda expression", span="63-63", cluster="lambda expression"];
n14 [label="var derivatives = symbols.Where(x => x.HasUnderlying)", span="68-68", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n19 [label=symbols, span="78-78", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n20 [label="symbol == underlying", span="80-80", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n15 [label="derivatives.Count() > 0", span="69-69", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n28 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
n42 [label="Entry lambda expression", span="68-68", cluster="lambda expression"];
n16 [label="underlying = derivatives.First().Underlying", span="71-71", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n17 [label="Py.GIL()", span="74-74", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n29 [label="Entry Unk.Count", span="", cluster="Unk.Count"];
n30 [label="Entry Unk.First", span="", cluster="Unk.First"];
n18 [label="var dataFrame = _pandas.DataFrame()", span="76-76", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n31 [label="Entry Unk.DataFrame", span="", cluster="Unk.DataFrame"];
n23 [label="return dataFrame;", span="95-95", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n22 [label="dataFrame = _pandas.concat(new PyList(items))", span="92-92", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0];
n32 [label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134", cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)"];
n33 [label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="104-104", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)"];
n34 [label="Entry PyList.cstr", span="", cluster="PyList.cstr"];
n35 [label="Entry Unk.concat", span="", cluster="Unk.concat"];
n24 [label="Exit QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)"];
n37 [label="x.Keys", span="63-63", cluster="lambda expression", color=red, community=0];
n38 [label="Exit lambda expression", span="63-63", cluster="lambda expression"];
n40 [label="x.Value", span="63-63", cluster="lambda expression", color=red, community=0];
n41 [label="Exit lambda expression", span="63-63", cluster="lambda expression"];
n43 [label="x.HasUnderlying", span="68-68", cluster="lambda expression", color=red, community=0];
n44 [label="Exit lambda expression", span="68-68", cluster="lambda expression"];
n45 [label="data.Count() == 0", span="107-107", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n48 [label="var index = CreateIndex(data.First().Symbol, data.Select(x => x.Time))", span="114-114", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n50 [label="pyDict.SetItem(''low'', _pandas.Series(data.Select(x => (double)x.Low).ToList(), index))", span="118-118", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n51 [label="pyDict.SetItem(''open'', _pandas.Series(data.Select(x => (double)x.Open).ToList(), index))", span="119-119", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n52 [label="pyDict.SetItem(''high'', _pandas.Series(data.Select(x => (double)x.High).ToList(), index))", span="120-120", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n53 [label="pyDict.SetItem(''close'', _pandas.Series(data.Select(x => (double)x.Close).ToList(), index))", span="121-121", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n56 [label="pyDict.SetItem(''volume'', _pandas.Series(data.Select(x => getVolume(x)).ToList(), index))", span="126-126", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n59 [label="pyDict.SetItem(''askopen'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Open; }).ToList(), index))", span="132-132", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n60 [label="pyDict.SetItem(''bidopen'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Open; }).ToList(), index))", span="133-133", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n61 [label="pyDict.SetItem(''askhigh'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.High; }).ToList(), index))", span="134-134", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n62 [label="pyDict.SetItem(''bidhigh'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.High; }).ToList(), index))", span="135-135", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n63 [label="pyDict.SetItem(''asklow'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Low; }).ToList(), index))", span="136-136", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n64 [label="pyDict.SetItem(''bidlow'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Low; }).ToList(), index))", span="137-137", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n65 [label="pyDict.SetItem(''askclose'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Close; }).ToList(), index))", span="138-138", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n66 [label="pyDict.SetItem(''bidclose'', _pandas.Series(data.Select(x => { return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Close; }).ToList(), index))", span="139-139", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n67 [label="pyDict.SetItem(''asksize'', _pandas.Series(data.Select(x => (double)toQuoteBar(x).LastAskSize).ToList(), index))", span="140-140", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n68 [label="pyDict.SetItem(''bidsize'', _pandas.Series(data.Select(x => (double)toQuoteBar(x).LastBidSize).ToList(), index))", span="141-141", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n46 [label="return _pandas.DataFrame();", span="109-109", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n47 [label="Py.GIL()", span="112-112", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n71 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()"];
n49 [label="var pyDict = new PyDict()", span="116-116", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)"];
n72 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
n73 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n74 [label="Entry Unk.CreateIndex", span="", cluster="Unk.CreateIndex"];
n79 [label="Entry lambda expression", span="114-114", cluster="lambda expression"];
n75 [label="Entry PyDict.cstr", span="", cluster="PyDict.cstr"];
n69 [label="return _pandas.DataFrame(pyDict);", span="144-144", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n76 [label="Entry Unk.ToList", span="", cluster="Unk.ToList"];
n77 [label="Entry Unk.Series", span="", cluster="Unk.Series"];
n78 [label="Entry Unk.SetItem", span="", cluster="Unk.SetItem"];
n82 [label="Entry lambda expression", span="118-118", cluster="lambda expression"];
n85 [label="Entry lambda expression", span="119-119", cluster="lambda expression"];
n88 [label="Entry lambda expression", span="120-120", cluster="lambda expression"];
n54 [label="typeof(T) == typeof(TradeBar)", span="123-123", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n91 [label="Entry lambda expression", span="121-121", cluster="lambda expression"];
n55 [label="Func<IBaseDataBar, double> getVolume = x => { var bar = x as TradeBar; return (double)bar.Volume; }", span="125-125", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n57 [label="typeof(T) == typeof(QuoteBar)", span="129-129", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n95 [label="var bar = x as TradeBar", span="125-125", cluster="lambda expression", color=red, community=0];
n99 [label="getVolume(x)", span="126-126", cluster="lambda expression", color=red, community=0];
n98 [label="Entry lambda expression", span="126-126", cluster="lambda expression"];
n58 [label="Func<IBaseDataBar, QuoteBar> toQuoteBar = x => x as QuoteBar", span="131-131", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=red, community=0];
n103 [label="x as QuoteBar", span="131-131", cluster="lambda expression", color=red, community=0];
n106 [label="return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Open;", span="132-132", cluster="lambda expression", color=red, community=0];
n109 [label="return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Open;", span="133-133", cluster="lambda expression", color=red, community=0];
n112 [label="return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.High;", span="134-134", cluster="lambda expression", color=red, community=0];
n115 [label="return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.High;", span="135-135", cluster="lambda expression", color=red, community=0];
n118 [label="return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Low;", span="136-136", cluster="lambda expression", color=red, community=0];
n121 [label="return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Low;", span="137-137", cluster="lambda expression", color=red, community=0];
n124 [label="return toQuoteBar(x).Ask == null ? double.NaN : (double)toQuoteBar(x).Ask.Close;", span="138-138", cluster="lambda expression", color=red, community=0];
n127 [label="return toQuoteBar(x).Bid == null ? double.NaN : (double)toQuoteBar(x).Bid.Close;", span="139-139", cluster="lambda expression", color=red, community=0];
n130 [label="(double)toQuoteBar(x).LastAskSize", span="140-140", cluster="lambda expression", color=red, community=0];
n133 [label="(double)toQuoteBar(x).LastBidSize", span="141-141", cluster="lambda expression", color=red, community=0];
n105 [label="Entry lambda expression", span="132-132", cluster="lambda expression"];
n108 [label="Entry lambda expression", span="133-133", cluster="lambda expression"];
n111 [label="Entry lambda expression", span="134-134", cluster="lambda expression"];
n114 [label="Entry lambda expression", span="135-135", cluster="lambda expression"];
n117 [label="Entry lambda expression", span="136-136", cluster="lambda expression"];
n120 [label="Entry lambda expression", span="137-137", cluster="lambda expression"];
n123 [label="Entry lambda expression", span="138-138", cluster="lambda expression"];
n126 [label="Entry lambda expression", span="139-139", cluster="lambda expression"];
n129 [label="Entry lambda expression", span="140-140", cluster="lambda expression"];
n132 [label="Entry lambda expression", span="141-141", cluster="lambda expression"];
n70 [label="Exit QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="104-104", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)"];
n80 [label="x.Time", span="114-114", cluster="lambda expression", color=red, community=0];
n81 [label="Exit lambda expression", span="114-114", cluster="lambda expression"];
n83 [label="(double)x.Low", span="118-118", cluster="lambda expression", color=red, community=0];
n84 [label="Exit lambda expression", span="118-118", cluster="lambda expression"];
n86 [label="(double)x.Open", span="119-119", cluster="lambda expression", color=red, community=0];
n87 [label="Exit lambda expression", span="119-119", cluster="lambda expression"];
n89 [label="(double)x.High", span="120-120", cluster="lambda expression", color=red, community=0];
n90 [label="Exit lambda expression", span="120-120", cluster="lambda expression"];
n92 [label="(double)x.Close", span="121-121", cluster="lambda expression", color=red, community=0];
n93 [label="Exit lambda expression", span="121-121", cluster="lambda expression"];
n94 [label="Entry lambda expression", span="125-125", cluster="lambda expression"];
n96 [label="return (double)bar.Volume;", span="125-125", cluster="lambda expression", color=red, community=0];
n97 [label="Exit lambda expression", span="125-125", cluster="lambda expression"];
n100 [label="Exit lambda expression", span="126-126", cluster="lambda expression"];
n101 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
n102 [label="Entry lambda expression", span="131-131", cluster="lambda expression"];
n104 [label="Exit lambda expression", span="131-131", cluster="lambda expression"];
n107 [label="Exit lambda expression", span="132-132", cluster="lambda expression"];
n110 [label="Exit lambda expression", span="133-133", cluster="lambda expression"];
n113 [label="Exit lambda expression", span="134-134", cluster="lambda expression"];
n116 [label="Exit lambda expression", span="135-135", cluster="lambda expression"];
n119 [label="Exit lambda expression", span="136-136", cluster="lambda expression"];
n122 [label="Exit lambda expression", span="137-137", cluster="lambda expression"];
n125 [label="Exit lambda expression", span="138-138", cluster="lambda expression"];
n128 [label="Exit lambda expression", span="139-139", cluster="lambda expression"];
n131 [label="Exit lambda expression", span="140-140", cluster="lambda expression"];
n134 [label="Exit lambda expression", span="141-141", cluster="lambda expression"];
n135 [label="Entry QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", span="154-154", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)"];
n136 [label="var value = (symbol.HasUnderlying ? symbol.Value : symbol.ToString()).ToPython()", span="156-156", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0];
n137 [label="var tuples = time.Select(x => new PyTuple(new PyObject[] { value, x.ToPython() }))", span="157-157", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0];
n139 [label="symbol.SecurityType == SecurityType.Future", span="160-160", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0];
n140 [label="tuples = time.Select(x => new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), value, x.ToPython() }))", span="162-162", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0];
n157 [label="new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), value, x.ToPython() })", span="162-162", cluster="lambda expression", color=red, community=0];
n142 [label="symbol.SecurityType == SecurityType.Option", span="166-166", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0];
n143 [label="tuples = time.Select(x => new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), symbol.ID.StrikePrice.ToPython(), symbol.ID.OptionRight.ToString().ToPython(), value, x.ToPython() }))", span="168-168", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0];
n160 [label="new PyTuple(new PyObject[] { symbol.ID.Date.ToPython(), symbol.ID.StrikePrice.ToPython(), symbol.ID.OptionRight.ToString().ToPython(), value, x.ToPython() })", span="168-168", cluster="lambda expression", color=red, community=0];
n147 [label="Entry QuantConnect.Symbol.ToString()", span="354-354", cluster="QuantConnect.Symbol.ToString()"];
n148 [label="Entry Unk.ToPython", span="", cluster="Unk.ToPython"];
n153 [label="new PyTuple(new PyObject[] { value, x.ToPython() })", span="157-157", cluster="lambda expression", color=red, community=0];
n138 [label="var names = ''symbol,time''", span="158-158", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0];
n152 [label="Entry lambda expression", span="157-157", cluster="lambda expression"];
n145 [label="return _pandas.MultiIndex.from_tuples(tuples.ToArray(), names: names.Split(','));", span="172-172", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0];
n141 [label="names = ''expiry,'' + names", span="163-163", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0];
n144 [label="names = ''expiry,strike,type,'' + names", span="169-169", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", color=red, community=0];
n156 [label="Entry lambda expression", span="162-162", cluster="lambda expression"];
n159 [label="Entry lambda expression", span="168-168", cluster="lambda expression"];
n146 [label="Exit QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)", span="154-154", cluster="QuantConnect.Python.PandasConverter.CreateIndex(QuantConnect.Symbol, System.Collections.Generic.IEnumerable<System.DateTime>)"];
n149 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray"];
n150 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
n151 [label="Entry Unk.from_tuples", span="", cluster="Unk.from_tuples"];
n154 [label="Exit lambda expression", span="157-157", cluster="lambda expression"];
n155 [label="Entry PyTuple.cstr", span="", cluster="PyTuple.cstr"];
n158 [label="Exit lambda expression", span="162-162", cluster="lambda expression"];
n161 [label="Exit lambda expression", span="168-168", cluster="lambda expression"];
n162 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()"];
n163 [label="Entry QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", span="180-180", cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)"];
n164 [label="Py.GIL()", span="182-182", cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)"];
n166 [label=data, span="186-186", cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=red, community=0];
n170 [label="return _pandas.DataFrame(pyDict, columns: data.Keys.Select(x => x.ToLower()).OrderBy(x => x));", span="193-193", cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=red, community=0];
n165 [label="var pyDict = new PyDict()", span="184-184", cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)"];
n169 [label="pyDict.SetItem(kvp.Key.ToLower(), _pandas.Series(values, index))", span="190-190", cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=red, community=0];
n167 [label="var index = kvp.Value.Select(x => x.EndTime).ToList()", span="188-188", cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=red, community=0];
n168 [label="var values = kvp.Value.Select(x => (double)x.Value).ToList()", span="189-189", cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", color=red, community=0];
n174 [label="Entry lambda expression", span="188-188", cluster="lambda expression"];
n177 [label="Entry lambda expression", span="189-189", cluster="lambda expression"];
n172 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()"];
n171 [label="Exit QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", span="180-180", cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)"];
n173 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy"];
n180 [label="Entry lambda expression", span="193-193", cluster="lambda expression"];
n183 [label="Entry lambda expression", span="193-193", cluster="lambda expression"];
n175 [label="x.EndTime", span="188-188", cluster="lambda expression", color=red, community=0];
n176 [label="Exit lambda expression", span="188-188", cluster="lambda expression"];
n178 [label="(double)x.Value", span="189-189", cluster="lambda expression", color=red, community=0];
n179 [label="Exit lambda expression", span="189-189", cluster="lambda expression"];
n181 [label="x.ToLower()", span="193-193", cluster="lambda expression", color=red, community=0];
n182 [label="Exit lambda expression", span="193-193", cluster="lambda expression"];
n184 [label=x, span="193-193", cluster="lambda expression", color=red, community=0];
n185 [label="Exit lambda expression", span="193-193", cluster="lambda expression"];
n186 [label="Entry QuantConnect.Python.PandasConverter.ToString()", span="201-201", cluster="QuantConnect.Python.PandasConverter.ToString()"];
n187 [label="return _pandas == null\r\n                ? ''pandas module was not imported.''\r\n                : _pandas.Repr();", span="203-205", cluster="QuantConnect.Python.PandasConverter.ToString()", color=red, community=0];
n188 [label="Exit QuantConnect.Python.PandasConverter.ToString()", span="201-201", cluster="QuantConnect.Python.PandasConverter.ToString()"];
n189 [label="Entry Unk.Repr", span="", cluster="Unk.Repr"];
d1 [label="SettlementType = SettlementType.Cash", span="64-64", cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", color=green, community=0];
d12 [label="QuantConnect.Securities.Future.Future", span=""];
d0 [label="Entry QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="47-47", cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)"];
d2 [label="ContractFilter = new ExpiryFutureFilter(TimeSpan.Zero, TimeSpan.FromDays(35))", span="65-65", cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)"];
d3 [label="Holdings = new FutureHolding(this)", span="66-66", cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", color=green, community=0];
d4 [label="_symbolProperties = symbolProperties", span="67-67", cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)"];
d8 [label="Entry QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", span="29-29", cluster="QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)"];
d10 [label="ContractFilter = new ExpiryFutureFilter(minExpiry, maxExpiry)", span="116-116", cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", color=green, community=0];
d9 [label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="114-114", cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)"];
d11 [label="Exit QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="114-114", cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)"];
d6 [label="Entry QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)", span="38-38", cluster="QuantConnect.Securities.ExpiryFutureFilter.ExpiryFutureFilter(System.TimeSpan, System.TimeSpan)"];
d5 [label="Exit QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="47-47", cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)"];
d7 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)"];
m0_161 [label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80", cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="PandasConverterTests.cs"];
m0_18 [label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", span="235-235", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs"];
m0_151 [label="var subscriptionDataConfig = GetSubscriptionDataConfig<T>(symbol, resolution)", span="238-238", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverterTests.cs"];
m0_152 [label="var security = GetSecurity(subscriptionDataConfig)", span="239-239", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PandasConverterTests.cs"];
m0_153 [label="return data.Select(t => TimeSlice.Create(\r\n               t.Time,\r\n               TimeZones.Utc,\r\n               new CashBook(),\r\n               new List<DataFeedPacket> { new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() { t as BaseData }) },\r\n               new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>())).Slice);", span="241-246", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", color=green, community=1, file="PandasConverterTests.cs"];
m0_154 [label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", span="235-235", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs"];
m0_160 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="PandasConverterTests.cs"];
m0_162 [label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58", cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="PandasConverterTests.cs"];
m0_102 [label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", span="169-169", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="PandasConverterTests.cs"];
m0_117 [label="i < count", span="200-200", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_133 [label="i < count", span="224-224", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_103 [label="var converter = new PandasConverter()", span="171-171", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_104 [label="var symbol = Symbols.LTCUSD", span="172-172", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_109 [label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="188-188", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_125 [label="dataFrame = converter.GetDataFrame(history)", span="212-212", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_105 [label="var config = GetSubscriptionDataConfig<Quandl>(symbol, Resolution.Daily)", span="174-174", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_112 [label="var subDataFrame = dataFrame.loc[symbol]", span="194-194", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_124 [label="var history = GetHistory(symbol, Resolution.Daily, rawBars)", span="211-211", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_128 [label="var subDataFrame = dataFrame.loc[symbol]", span="218-218", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_108 [label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i =>\r\n                {\r\n                    var line = $''{DateTime.UtcNow.AddDays(i).ToString(''yyyy-MM-dd'')},{i + 101},{i + 102},{i + 100},{i + 101},{i + 101}'';\r\n                    return quandl.Reader(config, line, DateTime.UtcNow.AddDays(i), false);\r\n                })\r\n                .ToArray()", span="178-185", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=1, file="PandasConverterTests.cs"];
m0_110 [label="Py.GIL()", span="190-190", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_111 [label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="192-192", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_126 [label="Py.GIL()", span="214-214", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_127 [label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="216-216", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_106 [label="var quandl = new Quandl()", span="175-175", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_107 [label="quandl.Reader(config, ''date,open,high,low,close,settle'', DateTime.UtcNow, false)", span="176-176", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_113 [label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="195-195", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_114 [label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="197-197", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_118 [label="var index = subDataFrame.index[i]", span="202-202", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_119 [label="var value = subDataFrame.loc[index].value.AsManagedObject(typeof(decimal))", span="203-203", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_121 [label="var settle = subDataFrame.loc[index].settle.AsManagedObject(typeof(decimal))", span="205-205", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_129 [label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="219-219", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_130 [label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="221-221", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_134 [label="var index = subDataFrame.index[i]", span="226-226", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_135 [label="var value = subDataFrame.loc[index].value.AsManagedObject(typeof(decimal))", span="227-227", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_137 [label="var settle = subDataFrame.loc[index].settle.AsManagedObject(typeof(decimal))", span="229-229", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_120 [label="Assert.AreEqual(rawBars[i].Value, value)", span="204-204", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_122 [label="Assert.AreEqual(((DynamicData)rawBars[i]).GetProperty(''settle''), settle)", span="206-206", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_136 [label="Assert.AreEqual(rawBars[i].Value, value)", span="228-228", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_138 [label="Assert.AreEqual(((DynamicData)rawBars[i]).GetProperty(''settle''), settle)", span="230-230", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_116 [label="var i = 0", span="200-200", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_123 [label="i++", span="200-200", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_132 [label="var i = 0", span="224-224", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_139 [label="i++", span="224-224", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_115 [label="Assert.AreEqual(count, 10)", span="198-198", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_131 [label="Assert.AreEqual(count, 10)", span="222-222", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_140 [label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", span="169-169", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="PandasConverterTests.cs"];
m0_156 [label="Entry lambda expression", span="241-246", cluster="lambda expression", file="PandasConverterTests.cs"];
m0_61 [label="new TradeBar(DateTime.UtcNow.AddMinutes(i), symbol, i + 101m, i + 102m, i + 100m, i + 101m, 0m)", span="66-66", cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs"];
m0_60 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="PandasConverterTests.cs"];
m0_62 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="PandasConverterTests.cs"];
m0_98 [label="new QuoteBar(DateTime.UtcNow.AddMinutes(i), symbol, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m)", span="121-121", cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs"];
m0_97 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="PandasConverterTests.cs"];
m0_99 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="PandasConverterTests.cs"];
m0_147 [label="return quandl.Reader(config, line, DateTime.UtcNow.AddDays(i), false);", span="183-183", cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs"];
m0_145 [label="Entry lambda expression", span="180-184", cluster="lambda expression", file="PandasConverterTests.cs"];
m0_146 [label="var line = $''{DateTime.UtcNow.AddDays(i).ToString(''yyyy-MM-dd'')},{i + 101},{i + 102},{i + 100},{i + 101},{i + 101}''", span="182-182", cluster="lambda expression", color=green, community=0, file="PandasConverterTests.cs"];
m0_148 [label="Exit lambda expression", span="180-184", cluster="lambda expression", file="PandasConverterTests.cs"];
m0_157 [label="TimeSlice.Create(\r\n               t.Time,\r\n               TimeZones.Utc,\r\n               new CashBook(),\r\n               new List<DataFeedPacket> { new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() { t as BaseData }) },\r\n               new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>())).Slice", span="241-246", cluster="lambda expression", color=green, community=1, file="PandasConverterTests.cs"];
m0_158 [label="Exit lambda expression", span="241-246", cluster="lambda expression", file="PandasConverterTests.cs"];
m0_56 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="PandasConverterTests.cs"];
m0_101 [label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58", cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="PandasConverterTests.cs"];
m0_166 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="PandasConverterTests.cs"];
m0_159 [label="Entry QuantConnect.Securities.CashBook.CashBook()", span="50-50", cluster="QuantConnect.Securities.CashBook.CashBook()", file="PandasConverterTests.cs"];
m0_11 [label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36", cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="PandasConverterTests.cs"];
m0_100 [label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217", cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="PandasConverterTests.cs"];
m0_17 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="PandasConverterTests.cs"];
m0_150 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="PandasConverterTests.cs"];
m0_163 [label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110", cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PandasConverterTests.cs"];
m0_142 [label="Entry QuantConnect.Data.Custom.Quandl.Quandl()", span="62-62", cluster="QuantConnect.Data.Custom.Quandl.Quandl()", file="PandasConverterTests.cs"];
m0_14 [label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="91-91", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs"];
m0_149 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="PandasConverterTests.cs"];
m0_170 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="PandasConverterTests.cs"];
m0_58 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="PandasConverterTests.cs"];
m0_13 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="PandasConverterTests.cs"];
m0_59 [label="Entry Unk.GetHistory", span="", cluster="Unk.GetHistory", file="PandasConverterTests.cs"];
m0_65 [label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", span="114-114", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs"];
m0_77 [label="i < count", span="137-137", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_91 [label="i < count", span="159-159", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_66 [label="var converter = new PandasConverter()", span="116-116", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_67 [label="var symbol = Symbols.EURUSD", span="117-117", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_69 [label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="125-125", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_83 [label="dataFrame = converter.GetDataFrame(history)", span="147-147", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_68 [label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new QuoteBar(DateTime.UtcNow.AddMinutes(i), symbol, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m))\r\n                .ToArray()", span="119-122", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=1, file="PandasConverterTests.cs"];
m0_72 [label="var subDataFrame = dataFrame.loc[symbol]", span="131-131", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_82 [label="var history = GetHistory(symbol, Resolution.Minute, rawBars)", span="146-146", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_86 [label="var subDataFrame = dataFrame.loc[symbol]", span="153-153", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_70 [label="Py.GIL()", span="127-127", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_71 [label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="129-129", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_84 [label="Py.GIL()", span="149-149", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_85 [label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="151-151", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_80 [label="Assert.AreEqual(rawBars[i].Close, close)", span="141-141", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_94 [label="Assert.AreEqual(rawBars[i].Ask.Close, close)", span="163-163", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_73 [label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="132-132", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_74 [label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="134-134", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_78 [label="var index = subDataFrame.index[i]", span="139-139", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_79 [label="var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="140-140", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_87 [label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="154-154", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_88 [label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="156-156", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_92 [label="var index = subDataFrame.index[i]", span="161-161", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_93 [label="var close = subDataFrame.loc[index].askclose.AsManagedObject(typeof(decimal))", span="162-162", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_76 [label="var i = 0", span="137-137", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_81 [label="i++", span="137-137", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_90 [label="var i = 0", span="159-159", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_95 [label="i++", span="159-159", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_75 [label="Assert.AreEqual(count, 10)", span="135-135", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_89 [label="Assert.AreEqual(count, 10)", span="157-157", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_96 [label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", span="114-114", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs"];
m0_12 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="PandasConverterTests.cs"];
m0_52 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="PandasConverterTests.cs"];
m0_0 [label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", span="35-35", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs"];
m0_1 [label="var converter = new PandasConverter()", span="37-37", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs"];
m0_2 [label="var rawBars = Enumerable.Empty<TradeBar>().ToArray()", span="38-38", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs"];
m0_3 [label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="41-41", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs"];
m0_7 [label="dataFrame = converter.GetDataFrame(history)", span="50-50", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs"];
m0_6 [label="var history = GetHistory(Symbols.SPY, Resolution.Minute, rawBars)", span="49-49", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs"];
m0_4 [label="Py.GIL()", span="43-43", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs"];
m0_5 [label="Assert.IsTrue(dataFrame.empty.AsManagedObject(typeof(bool)))", span="45-45", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs"];
m0_8 [label="Py.GIL()", span="52-52", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs"];
m0_9 [label="Assert.IsTrue(dataFrame.empty.AsManagedObject(typeof(bool)))", span="54-54", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", color=green, community=0, file="PandasConverterTests.cs"];
m0_10 [label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", span="35-35", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs"];
m0_169 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="317-317", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="PandasConverterTests.cs"];
m0_15 [label="Entry Unk.GIL", span="", cluster="Unk.GIL", file="PandasConverterTests.cs"];
m0_57 [label="Entry Unk.__len__", span="", cluster="Unk.__len__", file="PandasConverterTests.cs"];
m0_144 [label="Entry QuantConnect.Data.DynamicData.GetProperty(string)", span="83-83", cluster="QuantConnect.Data.DynamicData.GetProperty(string)", file="PandasConverterTests.cs"];
m0_172 [label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84", cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="PandasConverterTests.cs"];
m0_55 [label="Entry Unk.GetDataFrame", span="", cluster="Unk.GetDataFrame", file="PandasConverterTests.cs"];
m0_155 [label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", span="262-262", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="PandasConverterTests.cs"];
m0_167 [label="return new Security(\r\n                SecurityExchangeHours.AlwaysOpen(TimeZones.Utc),\r\n                subscriptionDataConfig,\r\n                new Cash(CashBook.AccountCurrency, 0, 1m),\r\n                SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="264-268", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", color=green, community=1, file="PandasConverterTests.cs"];
m0_168 [label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", span="262-262", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="PandasConverterTests.cs"];
m0_143 [label="Entry QuantConnect.Data.Custom.Quandl.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="83-83", cluster="QuantConnect.Data.Custom.Quandl.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="PandasConverterTests.cs"];
m0_64 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="PandasConverterTests.cs"];
m0_19 [label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PandasConverterTests.cs"];
m0_141 [label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", span="249-249", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="PandasConverterTests.cs"];
m0_164 [label="return new SubscriptionDataConfig(\r\n                typeof(T),\r\n                symbol,\r\n                resolution,\r\n                TimeZones.Utc,\r\n                TimeZones.Utc,\r\n                true,\r\n                true,\r\n                false);", span="251-259", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", color=green, community=1, file="PandasConverterTests.cs"];
m0_165 [label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", span="249-249", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="PandasConverterTests.cs"];
m0_171 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="PandasConverterTests.cs"];
m0_16 [label="Entry Unk.AsManagedObject", span="", cluster="Unk.AsManagedObject", file="PandasConverterTests.cs"];
m0_53 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="PandasConverterTests.cs"];
m0_63 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158", cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="PandasConverterTests.cs"];
m0_20 [label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", span="59-59", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs"];
m0_21 [label="var converter = new PandasConverter()", span="61-61", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_22 [label="var symbol = Symbols.SPY", span="62-62", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_24 [label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="70-70", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_38 [label="dataFrame = converter.GetDataFrame(history)", span="92-92", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_23 [label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new TradeBar(DateTime.UtcNow.AddMinutes(i), symbol, i + 101m, i + 102m, i + 100m, i + 101m, 0m))\r\n                .ToArray()", span="64-67", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=1, file="PandasConverterTests.cs"];
m0_27 [label="var subDataFrame = dataFrame.loc[symbol]", span="76-76", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_37 [label="var history = GetHistory(symbol, Resolution.Minute, rawBars)", span="91-91", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_41 [label="var subDataFrame = dataFrame.loc[symbol]", span="98-98", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_25 [label="Py.GIL()", span="72-72", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_26 [label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="74-74", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_39 [label="Py.GIL()", span="94-94", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_40 [label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="96-96", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_35 [label="Assert.AreEqual(rawBars[i].Close, close)", span="86-86", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_49 [label="Assert.AreEqual(rawBars[i].Close, close)", span="108-108", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_28 [label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="77-77", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_29 [label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="79-79", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_33 [label="var index = subDataFrame.index[i]", span="84-84", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_34 [label="var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="85-85", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_32 [label="i < count", span="82-82", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_42 [label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="99-99", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_43 [label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="101-101", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_47 [label="var index = subDataFrame.index[i]", span="106-106", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_48 [label="var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="107-107", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_31 [label="var i = 0", span="82-82", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_36 [label="i++", span="82-82", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_45 [label="var i = 0", span="104-104", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_50 [label="i++", span="104-104", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_30 [label="Assert.AreEqual(count, 10)", span="80-80", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_46 [label="i < count", span="104-104", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_44 [label="Assert.AreEqual(count, 10)", span="102-102", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", color=green, community=0, file="PandasConverterTests.cs"];
m0_51 [label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", span="59-59", cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs"];
m0_173 [label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", span="", file="PandasConverterTests.cs"];
m0_174 [label=symbol, span="", file="PandasConverterTests.cs"];
m0_175 [label=symbol, span="", file="PandasConverterTests.cs"];
m0_176 [label=config, span="", file="PandasConverterTests.cs"];
m0_177 [label=quandl, span="", file="PandasConverterTests.cs"];
m0_178 [label=subscriptionDataConfig, span="", file="PandasConverterTests.cs"];
m0_179 [label=security, span="", file="PandasConverterTests.cs"];
n190 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Python.PandasConverter"];
n190 -> n18  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n21  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n22  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n46  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n48  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n50  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n51  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n52  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n53  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n56  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n59  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n60  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n61  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n62  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n63  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n64  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n65  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n66  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n67  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n68  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n69  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n145  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n169  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n170  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n190 -> n187  [key=1, style=dashed, color=red, label="QuantConnect.Python.PandasConverter"];
n191 -> n99  [key=1, style=dashed, color=red, label=getVolume];
n192 -> n106  [key=1, style=dashed, color=red, label=toQuoteBar];
n192 -> n109  [key=1, style=dashed, color=red, label=toQuoteBar];
n192 -> n112  [key=1, style=dashed, color=red, label=toQuoteBar];
n192 -> n115  [key=1, style=dashed, color=red, label=toQuoteBar];
n192 -> n118  [key=1, style=dashed, color=red, label=toQuoteBar];
n192 -> n121  [key=1, style=dashed, color=red, label=toQuoteBar];
n192 -> n124  [key=1, style=dashed, color=red, label=toQuoteBar];
n192 -> n127  [key=1, style=dashed, color=red, label=toQuoteBar];
n192 -> n130  [key=1, style=dashed, color=red, label=toQuoteBar];
n192 -> n133  [key=1, style=dashed, color=red, label=toQuoteBar];
n193 -> n153  [key=1, style=dashed, color=red, label=value];
n193 -> n157  [key=1, style=dashed, color=red, label=value];
n193 -> n160  [key=1, style=dashed, color=red, label=value];
n194 -> n157  [key=1, style=dashed, color=red, label="QuantConnect.Symbol"];
n194 -> n160  [key=1, style=dashed, color=red, label="QuantConnect.Symbol"];
n0 -> n1  [key=0, style=solid];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n7  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n8  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n9  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n7 -> n0  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n6 -> n10  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid, color=red];
n11 -> n21  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>"];
n11 -> n18  [key=3, color=red, style=bold, label="method methodReturn PyObject GetDataFrame"];
n12 -> n13  [key=0, style=solid, color=red];
n12 -> n25  [key=2, style=dotted, color=red];
n12 -> n26  [key=2, style=dotted, color=red];
n12 -> n27  [key=2, style=dotted, color=red];
n12 -> n36  [key=1, style=dashed, color=red, label="lambda expression"];
n12 -> n39  [key=1, style=dashed, color=red, label="lambda expression"];
n12 -> n14  [key=1, style=dashed, color=red, label=symbols];
n12 -> n19  [key=1, style=dashed, color=red, label=symbols];
n21 -> n22  [key=0, style=solid, color=red];
n21 -> n32  [key=2, style=dotted, color=red];
n21 -> n33  [key=2, style=dotted, color=red];
n13 -> n14  [key=0, style=solid, color=red];
n13 -> n20  [key=1, style=dashed, color=red, label=underlying];
n13 -> n13  [key=3, color=red, style=bold, label="Local variable QuantConnect.Symbol underlying"];
n36 -> n37  [key=0, style=solid, color=red];
n39 -> n40  [key=0, style=solid, color=red];
n14 -> n15  [key=0, style=solid, color=red];
n14 -> n28  [key=2, style=dotted, color=red];
n14 -> n42  [key=1, style=dashed, color=red, label="lambda expression"];
n14 -> n16  [key=1, style=dashed, color=red, label=derivatives];
n19 -> n20  [key=0, style=solid, color=red];
n19 -> n23  [key=0, style=solid, color=red];
n19 -> n21  [key=1, style=dashed, color=red, label=symbol];
n20 -> n21  [key=0, style=solid, color=red];
n20 -> n19  [key=0, style=solid, color=red];
n15 -> n16  [key=0, style=solid, color=red];
n15 -> n17  [key=0, style=solid, color=red];
n15 -> n29  [key=2, style=dotted, color=red];
n42 -> n43  [key=0, style=solid, color=red];
n16 -> n17  [key=0, style=solid, color=red];
n16 -> n30  [key=2, style=dotted, color=red];
n16 -> n20  [key=1, style=dashed, color=red, label=underlying];
n17 -> n18  [key=0, style=solid, color=red];
n17 -> n8  [key=2, style=dotted, color=red];
n18 -> n19  [key=0, style=solid, color=red];
n18 -> n31  [key=2, style=dotted, color=red];
n18 -> n21  [key=1, style=dashed, color=red, label=dataFrame];
n18 -> n23  [key=1, style=dashed, color=red, label=dataFrame];
n23 -> n24  [key=0, style=solid, color=red];
n22 -> n19  [key=0, style=solid, color=red];
n22 -> n34  [key=2, style=dotted, color=red];
n22 -> n35  [key=2, style=dotted, color=red];
n22 -> n23  [key=1, style=dashed, color=red, label=dataFrame];
n33 -> n45  [key=0, style=solid, color=red];
n33 -> n48  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n50  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n51  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n52  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n53  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n56  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n59  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n60  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n61  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n62  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n63  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n64  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n65  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n66  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n67  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n33 -> n68  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<T>"];
n24 -> n11  [key=0, style=bold, color=blue];
n37 -> n38  [key=0, style=solid, color=red];
n38 -> n36  [key=0, style=bold, color=blue];
n40 -> n41  [key=0, style=solid, color=red];
n41 -> n39  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid, color=red];
n44 -> n42  [key=0, style=bold, color=blue];
n45 -> n46  [key=0, style=solid, color=red];
n45 -> n47  [key=0, style=solid, color=red];
n45 -> n71  [key=2, style=dotted, color=red];
n48 -> n49  [key=0, style=solid, color=red];
n48 -> n72  [key=2, style=dotted, color=red];
n48 -> n73  [key=2, style=dotted, color=red];
n48 -> n74  [key=2, style=dotted, color=red];
n48 -> n79  [key=1, style=dashed, color=red, label="lambda expression"];
n48 -> n50  [key=1, style=dashed, color=red, label=index];
n48 -> n51  [key=1, style=dashed, color=red, label=index];
n48 -> n52  [key=1, style=dashed, color=red, label=index];
n48 -> n53  [key=1, style=dashed, color=red, label=index];
n48 -> n56  [key=1, style=dashed, color=red, label=index];
n48 -> n59  [key=1, style=dashed, color=red, label=index];
n48 -> n60  [key=1, style=dashed, color=red, label=index];
n48 -> n61  [key=1, style=dashed, color=red, label=index];
n48 -> n62  [key=1, style=dashed, color=red, label=index];
n48 -> n63  [key=1, style=dashed, color=red, label=index];
n48 -> n64  [key=1, style=dashed, color=red, label=index];
n48 -> n65  [key=1, style=dashed, color=red, label=index];
n48 -> n66  [key=1, style=dashed, color=red, label=index];
n48 -> n67  [key=1, style=dashed, color=red, label=index];
n48 -> n68  [key=1, style=dashed, color=red, label=index];
n50 -> n51  [key=0, style=solid, color=red];
n50 -> n73  [key=2, style=dotted, color=red];
n50 -> n76  [key=2, style=dotted, color=red];
n50 -> n77  [key=2, style=dotted, color=red];
n50 -> n78  [key=2, style=dotted, color=red];
n50 -> n82  [key=1, style=dashed, color=red, label="lambda expression"];
n51 -> n52  [key=0, style=solid, color=red];
n51 -> n73  [key=2, style=dotted, color=red];
n51 -> n76  [key=2, style=dotted, color=red];
n51 -> n77  [key=2, style=dotted, color=red];
n51 -> n78  [key=2, style=dotted, color=red];
n51 -> n85  [key=1, style=dashed, color=red, label="lambda expression"];
n52 -> n53  [key=0, style=solid, color=red];
n52 -> n73  [key=2, style=dotted, color=red];
n52 -> n76  [key=2, style=dotted, color=red];
n52 -> n77  [key=2, style=dotted, color=red];
n52 -> n78  [key=2, style=dotted, color=red];
n52 -> n88  [key=1, style=dashed, color=red, label="lambda expression"];
n53 -> n54  [key=0, style=solid, color=red];
n53 -> n73  [key=2, style=dotted, color=red];
n53 -> n76  [key=2, style=dotted, color=red];
n53 -> n77  [key=2, style=dotted, color=red];
n53 -> n78  [key=2, style=dotted, color=red];
n53 -> n91  [key=1, style=dashed, color=red, label="lambda expression"];
n56 -> n57  [key=0, style=solid, color=red];
n56 -> n73  [key=2, style=dotted, color=red];
n56 -> n76  [key=2, style=dotted, color=red];
n56 -> n77  [key=2, style=dotted, color=red];
n56 -> n78  [key=2, style=dotted, color=red];
n56 -> n98  [key=1, style=dashed, color=red, label="lambda expression"];
n59 -> n60  [key=0, style=solid, color=red];
n59 -> n73  [key=2, style=dotted, color=red];
n59 -> n76  [key=2, style=dotted, color=red];
n59 -> n77  [key=2, style=dotted, color=red];
n59 -> n78  [key=2, style=dotted, color=red];
n59 -> n105  [key=1, style=dashed, color=red, label="lambda expression"];
n60 -> n61  [key=0, style=solid, color=red];
n60 -> n73  [key=2, style=dotted, color=red];
n60 -> n76  [key=2, style=dotted, color=red];
n60 -> n77  [key=2, style=dotted, color=red];
n60 -> n78  [key=2, style=dotted, color=red];
n60 -> n108  [key=1, style=dashed, color=red, label="lambda expression"];
n61 -> n62  [key=0, style=solid, color=red];
n61 -> n73  [key=2, style=dotted, color=red];
n61 -> n76  [key=2, style=dotted, color=red];
n61 -> n77  [key=2, style=dotted, color=red];
n61 -> n78  [key=2, style=dotted, color=red];
n61 -> n111  [key=1, style=dashed, color=red, label="lambda expression"];
n62 -> n63  [key=0, style=solid, color=red];
n62 -> n73  [key=2, style=dotted, color=red];
n62 -> n76  [key=2, style=dotted, color=red];
n62 -> n77  [key=2, style=dotted, color=red];
n62 -> n78  [key=2, style=dotted, color=red];
n62 -> n114  [key=1, style=dashed, color=red, label="lambda expression"];
n63 -> n64  [key=0, style=solid, color=red];
n63 -> n73  [key=2, style=dotted, color=red];
n63 -> n76  [key=2, style=dotted, color=red];
n63 -> n77  [key=2, style=dotted, color=red];
n63 -> n78  [key=2, style=dotted, color=red];
n63 -> n117  [key=1, style=dashed, color=red, label="lambda expression"];
n64 -> n65  [key=0, style=solid, color=red];
n64 -> n73  [key=2, style=dotted, color=red];
n64 -> n76  [key=2, style=dotted, color=red];
n64 -> n77  [key=2, style=dotted, color=red];
n64 -> n78  [key=2, style=dotted, color=red];
n64 -> n120  [key=1, style=dashed, color=red, label="lambda expression"];
n65 -> n66  [key=0, style=solid, color=red];
n65 -> n73  [key=2, style=dotted, color=red];
n65 -> n76  [key=2, style=dotted, color=red];
n65 -> n77  [key=2, style=dotted, color=red];
n65 -> n78  [key=2, style=dotted, color=red];
n65 -> n123  [key=1, style=dashed, color=red, label="lambda expression"];
n66 -> n67  [key=0, style=solid, color=red];
n66 -> n73  [key=2, style=dotted, color=red];
n66 -> n76  [key=2, style=dotted, color=red];
n66 -> n77  [key=2, style=dotted, color=red];
n66 -> n78  [key=2, style=dotted, color=red];
n66 -> n126  [key=1, style=dashed, color=red, label="lambda expression"];
n67 -> n68  [key=0, style=solid, color=red];
n67 -> n73  [key=2, style=dotted, color=red];
n67 -> n76  [key=2, style=dotted, color=red];
n67 -> n77  [key=2, style=dotted, color=red];
n67 -> n78  [key=2, style=dotted, color=red];
n67 -> n129  [key=1, style=dashed, color=red, label="lambda expression"];
n68 -> n69  [key=0, style=solid, color=red];
n68 -> n73  [key=2, style=dotted, color=red];
n68 -> n76  [key=2, style=dotted, color=red];
n68 -> n77  [key=2, style=dotted, color=red];
n68 -> n78  [key=2, style=dotted, color=red];
n68 -> n132  [key=1, style=dashed, color=red, label="lambda expression"];
n46 -> n70  [key=0, style=solid, color=red];
n46 -> n31  [key=2, style=dotted, color=red];
n47 -> n48  [key=0, style=solid, color=red];
n47 -> n8  [key=2, style=dotted, color=red];
n49 -> n50  [key=0, style=solid, color=red];
n49 -> n75  [key=2, style=dotted];
n49 -> n51  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n52  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n53  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n56  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n59  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n60  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n61  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n62  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n63  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n64  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n65  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n66  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n67  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n68  [key=1, style=dashed, color=red, label=pyDict];
n49 -> n69  [key=1, style=dashed, color=red, label=pyDict];
n79 -> n80  [key=0, style=solid, color=red];
n69 -> n70  [key=0, style=solid, color=red];
n69 -> n31  [key=2, style=dotted, color=red];
n82 -> n83  [key=0, style=solid, color=red];
n85 -> n86  [key=0, style=solid, color=red];
n88 -> n89  [key=0, style=solid, color=red];
n54 -> n55  [key=0, style=solid, color=red];
n54 -> n57  [key=0, style=solid, color=red];
n91 -> n92  [key=0, style=solid, color=red];
n55 -> n56  [key=0, style=solid, color=red];
n55 -> n95  [key=1, style=dashed, color=red, label="QuantConnect.Data.Market.IBaseDataBar"];
n55 -> n99  [key=1, style=dashed, color=red, label=getVolume];
n55 -> n55  [key=3, color=red, style=bold, label="Local variable System.Func<QuantConnect.Data.Market.IBaseDataBar, double> getVolume"];
n57 -> n58  [key=0, style=solid, color=red];
n57 -> n69  [key=0, style=solid, color=red];
n95 -> n96  [key=0, style=solid, color=red];
n99 -> n100  [key=0, style=solid, color=red];
n99 -> n101  [key=2, style=dotted, color=red];
n98 -> n99  [key=0, style=solid, color=red];
n58 -> n59  [key=0, style=solid, color=red];
n58 -> n103  [key=1, style=dashed, color=red, label="QuantConnect.Data.Market.IBaseDataBar"];
n58 -> n106  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n60  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n109  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n61  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n112  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n62  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n115  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n63  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n118  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n64  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n121  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n65  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n124  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n66  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n127  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n67  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n130  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n68  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n133  [key=1, style=dashed, color=red, label=toQuoteBar];
n58 -> n58  [key=3, color=red, style=bold, label="Local variable System.Func<QuantConnect.Data.Market.IBaseDataBar, QuantConnect.Data.Market.QuoteBar> toQuoteBar"];
n103 -> n104  [key=0, style=solid, color=red];
n106 -> n107  [key=0, style=solid, color=red];
n106 -> n101  [key=2, style=dotted, color=red];
n109 -> n110  [key=0, style=solid, color=red];
n109 -> n101  [key=2, style=dotted, color=red];
n112 -> n113  [key=0, style=solid, color=red];
n112 -> n101  [key=2, style=dotted, color=red];
n115 -> n116  [key=0, style=solid, color=red];
n115 -> n101  [key=2, style=dotted, color=red];
n118 -> n119  [key=0, style=solid, color=red];
n118 -> n101  [key=2, style=dotted, color=red];
n121 -> n122  [key=0, style=solid, color=red];
n121 -> n101  [key=2, style=dotted, color=red];
n124 -> n125  [key=0, style=solid, color=red];
n124 -> n101  [key=2, style=dotted, color=red];
n127 -> n128  [key=0, style=solid, color=red];
n127 -> n101  [key=2, style=dotted, color=red];
n130 -> n131  [key=0, style=solid, color=red];
n130 -> n101  [key=2, style=dotted, color=red];
n133 -> n134  [key=0, style=solid, color=red];
n133 -> n101  [key=2, style=dotted, color=red];
n105 -> n106  [key=0, style=solid, color=red];
n108 -> n109  [key=0, style=solid, color=red];
n111 -> n112  [key=0, style=solid, color=red];
n114 -> n115  [key=0, style=solid, color=red];
n117 -> n118  [key=0, style=solid, color=red];
n120 -> n121  [key=0, style=solid, color=red];
n123 -> n124  [key=0, style=solid, color=red];
n126 -> n127  [key=0, style=solid, color=red];
n129 -> n130  [key=0, style=solid, color=red];
n132 -> n133  [key=0, style=solid, color=red];
n70 -> n33  [key=0, style=bold, color=blue];
n80 -> n81  [key=0, style=solid, color=red];
n81 -> n79  [key=0, style=bold, color=blue];
n83 -> n84  [key=0, style=solid, color=red];
n84 -> n82  [key=0, style=bold, color=blue];
n86 -> n87  [key=0, style=solid, color=red];
n87 -> n85  [key=0, style=bold, color=blue];
n89 -> n90  [key=0, style=solid, color=red];
n90 -> n88  [key=0, style=bold, color=blue];
n92 -> n93  [key=0, style=solid, color=red];
n93 -> n91  [key=0, style=bold, color=blue];
n94 -> n95  [key=0, style=solid, color=red];
n96 -> n97  [key=0, style=solid, color=red];
n97 -> n94  [key=0, style=bold, color=blue];
n100 -> n98  [key=0, style=bold, color=blue];
n102 -> n103  [key=0, style=solid, color=red];
n104 -> n102  [key=0, style=bold, color=blue];
n107 -> n105  [key=0, style=bold, color=blue];
n110 -> n108  [key=0, style=bold, color=blue];
n113 -> n111  [key=0, style=bold, color=blue];
n116 -> n114  [key=0, style=bold, color=blue];
n119 -> n117  [key=0, style=bold, color=blue];
n122 -> n120  [key=0, style=bold, color=blue];
n125 -> n123  [key=0, style=bold, color=blue];
n128 -> n126  [key=0, style=bold, color=blue];
n131 -> n129  [key=0, style=bold, color=blue];
n134 -> n132  [key=0, style=bold, color=blue];
n135 -> n136  [key=0, style=solid, color=red];
n135 -> n137  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<System.DateTime>"];
n135 -> n139  [key=1, style=dashed, color=red, label="QuantConnect.Symbol"];
n135 -> n140  [key=1, style=dashed, color=red, label="QuantConnect.Symbol"];
n135 -> n157  [key=1, style=dashed, color=red, label="QuantConnect.Symbol"];
n135 -> n142  [key=1, style=dashed, color=red, label="QuantConnect.Symbol"];
n135 -> n143  [key=1, style=dashed, color=red, label="QuantConnect.Symbol"];
n135 -> n160  [key=1, style=dashed, color=red, label="QuantConnect.Symbol"];
n136 -> n137  [key=0, style=solid, color=red];
n136 -> n147  [key=2, style=dotted, color=red];
n136 -> n148  [key=2, style=dotted, color=red];
n136 -> n153  [key=1, style=dashed, color=red, label=value];
n136 -> n140  [key=1, style=dashed, color=red, label=value];
n136 -> n157  [key=1, style=dashed, color=red, label=value];
n136 -> n143  [key=1, style=dashed, color=red, label=value];
n136 -> n160  [key=1, style=dashed, color=red, label=value];
n137 -> n138  [key=0, style=solid, color=red];
n137 -> n73  [key=2, style=dotted, color=red];
n137 -> n152  [key=1, style=dashed, color=red, label="lambda expression"];
n137 -> n145  [key=1, style=dashed, color=red, label=tuples];
n139 -> n140  [key=0, style=solid, color=red];
n139 -> n142  [key=0, style=solid, color=red];
n140 -> n141  [key=0, style=solid, color=red];
n140 -> n73  [key=2, style=dotted, color=red];
n140 -> n156  [key=1, style=dashed, color=red, label="lambda expression"];
n140 -> n145  [key=1, style=dashed, color=red, label=tuples];
n157 -> n158  [key=0, style=solid, color=red];
n157 -> n155  [key=2, style=dotted, color=red];
n157 -> n148  [key=2, style=dotted, color=red];
n142 -> n143  [key=0, style=solid, color=red];
n142 -> n145  [key=0, style=solid, color=red];
n143 -> n144  [key=0, style=solid, color=red];
n143 -> n73  [key=2, style=dotted, color=red];
n143 -> n159  [key=1, style=dashed, color=red, label="lambda expression"];
n143 -> n145  [key=1, style=dashed, color=red, label=tuples];
n160 -> n161  [key=0, style=solid, color=red];
n160 -> n155  [key=2, style=dotted, color=red];
n160 -> n148  [key=2, style=dotted, color=red];
n160 -> n162  [key=2, style=dotted, color=red];
n153 -> n154  [key=0, style=solid, color=red];
n153 -> n155  [key=2, style=dotted, color=red];
n153 -> n148  [key=2, style=dotted, color=red];
n138 -> n139  [key=0, style=solid, color=red];
n138 -> n141  [key=1, style=dashed, color=red, label=names];
n138 -> n144  [key=1, style=dashed, color=red, label=names];
n138 -> n145  [key=1, style=dashed, color=red, label=names];
n138 -> n138  [key=3, color=red, style=bold, label="Local variable string names"];
n152 -> n153  [key=0, style=solid, color=red];
n145 -> n146  [key=0, style=solid, color=red];
n145 -> n149  [key=2, style=dotted, color=red];
n145 -> n150  [key=2, style=dotted, color=red];
n145 -> n151  [key=2, style=dotted, color=red];
n141 -> n142  [key=0, style=solid, color=red];
n141 -> n141  [key=1, style=dashed, color=red, label=names];
n141 -> n144  [key=1, style=dashed, color=red, label=names];
n141 -> n145  [key=1, style=dashed, color=red, label=names];
n144 -> n145  [key=0, style=solid, color=red];
n144 -> n144  [key=1, style=dashed, color=red, label=names];
n156 -> n157  [key=0, style=solid, color=red];
n159 -> n160  [key=0, style=solid, color=red];
n146 -> n135  [key=0, style=bold, color=blue];
n154 -> n152  [key=0, style=bold, color=blue];
n158 -> n156  [key=0, style=bold, color=blue];
n161 -> n159  [key=0, style=bold, color=blue];
n163 -> n164  [key=0, style=solid];
n163 -> n166  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>"];
n163 -> n170  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>"];
n164 -> n165  [key=0, style=solid];
n164 -> n8  [key=2, style=dotted];
n166 -> n167  [key=0, style=solid, color=red];
n166 -> n170  [key=0, style=solid, color=red];
n170 -> n171  [key=0, style=solid, color=red];
n170 -> n73  [key=2, style=dotted, color=red];
n170 -> n173  [key=2, style=dotted, color=red];
n170 -> n31  [key=2, style=dotted, color=red];
n170 -> n180  [key=1, style=dashed, color=red, label="lambda expression"];
n170 -> n183  [key=1, style=dashed, color=red, label="lambda expression"];
n165 -> n166  [key=0, style=solid, color=red];
n165 -> n75  [key=2, style=dotted];
n165 -> n169  [key=1, style=dashed, color=red, label=pyDict];
n165 -> n170  [key=1, style=dashed, color=red, label=pyDict];
n169 -> n166  [key=0, style=solid, color=red];
n169 -> n172  [key=2, style=dotted, color=red];
n169 -> n77  [key=2, style=dotted, color=red];
n169 -> n78  [key=2, style=dotted, color=red];
n169 -> n169  [key=1, style=dashed, color=red, label=kvp];
n167 -> n168  [key=0, style=solid, color=red];
n167 -> n73  [key=2, style=dotted, color=red];
n167 -> n76  [key=2, style=dotted, color=red];
n167 -> n167  [key=1, style=dashed, color=red, label=kvp];
n167 -> n174  [key=1, style=dashed, color=red, label="lambda expression"];
n167 -> n169  [key=1, style=dashed, color=red, label=index];
n168 -> n169  [key=0, style=solid, color=red];
n168 -> n73  [key=2, style=dotted, color=red];
n168 -> n76  [key=2, style=dotted, color=red];
n168 -> n168  [key=1, style=dashed, color=red, label=kvp];
n168 -> n177  [key=1, style=dashed, color=red, label="lambda expression"];
n174 -> n175  [key=0, style=solid, color=red];
n177 -> n178  [key=0, style=solid, color=red];
n171 -> n163  [key=0, style=bold, color=blue];
n180 -> n181  [key=0, style=solid, color=red];
n183 -> n184  [key=0, style=solid, color=red];
n175 -> n176  [key=0, style=solid, color=red];
n176 -> n174  [key=0, style=bold, color=blue];
n178 -> n179  [key=0, style=solid, color=red];
n179 -> n177  [key=0, style=bold, color=blue];
n181 -> n182  [key=0, style=solid, color=red];
n181 -> n172  [key=2, style=dotted, color=red];
n182 -> n180  [key=0, style=bold, color=blue];
n184 -> n185  [key=0, style=solid, color=red];
n185 -> n183  [key=0, style=bold, color=blue];
n186 -> n187  [key=0, style=solid, color=red];
n187 -> n188  [key=0, style=solid, color=red];
n187 -> n189  [key=2, style=dotted, color=red];
n188 -> n186  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid, color=green];
d12 -> d1  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Future.Future"];
d12 -> d3  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Future.Future"];
d12 -> d10  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Future.Future"];
d12 -> d2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Future.Future"];
d12 -> d4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Future.Future"];
d0 -> d1  [key=0, style=solid, color=green];
d0 -> d4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SymbolProperties"];
d2 -> d3  [key=0, style=solid, color=green];
d2 -> d6  [key=2, style=dotted];
d2 -> d7  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid, color=green];
d3 -> d8  [key=2, style=dotted, color=green];
d4 -> d5  [key=0, style=solid];
d10 -> d11  [key=0, style=solid, color=green];
d10 -> d6  [key=2, style=dotted, color=green];
d9 -> d10  [key=0, style=solid, color=green];
d11 -> d9  [key=0, style=bold, color=blue];
d5 -> d0  [key=0, style=bold, color=blue];
m0_18 -> m0_2  [key=3, color=green, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> data"];
m0_18 -> m0_6  [key=3, color=green, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m0_18 -> m0_151  [key=0, style=solid, color=green];
m0_18 -> m0_153  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<T>"];
m0_151 -> m0_152  [key=0, style=solid, color=green];
m0_151 -> m0_141  [key=2, style=dotted, color=green];
m0_151 -> m0_153  [key=1, style=dashed, color=green, label=subscriptionDataConfig];
m0_151 -> m0_157  [key=1, style=dashed, color=green, label=subscriptionDataConfig];
m0_152 -> m0_153  [key=0, style=solid, color=green];
m0_152 -> m0_155  [key=2, style=dotted, color=green];
m0_152 -> m0_157  [key=1, style=dashed, color=green, label=security];
m0_153 -> m0_154  [key=0, style=solid, color=green];
m0_153 -> m0_53  [key=2, style=dotted, color=green];
m0_153 -> m0_156  [key=1, style=dashed, color=green, label="lambda expression"];
m0_154 -> m0_18  [key=0, style=bold, color=blue];
m0_102 -> m0_103  [key=0, style=solid, color=green];
m0_117 -> m0_32  [key=3, color=green, style=bold, label="Local variable int i"];
m0_117 -> m0_124  [key=0, style=solid, color=green];
m0_117 -> m0_118  [key=0, style=solid, color=green];
m0_133 -> m0_32  [key=3, color=green, style=bold, label="Local variable int i"];
m0_133 -> m0_134  [key=0, style=solid, color=green];
m0_133 -> m0_140  [key=0, style=solid, color=green];
m0_103 -> m0_104  [key=0, style=solid, color=green];
m0_103 -> m0_11  [key=2, style=dotted, color=green];
m0_103 -> m0_109  [key=1, style=dashed, color=green, label=converter];
m0_103 -> m0_125  [key=1, style=dashed, color=green, label=converter];
m0_104 -> m0_105  [key=0, style=solid, color=green];
m0_104 -> m0_112  [key=1, style=dashed, color=green, label=symbol];
m0_104 -> m0_124  [key=1, style=dashed, color=green, label=symbol];
m0_104 -> m0_128  [key=1, style=dashed, color=green, label=symbol];
m0_109 -> m0_110  [key=0, style=solid, color=green];
m0_109 -> m0_55  [key=2, style=dotted, color=green];
m0_109 -> m0_111  [key=1, style=dashed, color=green, label=dataFrame];
m0_109 -> m0_112  [key=1, style=dashed, color=green, label=dataFrame];
m0_125 -> m0_126  [key=0, style=solid, color=green];
m0_125 -> m0_19  [key=2, style=dotted, color=green];
m0_125 -> m0_127  [key=1, style=dashed, color=green, label=dataFrame];
m0_125 -> m0_128  [key=1, style=dashed, color=green, label=dataFrame];
m0_105 -> m0_106  [key=0, style=solid, color=green];
m0_105 -> m0_141  [key=2, style=dotted, color=green];
m0_105 -> m0_107  [key=1, style=dashed, color=green, label=config];
m0_105 -> m0_108  [key=1, style=dashed, color=green, label=config];
m0_105 -> m0_147  [key=1, style=dashed, color=green, label=config];
m0_112 -> m0_113  [key=0, style=solid, color=green];
m0_112 -> m0_114  [key=1, style=dashed, color=green, label=subDataFrame];
m0_112 -> m0_118  [key=1, style=dashed, color=green, label=subDataFrame];
m0_112 -> m0_119  [key=1, style=dashed, color=green, label=subDataFrame];
m0_112 -> m0_121  [key=1, style=dashed, color=green, label=subDataFrame];
m0_124 -> m0_125  [key=0, style=solid, color=green];
m0_124 -> m0_59  [key=2, style=dotted, color=green];
m0_128 -> m0_129  [key=0, style=solid, color=green];
m0_128 -> m0_130  [key=1, style=dashed, color=green, label=subDataFrame];
m0_128 -> m0_134  [key=1, style=dashed, color=green, label=subDataFrame];
m0_128 -> m0_135  [key=1, style=dashed, color=green, label=subDataFrame];
m0_128 -> m0_137  [key=1, style=dashed, color=green, label=subDataFrame];
m0_108 -> m0_109  [key=0, style=solid, color=green];
m0_108 -> m0_124  [key=1, style=dashed, color=green, label=rawBars];
m0_108 -> m0_52  [key=2, style=dotted, color=green];
m0_108 -> m0_53  [key=2, style=dotted, color=green];
m0_108 -> n149  [key=2, style=dotted, color=green];
m0_108 -> m0_145  [key=1, style=dashed, color=green, label="lambda expression"];
m0_108 -> m0_120  [key=1, style=dashed, color=green, label=rawBars];
m0_108 -> m0_122  [key=1, style=dashed, color=green, label=rawBars];
m0_108 -> m0_136  [key=1, style=dashed, color=green, label=rawBars];
m0_108 -> m0_138  [key=1, style=dashed, color=green, label=rawBars];
m0_110 -> m0_111  [key=0, style=solid, color=green];
m0_110 -> m0_15  [key=2, style=dotted, color=green];
m0_111 -> m0_112  [key=0, style=solid, color=green];
m0_111 -> m0_16  [key=2, style=dotted, color=green];
m0_111 -> m0_56  [key=2, style=dotted, color=green];
m0_126 -> m0_127  [key=0, style=solid, color=green];
m0_126 -> m0_15  [key=2, style=dotted, color=green];
m0_127 -> m0_128  [key=0, style=solid, color=green];
m0_127 -> m0_16  [key=2, style=dotted, color=green];
m0_127 -> m0_56  [key=2, style=dotted, color=green];
m0_106 -> m0_107  [key=0, style=solid, color=green];
m0_106 -> m0_142  [key=2, style=dotted, color=green];
m0_106 -> m0_108  [key=1, style=dashed, color=green, label=quandl];
m0_106 -> m0_147  [key=1, style=dashed, color=green, label=quandl];
m0_107 -> m0_108  [key=0, style=solid, color=green];
m0_107 -> m0_143  [key=2, style=dotted, color=green];
m0_113 -> m0_114  [key=0, style=solid, color=green];
m0_113 -> m0_16  [key=2, style=dotted, color=green];
m0_113 -> m0_56  [key=2, style=dotted, color=green];
m0_114 -> m0_115  [key=0, style=solid, color=green];
m0_114 -> m0_57  [key=2, style=dotted, color=green];
m0_114 -> m0_16  [key=2, style=dotted, color=green];
m0_114 -> m0_117  [key=1, style=dashed, color=green, label=count];
m0_118 -> m0_119  [key=0, style=solid, color=green];
m0_118 -> m0_121  [key=1, style=dashed, color=green, label=index];
m0_119 -> m0_120  [key=0, style=solid, color=green];
m0_119 -> m0_16  [key=2, style=dotted, color=green];
m0_121 -> m0_122  [key=0, style=solid, color=green];
m0_121 -> m0_16  [key=2, style=dotted, color=green];
m0_129 -> m0_130  [key=0, style=solid, color=green];
m0_129 -> m0_16  [key=2, style=dotted, color=green];
m0_129 -> m0_56  [key=2, style=dotted, color=green];
m0_130 -> m0_131  [key=0, style=solid, color=green];
m0_130 -> m0_57  [key=2, style=dotted, color=green];
m0_130 -> m0_16  [key=2, style=dotted, color=green];
m0_130 -> m0_133  [key=1, style=dashed, color=green, label=count];
m0_134 -> m0_135  [key=0, style=solid, color=green];
m0_134 -> m0_137  [key=1, style=dashed, color=green, label=index];
m0_135 -> m0_136  [key=0, style=solid, color=green];
m0_135 -> m0_16  [key=2, style=dotted, color=green];
m0_137 -> m0_138  [key=0, style=solid, color=green];
m0_137 -> m0_16  [key=2, style=dotted, color=green];
m0_120 -> m0_121  [key=0, style=solid, color=green];
m0_120 -> m0_58  [key=2, style=dotted, color=green];
m0_122 -> m0_123  [key=0, style=solid, color=green];
m0_122 -> m0_144  [key=2, style=dotted, color=green];
m0_122 -> m0_58  [key=2, style=dotted, color=green];
m0_136 -> m0_137  [key=0, style=solid, color=green];
m0_136 -> m0_58  [key=2, style=dotted, color=green];
m0_138 -> m0_139  [key=0, style=solid, color=green];
m0_138 -> m0_144  [key=2, style=dotted, color=green];
m0_138 -> m0_58  [key=2, style=dotted, color=green];
m0_116 -> m0_120  [key=1, style=dashed, color=green, label=i];
m0_116 -> m0_122  [key=1, style=dashed, color=green, label=i];
m0_116 -> m0_118  [key=1, style=dashed, color=green, label=i];
m0_116 -> m0_117  [key=0, style=solid, color=green];
m0_116 -> m0_123  [key=1, style=dashed, color=green, label=i];
m0_123 -> m0_117  [key=0, style=solid, color=green];
m0_123 -> m0_123  [key=1, style=dashed, color=green, label=i];
m0_132 -> m0_136  [key=1, style=dashed, color=green, label=i];
m0_132 -> m0_138  [key=1, style=dashed, color=green, label=i];
m0_132 -> m0_134  [key=1, style=dashed, color=green, label=i];
m0_132 -> m0_133  [key=0, style=solid, color=green];
m0_132 -> m0_139  [key=1, style=dashed, color=green, label=i];
m0_139 -> m0_133  [key=0, style=solid, color=green];
m0_139 -> m0_139  [key=1, style=dashed, color=green, label=i];
m0_115 -> m0_116  [key=0, style=solid, color=green];
m0_115 -> m0_58  [key=2, style=dotted, color=green];
m0_131 -> m0_132  [key=0, style=solid, color=green];
m0_131 -> m0_58  [key=2, style=dotted, color=green];
m0_140 -> m0_102  [key=0, style=bold, color=blue];
m0_156 -> m0_157  [key=0, style=solid, color=green];
m0_61 -> m0_62  [key=0, style=solid, color=green];
m0_61 -> m0_63  [key=2, style=dotted, color=green];
m0_61 -> m0_64  [key=2, style=dotted, color=green];
m0_60 -> m0_61  [key=0, style=solid, color=green];
m0_62 -> m0_60  [key=0, style=bold, color=blue];
m0_98 -> m0_99  [key=0, style=solid, color=green];
m0_98 -> m0_100  [key=2, style=dotted, color=green];
m0_98 -> m0_64  [key=2, style=dotted, color=green];
m0_98 -> m0_101  [key=2, style=dotted, color=green];
m0_97 -> m0_98  [key=0, style=solid, color=green];
m0_99 -> m0_97  [key=0, style=bold, color=blue];
m0_147 -> m0_148  [key=0, style=solid, color=green];
m0_147 -> m0_149  [key=2, style=dotted, color=green];
m0_147 -> m0_143  [key=2, style=dotted, color=green];
m0_145 -> m0_147  [key=1, style=dashed, color=green, label=int];
m0_145 -> m0_146  [key=0, style=solid, color=green];
m0_146 -> m0_147  [key=0, style=solid, color=green];
m0_146 -> m0_149  [key=2, style=dotted, color=green];
m0_146 -> m0_150  [key=2, style=dotted, color=green];
m0_148 -> m0_145  [key=0, style=bold, color=blue];
m0_157 -> m0_158  [key=0, style=solid, color=green];
m0_157 -> m0_159  [key=2, style=dotted, color=green];
m0_157 -> m0_160  [key=2, style=dotted, color=green];
m0_157 -> m0_161  [key=2, style=dotted, color=green];
m0_157 -> m0_162  [key=2, style=dotted, color=green];
m0_157 -> m0_12  [key=2, style=dotted, color=green];
m0_157 -> m0_163  [key=2, style=dotted, color=green];
m0_158 -> m0_156  [key=0, style=bold, color=blue];
m0_65 -> m0_66  [key=0, style=solid, color=green];
m0_77 -> m0_32  [key=3, color=green, style=bold, label="Local variable int i"];
m0_77 -> m0_82  [key=0, style=solid, color=green];
m0_77 -> m0_78  [key=0, style=solid, color=green];
m0_91 -> m0_32  [key=3, color=green, style=bold, label="Local variable int i"];
m0_91 -> m0_92  [key=0, style=solid, color=green];
m0_91 -> m0_96  [key=0, style=solid, color=green];
m0_66 -> m0_67  [key=0, style=solid, color=green];
m0_66 -> m0_11  [key=2, style=dotted, color=green];
m0_66 -> m0_69  [key=1, style=dashed, color=green, label=converter];
m0_66 -> m0_83  [key=1, style=dashed, color=green, label=converter];
m0_67 -> m0_68  [key=0, style=solid, color=green];
m0_67 -> m0_98  [key=1, style=dashed, color=green, label=symbol];
m0_67 -> m0_72  [key=1, style=dashed, color=green, label=symbol];
m0_67 -> m0_82  [key=1, style=dashed, color=green, label=symbol];
m0_67 -> m0_86  [key=1, style=dashed, color=green, label=symbol];
m0_69 -> m0_70  [key=0, style=solid, color=green];
m0_69 -> m0_55  [key=2, style=dotted, color=green];
m0_69 -> m0_71  [key=1, style=dashed, color=green, label=dataFrame];
m0_69 -> m0_72  [key=1, style=dashed, color=green, label=dataFrame];
m0_83 -> m0_84  [key=0, style=solid, color=green];
m0_83 -> m0_19  [key=2, style=dotted, color=green];
m0_83 -> m0_85  [key=1, style=dashed, color=green, label=dataFrame];
m0_83 -> m0_86  [key=1, style=dashed, color=green, label=dataFrame];
m0_68 -> m0_69  [key=0, style=solid, color=green];
m0_68 -> m0_52  [key=2, style=dotted, color=green];
m0_68 -> m0_53  [key=2, style=dotted, color=green];
m0_68 -> n149  [key=2, style=dotted, color=green];
m0_68 -> m0_97  [key=1, style=dashed, color=green, label="lambda expression"];
m0_68 -> m0_80  [key=1, style=dashed, color=green, label=rawBars];
m0_68 -> m0_82  [key=1, style=dashed, color=green, label=rawBars];
m0_68 -> m0_94  [key=1, style=dashed, color=green, label=rawBars];
m0_72 -> m0_73  [key=0, style=solid, color=green];
m0_72 -> m0_74  [key=1, style=dashed, color=green, label=subDataFrame];
m0_72 -> m0_78  [key=1, style=dashed, color=green, label=subDataFrame];
m0_72 -> m0_79  [key=1, style=dashed, color=green, label=subDataFrame];
m0_82 -> m0_83  [key=0, style=solid, color=green];
m0_82 -> m0_59  [key=2, style=dotted, color=green];
m0_86 -> m0_87  [key=0, style=solid, color=green];
m0_86 -> m0_88  [key=1, style=dashed, color=green, label=subDataFrame];
m0_86 -> m0_92  [key=1, style=dashed, color=green, label=subDataFrame];
m0_86 -> m0_93  [key=1, style=dashed, color=green, label=subDataFrame];
m0_70 -> m0_71  [key=0, style=solid, color=green];
m0_70 -> m0_15  [key=2, style=dotted, color=green];
m0_71 -> m0_72  [key=0, style=solid, color=green];
m0_71 -> m0_16  [key=2, style=dotted, color=green];
m0_71 -> m0_56  [key=2, style=dotted, color=green];
m0_84 -> m0_85  [key=0, style=solid, color=green];
m0_84 -> m0_15  [key=2, style=dotted, color=green];
m0_85 -> m0_86  [key=0, style=solid, color=green];
m0_85 -> m0_16  [key=2, style=dotted, color=green];
m0_85 -> m0_56  [key=2, style=dotted, color=green];
m0_80 -> m0_81  [key=0, style=solid, color=green];
m0_80 -> m0_58  [key=2, style=dotted, color=green];
m0_94 -> m0_95  [key=0, style=solid, color=green];
m0_94 -> m0_58  [key=2, style=dotted, color=green];
m0_73 -> m0_74  [key=0, style=solid, color=green];
m0_73 -> m0_16  [key=2, style=dotted, color=green];
m0_73 -> m0_56  [key=2, style=dotted, color=green];
m0_74 -> m0_75  [key=0, style=solid, color=green];
m0_74 -> m0_57  [key=2, style=dotted, color=green];
m0_74 -> m0_16  [key=2, style=dotted, color=green];
m0_74 -> m0_77  [key=1, style=dashed, color=green, label=count];
m0_78 -> m0_79  [key=0, style=solid, color=green];
m0_79 -> m0_80  [key=0, style=solid, color=green];
m0_79 -> m0_16  [key=2, style=dotted, color=green];
m0_87 -> m0_88  [key=0, style=solid, color=green];
m0_87 -> m0_16  [key=2, style=dotted, color=green];
m0_87 -> m0_56  [key=2, style=dotted, color=green];
m0_88 -> m0_89  [key=0, style=solid, color=green];
m0_88 -> m0_57  [key=2, style=dotted, color=green];
m0_88 -> m0_16  [key=2, style=dotted, color=green];
m0_88 -> m0_91  [key=1, style=dashed, color=green, label=count];
m0_92 -> m0_93  [key=0, style=solid, color=green];
m0_93 -> m0_94  [key=0, style=solid, color=green];
m0_93 -> m0_16  [key=2, style=dotted, color=green];
m0_76 -> m0_80  [key=1, style=dashed, color=green, label=i];
m0_76 -> m0_78  [key=1, style=dashed, color=green, label=i];
m0_76 -> m0_77  [key=0, style=solid, color=green];
m0_76 -> m0_81  [key=1, style=dashed, color=green, label=i];
m0_81 -> m0_77  [key=0, style=solid, color=green];
m0_81 -> m0_81  [key=1, style=dashed, color=green, label=i];
m0_90 -> m0_94  [key=1, style=dashed, color=green, label=i];
m0_90 -> m0_92  [key=1, style=dashed, color=green, label=i];
m0_90 -> m0_91  [key=0, style=solid, color=green];
m0_90 -> m0_95  [key=1, style=dashed, color=green, label=i];
m0_95 -> m0_91  [key=0, style=solid, color=green];
m0_95 -> m0_95  [key=1, style=dashed, color=green, label=i];
m0_75 -> m0_76  [key=0, style=solid, color=green];
m0_75 -> m0_58  [key=2, style=dotted, color=green];
m0_89 -> m0_90  [key=0, style=solid, color=green];
m0_89 -> m0_58  [key=2, style=dotted, color=green];
m0_96 -> m0_65  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_11  [key=2, style=dotted, color=green];
m0_1 -> m0_3  [key=1, style=dashed, color=green, label=converter];
m0_1 -> m0_7  [key=1, style=dashed, color=green, label=converter];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_12  [key=2, style=dotted, color=green];
m0_2 -> m0_13  [key=2, style=dotted, color=green];
m0_2 -> m0_6  [key=1, style=dashed, color=green, label=rawBars];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_14  [key=2, style=dotted, color=green];
m0_3 -> m0_5  [key=1, style=dashed, color=green, label=dataFrame];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_7 -> m0_19  [key=2, style=dotted, color=green];
m0_7 -> m0_9  [key=1, style=dashed, color=green, label=dataFrame];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_6 -> m0_18  [key=2, style=dotted, color=green];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_15  [key=2, style=dotted, color=green];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_16  [key=2, style=dotted, color=green];
m0_5 -> m0_17  [key=2, style=dotted, color=green];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_15  [key=2, style=dotted, color=green];
m0_9 -> m0_10  [key=0, style=solid, color=green];
m0_9 -> m0_16  [key=2, style=dotted, color=green];
m0_9 -> m0_17  [key=2, style=dotted, color=green];
m0_10 -> m0_0  [key=0, style=bold, color=blue];
m0_155 -> m0_151  [key=3, color=green, style=bold, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscriptionDataConfig"];
m0_155 -> m0_167  [key=0, style=solid, color=green];
m0_167 -> m0_168  [key=0, style=solid, color=green];
m0_167 -> m0_169  [key=2, style=dotted, color=green];
m0_167 -> m0_170  [key=2, style=dotted, color=green];
m0_167 -> m0_171  [key=2, style=dotted, color=green];
m0_167 -> m0_172  [key=2, style=dotted, color=green];
m0_168 -> m0_155  [key=0, style=bold, color=blue];
m0_141 -> m0_104  [key=3, color=green, style=bold, label="Parameter variable QuantConnect.Symbol symbol"];
m0_141 -> m0_105  [key=3, color=green, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m0_141 -> m0_164  [key=0, style=solid, color=green];
m0_141 -> m0_18  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m0_164 -> m0_165  [key=0, style=solid, color=green];
m0_164 -> m0_166  [key=2, style=dotted, color=green];
m0_165 -> m0_141  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid, color=green];
m0_21 -> m0_22  [key=0, style=solid, color=green];
m0_21 -> m0_11  [key=2, style=dotted, color=green];
m0_21 -> m0_24  [key=1, style=dashed, color=green, label=converter];
m0_21 -> m0_38  [key=1, style=dashed, color=green, label=converter];
m0_22 -> m0_23  [key=0, style=solid, color=green];
m0_22 -> m0_61  [key=1, style=dashed, color=green, label=symbol];
m0_22 -> m0_27  [key=1, style=dashed, color=green, label=symbol];
m0_22 -> m0_37  [key=1, style=dashed, color=green, label=symbol];
m0_22 -> m0_41  [key=1, style=dashed, color=green, label=symbol];
m0_24 -> m0_25  [key=0, style=solid, color=green];
m0_24 -> m0_55  [key=2, style=dotted, color=green];
m0_24 -> m0_26  [key=1, style=dashed, color=green, label=dataFrame];
m0_24 -> m0_27  [key=1, style=dashed, color=green, label=dataFrame];
m0_38 -> m0_39  [key=0, style=solid, color=green];
m0_38 -> m0_19  [key=2, style=dotted, color=green];
m0_38 -> m0_40  [key=1, style=dashed, color=green, label=dataFrame];
m0_38 -> m0_41  [key=1, style=dashed, color=green, label=dataFrame];
m0_23 -> m0_24  [key=0, style=solid, color=green];
m0_23 -> m0_52  [key=2, style=dotted, color=green];
m0_23 -> m0_53  [key=2, style=dotted, color=green];
m0_23 -> n149  [key=2, style=dotted, color=green];
m0_23 -> m0_60  [key=1, style=dashed, color=green, label="lambda expression"];
m0_23 -> m0_35  [key=1, style=dashed, color=green, label=rawBars];
m0_23 -> m0_37  [key=1, style=dashed, color=green, label=rawBars];
m0_23 -> m0_49  [key=1, style=dashed, color=green, label=rawBars];
m0_27 -> m0_28  [key=0, style=solid, color=green];
m0_27 -> m0_29  [key=1, style=dashed, color=green, label=subDataFrame];
m0_27 -> m0_33  [key=1, style=dashed, color=green, label=subDataFrame];
m0_27 -> m0_34  [key=1, style=dashed, color=green, label=subDataFrame];
m0_37 -> m0_38  [key=0, style=solid, color=green];
m0_37 -> m0_59  [key=2, style=dotted, color=green];
m0_41 -> m0_42  [key=0, style=solid, color=green];
m0_41 -> m0_43  [key=1, style=dashed, color=green, label=subDataFrame];
m0_41 -> m0_47  [key=1, style=dashed, color=green, label=subDataFrame];
m0_41 -> m0_48  [key=1, style=dashed, color=green, label=subDataFrame];
m0_25 -> m0_26  [key=0, style=solid, color=green];
m0_25 -> m0_15  [key=2, style=dotted, color=green];
m0_26 -> m0_27  [key=0, style=solid, color=green];
m0_26 -> m0_16  [key=2, style=dotted, color=green];
m0_26 -> m0_56  [key=2, style=dotted, color=green];
m0_39 -> m0_40  [key=0, style=solid, color=green];
m0_39 -> m0_15  [key=2, style=dotted, color=green];
m0_40 -> m0_41  [key=0, style=solid, color=green];
m0_40 -> m0_16  [key=2, style=dotted, color=green];
m0_40 -> m0_56  [key=2, style=dotted, color=green];
m0_35 -> m0_36  [key=0, style=solid, color=green];
m0_35 -> m0_58  [key=2, style=dotted, color=green];
m0_49 -> m0_50  [key=0, style=solid, color=green];
m0_49 -> m0_58  [key=2, style=dotted, color=green];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_28 -> m0_16  [key=2, style=dotted, color=green];
m0_28 -> m0_56  [key=2, style=dotted, color=green];
m0_29 -> m0_30  [key=0, style=solid, color=green];
m0_29 -> m0_57  [key=2, style=dotted, color=green];
m0_29 -> m0_16  [key=2, style=dotted, color=green];
m0_29 -> m0_32  [key=1, style=dashed, color=green, label=count];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_34 -> m0_35  [key=0, style=solid, color=green];
m0_34 -> m0_16  [key=2, style=dotted, color=green];
m0_32 -> m0_37  [key=0, style=solid, color=green];
m0_32 -> m0_33  [key=0, style=solid, color=green];
m0_32 -> m0_32  [key=3, color=green, style=bold, label="Local variable int i"];
m0_42 -> m0_43  [key=0, style=solid, color=green];
m0_42 -> m0_16  [key=2, style=dotted, color=green];
m0_42 -> m0_56  [key=2, style=dotted, color=green];
m0_43 -> m0_44  [key=0, style=solid, color=green];
m0_43 -> m0_57  [key=2, style=dotted, color=green];
m0_43 -> m0_16  [key=2, style=dotted, color=green];
m0_43 -> m0_46  [key=1, style=dashed, color=green, label=count];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_48 -> m0_49  [key=0, style=solid, color=green];
m0_48 -> m0_16  [key=2, style=dotted, color=green];
m0_31 -> m0_35  [key=1, style=dashed, color=green, label=i];
m0_31 -> m0_33  [key=1, style=dashed, color=green, label=i];
m0_31 -> m0_32  [key=0, style=solid, color=green];
m0_31 -> m0_36  [key=1, style=dashed, color=green, label=i];
m0_36 -> m0_32  [key=0, style=solid, color=green];
m0_36 -> m0_36  [key=1, style=dashed, color=green, label=i];
m0_45 -> m0_49  [key=1, style=dashed, color=green, label=i];
m0_45 -> m0_47  [key=1, style=dashed, color=green, label=i];
m0_45 -> m0_46  [key=0, style=solid, color=green];
m0_45 -> m0_50  [key=1, style=dashed, color=green, label=i];
m0_50 -> m0_46  [key=0, style=solid, color=green];
m0_50 -> m0_50  [key=1, style=dashed, color=green, label=i];
m0_30 -> m0_31  [key=0, style=solid, color=green];
m0_30 -> m0_58  [key=2, style=dotted, color=green];
m0_46 -> m0_32  [key=3, color=green, style=bold, label="Local variable int i"];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_46 -> m0_51  [key=0, style=solid, color=green];
m0_44 -> m0_45  [key=0, style=solid, color=green];
m0_44 -> m0_58  [key=2, style=dotted, color=green];
m0_51 -> m0_20  [key=0, style=bold, color=blue];
m0_173 -> m0_6  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests"];
m0_173 -> m0_37  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests"];
m0_173 -> m0_82  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests"];
m0_173 -> m0_105  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests"];
m0_173 -> m0_124  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests"];
m0_173 -> m0_151  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests"];
m0_173 -> m0_152  [key=1, style=dashed, color=green, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests"];
m0_174 -> m0_61  [key=1, style=dashed, color=green, label=symbol];
m0_175 -> m0_98  [key=1, style=dashed, color=green, label=symbol];
m0_176 -> m0_147  [key=1, style=dashed, color=green, label=config];
m0_177 -> m0_147  [key=1, style=dashed, color=green, label=quandl];
m0_178 -> m0_157  [key=1, style=dashed, color=green, label=subscriptionDataConfig];
m0_179 -> m0_157  [key=1, style=dashed, color=green, label=security];
}
