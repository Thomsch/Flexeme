digraph  {
n159 [label="QuantConnect.Jupyter.AlgorithmAnalysis", span=""];
n160 [label=int, span=""];
n0 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.AlgorithmAnalysis(int, string)", label="Entry QuantConnect.Jupyter.AlgorithmAnalysis.AlgorithmAnalysis(int, string)", span="37-37"];
n1 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.AlgorithmAnalysis(int, string)", color=red, community=0, label="1: Py.GIL()", span="41-41"];
n4 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.AlgorithmAnalysis(int, string)", color=red, community=0, label="0: _api.Initialize(userId, apiAcessToken, Globals.DataFolder)", span="47-47"];
n2 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.AlgorithmAnalysis(int, string)", color=red, community=0, label="1: _pandas = Py.Import(''pandas'')", span="43-43"];
n8 [cluster="Unk.GIL", label="Entry Unk.GIL", span=""];
n3 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.AlgorithmAnalysis(int, string)", color=red, community=0, label="1: _api = new Api.Api()", span="46-46"];
n9 [cluster="Unk.Import", label="Entry Unk.Import", span=""];
n10 [cluster="QuantConnect.Api.Api.Api()", label="Entry QuantConnect.Api.Api.Api()", span="30-30"];
n5 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.AlgorithmAnalysis(int, string)", color=red, community=0, label="1: Exception", span="49-49"];
n7 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.AlgorithmAnalysis(int, string)", label="Exit QuantConnect.Jupyter.AlgorithmAnalysis.AlgorithmAnalysis(int, string)", span="37-37"];
n11 [cluster="QuantConnect.Interfaces.IApi.Initialize(int, string, string)", label="Entry QuantConnect.Interfaces.IApi.Initialize(int, string, string)", span="32-32"];
n6 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.AlgorithmAnalysis(int, string)", color=red, community=0, label="1: throw new Exception(''AlgorithmAnalysis.Main(): '' + exception);", span="51-51"];
n12 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n13 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", label="Entry QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", span="59-59"];
n14 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", color=red, community=0, label="1: var listProject = _api.ListProjects()", span="61-61"];
n15 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", color=red, community=0, label="1: listProject.Success", span="62-62"];
n25 [cluster="QuantConnect.Interfaces.IApi.ListProjects()", label="Entry QuantConnect.Interfaces.IApi.ListProjects()", span="110-110"];
n18 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", color=red, community=0, label="1: var index = listProject.Projects.Select(x => x.ProjectId)", span="67-67"];
n19 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", color=red, community=0, label="1: pyDict.SetItem(''Name'', _pandas.Series(listProject.Projects.Select(x => x.Name).ToList(), index))", span="68-68"];
n20 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", color=red, community=0, label="1: pyDict.SetItem(''Created'', _pandas.Series(listProject.Projects.Select(x => x.Created).ToList(), index))", span="69-69"];
n21 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", color=red, community=0, label="1: pyDict.SetItem(''Modified'', _pandas.Series(listProject.Projects.Select(x => x.Modified).ToList(), index))", span="70-70"];
n16 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", color=red, community=0, label="1: Py.GIL()", span="64-64"];
n23 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", color=red, community=0, label="2: return null;", span="75-75"];
n17 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", color=red, community=0, label="1: var pyDict = new PyDict()", span="66-66"];
n26 [cluster="PyDict.cstr", label="Entry PyDict.cstr", span=""];
n22 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", color=red, community=0, label="1: return _pandas.DataFrame(pyDict, columns: new[] { ''Name'', ''Created'', ''Modified'' }.ToList());", span="71-71"];
n27 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n33 [cluster="lambda expression", label="Entry lambda expression", span="67-67"];
n28 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n29 [cluster="Unk.Series", label="Entry Unk.Series", span=""];
n30 [cluster="Unk.SetItem", label="Entry Unk.SetItem", span=""];
n36 [cluster="lambda expression", label="Entry lambda expression", span="68-68"];
n39 [cluster="lambda expression", label="Entry lambda expression", span="69-69"];
n42 [cluster="lambda expression", label="Entry lambda expression", span="70-70"];
n24 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", label="Exit QuantConnect.Jupyter.AlgorithmAnalysis.ListProjects()", span="59-59"];
n31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n32 [cluster="Unk.DataFrame", label="Entry Unk.DataFrame", span=""];
n34 [cluster="lambda expression", color=red, community=0, label="2: x.ProjectId", span="67-67"];
n35 [cluster="lambda expression", label="Exit lambda expression", span="67-67"];
n37 [cluster="lambda expression", color=red, community=0, label="2: x.Name", span="68-68"];
n38 [cluster="lambda expression", label="Exit lambda expression", span="68-68"];
n40 [cluster="lambda expression", color=red, community=0, label="2: x.Created", span="69-69"];
n41 [cluster="lambda expression", label="Exit lambda expression", span="69-69"];
n43 [cluster="lambda expression", color=red, community=0, label="2: x.Modified", span="70-70"];
n44 [cluster="lambda expression", label="Exit lambda expression", span="70-70"];
n45 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", label="Entry QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", span="83-83"];
n46 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: var listBacktests = _api.ListBacktests(projectId)", span="85-85"];
n50 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=1, label="1: var backtests = listBacktests.Backtests\r\n                            .Select(x => ReadBacktest(projectId, x.BacktestId))\r\n                            .Where(x => x.Result != null).ToList()", span="93-95"];
n75 [cluster="lambda expression", color=red, community=0, label="1: ReadBacktest(projectId, x.BacktestId)", span="94-94"];
n47 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: listBacktests.Success", span="86-86"];
n64 [cluster="QuantConnect.Interfaces.IApi.ListBacktests(int)", label="Entry QuantConnect.Interfaces.IApi.ListBacktests(int)", span="167-167"];
n62 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: return string.Join(Environment.NewLine, listBacktests.Errors).ToPython();", span="124-124"];
n48 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: Py.GIL()", span="90-90"];
n49 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: var pyDict = new PyDict()", span="92-92"];
n53 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: pyDict.SetItem(''Name'', _pandas.Series(backtests.Select(x => x.Name).ToList(), index))", span="100-100"];
n57 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: pyDict.SetItem(kvp.Key, _pandas.Series(kvp.Value, index))", span="111-111"];
n59 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: return _pandas.DataFrame(pyDict, columns: columns);", span="116-116"];
n51 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: var index = backtests.Select(x => x.BacktestId)", span="97-97"];
n65 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n74 [cluster="lambda expression", label="Entry lambda expression", span="94-94"];
n78 [cluster="lambda expression", label="Entry lambda expression", span="95-95"];
n54 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: backtests.Count() > 0", span="102-102"];
n55 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=1, label="1: var CsDict = backtests\r\n                                .SelectMany(x => x.Result.Statistics)\r\n                                .GroupBy(k => k.Key)\r\n                                .ToDictionary(k => k.Key, v => v.Select(i => i.Value).ToList())", span="104-107"];
n52 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: var columns = new List<string>() { ''Name'' }", span="99-99"];
n81 [cluster="lambda expression", label="Entry lambda expression", span="97-97"];
n66 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n58 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: columns.AddRange(CsDict.Keys)", span="113-113"];
n84 [cluster="lambda expression", label="Entry lambda expression", span="100-100"];
n67 [cluster="Unk.Count", label="Entry Unk.Count", span=""];
n56 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: CsDict", span="109-109"];
n68 [cluster="Unk.SelectMany", label="Entry Unk.SelectMany", span=""];
n69 [cluster="Unk.GroupBy", label="Entry Unk.GroupBy", span=""];
n70 [cluster="Unk.ToDictionary", label="Entry Unk.ToDictionary", span=""];
n87 [cluster="lambda expression", label="Entry lambda expression", span="105-105"];
n90 [cluster="lambda expression", label="Entry lambda expression", span="106-106"];
n93 [cluster="lambda expression", label="Entry lambda expression", span="107-107"];
n96 [cluster="lambda expression", label="Entry lambda expression", span="107-107"];
n71 [cluster="Unk.AddRange", label="Entry Unk.AddRange", span=""];
n60 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: Exception", span="119-119"];
n61 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", color=red, community=0, label="1: return exception.Message.ToPython();", span="121-121"];
n63 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", label="Exit QuantConnect.Jupyter.AlgorithmAnalysis.ListBacktests(int)", span="83-83"];
n72 [cluster="Unk.ToPython", label="Entry Unk.ToPython", span=""];
n73 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
n76 [cluster="lambda expression", label="Exit lambda expression", span="94-94"];
n77 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ReadBacktest(int, string)", label="Entry QuantConnect.Jupyter.AlgorithmAnalysis.ReadBacktest(int, string)", span="133-133"];
n79 [cluster="lambda expression", color=red, community=0, label="2: x.Result != null", span="95-95"];
n80 [cluster="lambda expression", label="Exit lambda expression", span="95-95"];
n82 [cluster="lambda expression", color=red, community=0, label="2: x.BacktestId", span="97-97"];
n83 [cluster="lambda expression", label="Exit lambda expression", span="97-97"];
n85 [cluster="lambda expression", color=red, community=0, label="2: x.Name", span="100-100"];
n86 [cluster="lambda expression", label="Exit lambda expression", span="100-100"];
n88 [cluster="lambda expression", color=red, community=0, label="2: x.Result.Statistics", span="105-105"];
n89 [cluster="lambda expression", label="Exit lambda expression", span="105-105"];
n91 [cluster="lambda expression", color=red, community=0, label="2: k.Key", span="106-106"];
n92 [cluster="lambda expression", label="Exit lambda expression", span="106-106"];
n94 [cluster="lambda expression", color=red, community=1, label="2: k.Key", span="107-107"];
n95 [cluster="lambda expression", label="Exit lambda expression", span="107-107"];
n97 [cluster="lambda expression", color=red, community=0, label="1: v.Select(i => i.Value).ToList()", span="107-107"];
n98 [cluster="lambda expression", label="Exit lambda expression", span="107-107"];
n99 [cluster="lambda expression", label="Entry lambda expression", span="107-107"];
n100 [cluster="lambda expression", color=red, community=0, label="2: i.Value", span="107-107"];
n101 [cluster="lambda expression", label="Exit lambda expression", span="107-107"];
n102 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ReadBacktest(int, string)", color=red, community=0, label="0: return _api.ReadBacktest(projectId, backtestId);", span="135-135"];
n103 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.ReadBacktest(int, string)", label="Exit QuantConnect.Jupyter.AlgorithmAnalysis.ReadBacktest(int, string)", span="133-133"];
n104 [cluster="QuantConnect.Interfaces.IApi.ReadBacktest(int, string)", label="Entry QuantConnect.Interfaces.IApi.ReadBacktest(int, string)", span="142-142"];
n105 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", label="Entry QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", span="144-144"];
n106 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: var backtest = ReadBacktest(projectId, backtestId)", span="146-146"];
n107 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: backtest.Success", span="147-147"];
n110 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: var orders = backtest.Result.Orders", span="152-152"];
n120 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: return string.Join(Environment.NewLine, backtest.Errors).ToPython();", span="164-164"];
n108 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="0: Py.GIL()", span="149-149"];
n109 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: var pyDict = new PyDict()", span="151-151"];
n112 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: pyDict.SetItem(''Time'', _pandas.Series(orders.Values.Select(x => x.Time).ToList(), index))", span="154-154"];
n113 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: pyDict.SetItem(''Symbol'', _pandas.Series(orders.Values.Select(x => x.Symbol).ToList(), index))", span="155-155"];
n114 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: pyDict.SetItem(''Quantity'', _pandas.Series(orders.Values.Select(x => (double)x.Quantity).ToList(), index))", span="156-156"];
n115 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: pyDict.SetItem(''Price'', _pandas.Series(orders.Values.Select(x => (double)x.Price).ToList(), index))", span="157-157"];
n116 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: pyDict.SetItem(''Type'', _pandas.Series(orders.Values.Select(x => x.Type.ToString()).ToList(), index))", span="158-158"];
n117 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: pyDict.SetItem(''Status'', _pandas.Series(orders.Values.Select(x => x.Status.ToString()).ToList(), index))", span="159-159"];
n118 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: pyDict.SetItem(''Tag'', _pandas.Series(orders.Values.Select(x => x.Tag).ToList(), index))", span="160-160"];
n119 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: return _pandas.DataFrame(pyDict, columns: new[] { ''Time'', ''Symbol'', ''Quantity'', ''Price'', ''Type'', ''Status'', ''Tag'' }.ToList());", span="161-161"];
n111 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", color=red, community=0, label="1: var index = orders.Select(x => x.Key)", span="153-153"];
n122 [cluster="lambda expression", label="Entry lambda expression", span="153-153"];
n125 [cluster="lambda expression", label="Entry lambda expression", span="154-154"];
n128 [cluster="lambda expression", label="Entry lambda expression", span="155-155"];
n131 [cluster="lambda expression", label="Entry lambda expression", span="156-156"];
n134 [cluster="lambda expression", label="Entry lambda expression", span="157-157"];
n137 [cluster="lambda expression", label="Entry lambda expression", span="158-158"];
n141 [cluster="lambda expression", label="Entry lambda expression", span="159-159"];
n144 [cluster="lambda expression", label="Entry lambda expression", span="160-160"];
n121 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", label="Exit QuantConnect.Jupyter.AlgorithmAnalysis.GetOrders(int, string)", span="144-144"];
n123 [cluster="lambda expression", color=red, community=0, label="3: x.Key", span="153-153"];
n124 [cluster="lambda expression", label="Exit lambda expression", span="153-153"];
n126 [cluster="lambda expression", color=red, community=0, label="2: x.Time", span="154-154"];
n127 [cluster="lambda expression", label="Exit lambda expression", span="154-154"];
n129 [cluster="lambda expression", color=red, community=0, label="2: x.Symbol", span="155-155"];
n130 [cluster="lambda expression", label="Exit lambda expression", span="155-155"];
n132 [cluster="lambda expression", color=red, community=0, label="2: (double)x.Quantity", span="156-156"];
n133 [cluster="lambda expression", label="Exit lambda expression", span="156-156"];
n135 [cluster="lambda expression", color=red, community=0, label="2: (double)x.Price", span="157-157"];
n136 [cluster="lambda expression", label="Exit lambda expression", span="157-157"];
n138 [cluster="lambda expression", color=red, community=0, label="0: x.Type.ToString()", span="158-158"];
n139 [cluster="lambda expression", label="Exit lambda expression", span="158-158"];
n140 [cluster="System.Enum.ToString()", label="Entry System.Enum.ToString()", span="0-0"];
n142 [cluster="lambda expression", color=red, community=0, label="0: x.Status.ToString()", span="159-159"];
n143 [cluster="lambda expression", label="Exit lambda expression", span="159-159"];
n145 [cluster="lambda expression", color=red, community=0, label="2: x.Tag", span="160-160"];
n146 [cluster="lambda expression", label="Exit lambda expression", span="160-160"];
n147 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetProfitLoss(int, string)", label="Entry QuantConnect.Jupyter.AlgorithmAnalysis.GetProfitLoss(int, string)", span="173-173"];
n148 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetProfitLoss(int, string)", color=red, community=0, label="1: var backtest = ReadBacktest(projectId, backtestId)", span="175-175"];
n149 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetProfitLoss(int, string)", color=red, community=0, label="1: backtest.Success", span="176-176"];
n152 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetProfitLoss(int, string)", color=red, community=1, label="1: pyDict.SetItem(''ProfitLoss'', _pandas.Series(\r\n                        backtest.Result.ProfitLoss.Values.Select(x => (double)x).ToList(),\r\n                        backtest.Result.ProfitLoss.Keys.ToList()))", span="181-183"];
n154 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetProfitLoss(int, string)", color=red, community=0, label="1: return string.Join(Environment.NewLine, backtest.Errors).ToPython();", span="187-187"];
n150 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetProfitLoss(int, string)", color=red, community=0, label="1: Py.GIL()", span="178-178"];
n151 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetProfitLoss(int, string)", color=red, community=0, label="1: var pyDict = new PyDict()", span="180-180"];
n153 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetProfitLoss(int, string)", color=red, community=0, label="1: return _pandas.DataFrame(pyDict);", span="184-184"];
n156 [cluster="lambda expression", label="Entry lambda expression", span="182-182"];
n155 [cluster="QuantConnect.Jupyter.AlgorithmAnalysis.GetProfitLoss(int, string)", label="Exit QuantConnect.Jupyter.AlgorithmAnalysis.GetProfitLoss(int, string)", span="173-173"];
n157 [cluster="lambda expression", color=red, community=0, label="2: (double)x", span="182-182"];
n158 [cluster="lambda expression", label="Exit lambda expression", span="182-182"];
m1_0 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", file="Cash.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", span="40-40"];
m1_1 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", file="Cash.cs", label="symbols == null", span="42-42"];
m1_2 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", file="Cash.cs", label="throw new ArgumentNullException(nameof(symbols));", span="44-44"];
m1_3 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", file="Cash.cs", label="_symbols = symbols.ToList()", span="47-47"];
m1_4 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", file="Cash.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(params QuantConnect.Symbol[])", span="40-40"];
m1_29 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="Cash.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m1_30 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="Cash.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m1_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Cash.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_22 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="var entry = MarketHoursDatabase.FromDataFolder().GetEntry(market, (string)null, securityType)", span="82-82"];
m1_13 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="68-68"];
m1_14 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="var universeSettings = _universeSettings ?? algorithm.UniverseSettings", span="70-70"];
m1_24 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="yield return new ManualUniverse(config, universeSettings, securityInitializer, grp);", span="84-84"];
m1_15 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="var securityInitializer = _securityInitializer ?? algorithm.SecurityInitializer", span="71-71"];
m1_16 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="var resolution = universeSettings.Resolution", span="73-73"];
m1_17 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="var type = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="74-74"];
m1_23 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="var config = new SubscriptionDataConfig(type, universeSymbol, resolution, entry.DataTimeZone, entry.ExchangeHours.TimeZone, false, false, true)", span="83-83"];
m1_18 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="_symbols.GroupBy(s => new { s.ID.Market, s.SecurityType })", span="77-77"];
m1_19 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="var market = grp.Key.Market", span="79-79"];
m1_20 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="var securityType = grp.Key.SecurityType", span="80-80"];
m1_21 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="var universeSymbol = Symbol.Create($''manual-portfolio-selection-model-{securityType}-{market}'', securityType, market)", span="81-81"];
m1_25 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="Cash.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="68-68"];
m1_8 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="Cash.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="56-56"];
m1_9 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="Cash.cs", label="_symbols = symbols.ToList()", span="58-58"];
m1_10 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="Cash.cs", label="_universeSettings = universeSettings", span="59-59"];
m1_11 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="Cash.cs", label="_securityInitializer = securityInitializer", span="60-60"];
m1_12 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="Cash.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel.ManualPortfolioSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="56-56"];
m1_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Cash.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_31 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="Cash.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30"];
m1_27 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Cash.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m1_28 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="Cash.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m1_6 [cluster="Unk.nameof", file="Cash.cs", label="Entry Unk.nameof", span=""];
m1_32 [cluster="lambda expression", file="Cash.cs", label="Entry lambda expression", span="77-77"];
m1_33 [cluster="lambda expression", file="Cash.cs", label="new { s.ID.Market, s.SecurityType }", span="77-77"];
m1_34 [cluster="lambda expression", file="Cash.cs", label="Exit lambda expression", span="77-77"];
m1_35 [file="Cash.cs", label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", span=""];
m3_61 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_59 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m3_22 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="earlyBirdTicks = result[0].EndTime.Ticks", span="109-109"];
m3_53 [cluster="Unk.ToArray", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry Unk.ToArray", span=""];
m3_11 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="!feed.EndOfBridges", span="81-81"];
m3_65 [cluster="System.DateTime.DateTime(long)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m3_66 [cluster="Unk.Min", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry Unk.Min", span=""];
m3_69 [cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry lambda expression", span="69-69"];
m3_70 [cluster="lambda expression", color=green, community=0, file="CoarseFineFundamentalRegressionAlgorithm.cs", label="0: x.Resolution.ToTimeSpan()", span="69-69"];
m3_71 [cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Exit lambda expression", span="69-69"];
m3_64 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m3_12 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="long earlyBirdTicks = 0", span="84-84"];
m3_31 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="point.IsFillForward", span="141-141"];
m3_32 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="point.Time = point.Time.RoundDown(periods[i])", span="143-143"];
m3_33 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="List<BaseData> dp", span="147-147"];
m3_83 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed)", span="235-235"];
m3_84 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="var i = 0", span="238-238"];
m3_86 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="feed.EndOfBridge[i]", span="240-240"];
m3_87 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="feed.Bridge[i].IsEmpty", span="241-241"];
m3_90 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="return true;", span="246-246"];
m3_88 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="return false;", span="243-243"];
m3_85 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="i < _subscriptions", span="238-238"];
m3_89 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="i++", span="238-238"];
m3_91 [cluster="QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.DataStream.AllBridgesHaveData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed)", span="235-235"];
m3_4 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="var frontier = frontierOrigin", span="67-67"];
m3_5 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", color=green, community=0, file="CoarseFineFundamentalRegressionAlgorithm.cs", label="1: var nextEmitTime = DateTime.MinValue", span="68-68"];
m3_7 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="feed.Bridge.Length != _subscriptions", span="72-72"];
m3_9 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Engine.LiveMode", span="75-75"];
m3_6 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", color=green, community=0, file="CoarseFineFundamentalRegressionAlgorithm.cs", label="1: var periods = feed.Subscriptions.Select(x => x.Resolution.ToTimeSpan()).ToArray()", span="69-69"];
m3_8 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Thread.Sleep(100)", span="72-72"];
m3_10 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="feed.PurgeData()", span="77-77"];
m3_30 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="algorithmTime = point.EndTime.Ticks", span="139-139"];
m3_0 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", span="61-61"];
m3_1 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="_subscriptions = feed.Subscriptions.Count", span="64-64"];
m3_2 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="AlgorithmTime = frontierOrigin", span="65-65"];
m3_3 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="long algorithmTime = AlgorithmTime.Ticks", span="66-66"];
m3_26 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="List<BaseData> dataPoints", span="124-124"];
m3_60 [cluster="Unk.RoundDown", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry Unk.RoundDown", span=""];
m3_54 [cluster="System.Threading.Thread.Sleep(int)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m3_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="125-125"];
m3_82 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m3_58 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryPeek(out T)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryPeek(out T)", span="0-0"];
m3_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_13 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="var newData = new Dictionary<int, List<BaseData>>()", span="85-85"];
m3_14 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", color=red, community=0, file="CoarseFineFundamentalRegressionAlgorithm.cs", label="1: WaitForDataOrEndOfBridges(feed, frontier)", span="88-88"];
m3_16 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", color=red, community=0, file="CoarseFineFundamentalRegressionAlgorithm.cs", label="1: i < _subscriptions", span="90-90"];
m3_18 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", color=red, community=0, file="CoarseFineFundamentalRegressionAlgorithm.cs", label="0: List<BaseData> result", span="97-97"];
m3_20 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="result.Count > 0 && result[0].EndTime > frontier", span="103-103"];
m3_15 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", color=red, community=0, file="CoarseFineFundamentalRegressionAlgorithm.cs", label="5: var i = 0", span="90-90"];
m3_17 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", color=red, community=0, file="CoarseFineFundamentalRegressionAlgorithm.cs", label="1: !feed.Bridge[i].IsEmpty", span="94-94"];
m3_19 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", color=red, community=0, file="CoarseFineFundamentalRegressionAlgorithm.cs", label="0: !feed.Bridge[i].TryPeek(out result)", span="98-98"];
m3_21 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="earlyBirdTicks == 0 || earlyBirdTicks > result[0].EndTime.Ticks", span="107-107"];
m3_23 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="result.Count > 0", span="113-113"];
m3_24 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="earlyBirdTicks == 0 || earlyBirdTicks > result[0].EndTime.Ticks", span="117-117"];
m3_25 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="earlyBirdTicks = result[0].EndTime.Ticks", span="119-119"];
m3_47 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="AlgorithmTime = DateTime.Now.RoundDown(periods.Min())", span="184-184"];
m3_46 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Engine.LiveMode && DateTime.Now > nextEmitTime", span="182-182"];
m3_42 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="yield return newData;", span="166-166"];
m3_49 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="yield return new Dictionary<int, List<BaseData>>();", span="186-186"];
m3_27 [cluster="QuantConnect.Data.SubscriptionDataSource.operator ==(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataSource)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.operator ==(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataSource)", span="95-95"];
m3_45 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="feed.EndOfBridges", span="175-175"];
m3_28 [cluster="QuantConnect.Data.SubscriptionDataSource.operator ==(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataSource)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="return Equals(left, right);", span="97-97"];
m3_48 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="nextEmitTime = DateTime.Now + TimeSpan.FromSeconds(1)", span="185-185"];
m3_44 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="frontier = new DateTime(earlyBirdTicks)", span="173-173"];
m3_50 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Log.Trace(''DataStream.GetData(): All Streams Completed.'')", span="189-189"];
m3_41 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="AlgorithmTime = new DateTime(algorithmTime)", span="165-165"];
m3_43 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="earlyBirdTicks > 0", span="170-170"];
m3_38 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Log.Error(''DataStream.GetData(): Failed to dequeue bridge item'')", span="158-158"];
m3_37 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="dp.AddRange(dataPoints)", span="153-153"];
m3_39 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="i++", span="90-90"];
m3_34 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="QuantConnect.Data.SubscriptionDataSource", span=""];
m3_36 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="newData[i] = dp", span="151-151"];
m3_29 [cluster="QuantConnect.Data.SubscriptionDataSource.operator ==(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataSource)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Exit QuantConnect.Data.SubscriptionDataSource.operator ==(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataSource)", span="95-95"];
m3_40 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="newData.Count > 0", span="163-163"];
m3_35 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="dp = new List<BaseData>()", span="150-150"];
m3_51 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", span="61-61"];
m3_57 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", span="197-197"];
m3_73 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="var now = Stopwatch.StartNew()", span="200-200"];
m3_77 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="!AllBridgesHaveData(feed) && now.ElapsedMilliseconds < loopTimeout", span="212-212"];
m3_79 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="dataStreamFrontier > feed.LoadedDataFrontier && (!feed.EndOfBridges && !feed.LoadingComplete) && now.ElapsedMilliseconds < loopTimeout", span="221-221"];
m3_76 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Thread.Sleep(1)", span="208-208"];
m3_78 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Thread.Sleep(1)", span="214-214"];
m3_80 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Thread.Sleep(1)", span="223-223"];
m3_74 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="var loopTimeout = (Engine.LiveMode) ? 50 : 30000", span="203-203"];
m3_75 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Engine.LiveMode", span="205-205"];
m3_81 [cluster="QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.DataStream.WaitForDataOrEndOfBridges(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", span="197-197"];
m3_68 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="130-130"];
m3_72 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="405-405"];
m3_52 [cluster="Unk.Select", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry Unk.Select", span=""];
m3_67 [cluster="System.TimeSpan.FromSeconds(double)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m3_63 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CoarseFineFundamentalRegressionAlgorithm.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m4_166 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m4_167 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, date, resolution, tickType));", span="345-345"];
m4_168 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m4_148 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="733-733"];
m4_344 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="bar == null", span="735-735"];
m4_346 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(bar.Open, bar.High, bar.Low, bar.Close);", span="740-740"];
m4_345 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="737-737"];
m4_347 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="733-733"];
m4_144 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.Scale(decimal)", span="693-693"];
m4_328 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="LeanData.cs", label="return (long)(value*10000);", span="695-695"];
m4_329 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.Scale(decimal)", span="693-693"];
m4_7 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m4_8 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var milliseconds = data.Time.TimeOfDay.TotalMilliseconds.ToString(CultureInfo.InvariantCulture)", span="52-52"];
m4_9 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var longTime = data.Time.ToString(DateFormat.TwelveCharacter)", span="53-53"];
m4_10 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=securityType, span="55-55"];
m4_12 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="58-58"];
m4_14 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = (Tick) data", span="61-61"];
m4_18 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bar = (TradeBar) data", span="66-66"];
m4_22 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigBar = (TradeBar) data", span="71-71"];
m4_25 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="77-77"];
m4_27 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = data as Tick", span="80-80"];
m4_37 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var quoteBar = data as QuoteBar", span="94-94"];
m4_40 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tradeBar = data as TradeBar", span="101-101"];
m4_46 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigQuoteBar = data as QuoteBar", span="110-110"];
m4_49 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigTradeBar = data as TradeBar", span="117-117"];
m4_55 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="132-132"];
m4_57 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = data as Tick", span="135-135"];
m4_63 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bar = data as QuoteBar", span="141-141"];
m4_69 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigBar = data as QuoteBar", span="149-149"];
m4_74 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="158-158"];
m4_76 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = (Tick)data", span="161-161"];
m4_85 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var quoteBar = data as QuoteBar", span="181-181"];
m4_88 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tradeBar = data as TradeBar", span="188-188"];
m4_91 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var openInterest = data as OpenInterest", span="194-194"];
m4_96 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigQuoteBar = data as QuoteBar", span="204-204"];
m4_99 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigTradeBar = data as TradeBar", span="211-211"];
m4_102 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigOpenInterest = data as OpenInterest", span="216-216"];
m4_105 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="224-224"];
m4_107 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label=resolution, span="228-228"];
m4_109 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tick = (Tick)data", span="231-231"];
m4_118 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var quoteBar = data as QuoteBar", span="251-251"];
m4_121 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var tradeBar = data as TradeBar", span="258-258"];
m4_124 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var openInterest = data as OpenInterest", span="264-264"];
m4_129 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigQuoteBar = data as QuoteBar", span="274-274"];
m4_132 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigTradeBar = data as TradeBar", span="281-281"];
m4_135 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="var bigOpenInterest = data as OpenInterest", span="286-286"];
m4_138 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="294-294"];
m4_139 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException(''securityType'', securityType, null);", span="299-299"];
m4_140 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NotImplementedException(''LeanData.GenerateLine has not yet been implemented for security type: '' + securityType + '' at resolution: '' + resolution);", span="302-302"];
m4_15 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, Scale(tick.LastPrice), tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'' : ''0'');", span="62-62"];
m4_19 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close), bar.Volume);", span="67-67"];
m4_31 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.LastPrice, tick.Quantity);", span="85-85"];
m4_33 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.BidPrice, tick.BidSize, tick.AskPrice, tick.AskSize);", span="89-89"];
m4_39 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    ToNonScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="97-99"];
m4_42 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tradeBar.Open, tradeBar.High, tradeBar.Low, tradeBar.Close, tradeBar.Volume);", span="104-104"];
m4_60 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.BidPrice, tick.AskPrice);", span="137-137"];
m4_66 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                ToNonScaledCsv(bar.Bid), bar.LastBidSize,\r\n                                ToNonScaledCsv(bar.Ask), bar.LastAskSize);", span="143-145"];
m4_78 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tick.LastPrice), tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'' : ''0'');", span="164-165"];
m4_80 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tick.BidPrice), tick.BidSize, Scale(tick.AskPrice), tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="169-170"];
m4_82 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.Value);", span="174-174"];
m4_87 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    ToScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="184-186"];
m4_90 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tradeBar.Open), Scale(tradeBar.High), Scale(tradeBar.Low), Scale(tradeBar.Close), tradeBar.Volume);", span="191-192"];
m4_93 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, openInterest.Value);", span="197-197"];
m4_104 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, bigOpenInterest.Value);", span="219-219"];
m4_111 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                             tick.LastPrice, tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'': ''0'');", span="234-235"];
m4_113 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                             tick.BidPrice, tick.BidSize, tick.AskPrice, tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="239-240"];
m4_115 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, tick.Value);", span="244-244"];
m4_120 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                    ToNonScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="254-256"];
m4_123 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds,\r\n                                             tradeBar.Open, tradeBar.High, tradeBar.Low, tradeBar.Close, tradeBar.Volume);", span="261-262"];
m4_126 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(milliseconds, openInterest.Value);", span="267-267"];
m4_23 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, Scale(bigBar.Open), Scale(bigBar.High), Scale(bigBar.Low), Scale(bigBar.Close), bigBar.Volume);", span="72-72"];
m4_48 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                    ToNonScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="113-115"];
m4_51 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                             bigTradeBar.Open,\r\n                                             bigTradeBar.High,\r\n                                             bigTradeBar.Low,\r\n                                             bigTradeBar.Close,\r\n                                             bigTradeBar.Volume);", span="120-125"];
m4_72 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                ToNonScaledCsv(bigBar.Bid), bigBar.LastBidSize,\r\n                                ToNonScaledCsv(bigBar.Ask), bigBar.LastAskSize);", span="151-153"];
m4_98 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                    ToScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="207-209"];
m4_101 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, ToScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="214-214"];
m4_131 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime,\r\n                                    ToNonScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="277-279"];
m4_134 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, ToNonScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="284-284"];
m4_137 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="return ToCsv(longTime, bigOpenInterest.Value);", span="289-289"];
m4_11 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Equity", span="57-57"];
m4_24 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Crypto", span="76-76"];
m4_53 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Forex", span="130-130"];
m4_73 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Option", span="157-157"];
m4_106 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Future", span="227-227"];
m4_13 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="60-60"];
m4_16 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="64-64"];
m4_20 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="69-69"];
m4_17 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="65-65"];
m4_21 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="70-70"];
m4_26 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="79-79"];
m4_35 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="92-92"];
m4_44 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="108-108"];
m4_28 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick == null", span="81-81"];
m4_30 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Trade", span="83-83"];
m4_32 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Quote", span="87-87"];
m4_29 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''Cryto tick could not be created'');", span="81-81"];
m4_34 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentException(''Cryto tick could not be created'');", span="91-91"];
m4_36 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="93-93"];
m4_38 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="quoteBar != null", span="95-95"];
m4_41 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tradeBar != null", span="102-102"];
m4_43 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''Cryto minute/second bar could not be created'');", span="106-106"];
m4_45 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="109-109"];
m4_47 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigQuoteBar != null", span="111-111"];
m4_50 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigTradeBar != null", span="118-118"];
m4_52 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''Cryto hour/daily bar could not be created'');", span="127-127"];
m4_54 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Cfd", span="131-131"];
m4_56 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="134-134"];
m4_61 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="139-139"];
m4_67 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="147-147"];
m4_58 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick == null", span="136-136"];
m4_59 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''tick'');", span="136-136"];
m4_62 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="140-140"];
m4_64 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bar == null", span="142-142"];
m4_65 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''bar'');", span="142-142"];
m4_68 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="148-148"];
m4_70 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigBar == null", span="150-150"];
m4_71 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="throw new NullReferenceException(''big bar'');", span="150-150"];
m4_75 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="160-160"];
m4_83 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="178-178"];
m4_94 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="201-201"];
m4_77 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Trade", span="162-162"];
m4_79 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Quote", span="167-167"];
m4_81 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.OpenInterest", span="172-172"];
m4_84 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="179-179"];
m4_86 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="quoteBar != null", span="182-182"];
m4_89 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tradeBar != null", span="189-189"];
m4_92 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="openInterest != null", span="195-195"];
m4_95 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="202-202"];
m4_97 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigQuoteBar != null", span="205-205"];
m4_100 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigTradeBar != null", span="212-212"];
m4_103 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigOpenInterest != null", span="217-217"];
m4_108 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Tick", span="230-230"];
m4_116 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Second", span="248-248"];
m4_127 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Hour", span="271-271"];
m4_110 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Trade", span="232-232"];
m4_112 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.Quote", span="237-237"];
m4_114 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tick.TickType == TickType.OpenInterest", span="242-242"];
m4_117 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Minute", span="249-249"];
m4_119 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="quoteBar != null", span="252-252"];
m4_122 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="tradeBar != null", span="259-259"];
m4_125 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="openInterest != null", span="265-265"];
m4_128 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Resolution.Daily", span="272-272"];
m4_130 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigQuoteBar != null", span="275-275"];
m4_133 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigTradeBar != null", span="282-282"];
m4_136 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="bigOpenInterest != null", span="287-287"];
m4_141 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m4_149 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="719-719"];
m4_340 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="bar == null", span="721-721"];
m4_342 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close));", span="726-726"];
m4_341 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="723-723"];
m4_343 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="719-719"];
m4_390 [cluster="string.GetExtension()", file="LeanData.cs", label="Entry string.GetExtension()", span="412-412"];
m4_400 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="LeanData.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m4_387 [cluster="System.Enum.GetNames(System.Type)", file="LeanData.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m4_145 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ToCsv(params object[])", span="701-701"];
m4_330 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="var i = 0", span="704-704"];
m4_331 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="i < args.Length", span="704-704"];
m4_332 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="var value = args[i]", span="706-706"];
m4_334 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="args[i] = ((decimal) value).Normalize().ToString(CultureInfo.InvariantCulture)", span="709-709"];
m4_336 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="return string.Join('','', args);", span="713-713"];
m4_335 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="i++", span="704-704"];
m4_333 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="value is decimal", span="707-707"];
m4_337 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ToCsv(params object[])", span="701-701"];
m4_152 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m4_153 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="resolution == Resolution.Tick", span="313-313"];
m4_155 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="tickType == TickType.OpenInterest", span="314-314"];
m4_157 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="tickType == TickType.Quote", span="315-315"];
m4_154 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(Tick);", span="313-313"];
m4_156 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(OpenInterest);", span="314-314"];
m4_158 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(QuoteBar);", span="315-315"];
m4_159 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return typeof(TradeBar);", span="316-316"];
m4_160 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m4_320 [cluster="string.Split(params char[])", file="LeanData.cs", label="Entry string.Split(params char[])", span="0-0"];
m4_355 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(ZipEntryName)", span="764-764"];
m4_348 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="750-750"];
m4_349 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(TradeBar)", span="752-752"];
m4_351 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(QuoteBar)", span="756-756"];
m4_353 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(OpenInterest)", span="760-760"];
m4_357 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="type == typeof(Tick)", span="768-768"];
m4_358 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="770-770"];
m4_350 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Trade;", span="754-754"];
m4_352 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="758-758"];
m4_354 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.OpenInterest;", span="762-762"];
m4_356 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="766-766"];
m4_360 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Trade;", span="776-776"];
m4_359 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="772-772"];
m4_361 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="750-750"];
m4_151 [cluster="System.NotImplementedException.NotImplementedException(string)", file="LeanData.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m4_338 [cluster="decimal.Normalize()", file="LeanData.cs", label="Entry decimal.Normalize()", span="236-236"];
m4_205 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="538-538"];
m4_251 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var tickTypeString = tickType.ToLower()", span="540-540"];
m4_252 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="541-541"];
m4_253 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="542-542"];
m4_254 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="symbol.ID.SecurityType", span="544-544"];
m4_260 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}.zip'',\r\n                            symbol.Value.ToLower()\r\n                            );", span="552-554"];
m4_264 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                            symbol.Value.ToLower(),\r\n                            tickTypeString\r\n                        );", span="564-567"];
m4_268 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}.zip'',\r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickTypeString,\r\n                            symbol.ID.OptionStyle.ToLower()\r\n                            );", span="577-581"];
m4_269 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString,\r\n                        symbol.ID.OptionStyle.ToLower()\r\n                        );", span="584-588"];
m4_272 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickTypeString);", span="593-595"];
m4_261 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString\r\n                        );", span="557-560"];
m4_265 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString\r\n                    );", span="570-573"];
m4_273 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString);", span="598-600"];
m4_259 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="550-550"];
m4_263 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="562-562"];
m4_267 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="575-575"];
m4_271 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="591-591"];
m4_255 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Base", span="546-546"];
m4_262 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Crypto", span="561-561"];
m4_266 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Option", span="574-574"];
m4_270 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Future", span="590-590"];
m4_274 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Commodity", span="602-602"];
m4_256 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Equity", span="547-547"];
m4_257 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Forex", span="548-548"];
m4_258 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Cfd", span="549-549"];
m4_275 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException();", span="604-604"];
m4_276 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="538-538"];
m4_407 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="810-810"];
m4_401 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="793-793"];
m4_408 [cluster="lambda expression", file="LeanData.cs", label="securityTypes.Contains(x.ToLower())", span="810-810"];
m4_405 [cluster="lambda expression", file="LeanData.cs", label="x == fileName.First()", span="801-801"];
m4_404 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="801-801"];
m4_402 [cluster="lambda expression", file="LeanData.cs", label="x.ToLower()", span="793-793"];
m4_403 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="793-793"];
m4_406 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="801-801"];
m4_409 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="810-810"];
m4_150 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="LeanData.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m4_397 [cluster="string.Substring(int, int)", file="LeanData.cs", label="Entry string.Substring(int, int)", span="0-0"];
m4_325 [cluster="QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", file="LeanData.cs", label="Entry QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", span="29-29"];
m4_146 [cluster="System.NullReferenceException.NullReferenceException(string)", file="LeanData.cs", label="Entry System.NullReferenceException.NullReferenceException(string)", span="0-0"];
m4_202 [cluster="System.IO.Path.Combine(params string[])", file="LeanData.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m4_362 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="786-786"];
m4_363 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="symbol = null", span="788-788"];
m4_368 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="fileName = fileName.Replace(fileName.GetExtension(), '''')", span="798-798"];
m4_364 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="resolution = Resolution.Daily", span="789-789"];
m4_365 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="date = default(DateTime)", span="790-790"];
m4_366 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var pathSeparators = new[] { '/', '\\'}", span="792-792"];
m4_367 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var securityTypes = Enum.GetNames(typeof(SecurityType)).Select(x => x.ToLower()).ToList()", span="793-793"];
m4_369 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="fileName.First() == '.' || pathSeparators.Any(x => x == fileName.First())", span="801-801"];
m4_371 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var info = fileName.Split(pathSeparators, StringSplitOptions.RemoveEmptyEntries).ToList()", span="807-807"];
m4_372 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var startIndex = info.FindIndex(x => securityTypes.Contains(x.ToLower()))", span="810-810"];
m4_370 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="fileName = fileName.Remove(0, 1)", span="803-803"];
m4_383 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="Log.Error(''LeanData.TryParsePath(): Error encountered while parsing the path {0}. Error: {1}'', fileName, ex.GetBaseException())", span="833-833"];
m4_373 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var market = info[startIndex + 1]", span="813-813"];
m4_374 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var ticker = info[startIndex + 3]", span="814-814"];
m4_375 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="resolution = (Resolution)Enum.Parse(typeof(Resolution), info[startIndex + 2], true)", span="815-815"];
m4_376 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="var securityType = (SecurityType)Enum.Parse(typeof(SecurityType), info[startIndex], true)", span="816-816"];
m4_380 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="date = DateTime.ParseExact(info[startIndex + 4].Substring(0, 8), DateFormat.EightCharacter, null)", span="826-826"];
m4_381 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="symbol = Symbol.Create(ticker, securityType, market)", span="829-829"];
m4_379 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="resolution < Resolution.Hour", span="824-824"];
m4_377 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", color=red, community=0, file="LeanData.cs", label="1: securityType == SecurityType.Option || securityType == SecurityType.Future", span="818-818"];
m4_378 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", color=red, community=0, file="LeanData.cs", label="1: throw new ArgumentException(''LeanData.TryParsePath(): Options and futures are not supported by this method.'');", span="820-820"];
m4_382 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label=Exception, span="831-831"];
m4_385 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="return true;", span="837-837"];
m4_384 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="return false;", span="834-834"];
m4_386 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="786-786"];
m4_143 [cluster="System.DateTime.ToString(string)", file="LeanData.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m4_250 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="512-512"];
m4_241 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="512-512"];
m4_242 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="securityType != SecurityType.Base && securityType != SecurityType.Equity && securityType != SecurityType.Forex && securityType != SecurityType.Cfd && securityType != SecurityType.Crypto", span="514-514"];
m4_244 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="symbol = symbol.ToLower()", span="519-519"];
m4_245 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="521-521"];
m4_247 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="527-527"];
m4_249 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'', date.ToString(DateFormat.EightCharacter), symbol, resolution.ToLower(), dataType.ToLower());", span="532-532"];
m4_243 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="throw new NotImplementedException(''This method only implements base, equity, forex, crypto and cfd security type.'');", span="516-516"];
m4_246 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return symbol + ''.csv'';", span="523-523"];
m4_248 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="dataType = TickType.Quote", span="529-529"];
m4_195 [cluster="System.Enum.ToLower()", file="LeanData.cs", label="Entry System.Enum.ToLower()", span="930-930"];
m4_398 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="LeanData.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m4_196 [cluster="string.ToLower()", file="LeanData.cs", label="Entry string.ToLower()", span="0-0"];
m4_147 [cluster="System.ArgumentException.ArgumentException(string)", file="LeanData.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m4_5 [cluster="QuantConnect.Data.IBaseData.Clone()", file="LeanData.cs", label="Entry QuantConnect.Data.IBaseData.Clone()", span="99-99"];
m4_171 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m4_172 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, securityType, market, date, resolution));", span="353-353"];
m4_173 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m4_323 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="LeanData.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m4_339 [cluster="decimal.ToString(System.IFormatProvider)", file="LeanData.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m4_399 [cluster="System.Exception.GetBaseException()", file="LeanData.cs", label="Entry System.Exception.GetBaseException()", span="0-0"];
m4_211 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="611-611"];
m4_279 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="613-613"];
m4_280 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="return symbol.ToLower() + ''.zip'';", span="615-615"];
m4_281 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="var zipFileName = date.ToString(DateFormat.EightCharacter)", span="618-618"];
m4_282 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="tickType = tickType ?? (securityType == SecurityType.Forex || securityType == SecurityType.Cfd ? TickType.Quote : TickType.Trade)", span="619-619"];
m4_284 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="return zipFileName + suffix;", span="621-621"];
m4_283 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="var suffix = string.Format(''_{0}.zip'', tickType.Value.ToLower())", span="620-620"];
m4_285 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="611-611"];
m4_238 [cluster="string.Format(string, object)", file="LeanData.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_322 [cluster="decimal.Parse(string)", file="LeanData.cs", label="Entry decimal.Parse(string)", span="0-0"];
m4_319 [cluster="string.Replace(string, string)", file="LeanData.cs", label="Entry string.Replace(string, string)", span="0-0"];
m4_327 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="LeanData.cs", label="Entry QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="147-147"];
m4_395 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="LeanData.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m4_318 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="645-645"];
m4_291 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="645-645"];
m4_292 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var isHourlyOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="647-647"];
m4_293 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var parts = zipEntryName.Replace(''.csv'', string.Empty).Split('_')", span="648-648"];
m4_294 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="symbol.ID.SecurityType", span="649-649"];
m4_301 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="return Symbol.CreateOption(symbol.Underlying, symbol.ID.Market, style, right, strike, expiry);", span="658-658"];
m4_306 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="return Symbol.CreateOption(symbol.Underlying, symbol.ID.Market, style, right, strike, expiry);", span="666-666"];
m4_312 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="return Symbol.CreateFuture(parts[0], symbol.ID.Market, futureExpiry);", span="675-675"];
m4_316 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="return Symbol.CreateFuture(parts[1], symbol.ID.Market, futureExpiry);", span="682-682"];
m4_317 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="throw new NotImplementedException($''ReadSymbolFromZipEntry is not implemented for {symbol.ID.SecurityType} {symbol.ID.Market} {resolution}'');", span="686-686"];
m4_296 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label=isHourlyOrDaily, span="652-652"];
m4_308 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label=isHourlyOrDaily, span="670-670"];
m4_297 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[2], true)", span="654-654"];
m4_298 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[3], true)", span="655-655"];
m4_299 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var strike = decimal.Parse(parts[4]) / 10000m", span="656-656"];
m4_300 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiry = DateTime.ParseExact(parts[5], DateFormat.EightCharacter, null)", span="657-657"];
m4_302 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[4], true)", span="662-662"];
m4_303 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[5], true)", span="663-663"];
m4_304 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var strike = decimal.Parse(parts[6]) / 10000m", span="664-664"];
m4_305 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiry = DateTime.ParseExact(parts[7], DateFormat.EightCharacter, null)", span="665-665"];
m4_309 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiryYearMonth = DateTime.ParseExact(parts[2], DateFormat.YearMonth, null)", span="672-672"];
m4_310 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiryFunc = FuturesExpiryFunctions.FuturesExpiryFunction(parts[1])", span="673-673"];
m4_313 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var expiryYearMonth = DateTime.ParseExact(parts[4], DateFormat.YearMonth, null)", span="679-679"];
m4_314 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiryFunc = FuturesExpiryFunctions.FuturesExpiryFunction(parts[1])", span="680-680"];
m4_295 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="SecurityType.Option", span="651-651"];
m4_307 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="SecurityType.Future", span="669-669"];
m4_311 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiry = futureExpiryFunc(expiryYearMonth)", span="674-674"];
m4_315 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="LeanData.cs", label="var futureExpiry = futureExpiryFunc(expiryYearMonth)", span="681-681"];
m4_6 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="LeanData.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="587-587"];
m4_240 [cluster="string.Join(string, params string[])", file="LeanData.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m4_392 [cluster="Unk.Any", file="LeanData.cs", label="Entry Unk.Any", span=""];
m4_170 [cluster="System.IO.Path.Combine(string, string)", file="LeanData.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m4_161 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="327-327"];
m4_162 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="baseDataType == typeof(TradeBar) ||\r\n                baseDataType == typeof(QuoteBar) ||\r\n                baseDataType == typeof(OpenInterest)", span="329-331"];
m4_163 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="return true;", span="333-333"];
m4_164 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="return false;", span="336-336"];
m4_165 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="327-327"];
m4_199 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="391-391"];
m4_200 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="LeanData.cs", label="return Path.Combine(Globals.DataFolder,\r\n                                        ''equity'',\r\n                                        symbol.ID.Market,\r\n                                        ''factor_files'',\r\n                                        symbol.Value.ToLower() + ''.csv'');", span="393-397"];
m4_201 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="391-391"];
m4_394 [cluster="string.Split(char[], System.StringSplitOptions)", file="LeanData.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m4_174 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="411-411"];
m4_206 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="var directory = Path.Combine(securityType.ToLower(), market.ToLower(), resolution.ToLower())", span="413-413"];
m4_207 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="resolution != Resolution.Daily && resolution != Resolution.Hour", span="414-414"];
m4_208 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="directory = Path.Combine(directory, symbol.ToLower())", span="416-416"];
m4_209 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="return Path.Combine(directory, GenerateZipFileName(symbol, securityType, date, resolution));", span="419-419"];
m4_210 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="411-411"];
m4_237 [cluster="string.Format(string, params object[])", file="LeanData.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m4_278 [cluster="string.Format(string, object, object, object)", file="LeanData.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m4_0 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", span="40-40"];
m4_1 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="var clone = data.Clone()", span="42-42"];
m4_2 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="clone.Time = data.Time.ConvertTo(exchangeTimeZone, dataTimeZone)", span="43-43"];
m4_3 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="return GenerateLine(clone, clone.Symbol.ID.SecurityType, resolution);", span="44-44"];
m4_4 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", span="40-40"];
m4_326 [cluster="System.Func<T, TResult>.Invoke(T)", file="LeanData.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_198 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="LeanData.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m4_393 [cluster="string.Remove(int, int)", file="LeanData.cs", label="Entry string.Remove(int, int)", span="0-0"];
m4_169 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m4_203 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return Path.Combine(GenerateRelativeZipFileDirectory(symbol, resolution), GenerateZipFileName(symbol, date, resolution, tickType));", span="405-405"];
m4_204 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m4_277 [cluster="string.Format(string, object, object)", file="LeanData.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_236 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m4_212 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m4_213 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="427-427"];
m4_214 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="428-428"];
m4_215 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="symbol.ID.SecurityType", span="430-430"];
m4_221 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="resolution == Resolution.Tick && symbol.SecurityType == SecurityType.Equity", span="437-437"];
m4_222 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'',\r\n                            formattedDate,\r\n                            symbol.Value.ToLower(),\r\n                            tickType,\r\n                            resolution\r\n                        );", span="439-444"];
m4_224 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}.csv'',\r\n                            symbol.Value.ToLower()\r\n                            );", span="449-451"];
m4_225 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'',\r\n                        formattedDate,\r\n                        symbol.Value.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower()\r\n                        );", span="454-459"];
m4_228 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickType.ToLower(),\r\n                            symbol.ID.OptionStyle.ToLower(),\r\n                            symbol.ID.OptionRight.ToLower(),\r\n                            Scale(symbol.ID.StrikePrice),\r\n                            symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                            ) + ''.csv'';", span="464-471"];
m4_229 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.Underlying.Value.ToLower(), // underlying\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.OptionStyle.ToLower(),\r\n                        symbol.ID.OptionRight.ToLower(),\r\n                        Scale(symbol.ID.StrikePrice),\r\n                        symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                        ) + ''.csv'';", span="474-483"];
m4_232 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickType.ToLower(),\r\n                            symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                            ) + ''.csv'';", span="488-492"];
m4_233 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.ID.Symbol.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                        ) + ''.csv'';", span="495-501"];
m4_223 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="447-447"];
m4_227 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="462-462"];
m4_231 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label=isHourOrDaily, span="486-486"];
m4_216 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Base", span="432-432"];
m4_226 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Option", span="461-461"];
m4_230 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Future", span="485-485"];
m4_234 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Commodity", span="503-503"];
m4_217 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Equity", span="433-433"];
m4_218 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Forex", span="434-434"];
m4_219 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Cfd", span="435-435"];
m4_220 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="SecurityType.Crypto", span="436-436"];
m4_235 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException();", span="505-505"];
m4_175 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="359-359"];
m4_176 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="361-361"];
m4_177 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var securityType = symbol.ID.SecurityType.ToLower()", span="362-362"];
m4_178 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var market = symbol.ID.Market.ToLower()", span="363-363"];
m4_179 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var res = resolution.ToLower()", span="364-364"];
m4_181 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="symbol.ID.SecurityType", span="366-366"];
m4_187 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.Value.ToLower()) : directory;", span="373-373"];
m4_189 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.Underlying.Value.ToLower()) : directory;", span="377-377"];
m4_191 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.ID.Symbol.ToLower()) : directory;", span="380-380"];
m4_180 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="var directory = Path.Combine(securityType, market, res)", span="365-365"];
m4_182 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Base", span="368-368"];
m4_188 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Option", span="375-375"];
m4_190 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Future", span="379-379"];
m4_192 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Commodity", span="382-382"];
m4_183 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Equity", span="369-369"];
m4_184 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Forex", span="370-370"];
m4_185 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Cfd", span="371-371"];
m4_186 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="SecurityType.Crypto", span="372-372"];
m4_193 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="throw new ArgumentOutOfRangeException();", span="384-384"];
m4_194 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="359-359"];
m4_396 [cluster="System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", span="0-0"];
m4_410 [cluster="Unk.Contains", file="LeanData.cs", label="Entry Unk.Contains", span=""];
m4_286 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", span="629-629"];
m4_287 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="631-631"];
m4_288 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Quote;", span="633-633"];
m4_289 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="return TickType.Trade;", span="635-635"];
m4_290 [cluster="QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", file="LeanData.cs", label="Exit QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)", span="629-629"];
m4_321 [cluster="System.Enum.Parse(System.Type, string, bool)", file="LeanData.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m4_391 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="LeanData.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m4_142 [cluster="double.ToString(System.IFormatProvider)", file="LeanData.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m4_324 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="LeanData.cs", label="Entry QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="119-119"];
m4_388 [cluster="Unk.Select", file="LeanData.cs", label="Entry Unk.Select", span=""];
m4_239 [cluster="string.Join(string, params object[])", file="LeanData.cs", label="Entry string.Join(string, params object[])", span="0-0"];
m4_197 [cluster="System.IO.Path.Combine(string, string, string)", file="LeanData.cs", label="Entry System.IO.Path.Combine(string, string, string)", span="0-0"];
m4_411 [file="LeanData.cs", label=string, span=""];
m4_412 [file="LeanData.cs", label=securityTypes, span=""];
m5_0 [cluster="QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", file="LeanDataReader.cs", label="Entry QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", span="42-42"];
m5_1 [cluster="QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", file="LeanDataReader.cs", label="_date = date", span="44-44"];
m5_2 [cluster="QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", file="LeanDataReader.cs", label="_zipPath = LeanData.GenerateZipFilePath(dataFolder, symbol, date,  resolution, config.TickType)", span="45-45"];
m5_3 [cluster="QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", file="LeanDataReader.cs", label="_zipentry = LeanData.GenerateZipEntryName(symbol, date, resolution, config.TickType)", span="46-46"];
m5_4 [cluster="QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", file="LeanDataReader.cs", label="_config = config", span="47-47"];
m5_5 [cluster="QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", file="LeanDataReader.cs", label="Exit QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", span="42-42"];
m5_21 [cluster="Unk.Unzip", file="LeanDataReader.cs", label="Entry Unk.Unzip", span=""];
m5_22 [cluster="Unk.ReadLine", file="LeanDataReader.cs", label="Entry Unk.ReadLine", span=""];
m5_20 [cluster="System.Func<T, TResult>.Invoke(T)", file="LeanDataReader.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m5_6 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m5_24 [cluster="Unk.Dispose", file="LeanDataReader.cs", label="Entry Unk.Dispose", span=""];
m5_7 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataReader.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m5_23 [cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LeanDataReader.cs", label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144"];
m5_8 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="LeanDataReader.cs", label="Entry QuantConnect.ToolBox.LeanDataReader.Parse()", span="54-54"];
m5_9 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", color=green, community=0, file="LeanDataReader.cs", label="1: var factory = (BaseData) ObjectActivator.GetActivator(_config.Type).Invoke(new object[0])", span="56-56"];
m5_10 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", color=green, community=0, file="LeanDataReader.cs", label="1: ZipFile zipFile", span="57-57"];
m5_16 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", color=green, community=0, file="LeanDataReader.cs", label="0: yield return factory.Reader(_config, line, _date, false);", span="65-65"];
m5_13 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", color=green, community=0, file="LeanDataReader.cs", label="0: yield break;", span="61-61"];
m5_12 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", color=green, community=0, file="LeanDataReader.cs", label="1: unzipped == null", span="60-60"];
m5_14 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", color=green, community=0, file="LeanDataReader.cs", label="1: string line", span="62-62"];
m5_15 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", color=green, community=0, file="LeanDataReader.cs", label="1: (line = unzipped.ReadLine()) != null", span="63-63"];
m5_11 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", color=green, community=0, file="LeanDataReader.cs", label="1: var unzipped = Compression.Unzip(_zipPath,_zipentry, out zipFile)", span="58-58"];
m5_17 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", color=green, community=0, file="LeanDataReader.cs", label="2: zipFile.Dispose()", span="68-68"];
m5_18 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="LeanDataReader.cs", label="Exit QuantConnect.ToolBox.LeanDataReader.Parse()", span="54-54"];
m5_19 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="LeanDataReader.cs", label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="49-49"];
m5_25 [file="LeanDataReader.cs", label="QuantConnect.ToolBox.LeanDataReader", span=""];
m6_32 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m6_59 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m6_110 [cluster="System.TimeSpan.FromHours(double)", file="LeanDataReaderTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m6_35 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="62-62"];
m6_123 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(System.TimeSpan)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(System.TimeSpan)", span="29-29"];
m6_127 [cluster="QuantConnect.Data.Consolidators.OpenInterestConsolidator.OpenInterestConsolidator(System.TimeSpan)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Data.Consolidators.OpenInterestConsolidator.OpenInterestConsolidator(System.TimeSpan)", span="43-43"];
m6_111 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="LeanDataReaderTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_131 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", span="44-44"];
m6_62 [cluster="System.Text.StringBuilder.ToString()", file="LeanDataReaderTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_57 [cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="LeanDataReaderTests.cs", label="Entry QuantConnect.ToolBox.LeanDataReader.Parse()", span="54-54"];
m6_54 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m6_132 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Entry lambda expression", span="180-183"];
m6_24 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Entry lambda expression", span="65-65"];
m6_25 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="f.Value", span="65-65"];
m6_26 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Exit lambda expression", span="65-65"];
m6_38 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Entry lambda expression", span="91-91"];
m6_39 [cluster="lambda expression", color=red, community=0, file="LeanDataReaderTests.cs", label="1: s.Symbol", span="91-91"];
m6_40 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Exit lambda expression", span="91-91"];
m6_133 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="sb.Append(LeanData.GenerateLine(bar, SecurityType.Future, outputResolution) + Environment.NewLine)", span="182-182"];
m6_121 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="new QuoteBarConsolidator(timeSpan)", span="149-149"];
m6_125 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="new OpenInterestConsolidator(timeSpan)", span="150-150"];
m6_129 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="new TradeBarConsolidator(timeSpan)", span="151-151"];
m6_120 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Entry lambda expression", span="149-149"];
m6_122 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Exit lambda expression", span="149-149"];
m6_124 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Entry lambda expression", span="150-150"];
m6_126 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Exit lambda expression", span="150-150"];
m6_128 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Entry lambda expression", span="151-151"];
m6_130 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Exit lambda expression", span="151-151"];
m6_134 [cluster="lambda expression", file="LeanDataReaderTests.cs", label="Exit lambda expression", span="180-183"];
m6_56 [cluster="QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", span="42-42"];
m6_33 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m6_113 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
m6_118 [cluster="System.IO.DirectoryInfo.Create()", file="LeanDataReaderTests.cs", label="Entry System.IO.DirectoryInfo.Create()", span="0-0"];
m6_23 [cluster="Unk.IsTrue", file="LeanDataReaderTests.cs", label="Entry Unk.IsTrue", span=""];
m6_16 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m6_112 [cluster="System.Func<TResult>.Invoke()", file="LeanDataReaderTests.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m6_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="45-45"];
m6_61 [cluster="System.DateTime.AddDays(double)", file="LeanDataReaderTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m6_21 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", span="94-94"];
m6_41 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var dataType = LeanData.GetDataType(res, tickType)", span="96-96"];
m6_42 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", color=red, community=0, file="LeanDataReaderTests.cs", label="1: var config = new SubscriptionDataConfig(dataType, future, res,\r\n                TimeZones.NewYork, TimeZones.NewYork, false, false, false, false, tickType)", span="97-98"];
m6_46 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var leanDataReader = new LeanDataReader(config, future, res, date, _dataDirectory)", span="106-106"];
m6_49 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="sb.AppendLine(LeanData.GenerateLine(bar, SecurityType.Future, res))", span="112-112"];
m6_43 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var date = _fromDate", span="100-100"];
m6_44 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var sb = new StringBuilder()", span="102-102"];
m6_45 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="date <= _toDate", span="104-104"];
m6_50 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="date = date.AddDays(1)", span="114-114"];
m6_51 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var csv = sb.ToString()", span="116-116"];
m6_47 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var data = leanDataReader.Parse().ToList()", span="108-108"];
m6_48 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label=data, span="109-109"];
m6_52 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="return csv;", span="117-117"];
m6_53 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution)", span="94-94"];
m6_20 [cluster="Unk.AreEqual", file="LeanDataReaderTests.cs", label="Entry Unk.AreEqual", span=""];
m6_58 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="LeanDataReaderTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m6_135 [cluster="System.Text.StringBuilder.Append(string)", file="LeanDataReaderTests.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m6_19 [cluster="Unk.Join", file="LeanDataReaderTests.cs", label="Entry Unk.Join", span=""];
m6_0 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", span="42-42"];
m6_1 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", color=red, community=1, file="LeanDataReaderTests.cs", label="1: var canonicalFutures = new Dictionary<Symbol,string>()\r\n            {\r\n                { Symbol.Create(Futures.Indices.SP500EMini, SecurityType.Future, Market.USA),\r\n                ''ESZ13|ESH14|ESM14|ESU14|ESZ14'' },\r\n                {Symbol.Create(Futures.Metals.Gold, SecurityType.Future, Market.USA),\r\n                ''GCV13|GCX13|GCZ13|GCG14|GCJ14|GCM14|GCQ14|GCV14|GCZ14|GCG15|GCJ15|GCM15|GCQ15|GCZ15|GCM16|GCZ16|GCM17|GCZ17|GCM18|GCZ18|GCM19''},\r\n            }", span="44-50"];
m6_2 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label="var tickTypes = new[] { TickType.Trade, TickType.Quote, TickType.OpenInterest }", span="52-52"];
m6_4 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label=canonicalFutures, span="57-57"];
m6_3 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label="var resolutions = new[] { Resolution.Minute }", span="54-54"];
m6_6 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label=tickTypes, span="61-61"];
m6_5 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label=resolutions, span="59-59"];
m6_7 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", color=red, community=0, file="LeanDataReaderTests.cs", label="1: var futures = LoadFutureChain(canonical.Key,_fromDate, tickType, res)", span="63-63"];
m6_12 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label="string csv = LoadFutureData(future, tickType, res)", span="72-72"];
m6_9 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", color=red, community=0, file="LeanDataReaderTests.cs", label="1: tickType==TickType.Quote", span="67-67"];
m6_8 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label="string chain = string.Join(''|'', futures.Select(f => f.Value))", span="65-65"];
m6_10 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label="Assert.AreEqual(canonical.Value, chain)", span="68-68"];
m6_11 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label=futures, span="70-70"];
m6_13 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label="Assert.IsTrue(!string.IsNullOrEmpty(csv))", span="73-73"];
m6_14 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", file="LeanDataReaderTests.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataReaderTests.ReadFutureChainData()", span="42-42"];
m6_116 [cluster="System.IO.Path.Combine(string, string)", file="LeanDataReaderTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m6_55 [cluster="System.Text.StringBuilder.StringBuilder()", file="LeanDataReaderTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m6_15 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LeanDataReaderTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_30 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureChain(QuantConnect.Symbol, System.DateTime, QuantConnect.TickType, QuantConnect.Resolution)", color=red, community=0, file="LeanDataReaderTests.cs", label="1: return factory.Read(new SubscriptionDataSource(filePath, SubscriptionTransportMedium.LocalFile, FileFormat.ZipEntryName))\r\n                   .Select(s => s.Symbol).ToList();", span="90-91"];
m6_17 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureChain(QuantConnect.Symbol, System.DateTime, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureChain(QuantConnect.Symbol, System.DateTime, QuantConnect.TickType, QuantConnect.Resolution)", span="80-80"];
m6_27 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureChain(QuantConnect.Symbol, System.DateTime, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var filePath = LeanData.GenerateZipFilePath(_dataDirectory, baseFuture, date, res, tickType)", span="82-82"];
m6_28 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureChain(QuantConnect.Symbol, System.DateTime, QuantConnect.TickType, QuantConnect.Resolution)", color=red, community=0, file="LeanDataReaderTests.cs", label="4: var config = new SubscriptionDataConfig(typeof(ZipEntryName), baseFuture, res,\r\n                TimeZones.NewYork, TimeZones.NewYork, false, false, false, false, tickType)", span="85-86"];
m6_29 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureChain(QuantConnect.Symbol, System.DateTime, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var factory = new ZipEntryNameSubscriptionDataSourceReader(config, date, false)", span="88-88"];
m6_31 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureChain(QuantConnect.Symbol, System.DateTime, QuantConnect.TickType, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataReaderTests.LoadFutureChain(QuantConnect.Symbol, System.DateTime, QuantConnect.TickType, QuantConnect.Resolution)", span="80-80"];
m6_114 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
m6_115 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m6_117 [cluster="System.IO.FileInfo.FileInfo(string)", file="LeanDataReaderTests.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m6_119 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m6_22 [cluster="string.IsNullOrEmpty(string)", file="LeanDataReaderTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_60 [cluster="System.Text.StringBuilder.AppendLine(string)", file="LeanDataReaderTests.cs", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
m6_63 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.GenerateDailyAndHourlyFutureDataFromMinutes()", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataReaderTests.GenerateDailyAndHourlyFutureDataFromMinutes()", span="121-121"];
m6_64 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.GenerateDailyAndHourlyFutureDataFromMinutes()", color=red, community=0, file="LeanDataReaderTests.cs", label="1: var tickTypes = new[] {TickType.Trade, TickType.Quote, TickType.OpenInterest }", span="124-124"];
m6_65 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.GenerateDailyAndHourlyFutureDataFromMinutes()", color=red, community=0, file="LeanDataReaderTests.cs", label="1: var futures = new[] { Symbol.Create(Futures.Indices.SP500EMini, SecurityType.Future, Market.USA),\r\n                        Symbol.Create(Futures.Metals.Gold, SecurityType.Future, Market.USA)}", span="126-127"];
m6_69 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.GenerateDailyAndHourlyFutureDataFromMinutes()", file="LeanDataReaderTests.cs", label=tickTypes, span="132-132"];
m6_66 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.GenerateDailyAndHourlyFutureDataFromMinutes()", file="LeanDataReaderTests.cs", label="var resolutions = new[] { Resolution.Hour, Resolution.Daily }", span="128-128"];
m6_67 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.GenerateDailyAndHourlyFutureDataFromMinutes()", file="LeanDataReaderTests.cs", label=futures, span="130-130"];
m6_68 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.GenerateDailyAndHourlyFutureDataFromMinutes()", file="LeanDataReaderTests.cs", label=resolutions, span="131-131"];
m6_70 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.GenerateDailyAndHourlyFutureDataFromMinutes()", file="LeanDataReaderTests.cs", label="ConvertMinuteFuturesData(future, tickType, res)", span="133-133"];
m6_71 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.GenerateDailyAndHourlyFutureDataFromMinutes()", file="LeanDataReaderTests.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataReaderTests.GenerateDailyAndHourlyFutureDataFromMinutes()", span="121-121"];
m6_18 [cluster="Unk.Select", file="LeanDataReaderTests.cs", label="Entry Unk.Select", span=""];
m6_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="58-58"];
m6_106 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var zipEntry = LeanData.GenerateZipEntryName(future, _fromDate, outputResolution, tickType)", span="212-212"];
m6_72 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", span="136-136"];
m6_73 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var timeSpans = new Dictionary<Resolution, TimeSpan>()\r\n            {\r\n                { Resolution.Daily, TimeSpan.FromHours(24)},\r\n                { Resolution.Hour, TimeSpan.FromHours(1)},\r\n            }", span="139-143"];
m6_74 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var timeSpan = timeSpans[outputResolution]", span="145-145"];
m6_82 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var futureChain = LoadFutureChain(canonical, date, tickType, inputResolution)", span="163-163"];
m6_86 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", color=red, community=0, file="LeanDataReaderTests.cs", label="1: var config = new SubscriptionDataConfig(LeanData.GetDataType(outputResolution, tickType),\r\n                                future, inputResolution,TimeZones.NewYork, TimeZones.NewYork,\r\n                                false, false, false, false, tickType)", span="170-172"];
m6_88 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="consolidators[future.Value] = tickTypeConsolidatorMap[tickType].Invoke()", span="175-175"];
m6_91 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="consolidators[future.Value].DataConsolidated += (sender, bar) =>\r\n                        {\r\n                            sb.Append(LeanData.GenerateLine(bar, SecurityType.Future, outputResolution) + Environment.NewLine);\r\n                        }", span="180-183"];
m6_92 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var leanDataReader = new LeanDataReader(configs[future.Value], future, inputResolution, date, _dataDirectory)", span="186-186"];
m6_100 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var zip = LeanData.GenerateRelativeZipFilePath(canonical, _fromDate, outputResolution, tickType)", span="203-203"];
m6_75 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var tickTypeConsolidatorMap = new Dictionary<TickType, Func<IDataConsolidator>>()\r\n            {\r\n                {TickType.Quote, () => new QuoteBarConsolidator(timeSpan)},\r\n                {TickType.OpenInterest, ()=> new OpenInterestConsolidator(timeSpan)},\r\n                {TickType.Trade, ()=> new TradeBarConsolidator(timeSpan) }\r\n\r\n            }", span="147-153"];
m6_76 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var consolidators = new Dictionary<string, IDataConsolidator>()", span="155-155"];
m6_77 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var configs = new Dictionary<string, SubscriptionDataConfig>()", span="156-156"];
m6_94 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var consolidator = consolidators[future.Value]", span="189-189"];
m6_98 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="consolidators.Values", span="200-200"];
m6_78 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var outputFiles = new Dictionary<string, StringBuilder>()", span="157-157"];
m6_87 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="configs[future.Value] = config", span="173-173"];
m6_79 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var futures = new Dictionary<string, Symbol>()", span="158-158"];
m6_90 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="outputFiles[future.Value] = sb", span="178-178"];
m6_107 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var sb = outputFiles[future.Value]", span="213-213"];
m6_80 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var date = _fromDate", span="160-160"];
m6_84 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="!futures.ContainsKey(future.Value)", span="167-167"];
m6_85 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="futures[future.Value] = future", span="169-169"];
m6_105 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="futures.Values", span="210-210"];
m6_81 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="date <= _toDate", span="161-161"];
m6_97 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="date = date.AddDays(1)", span="196-196"];
m6_99 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="consolidator.Scan(date)", span="201-201"];
m6_83 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label=futureChain, span="165-165"];
m6_89 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var sb = new StringBuilder()", span="177-177"];
m6_93 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var data = leanDataReader.Parse().ToList()", span="188-188"];
m6_95 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label=data, span="191-191"];
m6_96 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="consolidator.Update(bar)", span="193-193"];
m6_101 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var zipPath = Path.Combine(_dataDirectory, zip)", span="204-204"];
m6_102 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="var fi = new FileInfo(zipPath)", span="205-205"];
m6_103 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="!fi.Directory.Exists", span="207-207"];
m6_104 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="fi.Directory.Create()", span="208-208"];
m6_108 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="Assert.IsTrue(sb.Length > 0)", span="218-218"];
m6_109 [cluster="QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", file="LeanDataReaderTests.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataReaderTests.ConvertMinuteFuturesData(QuantConnect.Symbol, QuantConnect.TickType, QuantConnect.Resolution, QuantConnect.Resolution)", span="136-136"];
m6_136 [file="LeanDataReaderTests.cs", label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", span=""];
m6_137 [file="LeanDataReaderTests.cs", label=timeSpan, span=""];
m6_138 [file="LeanDataReaderTests.cs", label="QuantConnect.Resolution", span=""];
m6_139 [file="LeanDataReaderTests.cs", label=sb, span=""];
m7_0 [cluster="QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LeanDataTests.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="26-26"];
m7_1 [cluster="QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="LeanDataTests.cs", label="Exit QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel.ManageRisk(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="26-26"];
m8_138 [cluster="Unk.get", file="PandasConverterTests.cs", label="Entry Unk.get", span=""];
m8_185 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", span="293-293"];
m8_186 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var converter = new PandasConverter()", span="295-295"];
m8_189 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var custom = Activator.CreateInstance(type) as BaseData", span="299-299"];
m8_190 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="type == typeof(Quandl)", span="300-300"];
m8_192 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i =>\r\n                {\r\n                    var line = $''{DateTime.UtcNow.AddDays(i).ToString(format)},{i + 101},{i + 102},{i + 100},{i + 101},{i + 101}'';\r\n                    return custom.Reader(config, line, DateTime.UtcNow.AddDays(i), false);\r\n                })\r\n                .ToArray()", span="302-309"];
m8_207 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="expected = expected ?? type.GetProperty(''Transactions'')?.GetValue(rawBars[i])", span="331-331"];
m8_225 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="expected = expected ?? type.GetProperty(''Transactions'')?.GetValue(rawBars[i])", span="357-357"];
m8_187 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var symbol = Symbols.LTCUSD", span="296-296"];
m8_193 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="312-312"];
m8_211 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="dataFrame = converter.GetDataFrame(history)", span="338-338"];
m8_188 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var config = GetSubscriptionDataConfig<Quandl>(symbol, Resolution.Daily)", span="298-298"];
m8_196 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="318-318"];
m8_210 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var history = GetHistory(symbol, Resolution.Daily, rawBars)", span="337-337"];
m8_214 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="344-344"];
m8_191 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="custom.Reader(config, ''date,open,high,low,close,transactions'', DateTime.UtcNow, false)", span="300-300"];
m8_204 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Value, value)", span="328-328"];
m8_206 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var expected = (rawBars[i] as DynamicData)?.GetProperty(''transactions'')", span="330-330"];
m8_222 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Value, value)", span="354-354"];
m8_224 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var expected = (rawBars[i] as DynamicData)?.GetProperty(''transactions'')", span="356-356"];
m8_194 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Py.GIL()", span="314-314"];
m8_195 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="316-316"];
m8_197 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="319-319"];
m8_198 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="321-321"];
m8_202 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", span="326-326"];
m8_203 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var value = subDataFrame.loc[index].value.AsManagedObject(typeof(decimal))", span="327-327"];
m8_205 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var transactions = subDataFrame.loc[index].transactions.AsManagedObject(typeof(decimal))", span="329-329"];
m8_199 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", span="322-322"];
m8_201 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="i < count", span="324-324"];
m8_200 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var i = 0", span="324-324"];
m8_209 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="i++", span="324-324"];
m8_208 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Assert.AreEqual(expected, transactions)", span="332-332"];
m8_212 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Py.GIL()", span="340-340"];
m8_213 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="342-342"];
m8_215 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="345-345"];
m8_216 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="347-347"];
m8_220 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", span="352-352"];
m8_221 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var value = subDataFrame.loc[index].value.AsManagedObject(typeof(decimal))", span="353-353"];
m8_223 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var transactions = subDataFrame.loc[index].transactions.AsManagedObject(typeof(decimal))", span="355-355"];
m8_217 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", span="348-348"];
m8_219 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="i < count", span="350-350"];
m8_218 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="var i = 0", span="350-350"];
m8_227 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="i++", span="350-350"];
m8_226 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Assert.AreEqual(expected, transactions)", span="358-358"];
m8_228 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars(System.Type, string)", span="293-293"];
m8_251 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
m8_18 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", span="363-363"];
m8_241 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="var subscriptionDataConfig = GetSubscriptionDataConfig<T>(symbol, resolution)", span="366-366"];
m8_243 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="return data.Select(t => TimeSlice.Create(\r\n               t.Time,\r\n               TimeZones.Utc,\r\n               new CashBook(),\r\n               new List<DataFeedPacket> { new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() { t as BaseData }) },\r\n               new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>()),\r\n                new Dictionary<Universe, BaseDataCollection>()).Slice);", span="369-375"];
m8_242 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="var security = GetSecurity(subscriptionDataConfig)", span="367-367"];
m8_244 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", span="363-363"];
m8_252 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="63-63"];
m8_54 [cluster="Unk.ToArray", file="PandasConverterTests.cs", label="Entry Unk.ToArray", span=""];
m8_230 [cluster="System.Activator.CreateInstance(System.Type)", file="PandasConverterTests.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m8_246 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="369-375"];
m8_61 [cluster="lambda expression", file="PandasConverterTests.cs", label="new TradeBar(DateTime.UtcNow.AddMinutes(i), symbol, i + 101m, i + 102m, i + 100m, i + 101m, 0m)", span="66-66"];
m8_60 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="66-66"];
m8_62 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="66-66"];
m8_98 [cluster="lambda expression", file="PandasConverterTests.cs", label="new QuoteBar(DateTime.UtcNow.AddMinutes(i), symbol, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m)", span="121-121"];
m8_97 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="121-121"];
m8_99 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="121-121"];
m8_140 [cluster="lambda expression", file="PandasConverterTests.cs", label="new Tick(symbol, $''1440{i:D2}00,167{i:D2}00,1{i:D2},T,T,0'', new DateTime(2013, 10, 7))", span="176-176"];
m8_139 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="176-176"];
m8_141 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="176-176"];
m8_181 [cluster="lambda expression", file="PandasConverterTests.cs", label="new Tick(DateTime.UtcNow.AddMilliseconds(100 * i), symbol, 0.99m, 1.01m)", span="237-237"];
m8_180 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="237-237"];
m8_182 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="237-237"];
m8_236 [cluster="lambda expression", file="PandasConverterTests.cs", label="var line = $''{DateTime.UtcNow.AddDays(i).ToString(format)},{i + 101},{i + 102},{i + 100},{i + 101},{i + 101}''", span="306-306"];
m8_237 [cluster="lambda expression", file="PandasConverterTests.cs", label="return custom.Reader(config, line, DateTime.UtcNow.AddDays(i), false);", span="307-307"];
m8_235 [cluster="lambda expression", file="PandasConverterTests.cs", label="Entry lambda expression", span="304-308"];
m8_238 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="304-308"];
m8_247 [cluster="lambda expression", file="PandasConverterTests.cs", label="TimeSlice.Create(\r\n               t.Time,\r\n               TimeZones.Utc,\r\n               new CashBook(),\r\n               new List<DataFeedPacket> { new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() { t as BaseData }) },\r\n               new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>()),\r\n                new Dictionary<Universe, BaseDataCollection>()).Slice", span="369-375"];
m8_248 [cluster="lambda expression", file="PandasConverterTests.cs", label="Exit lambda expression", span="369-375"];
m8_184 [cluster="System.DateTime.AddMilliseconds(double)", file="PandasConverterTests.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m8_56 [cluster="Unk.IsFalse", file="PandasConverterTests.cs", label="Entry Unk.IsFalse", span=""];
m8_101 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m8_142 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Symbol, string, System.DateTime)", span="195-195"];
m8_257 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m8_249 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="51-51"];
m8_11 [cluster="QuantConnect.Python.PandasConverter.PandasConverter()", file="PandasConverterTests.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter()", span="34-34"];
m8_100 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m8_17 [cluster="Unk.IsTrue", file="PandasConverterTests.cs", label="Entry Unk.IsTrue", span=""];
m8_143 [cluster="System.DateTime.DateTime(int, int, int)", file="PandasConverterTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m8_234 [cluster="Unk.GetValue", file="PandasConverterTests.cs", label="Entry Unk.GetValue", span=""];
m8_240 [cluster="System.DateTime.ToString(string)", file="PandasConverterTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m8_14 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="98-98"];
m8_239 [cluster="System.DateTime.AddDays(double)", file="PandasConverterTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m8_233 [cluster="System.Type.GetProperty(string)", file="PandasConverterTests.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m8_261 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m8_58 [cluster="Unk.AreEqual", file="PandasConverterTests.cs", label="Entry Unk.AreEqual", span=""];
m8_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m8_59 [cluster="Unk.GetHistory", file="PandasConverterTests.cs", label="Entry Unk.GetHistory", span=""];
m8_65 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", span="114-114"];
m8_66 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var converter = new PandasConverter()", span="116-116"];
m8_67 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var symbol = Symbols.EURUSD", span="117-117"];
m8_69 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="125-125"];
m8_83 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="dataFrame = converter.GetDataFrame(history)", span="147-147"];
m8_68 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new QuoteBar(DateTime.UtcNow.AddMinutes(i), symbol, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m))\r\n                .ToArray()", span="119-122"];
m8_72 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="131-131"];
m8_82 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var history = GetHistory(symbol, Resolution.Minute, rawBars)", span="146-146"];
m8_86 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="153-153"];
m8_80 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Close, close)", span="141-141"];
m8_94 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Ask.Close, close)", span="163-163"];
m8_70 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Py.GIL()", span="127-127"];
m8_71 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="129-129"];
m8_73 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="132-132"];
m8_74 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="134-134"];
m8_78 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", span="139-139"];
m8_79 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="140-140"];
m8_75 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", span="135-135"];
m8_77 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="i < count", span="137-137"];
m8_76 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var i = 0", span="137-137"];
m8_81 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="i++", span="137-137"];
m8_84 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Py.GIL()", span="149-149"];
m8_85 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="151-151"];
m8_87 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="154-154"];
m8_88 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="156-156"];
m8_92 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", span="161-161"];
m8_93 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var close = subDataFrame.loc[index].askclose.AsManagedObject(typeof(decimal))", span="162-162"];
m8_89 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", span="157-157"];
m8_91 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="i < count", span="159-159"];
m8_90 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="var i = 0", span="159-159"];
m8_95 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="i++", span="159-159"];
m8_96 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", span="114-114"];
m8_12 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="PandasConverterTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m8_52 [cluster="System.Linq.Enumerable.Range(int, int)", file="PandasConverterTests.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m8_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", span="35-35"];
m8_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="var converter = new PandasConverter()", span="37-37"];
m8_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="var rawBars = Enumerable.Empty<TradeBar>().ToArray()", span="38-38"];
m8_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="41-41"];
m8_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="dataFrame = converter.GetDataFrame(history)", span="50-50"];
m8_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="var history = GetHistory(Symbols.SPY, Resolution.Minute, rawBars)", span="49-49"];
m8_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="Py.GIL()", span="43-43"];
m8_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="Assert.IsTrue(dataFrame.empty.AsManagedObject(typeof(bool)))", span="45-45"];
m8_8 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="Py.GIL()", span="52-52"];
m8_9 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="Assert.IsTrue(dataFrame.empty.AsManagedObject(typeof(bool)))", span="54-54"];
m8_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", span="35-35"];
m8_260 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="297-297"];
m8_15 [cluster="Unk.GIL", file="PandasConverterTests.cs", label="Entry Unk.GIL", span=""];
m8_57 [cluster="Unk.__len__", file="PandasConverterTests.cs", label="Entry Unk.__len__", span=""];
m8_232 [cluster="QuantConnect.Data.DynamicData.GetProperty(string)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.DynamicData.GetProperty(string)", span="83-83"];
m8_183 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m8_253 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PandasConverterTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_263 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m8_55 [cluster="Unk.GetDataFrame", file="PandasConverterTests.cs", label="Entry Unk.GetDataFrame", span=""];
m8_144 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", span="230-230"];
m8_145 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var converter = new PandasConverter()", span="232-232"];
m8_146 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var symbol = Symbols.EURUSD", span="233-233"];
m8_148 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="241-241"];
m8_164 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="dataFrame = converter.GetDataFrame(history)", span="266-266"];
m8_147 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new Tick(DateTime.UtcNow.AddMilliseconds(100 * i), symbol, 0.99m, 1.01m))\r\n                .ToArray()", span="235-238"];
m8_151 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="247-247"];
m8_163 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var history = GetHistory(symbol, Resolution.Tick, rawBars)", span="265-265"];
m8_167 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="272-272"];
m8_161 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].LastPrice, value)", span="260-260"];
m8_177 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].AskPrice, value)", span="285-285"];
m8_149 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Py.GIL()", span="243-243"];
m8_150 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="245-245"];
m8_152 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="248-248"];
m8_153 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.IsTrue(subDataFrame.get(''askprice'') != null)", span="250-250"];
m8_154 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.IsTrue(subDataFrame.get(''exchange'') == null)", span="251-251"];
m8_155 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="253-253"];
m8_159 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", span="258-258"];
m8_160 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var value = subDataFrame.loc[index].lastprice.AsManagedObject(typeof(decimal))", span="259-259"];
m8_156 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", span="254-254"];
m8_158 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="i < count", span="256-256"];
m8_157 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var i = 0", span="256-256"];
m8_162 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="i++", span="256-256"];
m8_165 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Py.GIL()", span="268-268"];
m8_166 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="270-270"];
m8_168 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="273-273"];
m8_169 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.IsTrue(subDataFrame.get(''askprice'') != null)", span="275-275"];
m8_170 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.IsTrue(subDataFrame.get(''exchange'') == null)", span="276-276"];
m8_171 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="278-278"];
m8_175 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", span="283-283"];
m8_176 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var value = subDataFrame.loc[index].askprice.AsManagedObject(typeof(decimal))", span="284-284"];
m8_172 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", span="279-279"];
m8_174 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="i < count", span="281-281"];
m8_173 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="var i = 0", span="281-281"];
m8_178 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="i++", span="281-281"];
m8_179 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteTicks()", span="230-230"];
m8_245 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", span="391-391"];
m8_258 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="PandasConverterTests.cs", label="return new Security(\r\n                SecurityExchangeHours.AlwaysOpen(TimeZones.Utc),\r\n                subscriptionDataConfig,\r\n                new Cash(CashBook.AccountCurrency, 0, 1m),\r\n                SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="393-397"];
m8_259 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", span="391-391"];
m8_64 [cluster="System.DateTime.AddMinutes(double)", file="PandasConverterTests.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m8_19 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="50-50"];
m8_229 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", span="378-378"];
m8_255 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="PandasConverterTests.cs", label="return new SubscriptionDataConfig(\r\n                typeof(T),\r\n                symbol,\r\n                resolution,\r\n                TimeZones.Utc,\r\n                TimeZones.Utc,\r\n                true,\r\n                true,\r\n                false);", span="380-388"];
m8_256 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", span="378-378"];
m8_254 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges, System.Collections.Generic.Dictionary<QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Data.UniverseSelection.BaseDataCollection>)", file="PandasConverterTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges, System.Collections.Generic.Dictionary<QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Data.UniverseSelection.BaseDataCollection>)", span="112-112"];
m8_262 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="PandasConverterTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="81-81"];
m8_16 [cluster="Unk.AsManagedObject", file="PandasConverterTests.cs", label="Entry Unk.AsManagedObject", span=""];
m8_231 [cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144"];
m8_53 [cluster="Unk.Select", file="PandasConverterTests.cs", label="Entry Unk.Select", span=""];
m8_63 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="PandasConverterTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m8_102 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", span="169-169"];
m8_103 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var converter = new PandasConverter()", span="171-171"];
m8_104 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var symbol = Symbols.SPY", span="172-172"];
m8_106 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="180-180"];
m8_122 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="dataFrame = converter.GetDataFrame(history)", span="205-205"];
m8_105 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new Tick(symbol, $''1440{i:D2}00,167{i:D2}00,1{i:D2},T,T,0'', new DateTime(2013, 10, 7)))\r\n                .ToArray()", span="174-177"];
m8_109 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="186-186"];
m8_121 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var history = GetHistory(symbol, Resolution.Tick, rawBars)", span="204-204"];
m8_125 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="211-211"];
m8_119 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].LastPrice, value)", span="199-199"];
m8_135 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].LastPrice, value)", span="224-224"];
m8_107 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Py.GIL()", span="182-182"];
m8_108 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="184-184"];
m8_110 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="187-187"];
m8_111 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.IsTrue(subDataFrame.get(''askprice'') == null)", span="189-189"];
m8_112 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.IsTrue(subDataFrame.get(''exchange'') != null)", span="190-190"];
m8_113 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="192-192"];
m8_117 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", span="197-197"];
m8_118 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var value = subDataFrame.loc[index].lastprice.AsManagedObject(typeof(decimal))", span="198-198"];
m8_114 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", span="193-193"];
m8_116 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="i < count", span="195-195"];
m8_115 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var i = 0", span="195-195"];
m8_120 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="i++", span="195-195"];
m8_123 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Py.GIL()", span="207-207"];
m8_124 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="209-209"];
m8_126 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="212-212"];
m8_127 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.IsTrue(subDataFrame.get(''askprice'') == null)", span="214-214"];
m8_128 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.IsTrue(subDataFrame.get(''exchange'') != null)", span="215-215"];
m8_129 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="217-217"];
m8_133 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", span="222-222"];
m8_134 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var value = subDataFrame.loc[index].lastprice.AsManagedObject(typeof(decimal))", span="223-223"];
m8_130 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", span="218-218"];
m8_132 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="i < count", span="220-220"];
m8_131 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="var i = 0", span="220-220"];
m8_136 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="i++", span="220-220"];
m8_137 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeTicks()", span="169-169"];
m8_20 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", span="59-59"];
m8_21 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var converter = new PandasConverter()", span="61-61"];
m8_22 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var symbol = Symbols.SPY", span="62-62"];
m8_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="70-70"];
m8_38 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="dataFrame = converter.GetDataFrame(history)", span="92-92"];
m8_23 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new TradeBar(DateTime.UtcNow.AddMinutes(i), symbol, i + 101m, i + 102m, i + 100m, i + 101m, 0m))\r\n                .ToArray()", span="64-67"];
m8_27 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="76-76"];
m8_37 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var history = GetHistory(symbol, Resolution.Minute, rawBars)", span="91-91"];
m8_41 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="98-98"];
m8_35 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Close, close)", span="86-86"];
m8_49 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Assert.AreEqual(rawBars[i].Close, close)", span="108-108"];
m8_25 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Py.GIL()", span="72-72"];
m8_26 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="74-74"];
m8_28 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="77-77"];
m8_29 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="79-79"];
m8_33 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", span="84-84"];
m8_34 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="85-85"];
m8_30 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", span="80-80"];
m8_32 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="i < count", span="82-82"];
m8_31 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var i = 0", span="82-82"];
m8_36 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="i++", span="82-82"];
m8_39 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Py.GIL()", span="94-94"];
m8_40 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="96-96"];
m8_42 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="99-99"];
m8_43 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="101-101"];
m8_47 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var index = subDataFrame.index[i]", span="106-106"];
m8_48 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="107-107"];
m8_44 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Assert.AreEqual(count, 10)", span="102-102"];
m8_46 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="i < count", span="104-104"];
m8_45 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="var i = 0", span="104-104"];
m8_50 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="i++", span="104-104"];
m8_51 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="PandasConverterTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", span="59-59"];
m8_264 [file="PandasConverterTests.cs", label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", span=""];
m8_265 [file="PandasConverterTests.cs", label=symbol, span=""];
m8_266 [file="PandasConverterTests.cs", label=symbol, span=""];
m8_267 [file="PandasConverterTests.cs", label=symbol, span=""];
m8_268 [file="PandasConverterTests.cs", label=symbol, span=""];
m8_269 [file="PandasConverterTests.cs", label=string, span=""];
m8_270 [file="PandasConverterTests.cs", label=config, span=""];
m8_271 [file="PandasConverterTests.cs", label=custom, span=""];
m8_272 [file="PandasConverterTests.cs", label=subscriptionDataConfig, span=""];
m8_273 [file="PandasConverterTests.cs", label=security, span=""];
m10_35 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", span="81-81"];
m10_36 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="TradeBar newTradeBar = null", span="83-83"];
m10_37 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="var consolidator = new DynamicDataConsolidator(4, false, true)", span="84-84"];
m10_38 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="consolidator.DataConsolidated += (sender, tradeBar) =>\r\n            {\r\n                newTradeBar = tradeBar;\r\n            }", span="85-88"];
m10_42 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar1)", span="98-98"];
m10_46 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", color=red, community=0, file="RegressionTests.cs", label="1: consolidator.Update(bar2)", span="109-109"];
m10_50 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar3)", span="119-119"];
m10_54 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar4)", span="130-130"];
m10_39 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="var reference = DateTime.Today", span="89-89"];
m10_40 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="dynamic bar1 = new CustomData\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference,\r\n                Value = 5,\r\n            }", span="90-95"];
m10_44 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", color=red, community=0, file="RegressionTests.cs", label="1: dynamic bar2 = new CustomData\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference.AddHours(1),\r\n                Value = 10\r\n            }", span="101-106"];
m10_48 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", color=red, community=0, file="RegressionTests.cs", label="1: dynamic bar3 = new CustomData\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference.AddHours(2),\r\n                Value = 1\r\n            }", span="111-116"];
m10_52 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="dynamic bar4 = new CustomData\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference.AddHours(3),\r\n                Value = 9\r\n            }", span="122-127"];
m10_41 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="bar1.Volume = 75L", span="96-96"];
m10_57 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar1.Time, newTradeBar.Time)", span="134-134"];
m10_58 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar1.Value, newTradeBar.Open)", span="135-135"];
m10_62 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar1.Volume + bar2.Volume + bar3.Volume + bar4.Volume, newTradeBar.Volume)", span="139-139"];
m10_43 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNull(newTradeBar)", span="99-99"];
m10_45 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", color=red, community=0, file="RegressionTests.cs", label="1: bar2.Volume = 100L", span="107-107"];
m10_59 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar2.Value, newTradeBar.High)", span="136-136"];
m10_47 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", color=red, community=0, file="RegressionTests.cs", label="1: Assert.IsNull(newTradeBar)", span="110-110"];
m10_49 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", color=red, community=0, file="RegressionTests.cs", label="1: bar3.Volume = 115L", span="117-117"];
m10_60 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar3.Value, newTradeBar.Low)", span="137-137"];
m10_51 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", color=red, community=0, file="RegressionTests.cs", label="1: Assert.IsNull(newTradeBar)", span="120-120"];
m10_53 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="bar4.Volume = 85L", span="128-128"];
m10_61 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar4.Value, newTradeBar.Close)", span="138-138"];
m10_55 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNotNull(newTradeBar)", span="131-131"];
m10_56 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(''SPY'', newTradeBar.Symbol)", span="133-133"];
m10_63 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithVolumeProperly()", span="81-81"];
m10_29 [cluster="System.DateTime.AddHours(double)", file="RegressionTests.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m10_157 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.ThrowsErrorWhenDataShapeIsNotExpected()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.ThrowsErrorWhenDataShapeIsNotExpected()", span="251-251"];
m10_158 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.ThrowsErrorWhenDataShapeIsNotExpected()", file="RegressionTests.cs", label="var consolidator = new DynamicDataConsolidator(1, true, true)", span="253-253"];
m10_159 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.ThrowsErrorWhenDataShapeIsNotExpected()", file="RegressionTests.cs", label="var data = new CustomData()", span="254-254"];
m10_160 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.ThrowsErrorWhenDataShapeIsNotExpected()", file="RegressionTests.cs", label="consolidator.Update(data)", span="255-255"];
m10_161 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.ThrowsErrorWhenDataShapeIsNotExpected()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.ThrowsErrorWhenDataShapeIsNotExpected()", span="251-251"];
m10_28 [cluster="Unk.IsNull", file="RegressionTests.cs", label="Entry Unk.IsNull", span=""];
m10_31 [cluster="Unk.AreEqual", file="RegressionTests.cs", label="Entry Unk.AreEqual", span=""];
m10_115 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", span="198-198"];
m10_116 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="TradeBar consolidated = null", span="200-200"];
m10_117 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="var consolidator = new DynamicDataConsolidator(3, true, false)", span="201-201"];
m10_118 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="consolidator.DataConsolidated += (sender, bar) =>\r\n            {\r\n                consolidated = bar;\r\n            }", span="202-205"];
m10_141 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar1)", span="232-232"];
m10_143 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar2)", span="235-235"];
m10_145 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar3)", span="238-238"];
m10_119 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="var reference = DateTime.Today", span="207-207"];
m10_120 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="dynamic bar1 = new CustomData()", span="208-208"];
m10_122 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar1.Time = reference", span="210-210"];
m10_129 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar2.Time = reference.AddHours(1)", span="218-218"];
m10_136 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar3.Time = reference.AddHours(1)", span="226-226"];
m10_121 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar1.Symbol = ''SPY''", span="209-209"];
m10_123 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar1.Open = 10", span="211-211"];
m10_124 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar1.High = 100m", span="212-212"];
m10_125 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar1.Low = 1m", span="213-213"];
m10_126 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar1.Close = 50m", span="214-214"];
m10_148 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar1.Open, consolidated.Open)", span="242-242"];
m10_149 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(Math.Max(bar1.High, Math.Max(bar2.High, bar3.High)), consolidated.High)", span="243-243"];
m10_150 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(Math.Min(bar1.Low, Math.Min(bar2.Low, bar3.Low)), consolidated.Low)", span="244-244"];
m10_127 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="dynamic bar2 = new CustomData()", span="216-216"];
m10_128 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar2.Symbol = ''SPY''", span="217-217"];
m10_130 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar2.Open = 50m", span="219-219"];
m10_131 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar2.High = 123m", span="220-220"];
m10_132 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar2.Low = 35m", span="221-221"];
m10_133 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar2.Close = 75m", span="222-222"];
m10_134 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="dynamic bar3 = new CustomData()", span="224-224"];
m10_135 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar3.Symbol = ''SPY''", span="225-225"];
m10_137 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar3.Open = 75m", span="227-227"];
m10_138 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar3.High = 100m", span="228-228"];
m10_139 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar3.Low = 50m", span="229-229"];
m10_140 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="bar3.Close = 83m", span="230-230"];
m10_151 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar3.Close, consolidated.Close)", span="245-245"];
m10_142 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNull(consolidated)", span="233-233"];
m10_144 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNull(consolidated)", span="236-236"];
m10_146 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNotNull(consolidated)", span="240-240"];
m10_147 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(''SPY'', consolidated.Symbol)", span="241-241"];
m10_152 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(0, consolidated.Volume)", span="246-246"];
m10_153 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithOutVolumeProperly()", span="198-198"];
m10_110 [cluster="Unk.Max", file="RegressionTests.cs", label="Entry Unk.Max", span=""];
m10_162 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="260-260"];
m10_163 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="RegressionTests.cs", label="throw new NotImplementedException();", span="262-262"];
m10_164 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="260-260"];
m10_27 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidatorBase<T>.Update(T)", file="RegressionTests.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidatorBase<T>.Update(T)", span="100-100"];
m10_30 [cluster="Unk.IsNotNull", file="RegressionTests.cs", label="Entry Unk.IsNotNull", span=""];
m10_166 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="265-265"];
m10_167 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="RegressionTests.cs", label="throw new NotImplementedException();", span="267-267"];
m10_168 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="265-265"];
m10_165 [cluster="System.NotImplementedException.NotImplementedException()", file="RegressionTests.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m10_0 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", span="27-27"];
m10_1 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="TradeBar newTradeBar = null", span="29-29"];
m10_2 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="var consolidator = new DynamicDataConsolidator(4, false, false)", span="30-30"];
m10_3 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="consolidator.DataConsolidated += (sender, tradeBar) =>\r\n            {\r\n                newTradeBar = tradeBar;\r\n            }", span="31-34"];
m10_6 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar1)", span="42-42"];
m10_9 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar2)", span="51-51"];
m10_12 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar3)", span="59-59"];
m10_15 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar4)", span="68-68"];
m10_4 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="var reference = DateTime.Today", span="35-35"];
m10_5 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="var bar1 = new CustomData\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference,\r\n                Value = 5\r\n            }", span="36-41"];
m10_8 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="var bar2 = new CustomData\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference.AddHours(1),\r\n                Value = 10\r\n            }", span="45-50"];
m10_11 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="var bar3 = new CustomData\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference.AddHours(2),\r\n                Value = 1\r\n            }", span="53-58"];
m10_14 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="var bar4 = new CustomData\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference.AddHours(3),\r\n                Value = 9\r\n            }", span="62-67"];
m10_18 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar1.Time, newTradeBar.Time)", span="72-72"];
m10_19 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar1.Value, newTradeBar.Open)", span="73-73"];
m10_7 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNull(newTradeBar)", span="43-43"];
m10_20 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar2.Value, newTradeBar.High)", span="74-74"];
m10_10 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNull(newTradeBar)", span="52-52"];
m10_21 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar3.Value, newTradeBar.Low)", span="75-75"];
m10_13 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNull(newTradeBar)", span="60-60"];
m10_22 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar4.Value, newTradeBar.Close)", span="76-76"];
m10_16 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNotNull(newTradeBar)", span="69-69"];
m10_17 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(''SPY'', newTradeBar.Symbol)", span="71-71"];
m10_23 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(0, newTradeBar.Volume)", span="77-77"];
m10_24 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTimeValuePairsWithOutVolumeProperly()", span="27-27"];
m10_26 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.CustomData()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.CustomData.CustomData()", span="258-258"];
m10_25 [cluster="QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(int, bool, bool)", file="RegressionTests.cs", label="Entry QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(int, bool, bool)", span="51-51"];
m10_64 [cluster="Unk.Update", file="RegressionTests.cs", label="Entry Unk.Update", span=""];
m10_68 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", span="143-143"];
m10_69 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="TradeBar consolidated = null", span="145-145"];
m10_70 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="var consolidator = new DynamicDataConsolidator(3, true, true)", span="146-146"];
m10_71 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="consolidator.DataConsolidated += (sender, bar) =>\r\n            {\r\n                consolidated = bar;\r\n            }", span="147-150"];
m10_97 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar1)", span="180-180"];
m10_99 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar2)", span="183-183"];
m10_101 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="consolidator.Update(bar3)", span="186-186"];
m10_72 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="var reference = DateTime.Today", span="152-152"];
m10_73 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="dynamic bar1 = new CustomData()", span="153-153"];
m10_75 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar1.Time = reference", span="155-155"];
m10_83 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar2.Time = reference.AddHours(1)", span="164-164"];
m10_91 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar3.Time = reference.AddHours(1)", span="173-173"];
m10_74 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar1.Symbol = ''SPY''", span="154-154"];
m10_76 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar1.Open = 10", span="156-156"];
m10_77 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar1.High = 100m", span="157-157"];
m10_78 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar1.Low = 1m", span="158-158"];
m10_79 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar1.Close = 50m", span="159-159"];
m10_80 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar1.Volume = 75L", span="160-160"];
m10_104 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar1.Open, consolidated.Open)", span="190-190"];
m10_105 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(Math.Max(bar1.High, Math.Max(bar2.High, bar3.High)), consolidated.High)", span="191-191"];
m10_106 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(Math.Min(bar1.Low, Math.Min(bar2.Low, bar3.Low)), consolidated.Low)", span="192-192"];
m10_108 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar1.Volume + bar2.Volume + bar3.Volume, consolidated.Volume)", span="194-194"];
m10_81 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="dynamic bar2 = new CustomData()", span="162-162"];
m10_82 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar2.Symbol = ''SPY''", span="163-163"];
m10_84 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar2.Open = 50m", span="165-165"];
m10_85 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar2.High = 123m", span="166-166"];
m10_86 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar2.Low = 35m", span="167-167"];
m10_87 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar2.Close = 75m", span="168-168"];
m10_88 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar2.Volume = 100L", span="169-169"];
m10_89 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="dynamic bar3 = new CustomData()", span="171-171"];
m10_90 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar3.Symbol = ''SPY''", span="172-172"];
m10_92 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar3.Open = 75m", span="174-174"];
m10_93 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar3.High = 100m", span="175-175"];
m10_94 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar3.Low = 50m", span="176-176"];
m10_95 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar3.Close = 83m", span="177-177"];
m10_96 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="bar3.Volume = 125L", span="178-178"];
m10_107 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(bar3.Close, consolidated.Close)", span="193-193"];
m10_98 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNull(consolidated)", span="181-181"];
m10_100 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNull(consolidated)", span="184-184"];
m10_102 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.IsNotNull(consolidated)", span="188-188"];
m10_103 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="Assert.AreEqual(''SPY'', consolidated.Symbol)", span="189-189"];
m10_109 [cluster="QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Common.Data.DynamicDataConsolidatorTests.AggregatesTradeBarsWithVolumeProperly()", span="143-143"];
m10_111 [cluster="Unk.Min", file="RegressionTests.cs", label="Entry Unk.Min", span=""];
m10_154 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="202-205"];
m10_33 [cluster="lambda expression", file="RegressionTests.cs", label="newTradeBar = tradeBar", span="33-33"];
m10_32 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="31-34"];
m10_34 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="31-34"];
m10_66 [cluster="lambda expression", file="RegressionTests.cs", label="newTradeBar = tradeBar", span="87-87"];
m10_65 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="85-88"];
m10_67 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="85-88"];
m10_113 [cluster="lambda expression", file="RegressionTests.cs", label="consolidated = bar", span="149-149"];
m10_112 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="147-150"];
m10_114 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="147-150"];
m10_155 [cluster="lambda expression", file="RegressionTests.cs", label="consolidated = bar", span="204-204"];
m10_156 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="202-205"];
m12_0 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m12_1 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="SubscriptionSynchronizer.cs", label="AlgorithmRunner.RunLocalBacktest(''BasicTemplateAlgorithm'', new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''3.39%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''1629.801%''},\r\n                {''Drawdown'', ''3.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''3.392%''},\r\n                {''Sharpe Ratio'', ''4.445''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''2.049''},\r\n                {''Annual Standard Deviation'', ''0.393''},\r\n                {''Annual Variance'', ''0.155''},\r\n                {''Information Ratio'', ''4.403''},\r\n                {''Tracking Error'', ''0.201''},\r\n                {''Treynor Ratio'', ''0.853''},\r\n                {''Total Fees'', ''$12.12''}\r\n            })", span="26-47"];
m12_2 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m12_4 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", span="30-30"];
m12_5 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", span="51-51"];
m12_6 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", file="SubscriptionSynchronizer.cs", label="AlgorithmRunner.RunLocalBacktest(''BasicTemplateFillForwardAlgorithm'', new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''34.56%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''521.383%''},\r\n                {''Drawdown'', ''18.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''34.562%''},\r\n                {''Sharpe Ratio'', ''2.599''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.899''},\r\n                {''Beta'', ''2.879''},\r\n                {''Annual Standard Deviation'', ''0.785''},\r\n                {''Annual Variance'', ''0.616''},\r\n                {''Information Ratio'', ''2.192''},\r\n                {''Tracking Error'', ''0.749''},\r\n                {''Treynor Ratio'', ''0.708''},\r\n                {''Total Fees'', ''$460.82''}\r\n            })", span="53-74"];
m12_7 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", span="51-51"];
m12_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n159 -> n2  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n3  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n4  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n14  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n19  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n20  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n21  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n22  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n46  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n50  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n75  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n53  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n57  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n59  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n102  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n106  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n112  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n113  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n114  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n115  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n116  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n117  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n118  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n119  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n148  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n152  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n159 -> n153  [color=red, key=1, label="QuantConnect.Jupyter.AlgorithmAnalysis", style=dashed];
n160 -> n75  [color=red, key=1, label=int, style=dashed];
n0 -> n1  [color=red, key=0, style=solid];
n0 -> n4  [color=red, key=1, label=int, style=dashed];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n8  [color=red, key=2, style=dotted];
n4 -> n5  [color=red, key=0, style=solid];
n4 -> n7  [color=red, key=0, style=solid];
n4 -> n11  [color=red, key=2, style=dotted];
n2 -> n3  [color=red, key=0, style=solid];
n2 -> n9  [color=red, key=2, style=dotted];
n3 -> n4  [color=red, key=0, style=solid];
n3 -> n10  [color=red, key=2, style=dotted];
n5 -> n6  [color=red, key=0, style=solid];
n7 -> n0  [color=blue, key=0, style=bold];
n6 -> n7  [color=red, key=0, style=solid];
n6 -> n12  [color=red, key=2, style=dotted];
n13 -> n14  [color=red, key=0, style=solid];
n13 -> n23  [color=red, key=3, label="method methodReturn PyObject ListProjects", style=bold];
n14 -> n15  [color=red, key=0, style=solid];
n14 -> n25  [color=red, key=2, style=dotted];
n14 -> n18  [color=red, key=1, label=listProject, style=dashed];
n14 -> n19  [color=red, key=1, label=listProject, style=dashed];
n14 -> n20  [color=red, key=1, label=listProject, style=dashed];
n14 -> n21  [color=red, key=1, label=listProject, style=dashed];
n15 -> n16  [color=red, key=0, style=solid];
n15 -> n23  [color=red, key=0, style=solid];
n18 -> n19  [color=red, key=0, style=solid];
n18 -> n27  [color=red, key=2, style=dotted];
n18 -> n33  [color=red, key=1, label="lambda expression", style=dashed];
n18 -> n20  [color=red, key=1, label=index, style=dashed];
n18 -> n21  [color=red, key=1, label=index, style=dashed];
n19 -> n20  [color=red, key=0, style=solid];
n19 -> n27  [color=red, key=2, style=dotted];
n19 -> n28  [color=red, key=2, style=dotted];
n19 -> n29  [color=red, key=2, style=dotted];
n19 -> n30  [color=red, key=2, style=dotted];
n19 -> n36  [color=red, key=1, label="lambda expression", style=dashed];
n20 -> n21  [color=red, key=0, style=solid];
n20 -> n27  [color=red, key=2, style=dotted];
n20 -> n28  [color=red, key=2, style=dotted];
n20 -> n29  [color=red, key=2, style=dotted];
n20 -> n30  [color=red, key=2, style=dotted];
n20 -> n39  [color=red, key=1, label="lambda expression", style=dashed];
n21 -> n22  [color=red, key=0, style=solid];
n21 -> n27  [color=red, key=2, style=dotted];
n21 -> n28  [color=red, key=2, style=dotted];
n21 -> n29  [color=red, key=2, style=dotted];
n21 -> n30  [color=red, key=2, style=dotted];
n21 -> n42  [color=red, key=1, label="lambda expression", style=dashed];
n16 -> n17  [color=red, key=0, style=solid];
n16 -> n8  [color=red, key=2, style=dotted];
n23 -> n24  [color=red, key=0, style=solid];
n17 -> n18  [color=red, key=0, style=solid];
n17 -> n26  [color=red, key=2, style=dotted];
n17 -> n19  [color=red, key=1, label=pyDict, style=dashed];
n17 -> n20  [color=red, key=1, label=pyDict, style=dashed];
n17 -> n21  [color=red, key=1, label=pyDict, style=dashed];
n17 -> n22  [color=red, key=1, label=pyDict, style=dashed];
n22 -> n24  [color=red, key=0, style=solid];
n22 -> n31  [color=red, key=2, style=dotted];
n22 -> n32  [color=red, key=2, style=dotted];
n33 -> n34  [color=red, key=0, style=solid];
n36 -> n37  [color=red, key=0, style=solid];
n39 -> n40  [color=red, key=0, style=solid];
n42 -> n43  [color=red, key=0, style=solid];
n24 -> n13  [color=blue, key=0, style=bold];
n34 -> n35  [color=red, key=0, style=solid];
n35 -> n33  [color=blue, key=0, style=bold];
n37 -> n38  [color=red, key=0, style=solid];
n38 -> n36  [color=blue, key=0, style=bold];
n40 -> n41  [color=red, key=0, style=solid];
n41 -> n39  [color=blue, key=0, style=bold];
n43 -> n44  [color=red, key=0, style=solid];
n44 -> n42  [color=blue, key=0, style=bold];
n45 -> n46  [color=red, key=0, style=solid];
n45 -> n50  [color=red, key=1, label=int, style=dashed];
n45 -> n75  [color=red, key=1, label=int, style=dashed];
n46 -> n47  [color=red, key=0, style=solid];
n46 -> n64  [color=red, key=2, style=dotted];
n46 -> n50  [color=red, key=1, label=listBacktests, style=dashed];
n46 -> n62  [color=red, key=1, label=listBacktests, style=dashed];
n50 -> n51  [color=red, key=0, style=solid];
n50 -> n27  [color=red, key=2, style=dotted];
n50 -> n65  [color=red, key=2, style=dotted];
n50 -> n28  [color=red, key=2, style=dotted];
n50 -> n74  [color=red, key=1, label="lambda expression", style=dashed];
n50 -> n78  [color=red, key=1, label="lambda expression", style=dashed];
n50 -> n53  [color=red, key=1, label=backtests, style=dashed];
n50 -> n54  [color=red, key=1, label=backtests, style=dashed];
n50 -> n55  [color=red, key=1, label=backtests, style=dashed];
n75 -> n76  [color=red, key=0, style=solid];
n75 -> n77  [color=red, key=2, style=dotted];
n47 -> n48  [color=red, key=0, style=solid];
n47 -> n62  [color=red, key=0, style=solid];
n62 -> n63  [color=red, key=0, style=solid];
n62 -> n73  [color=red, key=2, style=dotted];
n62 -> n72  [color=red, key=2, style=dotted];
n48 -> n49  [color=red, key=0, style=solid];
n48 -> n8  [color=red, key=2, style=dotted];
n49 -> n50  [color=red, key=0, style=solid];
n49 -> n26  [color=red, key=2, style=dotted];
n49 -> n53  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n57  [color=red, key=1, label=pyDict, style=dashed];
n49 -> n59  [color=red, key=1, label=pyDict, style=dashed];
n53 -> n54  [color=red, key=0, style=solid];
n53 -> n27  [color=red, key=2, style=dotted];
n53 -> n28  [color=red, key=2, style=dotted];
n53 -> n29  [color=red, key=2, style=dotted];
n53 -> n30  [color=red, key=2, style=dotted];
n53 -> n84  [color=red, key=1, label="lambda expression", style=dashed];
n57 -> n56  [color=red, key=0, style=solid];
n57 -> n29  [color=red, key=2, style=dotted];
n57 -> n30  [color=red, key=2, style=dotted];
n59 -> n63  [color=red, key=0, style=solid];
n59 -> n32  [color=red, key=2, style=dotted];
n51 -> n52  [color=red, key=0, style=solid];
n51 -> n27  [color=red, key=2, style=dotted];
n51 -> n81  [color=red, key=1, label="lambda expression", style=dashed];
n51 -> n53  [color=red, key=1, label=index, style=dashed];
n51 -> n57  [color=red, key=1, label=index, style=dashed];
n74 -> n75  [color=red, key=0, style=solid];
n78 -> n79  [color=red, key=0, style=solid];
n54 -> n55  [color=red, key=0, style=solid];
n54 -> n59  [color=red, key=0, style=solid];
n54 -> n67  [color=red, key=2, style=dotted];
n55 -> n56  [color=red, key=0, style=solid];
n55 -> n68  [color=red, key=2, style=dotted];
n55 -> n69  [color=red, key=2, style=dotted];
n55 -> n70  [color=red, key=2, style=dotted];
n55 -> n87  [color=red, key=1, label="lambda expression", style=dashed];
n55 -> n90  [color=red, key=1, label="lambda expression", style=dashed];
n55 -> n93  [color=red, key=1, label="lambda expression", style=dashed];
n55 -> n96  [color=red, key=1, label="lambda expression", style=dashed];
n55 -> n58  [color=red, key=1, label=CsDict, style=dashed];
n52 -> n53  [color=red, key=0, style=solid];
n52 -> n66  [color=red, key=2, style=dotted];
n52 -> n58  [color=red, key=1, label=columns, style=dashed];
n52 -> n59  [color=red, key=1, label=columns, style=dashed];
n81 -> n82  [color=red, key=0, style=solid];
n58 -> n59  [color=red, key=0, style=solid];
n58 -> n71  [color=red, key=2, style=dotted];
n84 -> n85  [color=red, key=0, style=solid];
n56 -> n57  [color=red, key=0, style=solid];
n56 -> n58  [color=red, key=0, style=solid];
n87 -> n88  [color=red, key=0, style=solid];
n90 -> n91  [color=red, key=0, style=solid];
n93 -> n94  [color=red, key=0, style=solid];
n96 -> n97  [color=red, key=0, style=solid];
n60 -> n61  [color=red, key=0, style=solid];
n61 -> n63  [color=red, key=0, style=solid];
n61 -> n72  [color=red, key=2, style=dotted];
n63 -> n45  [color=blue, key=0, style=bold];
n76 -> n74  [color=blue, key=0, style=bold];
n77 -> n102  [color=red, key=0, style=solid];
n77 -> n45  [color=darkorchid, key=3, label="Parameter variable int projectId", style=bold];
n77 -> n105  [color=darkorchid, key=3, label="Parameter variable string backtestId", style=bold];
n77 -> n147  [color=darkorchid, key=3, label="Parameter variable string backtestId", style=bold];
n79 -> n80  [color=red, key=0, style=solid];
n80 -> n78  [color=blue, key=0, style=bold];
n82 -> n83  [color=red, key=0, style=solid];
n83 -> n81  [color=blue, key=0, style=bold];
n85 -> n86  [color=red, key=0, style=solid];
n86 -> n84  [color=blue, key=0, style=bold];
n88 -> n89  [color=red, key=0, style=solid];
n89 -> n87  [color=blue, key=0, style=bold];
n91 -> n92  [color=red, key=0, style=solid];
n92 -> n90  [color=blue, key=0, style=bold];
n94 -> n95  [color=red, key=0, style=solid];
n95 -> n93  [color=blue, key=0, style=bold];
n97 -> n98  [color=red, key=0, style=solid];
n97 -> n27  [color=red, key=2, style=dotted];
n97 -> n28  [color=red, key=2, style=dotted];
n97 -> n99  [color=red, key=1, label="lambda expression", style=dashed];
n98 -> n96  [color=blue, key=0, style=bold];
n99 -> n100  [color=red, key=0, style=solid];
n100 -> n101  [color=red, key=0, style=solid];
n101 -> n99  [color=blue, key=0, style=bold];
n102 -> n103  [color=red, key=0, style=solid];
n102 -> n104  [color=red, key=2, style=dotted];
n103 -> n77  [color=blue, key=0, style=bold];
n105 -> n106  [color=red, key=0, style=solid];
n106 -> n107  [color=red, key=0, style=solid];
n106 -> n77  [color=red, key=2, style=dotted];
n106 -> n110  [color=red, key=1, label=backtest, style=dashed];
n106 -> n120  [color=red, key=1, label=backtest, style=dashed];
n107 -> n108  [color=red, key=0, style=solid];
n107 -> n120  [color=red, key=0, style=solid];
n110 -> n111  [color=red, key=0, style=solid];
n110 -> n112  [color=red, key=1, label=orders, style=dashed];
n110 -> n113  [color=red, key=1, label=orders, style=dashed];
n110 -> n114  [color=red, key=1, label=orders, style=dashed];
n110 -> n115  [color=red, key=1, label=orders, style=dashed];
n110 -> n116  [color=red, key=1, label=orders, style=dashed];
n110 -> n117  [color=red, key=1, label=orders, style=dashed];
n110 -> n118  [color=red, key=1, label=orders, style=dashed];
n120 -> n121  [color=red, key=0, style=solid];
n120 -> n73  [color=red, key=2, style=dotted];
n120 -> n72  [color=red, key=2, style=dotted];
n108 -> n109  [color=red, key=0, style=solid];
n108 -> n8  [color=red, key=2, style=dotted];
n109 -> n110  [color=red, key=0, style=solid];
n109 -> n26  [color=red, key=2, style=dotted];
n109 -> n112  [color=red, key=1, label=pyDict, style=dashed];
n109 -> n113  [color=red, key=1, label=pyDict, style=dashed];
n109 -> n114  [color=red, key=1, label=pyDict, style=dashed];
n109 -> n115  [color=red, key=1, label=pyDict, style=dashed];
n109 -> n116  [color=red, key=1, label=pyDict, style=dashed];
n109 -> n117  [color=red, key=1, label=pyDict, style=dashed];
n109 -> n118  [color=red, key=1, label=pyDict, style=dashed];
n109 -> n119  [color=red, key=1, label=pyDict, style=dashed];
n112 -> n113  [color=red, key=0, style=solid];
n112 -> n27  [color=red, key=2, style=dotted];
n112 -> n28  [color=red, key=2, style=dotted];
n112 -> n29  [color=red, key=2, style=dotted];
n112 -> n30  [color=red, key=2, style=dotted];
n112 -> n125  [color=red, key=1, label="lambda expression", style=dashed];
n113 -> n114  [color=red, key=0, style=solid];
n113 -> n27  [color=red, key=2, style=dotted];
n113 -> n28  [color=red, key=2, style=dotted];
n113 -> n29  [color=red, key=2, style=dotted];
n113 -> n30  [color=red, key=2, style=dotted];
n113 -> n128  [color=red, key=1, label="lambda expression", style=dashed];
n114 -> n115  [color=red, key=0, style=solid];
n114 -> n27  [color=red, key=2, style=dotted];
n114 -> n28  [color=red, key=2, style=dotted];
n114 -> n29  [color=red, key=2, style=dotted];
n114 -> n30  [color=red, key=2, style=dotted];
n114 -> n131  [color=red, key=1, label="lambda expression", style=dashed];
n115 -> n116  [color=red, key=0, style=solid];
n115 -> n27  [color=red, key=2, style=dotted];
n115 -> n28  [color=red, key=2, style=dotted];
n115 -> n29  [color=red, key=2, style=dotted];
n115 -> n30  [color=red, key=2, style=dotted];
n115 -> n134  [color=red, key=1, label="lambda expression", style=dashed];
n116 -> n117  [color=red, key=0, style=solid];
n116 -> n27  [color=red, key=2, style=dotted];
n116 -> n28  [color=red, key=2, style=dotted];
n116 -> n29  [color=red, key=2, style=dotted];
n116 -> n30  [color=red, key=2, style=dotted];
n116 -> n137  [color=red, key=1, label="lambda expression", style=dashed];
n117 -> n118  [color=red, key=0, style=solid];
n117 -> n27  [color=red, key=2, style=dotted];
n117 -> n28  [color=red, key=2, style=dotted];
n117 -> n29  [color=red, key=2, style=dotted];
n117 -> n30  [color=red, key=2, style=dotted];
n117 -> n141  [color=red, key=1, label="lambda expression", style=dashed];
n118 -> n119  [color=red, key=0, style=solid];
n118 -> n27  [color=red, key=2, style=dotted];
n118 -> n28  [color=red, key=2, style=dotted];
n118 -> n29  [color=red, key=2, style=dotted];
n118 -> n30  [color=red, key=2, style=dotted];
n118 -> n144  [color=red, key=1, label="lambda expression", style=dashed];
n119 -> n121  [color=red, key=0, style=solid];
n119 -> n31  [color=red, key=2, style=dotted];
n119 -> n32  [color=red, key=2, style=dotted];
n111 -> n112  [color=red, key=0, style=solid];
n111 -> n27  [color=red, key=2, style=dotted];
n111 -> n122  [color=red, key=1, label="lambda expression", style=dashed];
n111 -> n113  [color=red, key=1, label=index, style=dashed];
n111 -> n114  [color=red, key=1, label=index, style=dashed];
n111 -> n115  [color=red, key=1, label=index, style=dashed];
n111 -> n116  [color=red, key=1, label=index, style=dashed];
n111 -> n117  [color=red, key=1, label=index, style=dashed];
n111 -> n118  [color=red, key=1, label=index, style=dashed];
n122 -> n123  [color=red, key=0, style=solid];
n125 -> n126  [color=red, key=0, style=solid];
n128 -> n129  [color=red, key=0, style=solid];
n131 -> n132  [color=red, key=0, style=solid];
n134 -> n135  [color=red, key=0, style=solid];
n137 -> n138  [color=red, key=0, style=solid];
n141 -> n142  [color=red, key=0, style=solid];
n144 -> n145  [color=red, key=0, style=solid];
n121 -> n105  [color=blue, key=0, style=bold];
n123 -> n124  [color=red, key=0, style=solid];
n123 -> n123  [color=red, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
n124 -> n122  [color=blue, key=0, style=bold];
n126 -> n127  [color=red, key=0, style=solid];
n127 -> n125  [color=blue, key=0, style=bold];
n129 -> n130  [color=red, key=0, style=solid];
n130 -> n128  [color=blue, key=0, style=bold];
n132 -> n133  [color=red, key=0, style=solid];
n133 -> n131  [color=blue, key=0, style=bold];
n135 -> n136  [color=red, key=0, style=solid];
n136 -> n134  [color=blue, key=0, style=bold];
n138 -> n139  [color=red, key=0, style=solid];
n138 -> n140  [color=red, key=2, style=dotted];
n139 -> n137  [color=blue, key=0, style=bold];
n142 -> n143  [color=red, key=0, style=solid];
n142 -> n140  [color=red, key=2, style=dotted];
n143 -> n141  [color=blue, key=0, style=bold];
n145 -> n146  [color=red, key=0, style=solid];
n146 -> n144  [color=blue, key=0, style=bold];
n147 -> n148  [color=red, key=0, style=solid];
n148 -> n149  [color=red, key=0, style=solid];
n148 -> n77  [color=red, key=2, style=dotted];
n148 -> n152  [color=red, key=1, label=backtest, style=dashed];
n148 -> n154  [color=red, key=1, label=backtest, style=dashed];
n149 -> n150  [color=red, key=0, style=solid];
n149 -> n154  [color=red, key=0, style=solid];
n152 -> n153  [color=red, key=0, style=solid];
n152 -> n27  [color=red, key=2, style=dotted];
n152 -> n28  [color=red, key=2, style=dotted];
n152 -> n31  [color=red, key=2, style=dotted];
n152 -> n29  [color=red, key=2, style=dotted];
n152 -> n30  [color=red, key=2, style=dotted];
n152 -> n156  [color=red, key=1, label="lambda expression", style=dashed];
n154 -> n155  [color=red, key=0, style=solid];
n154 -> n73  [color=red, key=2, style=dotted];
n154 -> n72  [color=red, key=2, style=dotted];
n150 -> n151  [color=red, key=0, style=solid];
n150 -> n8  [color=red, key=2, style=dotted];
n151 -> n152  [color=red, key=0, style=solid];
n151 -> n26  [color=red, key=2, style=dotted];
n151 -> n153  [color=red, key=1, label=pyDict, style=dashed];
n153 -> n155  [color=red, key=0, style=solid];
n153 -> n32  [color=red, key=2, style=dotted];
n156 -> n157  [color=red, key=0, style=solid];
n155 -> n147  [color=blue, key=0, style=bold];
n157 -> n158  [color=red, key=0, style=solid];
n158 -> n156  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="params QuantConnect.Symbol[]", style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="params QuantConnect.Symbol[]", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> n31  [key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_28  [key=2, style=dotted];
m1_22 -> m1_29  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_24  [color=crimson, key=0, style=bold];
m1_13 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [color=darkseagreen4, key=1, label=universeSettings, style=dashed];
m1_14 -> m1_24  [color=darkseagreen4, key=1, label=universeSettings, style=dashed];
m1_24 -> m1_18  [key=0, style=solid];
m1_24 -> m1_31  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_24  [color=darkseagreen4, key=1, label=securityInitializer, style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_23  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_23  [color=darkseagreen4, key=1, label=type, style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_30  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_25  [key=0, style=solid];
m1_18 -> m1_26  [key=2, style=dotted];
m1_18 -> m1_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_18 -> m1_20  [color=darkseagreen4, key=1, label=grp, style=dashed];
m1_18 -> m1_24  [color=darkseagreen4, key=1, label=grp, style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label=market, style=dashed];
m1_19 -> m1_22  [color=darkseagreen4, key=1, label=market, style=dashed];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_27  [key=2, style=dotted];
m1_21 -> m1_23  [color=darkseagreen4, key=1, label=universeSymbol, style=dashed];
m1_25 -> m1_13  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UniverseSettings", style=dashed];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityInitializer", style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> n31  [key=2, style=dotted];
m1_9 -> m1_21  [color=darkorchid, key=3, label="Property variable decimal Amount", style=bold];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_8  [color=blue, key=0, style=bold];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_32  [color=blue, key=0, style=bold];
m1_35 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
m1_35 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
m1_35 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
m1_35 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
m1_35 -> m1_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
m1_35 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
m1_35 -> m1_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualPortfolioSelectionModel", style=dashed];
m3_22 -> m3_44  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m3_22 -> m3_43  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m3_22 -> m3_39  [key=0, style=solid];
m3_22 -> m3_24  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_50  [key=0, style=solid];
m3_69 -> m3_70  [color=green, key=0, style=solid];
m3_70 -> m3_71  [color=green, key=0, style=solid];
m3_70 -> m3_72  [color=green, key=2, style=dotted];
m3_71 -> m3_69  [color=blue, key=0, style=bold];
m3_12 -> m3_44  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_43  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m3_12 -> m3_21  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m3_12 -> m3_24  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_28  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_30  [key=2, style=dotted];
m3_32 -> m3_28  [key=0, style=solid];
m3_32 -> m3_60  [key=2, style=dotted];
m3_33 -> m3_31  [color=blue, key=0, style=bold];
m3_33 -> m3_34  [key=0, style=solid];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_83 -> m3_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_86  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_84 -> m3_87  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_84 -> m3_89  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_85  [key=0, style=solid];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_89  [key=0, style=solid];
m3_90 -> m3_91  [key=0, style=solid];
m3_88 -> m3_91  [key=0, style=solid];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_90  [key=0, style=solid];
m3_89 -> m3_85  [key=0, style=solid];
m3_89 -> m3_89  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_91 -> m3_83  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_4 -> m3_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_4 -> m3_14  [color=darkseagreen4, key=1, label=frontier, style=dashed];
m3_4 -> m3_20  [color=darkseagreen4, key=1, label=frontier, style=dashed];
m3_5 -> m3_6  [color=green, key=0, style=solid];
m3_5 -> m3_7  [key=0, style=solid];
m3_5 -> m3_11  [key=2, style=dotted];
m3_5 -> m3_46  [color=green, key=1, label=nextEmitTime, style=dashed];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=0, style=solid];
m3_7 -> m3_11  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_12  [key=2, style=dotted];
m3_9 -> m3_11  [key=0, style=solid];
m3_6 -> m3_10  [key=0, style=solid];
m3_6 -> m3_7  [color=green, key=0, style=solid];
m3_6 -> m3_52  [color=green, key=2, style=dotted];
m3_6 -> m3_53  [color=green, key=2, style=dotted];
m3_6 -> m3_69  [color=green, key=1, label="lambda expression", style=dashed];
m3_6 -> m3_32  [color=green, key=1, label=periods, style=dashed];
m3_6 -> m3_47  [color=green, key=1, label=periods, style=dashed];
m3_8 -> m3_10  [key=0, style=solid];
m3_8 -> m3_7  [key=0, style=solid];
m3_8 -> m3_54  [key=2, style=dotted];
m3_10 -> m3_4  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_55  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_41  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_0 -> m3_6  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_0 -> m3_42  [color=crimson, key=0, style=bold];
m3_0 -> m3_49  [color=crimson, key=0, style=bold];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_0 -> m3_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_0 -> m3_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_0 -> m3_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_0 -> m3_14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_0 -> m3_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_0 -> m3_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_0 -> m3_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_0 -> m3_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_29  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m3_3 -> m3_41  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m3_26 -> m3_27  [key=0, style=solid];
m3_13 -> m3_14  [color=red, key=0, style=solid];
m3_13 -> m3_16  [color=red, key=1, label=object, style=dashed];
m3_13 -> m3_18  [color=red, key=1, label=object, style=dashed];
m3_13 -> m3_20  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_13 -> m3_42  [color=darkseagreen4, key=1, label=newData, style=dashed];
m3_13 -> m3_56  [key=2, style=dotted];
m3_13 -> m3_34  [color=darkseagreen4, key=1, label=newData, style=dashed];
m3_13 -> m3_36  [color=darkseagreen4, key=1, label=newData, style=dashed];
m3_13 -> m3_40  [color=darkseagreen4, key=1, label=newData, style=dashed];
m3_14 -> m3_15  [color=red, key=0, style=solid];
m3_14 -> m3_16  [color=red, key=0, style=solid];
m3_14 -> m3_11  [color=red, key=2, style=dotted];
m3_14 -> m3_57  [key=2, style=dotted];
m3_16 -> m3_17  [color=red, key=0, style=solid];
m3_16 -> m3_18  [color=red, key=0, style=solid];
m3_16 -> m3_11  [color=red, key=2, style=dotted];
m3_16 -> m3_40  [key=0, style=solid];
m3_18 -> m3_19  [color=red, key=0, style=solid];
m3_18 -> m3_20  [color=red, key=0, style=solid];
m3_18 -> m3_22  [color=red, key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_4  [key=2, style=dotted];
m3_20 -> m3_23  [key=0, style=solid];
m3_15 -> m3_21  [color=red, key=0, style=solid];
m3_15 -> m3_32  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_15 -> m3_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_15 -> m3_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_15 -> m3_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_15 -> m3_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_15 -> m3_39  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_17 -> m3_21  [color=red, key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_39  [key=0, style=solid];
m3_19 -> m3_21  [color=red, key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_39  [key=0, style=solid];
m3_19 -> m3_58  [key=2, style=dotted];
m3_19 -> m3_22  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_19 -> m3_23  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_19 -> m3_24  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_19 -> m3_25  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_21 -> m3_13  [color=blue, key=0, style=bold];
m3_21 -> m3_39  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_26  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=2, style=dotted];
m3_25 -> m3_23  [color=blue, key=0, style=bold];
m3_25 -> m3_44  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m3_25 -> m3_43  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_66  [key=2, style=dotted];
m3_47 -> m3_60  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_11  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_49 -> m3_11  [key=0, style=solid];
m3_49 -> m3_56  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_38  [key=0, style=solid];
m3_27 -> m3_59  [key=2, style=dotted];
m3_27 -> m3_37  [color=darkseagreen4, key=1, label=dataPoints, style=dashed];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_50  [key=0, style=solid];
m3_28 -> m3_32  [color=darkseagreen4, key=1, label=point, style=dashed];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_33  [key=0, style=solid];
m3_28 -> m3_30  [color=darkseagreen4, key=1, label=point, style=dashed];
m3_28 -> m3_31  [color=darkseagreen4, key=1, label=point, style=dashed];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_67  [key=2, style=dotted];
m3_44 -> m3_46  [key=0, style=solid];
m3_44 -> m3_65  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_68  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_65  [key=2, style=dotted];
m3_43 -> m3_45  [key=0, style=solid];
m3_43 -> m3_44  [key=0, style=solid];
m3_38 -> m3_17  [key=0, style=solid];
m3_38 -> m3_64  [key=2, style=dotted];
m3_37 -> m3_17  [key=0, style=solid];
m3_37 -> m3_63  [key=2, style=dotted];
m3_39 -> m3_16  [key=0, style=solid];
m3_39 -> m3_39  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_34 -> m3_37  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_61  [key=2, style=dotted];
m3_34 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_34 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_34 -> m3_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_34 -> m3_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_34 -> m3_16  [color=red, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_34 -> m3_18  [color=red, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_34 -> m3_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_34 -> m3_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m3_36 -> m3_37  [key=0, style=solid];
m3_29 -> m3_31  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_27  [color=blue, key=0, style=bold];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_43  [key=0, style=solid];
m3_35 -> m3_37  [color=darkseagreen4, key=1, label=dp, style=dashed];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> n66  [key=2, style=dotted];
m3_51 -> m3_0  [color=blue, key=0, style=bold];
m3_57 -> m3_73  [key=0, style=solid];
m3_57 -> m3_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_57 -> m3_79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_82  [key=2, style=dotted];
m3_73 -> m3_77  [color=darkseagreen4, key=1, label=now, style=dashed];
m3_73 -> m3_79  [color=darkseagreen4, key=1, label=now, style=dashed];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_79  [key=0, style=solid];
m3_77 -> m3_83  [key=2, style=dotted];
m3_79 -> m3_81  [key=0, style=solid];
m3_79 -> m3_80  [key=0, style=solid];
m3_76 -> m3_54  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_78 -> m3_54  [key=2, style=dotted];
m3_78 -> m3_77  [key=0, style=solid];
m3_80 -> m3_54  [key=2, style=dotted];
m3_80 -> m3_78  [key=0, style=solid];
m3_74 -> m3_77  [color=darkseagreen4, key=1, label=loopTimeout, style=dashed];
m3_74 -> m3_79  [color=darkseagreen4, key=1, label=loopTimeout, style=dashed];
m3_74 -> m3_75  [key=0, style=solid];
m3_75 -> m3_77  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_81 -> m3_57  [color=blue, key=0, style=bold];
m4_166 -> m4_167  [key=0, style=solid];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_169  [key=2, style=dotted];
m4_167 -> m4_170  [key=2, style=dotted];
m4_168 -> m4_166  [color=blue, key=0, style=bold];
m4_148 -> m4_344  [key=0, style=solid];
m4_148 -> m4_346  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m4_148 -> m4_132  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.IBar bar", style=bold];
m4_148 -> m4_145  [color=darkorchid, key=3, label="method methodReturn string ToNonScaledCsv", style=bold];
m4_344 -> m4_345  [key=0, style=solid];
m4_344 -> m4_346  [key=0, style=solid];
m4_346 -> m4_347  [key=0, style=solid];
m4_346 -> m4_145  [key=2, style=dotted];
m4_345 -> m4_347  [key=0, style=solid];
m4_345 -> m4_145  [key=2, style=dotted];
m4_347 -> m4_148  [color=blue, key=0, style=bold];
m4_144 -> m4_328  [key=0, style=solid];
m4_328 -> m4_329  [key=0, style=solid];
m4_329 -> m4_144  [color=blue, key=0, style=bold];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_7 -> m4_12  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_7 -> m4_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_25  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_7 -> m4_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_55  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_7 -> m4_57  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_69  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_74  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_7 -> m4_76  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_85  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_88  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_91  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_96  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_102  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_105  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_7 -> m4_107  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_7 -> m4_109  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_121  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_124  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_129  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_132  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_135  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_7 -> m4_138  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_7 -> m4_139  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_7 -> m4_140  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_7 -> m4_1  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.IBaseData data", style=bold];
m4_7 -> m4_0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m4_7 -> m4_145  [color=darkorchid, key=3, label="method methodReturn string GenerateLine", style=bold];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_142  [key=2, style=dotted];
m4_8 -> m4_15  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_19  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_31  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_33  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_39  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_42  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_60  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_66  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_78  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_80  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_82  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_87  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_90  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_93  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_104  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_111  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_113  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_115  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_120  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_123  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_8 -> m4_126  [color=darkseagreen4, key=1, label=milliseconds, style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_143  [key=2, style=dotted];
m4_9 -> m4_23  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m4_9 -> m4_48  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m4_9 -> m4_51  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m4_9 -> m4_72  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m4_9 -> m4_98  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m4_9 -> m4_101  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m4_9 -> m4_131  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m4_9 -> m4_134  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m4_9 -> m4_137  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_24  [key=0, style=solid];
m4_10 -> m4_53  [key=0, style=solid];
m4_10 -> m4_73  [key=0, style=solid];
m4_10 -> m4_106  [key=0, style=solid];
m4_10 -> m4_139  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_16  [key=0, style=solid];
m4_12 -> m4_20  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_35  [key=0, style=solid];
m4_25 -> m4_44  [key=0, style=solid];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_30  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_27 -> m4_31  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_27 -> m4_32  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_27 -> m4_33  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_39  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_42  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_48  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_51  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_61  [key=0, style=solid];
m4_55 -> m4_67  [key=0, style=solid];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_60  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_66  [color=darkseagreen4, key=1, label=bar, style=dashed];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_72  [color=darkseagreen4, key=1, label=bigBar, style=dashed];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_83  [key=0, style=solid];
m4_74 -> m4_94  [key=0, style=solid];
m4_74 -> m4_105  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_76 -> m4_79  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_76 -> m4_80  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_76 -> m4_81  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_76 -> m4_82  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_87  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_90  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_93  [color=darkseagreen4, key=1, label=openInterest, style=dashed];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_98  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_101  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_104  [color=darkseagreen4, key=1, label=bigOpenInterest, style=dashed];
m4_105 -> m4_141  [key=0, style=solid];
m4_105 -> m4_150  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_116  [key=0, style=solid];
m4_107 -> m4_127  [key=0, style=solid];
m4_107 -> m4_138  [key=0, style=solid];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_111  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_109 -> m4_112  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_109 -> m4_113  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_109 -> m4_114  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_109 -> m4_115  [color=darkseagreen4, key=1, label=tick, style=dashed];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_120  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_123  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_126  [color=darkseagreen4, key=1, label=openInterest, style=dashed];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_131  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_134  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_137  [color=darkseagreen4, key=1, label=bigOpenInterest, style=dashed];
m4_138 -> m4_141  [key=0, style=solid];
m4_138 -> m4_150  [key=2, style=dotted];
m4_139 -> m4_141  [key=0, style=solid];
m4_139 -> m4_150  [key=2, style=dotted];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_151  [key=2, style=dotted];
m4_15 -> m4_141  [key=0, style=solid];
m4_15 -> m4_144  [key=2, style=dotted];
m4_15 -> m4_145  [key=2, style=dotted];
m4_19 -> m4_141  [key=0, style=solid];
m4_19 -> m4_144  [key=2, style=dotted];
m4_19 -> m4_145  [key=2, style=dotted];
m4_31 -> m4_141  [key=0, style=solid];
m4_31 -> m4_145  [key=2, style=dotted];
m4_33 -> m4_141  [key=0, style=solid];
m4_33 -> m4_145  [key=2, style=dotted];
m4_39 -> m4_141  [key=0, style=solid];
m4_39 -> m4_148  [key=2, style=dotted];
m4_39 -> m4_145  [key=2, style=dotted];
m4_42 -> m4_141  [key=0, style=solid];
m4_42 -> m4_145  [key=2, style=dotted];
m4_60 -> m4_141  [key=0, style=solid];
m4_60 -> m4_145  [key=2, style=dotted];
m4_66 -> m4_141  [key=0, style=solid];
m4_66 -> m4_148  [key=2, style=dotted];
m4_66 -> m4_145  [key=2, style=dotted];
m4_78 -> m4_141  [key=0, style=solid];
m4_78 -> m4_144  [key=2, style=dotted];
m4_78 -> m4_145  [key=2, style=dotted];
m4_80 -> m4_141  [key=0, style=solid];
m4_80 -> m4_144  [key=2, style=dotted];
m4_80 -> m4_145  [key=2, style=dotted];
m4_82 -> m4_141  [key=0, style=solid];
m4_82 -> m4_145  [key=2, style=dotted];
m4_87 -> m4_141  [key=0, style=solid];
m4_87 -> m4_149  [key=2, style=dotted];
m4_87 -> m4_145  [key=2, style=dotted];
m4_90 -> m4_141  [key=0, style=solid];
m4_90 -> m4_144  [key=2, style=dotted];
m4_90 -> m4_145  [key=2, style=dotted];
m4_93 -> m4_141  [key=0, style=solid];
m4_93 -> m4_145  [key=2, style=dotted];
m4_104 -> m4_141  [key=0, style=solid];
m4_104 -> m4_145  [key=2, style=dotted];
m4_111 -> m4_141  [key=0, style=solid];
m4_111 -> m4_145  [key=2, style=dotted];
m4_113 -> m4_141  [key=0, style=solid];
m4_113 -> m4_145  [key=2, style=dotted];
m4_115 -> m4_141  [key=0, style=solid];
m4_115 -> m4_145  [key=2, style=dotted];
m4_120 -> m4_141  [key=0, style=solid];
m4_120 -> m4_148  [key=2, style=dotted];
m4_120 -> m4_145  [key=2, style=dotted];
m4_123 -> m4_141  [key=0, style=solid];
m4_123 -> m4_145  [key=2, style=dotted];
m4_126 -> m4_141  [key=0, style=solid];
m4_126 -> m4_145  [key=2, style=dotted];
m4_23 -> m4_141  [key=0, style=solid];
m4_23 -> m4_144  [key=2, style=dotted];
m4_23 -> m4_145  [key=2, style=dotted];
m4_48 -> m4_141  [key=0, style=solid];
m4_48 -> m4_148  [key=2, style=dotted];
m4_48 -> m4_145  [key=2, style=dotted];
m4_51 -> m4_141  [key=0, style=solid];
m4_51 -> m4_145  [key=2, style=dotted];
m4_72 -> m4_141  [key=0, style=solid];
m4_72 -> m4_148  [key=2, style=dotted];
m4_72 -> m4_145  [key=2, style=dotted];
m4_98 -> m4_141  [key=0, style=solid];
m4_98 -> m4_149  [key=2, style=dotted];
m4_98 -> m4_145  [key=2, style=dotted];
m4_101 -> m4_141  [key=0, style=solid];
m4_101 -> m4_149  [key=2, style=dotted];
m4_101 -> m4_145  [key=2, style=dotted];
m4_131 -> m4_141  [key=0, style=solid];
m4_131 -> m4_148  [key=2, style=dotted];
m4_131 -> m4_145  [key=2, style=dotted];
m4_134 -> m4_141  [key=0, style=solid];
m4_134 -> m4_148  [key=2, style=dotted];
m4_134 -> m4_145  [key=2, style=dotted];
m4_137 -> m4_141  [key=0, style=solid];
m4_137 -> m4_145  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_73 -> m4_74  [key=0, style=solid];
m4_106 -> m4_107  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_34  [key=0, style=solid];
m4_29 -> m4_141  [key=0, style=solid];
m4_29 -> m4_146  [key=2, style=dotted];
m4_34 -> m4_141  [key=0, style=solid];
m4_34 -> m4_147  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_40  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_43  [key=0, style=solid];
m4_43 -> m4_141  [key=0, style=solid];
m4_43 -> m4_146  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_49  [key=0, style=solid];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_52  [key=0, style=solid];
m4_52 -> m4_141  [key=0, style=solid];
m4_52 -> m4_146  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_56 -> m4_57  [key=0, style=solid];
m4_61 -> m4_62  [key=0, style=solid];
m4_67 -> m4_68  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_60  [key=0, style=solid];
m4_59 -> m4_141  [key=0, style=solid];
m4_59 -> m4_146  [key=2, style=dotted];
m4_62 -> m4_63  [key=0, style=solid];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_66  [key=0, style=solid];
m4_65 -> m4_141  [key=0, style=solid];
m4_65 -> m4_146  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_72  [key=0, style=solid];
m4_71 -> m4_141  [key=0, style=solid];
m4_71 -> m4_146  [key=2, style=dotted];
m4_75 -> m4_76  [key=0, style=solid];
m4_83 -> m4_84  [key=0, style=solid];
m4_94 -> m4_95  [key=0, style=solid];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_79  [key=0, style=solid];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_81  [key=0, style=solid];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_140  [key=0, style=solid];
m4_84 -> m4_85  [key=0, style=solid];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_88  [key=0, style=solid];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_91  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_140  [key=0, style=solid];
m4_95 -> m4_96  [key=0, style=solid];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_99  [key=0, style=solid];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_102  [key=0, style=solid];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_140  [key=0, style=solid];
m4_108 -> m4_109  [key=0, style=solid];
m4_116 -> m4_117  [key=0, style=solid];
m4_127 -> m4_128  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [key=0, style=solid];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_114  [key=0, style=solid];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_140  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_121  [key=0, style=solid];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_124  [key=0, style=solid];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_140  [key=0, style=solid];
m4_128 -> m4_129  [key=0, style=solid];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_132  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_135  [key=0, style=solid];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_140  [key=0, style=solid];
m4_141 -> m4_7  [color=blue, key=0, style=bold];
m4_149 -> m4_340  [key=0, style=solid];
m4_149 -> m4_342  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m4_149 -> m4_99  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.IBar bar", style=bold];
m4_149 -> m4_145  [color=darkorchid, key=3, label="method methodReturn string ToScaledCsv", style=bold];
m4_340 -> m4_341  [key=0, style=solid];
m4_340 -> m4_342  [key=0, style=solid];
m4_342 -> m4_343  [key=0, style=solid];
m4_342 -> m4_144  [key=2, style=dotted];
m4_342 -> m4_145  [key=2, style=dotted];
m4_341 -> m4_343  [key=0, style=solid];
m4_341 -> m4_145  [key=2, style=dotted];
m4_343 -> m4_149  [color=blue, key=0, style=bold];
m4_145 -> m4_330  [key=0, style=solid];
m4_145 -> m4_331  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m4_145 -> m4_332  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m4_145 -> m4_334  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m4_145 -> m4_336  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m4_145 -> m4_8  [color=darkorchid, key=3, label="Parameter variable object[] args", style=bold];
m4_145 -> m4_144  [color=darkorchid, key=3, label="Parameter variable object[] args", style=bold];
m4_145 -> m4_9  [color=darkorchid, key=3, label="Parameter variable object[] args", style=bold];
m4_145 -> m4_148  [color=darkorchid, key=3, label="Parameter variable object[] args", style=bold];
m4_145 -> m4_149  [color=darkorchid, key=3, label="Parameter variable object[] args", style=bold];
m4_330 -> m4_331  [key=0, style=solid];
m4_330 -> m4_332  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_330 -> m4_334  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_330 -> m4_335  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_330 -> m4_289  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m4_331 -> m4_332  [key=0, style=solid];
m4_331 -> m4_336  [key=0, style=solid];
m4_332 -> m4_333  [key=0, style=solid];
m4_332 -> m4_334  [color=darkseagreen4, key=1, label=value, style=dashed];
m4_334 -> m4_335  [key=0, style=solid];
m4_334 -> m4_338  [key=2, style=dotted];
m4_334 -> m4_339  [key=2, style=dotted];
m4_336 -> m4_337  [key=0, style=solid];
m4_336 -> m4_239  [key=2, style=dotted];
m4_335 -> m4_331  [key=0, style=solid];
m4_335 -> m4_335  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_333 -> m4_334  [key=0, style=solid];
m4_333 -> m4_335  [key=0, style=solid];
m4_337 -> m4_145  [color=blue, key=0, style=bold];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_155  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m4_152 -> m4_157  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_155  [key=0, style=solid];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_157  [key=0, style=solid];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_159  [key=0, style=solid];
m4_154 -> m4_160  [key=0, style=solid];
m4_156 -> m4_160  [key=0, style=solid];
m4_158 -> m4_160  [key=0, style=solid];
m4_159 -> m4_160  [key=0, style=solid];
m4_160 -> m4_152  [color=blue, key=0, style=bold];
m4_355 -> m4_356  [key=0, style=solid];
m4_355 -> m4_357  [key=0, style=solid];
m4_348 -> m4_349  [key=0, style=solid];
m4_348 -> m4_351  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_348 -> m4_353  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_348 -> m4_355  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_348 -> m4_357  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_348 -> m4_358  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_348 -> m4_289  [color=darkorchid, key=3, label="method methodReturn QuantConnect.TickType GetCommonTickTypeForCommonDataTypes", style=bold];
m4_348 -> m4_288  [color=darkorchid, key=3, label="method methodReturn QuantConnect.TickType GetCommonTickTypeForCommonDataTypes", style=bold];
m4_348 -> m4_354  [color=darkorchid, key=3, label="method methodReturn QuantConnect.TickType GetCommonTickTypeForCommonDataTypes", style=bold];
m4_349 -> m4_350  [key=0, style=solid];
m4_349 -> m4_351  [key=0, style=solid];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_353  [key=0, style=solid];
m4_353 -> m4_354  [key=0, style=solid];
m4_353 -> m4_355  [key=0, style=solid];
m4_357 -> m4_358  [key=0, style=solid];
m4_357 -> m4_360  [key=0, style=solid];
m4_358 -> m4_359  [key=0, style=solid];
m4_358 -> m4_360  [key=0, style=solid];
m4_350 -> m4_361  [key=0, style=solid];
m4_352 -> m4_361  [key=0, style=solid];
m4_354 -> m4_361  [key=0, style=solid];
m4_356 -> m4_361  [key=0, style=solid];
m4_360 -> m4_361  [key=0, style=solid];
m4_359 -> m4_361  [key=0, style=solid];
m4_361 -> m4_348  [color=blue, key=0, style=bold];
m4_205 -> m4_251  [key=0, style=solid];
m4_205 -> m4_252  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_205 -> m4_253  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_205 -> m4_254  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_205 -> m4_260  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_205 -> m4_264  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_205 -> m4_268  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_205 -> m4_269  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_205 -> m4_272  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_205 -> m4_169  [color=darkorchid, key=3, label="Parameter variable QuantConnect.TickType tickType", style=bold];
m4_251 -> m4_252  [key=0, style=solid];
m4_251 -> m4_195  [key=2, style=dotted];
m4_251 -> m4_261  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m4_251 -> m4_264  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m4_251 -> m4_265  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m4_251 -> m4_268  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m4_251 -> m4_269  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m4_251 -> m4_272  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m4_251 -> m4_273  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_143  [key=2, style=dotted];
m4_252 -> m4_261  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m4_252 -> m4_265  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m4_252 -> m4_269  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m4_252 -> m4_273  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m4_253 -> m4_254  [key=0, style=solid];
m4_253 -> m4_259  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m4_253 -> m4_263  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m4_253 -> m4_267  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m4_253 -> m4_271  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m4_254 -> m4_255  [key=0, style=solid];
m4_254 -> m4_262  [key=0, style=solid];
m4_254 -> m4_266  [key=0, style=solid];
m4_254 -> m4_270  [key=0, style=solid];
m4_254 -> m4_274  [key=0, style=solid];
m4_260 -> m4_276  [key=0, style=solid];
m4_260 -> m4_196  [key=2, style=dotted];
m4_260 -> m4_238  [key=2, style=dotted];
m4_264 -> m4_276  [key=0, style=solid];
m4_264 -> m4_196  [key=2, style=dotted];
m4_264 -> m4_277  [key=2, style=dotted];
m4_268 -> m4_276  [key=0, style=solid];
m4_268 -> m4_196  [key=2, style=dotted];
m4_268 -> m4_195  [key=2, style=dotted];
m4_268 -> m4_278  [key=2, style=dotted];
m4_269 -> m4_276  [key=0, style=solid];
m4_269 -> m4_195  [key=2, style=dotted];
m4_269 -> m4_278  [key=2, style=dotted];
m4_272 -> m4_276  [key=0, style=solid];
m4_272 -> m4_196  [key=2, style=dotted];
m4_272 -> m4_277  [key=2, style=dotted];
m4_261 -> m4_276  [key=0, style=solid];
m4_261 -> m4_277  [key=2, style=dotted];
m4_265 -> m4_276  [key=0, style=solid];
m4_265 -> m4_277  [key=2, style=dotted];
m4_273 -> m4_276  [key=0, style=solid];
m4_273 -> m4_277  [key=2, style=dotted];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_261  [key=0, style=solid];
m4_263 -> m4_264  [key=0, style=solid];
m4_263 -> m4_265  [key=0, style=solid];
m4_267 -> m4_268  [key=0, style=solid];
m4_267 -> m4_269  [key=0, style=solid];
m4_271 -> m4_272  [key=0, style=solid];
m4_271 -> m4_273  [key=0, style=solid];
m4_255 -> m4_256  [key=0, style=solid];
m4_262 -> m4_263  [key=0, style=solid];
m4_266 -> m4_267  [key=0, style=solid];
m4_270 -> m4_271  [key=0, style=solid];
m4_274 -> m4_275  [key=0, style=solid];
m4_256 -> m4_257  [key=0, style=solid];
m4_257 -> m4_258  [key=0, style=solid];
m4_258 -> m4_259  [key=0, style=solid];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_198  [key=2, style=dotted];
m4_276 -> m4_205  [color=blue, key=0, style=bold];
m4_407 -> m4_408  [key=0, style=solid];
m4_401 -> m4_402  [key=0, style=solid];
m4_408 -> m4_409  [key=0, style=solid];
m4_408 -> m4_196  [key=2, style=dotted];
m4_408 -> m4_410  [key=2, style=dotted];
m4_405 -> m4_406  [key=0, style=solid];
m4_405 -> m4_391  [key=2, style=dotted];
m4_404 -> m4_405  [key=0, style=solid];
m4_402 -> m4_403  [key=0, style=solid];
m4_402 -> m4_196  [key=2, style=dotted];
m4_403 -> m4_401  [color=blue, key=0, style=bold];
m4_406 -> m4_404  [color=blue, key=0, style=bold];
m4_409 -> m4_407  [color=blue, key=0, style=bold];
m4_362 -> m4_363  [key=0, style=solid];
m4_362 -> m4_368  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_362 -> m4_164  [color=darkorchid, key=3, label="method methodReturn bool TryParsePath", style=bold];
m4_362 -> m4_163  [color=darkorchid, key=3, label="method methodReturn bool TryParsePath", style=bold];
m4_363 -> m4_364  [key=0, style=solid];
m4_368 -> m4_369  [key=0, style=solid];
m4_368 -> m4_390  [key=2, style=dotted];
m4_368 -> m4_319  [key=2, style=dotted];
m4_368 -> m4_368  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_368 -> m4_405  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_368 -> m4_370  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_368 -> m4_371  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_368 -> m4_383  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_364 -> m4_365  [key=0, style=solid];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_386  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m4_366 -> m4_367  [key=0, style=solid];
m4_366 -> m4_369  [color=darkseagreen4, key=1, label=pathSeparators, style=dashed];
m4_366 -> m4_371  [color=darkseagreen4, key=1, label=pathSeparators, style=dashed];
m4_367 -> m4_368  [key=0, style=solid];
m4_367 -> m4_387  [key=2, style=dotted];
m4_367 -> m4_388  [key=2, style=dotted];
m4_367 -> n28  [key=2, style=dotted];
m4_367 -> m4_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_367 -> m4_372  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m4_367 -> m4_408  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m4_369 -> m4_370  [key=0, style=solid];
m4_369 -> m4_371  [key=0, style=solid];
m4_369 -> m4_391  [key=2, style=dotted];
m4_369 -> m4_392  [key=2, style=dotted];
m4_369 -> m4_404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_371 -> m4_372  [key=0, style=solid];
m4_371 -> m4_394  [key=2, style=dotted];
m4_371 -> m4_395  [key=2, style=dotted];
m4_371 -> m4_373  [color=darkseagreen4, key=1, label=info, style=dashed];
m4_371 -> m4_374  [color=darkseagreen4, key=1, label=info, style=dashed];
m4_371 -> m4_375  [color=darkseagreen4, key=1, label=info, style=dashed];
m4_371 -> m4_376  [color=darkseagreen4, key=1, label=info, style=dashed];
m4_371 -> m4_380  [color=darkseagreen4, key=1, label=info, style=dashed];
m4_372 -> m4_373  [key=0, style=solid];
m4_372 -> m4_396  [key=2, style=dotted];
m4_372 -> m4_407  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_372 -> m4_374  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m4_372 -> m4_375  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m4_372 -> m4_376  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m4_372 -> m4_380  [color=darkseagreen4, key=1, label=startIndex, style=dashed];
m4_370 -> m4_369  [key=0, style=solid];
m4_370 -> m4_393  [key=2, style=dotted];
m4_370 -> m4_370  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_370 -> m4_371  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_370 -> m4_383  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_383 -> m4_384  [key=0, style=solid];
m4_383 -> m4_399  [key=2, style=dotted];
m4_383 -> m4_400  [key=2, style=dotted];
m4_373 -> m4_374  [key=0, style=solid];
m4_373 -> m4_381  [color=darkseagreen4, key=1, label=market, style=dashed];
m4_374 -> m4_375  [key=0, style=solid];
m4_374 -> m4_381  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m4_375 -> m4_376  [key=0, style=solid];
m4_375 -> m4_321  [key=2, style=dotted];
m4_375 -> m4_379  [color=darkseagreen4, key=1, label="out QuantConnect.Resolution", style=dashed];
m4_375 -> m4_386  [color=darkseagreen4, key=1, label="out QuantConnect.Resolution", style=dashed];
m4_376 -> m4_377  [color=red, key=0, style=solid];
m4_376 -> m4_321  [key=2, style=dotted];
m4_376 -> m4_381  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m4_380 -> m4_381  [key=0, style=solid];
m4_380 -> m4_397  [key=2, style=dotted];
m4_380 -> m4_323  [key=2, style=dotted];
m4_380 -> m4_386  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m4_381 -> m4_382  [key=0, style=solid];
m4_381 -> m4_385  [key=0, style=solid];
m4_381 -> m4_398  [key=2, style=dotted];
m4_381 -> m4_386  [color=darkseagreen4, key=1, label="out QuantConnect.Symbol", style=dashed];
m4_379 -> m4_380  [key=0, style=solid];
m4_379 -> m4_381  [key=0, style=solid];
m4_377 -> m4_378  [color=red, key=0, style=solid];
m4_377 -> m4_379  [color=red, key=0, style=solid];
m4_378 -> m4_385  [color=red, key=0, style=solid];
m4_378 -> m4_147  [color=red, key=2, style=dotted];
m4_382 -> m4_383  [key=0, style=solid];
m4_385 -> m4_386  [key=0, style=solid];
m4_384 -> m4_386  [key=0, style=solid];
m4_386 -> m4_362  [color=blue, key=0, style=bold];
m4_250 -> m4_241  [color=blue, key=0, style=bold];
m4_241 -> m4_242  [key=0, style=solid];
m4_241 -> m4_244  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_241 -> m4_245  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_241 -> m4_247  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_241 -> m4_249  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_242 -> m4_243  [key=0, style=solid];
m4_242 -> m4_244  [key=0, style=solid];
m4_244 -> m4_245  [key=0, style=solid];
m4_244 -> m4_196  [key=2, style=dotted];
m4_244 -> m4_244  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_244 -> m4_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_244 -> m4_249  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_245 -> m4_246  [key=0, style=solid];
m4_245 -> m4_247  [key=0, style=solid];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_249  [key=0, style=solid];
m4_249 -> m4_250  [key=0, style=solid];
m4_249 -> m4_143  [key=2, style=dotted];
m4_249 -> m4_195  [key=2, style=dotted];
m4_249 -> m4_237  [key=2, style=dotted];
m4_243 -> m4_250  [key=0, style=solid];
m4_243 -> m4_151  [key=2, style=dotted];
m4_246 -> m4_250  [key=0, style=solid];
m4_248 -> m4_249  [key=0, style=solid];
m4_171 -> m4_172  [key=0, style=solid];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> m4_174  [key=2, style=dotted];
m4_172 -> m4_170  [key=2, style=dotted];
m4_173 -> m4_171  [color=blue, key=0, style=bold];
m4_211 -> m4_279  [key=0, style=solid];
m4_211 -> m4_280  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_211 -> m4_281  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_211 -> m4_282  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_211 -> m4_174  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_281  [key=0, style=solid];
m4_280 -> m4_285  [key=0, style=solid];
m4_280 -> m4_196  [key=2, style=dotted];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_143  [key=2, style=dotted];
m4_281 -> m4_284  [color=darkseagreen4, key=1, label=zipFileName, style=dashed];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_282  [color=darkseagreen4, key=1, label="QuantConnect.TickType?", style=dashed];
m4_284 -> m4_285  [key=0, style=solid];
m4_283 -> m4_284  [key=0, style=solid];
m4_283 -> m4_195  [key=2, style=dotted];
m4_283 -> m4_238  [key=2, style=dotted];
m4_285 -> m4_211  [color=blue, key=0, style=bold];
m4_318 -> m4_291  [color=blue, key=0, style=bold];
m4_291 -> m4_292  [key=0, style=solid];
m4_291 -> m4_293  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_291 -> m4_294  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_291 -> m4_301  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_291 -> m4_306  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_291 -> m4_312  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_291 -> m4_316  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_291 -> m4_317  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_292 -> m4_293  [key=0, style=solid];
m4_292 -> m4_296  [color=darkseagreen4, key=1, label=isHourlyOrDaily, style=dashed];
m4_292 -> m4_308  [color=darkseagreen4, key=1, label=isHourlyOrDaily, style=dashed];
m4_293 -> m4_294  [key=0, style=solid];
m4_293 -> m4_319  [key=2, style=dotted];
m4_293 -> m4_320  [key=2, style=dotted];
m4_293 -> m4_297  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_298  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_299  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_300  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_302  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_303  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_304  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_305  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_309  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_310  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_312  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_313  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_314  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_293 -> m4_316  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_294 -> m4_295  [key=0, style=solid];
m4_294 -> m4_307  [key=0, style=solid];
m4_294 -> m4_317  [key=0, style=solid];
m4_301 -> m4_318  [key=0, style=solid];
m4_301 -> m4_324  [key=2, style=dotted];
m4_306 -> m4_318  [key=0, style=solid];
m4_306 -> m4_324  [key=2, style=dotted];
m4_312 -> m4_318  [key=0, style=solid];
m4_312 -> m4_327  [key=2, style=dotted];
m4_316 -> m4_318  [key=0, style=solid];
m4_316 -> m4_327  [key=2, style=dotted];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_151  [key=2, style=dotted];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_302  [key=0, style=solid];
m4_308 -> m4_309  [key=0, style=solid];
m4_308 -> m4_313  [key=0, style=solid];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_321  [key=2, style=dotted];
m4_297 -> m4_301  [color=darkseagreen4, key=1, label=style, style=dashed];
m4_298 -> m4_299  [key=0, style=solid];
m4_298 -> m4_321  [key=2, style=dotted];
m4_298 -> m4_301  [color=darkseagreen4, key=1, label=right, style=dashed];
m4_299 -> m4_300  [key=0, style=solid];
m4_299 -> m4_322  [key=2, style=dotted];
m4_299 -> m4_301  [color=darkseagreen4, key=1, label=strike, style=dashed];
m4_300 -> m4_301  [key=0, style=solid];
m4_300 -> m4_323  [key=2, style=dotted];
m4_302 -> m4_303  [key=0, style=solid];
m4_302 -> m4_321  [key=2, style=dotted];
m4_302 -> m4_306  [color=darkseagreen4, key=1, label=style, style=dashed];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_321  [key=2, style=dotted];
m4_303 -> m4_306  [color=darkseagreen4, key=1, label=right, style=dashed];
m4_304 -> m4_305  [key=0, style=solid];
m4_304 -> m4_322  [key=2, style=dotted];
m4_304 -> m4_306  [color=darkseagreen4, key=1, label=strike, style=dashed];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_323  [key=2, style=dotted];
m4_309 -> m4_310  [key=0, style=solid];
m4_309 -> m4_323  [key=2, style=dotted];
m4_309 -> m4_311  [color=darkseagreen4, key=1, label=expiryYearMonth, style=dashed];
m4_310 -> m4_311  [key=0, style=solid];
m4_310 -> m4_325  [key=2, style=dotted];
m4_313 -> m4_314  [key=0, style=solid];
m4_313 -> m4_323  [key=2, style=dotted];
m4_313 -> m4_315  [color=darkseagreen4, key=1, label=expiryYearMonth, style=dashed];
m4_314 -> m4_315  [key=0, style=solid];
m4_314 -> m4_325  [key=2, style=dotted];
m4_295 -> m4_296  [key=0, style=solid];
m4_307 -> m4_308  [key=0, style=solid];
m4_311 -> m4_312  [key=0, style=solid];
m4_311 -> m4_326  [key=2, style=dotted];
m4_315 -> m4_316  [key=0, style=solid];
m4_315 -> m4_326  [key=2, style=dotted];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_163  [color=darkorchid, key=3, label="method methodReturn bool IsCommonLeanDataType", style=bold];
m4_161 -> m4_164  [color=darkorchid, key=3, label="method methodReturn bool IsCommonLeanDataType", style=bold];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_164  [key=0, style=solid];
m4_163 -> m4_165  [key=0, style=solid];
m4_164 -> m4_165  [key=0, style=solid];
m4_165 -> m4_161  [color=blue, key=0, style=bold];
m4_199 -> m4_200  [key=0, style=solid];
m4_200 -> m4_201  [key=0, style=solid];
m4_200 -> m4_196  [key=2, style=dotted];
m4_200 -> m4_202  [key=2, style=dotted];
m4_201 -> m4_199  [color=blue, key=0, style=bold];
m4_174 -> m4_206  [key=0, style=solid];
m4_174 -> m4_207  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_174 -> m4_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_174 -> m4_209  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_174 -> m4_171  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m4_206 -> m4_207  [key=0, style=solid];
m4_206 -> m4_195  [key=2, style=dotted];
m4_206 -> m4_196  [key=2, style=dotted];
m4_206 -> m4_197  [key=2, style=dotted];
m4_206 -> m4_208  [color=darkseagreen4, key=1, label=directory, style=dashed];
m4_206 -> m4_209  [color=darkseagreen4, key=1, label=directory, style=dashed];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_209  [key=0, style=solid];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_196  [key=2, style=dotted];
m4_208 -> m4_170  [key=2, style=dotted];
m4_208 -> m4_208  [color=darkseagreen4, key=1, label=directory, style=dashed];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_211  [key=2, style=dotted];
m4_209 -> m4_170  [key=2, style=dotted];
m4_210 -> m4_174  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_0 -> m4_7  [color=darkorchid, key=3, label="method methodReturn string GenerateLine", style=bold];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_5  [key=2, style=dotted];
m4_1 -> m4_3  [color=darkseagreen4, key=1, label=clone, style=dashed];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_7  [key=2, style=dotted];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
m4_169 -> m4_203  [key=0, style=solid];
m4_169 -> m4_166  [color=darkorchid, key=3, label="Parameter variable QuantConnect.TickType tickType", style=bold];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_175  [key=2, style=dotted];
m4_203 -> m4_205  [key=2, style=dotted];
m4_203 -> m4_170  [key=2, style=dotted];
m4_204 -> m4_169  [color=blue, key=0, style=bold];
m4_236 -> m4_212  [color=blue, key=0, style=bold];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_214  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_212 -> m4_215  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_212 -> m4_221  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_212 -> m4_222  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_212 -> m4_224  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_212 -> m4_225  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_212 -> m4_228  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_212 -> m4_229  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_212 -> m4_232  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_212 -> m4_233  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_143  [key=2, style=dotted];
m4_213 -> m4_222  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m4_213 -> m4_225  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m4_213 -> m4_229  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m4_213 -> m4_233  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_223  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m4_214 -> m4_227  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m4_214 -> m4_231  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_226  [key=0, style=solid];
m4_215 -> m4_230  [key=0, style=solid];
m4_215 -> m4_234  [key=0, style=solid];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_223  [key=0, style=solid];
m4_222 -> m4_236  [key=0, style=solid];
m4_222 -> m4_196  [key=2, style=dotted];
m4_222 -> m4_237  [key=2, style=dotted];
m4_224 -> m4_236  [key=0, style=solid];
m4_224 -> m4_196  [key=2, style=dotted];
m4_224 -> m4_238  [key=2, style=dotted];
m4_225 -> m4_236  [key=0, style=solid];
m4_225 -> m4_196  [key=2, style=dotted];
m4_225 -> m4_195  [key=2, style=dotted];
m4_225 -> m4_237  [key=2, style=dotted];
m4_228 -> m4_236  [key=0, style=solid];
m4_228 -> m4_196  [key=2, style=dotted];
m4_228 -> m4_195  [key=2, style=dotted];
m4_228 -> m4_144  [key=2, style=dotted];
m4_228 -> m4_143  [key=2, style=dotted];
m4_228 -> m4_239  [key=2, style=dotted];
m4_229 -> m4_236  [key=0, style=solid];
m4_229 -> m4_196  [key=2, style=dotted];
m4_229 -> m4_195  [key=2, style=dotted];
m4_229 -> m4_144  [key=2, style=dotted];
m4_229 -> m4_143  [key=2, style=dotted];
m4_229 -> m4_239  [key=2, style=dotted];
m4_232 -> m4_236  [key=0, style=solid];
m4_232 -> m4_196  [key=2, style=dotted];
m4_232 -> m4_195  [key=2, style=dotted];
m4_232 -> m4_143  [key=2, style=dotted];
m4_232 -> m4_240  [key=2, style=dotted];
m4_233 -> m4_236  [key=0, style=solid];
m4_233 -> m4_196  [key=2, style=dotted];
m4_233 -> m4_195  [key=2, style=dotted];
m4_233 -> m4_143  [key=2, style=dotted];
m4_233 -> m4_240  [key=2, style=dotted];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_225  [key=0, style=solid];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_229  [key=0, style=solid];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_233  [key=0, style=solid];
m4_216 -> m4_217  [key=0, style=solid];
m4_226 -> m4_227  [key=0, style=solid];
m4_230 -> m4_231  [key=0, style=solid];
m4_234 -> m4_235  [key=0, style=solid];
m4_217 -> m4_218  [key=0, style=solid];
m4_218 -> m4_219  [key=0, style=solid];
m4_219 -> m4_220  [key=0, style=solid];
m4_220 -> m4_221  [key=0, style=solid];
m4_235 -> m4_236  [key=0, style=solid];
m4_235 -> m4_198  [key=2, style=dotted];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_177  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_175 -> m4_178  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_175 -> m4_179  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_175 -> m4_181  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_175 -> m4_187  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_175 -> m4_189  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_175 -> m4_191  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_175 -> m4_169  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_187  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m4_176 -> m4_189  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m4_176 -> m4_191  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m4_177 -> m4_178  [key=0, style=solid];
m4_177 -> m4_195  [key=2, style=dotted];
m4_177 -> m4_180  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_196  [key=2, style=dotted];
m4_178 -> m4_180  [color=darkseagreen4, key=1, label=market, style=dashed];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_195  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_188  [key=0, style=solid];
m4_181 -> m4_190  [key=0, style=solid];
m4_181 -> m4_192  [key=0, style=solid];
m4_187 -> m4_194  [key=0, style=solid];
m4_187 -> m4_196  [key=2, style=dotted];
m4_187 -> m4_170  [key=2, style=dotted];
m4_189 -> m4_194  [key=0, style=solid];
m4_189 -> m4_196  [key=2, style=dotted];
m4_189 -> m4_170  [key=2, style=dotted];
m4_191 -> m4_194  [key=0, style=solid];
m4_191 -> m4_196  [key=2, style=dotted];
m4_191 -> m4_170  [key=2, style=dotted];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_197  [key=2, style=dotted];
m4_180 -> m4_187  [color=darkseagreen4, key=1, label=directory, style=dashed];
m4_180 -> m4_189  [color=darkseagreen4, key=1, label=directory, style=dashed];
m4_180 -> m4_191  [color=darkseagreen4, key=1, label=directory, style=dashed];
m4_182 -> m4_183  [key=0, style=solid];
m4_188 -> m4_189  [key=0, style=solid];
m4_190 -> m4_191  [key=0, style=solid];
m4_192 -> m4_193  [key=0, style=solid];
m4_183 -> m4_184  [key=0, style=solid];
m4_184 -> m4_185  [key=0, style=solid];
m4_185 -> m4_186  [key=0, style=solid];
m4_186 -> m4_187  [key=0, style=solid];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_198  [key=2, style=dotted];
m4_194 -> m4_175  [color=blue, key=0, style=bold];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_288  [color=darkorchid, key=3, label="method methodReturn QuantConnect.TickType GetCommonTickType", style=bold];
m4_286 -> m4_289  [color=darkorchid, key=3, label="method methodReturn QuantConnect.TickType GetCommonTickType", style=bold];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_289  [key=0, style=solid];
m4_288 -> m4_290  [key=0, style=solid];
m4_289 -> m4_290  [key=0, style=solid];
m4_290 -> m4_286  [color=blue, key=0, style=bold];
m4_411 -> m4_405  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_412 -> m4_408  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_0 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_6  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_7  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_0  [color=blue, key=0, style=bold];
m5_8 -> m5_9  [color=green, key=0, style=solid];
m5_8 -> m5_13  [color=green, key=0, style=bold];
m5_8 -> m5_16  [color=green, key=0, style=bold];
m5_9 -> m5_10  [color=green, key=0, style=solid];
m5_9 -> m5_19  [color=green, key=2, style=dotted];
m5_9 -> m5_20  [color=green, key=2, style=dotted];
m5_9 -> m5_16  [color=green, key=1, label=factory, style=dashed];
m5_10 -> m5_11  [color=green, key=0, style=solid];
m5_16 -> m5_15  [color=green, key=0, style=solid];
m5_16 -> m5_23  [color=green, key=2, style=dotted];
m5_13 -> m5_14  [color=green, key=0, style=solid];
m5_12 -> m5_13  [color=green, key=0, style=solid];
m5_12 -> m5_14  [color=green, key=0, style=solid];
m5_14 -> m5_15  [color=green, key=0, style=solid];
m5_15 -> m5_16  [color=green, key=0, style=solid];
m5_15 -> m5_17  [color=green, key=0, style=solid];
m5_15 -> m5_22  [color=green, key=2, style=dotted];
m5_11 -> m5_12  [color=green, key=0, style=solid];
m5_11 -> m5_21  [color=green, key=2, style=dotted];
m5_11 -> m5_15  [color=green, key=1, label=unzipped, style=dashed];
m5_11 -> m5_17  [color=green, key=1, label=zipFile, style=dashed];
m5_17 -> m5_18  [color=green, key=0, style=solid];
m5_17 -> m5_24  [color=green, key=2, style=dotted];
m5_18 -> m5_8  [color=blue, key=0, style=bold];
m5_25 -> m5_9  [color=green, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m5_25 -> m5_16  [color=green, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m5_25 -> m5_11  [color=green, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m5_25 -> m5_1  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m5_25 -> m5_2  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m5_25 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m5_25 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.LeanDataReader", style=dashed];
m6_132 -> m6_133  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_26 -> m6_24  [color=blue, key=0, style=bold];
m6_38 -> m6_39  [color=red, key=0, style=solid];
m6_39 -> m6_40  [color=red, key=0, style=solid];
m6_40 -> m6_38  [color=blue, key=0, style=bold];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_59  [key=2, style=dotted];
m6_133 -> m6_135  [key=2, style=dotted];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_123  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_127  [key=2, style=dotted];
m6_129 -> m6_130  [key=0, style=solid];
m6_129 -> m6_131  [key=2, style=dotted];
m6_120 -> m6_121  [key=0, style=solid];
m6_122 -> m6_120  [color=blue, key=0, style=bold];
m6_124 -> m6_125  [key=0, style=solid];
m6_126 -> m6_124  [color=blue, key=0, style=bold];
m6_128 -> m6_129  [key=0, style=solid];
m6_130 -> m6_128  [color=blue, key=0, style=bold];
m6_134 -> m6_132  [color=blue, key=0, style=bold];
m6_21 -> m6_41  [key=0, style=solid];
m6_21 -> m6_42  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
m6_21 -> m6_46  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m6_21 -> m6_49  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_21 -> m6_11  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol future", style=bold];
m6_21 -> m6_6  [color=darkorchid, key=3, label="Parameter variable QuantConnect.TickType tickType", style=bold];
m6_21 -> m6_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution res", style=bold];
m6_21 -> m6_51  [color=darkorchid, key=3, label="method methodReturn string LoadFutureData", style=bold];
m6_41 -> m6_42  [color=red, key=0, style=solid];
m6_41 -> m6_54  [key=2, style=dotted];
m6_42 -> m6_43  [color=red, key=0, style=solid];
m6_42 -> m6_33  [color=red, key=2, style=dotted];
m6_42 -> m6_46  [color=red, key=1, label=config, style=dashed];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_56  [key=2, style=dotted];
m6_49 -> m6_48  [key=0, style=solid];
m6_49 -> m6_59  [key=2, style=dotted];
m6_49 -> m6_60  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_45  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_43 -> m6_46  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_43 -> m6_50  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_55  [key=2, style=dotted];
m6_44 -> m6_49  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_44 -> m6_51  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_51  [key=0, style=solid];
m6_50 -> m6_45  [key=0, style=solid];
m6_50 -> m6_61  [key=2, style=dotted];
m6_50 -> m6_50  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_62  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_57  [key=2, style=dotted];
m6_47 -> m6_58  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_50  [key=0, style=solid];
m6_52 -> m6_53  [key=0, style=solid];
m6_53 -> m6_21  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [color=red, key=0, style=solid];
m6_1 -> m6_2  [color=red, key=0, style=solid];
m6_1 -> m6_15  [color=red, key=2, style=dotted];
m6_1 -> m6_16  [color=red, key=2, style=dotted];
m6_1 -> m6_4  [color=red, key=1, label=canonicalFutures, style=dashed];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_6  [color=darkseagreen4, key=1, label=tickTypes, style=dashed];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_14  [key=0, style=solid];
m6_4 -> m6_7  [color=red, key=1, label=canonical, style=dashed];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [color=darkseagreen4, key=1, label=resolutions, style=dashed];
m6_6 -> m6_7  [color=red, key=0, style=solid];
m6_6 -> m6_5  [key=0, style=solid];
m6_6 -> m6_9  [color=red, key=1, label=tickType, style=dashed];
m6_6 -> m6_12  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_4  [key=0, style=solid];
m6_5 -> m6_7  [color=red, key=1, label=res, style=dashed];
m6_5 -> m6_12  [color=darkseagreen4, key=1, label=res, style=dashed];
m6_7 -> m6_8  [color=red, key=0, style=solid];
m6_7 -> m6_17  [color=red, key=2, style=dotted];
m6_7 -> m6_7  [color=red, key=1, label=canonical, style=dashed];
m6_7 -> m6_10  [color=red, key=1, label=canonical, style=dashed];
m6_7 -> m6_11  [color=red, key=1, label=futures, style=dashed];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_21  [key=2, style=dotted];
m6_9 -> m6_10  [color=red, key=0, style=solid];
m6_9 -> m6_11  [color=red, key=0, style=solid];
m6_8 -> m6_9  [color=red, key=0, style=solid];
m6_8 -> m6_18  [key=2, style=dotted];
m6_8 -> m6_19  [key=2, style=dotted];
m6_8 -> m6_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_8 -> m6_10  [color=darkseagreen4, key=1, label=chain, style=dashed];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_20  [key=2, style=dotted];
m6_10 -> m6_10  [color=darkseagreen4, key=1, label=canonical, style=dashed];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_6  [key=0, style=solid];
m6_13 -> m6_11  [key=0, style=solid];
m6_13 -> m6_22  [key=2, style=dotted];
m6_13 -> m6_23  [key=2, style=dotted];
m6_14 -> m6_0  [color=blue, key=0, style=bold];
m6_30 -> m6_31  [color=red, key=0, style=solid];
m6_30 -> m6_35  [color=red, key=2, style=dotted];
m6_30 -> m6_36  [color=red, key=2, style=dotted];
m6_30 -> m6_18  [color=red, key=2, style=dotted];
m6_30 -> n28  [color=red, key=2, style=dotted];
m6_30 -> m6_38  [color=red, key=1, label="lambda expression", style=dashed];
m6_17 -> m6_27  [key=0, style=solid];
m6_17 -> m6_28  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
m6_17 -> m6_29  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_17 -> m6_80  [color=darkorchid, key=3, label="Parameter variable System.DateTime date", style=bold];
m6_17 -> m6_6  [color=darkorchid, key=3, label="Parameter variable QuantConnect.TickType tickType", style=bold];
m6_17 -> m6_72  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol baseFuture", style=bold];
m6_17 -> m6_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution res", style=bold];
m6_27 -> m6_28  [color=red, key=0, style=solid];
m6_27 -> m6_32  [key=2, style=dotted];
m6_27 -> m6_30  [color=red, key=1, label=filePath, style=dashed];
m6_28 -> m6_29  [color=red, key=0, style=solid];
m6_28 -> m6_33  [color=red, key=2, style=dotted];
m6_29 -> m6_30  [color=red, key=0, style=solid];
m6_29 -> m6_34  [key=2, style=dotted];
m6_31 -> m6_17  [color=blue, key=0, style=bold];
m6_63 -> m6_64  [color=red, key=0, style=solid];
m6_64 -> m6_65  [color=red, key=0, style=solid];
m6_64 -> m6_69  [color=red, key=1, label=tickTypes, style=dashed];
m6_65 -> m6_66  [color=red, key=0, style=solid];
m6_65 -> m6_16  [color=red, key=2, style=dotted];
m6_65 -> m6_67  [color=red, key=1, label=futures, style=dashed];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_68  [key=0, style=solid];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_68  [color=darkseagreen4, key=1, label=resolutions, style=dashed];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_71  [key=0, style=solid];
m6_67 -> m6_70  [color=darkseagreen4, key=1, label=future, style=dashed];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_67  [key=0, style=solid];
m6_68 -> m6_70  [color=darkseagreen4, key=1, label=res, style=dashed];
m6_70 -> m6_69  [key=0, style=solid];
m6_70 -> m6_72  [key=2, style=dotted];
m6_71 -> m6_63  [color=blue, key=0, style=bold];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_119  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_74  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_72 -> m6_82  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m6_72 -> m6_86  [color=red, key=1, label="QuantConnect.TickType", style=dashed];
m6_72 -> m6_88  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m6_72 -> m6_91  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_72 -> m6_133  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_72 -> m6_92  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_72 -> m6_100  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m6_72 -> m6_106  [color=darkseagreen4, key=1, label="QuantConnect.TickType", style=dashed];
m6_72 -> m6_67  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol canonical", style=bold];
m6_72 -> m6_69  [color=darkorchid, key=3, label="Parameter variable QuantConnect.TickType tickType", style=bold];
m6_72 -> m6_68  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution outputResolution", style=bold];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_15  [key=2, style=dotted];
m6_73 -> m6_110  [key=2, style=dotted];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_121  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m6_74 -> m6_125  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m6_74 -> m6_129  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_17  [key=2, style=dotted];
m6_86 -> m6_87  [color=red, key=0, style=solid];
m6_86 -> m6_33  [color=red, key=2, style=dotted];
m6_86 -> m6_54  [color=red, key=2, style=dotted];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_112  [key=2, style=dotted];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_133  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_56  [key=2, style=dotted];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_115  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_15  [key=2, style=dotted];
m6_75 -> m6_88  [color=darkseagreen4, key=1, label=tickTypeConsolidatorMap, style=dashed];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_15  [key=2, style=dotted];
m6_76 -> m6_88  [color=darkseagreen4, key=1, label=consolidators, style=dashed];
m6_76 -> m6_91  [color=darkseagreen4, key=1, label=consolidators, style=dashed];
m6_76 -> m6_94  [color=darkseagreen4, key=1, label=consolidators, style=dashed];
m6_76 -> m6_98  [color=darkseagreen4, key=1, label=consolidators, style=dashed];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_15  [key=2, style=dotted];
m6_77 -> m6_87  [color=darkseagreen4, key=1, label=configs, style=dashed];
m6_77 -> m6_92  [color=darkseagreen4, key=1, label=configs, style=dashed];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_96  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_100  [key=0, style=solid];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_15  [key=2, style=dotted];
m6_78 -> m6_90  [color=darkseagreen4, key=1, label=outputFiles, style=dashed];
m6_78 -> m6_107  [color=darkseagreen4, key=1, label=outputFiles, style=dashed];
m6_87 -> m6_88  [key=0, style=solid];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_15  [key=2, style=dotted];
m6_79 -> m6_84  [color=darkseagreen4, key=1, label=futures, style=dashed];
m6_79 -> m6_85  [color=darkseagreen4, key=1, label=futures, style=dashed];
m6_79 -> m6_105  [color=darkseagreen4, key=1, label=futures, style=dashed];
m6_90 -> m6_91  [key=0, style=solid];
m6_107 -> m6_108  [key=0, style=solid];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_82  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_80 -> m6_92  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_80 -> m6_97  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_80 -> m6_99  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_92  [key=0, style=solid];
m6_84 -> m6_111  [key=2, style=dotted];
m6_85 -> m6_86  [color=red, key=0, style=solid];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_109  [key=0, style=solid];
m6_105 -> m6_107  [color=darkseagreen4, key=1, label=future, style=dashed];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_98  [key=0, style=solid];
m6_97 -> m6_81  [key=0, style=solid];
m6_97 -> m6_61  [key=2, style=dotted];
m6_97 -> m6_97  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_97 -> m6_99  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_99 -> m6_98  [key=0, style=solid];
m6_99 -> m6_114  [key=2, style=dotted];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_97  [key=0, style=solid];
m6_83 -> m6_85  [color=darkseagreen4, key=1, label=future, style=dashed];
m6_83 -> m6_86  [color=red, key=1, label=future, style=dashed];
m6_83 -> m6_87  [color=darkseagreen4, key=1, label=future, style=dashed];
m6_83 -> m6_88  [color=darkseagreen4, key=1, label=future, style=dashed];
m6_83 -> m6_90  [color=darkseagreen4, key=1, label=future, style=dashed];
m6_83 -> m6_91  [color=darkseagreen4, key=1, label=future, style=dashed];
m6_83 -> m6_92  [color=darkseagreen4, key=1, label=future, style=dashed];
m6_83 -> m6_94  [color=darkseagreen4, key=1, label=future, style=dashed];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_55  [key=2, style=dotted];
m6_89 -> m6_91  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_89 -> m6_133  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_57  [key=2, style=dotted];
m6_93 -> m6_58  [key=2, style=dotted];
m6_93 -> m6_95  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_83  [key=0, style=solid];
m6_96 -> m6_95  [key=0, style=solid];
m6_96 -> m6_113  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_116  [key=2, style=dotted];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_117  [key=2, style=dotted];
m6_102 -> m6_104  [color=darkseagreen4, key=1, label=fi, style=dashed];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_105  [key=0, style=solid];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_118  [key=2, style=dotted];
m6_108 -> m6_105  [key=0, style=solid];
m6_108 -> m6_23  [key=2, style=dotted];
m6_109 -> m6_72  [color=blue, key=0, style=bold];
m6_136 -> m6_7  [color=red, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_12  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_27  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_43  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_46  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_70  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_80  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_81  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_82  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_92  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_100  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_101  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_136 -> m6_106  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataReaderTests", style=dashed];
m6_137 -> m6_121  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m6_137 -> m6_125  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m6_137 -> m6_129  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m6_138 -> m6_133  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_139 -> m6_133  [color=darkseagreen4, key=1, label=sb, style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m8_185 -> m8_186  [key=0, style=solid];
m8_185 -> m8_189  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_185 -> m8_190  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_185 -> m8_192  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_185 -> m8_236  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_185 -> m8_207  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_185 -> m8_225  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_186 -> m8_187  [key=0, style=solid];
m8_186 -> m8_11  [key=2, style=dotted];
m8_186 -> m8_193  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_186 -> m8_211  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_189 -> m8_190  [key=0, style=solid];
m8_189 -> m8_230  [key=2, style=dotted];
m8_189 -> m8_191  [color=darkseagreen4, key=1, label=custom, style=dashed];
m8_189 -> m8_192  [color=darkseagreen4, key=1, label=custom, style=dashed];
m8_189 -> m8_237  [color=darkseagreen4, key=1, label=custom, style=dashed];
m8_190 -> m8_191  [key=0, style=solid];
m8_190 -> m8_192  [key=0, style=solid];
m8_192 -> m8_193  [key=0, style=solid];
m8_192 -> m8_52  [key=2, style=dotted];
m8_192 -> m8_53  [key=2, style=dotted];
m8_192 -> m8_54  [key=2, style=dotted];
m8_192 -> m8_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_192 -> m8_204  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_192 -> m8_206  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_192 -> m8_207  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_192 -> m8_210  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_192 -> m8_222  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_192 -> m8_224  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_192 -> m8_225  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_207 -> m8_208  [key=0, style=solid];
m8_207 -> m8_233  [key=2, style=dotted];
m8_207 -> m8_234  [key=2, style=dotted];
m8_207 -> m8_207  [color=darkseagreen4, key=1, label=expected, style=dashed];
m8_225 -> m8_226  [key=0, style=solid];
m8_225 -> m8_233  [key=2, style=dotted];
m8_225 -> m8_234  [key=2, style=dotted];
m8_225 -> m8_225  [color=darkseagreen4, key=1, label=expected, style=dashed];
m8_187 -> m8_188  [key=0, style=solid];
m8_187 -> m8_196  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_187 -> m8_210  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_187 -> m8_214  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_55  [key=2, style=dotted];
m8_193 -> m8_195  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_193 -> m8_196  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_211 -> m8_212  [key=0, style=solid];
m8_211 -> m8_19  [key=2, style=dotted];
m8_211 -> m8_213  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_211 -> m8_214  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_188 -> m8_189  [key=0, style=solid];
m8_188 -> m8_229  [key=2, style=dotted];
m8_188 -> m8_191  [color=darkseagreen4, key=1, label=config, style=dashed];
m8_188 -> m8_192  [color=darkseagreen4, key=1, label=config, style=dashed];
m8_188 -> m8_237  [color=darkseagreen4, key=1, label=config, style=dashed];
m8_196 -> m8_197  [key=0, style=solid];
m8_196 -> m8_198  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_196 -> m8_202  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_196 -> m8_203  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_196 -> m8_205  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_210 -> m8_211  [key=0, style=solid];
m8_210 -> m8_59  [key=2, style=dotted];
m8_214 -> m8_215  [key=0, style=solid];
m8_214 -> m8_216  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_214 -> m8_220  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_214 -> m8_221  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_214 -> m8_223  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_191 -> m8_192  [key=0, style=solid];
m8_191 -> m8_231  [key=2, style=dotted];
m8_204 -> m8_205  [key=0, style=solid];
m8_204 -> m8_58  [key=2, style=dotted];
m8_206 -> m8_207  [key=0, style=solid];
m8_206 -> m8_232  [key=2, style=dotted];
m8_222 -> m8_223  [key=0, style=solid];
m8_222 -> m8_58  [key=2, style=dotted];
m8_224 -> m8_225  [key=0, style=solid];
m8_224 -> m8_232  [key=2, style=dotted];
m8_194 -> m8_195  [key=0, style=solid];
m8_194 -> m8_15  [key=2, style=dotted];
m8_195 -> m8_196  [key=0, style=solid];
m8_195 -> m8_16  [key=2, style=dotted];
m8_195 -> m8_56  [key=2, style=dotted];
m8_197 -> m8_198  [key=0, style=solid];
m8_197 -> m8_16  [key=2, style=dotted];
m8_197 -> m8_56  [key=2, style=dotted];
m8_198 -> m8_199  [key=0, style=solid];
m8_198 -> m8_57  [key=2, style=dotted];
m8_198 -> m8_16  [key=2, style=dotted];
m8_198 -> m8_201  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_202 -> m8_203  [key=0, style=solid];
m8_202 -> m8_205  [color=darkseagreen4, key=1, label=index, style=dashed];
m8_203 -> m8_204  [key=0, style=solid];
m8_203 -> m8_16  [key=2, style=dotted];
m8_205 -> m8_206  [key=0, style=solid];
m8_205 -> m8_16  [key=2, style=dotted];
m8_205 -> m8_208  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_199 -> m8_200  [key=0, style=solid];
m8_199 -> m8_58  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_210  [key=0, style=solid];
m8_201 -> m8_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_200 -> m8_201  [key=0, style=solid];
m8_200 -> m8_202  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_200 -> m8_204  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_200 -> m8_206  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_200 -> m8_207  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_200 -> m8_209  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_209 -> m8_201  [key=0, style=solid];
m8_209 -> m8_209  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_208 -> m8_209  [key=0, style=solid];
m8_208 -> m8_58  [key=2, style=dotted];
m8_212 -> m8_213  [key=0, style=solid];
m8_212 -> m8_15  [key=2, style=dotted];
m8_213 -> m8_214  [key=0, style=solid];
m8_213 -> m8_16  [key=2, style=dotted];
m8_213 -> m8_56  [key=2, style=dotted];
m8_215 -> m8_216  [key=0, style=solid];
m8_215 -> m8_16  [key=2, style=dotted];
m8_215 -> m8_56  [key=2, style=dotted];
m8_216 -> m8_217  [key=0, style=solid];
m8_216 -> m8_57  [key=2, style=dotted];
m8_216 -> m8_16  [key=2, style=dotted];
m8_216 -> m8_219  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_220 -> m8_221  [key=0, style=solid];
m8_220 -> m8_223  [color=darkseagreen4, key=1, label=index, style=dashed];
m8_221 -> m8_222  [key=0, style=solid];
m8_221 -> m8_16  [key=2, style=dotted];
m8_223 -> m8_224  [key=0, style=solid];
m8_223 -> m8_16  [key=2, style=dotted];
m8_223 -> m8_226  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m8_217 -> m8_218  [key=0, style=solid];
m8_217 -> m8_58  [key=2, style=dotted];
m8_219 -> m8_220  [key=0, style=solid];
m8_219 -> m8_228  [key=0, style=solid];
m8_219 -> m8_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_218 -> m8_219  [key=0, style=solid];
m8_218 -> m8_220  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_218 -> m8_222  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_218 -> m8_224  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_218 -> m8_225  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_218 -> m8_227  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_227 -> m8_219  [key=0, style=solid];
m8_227 -> m8_227  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_226 -> m8_227  [key=0, style=solid];
m8_226 -> m8_58  [key=2, style=dotted];
m8_228 -> m8_185  [color=blue, key=0, style=bold];
m8_18 -> m8_241  [key=0, style=solid];
m8_18 -> m8_243  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m8_18 -> m8_6  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m8_18 -> m8_2  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<T> data", style=bold];
m8_241 -> m8_242  [key=0, style=solid];
m8_241 -> m8_229  [key=2, style=dotted];
m8_241 -> m8_243  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m8_241 -> m8_247  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m8_243 -> m8_244  [key=0, style=solid];
m8_243 -> m8_53  [key=2, style=dotted];
m8_243 -> m8_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_242 -> m8_243  [key=0, style=solid];
m8_242 -> m8_245  [key=2, style=dotted];
m8_242 -> m8_247  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_244 -> m8_18  [color=blue, key=0, style=bold];
m8_246 -> m8_247  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_63  [key=2, style=dotted];
m8_61 -> m8_64  [key=2, style=dotted];
m8_60 -> m8_61  [key=0, style=solid];
m8_62 -> m8_60  [color=blue, key=0, style=bold];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_100  [key=2, style=dotted];
m8_98 -> m8_64  [key=2, style=dotted];
m8_98 -> m8_101  [key=2, style=dotted];
m8_97 -> m8_98  [key=0, style=solid];
m8_99 -> m8_97  [color=blue, key=0, style=bold];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_142  [key=2, style=dotted];
m8_140 -> m8_143  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_141 -> m8_139  [color=blue, key=0, style=bold];
m8_181 -> m8_182  [key=0, style=solid];
m8_181 -> m8_183  [key=2, style=dotted];
m8_181 -> m8_184  [key=2, style=dotted];
m8_180 -> m8_181  [key=0, style=solid];
m8_182 -> m8_180  [color=blue, key=0, style=bold];
m8_236 -> m8_237  [key=0, style=solid];
m8_236 -> m8_239  [key=2, style=dotted];
m8_236 -> m8_240  [key=2, style=dotted];
m8_237 -> m8_238  [key=0, style=solid];
m8_237 -> m8_239  [key=2, style=dotted];
m8_237 -> m8_231  [key=2, style=dotted];
m8_235 -> m8_236  [key=0, style=solid];
m8_235 -> m8_237  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_238 -> m8_235  [color=blue, key=0, style=bold];
m8_247 -> m8_248  [key=0, style=solid];
m8_247 -> m8_249  [key=2, style=dotted];
m8_247 -> n66  [key=2, style=dotted];
m8_247 -> m8_251  [key=2, style=dotted];
m8_247 -> m8_252  [key=2, style=dotted];
m8_247 -> m8_12  [key=2, style=dotted];
m8_247 -> m8_253  [key=2, style=dotted];
m8_247 -> m8_254  [key=2, style=dotted];
m8_248 -> m8_246  [color=blue, key=0, style=bold];
m8_65 -> m8_66  [key=0, style=solid];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_11  [key=2, style=dotted];
m8_66 -> m8_69  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_66 -> m8_83  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_98  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_67 -> m8_72  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_67 -> m8_82  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_67 -> m8_86  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_55  [key=2, style=dotted];
m8_69 -> m8_71  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_69 -> m8_72  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_19  [key=2, style=dotted];
m8_83 -> m8_85  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_83 -> m8_86  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_52  [key=2, style=dotted];
m8_68 -> m8_53  [key=2, style=dotted];
m8_68 -> m8_54  [key=2, style=dotted];
m8_68 -> m8_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_68 -> m8_80  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_68 -> m8_82  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_68 -> m8_94  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_74  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_72 -> m8_78  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_72 -> m8_79  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_59  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_88  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_86 -> m8_92  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_86 -> m8_93  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_58  [key=2, style=dotted];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_58  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_15  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_16  [key=2, style=dotted];
m8_71 -> m8_56  [key=2, style=dotted];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_16  [key=2, style=dotted];
m8_73 -> m8_56  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_57  [key=2, style=dotted];
m8_74 -> m8_16  [key=2, style=dotted];
m8_74 -> m8_77  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_78 -> m8_79  [key=0, style=solid];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_16  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_58  [key=2, style=dotted];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_82  [key=0, style=solid];
m8_77 -> m8_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_78  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_76 -> m8_80  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_76 -> m8_81  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_81 -> m8_77  [key=0, style=solid];
m8_81 -> m8_81  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_15  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_16  [key=2, style=dotted];
m8_85 -> m8_56  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_16  [key=2, style=dotted];
m8_87 -> m8_56  [key=2, style=dotted];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_57  [key=2, style=dotted];
m8_88 -> m8_16  [key=2, style=dotted];
m8_88 -> m8_91  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_92 -> m8_93  [key=0, style=solid];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_16  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_58  [key=2, style=dotted];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_96  [key=0, style=solid];
m8_91 -> m8_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_90 -> m8_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_90 -> m8_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_95 -> m8_91  [key=0, style=solid];
m8_95 -> m8_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_96 -> m8_65  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_11  [key=2, style=dotted];
m8_1 -> m8_3  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_1 -> m8_7  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_12  [key=2, style=dotted];
m8_2 -> m8_13  [key=2, style=dotted];
m8_2 -> m8_6  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_14  [key=2, style=dotted];
m8_3 -> m8_5  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_19  [key=2, style=dotted];
m8_7 -> m8_9  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_18  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_15  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_16  [key=2, style=dotted];
m8_5 -> m8_17  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_15  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_16  [key=2, style=dotted];
m8_9 -> m8_17  [key=2, style=dotted];
m8_10 -> m8_0  [color=blue, key=0, style=bold];
m8_144 -> m8_145  [key=0, style=solid];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_11  [key=2, style=dotted];
m8_145 -> m8_148  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_145 -> m8_164  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_181  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_146 -> m8_151  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_146 -> m8_163  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_146 -> m8_167  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_55  [key=2, style=dotted];
m8_148 -> m8_150  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_148 -> m8_151  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_164 -> m8_165  [key=0, style=solid];
m8_164 -> m8_19  [key=2, style=dotted];
m8_164 -> m8_166  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_164 -> m8_167  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_147 -> m8_148  [key=0, style=solid];
m8_147 -> m8_52  [key=2, style=dotted];
m8_147 -> m8_53  [key=2, style=dotted];
m8_147 -> m8_54  [key=2, style=dotted];
m8_147 -> m8_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_147 -> m8_161  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_147 -> m8_163  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_147 -> m8_177  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_151 -> m8_152  [key=0, style=solid];
m8_151 -> m8_153  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_151 -> m8_154  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_151 -> m8_155  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_151 -> m8_159  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_151 -> m8_160  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_163 -> m8_164  [key=0, style=solid];
m8_163 -> m8_59  [key=2, style=dotted];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_169  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_167 -> m8_170  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_167 -> m8_171  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_167 -> m8_175  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_167 -> m8_176  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_161 -> m8_162  [key=0, style=solid];
m8_161 -> m8_58  [key=2, style=dotted];
m8_177 -> m8_178  [key=0, style=solid];
m8_177 -> m8_58  [key=2, style=dotted];
m8_149 -> m8_150  [key=0, style=solid];
m8_149 -> m8_15  [key=2, style=dotted];
m8_150 -> m8_151  [key=0, style=solid];
m8_150 -> m8_16  [key=2, style=dotted];
m8_150 -> m8_56  [key=2, style=dotted];
m8_152 -> m8_153  [key=0, style=solid];
m8_152 -> m8_16  [key=2, style=dotted];
m8_152 -> m8_56  [key=2, style=dotted];
m8_153 -> m8_154  [key=0, style=solid];
m8_153 -> m8_138  [key=2, style=dotted];
m8_153 -> m8_17  [key=2, style=dotted];
m8_154 -> m8_155  [key=0, style=solid];
m8_154 -> m8_138  [key=2, style=dotted];
m8_154 -> m8_17  [key=2, style=dotted];
m8_155 -> m8_156  [key=0, style=solid];
m8_155 -> m8_57  [key=2, style=dotted];
m8_155 -> m8_16  [key=2, style=dotted];
m8_155 -> m8_158  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_159 -> m8_160  [key=0, style=solid];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_16  [key=2, style=dotted];
m8_156 -> m8_157  [key=0, style=solid];
m8_156 -> m8_58  [key=2, style=dotted];
m8_158 -> m8_159  [key=0, style=solid];
m8_158 -> m8_163  [key=0, style=solid];
m8_158 -> m8_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_157 -> m8_158  [key=0, style=solid];
m8_157 -> m8_159  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_157 -> m8_161  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_157 -> m8_162  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_162 -> m8_158  [key=0, style=solid];
m8_162 -> m8_162  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_165 -> m8_166  [key=0, style=solid];
m8_165 -> m8_15  [key=2, style=dotted];
m8_166 -> m8_167  [key=0, style=solid];
m8_166 -> m8_16  [key=2, style=dotted];
m8_166 -> m8_56  [key=2, style=dotted];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_16  [key=2, style=dotted];
m8_168 -> m8_56  [key=2, style=dotted];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_138  [key=2, style=dotted];
m8_169 -> m8_17  [key=2, style=dotted];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_138  [key=2, style=dotted];
m8_170 -> m8_17  [key=2, style=dotted];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_57  [key=2, style=dotted];
m8_171 -> m8_16  [key=2, style=dotted];
m8_171 -> m8_174  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_175 -> m8_176  [key=0, style=solid];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_16  [key=2, style=dotted];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_58  [key=2, style=dotted];
m8_174 -> m8_175  [key=0, style=solid];
m8_174 -> m8_179  [key=0, style=solid];
m8_174 -> m8_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_173 -> m8_174  [key=0, style=solid];
m8_173 -> m8_175  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_173 -> m8_177  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_173 -> m8_178  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_178 -> m8_174  [key=0, style=solid];
m8_178 -> m8_178  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_179 -> m8_144  [color=blue, key=0, style=bold];
m8_245 -> m8_258  [key=0, style=solid];
m8_245 -> m8_241  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscriptionDataConfig", style=bold];
m8_258 -> m8_259  [key=0, style=solid];
m8_258 -> m8_260  [key=2, style=dotted];
m8_258 -> m8_261  [key=2, style=dotted];
m8_258 -> m8_262  [key=2, style=dotted];
m8_258 -> m8_263  [key=2, style=dotted];
m8_259 -> m8_245  [color=blue, key=0, style=bold];
m8_229 -> m8_255  [key=0, style=solid];
m8_229 -> m8_187  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m8_229 -> m8_18  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m8_229 -> m8_188  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m8_255 -> m8_256  [key=0, style=solid];
m8_255 -> m8_257  [key=2, style=dotted];
m8_256 -> m8_229  [color=blue, key=0, style=bold];
m8_102 -> m8_103  [key=0, style=solid];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_11  [key=2, style=dotted];
m8_103 -> m8_106  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_103 -> m8_122  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_140  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_104 -> m8_109  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_104 -> m8_121  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_104 -> m8_125  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_55  [key=2, style=dotted];
m8_106 -> m8_108  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_106 -> m8_109  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_19  [key=2, style=dotted];
m8_122 -> m8_124  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_122 -> m8_125  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_52  [key=2, style=dotted];
m8_105 -> m8_53  [key=2, style=dotted];
m8_105 -> m8_54  [key=2, style=dotted];
m8_105 -> m8_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_105 -> m8_119  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_105 -> m8_121  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_105 -> m8_135  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_111  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_109 -> m8_112  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_109 -> m8_113  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_109 -> m8_117  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_109 -> m8_118  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_121 -> m8_122  [key=0, style=solid];
m8_121 -> m8_59  [key=2, style=dotted];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_127  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_125 -> m8_128  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_125 -> m8_129  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_125 -> m8_133  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_125 -> m8_134  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_58  [key=2, style=dotted];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_58  [key=2, style=dotted];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_15  [key=2, style=dotted];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_16  [key=2, style=dotted];
m8_108 -> m8_56  [key=2, style=dotted];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_16  [key=2, style=dotted];
m8_110 -> m8_56  [key=2, style=dotted];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_138  [key=2, style=dotted];
m8_111 -> m8_17  [key=2, style=dotted];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_138  [key=2, style=dotted];
m8_112 -> m8_17  [key=2, style=dotted];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_57  [key=2, style=dotted];
m8_113 -> m8_16  [key=2, style=dotted];
m8_113 -> m8_116  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_117 -> m8_118  [key=0, style=solid];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_16  [key=2, style=dotted];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_58  [key=2, style=dotted];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_121  [key=0, style=solid];
m8_116 -> m8_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_117  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_115 -> m8_119  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_115 -> m8_120  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_120 -> m8_116  [key=0, style=solid];
m8_120 -> m8_120  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_15  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_16  [key=2, style=dotted];
m8_124 -> m8_56  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_16  [key=2, style=dotted];
m8_126 -> m8_56  [key=2, style=dotted];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_138  [key=2, style=dotted];
m8_127 -> m8_17  [key=2, style=dotted];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_138  [key=2, style=dotted];
m8_128 -> m8_17  [key=2, style=dotted];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_57  [key=2, style=dotted];
m8_129 -> m8_16  [key=2, style=dotted];
m8_129 -> m8_132  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_133 -> m8_134  [key=0, style=solid];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_16  [key=2, style=dotted];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_58  [key=2, style=dotted];
m8_132 -> m8_133  [key=0, style=solid];
m8_132 -> m8_137  [key=0, style=solid];
m8_132 -> m8_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_133  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_131 -> m8_135  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_131 -> m8_136  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_136 -> m8_132  [key=0, style=solid];
m8_136 -> m8_136  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_137 -> m8_102  [color=blue, key=0, style=bold];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_11  [key=2, style=dotted];
m8_21 -> m8_24  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_21 -> m8_38  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_61  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_22 -> m8_27  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_22 -> m8_37  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_22 -> m8_41  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_55  [key=2, style=dotted];
m8_24 -> m8_26  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_24 -> m8_27  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_19  [key=2, style=dotted];
m8_38 -> m8_40  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_38 -> m8_41  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_52  [key=2, style=dotted];
m8_23 -> m8_53  [key=2, style=dotted];
m8_23 -> m8_54  [key=2, style=dotted];
m8_23 -> m8_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_23 -> m8_35  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_23 -> m8_37  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_23 -> m8_49  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_27 -> m8_33  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_27 -> m8_34  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_59  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_43  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_41 -> m8_47  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_41 -> m8_48  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_58  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_58  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_15  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_16  [key=2, style=dotted];
m8_26 -> m8_56  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_16  [key=2, style=dotted];
m8_28 -> m8_56  [key=2, style=dotted];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_57  [key=2, style=dotted];
m8_29 -> m8_16  [key=2, style=dotted];
m8_29 -> m8_32  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_16  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_58  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_37  [key=0, style=solid];
m8_32 -> m8_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_33  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_31 -> m8_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_31 -> m8_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_36 -> m8_32  [key=0, style=solid];
m8_36 -> m8_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_15  [key=2, style=dotted];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_16  [key=2, style=dotted];
m8_40 -> m8_56  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_16  [key=2, style=dotted];
m8_42 -> m8_56  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_57  [key=2, style=dotted];
m8_43 -> m8_16  [key=2, style=dotted];
m8_43 -> m8_46  [color=darkseagreen4, key=1, label=count, style=dashed];
m8_47 -> m8_48  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_16  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_58  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_51  [key=0, style=solid];
m8_46 -> m8_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_47  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_45 -> m8_49  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_45 -> m8_50  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_50 -> m8_46  [key=0, style=solid];
m8_50 -> m8_50  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_51 -> m8_20  [color=blue, key=0, style=bold];
m8_264 -> m8_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m8_264 -> m8_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m8_264 -> m8_82  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m8_264 -> m8_121  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m8_264 -> m8_163  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m8_264 -> m8_188  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m8_264 -> m8_210  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m8_264 -> m8_241  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m8_264 -> m8_242  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m8_265 -> m8_61  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_266 -> m8_98  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_267 -> m8_140  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_268 -> m8_181  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_269 -> m8_236  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_270 -> m8_237  [color=darkseagreen4, key=1, label=config, style=dashed];
m8_271 -> m8_237  [color=darkseagreen4, key=1, label=custom, style=dashed];
m8_272 -> m8_247  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m8_273 -> m8_247  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_35 -> m10_36  [key=0, style=solid];
m10_36 -> m10_37  [key=0, style=solid];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_25  [key=2, style=dotted];
m10_37 -> m10_42  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_37 -> m10_46  [color=red, key=1, label=consolidator, style=dashed];
m10_37 -> m10_50  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_37 -> m10_54  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_66  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_64  [key=2, style=dotted];
m10_46 -> m10_47  [color=red, key=0, style=solid];
m10_46 -> m10_64  [color=red, key=2, style=dotted];
m10_50 -> m10_51  [color=red, key=0, style=solid];
m10_50 -> m10_64  [key=2, style=dotted];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_64  [key=2, style=dotted];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_44  [color=red, key=1, label=reference, style=dashed];
m10_39 -> m10_48  [color=red, key=1, label=reference, style=dashed];
m10_39 -> m10_52  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_26  [key=2, style=dotted];
m10_40 -> m10_42  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_40 -> m10_57  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_40 -> m10_58  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_40 -> m10_62  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_44 -> m10_45  [color=red, key=0, style=solid];
m10_44 -> m10_26  [color=red, key=2, style=dotted];
m10_44 -> m10_29  [color=red, key=2, style=dotted];
m10_44 -> m10_46  [color=red, key=1, label=bar2, style=dashed];
m10_44 -> m10_59  [color=red, key=1, label=bar2, style=dashed];
m10_44 -> m10_62  [color=red, key=1, label=bar2, style=dashed];
m10_48 -> m10_49  [color=red, key=0, style=solid];
m10_48 -> m10_26  [color=red, key=2, style=dotted];
m10_48 -> m10_29  [color=red, key=2, style=dotted];
m10_48 -> m10_50  [color=red, key=1, label=bar3, style=dashed];
m10_48 -> m10_60  [color=red, key=1, label=bar3, style=dashed];
m10_48 -> m10_62  [color=red, key=1, label=bar3, style=dashed];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_26  [key=2, style=dotted];
m10_52 -> m10_29  [key=2, style=dotted];
m10_52 -> m10_54  [color=darkseagreen4, key=1, label=bar4, style=dashed];
m10_52 -> m10_61  [color=darkseagreen4, key=1, label=bar4, style=dashed];
m10_52 -> m10_62  [color=darkseagreen4, key=1, label=bar4, style=dashed];
m10_41 -> m10_42  [key=0, style=solid];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_31  [key=2, style=dotted];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_31  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_31  [key=2, style=dotted];
m10_43 -> m10_44  [color=red, key=0, style=solid];
m10_43 -> m10_28  [key=2, style=dotted];
m10_45 -> m10_46  [color=red, key=0, style=solid];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_31  [key=2, style=dotted];
m10_47 -> m10_48  [color=red, key=0, style=solid];
m10_47 -> m10_28  [color=red, key=2, style=dotted];
m10_49 -> m10_50  [color=red, key=0, style=solid];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_31  [key=2, style=dotted];
m10_51 -> m10_52  [color=red, key=0, style=solid];
m10_51 -> m10_28  [color=red, key=2, style=dotted];
m10_53 -> m10_54  [key=0, style=solid];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_31  [key=2, style=dotted];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_30  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_31  [key=2, style=dotted];
m10_63 -> m10_35  [color=blue, key=0, style=bold];
m10_157 -> m10_158  [key=0, style=solid];
m10_158 -> m10_159  [key=0, style=solid];
m10_158 -> m10_25  [key=2, style=dotted];
m10_158 -> m10_160  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_159 -> m10_160  [key=0, style=solid];
m10_159 -> m10_26  [key=2, style=dotted];
m10_160 -> m10_161  [key=0, style=solid];
m10_160 -> m10_27  [key=2, style=dotted];
m10_161 -> m10_157  [color=blue, key=0, style=bold];
m10_115 -> m10_116  [key=0, style=solid];
m10_116 -> m10_117  [key=0, style=solid];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_25  [key=2, style=dotted];
m10_117 -> m10_141  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_117 -> m10_143  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_117 -> m10_145  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_118 -> m10_119  [key=0, style=solid];
m10_118 -> m10_155  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_64  [key=2, style=dotted];
m10_143 -> m10_144  [key=0, style=solid];
m10_143 -> m10_64  [key=2, style=dotted];
m10_145 -> m10_146  [key=0, style=solid];
m10_145 -> m10_64  [key=2, style=dotted];
m10_119 -> m10_120  [key=0, style=solid];
m10_119 -> m10_122  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_119 -> m10_129  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_119 -> m10_136  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_26  [key=2, style=dotted];
m10_120 -> m10_122  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_120 -> m10_123  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_120 -> m10_124  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_120 -> m10_125  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_120 -> m10_126  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_120 -> m10_141  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_120 -> m10_148  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_120 -> m10_149  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_120 -> m10_150  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_122 -> m10_123  [key=0, style=solid];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_29  [key=2, style=dotted];
m10_136 -> m10_137  [key=0, style=solid];
m10_136 -> m10_29  [key=2, style=dotted];
m10_121 -> m10_122  [key=0, style=solid];
m10_123 -> m10_124  [key=0, style=solid];
m10_124 -> m10_125  [key=0, style=solid];
m10_125 -> m10_126  [key=0, style=solid];
m10_126 -> m10_127  [key=0, style=solid];
m10_148 -> m10_149  [key=0, style=solid];
m10_148 -> m10_31  [key=2, style=dotted];
m10_149 -> m10_150  [key=0, style=solid];
m10_149 -> m10_110  [key=2, style=dotted];
m10_149 -> m10_31  [key=2, style=dotted];
m10_150 -> m10_151  [key=0, style=solid];
m10_150 -> m10_111  [key=2, style=dotted];
m10_150 -> m10_31  [key=2, style=dotted];
m10_127 -> m10_128  [key=0, style=solid];
m10_127 -> m10_26  [key=2, style=dotted];
m10_127 -> m10_129  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_127 -> m10_130  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_127 -> m10_131  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_127 -> m10_132  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_127 -> m10_133  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_127 -> m10_143  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_127 -> m10_149  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_127 -> m10_150  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_128 -> m10_129  [key=0, style=solid];
m10_130 -> m10_131  [key=0, style=solid];
m10_131 -> m10_132  [key=0, style=solid];
m10_132 -> m10_133  [key=0, style=solid];
m10_133 -> m10_134  [key=0, style=solid];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_26  [key=2, style=dotted];
m10_134 -> m10_136  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_134 -> m10_137  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_134 -> m10_138  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_134 -> m10_139  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_134 -> m10_140  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_134 -> m10_145  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_134 -> m10_149  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_134 -> m10_150  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_134 -> m10_151  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_135 -> m10_136  [key=0, style=solid];
m10_137 -> m10_138  [key=0, style=solid];
m10_138 -> m10_139  [key=0, style=solid];
m10_139 -> m10_140  [key=0, style=solid];
m10_140 -> m10_141  [key=0, style=solid];
m10_151 -> m10_152  [key=0, style=solid];
m10_151 -> m10_31  [key=2, style=dotted];
m10_142 -> m10_143  [key=0, style=solid];
m10_142 -> m10_28  [key=2, style=dotted];
m10_144 -> m10_145  [key=0, style=solid];
m10_144 -> m10_28  [key=2, style=dotted];
m10_146 -> m10_147  [key=0, style=solid];
m10_146 -> m10_30  [key=2, style=dotted];
m10_147 -> m10_148  [key=0, style=solid];
m10_147 -> m10_31  [key=2, style=dotted];
m10_152 -> m10_153  [key=0, style=solid];
m10_152 -> m10_31  [key=2, style=dotted];
m10_153 -> m10_115  [color=blue, key=0, style=bold];
m10_162 -> m10_163  [key=0, style=solid];
m10_163 -> m10_164  [key=0, style=solid];
m10_163 -> m10_165  [key=2, style=dotted];
m10_164 -> m10_162  [color=blue, key=0, style=bold];
m10_166 -> m10_167  [key=0, style=solid];
m10_167 -> m10_168  [key=0, style=solid];
m10_167 -> m10_165  [key=2, style=dotted];
m10_168 -> m10_166  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_25  [key=2, style=dotted];
m10_2 -> m10_6  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_2 -> m10_9  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_2 -> m10_12  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_2 -> m10_15  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_27  [key=2, style=dotted];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_27  [key=2, style=dotted];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_27  [key=2, style=dotted];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_27  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_8  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_4 -> m10_11  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_4 -> m10_14  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_26  [key=2, style=dotted];
m10_5 -> m10_18  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_5 -> m10_19  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_26  [key=2, style=dotted];
m10_8 -> m10_29  [key=2, style=dotted];
m10_8 -> m10_20  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_26  [key=2, style=dotted];
m10_11 -> m10_29  [key=2, style=dotted];
m10_11 -> m10_21  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_26  [key=2, style=dotted];
m10_14 -> m10_29  [key=2, style=dotted];
m10_14 -> m10_22  [color=darkseagreen4, key=1, label=bar4, style=dashed];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_31  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_31  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_28  [key=2, style=dotted];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_31  [key=2, style=dotted];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_28  [key=2, style=dotted];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_31  [key=2, style=dotted];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_28  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_31  [key=2, style=dotted];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_30  [key=2, style=dotted];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_31  [key=2, style=dotted];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_31  [key=2, style=dotted];
m10_24 -> m10_0  [color=blue, key=0, style=bold];
m10_68 -> m10_69  [key=0, style=solid];
m10_69 -> m10_70  [key=0, style=solid];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_25  [key=2, style=dotted];
m10_70 -> m10_97  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_70 -> m10_99  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_70 -> m10_101  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_113  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBar", style=dashed];
m10_97 -> m10_98  [key=0, style=solid];
m10_97 -> m10_64  [key=2, style=dotted];
m10_99 -> m10_100  [key=0, style=solid];
m10_99 -> m10_64  [key=2, style=dotted];
m10_101 -> m10_102  [key=0, style=solid];
m10_101 -> m10_64  [key=2, style=dotted];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_75  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_72 -> m10_83  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_72 -> m10_91  [color=darkseagreen4, key=1, label=reference, style=dashed];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_26  [key=2, style=dotted];
m10_73 -> m10_75  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_73 -> m10_76  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_73 -> m10_77  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_73 -> m10_78  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_73 -> m10_79  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_73 -> m10_80  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_73 -> m10_97  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_73 -> m10_104  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_73 -> m10_105  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_73 -> m10_106  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_73 -> m10_108  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m10_75 -> m10_76  [key=0, style=solid];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_29  [key=2, style=dotted];
m10_91 -> m10_92  [key=0, style=solid];
m10_91 -> m10_29  [key=2, style=dotted];
m10_74 -> m10_75  [key=0, style=solid];
m10_76 -> m10_77  [key=0, style=solid];
m10_77 -> m10_78  [key=0, style=solid];
m10_78 -> m10_79  [key=0, style=solid];
m10_79 -> m10_80  [key=0, style=solid];
m10_80 -> m10_81  [key=0, style=solid];
m10_104 -> m10_105  [key=0, style=solid];
m10_104 -> m10_31  [key=2, style=dotted];
m10_105 -> m10_106  [key=0, style=solid];
m10_105 -> m10_110  [key=2, style=dotted];
m10_105 -> m10_31  [key=2, style=dotted];
m10_106 -> m10_107  [key=0, style=solid];
m10_106 -> m10_111  [key=2, style=dotted];
m10_106 -> m10_31  [key=2, style=dotted];
m10_108 -> m10_109  [key=0, style=solid];
m10_108 -> m10_31  [key=2, style=dotted];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_26  [key=2, style=dotted];
m10_81 -> m10_83  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_81 -> m10_84  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_81 -> m10_85  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_81 -> m10_86  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_81 -> m10_87  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_81 -> m10_88  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_81 -> m10_99  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_81 -> m10_105  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_81 -> m10_106  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_81 -> m10_108  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m10_82 -> m10_83  [key=0, style=solid];
m10_84 -> m10_85  [key=0, style=solid];
m10_85 -> m10_86  [key=0, style=solid];
m10_86 -> m10_87  [key=0, style=solid];
m10_87 -> m10_88  [key=0, style=solid];
m10_88 -> m10_89  [key=0, style=solid];
m10_89 -> m10_90  [key=0, style=solid];
m10_89 -> m10_26  [key=2, style=dotted];
m10_89 -> m10_91  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_89 -> m10_92  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_89 -> m10_93  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_89 -> m10_94  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_89 -> m10_95  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_89 -> m10_96  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_89 -> m10_101  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_89 -> m10_105  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_89 -> m10_106  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_89 -> m10_107  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_89 -> m10_108  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m10_90 -> m10_91  [key=0, style=solid];
m10_92 -> m10_93  [key=0, style=solid];
m10_93 -> m10_94  [key=0, style=solid];
m10_94 -> m10_95  [key=0, style=solid];
m10_95 -> m10_96  [key=0, style=solid];
m10_96 -> m10_97  [key=0, style=solid];
m10_107 -> m10_108  [key=0, style=solid];
m10_107 -> m10_31  [key=2, style=dotted];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_28  [key=2, style=dotted];
m10_100 -> m10_101  [key=0, style=solid];
m10_100 -> m10_28  [key=2, style=dotted];
m10_102 -> m10_103  [key=0, style=solid];
m10_102 -> m10_30  [key=2, style=dotted];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_31  [key=2, style=dotted];
m10_109 -> m10_68  [color=blue, key=0, style=bold];
m10_154 -> m10_155  [key=0, style=solid];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_7  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_33 -> m10_10  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_33 -> m10_13  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_33 -> m10_16  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_33 -> m10_17  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_33 -> m10_18  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_33 -> m10_19  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_33 -> m10_20  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_33 -> m10_21  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_33 -> m10_22  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_33 -> m10_23  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_32 -> m10_33  [key=0, style=solid];
m10_34 -> m10_32  [color=blue, key=0, style=bold];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_43  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_66 -> m10_47  [color=red, key=1, label=newTradeBar, style=dashed];
m10_66 -> m10_51  [color=red, key=1, label=newTradeBar, style=dashed];
m10_66 -> m10_55  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_66 -> m10_56  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_66 -> m10_57  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_66 -> m10_58  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_66 -> m10_59  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_66 -> m10_60  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_66 -> m10_61  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_66 -> m10_62  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m10_65 -> m10_66  [key=0, style=solid];
m10_67 -> m10_65  [color=blue, key=0, style=bold];
m10_113 -> m10_114  [key=0, style=solid];
m10_113 -> m10_98  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_113 -> m10_100  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_113 -> m10_102  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_113 -> m10_103  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_113 -> m10_104  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_113 -> m10_105  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_113 -> m10_106  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_113 -> m10_107  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_113 -> m10_108  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_112 -> m10_113  [key=0, style=solid];
m10_114 -> m10_112  [color=blue, key=0, style=bold];
m10_155 -> m10_156  [key=0, style=solid];
m10_155 -> m10_142  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_155 -> m10_144  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_155 -> m10_146  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_155 -> m10_147  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_155 -> m10_148  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_155 -> m10_149  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_155 -> m10_150  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_155 -> m10_151  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_155 -> m10_152  [color=darkseagreen4, key=1, label=consolidated, style=dashed];
m10_156 -> m10_154  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_1 -> m12_4  [key=2, style=dotted];
m12_1 -> m12_5  [color=darkorchid, key=3, label="Field variable QuantConnect.Securities.CashBook _cashBook", style=bold];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_3  [key=2, style=dotted];
m12_6 -> m12_4  [key=2, style=dotted];
m12_6 -> m12_6  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.UniverseSelection.SecurityChanges changes", style=bold];
m12_6 -> m12_1  [color=darkorchid, key=3, label="Local variable long earlyBirdTicks", style=bold];
m12_7 -> m12_5  [color=blue, key=0, style=bold];
}
