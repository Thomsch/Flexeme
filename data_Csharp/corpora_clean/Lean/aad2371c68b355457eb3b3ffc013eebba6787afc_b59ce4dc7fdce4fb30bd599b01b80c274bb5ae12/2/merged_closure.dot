digraph  {
m0_24 [cluster="Unk.ToLower", file="AlgorithmManager.cs", label="Entry Unk.ToLower", span=""];
m0_43 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", span="62-62"];
m0_44 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="var sourceString = LeanData.GenerateRelativeZipFilePath(args.Symbol, args.Date, args.Resolution, args.TickType)", span="64-64"];
m0_46 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="var expectedFileName = LeanData.GenerateZipFileName(args.Symbol, args.Date, args.Resolution, args.TickType)", span="67-67"];
m0_47 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="Assert.AreEqual(args.Symbol, decomposed.Symbol)", span="69-69"];
m0_48 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="Assert.AreEqual(args.Date, decomposed.Date)", span="70-70"];
m0_50 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="Assert.AreEqual(args.Symbol.ID.SecurityType, decomposed.SecurityType)", span="72-72"];
m0_51 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="Assert.AreEqual(args.Symbol.ID.Market, decomposed.Market)", span="73-73"];
m0_52 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="Assert.AreEqual(args.TickType, decomposed.TickType)", span="74-74"];
m0_53 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="Assert.AreEqual(args.Market, decomposed.Market)", span="75-75"];
m0_45 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="var decomposed = LeanDataPathComponents.Parse(sourceString)", span="65-65"];
m0_49 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="Assert.AreEqual(expectedFileName, decomposed.Filename)", span="71-71"];
m0_54 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", file="AlgorithmManager.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.DecomposesAccordingToLeanDataFileGeneration(QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments)", span="62-62"];
m0_22 [cluster="Unk.Where", file="AlgorithmManager.cs", label="Entry Unk.Where", span=""];
m0_0 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments.Arguments(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, string, QuantConnect.TickType)", file="AlgorithmManager.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments.Arguments(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, string, QuantConnect.TickType)", span="18-18"];
m0_1 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments.Arguments(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, string, QuantConnect.TickType)", file="AlgorithmManager.cs", label="Symbol = symbol", span="20-20"];
m0_2 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments.Arguments(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, string, QuantConnect.TickType)", file="AlgorithmManager.cs", label="Date = date", span="21-21"];
m0_3 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments.Arguments(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, string, QuantConnect.TickType)", file="AlgorithmManager.cs", label="Resolution = resolution", span="22-22"];
m0_4 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments.Arguments(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, string, QuantConnect.TickType)", file="AlgorithmManager.cs", label="TickType = tickType", span="23-23"];
m0_5 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments.Arguments(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, string, QuantConnect.TickType)", file="AlgorithmManager.cs", label="Market = market", span="24-24"];
m0_6 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments.Arguments(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, string, QuantConnect.TickType)", file="AlgorithmManager.cs", label="symbol.ID.SecurityType != SecurityType.Option && (resolution == Resolution.Hour || resolution == Resolution.Daily)", span="25-25"];
m0_7 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments.Arguments(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, string, QuantConnect.TickType)", file="AlgorithmManager.cs", label="TickType = TickType.Trade", span="28-28"];
m0_8 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments.Arguments(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, string, QuantConnect.TickType)", file="AlgorithmManager.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments.Arguments(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, string, QuantConnect.TickType)", span="18-18"];
m0_32 [cluster="Unk.ToArray", file="AlgorithmManager.cs", label="Entry Unk.ToArray", span=""];
m0_57 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="AlgorithmManager.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="538-538"];
m0_40 [cluster="lambda expression", file="AlgorithmManager.cs", label="Entry lambda expression", span="50-50"];
m0_33 [cluster="lambda expression", file="AlgorithmManager.cs", label="Entry lambda expression", span="40-40"];
m0_36 [cluster="lambda expression", file="AlgorithmManager.cs", label="Entry lambda expression", span="41-41"];
m0_41 [cluster="lambda expression", file="AlgorithmManager.cs", label="Symbol.Create(name, securityType, market)", span="50-50"];
m0_34 [cluster="lambda expression", file="AlgorithmManager.cs", label="f.IsLiteral && !f.IsInitOnly", span="40-40"];
m0_35 [cluster="lambda expression", file="AlgorithmManager.cs", label="Exit lambda expression", span="40-40"];
m0_37 [cluster="lambda expression", file="AlgorithmManager.cs", label="(string) f.GetValue(null)", span="41-41"];
m0_38 [cluster="lambda expression", file="AlgorithmManager.cs", label="Exit lambda expression", span="41-41"];
m0_42 [cluster="lambda expression", file="AlgorithmManager.cs", label="Exit lambda expression", span="50-50"];
m0_18 [cluster="System.DateTime.DateTime(int, int, int)", file="AlgorithmManager.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m0_27 [cluster="Unk.Create", file="AlgorithmManager.cs", label="Entry Unk.Create", span=""];
m0_39 [cluster="Unk.GetValue", file="AlgorithmManager.cs", label="Entry Unk.GetValue", span=""];
m0_29 [cluster="TestCaseData.cstr", file="AlgorithmManager.cs", label="Entry TestCaseData.cstr", span=""];
m0_64 [cluster="System.Action.Invoke()", file="AlgorithmManager.cs", label="Entry System.Action.Invoke()", span="0-0"];
m0_30 [cluster="Arguments.cstr", file="AlgorithmManager.cs", label="Entry Arguments.cstr", span=""];
m0_58 [cluster="Unk.AreEqual", file="AlgorithmManager.cs", label="Entry Unk.AreEqual", span=""];
m0_9 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="AlgorithmManager.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", span="33-33"];
m0_10 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="AlgorithmManager.cs", label="var referenceDate = new DateTime(2016, 11, 1)", span="35-35"];
m0_11 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="AlgorithmManager.cs", label="var tickTypes = Enum.GetValues(typeof(TickType)).Cast<TickType>()", span="37-37"];
m0_12 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="AlgorithmManager.cs", label="var resolutions = Enum.GetValues(typeof (Resolution)).Cast<Resolution>()", span="38-38"];
m0_13 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="AlgorithmManager.cs", label="var securityTypes = Enum.GetValues(typeof (SecurityType)).Cast<SecurityType>()", span="39-39"];
m0_14 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="AlgorithmManager.cs", label="var markets = typeof (Market).GetFields().Where(f => f.IsLiteral && !f.IsInitOnly)\r\n                .Select(f => (string) f.GetValue(null))", span="40-41"];
m0_16 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="AlgorithmManager.cs", label="return results;", span="58-58"];
m0_17 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", file="AlgorithmManager.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.GetTestCases()", span="33-33"];
m0_25 [cluster="string.Format(string, params object[])", file="AlgorithmManager.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m0_20 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="AlgorithmManager.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m0_28 [cluster="Unk.CreateOption", file="AlgorithmManager.cs", label="Entry Unk.CreateOption", span=""];
m0_19 [cluster="System.Enum.GetValues(System.Type)", file="AlgorithmManager.cs", label="Entry System.Enum.GetValues(System.Type)", span="0-0"];
m0_56 [cluster="QuantConnect.Util.LeanDataPathComponents.Parse(string)", file="AlgorithmManager.cs", label="Entry QuantConnect.Util.LeanDataPathComponents.Parse(string)", span="101-101"];
m0_21 [cluster="System.Type.GetFields()", file="AlgorithmManager.cs", label="Entry System.Type.GetFields()", span="0-0"];
m0_55 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="AlgorithmManager.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m0_31 [cluster="Unk.SetName", file="AlgorithmManager.cs", label="Entry Unk.SetName", span=""];
m0_23 [cluster="Unk.Select", file="AlgorithmManager.cs", label="Entry Unk.Select", span=""];
m0_26 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="AlgorithmManager.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", span="78-78"];
m0_59 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="AlgorithmManager.cs", label="action()", span="82-82"];
m0_60 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="AlgorithmManager.cs", label="return true;", span="83-83"];
m0_61 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="AlgorithmManager.cs", label="throw;", span="88-88"];
m0_63 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="AlgorithmManager.cs", label="return false;", span="87-87"];
m0_62 [cluster="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", file="AlgorithmManager.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.TryInvoke(System.Action)", span="78-78"];
m0_65 [file="AlgorithmManager.cs", label="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments", span=""];
m0_66 [file="AlgorithmManager.cs", label=securityType, span=""];
m0_67 [file="AlgorithmManager.cs", label=market, span=""];
m0_68 [file="AlgorithmManager.cs", label=name, span=""];
m1_46 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m1_179 [cluster="System.Math.Abs(decimal)", file="AlgorithmTradingTests.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m1_250 [cluster="string.Contains(string)", file="AlgorithmTradingTests.cs", label="Entry string.Contains(string)", span="0-0"];
m1_109 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.Clear()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.Clear()", span="70-70"];
m1_173 [cluster="Unk.Where", file="AlgorithmTradingTests.cs", label="Entry Unk.Where", span=""];
m1_180 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.TotalQuantity()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.TotalQuantity()", span="78-78"];
m1_35 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="AlgorithmTradingTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m1_108 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.OrderBook(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.OrderBook(QuantConnect.Symbol)", span="62-62"];
m1_185 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m1_37 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", span="120-120"];
m1_38 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label=_streamLocked, span="126-126"];
m1_39 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="_messageBuffer.Enqueue(e)", span="128-128"];
m1_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="OnMessageImpl(sender, e)", span="137-137"];
m1_41 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label=Exception, span="132-132"];
m1_40 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="return;", span="129-129"];
m1_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="Log.Error(err)", span="134-134"];
m1_44 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", span="120-120"];
m1_261 [cluster="string.Substring(int, int)", file="AlgorithmTradingTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m1_183 [cluster="OrderEvent.cstr", file="AlgorithmTradingTests.cs", label="Entry OrderEvent.cstr", span=""];
m1_252 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", span="550-550"];
m1_263 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="int delay = 36000000", span="553-553"];
m1_265 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="var listener = Task.Factory.StartNew(() =>\r\n            {\r\n                OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''GDAXBrokerage.PollLatestTick: started polling for ticks: {symbol.Value.ToString()}''));\r\n                while (true)\r\n                {\r\n                    var rate = GetConversionRate(symbol.Value.Replace(''USD'', ''''));\r\n\r\n                    lock (_tickLocker)\r\n                    {\r\n                        var latest = new Tick\r\n                        {\r\n                            Value = rate,\r\n                            Time = DateTime.UtcNow,\r\n                            Symbol = symbol\r\n                        };\r\n                        Ticks.Add(latest);\r\n                    }\r\n\r\n                    Thread.Sleep(delay);\r\n                    if (token.IsCancellationRequested) break;\r\n                }\r\n                OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''PollLatestTick: stopped polling for ticks: {symbol.Value.ToString()}''));\r\n            }, token, TaskCreationOptions.LongRunning, TaskScheduler.Default)", span="555-577"];
m1_264 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="var token = _canceller.Token", span="554-554"];
m1_266 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", span="550-550"];
m1_113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", span="449-449"];
m1_224 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="AlgorithmTradingTests.cs", label=_tickLocker, span="451-451"];
m1_225 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="AlgorithmTradingTests.cs", label="Ticks.Add(new Tick\r\n                {\r\n                    AskPrice = askPrice,\r\n                    BidPrice = bidPrice,\r\n                    Value = (askPrice + bidPrice) / 2m,\r\n                    Time = DateTime.UtcNow,\r\n                    Symbol = symbol,\r\n                    TickType = TickType.Quote,\r\n                    AskSize = askSize,\r\n                    BidSize = bidSize\r\n                })", span="453-463"];
m1_226 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", span="449-449"];
m1_254 [cluster="Unk.ToArray", file="AlgorithmTradingTests.cs", label="Entry Unk.ToArray", span=""];
m1_181 [cluster="Unk.TryGetValue", file="AlgorithmTradingTests.cs", label="Entry Unk.TryGetValue", span=""];
m1_81 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", span="379-379"];
m1_190 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order completed with data {data}'')", span="381-381"];
m1_191 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="var message = JsonConvert.DeserializeObject<Messages.Done>(data, JsonSettings)", span="382-382"];
m1_192 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="message.Reason == ''canceled'' || message.RemainingSize > 0", span="385-385"];
m1_193 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order cancelled. Remaining {message.RemainingSize}'')", span="387-387"];
m1_195 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="var cached = CachedOrderIDs.Where(o => o.Value.BrokerId.Contains(message.OrderId)).ToList()", span="392-392"];
m1_197 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order could not locate order in cache with order id {message.OrderId}'')", span="396-396"];
m1_201 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1,\r\n                $''GDAXWebsocketsBrokerage.OrderDone: Encountered done message prior to match filling order brokerId: {message.OrderId} orderId: {orderId}''))", span="403-404"];
m1_203 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="var orderEvent = new OrderEvent\r\n            (\r\n                orderId, ConvertProductId(message.ProductId), message.Time, OrderStatus.Filled,\r\n                message.Side == ''sell'' ? OrderDirection.Sell : OrderDirection.Buy,\r\n                message.Price, message.Side == ''sell'' ? -split.TotalQuantity() : split.TotalQuantity(),\r\n                GetFee(order), ''GDAX Fill Event''\r\n            )", span="409-415"];
m1_194 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="return;", span="388-388"];
m1_196 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="cached.Count == 0 || cached[0].Value.Status == OrderStatus.Filled", span="394-394"];
m1_199 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="var orderId = cached[0].Key", span="400-400"];
m1_200 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="var order = cached[0].Value", span="401-401"];
m1_198 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="return;", span="397-397"];
m1_202 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="var split = FillSplit[orderId]", span="406-406"];
m1_205 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="CachedOrderIDs.TryRemove(orderId, out outOrder)", span="418-418"];
m1_204 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="Order outOrder", span="417-417"];
m1_206 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="OnOrderEvent(orderEvent)", span="420-420"];
m1_207 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", span="379-379"];
m1_268 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="555-577"];
m1_10 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="80-84"];
m1_11 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="var tickers = new[] {''LTCUSD'', ''LTCEUR'', ''LTCBTC'', ''BTCUSD'', ''BTCEUR'', ''BTCGBP'', ''ETHBTC'', ''ETHUSD'', ''ETHEUR''}", span="82-82"];
m1_12 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Subscribe(tickers.Select(ticker => Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)))", span="83-83"];
m1_13 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="80-84"];
m1_16 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="83-83"];
m1_17 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)", span="83-83"];
m1_18 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="83-83"];
m1_187 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="o.Value.BrokerId.Contains(message.MakerOrderId) || o.Value.BrokerId.Contains(message.TakerOrderId)", span="311-311"];
m1_186 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="311-311"];
m1_188 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="311-311"];
m1_209 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="o.Value.BrokerId.Contains(message.OrderId)", span="392-392"];
m1_208 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="392-392"];
m1_210 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="392-392"];
m1_258 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Entry lambda expression", span="512-512"];
m1_259 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="s.Value.Symbol.Substring(0, 3) + ''-'' + s.Value.Symbol.Substring(3)", span="512-512"];
m1_260 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="512-512"];
m1_269 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''GDAXBrokerage.PollLatestTick: started polling for ticks: {symbol.Value.ToString()}''))", span="557-557"];
m1_271 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="var rate = GetConversionRate(symbol.Value.Replace(''USD'', ''''))", span="560-560"];
m1_273 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="var latest = new Tick\r\n                        {\r\n                            Value = rate,\r\n                            Time = DateTime.UtcNow,\r\n                            Symbol = symbol\r\n                        }", span="564-569"];
m1_277 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''PollLatestTick: stopped polling for ticks: {symbol.Value.ToString()}''))", span="576-576"];
m1_275 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Thread.Sleep(delay)", span="573-573"];
m1_276 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="token.IsCancellationRequested", span="574-574"];
m1_270 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label=true, span="558-558"];
m1_272 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label=_tickLocker, span="562-562"];
m1_274 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Ticks.Add(latest)", span="570-570"];
m1_278 [cluster="lambda expression", file="AlgorithmTradingTests.cs", label="Exit lambda expression", span="555-577"];
m1_211 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="428-428"];
m1_212 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="var req = new RestRequest($''/products/{ConvertSymbol(symbol)}/ticker'', Method.GET)", span="430-430"];
m1_217 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="return new Tick(tick.Time, symbol, tick.Bid, tick.Ask) { Quantity = tick.Volume };", span="438-438"];
m1_213 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="var response = RestClient.Execute(req)", span="431-431"];
m1_214 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="432-432"];
m1_215 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="throw new Exception($''GDAXBrokerage.GetTick: request failed: [{(int)response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="434-434"];
m1_216 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="var tick = JsonConvert.DeserializeObject<Messages.Tick>(response.Content)", span="437-437"];
m1_218 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="428-428"];
m1_78 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m1_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="92-92"];
m1_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="AlgorithmTradingTests.cs", label="Log.Trace(''GDAXBrokerage.Messaging.LockStream(): Locking Stream'')", span="94-94"];
m1_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="AlgorithmTradingTests.cs", label="_streamLocked = true", span="95-95"];
m1_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="92-92"];
m1_77 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", span="254-254"];
m1_118 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="var message = JsonConvert.DeserializeObject<Messages.L2Update>(data)", span="258-258"];
m1_134 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="Log.Error(e, ''Data: '' + data)", span="296-296"];
m1_119 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="var symbol = ConvertProductId(message.ProductId)", span="260-260"];
m1_121 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="message.Changes", span="264-264"];
m1_120 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="var orderBook = _orderBooks[symbol]", span="262-262"];
m1_127 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="orderBook.RemoveBidRow(price)", span="273-273"];
m1_128 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="orderBook.UpdateBidRow(price, size)", span="277-277"];
m1_131 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="orderBook.RemoveAskRow(price)", span="284-284"];
m1_132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="orderBook.UpdateAskRow(price, size)", span="288-288"];
m1_122 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="var side = row[0]", span="266-266"];
m1_133 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label=Exception, span="294-294"];
m1_123 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="var price = Convert.ToDecimal(row[1], CultureInfo.InvariantCulture)", span="267-267"];
m1_124 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="var size = decimal.Parse(row[2], NumberStyles.Float, CultureInfo.InvariantCulture)", span="268-268"];
m1_125 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="side == ''buy''", span="269-269"];
m1_129 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="side == ''sell''", span="280-280"];
m1_126 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="size == 0", span="271-271"];
m1_130 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="size == 0", span="282-282"];
m1_135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="throw;", span="297-297"];
m1_136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", span="254-254"];
m1_82 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", span="301-301"];
m1_140 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="var message = JsonConvert.DeserializeObject<Messages.Matched>(data, JsonSettings)", span="303-303"];
m1_147 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="Log.Trace($''GDAXBrokerage.OrderMatch(): Match: {message.ProductId} {data}'')", span="321-321"];
m1_141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label=_isDataQueueHandler, span="305-305"];
m1_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="EmitTradeTick(message)", span="307-307"];
m1_143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="var cached = CachedOrderIDs\r\n                .Where(o => o.Value.BrokerId.Contains(message.MakerOrderId) || o.Value.BrokerId.Contains(message.TakerOrderId))\r\n                .ToList()", span="310-312"];
m1_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="var symbol = ConvertProductId(message.ProductId)", span="314-314"];
m1_153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="split.Add(message)", span="331-331"];
m1_154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="var status = Math.Abs(message.Size) == Math.Abs(order.Quantity) || Math.Abs(split.OrderQuantity) == Math.Abs(split.TotalQuantity())\r\n                ? OrderStatus.Filled : OrderStatus.PartiallyFilled", span="334-335"];
m1_156 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="order.BrokerId[0] == message.TakerOrderId", span="339-339"];
m1_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="direction = message.Side == ''sell'' ? OrderDirection.Buy : OrderDirection.Sell", span="341-341"];
m1_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="direction = message.Side == ''sell'' ? OrderDirection.Sell : OrderDirection.Buy", span="345-345"];
m1_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="var orderFee = totalOrderFee * Math.Abs(message.Size) / Math.Abs(order.Quantity)", span="356-356"];
m1_164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="var orderEvent = new OrderEvent\r\n            (\r\n                orderId, symbol, message.Time, status,\r\n                direction,\r\n                message.Price, direction == OrderDirection.Sell ? -message.Size : message.Size,\r\n                orderFee, $''GDAX Match Event {direction}''\r\n            )", span="358-364"];
m1_145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="cached.Count == 0", span="316-316"];
m1_148 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="var orderId = cached[0].Key", span="322-322"];
m1_149 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="var order = cached[0].Value", span="323-323"];
m1_146 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="return;", span="318-318"];
m1_150 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="!FillSplit.ContainsKey(orderId)", span="325-325"];
m1_151 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="FillSplit[orderId] = new GDAXFill(order)", span="327-327"];
m1_152 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="var split = FillSplit[orderId]", span="330-330"];
m1_160 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="!_orderFees.TryGetValue(orderId, out totalOrderFee)", span="349-349"];
m1_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="_orderFees[orderId] = totalOrderFee", span="352-352"];
m1_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="CachedOrderIDs.TryRemove(orderId, out outOrder)", span="370-370"];
m1_169 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="_orderFees.TryRemove(orderId, out outOrderFee)", span="373-373"];
m1_161 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="totalOrderFee = GetFee(order)", span="351-351"];
m1_155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="OrderDirection direction", span="337-337"];
m1_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="decimal totalOrderFee", span="348-348"];
m1_165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="orderEvent.Status == OrderStatus.Filled", span="367-367"];
m1_170 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="OnOrderEvent(orderEvent)", span="376-376"];
m1_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="Order outOrder", span="369-369"];
m1_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="decimal outOrderFee", span="372-372"];
m1_171 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", span="301-301"];
m1_176 [cluster="GDAXFill.cstr", file="AlgorithmTradingTests.cs", label="Entry GDAXFill.cstr", span=""];
m1_9 [cluster="RestClient.cstr", file="AlgorithmTradingTests.cs", label="Entry RestClient.cstr", span=""];
m1_235 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="490-490"];
m1_236 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label=symbols, span="492-492"];
m1_237 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="item.Value.Contains(''UNIVERSE'') ||\r\n                    item.SecurityType != SecurityType.Forex && item.SecurityType != SecurityType.Crypto", span="494-495"];
m1_241 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="var products = ChannelList.Select(s => s.Value.Symbol.Substring(0, 3) + ''-'' + s.Value.Symbol.Substring(3)).ToArray()", span="512-512"];
m1_238 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="!IsSubscribeAvailable(item)", span="500-500"];
m1_239 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="PollTick(item)", span="504-504"];
m1_240 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="this.ChannelList[item.Value] = new Channel { Name = item.Value, Symbol = item.Value }", span="508-508"];
m1_242 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="var payload = new\r\n            {\r\n                type = ''subscribe'',\r\n                product_ids = products,\r\n                channels = ChannelNames\r\n            }", span="514-519"];
m1_243 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="payload.product_ids.Length == 0", span="521-521"];
m1_245 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="var token = GetAuthenticationToken(JsonConvert.SerializeObject(payload), ''GET'', ''/users/self/verify'')", span="526-526"];
m1_246 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="var json = JsonConvert.SerializeObject(new\r\n            {\r\n                type = payload.type,\r\n                channels = payload.channels,\r\n                product_ids = payload.product_ids,\r\n                SignHeader = token.Signature,\r\n                KeyHeader = ApiKey,\r\n                PassHeader = _passPhrase,\r\n                TimeHeader = token.Timestamp\r\n            })", span="528-537"];
m1_244 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="return;", span="523-523"];
m1_247 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="WebSocket.Send(json)", span="539-539"];
m1_248 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.Subscribe: Sent subscribe.''))", span="542-542"];
m1_249 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="490-490"];
m1_256 [cluster="Unk.GetAuthenticationToken", file="AlgorithmTradingTests.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m1_137 [cluster="Unk.ToDecimal", file="AlgorithmTradingTests.cs", label="Entry Unk.ToDecimal", span=""];
m1_267 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", file="AlgorithmTradingTests.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", span="0-0"];
m1_295 [cluster="Unk.SelectToken", file="AlgorithmTradingTests.cs", label="Entry Unk.SelectToken", span=""];
m1_219 [cluster="RestRequest.cstr", file="AlgorithmTradingTests.cs", label="Entry RestRequest.cstr", span=""];
m1_222 [cluster="System.Exception.Exception(string)", file="AlgorithmTradingTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", span="145-145"];
m1_47 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="var raw = JsonConvert.DeserializeObject<Messages.BaseMessage>(e.Message, JsonSettings)", span="149-149"];
m1_52 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="OnSnapshot(e.Message)", span="159-159"];
m1_55 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="OnL2Update(e.Message)", span="164-164"];
m1_58 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="Log.Error($''GDAXBrokerage.OnMessage.error(): Data: {Environment.NewLine}{e.Message}'')", span="169-169"];
m1_59 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="var error = JsonConvert.DeserializeObject<Messages.Error>(e.Message, JsonSettings)", span="170-170"];
m1_63 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="OrderDone(e.Message)", span="176-176"];
m1_66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="OrderMatch(e.Message)", span="181-181"];
m1_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, (''GDAXWebsocketsBrokerage.OnMessage: Unexpected message format: '' + e.Message)))", span="190-190"];
m1_72 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, $''Parsing wss message failed. Data: {e.Message} Exception: {exception}''))", span="194-194"];
m1_48 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="151-151"];
m1_49 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="raw.Type == ''heartbeat''", span="153-153"];
m1_51 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="raw.Type == ''snapshot''", span="157-157"];
m1_54 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="raw.Type == ''l2update''", span="162-162"];
m1_57 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="raw.Type == ''error''", span="167-167"];
m1_62 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="raw.Type == ''done''", span="174-174"];
m1_65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="raw.Type == ''match''", span="179-179"];
m1_68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="raw.Type == ''open'' || raw.Type == ''change'' || raw.Type == ''received'' || raw.Type == ''subscriptions'' || raw.Type == ''last_match''", span="184-184"];
m1_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="return;", span="155-155"];
m1_53 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="return;", span="160-160"];
m1_56 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="return;", span="165-165"];
m1_60 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, $''GDAXBrokerage.OnMessage: {error.Message} {error.Reason}''))", span="171-171"];
m1_61 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="return;", span="172-172"];
m1_64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="return;", span="177-177"];
m1_67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="return;", span="182-182"];
m1_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="return;", span="187-187"];
m1_71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label=Exception, span="192-192"];
m1_73 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="throw;", span="195-195"];
m1_74 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", span="145-145"];
m1_175 [cluster="Unk.ContainsKey", file="AlgorithmTradingTests.cs", label="Entry Unk.ContainsKey", span=""];
m1_281 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", span="580-580"];
m1_283 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="var response = RateClient.Execute(new RestSharp.RestRequest(Method.GET))", span="582-582"];
m1_288 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="var rate = raw.SelectToken(''rates.'' + currency).Value<decimal>()", span="590-590"];
m1_284 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="583-583"];
m1_285 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GetConversionRate: error returned from conversion rate service.''))", span="585-585"];
m1_287 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="var raw = JsonConvert.DeserializeObject<JObject>(response.Content)", span="589-589"];
m1_290 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GetConversionRate: zero value returned from conversion rate service.''))", span="593-593"];
m1_286 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="return 0;", span="586-586"];
m1_289 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="rate == 0", span="591-591"];
m1_292 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="return 1m / rate;", span="597-597"];
m1_291 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="return 0;", span="594-594"];
m1_293 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", span="580-580"];
m1_184 [cluster="Unk.TryRemove", file="AlgorithmTradingTests.cs", label="Entry Unk.TryRemove", span=""];
m1_174 [cluster="Unk.ToList", file="AlgorithmTradingTests.cs", label="Entry Unk.ToList", span=""];
m1_19 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m1_298 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="AlgorithmTradingTests.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m1_75 [cluster="Unk.>", file="AlgorithmTradingTests.cs", label="Entry Unk.>", span=""];
m1_178 [cluster="Unk.Abs", file="AlgorithmTradingTests.cs", label="Entry Unk.Abs", span=""];
m1_107 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="AlgorithmTradingTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_255 [cluster="Unk.SerializeObject", file="AlgorithmTradingTests.cs", label="Entry Unk.SerializeObject", span=""];
m1_177 [cluster="Unk.Add", file="AlgorithmTradingTests.cs", label="Entry Unk.Add", span=""];
m1_8 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="AlgorithmTradingTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m1_112 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.UpdateAskRow(decimal, decimal)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.UpdateAskRow(decimal, decimal)", span="110-110"];
m1_280 [cluster="string.Replace(string, string)", file="AlgorithmTradingTests.cs", label="Entry string.Replace(string, string)", span="0-0"];
m1_76 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", span="199-199"];
m1_83 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="var message = JsonConvert.DeserializeObject<Messages.Snapshot>(data)", span="203-203"];
m1_84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="var symbol = ConvertProductId(message.ProductId)", span="205-205"];
m1_91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="message.Bids", span="219-219"];
m1_95 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="message.Asks", span="225-225"];
m1_85 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="OrderBook orderBook", span="207-207"];
m1_86 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="!_orderBooks.TryGetValue(symbol, out orderBook)", span="208-208"];
m1_87 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="orderBook = new OrderBook(symbol)", span="210-210"];
m1_88 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="_orderBooks[symbol] = orderBook", span="211-211"];
m1_101 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="EmitQuoteTick(symbol, orderBook.BestBidPrice, orderBook.BestBidSize, orderBook.BestAskPrice, orderBook.BestAskSize)", span="236-236"];
m1_89 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="orderBook.BestBidAskUpdated -= OnBestBidAskUpdated", span="215-215"];
m1_90 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="orderBook.Clear()", span="216-216"];
m1_94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="orderBook.UpdateBidRow(price, size)", span="223-223"];
m1_98 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="orderBook.UpdateAskRow(price, size)", span="229-229"];
m1_99 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="orderBook.BestBidAskUpdated += OnBestBidAskUpdated", span="232-232"];
m1_92 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="var price = decimal.Parse(row[0], NumberStyles.Float, CultureInfo.InvariantCulture)", span="221-221"];
m1_93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="var size = decimal.Parse(row[1], NumberStyles.Float, CultureInfo.InvariantCulture)", span="222-222"];
m1_96 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="var price = decimal.Parse(row[0], NumberStyles.Float, CultureInfo.InvariantCulture)", span="227-227"];
m1_97 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="var size = decimal.Parse(row[1], NumberStyles.Float, CultureInfo.InvariantCulture)", span="228-228"];
m1_100 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label=_isDataQueueHandler, span="234-234"];
m1_102 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label=Exception, span="239-239"];
m1_103 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="Log.Error(e)", span="241-241"];
m1_104 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="throw;", span="242-242"];
m1_105 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", span="199-199"];
m1_80 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m1_282 [cluster="System.Threading.Thread.Sleep(int)", file="AlgorithmTradingTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_262 [cluster="string.Substring(int)", file="AlgorithmTradingTests.cs", label="Entry string.Substring(int)", span="0-0"];
m1_257 [cluster="Unk.Send", file="AlgorithmTradingTests.cs", label="Entry Unk.Send", span=""];
m1_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="AlgorithmTradingTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_221 [cluster="Unk.Execute", file="AlgorithmTradingTests.cs", label="Entry Unk.Execute", span=""];
m1_253 [cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel.Channel()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel.Channel()", span="313-313"];
m1_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="101-101"];
m1_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="AlgorithmTradingTests.cs", label="Log.Trace(''GDAXBrokerage.Messaging.UnlockStream(): Processing Backlog...'')", span="103-103"];
m1_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="AlgorithmTradingTests.cs", label="_messageBuffer.Any()", span="104-104"];
m1_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="AlgorithmTradingTests.cs", label="WebSocketMessage e", span="106-106"];
m1_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="AlgorithmTradingTests.cs", label="Log.Trace(''GDAXBrokerage.Messaging.UnlockStream(): Stream Unlocked.'')", span="110-110"];
m1_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="AlgorithmTradingTests.cs", label="_messageBuffer.TryDequeue(out e)", span="107-107"];
m1_30 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="AlgorithmTradingTests.cs", label="OnMessageImpl(this, e)", span="108-108"];
m1_32 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="AlgorithmTradingTests.cs", label="_streamLocked = false", span="112-112"];
m1_33 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="101-101"];
m1_111 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.UpdateBidRow(decimal, decimal)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.UpdateBidRow(decimal, decimal)", span="89-89"];
m1_79 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m1_251 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", span="600-600"];
m1_296 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="return Regex.IsMatch(symbol.Value, SymbolMatching);", span="602-602"];
m1_297 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", span="600-600"];
m1_45 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="AlgorithmTradingTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m1_0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", span="72-72"];
m1_1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="FillSplit = new ConcurrentDictionary<long, GDAXFill>()", span="75-75"];
m1_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="_passPhrase = passPhrase", span="76-76"];
m1_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="_algorithm = algorithm", span="77-77"];
m1_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="RateClient = new RestClient(''http://api.fixer.io/latest?base=usd'')", span="78-78"];
m1_5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="WebSocket.Open += (sender, args) =>\r\n            {\r\n                var tickers = new[] {''LTCUSD'', ''LTCEUR'', ''LTCBTC'', ''BTCUSD'', ''BTCEUR'', ''BTCGBP'', ''ETHBTC'', ''ETHUSD'', ''ETHEUR''};\r\n                Subscribe(tickers.Select(ticker => Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)));\r\n            }", span="80-84"];
m1_6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="_isDataQueueHandler = this is GDAXDataQueueHandler", span="86-86"];
m1_7 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", span="72-72"];
m1_139 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.RemoveAskRow(decimal)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.RemoveAskRow(decimal)", span="153-153"];
m1_220 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="127-127"];
m1_228 [cluster="System.Collections.Generic.List<T>.Add(T)", file="AlgorithmTradingTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_229 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", span="470-470"];
m1_230 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="AlgorithmTradingTests.cs", label="var symbol = ConvertProductId(message.ProductId)", span="472-472"];
m1_232 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="AlgorithmTradingTests.cs", label="Ticks.Add(new Tick\r\n                {\r\n                    Value = message.Price,\r\n                    Time = DateTime.UtcNow,\r\n                    Symbol = symbol,\r\n                    TickType = TickType.Trade,\r\n                    Quantity = message.Size\r\n                })", span="476-483"];
m1_231 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="AlgorithmTradingTests.cs", label=_tickLocker, span="474-474"];
m1_233 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", span="470-470"];
m1_234 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", span="117-117"];
m1_299 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="608-608"];
m1_300 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="WebSocket.IsOpen", span="610-610"];
m1_301 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="WebSocket.Send(JsonConvert.SerializeObject(new {type = ''unsubscribe'', channels = ChannelNames}))", span="612-612"];
m1_302 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="608-608"];
m1_110 [cluster="Unk.Parse", file="AlgorithmTradingTests.cs", label="Entry Unk.Parse", span=""];
m1_138 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.RemoveBidRow(decimal)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.RemoveBidRow(decimal)", span="130-130"];
m1_189 [cluster="Unk.Contains", file="AlgorithmTradingTests.cs", label="Entry Unk.Contains", span=""];
m1_294 [cluster="RestSharp.RestRequest.cstr", file="AlgorithmTradingTests.cs", label="Entry RestSharp.RestRequest.cstr", span=""];
m1_223 [cluster="Tick.cstr", file="AlgorithmTradingTests.cs", label="Entry Tick.cstr", span=""];
m1_182 [cluster="Unk.GetFee", file="AlgorithmTradingTests.cs", label="Entry Unk.GetFee", span=""];
m1_24 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m1_227 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m1_279 [cluster="string.ToString()", file="AlgorithmTradingTests.cs", label="Entry string.ToString()", span="0-0"];
m1_14 [cluster="Unk.Select", file="AlgorithmTradingTests.cs", label="Entry Unk.Select", span=""];
m1_172 [cluster="Unk.EmitTradeTick", file="AlgorithmTradingTests.cs", label="Entry Unk.EmitTradeTick", span=""];
m1_15 [cluster="Unk.Subscribe", file="AlgorithmTradingTests.cs", label="Entry Unk.Subscribe", span=""];
m1_106 [cluster="Unk.ConvertProductId", file="AlgorithmTradingTests.cs", label="Entry Unk.ConvertProductId", span=""];
m1_114 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="AlgorithmTradingTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", span="246-246"];
m1_115 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="AlgorithmTradingTests.cs", label=_isDataQueueHandler, span="248-248"];
m1_116 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="AlgorithmTradingTests.cs", label="EmitQuoteTick(e.Symbol, e.BestBidPrice, e.BestBidSize, e.BestAskPrice, e.BestAskSize)", span="250-250"];
m1_117 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="AlgorithmTradingTests.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", span="246-246"];
m1_303 [file="AlgorithmTradingTests.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m1_304 [file="AlgorithmTradingTests.cs", label=message, span=""];
m1_305 [file="AlgorithmTradingTests.cs", label=message, span=""];
m1_306 [file="AlgorithmTradingTests.cs", label="QuantConnect.Symbol", span=""];
m1_307 [file="AlgorithmTradingTests.cs", label=delay, span=""];
m1_308 [file="AlgorithmTradingTests.cs", label=token, span=""];
m5_98 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m5_114 [cluster="Unk.Where", file="BacktestingSetupHandler.cs", label="Entry Unk.Where", span=""];
m5_22 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="138-138"];
m5_23 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BacktestingSetupHandler.cs", label="factory = new BacktestingBrokerageFactory()", span="140-140"];
m5_25 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BacktestingSetupHandler.cs", label="return new BacktestingBrokerage(uninitializedAlgorithm, optionMarketSimulation);", span="142-142"];
m5_24 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BacktestingSetupHandler.cs", label="var optionMarketSimulation = new BasicOptionAssignmentSimulation()", span="141-141"];
m5_26 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="138-138"];
m5_4 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="118-118"];
m5_5 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BacktestingSetupHandler.cs", label="string error", span="120-120"];
m5_7 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BacktestingSetupHandler.cs", label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromSeconds(60), names => names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name'')))", span="124-124"];
m5_8 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BacktestingSetupHandler.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="125-125"];
m5_6 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BacktestingSetupHandler.cs", label="IAlgorithm algorithm", span="121-121"];
m5_9 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BacktestingSetupHandler.cs", label="!complete", span="126-126"];
m5_10 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BacktestingSetupHandler.cs", label="throw new Exception(error + '' Try re-building algorithm.'');", span="126-126"];
m5_11 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BacktestingSetupHandler.cs", label="return algorithm;", span="128-128"];
m5_12 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="118-118"];
m5_76 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", span="266-266"];
m5_103 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="var jobDays = (finish - start).TotalDays", span="283-283"];
m5_102 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="double maxRunTime = 0", span="282-282"];
m5_104 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="maxRunTime = 10 * subscriptionCount * jobDays", span="285-285"];
m5_109 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="Log.Trace(''BacktestingSetupHandler.GetMaxRunTime(): Job Days: '' + jobDays + '' Max Runtime: '' + Math.Round(maxRunTime / 60) + '' min'')", span="299-299"];
m5_105 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="(maxRunTime / 3600) > 12", span="288-288"];
m5_107 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="maxRunTime < 60", span="293-293"];
m5_112 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="return TimeSpan.FromSeconds(maxRunTime);", span="307-307"];
m5_106 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="maxRunTime = 3600 * 12", span="291-291"];
m5_108 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="maxRunTime = 60", span="296-296"];
m5_110 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="OS.IsWindows", span="302-302"];
m5_111 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="maxRunTime = 24 * 60 * 60", span="304-304"];
m5_113 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", span="266-266"];
m5_3 [cluster="System.Collections.Generic.List<T>.List()", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_67 [cluster="object.GetType()", file="BacktestingSetupHandler.cs", label="Entry object.GetType()", span="0-0"];
m5_92 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="530-530"];
m5_75 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="309-309"];
m5_121 [cluster="QuantConnect.Symbol.IsCanonical()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m5_126 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="277-277"];
m5_18 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name''))", span="124-124"];
m5_17 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="124-124"];
m5_19 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="124-124"];
m5_82 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="algorithm.SetParameters(job.Parameters)", span="187-187"];
m5_83 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="algorithm.SetLiveMode(false)", span="190-190"];
m5_84 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="193-193"];
m5_85 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()))", span="196-196"];
m5_86 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="algorithm.Initialize()", span="199-199"];
m5_81 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="182-206"];
m5_87 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label=Exception, span="201-201"];
m5_90 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="182-206"];
m5_88 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Log.Error(err)", span="203-203"];
m5_89 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err)", span="204-204"];
m5_118 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="270-270"];
m5_122 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="271-271"];
m5_120 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="270-270"];
m5_124 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="271-271"];
m5_128 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="277-277"];
m5_15 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="349-349"];
m5_73 [cluster="System.TimeSpan.FromMinutes(double)", file="BacktestingSetupHandler.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m5_129 [cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", span="85-85"];
m5_72 [cluster="QuantConnect.Isolator.Isolator()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m5_16 [cluster="System.Exception.Exception(string)", file="BacktestingSetupHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m5_91 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="323-323"];
m5_97 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="303-303"];
m5_125 [cluster="Unk.GetLimit", file="BacktestingSetupHandler.cs", label="Entry Unk.GetLimit", span=""];
m5_74 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145"];
m5_78 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="547-547"];
m5_66 [cluster="System.ArgumentException.ArgumentException(string)", file="BacktestingSetupHandler.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m5_29 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="73-73"];
m5_95 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", span="27-27"];
m5_0 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="107-107"];
m5_1 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="BacktestingSetupHandler.cs", label="Errors = new List<string>()", span="109-109"];
m5_2 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="107-107"];
m5_130 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", span="314-314"];
m5_131 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", span="314-314"];
m5_30 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="155-155"];
m5_31 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="var job = baseJob as BacktestNodePacket", span="157-157"];
m5_33 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="throw new ArgumentException(''Expected BacktestNodePacket but received '' + baseJob.GetType().Name);", span="160-160"];
m5_35 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="algorithm == null", span="165-165"];
m5_38 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="algorithm.Name = job.GetAlgorithmName()", span="171-171"];
m5_44 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromMinutes(5), () =>\r\n            {\r\n                try\r\n                {\r\n                    //Set our parameters\r\n                    algorithm.SetParameters(job.Parameters);\r\n\r\n                    //Algorithm is backtesting, not live:\r\n                    algorithm.SetLiveMode(false);\r\n\r\n                    //Set the source impl for the event scheduling\r\n                    algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n\r\n                    // set the option chain provider\r\n                    algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()));\r\n\r\n                    //Initialise the algorithm, get the required data:\r\n                    algorithm.Initialize();\r\n                }\r\n                catch (Exception err)\r\n                {\r\n                    Log.Error(err);\r\n                    Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err);\r\n                }\r\n            }, controls.RamAllocation)", span="182-206"];
m5_47 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="job.PeriodStart = algorithm.StartDate", span="212-212"];
m5_48 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="job.PeriodFinish = algorithm.EndDate", span="213-213"];
m5_49 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="algorithm.PostInitialize()", span="215-215"];
m5_53 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="_startingCaptial = algorithm.Portfolio.Cash", span="227-227"];
m5_58 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="algorithm.SetMaximumOrders(_maxOrders)", span="241-241"];
m5_32 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="job == null", span="158-158"];
m5_34 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="Log.Trace(string.Format(''BacktestingSetupHandler.Setup(): Setting up job: Plan: {0}, UID: {1}, PID: {2}, Version: {3}, Source: {4}'', job.UserPlan, job.UserId, job.ProjectId, job.Version, job.RequestSource))", span="163-163"];
m5_39 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="job.PeriodStart == default(DateTime)", span="174-174"];
m5_42 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="var controls = job.Controls", span="180-180"];
m5_51 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="job.Language == Language.Python", span="221-221"];
m5_54 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="job.UserPlan == UserPlan.Free", span="230-230"];
m5_59 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="_startingDate = job.PeriodStart", span="244-244"];
m5_60 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="Log.Trace(''SetUp Backtesting: User: '' + job.UserId + '' ProjectId: '' + job.ProjectId + '' AlgoId: '' + job.AlgorithmId)", span="247-247"];
m5_61 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="Log.Trace(''Dates: Start: '' + job.PeriodStart.ToShortDateString() + '' End: '' + job.PeriodFinish.ToShortDateString() + '' Cash: '' + _startingCaptial.ToString(''C''))", span="248-248"];
m5_36 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="Errors.Add(''Could not create instance of algorithm'')", span="167-167"];
m5_37 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="return false;", span="168-168"];
m5_40 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="Errors.Add(''Algorithm start date was never set'')", span="176-176"];
m5_41 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="return false;", span="177-177"];
m5_43 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="var isolator = new Isolator()", span="181-181"];
m5_45 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="!initializeComplete", span="209-209"];
m5_64 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="return initializeComplete;", span="254-254"];
m5_46 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="return false;", span="209-209"];
m5_52 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="_maxRuntime = _maxRuntime.Add(TimeSpan.FromSeconds(_maxRuntime.TotalSeconds * 9))", span="223-223"];
m5_55 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="_maxOrders = 10000", span="232-232"];
m5_56 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="_maxOrders = int.MaxValue", span="236-236"];
m5_57 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="_maxRuntime += _maxRuntime", span="237-237"];
m5_62 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="Errors.Count > 0", span="250-250"];
m5_63 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="initializeComplete = false", span="252-252"];
m5_65 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="155-155"];
m5_27 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", span="69-69"];
m5_116 [cluster="Unk.Sum", file="BacktestingSetupHandler.cs", label="Entry Unk.Sum", span=""];
m5_94 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m5_68 [cluster="string.Format(string, params object[])", file="BacktestingSetupHandler.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m5_14 [cluster="System.TimeSpan.FromSeconds(double)", file="BacktestingSetupHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m5_117 [cluster="System.Math.Round(double)", file="BacktestingSetupHandler.cs", label="Entry System.Math.Round(double)", span="0-0"];
m5_70 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_79 [cluster="System.DateTime.ToShortDateString()", file="BacktestingSetupHandler.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m5_96 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="586-586"];
m5_13 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="82-82"];
m5_93 [cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65"];
m5_21 [cluster="System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", span="867-867"];
m5_69 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m5_77 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="BacktestingSetupHandler.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m5_28 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", span="34-34"];
m5_115 [cluster="Unk.Select", file="BacktestingSetupHandler.cs", label="Entry Unk.Select", span=""];
m5_20 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m5_80 [cluster="decimal.ToString(string)", file="BacktestingSetupHandler.cs", label="Entry decimal.ToString(string)", span="0-0"];
m5_71 [cluster="QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", span="150-150"];
m5_132 [file="BacktestingSetupHandler.cs", label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", span=""];
m5_133 [file="BacktestingSetupHandler.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m5_134 [file="BacktestingSetupHandler.cs", label=job, span=""];
m5_135 [file="BacktestingSetupHandler.cs", label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span=""];
m5_136 [file="BacktestingSetupHandler.cs", label="QuantConnect.Packets.Controls", span=""];
m6_10 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m6_11 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="BaseWebsocketsBrokerage.cs", label="var cash = new Cash(symbol, quantity, conversionRate)", span="65-65"];
m6_12 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="BaseWebsocketsBrokerage.cs", label="_currencies.AddOrUpdate(symbol, cash)", span="66-66"];
m6_13 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m6_97 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m6_51 [cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="166-166"];
m6_52 [cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="_currencies.AddOrUpdate(item.Key, item.Value)", span="168-168"];
m6_53 [cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="166-166"];
m6_50 [cluster="System.Text.StringBuilder.ToString()", file="BaseWebsocketsBrokerage.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_22 [cluster="System.Collections.Generic.List<T>.List()", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_101 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m6_46 [cluster="QuantConnect.Securities.Cash.ToString()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.Cash.ToString()", span="222-222"];
m6_82 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m6_84 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m6_61 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.Remove(string)", span="193-193"];
m6_62 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="BaseWebsocketsBrokerage.cs", label="Cash cash = null", span="195-195"];
m6_63 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="BaseWebsocketsBrokerage.cs", label="var removed = _currencies.TryRemove(symbol, out cash)", span="196-196"];
m6_65 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="BaseWebsocketsBrokerage.cs", label="Log.Error(string.Format(''CashBook.Remove(): Failed to remove the cash book record for symbol {0}'', symbol))", span="199-199"];
m6_64 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="BaseWebsocketsBrokerage.cs", label="!removed", span="197-197"];
m6_66 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="BaseWebsocketsBrokerage.cs", label="return removed;", span="201-201"];
m6_67 [cluster="QuantConnect.Securities.CashBook.Remove(string)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.Remove(string)", span="193-193"];
m6_54 [cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", span="176-176"];
m6_55 [cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="BaseWebsocketsBrokerage.cs", label="_currencies.AddOrUpdate(symbol, value)", span="178-178"];
m6_56 [cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", span="176-176"];
m6_0 [cluster="lambda expression", file="BaseWebsocketsBrokerage.cs", label="Entry lambda expression", span="44-44"];
m6_1 [cluster="lambda expression", file="BaseWebsocketsBrokerage.cs", label="x.ValueInAccountCurrency", span="44-44"];
m6_2 [cluster="lambda expression", file="BaseWebsocketsBrokerage.cs", label="Exit lambda expression", span="44-44"];
m6_70 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m6_47 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="299-299"];
m6_3 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="50-50"];
m6_4 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="BaseWebsocketsBrokerage.cs", label="_currencies = new ConcurrentDictionary<string, Cash>()", span="52-52"];
m6_5 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="BaseWebsocketsBrokerage.cs", label="_currencies.AddOrUpdate(AccountCurrency, new Cash(AccountCurrency, 0, 1.0m))", span="53-53"];
m6_6 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.CashBook()", span="50-50"];
m6_98 [cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", span="308-308"];
m6_99 [cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="BaseWebsocketsBrokerage.cs", label="return ((IEnumerable) _currencies).GetEnumerator();", span="310-310"];
m6_100 [cluster="QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.System.Collections.IEnumerable.GetEnumerator()", span="308-308"];
m6_93 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m6_85 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m6_34 [cluster="QuantConnect.Securities.CashBook.ToString()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.ToString()", span="125-125"];
m6_35 [cluster="QuantConnect.Securities.CashBook.ToString()", file="BaseWebsocketsBrokerage.cs", label="var sb = new StringBuilder()", span="127-127"];
m6_36 [cluster="QuantConnect.Securities.CashBook.ToString()", file="BaseWebsocketsBrokerage.cs", label="sb.AppendLine(string.Format(''{0} {1,13}    {2,10} = {3}'', ''Symbol'', ''Quantity'', ''Conversion'', ''Value in '' + AccountCurrency))", span="128-128"];
m6_38 [cluster="QuantConnect.Securities.CashBook.ToString()", file="BaseWebsocketsBrokerage.cs", label="sb.AppendLine(value.ToString())", span="131-131"];
m6_39 [cluster="QuantConnect.Securities.CashBook.ToString()", file="BaseWebsocketsBrokerage.cs", label="sb.AppendLine(''-------------------------------------------------'')", span="133-133"];
m6_40 [cluster="QuantConnect.Securities.CashBook.ToString()", file="BaseWebsocketsBrokerage.cs", label="sb.AppendLine(string.Format(''CashBook Total Value:                {0}{1}'', \r\n                Currencies.GetCurrencySymbol(AccountCurrency), \r\n                Math.Round(TotalValueInAccountCurrency, 2))\r\n                )", span="134-137"];
m6_37 [cluster="QuantConnect.Securities.CashBook.ToString()", file="BaseWebsocketsBrokerage.cs", label=Values, span="129-129"];
m6_42 [cluster="QuantConnect.Securities.CashBook.ToString()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.ToString()", span="125-125"];
m6_68 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m6_57 [cluster="QuantConnect.Securities.CashBook.Clear()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.Clear()", span="184-184"];
m6_58 [cluster="QuantConnect.Securities.CashBook.Clear()", file="BaseWebsocketsBrokerage.cs", label="_currencies.Clear()", span="186-186"];
m6_59 [cluster="QuantConnect.Securities.CashBook.Clear()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.Clear()", span="184-184"];
m6_7 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m6_78 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.ContainsKey(string)", span="224-224"];
m6_79 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="BaseWebsocketsBrokerage.cs", label="return _currencies.ContainsKey(symbol);", span="226-226"];
m6_80 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.ContainsKey(string)", span="224-224"];
m6_69 [cluster="string.Format(string, object)", file="BaseWebsocketsBrokerage.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_14 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78"];
m6_15 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="BaseWebsocketsBrokerage.cs", label="var addedSecurities = new List<Security>()", span="80-80"];
m6_17 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="BaseWebsocketsBrokerage.cs", label="var security = cash.EnsureCurrencyDataFeed(securities, subscriptions, marketHoursDatabase, symbolPropertiesDatabase, marketMap, this)", span="83-83"];
m6_16 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="BaseWebsocketsBrokerage.cs", label="_currencies.Values", span="81-81"];
m6_19 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="BaseWebsocketsBrokerage.cs", label="addedSecurities.Add(security)", span="86-86"];
m6_20 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="BaseWebsocketsBrokerage.cs", label="return addedSecurities;", span="89-89"];
m6_18 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="BaseWebsocketsBrokerage.cs", label="security != null", span="84-84"];
m6_21 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78"];
m6_9 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m6_48 [cluster="System.Math.Round(decimal, int)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m6_31 [cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", span="113-113"];
m6_32 [cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="BaseWebsocketsBrokerage.cs", label="return Convert(sourceQuantity, sourceCurrency, AccountCurrency);", span="115-115"];
m6_33 [cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", span="113-113"];
m6_43 [cluster="System.Text.StringBuilder.StringBuilder()", file="BaseWebsocketsBrokerage.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m6_81 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_44 [cluster="string.Format(string, params object[])", file="BaseWebsocketsBrokerage.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m6_25 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.Convert(decimal, string, string)", span="99-99"];
m6_26 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="BaseWebsocketsBrokerage.cs", label="var source = this[sourceCurrency]", span="101-101"];
m6_27 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="BaseWebsocketsBrokerage.cs", label="var destination = this[destinationCurrency]", span="102-102"];
m6_29 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="BaseWebsocketsBrokerage.cs", label="return sourceQuantity*conversionRate;", span="104-104"];
m6_28 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="BaseWebsocketsBrokerage.cs", label="var conversionRate = source.ConversionRate*destination.ConversionRate", span="103-103"];
m6_30 [cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.Convert(decimal, string, string)", span="99-99"];
m6_24 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_8 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="65-65"];
m6_89 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m6_49 [cluster="string.Format(string, object, object)", file="BaseWebsocketsBrokerage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_94 [cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.GetEnumerator()", span="303-303"];
m6_95 [cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="BaseWebsocketsBrokerage.cs", label="return _currencies.GetEnumerator();", span="305-305"];
m6_96 [cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.GetEnumerator()", span="303-303"];
m6_45 [cluster="System.Text.StringBuilder.AppendLine(string)", file="BaseWebsocketsBrokerage.cs", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
m6_23 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="130-130"];
m6_90 [cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", span="255-255"];
m6_91 [cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="BaseWebsocketsBrokerage.cs", label="((IDictionary<string, Cash>) _currencies).CopyTo(array, arrayIndex)", span="257-257"];
m6_92 [cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", span="255-255"];
m6_60 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="BaseWebsocketsBrokerage.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m6_86 [cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="245-245"];
m6_87 [cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="return _currencies.Contains(item);", span="247-247"];
m6_88 [cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="245-245"];
m6_71 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="Entry QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="208-208"];
m6_72 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="Cash cash = null", span="210-210"];
m6_73 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="var removed = _currencies.TryRemove(item.Key, out cash)", span="211-211"];
m6_74 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="!removed", span="212-212"];
m6_75 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="Log.Error(string.Format(''CashBook.Remove(): Failed to remove the cash book record for symbol {0} - {1}'', item.Key, item.Value != null ? item.Value.ToString() : ''(null)''))", span="214-214"];
m6_76 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="return removed;", span="216-216"];
m6_77 [cluster="QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="BaseWebsocketsBrokerage.cs", label="Exit QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="208-208"];
m6_102 [file="BaseWebsocketsBrokerage.cs", label="QuantConnect.Securities.CashBook", span=""];
m7_15 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Cash.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m7_5 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Cash.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", span=""];
m7_10 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Cash.cs", label="Log.Error(''Time.UnixTimeStampToDateTime(): '' + unixTimeStamp + err.Message)", span="108-108"];
m7_9 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Cash.cs", label=Exception, span="106-106"];
m7_11 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Cash.cs", label="return time;", span="110-110"];
m7_6 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Cash.cs", label="var time = DateTime.Now", span="99-99"];
m7_8 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Cash.cs", label="time = time.AddSeconds(unixTimeStamp)", span="104-104"];
m7_7 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Cash.cs", label="time = new DateTime(1970, 1, 1, 0, 0, 0, 0)", span="103-103"];
m7_12 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Cash.cs", label="Exit QuantConnect.Time.UnixTimeStampToDateTime(double)", span="97-97"];
m7_27 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="Entry QuantConnect.Time.ParseDate(string)", span="146-146"];
m7_40 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="Log.Error(''Time.ParseDate(): '' + err.Message)", span="175-175"];
m7_39 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label=Exception, span="173-173"];
m7_41 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="return DateTime.Now;", span="178-178"];
m7_37 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="DateTime.TryParse(dateToParse, out date)", span="168-168"];
m7_35 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.US, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="164-164"];
m7_38 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="return date;", span="170-170"];
m7_30 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="return date;", span="154-154"];
m7_32 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="return date;", span="158-158"];
m7_34 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="return date;", span="162-162"];
m7_36 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="return date;", span="166-166"];
m7_28 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="DateTime date", span="151-151"];
m7_29 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.SixCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="152-152"];
m7_31 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.EightCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="156-156"];
m7_33 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="DateTime.TryParseExact(dateToParse.Substring(0, 19), DateFormat.JsonFormat, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="160-160"];
m7_42 [cluster="QuantConnect.Time.ParseDate(string)", file="Cash.cs", label="Exit QuantConnect.Time.ParseDate(string)", span="146-146"];
m7_46 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Cash.cs", label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="188-188"];
m7_47 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Cash.cs", label="var day = from.Date", span="190-190"];
m7_49 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Cash.cs", label="yield return day;", span="191-191"];
m7_48 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Cash.cs", label="day.Date <= thru.Date", span="190-190"];
m7_50 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Cash.cs", label="day = day.AddDays(1)", span="190-190"];
m7_51 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Cash.cs", label="Exit QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="188-188"];
m7_69 [cluster="QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="Entry QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", span="244-244"];
m7_70 [cluster="QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", color=green, community=0, file="Cash.cs", label="var count = 0", prediction=0, span="246-246"];
m7_71 [cluster="QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="Log.Trace(''Time.TradeableDates(): Security Count: '' + securities.Count)", span="247-247"];
m7_74 [cluster="QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="count++", span="254-254"];
m7_77 [cluster="QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="return count;", span="262-262"];
m7_72 [cluster="QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="Time.EachDay(start, finish)", span="250-250"];
m7_73 [cluster="QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="Time.TradableDate(securities, day)", span="252-252"];
m7_76 [cluster="QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="Log.Error(''Time.TradeableDates(): '' + err.Message)", span="260-260"];
m7_75 [cluster="QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label=Exception, span="258-258"];
m7_78 [cluster="QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="Exit QuantConnect.Time.TradeableDates(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", span="244-244"];
m7_45 [cluster="System.DateTime.TryParse(string, out System.DateTime)", file="Cash.cs", label="Entry System.DateTime.TryParse(string, out System.DateTime)", span="0-0"];
m7_16 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Cash.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="118-118"];
m7_20 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Cash.cs", label="Log.Error(''Time.DateTimeToUnixTimeStamp(): '' + time.ToOADate() + err.Message)", span="127-127"];
m7_19 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Cash.cs", label=Exception, span="125-125"];
m7_21 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Cash.cs", label="return timestamp;", span="129-129"];
m7_17 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Cash.cs", label="double timestamp = 0", span="120-120"];
m7_18 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Cash.cs", label="timestamp = (time - new DateTime(1970, 1, 1, 0, 0, 0, 0)).TotalSeconds", span="123-123"];
m7_22 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Cash.cs", label="Exit QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="118-118"];
m7_23 [cluster="System.DateTime.ToOADate()", file="Cash.cs", label="Entry System.DateTime.ToOADate()", span="0-0"];
m7_24 [cluster="QuantConnect.Time.TimeStamp()", file="Cash.cs", label="Entry QuantConnect.Time.TimeStamp()", span="136-136"];
m7_25 [cluster="QuantConnect.Time.TimeStamp()", file="Cash.cs", label="return DateTimeToUnixTimeStamp(DateTime.UtcNow);", span="138-138"];
m7_26 [cluster="QuantConnect.Time.TimeStamp()", file="Cash.cs", label="Exit QuantConnect.Time.TimeStamp()", span="136-136"];
m7_13 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="Cash.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m7_60 [cluster="QuantConnect.Time.TradableDate(QuantConnect.Securities.SecurityManager, System.DateTime)", file="Cash.cs", label="Entry QuantConnect.Time.TradableDate(QuantConnect.Securities.SecurityManager, System.DateTime)", span="220-220"];
m7_61 [cluster="QuantConnect.Time.TradableDate(QuantConnect.Securities.SecurityManager, System.DateTime)", file="Cash.cs", label="securities.Values", span="224-224"];
m7_62 [cluster="QuantConnect.Time.TradableDate(QuantConnect.Securities.SecurityManager, System.DateTime)", file="Cash.cs", label="security.Exchange.IsOpenDuringBar(day.Date, day.Date.AddDays(1), security.IsExtendedMarketHours)", span="226-226"];
m7_65 [cluster="QuantConnect.Time.TradableDate(QuantConnect.Securities.SecurityManager, System.DateTime)", file="Cash.cs", label="Log.Error(''Time.TradeableDate(): '' + err.Message)", span="231-231"];
m7_66 [cluster="QuantConnect.Time.TradableDate(QuantConnect.Securities.SecurityManager, System.DateTime)", file="Cash.cs", label="return false;", span="233-233"];
m7_63 [cluster="QuantConnect.Time.TradableDate(QuantConnect.Securities.SecurityManager, System.DateTime)", file="Cash.cs", label="return true;", span="226-226"];
m7_64 [cluster="QuantConnect.Time.TradableDate(QuantConnect.Securities.SecurityManager, System.DateTime)", file="Cash.cs", label=Exception, span="229-229"];
m7_67 [cluster="QuantConnect.Time.TradableDate(QuantConnect.Securities.SecurityManager, System.DateTime)", file="Cash.cs", label="Exit QuantConnect.Time.TradableDate(QuantConnect.Securities.SecurityManager, System.DateTime)", span="220-220"];
m7_44 [cluster="string.Substring(int, int)", file="Cash.cs", label="Entry string.Substring(int, int)", span="0-0"];
m7_79 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Cash.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
m7_43 [cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="Cash.cs", label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m7_52 [cluster="System.DateTime.AddDays(double)", file="Cash.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m7_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="Cash.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m7_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="Cash.cs", label="RequestId = requestId", span="45-45"];
m7_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="Cash.cs", label="Contract = contract", span="46-46"];
m7_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="Cash.cs", label="Execution = execution", span="47-47"];
m7_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="Cash.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m7_14 [cluster="System.DateTime.AddSeconds(double)", file="Cash.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m7_53 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", span="202-202"];
m7_56 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="TradableDate(securities, day)", span="206-206"];
m7_54 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="var day = from.Date", span="204-204"];
m7_55 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="day.Date <= thru.Date", span="204-204"];
m7_57 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="yield return day;", span="208-208"];
m7_58 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="day = day.AddDays(1)", span="204-204"];
m7_59 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="Cash.cs", label="Exit QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", span="202-202"];
m7_68 [cluster="QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", file="Cash.cs", label="Entry QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", span="202-202"];
m8_72 [cluster="Unk.Single", file="CashTests.cs", label="Entry Unk.Single", span=""];
m8_49 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="CashTests.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m8_44 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="CashTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="91-91"];
m8_9 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooShort()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooShort()", span="52-52"];
m8_10 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooShort()", file="CashTests.cs", label="var cash = new Cash(''s'', 0, 0)", span="54-54"];
m8_11 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooShort()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooShort()", span="52-52"];
m8_171 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="CashTests.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83"];
m8_42 [cluster="QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", file="CashTests.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, QuantConnect.Securities.Cash)", span="176-176"];
m8_153 [cluster="lambda expression", file="CashTests.cs", label="Entry lambda expression", span="196-196"];
m8_52 [cluster="lambda expression", file="CashTests.cs", label="Entry lambda expression", span="91-91"];
m8_55 [cluster="lambda expression", file="CashTests.cs", label="Entry lambda expression", span="92-92"];
m8_53 [cluster="lambda expression", file="CashTests.cs", label="x.Symbol == Symbols.USDJPY", span="91-91"];
m8_54 [cluster="lambda expression", file="CashTests.cs", label="Exit lambda expression", span="91-91"];
m8_56 [cluster="lambda expression", file="CashTests.cs", label="x.Symbol == Symbols.USDJPY", span="92-92"];
m8_57 [cluster="lambda expression", file="CashTests.cs", label="Exit lambda expression", span="92-92"];
m8_73 [cluster="lambda expression", file="CashTests.cs", label="Entry lambda expression", span="111-111"];
m8_74 [cluster="lambda expression", file="CashTests.cs", label="x.Symbol == Symbols.USDJPY", span="111-111"];
m8_75 [cluster="lambda expression", file="CashTests.cs", label="Exit lambda expression", span="111-111"];
m8_90 [cluster="lambda expression", file="CashTests.cs", label="Entry lambda expression", span="128-128"];
m8_91 [cluster="lambda expression", file="CashTests.cs", label="x.Symbol == Symbols.USDJPY", span="128-128"];
m8_92 [cluster="lambda expression", file="CashTests.cs", label="Exit lambda expression", span="128-128"];
m8_107 [cluster="lambda expression", file="CashTests.cs", label="Entry lambda expression", span="146-146"];
m8_108 [cluster="lambda expression", file="CashTests.cs", label="x.Symbol == Symbols.USDJPY", span="146-146"];
m8_109 [cluster="lambda expression", file="CashTests.cs", label="Exit lambda expression", span="146-146"];
m8_130 [cluster="lambda expression", file="CashTests.cs", label="Entry lambda expression", span="168-168"];
m8_133 [cluster="lambda expression", file="CashTests.cs", label="Entry lambda expression", span="172-172"];
m8_131 [cluster="lambda expression", file="CashTests.cs", label="x.Symbol == Symbols.USDJPY", span="168-168"];
m8_132 [cluster="lambda expression", file="CashTests.cs", label="Exit lambda expression", span="168-168"];
m8_134 [cluster="lambda expression", file="CashTests.cs", label="x.Symbol == Symbols.GBPUSD", span="172-172"];
m8_135 [cluster="lambda expression", file="CashTests.cs", label="Exit lambda expression", span="172-172"];
m8_155 [cluster="lambda expression", file="CashTests.cs", label="Exit lambda expression", span="196-196"];
m8_0 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", span="37-37"];
m8_1 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", file="CashTests.cs", label="var cash = new Cash(''low'', 0, 0)", span="39-39"];
m8_2 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", file="CashTests.cs", label="Assert.AreEqual(''LOW'', cash.Symbol)", span="40-40"];
m8_3 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", span="37-37"];
m8_106 [cluster="Unk.IsFalse", file="CashTests.cs", label="Entry Unk.IsFalse", span=""];
m8_170 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="CashTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m8_21 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", span="70-70"];
m8_22 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", file="CashTests.cs", label="int quantity = 100", span="72-72"];
m8_23 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", file="CashTests.cs", label="decimal conversionRate = 1/100m", span="73-73"];
m8_24 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", file="CashTests.cs", label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="74-74"];
m8_25 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", file="CashTests.cs", label="Assert.AreEqual(quantity*conversionRate, cash.ValueInAccountCurrency)", span="75-75"];
m8_26 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", span="70-70"];
m8_48 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="CashTests.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m8_41 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="CashTests.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="50-50"];
m8_93 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", span="133-133"];
m8_94 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="int quantity = 100", span="135-135"];
m8_95 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="decimal conversionRate = 1 / 100m", span="136-136"];
m8_96 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="137-137"];
m8_97 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="var cashBook = new CashBook()", span="138-138"];
m8_98 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="cashBook.Add(''JPY'', cash)", span="139-139"];
m8_102 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="cash.EnsureCurrencyDataFeed(securities, subscriptions, MarketHoursDatabase.AlwaysOpen, SymbolPropertiesDatabase.FromDataFolder(), MarketMap, cashBook)", span="145-145"];
m8_99 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="141-141"];
m8_100 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="142-142"];
m8_101 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="securities.Add(Symbols.USDJPY, new Security(SecurityExchangeHours, subscriptions.Add(Symbols.USDJPY, Resolution.Minute, TimeZone, TimeZone), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="143-143"];
m8_103 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="var config = subscriptions.Subscriptions.Single(x => x.Symbol == Symbols.USDJPY)", span="146-146"];
m8_104 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="Assert.IsFalse(config.IsInternalFeed)", span="147-147"];
m8_105 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", span="133-133"];
m8_45 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="CashTests.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m8_89 [cluster="Unk.IsTrue", file="CashTests.cs", label="Entry Unk.IsTrue", span=""];
m8_136 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedForCryptoCurrency()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedForCryptoCurrency()", span="177-177"];
m8_148 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedForCryptoCurrency()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedForCryptoCurrency()", span="177-177"];
m8_12 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", span="58-58"];
m8_13 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs", label="string symbol = ''JPY''", span="60-60"];
m8_14 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs", label="int quantity = 1", span="61-61"];
m8_16 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs", label="var cash = new Cash(symbol, quantity, conversionRate)", span="63-63"];
m8_17 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs", label="Assert.AreEqual(symbol, cash.Symbol)", span="64-64"];
m8_15 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs", label="decimal conversionRate = 1.2m", span="62-62"];
m8_18 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs", label="Assert.AreEqual(quantity, cash.Amount)", span="65-65"];
m8_19 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs", label="Assert.AreEqual(conversionRate, cash.ConversionRate)", span="66-66"];
m8_20 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", span="58-58"];
m8_129 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="CashTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m8_76 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", span="115-115"];
m8_77 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="int quantity = 100", span="117-117"];
m8_78 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="decimal conversionRate = 1 / 100m", span="118-118"];
m8_79 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="119-119"];
m8_80 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="var cashBook = new CashBook()", span="120-120"];
m8_81 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="cashBook.Add(''JPY'', cash)", span="121-121"];
m8_85 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="cash.EnsureCurrencyDataFeed(securities, subscriptions, MarketHoursDatabase.AlwaysOpen, SymbolPropertiesDatabase.FromDataFolder(), MarketMap, cashBook)", span="127-127"];
m8_82 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="123-123"];
m8_83 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="124-124"];
m8_84 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="securities.Add(Symbols.EURUSD, new Security(SecurityExchangeHours, subscriptions.Add(Symbols.EURUSD, Resolution.Minute, TimeZone, TimeZone), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="125-125"];
m8_86 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="var config = subscriptions.Subscriptions.Single(x => x.Symbol == Symbols.USDJPY)", span="128-128"];
m8_87 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="Assert.IsTrue(config.IsInternalFeed)", span="129-129"];
m8_88 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", span="115-115"];
m8_172 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", span="230-230"];
m8_173 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="int quantity = 100", span="232-232"];
m8_174 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="decimal conversionRate = 1 / 100m", span="233-233"];
m8_175 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="var cash = new Cash(''GBP'', quantity, conversionRate)", span="234-234"];
m8_176 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="var cashBook = new CashBook()", span="235-235"];
m8_177 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="cashBook.Add(''GBP'', cash)", span="236-236"];
m8_181 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="cash.EnsureCurrencyDataFeed(securities, subscriptions, MarketHoursDatabase.AlwaysOpen, SymbolPropertiesDatabase.FromDataFolder(), MarketMap, cashBook)", span="243-243"];
m8_183 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="cash.Update(new Tick(DateTime.Now, Symbols.GBPUSD, last, last * 1.009m, last * 0.009m))", span="246-246"];
m8_184 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="Assert.AreEqual(last, cash.ConversionRate)", span="249-249"];
m8_178 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="238-238"];
m8_179 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="239-239"];
m8_180 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="securities.Add(Symbols.GBPUSD, new Security(SecurityExchangeHours, subscriptions.Add(Symbols.GBPUSD, Resolution.Minute, TimeZone, TimeZone), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="240-240"];
m8_182 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="var last = 1.5m", span="245-245"];
m8_185 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", span="230-230"];
m8_27 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", span="79-79"];
m8_28 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="int quantity = 100", span="81-81"];
m8_29 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="decimal conversionRate = 1 / 100m", span="82-82"];
m8_30 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="83-83"];
m8_31 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="var cashBook = new CashBook()", span="84-84"];
m8_32 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="cashBook.Add(''JPY'', cash)", span="85-85"];
m8_37 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="cash.EnsureCurrencyDataFeed(securities, subscriptions, MarketHoursDatabase.AlwaysOpen, SymbolPropertiesDatabase.FromDataFolder(), MarketMap, cashBook)", span="90-90"];
m8_33 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="86-86"];
m8_34 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="var abcConfig = subscriptions.Add(Symbols.SPY, Resolution.Minute, TimeZone, TimeZone)", span="87-87"];
m8_38 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="Assert.AreEqual(1, subscriptions.Subscriptions.Count(x => x.Symbol == Symbols.USDJPY))", span="91-91"];
m8_35 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="88-88"];
m8_36 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, abcConfig, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="89-89"];
m8_39 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="Assert.AreEqual(1, securities.Values.Count(x => x.Symbol == Symbols.USDJPY))", span="92-92"];
m8_40 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", span="79-79"];
m8_5 [cluster="Unk.AreEqual", file="CashTests.cs", label="Entry Unk.AreEqual", span=""];
m8_43 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="CashTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m8_6 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooLong()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooLong()", span="45-45"];
m8_7 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooLong()", file="CashTests.cs", label="var cash = new Cash(''too long'', 0, 0)", span="47-47"];
m8_8 [cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooLong()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooLong()", span="45-45"];
m8_149 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="CashTests.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78"];
m8_46 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="CashTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="317-317"];
m8_156 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", span="207-207"];
m8_157 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="int quantity = 100", span="209-209"];
m8_158 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="decimal conversionRate = 1 / 100m", span="210-210"];
m8_159 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="211-211"];
m8_160 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="var cashBook = new CashBook()", span="212-212"];
m8_161 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="cashBook.Add(''JPY'', cash)", span="213-213"];
m8_165 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="cash.EnsureCurrencyDataFeed(securities, subscriptions, MarketHoursDatabase.AlwaysOpen, SymbolPropertiesDatabase.FromDataFolder(), MarketMap, cashBook)", span="220-220"];
m8_167 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="cash.Update(new Tick(DateTime.Now, Symbols.USDJPY, last, 119.95m, 120.05m))", span="223-223"];
m8_168 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="Assert.AreEqual(1 / last, cash.ConversionRate)", span="226-226"];
m8_162 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="215-215"];
m8_163 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="216-216"];
m8_164 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="securities.Add(Symbols.USDJPY, new Security(SecurityExchangeHours, subscriptions.Add(Symbols.USDJPY, Resolution.Minute, TimeZone, TimeZone), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="217-217"];
m8_166 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="var last = 120m", span="222-222"];
m8_169 [cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", span="207-207"];
m8_58 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", span="96-96"];
m8_59 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=0, file="CashTests.cs", label="int quantity = 100", prediction=1, span="98-98"];
m8_60 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=0, file="CashTests.cs", label="decimal conversionRate = 1 / 100m", prediction=2, span="99-99"];
m8_62 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=1, file="CashTests.cs", label="var cash = new Cash(''JPY'', quantity, conversionRate)", prediction=3, span="101-101"];
m8_61 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=0, file="CashTests.cs", label="Resolution minimumResolution = Resolution.Second", prediction=4, span="100-100"];
m8_68 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=0, file="CashTests.cs", label="securities.Add(Symbols.EURUSD, new Security(SecurityExchangeHours, subscriptions.Add(Symbols.EURUSD, minimumResolution, TimeZone, TimeZone), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", prediction=4, span="108-108"];
m8_70 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs", label="Assert.AreEqual(minimumResolution, subscriptions.Subscriptions.Single(x => x.Symbol == Symbols.USDJPY).Resolution)", span="111-111"];
m8_63 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=1, file="CashTests.cs", label="var cashBook = new CashBook()", prediction=6, span="102-102"];
m8_64 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=1, file="CashTests.cs", label="cashBook.Add(''JPY'', cash)", prediction=3, span="103-103"];
m8_69 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs", label="cash.EnsureCurrencyDataFeed(securities, subscriptions, MarketHoursDatabase.AlwaysOpen, SymbolPropertiesDatabase.FromDataFolder(), MarketMap, cashBook)", span="110-110"];
m8_65 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=0, file="CashTests.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", prediction=4, span="105-105"];
m8_66 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=0, file="CashTests.cs", label="var securities = new SecurityManager(TimeKeeper)", prediction=4, span="106-106"];
m8_67 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=0, file="CashTests.cs", label="securities.Add(Symbols.SPY, new Security(SecurityExchangeHours, subscriptions.Add(Symbols.SPY, Resolution.Minute, TimeZone, TimeZone), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", prediction=4, span="107-107"];
m8_71 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", span="96-96"];
m8_110 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="Entry QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", span="151-151"];
m8_111 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="int quantity = 100", span="153-153"];
m8_112 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="decimal conversionRate = 1 / 100m", span="154-154"];
m8_113 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="var cashJPY = new Cash(''JPY'', quantity, conversionRate)", span="155-155"];
m8_114 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="var cashGBP = new Cash(''GBP'', quantity, conversionRate)", span="156-156"];
m8_116 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="cashBook.Add(''JPY'', cashJPY)", span="158-158"];
m8_122 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="cashJPY.EnsureCurrencyDataFeed(securities, subscriptions, MarketHoursDatabase.AlwaysOpen, SymbolPropertiesDatabase.FromDataFolder(), MarketMap, cashBook)", span="167-167"];
m8_115 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="var cashBook = new CashBook()", span="157-157"];
m8_117 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="cashBook.Add(''GBP'', cashGBP)", span="159-159"];
m8_125 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="cashGBP.EnsureCurrencyDataFeed(securities, subscriptions, MarketHoursDatabase.AlwaysOpen, SymbolPropertiesDatabase.FromDataFolder(), MarketMap, cashBook)", span="171-171"];
m8_118 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="var symbol = Symbol.Create(''GBPJPY'', SecurityType.Forex, Market.FXCM)", span="161-161"];
m8_119 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="var subscriptions = new SubscriptionManager(AlgorithmSettings, TimeKeeper)", span="163-163"];
m8_121 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="securities.Add(symbol, new Security(SecurityExchangeHours, subscriptions.Add(symbol, Resolution.Minute, TimeZone, TimeZone), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="165-165"];
m8_120 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="var securities = new SecurityManager(TimeKeeper)", span="164-164"];
m8_123 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="var config1 = subscriptions.Subscriptions.Single(x => x.Symbol == Symbols.USDJPY)", span="168-168"];
m8_126 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="var config2 = subscriptions.Subscriptions.Single(x => x.Symbol == Symbols.GBPUSD)", span="172-172"];
m8_124 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="Assert.IsTrue(config1.IsInternalFeed)", span="169-169"];
m8_127 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="Assert.IsTrue(config2.IsInternalFeed)", span="173-173"];
m8_128 [cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", file="CashTests.cs", label="Exit QuantConnect.Tests.Common.Securities.CashTests.EnsureInternalCurrencyDataFeedsForNonUsdQuoteCurrencyGetAdded()", span="151-151"];
m8_47 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="CashTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m8_4 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="CashTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m8_51 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="CashTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m8_152 [cluster="Unk.Contains", file="CashTests.cs", label="Entry Unk.Contains", span=""];
m8_151 [cluster="Unk.ToHashSet", file="CashTests.cs", label="Entry Unk.ToHashSet", span=""];
m8_50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", file="CashTests.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>, QuantConnect.Securities.CashBook)", span="133-133"];
m8_150 [cluster="Unk.Select", file="CashTests.cs", label="Entry Unk.Select", span=""];
m9_4 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", span="83-83"];
m9_12 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", color=green, community=0, file="CollectionSubscriptionDataSourceReader.cs", label="Forex.DecomposeCurrencyPair(holding.Symbol, out basec, out quotec)", prediction=11, span="95-95"];
m9_11 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="CollectionSubscriptionDataSourceReader.cs", label="string basec, quotec", span="94-94"];
m9_13 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", color=green, community=0, file="CollectionSubscriptionDataSourceReader.cs", label="CurrencySymbol = Forex.CurrencySymbols[quotec]", prediction=12, span="96-96"];
m9_14 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", color=green, community=0, file="CollectionSubscriptionDataSourceReader.cs", label="ConversionRate = ((ForexHolding) holding).ConversionRate", prediction=13, span="97-97"];
m9_15 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", color=green, community=0, file="CollectionSubscriptionDataSourceReader.cs", label="AveragePrice = Math.Round(holding.AveragePrice, rounding)", prediction=14, span="100-100"];
m9_9 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="CollectionSubscriptionDataSourceReader.cs", label="holding.Type == SecurityType.Forex", span="91-91"];
m9_8 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="CollectionSubscriptionDataSourceReader.cs", label="var rounding = 2", span="90-90"];
m9_10 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", color=green, community=0, file="CollectionSubscriptionDataSourceReader.cs", label="rounding = 5", prediction=15, span="93-93"];
m9_16 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="CollectionSubscriptionDataSourceReader.cs", label="MarketPrice = Math.Round(holding.Price, rounding)", span="101-101"];
m9_5 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="CollectionSubscriptionDataSourceReader.cs", label="Symbol = holding.Symbol", span="86-86"];
m9_6 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="CollectionSubscriptionDataSourceReader.cs", label="Type = holding.Type", span="87-87"];
m9_7 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="CollectionSubscriptionDataSourceReader.cs", label="Quantity = holding.Quantity", span="88-88"];
m9_17 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", span="83-83"];
m9_0 [cluster="QuantConnect.Holding.Holding()", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Holding.Holding()", span="73-73"];
m9_1 [cluster="QuantConnect.Holding.Holding()", color=green, community=0, file="CollectionSubscriptionDataSourceReader.cs", label="CurrencySymbol = ''$''", prediction=16, span="75-75"];
m9_2 [cluster="QuantConnect.Holding.Holding()", file="CollectionSubscriptionDataSourceReader.cs", label="ConversionRate = 1m", span="76-76"];
m9_3 [cluster="QuantConnect.Holding.Holding()", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Holding.Holding()", span="73-73"];
m9_28 [cluster="string.Format(string, params object[])", file="CollectionSubscriptionDataSourceReader.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m9_20 [cluster="QuantConnect.Holding.Clone()", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Holding.Clone()", span="108-108"];
m9_21 [cluster="QuantConnect.Holding.Clone()", color=green, community=0, file="CollectionSubscriptionDataSourceReader.cs", label="return new Holding\r\n            {\r\n                AveragePrice = AveragePrice,\r\n                Symbol = Symbol,\r\n                Type = Type,\r\n                Quantity = Quantity,\r\n                MarketPrice = MarketPrice,\r\n                ConversionRate  = ConversionRate,\r\n                CurrencySymbol = CurrencySymbol\r\n            };", prediction=17, span="110-119"];
m9_22 [cluster="QuantConnect.Holding.Clone()", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Holding.Clone()", span="108-108"];
m9_18 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="83-83"];
m9_23 [cluster="QuantConnect.Holding.ToString()", file="CollectionSubscriptionDataSourceReader.cs", label="Entry QuantConnect.Holding.ToString()", span="125-125"];
m9_24 [cluster="QuantConnect.Holding.ToString()", file="CollectionSubscriptionDataSourceReader.cs", label="ConversionRate == 1.0m", span="127-127"];
m9_25 [cluster="QuantConnect.Holding.ToString()", file="CollectionSubscriptionDataSourceReader.cs", label="return string.Format(''{0}: {1} @ {2}{3} - Market: {2}{4}'', Symbol, Quantity, CurrencySymbol, AveragePrice, MarketPrice);", span="129-129"];
m9_26 [cluster="QuantConnect.Holding.ToString()", file="CollectionSubscriptionDataSourceReader.cs", label="return string.Format(''{0}: {1} @ {2}{3} - Market: {2}{4} - Conversion: {5}'', Symbol, Quantity, CurrencySymbol, AveragePrice, MarketPrice, ConversionRate);", span="131-131"];
m9_27 [cluster="QuantConnect.Holding.ToString()", file="CollectionSubscriptionDataSourceReader.cs", label="Exit QuantConnect.Holding.ToString()", span="125-125"];
m9_19 [cluster="System.Math.Round(decimal, int)", file="CollectionSubscriptionDataSourceReader.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m9_33 [file="CollectionSubscriptionDataSourceReader.cs", label="QuantConnect.Holding", span=""];
m10_81 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="Entry QuantConnect.Compression.UnzipData(byte[])", span="195-195"];
m10_92 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="Log.Error(err)", span="232-232"];
m10_89 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="216-216"];
m10_91 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label=Exception, span="230-230"];
m10_93 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="return data;", span="234-234"];
m10_84 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="var zipStream = new ZipInputStream(ms)", span="205-205"];
m10_86 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="var entry = zipStream.GetNextEntry()", span="210-210"];
m10_88 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="var buffer = new byte[entry.Size]", span="215-215"];
m10_90 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="data.Add(entry.Name, buffer.GetString())", span="219-219"];
m10_85 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label=true, span="207-207"];
m10_87 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="entry != null", span="212-212"];
m10_82 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="var data = new Dictionary<string, string>()", span="198-198"];
m10_83 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="var ms = new MemoryStream(zipData)", span="202-202"];
m10_94 [cluster="QuantConnect.Compression.UnzipData(byte[])", file="Compression.cs", label="Exit QuantConnect.Compression.UnzipData(byte[])", span="195-195"];
m10_293 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Compression.cs", label="Exit QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="623-623"];
m10_290 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Compression.cs", label="var entryReader = new StreamReader(entry.OpenReader())", span="625-625"];
m10_289 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Compression.cs", label="Entry QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", span="623-623"];
m10_291 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Compression.cs", label="!entryReader.EndOfStream", span="627-627"];
m10_292 [cluster="QuantConnect.Compression.ReadZipEntry(Ionic.Zip.ZipEntry)", file="Compression.cs", label="yield return entryReader.ReadLine();", span="629-629"];
m10_80 [cluster="ZipFile.cstr", file="Compression.cs", label="Entry ZipFile.cstr", span=""];
m10_158 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="stream.PutNextEntry(entry)", span="348-348"];
m10_156 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="345-345"];
m10_157 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="var entry = new ZipEntry(zipEntry)", span="347-347"];
m10_155 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="Entry QuantConnect.Compression.Zip(string, string, string)", span="343-343"];
m10_163 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="stream.Write(buffer, 0, sourceBytes)", span="356-356"];
m10_160 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="var dataReader = new MemoryStream(Encoding.Default.GetBytes(data))", span="350-350"];
m10_162 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="sourceBytes = dataReader.Read(buffer, 0, buffer.Length)", span="355-355"];
m10_159 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="var buffer = new byte[4096]", span="349-349"];
m10_164 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="sourceBytes > 0", span="358-358"];
m10_161 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="int sourceBytes", span="352-352"];
m10_165 [cluster="QuantConnect.Compression.Zip(string, string, string)", file="Compression.cs", label="Exit QuantConnect.Compression.Zip(string, string, string)", span="343-343"];
m10_340 [cluster="string.LastIndexOf(char)", file="Compression.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m10_148 [cluster="System.IO.File.OpenRead(string)", file="Compression.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m10_19 [cluster="Unk.SetLevel", file="Compression.cs", label="Entry Unk.SetLevel", span=""];
m10_47 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="Compression.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m10_137 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="stream.PutNextEntry(entry)", span="306-306"];
m10_144 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="File.Delete(source)", span="323-323"];
m10_133 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.Zip(string, string, string, bool)", span="297-297"];
m10_143 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label=deleteOriginal, span="321-321"];
m10_145 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label=Exception, span="326-326"];
m10_146 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="Log.Error(err)", span="328-328"];
m10_134 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="var buffer = new byte[4096]", span="301-301"];
m10_135 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="var stream = new ZipOutputStream(File.Create(destination))", span="302-302"];
m10_136 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="var entry = new ZipEntry(zipEntryName)", span="305-305"];
m10_138 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="var fs = File.OpenRead(source)", span="308-308"];
m10_142 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="sourceBytes > 0", span="316-316"];
m10_140 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="sourceBytes = fs.Read(buffer, 0, buffer.Length)", span="313-313"];
m10_141 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="stream.Write(buffer, 0, sourceBytes)", span="314-314"];
m10_139 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="int sourceBytes", span="310-310"];
m10_147 [cluster="QuantConnect.Compression.Zip(string, string, string, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.Zip(string, string, string, bool)", span="297-297"];
m10_23 [cluster="Unk.Write", file="Compression.cs", label="Entry Unk.Write", span=""];
m10_61 [cluster="StreamWriter.cstr", file="Compression.cs", label="Entry StreamWriter.cstr", span=""];
m10_98 [cluster="byte[].GetString(System.Text.Encoding)", file="Compression.cs", label="Entry byte[].GetString(System.Text.Encoding)", span="85-85"];
m10_262 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Compression.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m10_404 [cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="Compression.cs", label="Exit QuantConnect.Compression.GetZipEntryFileNames(string)", span="859-859"];
m10_401 [cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="Compression.cs", label="var zip = ZipFile.Read(zipFileName)", span="861-861"];
m10_400 [cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="Compression.cs", label="Entry QuantConnect.Compression.GetZipEntryFileNames(string)", span="859-859"];
m10_402 [cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="Compression.cs", label=zip, span="863-863"];
m10_403 [cluster="QuantConnect.Compression.GetZipEntryFileNames(string)", file="Compression.cs", label="yield return entry.FileName;", span="865-865"];
m10_308 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="Compression.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m10_273 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="Log.Error(''Compression.ReadFirstZipEntry(): File does not exist: '' + filename)", span="591-591"];
m10_272 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="!File.Exists(filename)", span="589-589"];
m10_275 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="return ReadLinesImpl(filename, firstEntryOnly: true).Single().Value;", span="597-597"];
m10_271 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="Entry QuantConnect.Compression.ReadLines(string)", span="587-587"];
m10_277 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="Log.Error(err)", span="601-601"];
m10_274 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="return Enumerable.Empty<string>();", span="592-592"];
m10_278 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="return Enumerable.Empty<string>();", span="603-603"];
m10_276 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label=Exception, span="599-599"];
m10_279 [cluster="QuantConnect.Compression.ReadLines(string)", file="Compression.cs", label="Exit QuantConnect.Compression.ReadLines(string)", span="587-587"];
m10_377 [cluster="System.IO.MemoryStream.ToArray()", file="Compression.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m10_21 [cluster="System.Text.Encoding.GetBytes(string)", file="Compression.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m10_345 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Compression.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m10_100 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipBytes(byte[], string)", span="243-243"];
m10_102 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Compression.cs", label="var archive = new ZipArchive(memoryStream, ZipArchiveMode.Create, true)", span="246-246"];
m10_105 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Compression.cs", label="entryStream.Write(bytes, 0, bytes.Length)", span="251-251"];
m10_101 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Compression.cs", label="var memoryStream = new MemoryStream()", span="245-245"];
m10_103 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Compression.cs", label="var entry = archive.CreateEntry(zipEntryName)", span="248-248"];
m10_104 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Compression.cs", label="var entryStream = entry.Open()", span="249-249"];
m10_106 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Compression.cs", label="return memoryStream.GetBuffer();", span="254-254"];
m10_107 [cluster="QuantConnect.Compression.ZipBytes(byte[], string)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipBytes(byte[], string)", span="243-243"];
m10_309 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", span="671-671"];
m10_310 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="Compression.cs", label="zipFile = ZipFile.Read(zipstream)", span="673-673"];
m10_315 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Log.Error(err)", span="687-687"];
m10_311 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="Compression.cs", label="var entry = zipFile.Entries.FirstOrDefault()", span="678-678"];
m10_313 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="Compression.cs", label="return entry.OpenReader();", span="682-682"];
m10_316 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="Compression.cs", label="return null;", span="690-690"];
m10_314 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="Compression.cs", label=Exception, span="685-685"];
m10_312 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="Compression.cs", label="entry != null", span="680-680"];
m10_317 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Exit QuantConnect.Compression.UnzipStream(System.IO.Stream, out Ionic.Zip.ZipFile)", span="671-671"];
m10_247 [cluster="System.IO.StreamReader.Close()", file="Compression.cs", label="Entry System.IO.StreamReader.Close()", span="0-0"];
m10_353 [cluster="Unk.CreateInputTarArchive", file="Compression.cs", label="Entry Unk.CreateInputTarArchive", span=""];
m10_393 [cluster="System.Math.Max(int, int)", file="Compression.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m10_27 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Compression.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m10_78 [cluster="Unk.AddEntry", file="Compression.cs", label="Entry Unk.AddEntry", span=""];
m10_339 [cluster="System.Collections.Generic.List<T>.List()", file="Compression.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m10_175 [cluster="QuantConnect.Compression.PathEncoder.PathEncoder()", file="Compression.cs", label="Entry QuantConnect.Compression.PathEncoder.PathEncoder()", span="388-388"];
m10_355 [cluster="System.IO.Stream.Close()", file="Compression.cs", label="Entry System.IO.Stream.Close()", span="0-0"];
m10_176 [cluster="Unk.CreateFromDirectory", file="Compression.cs", label="Entry Unk.CreateFromDirectory", span=""];
m10_249 [cluster="lambda expression", file="Compression.cs", label="Entry lambda expression", span="507-507"];
m10_250 [cluster="lambda expression", file="Compression.cs", label="zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0", span="507-507"];
m10_251 [cluster="lambda expression", file="Compression.cs", label="Exit lambda expression", span="507-507"];
m10_4 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="var entry = new ZipEntry(filename)", span="55-55"];
m10_15 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="return true;", span="73-73"];
m10_14 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="return false;", span="71-71"];
m10_0 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", span="44-44"];
m10_11 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="stream.Close()", span="65-65"];
m10_13 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="Log.Error(err)", span="70-70"];
m10_1 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="49-49"];
m10_3 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="filenamesAndData.Keys", span="52-52"];
m10_5 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="var data = filenamesAndData[filename]", span="56-56"];
m10_10 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="stream.Finish()", span="64-64"];
m10_12 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label=Exception, span="68-68"];
m10_2 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="stream.SetLevel(0)", span="51-51"];
m10_7 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="stream.PutNextEntry(entry)", span="58-58"];
m10_8 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="stream.Write(bytes, 0, bytes.Length)", span="59-59"];
m10_9 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="stream.CloseEntry()", span="60-60"];
m10_6 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="var bytes = Encoding.Default.GetBytes(data)", span="57-57"];
m10_16 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.Dictionary<string, string>)", span="44-44"];
m10_395 [cluster="QuantConnect.Compression.ValidateZip(string)", file="Compression.cs", label="Entry QuantConnect.Compression.ValidateZip(string)", span="846-846"];
m10_396 [cluster="QuantConnect.Compression.ValidateZip(string)", file="Compression.cs", label="var zip = new ICSharpCode.SharpZipLib.Zip.ZipFile(path)", span="848-848"];
m10_397 [cluster="QuantConnect.Compression.ValidateZip(string)", file="Compression.cs", label="return zip.TestArchive(true);", span="850-850"];
m10_398 [cluster="QuantConnect.Compression.ValidateZip(string)", file="Compression.cs", label="Exit QuantConnect.Compression.ValidateZip(string)", span="846-846"];
m10_204 [cluster="System.IO.DirectoryInfo.Create()", file="Compression.cs", label="Entry System.IO.DirectoryInfo.Create()", span="0-0"];
m10_376 [cluster="KeyValuePair<string, byte[]>.cstr", file="Compression.cs", label="Entry KeyValuePair<string, byte[]>.cstr", span=""];
m10_24 [cluster="Unk.CloseEntry", file="Compression.cs", label="Entry Unk.CloseEntry", span=""];
m10_122 [cluster="System.IO.Path.GetFileNameWithoutExtension(string)", file="Compression.cs", label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0"];
m10_112 [cluster="System.IO.MemoryStream.GetBuffer()", file="Compression.cs", label="Entry System.IO.MemoryStream.GetBuffer()", span="0-0"];
m10_99 [cluster="Unk.Add", file="Compression.cs", label="Entry Unk.Add", span=""];
m10_150 [cluster="System.IO.File.Delete(string)", file="Compression.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m10_96 [cluster="ZipInputStream.cstr", file="Compression.cs", label="Entry ZipInputStream.cstr", span=""];
m10_246 [cluster="Unk.Dispose", file="Compression.cs", label="Entry Unk.Dispose", span=""];
m10_77 [cluster="Unk.Read", file="Compression.cs", label="Entry Unk.Read", span=""];
m10_203 [cluster="System.IO.FileInfo.FileInfo(string)", file="Compression.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m10_219 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Compression.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m10_181 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.Unzip(string, string, bool)", span="403-403"];
m10_182 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="!File.Exists(zip)", span="405-405"];
m10_184 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="!overwrite", span="409-409"];
m10_185 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="System.IO.Compression.ZipFile.ExtractToDirectory(zip, directory)", span="411-411"];
m10_186 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="var archive = new ZipArchive(File.OpenRead(zip))", span="415-415"];
m10_189 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="var filepath = Path.Combine(directory, file.FullName)", span="421-421"];
m10_183 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="return false;", span="405-405"];
m10_196 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="return true;", span="433-433"];
m10_199 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="return false;", span="438-438"];
m10_187 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="archive.Entries", span="417-417"];
m10_188 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="file.Name == ''''", span="420-420"];
m10_190 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="OS.IsLinux", span="422-422"];
m10_191 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="filepath = filepath.Replace(@''\'', ''/'')", span="422-422"];
m10_192 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="var outputFile = new FileInfo(filepath)", span="423-423"];
m10_198 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="Log.Error(err)", span="437-437"];
m10_195 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="file.ExtractToFile(outputFile.FullName, true)", span="428-428"];
m10_193 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="!outputFile.Directory.Exists", span="424-424"];
m10_194 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="outputFile.Directory.Create()", span="426-426"];
m10_197 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label=Exception, span="435-435"];
m10_200 [cluster="QuantConnect.Compression.Unzip(string, string, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.Unzip(string, string, bool)", span="403-403"];
m10_154 [cluster="System.IO.Path.GetFileName(string)", file="Compression.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m10_252 [cluster="Unk.Compare", file="Compression.cs", label="Entry Unk.Compare", span=""];
m10_299 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="var entry = zipStream.GetNextEntry()", span="649-649"];
m10_296 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="StreamReader reader = null", span="639-639"];
m10_295 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="Entry QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", span="637-637"];
m10_297 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="MemoryStream file", span="643-643"];
m10_305 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="Log.Error(err)", span="662-662"];
m10_298 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="var zipStream = new ZipInputStream(zipstream)", span="646-646"];
m10_301 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="zipStream.Read(buffer, 0, (int)entry.Size)", span="651-651"];
m10_304 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label=Exception, span="660-660"];
m10_306 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="return reader;", span="665-665"];
m10_300 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="var buffer = new byte[entry.Size]", span="650-650"];
m10_302 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="file = new MemoryStream(buffer)", span="654-654"];
m10_303 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="reader = new StreamReader(file)", span="658-658"];
m10_307 [cluster="QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", file="Compression.cs", label="Exit QuantConnect.Compression.UnzipStreamToStreamReader(System.IO.Stream)", span="637-637"];
m10_20 [cluster="ZipEntry.cstr", file="Compression.cs", label="Entry ZipEntry.cstr", span=""];
m10_97 [cluster="Unk.GetNextEntry", file="Compression.cs", label="Entry Unk.GetNextEntry", span=""];
m10_113 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Compression.cs", label="Entry QuantConnect.Compression.UnGZip(string, string)", span="262-262"];
m10_118 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Compression.cs", label="var fileOutput = File.Create(newFileOutput)", span="269-269"];
m10_115 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Compression.cs", label="var newFileOutput = Path.Combine(targetDirectory, Path.GetFileNameWithoutExtension(gzipFileName))", span="266-266"];
m10_117 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Compression.cs", label="var gzipStream = new GZipInputStream(fileStream)", span="268-268"];
m10_119 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Compression.cs", label="StreamUtils.Copy(gzipStream, fileOutput, dataBuffer)", span="271-271"];
m10_114 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Compression.cs", label="var dataBuffer = new byte[4096]", span="265-265"];
m10_116 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Compression.cs", label="Stream fileStream = new FileStream(gzipFileName, FileMode.Open, FileAccess.Read)", span="267-267"];
m10_120 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Compression.cs", label="return newFileOutput;", span="273-273"];
m10_121 [cluster="QuantConnect.Compression.UnGZip(string, string)", file="Compression.cs", label="Exit QuantConnect.Compression.UnGZip(string, string)", span="262-262"];
m10_110 [cluster="Unk.CreateEntry", file="Compression.cs", label="Entry Unk.CreateEntry", span=""];
m10_280 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Compression.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m10_294 [cluster="System.IO.StreamReader.ReadLine()", file="Compression.cs", label="Entry System.IO.StreamReader.ReadLine()", span="0-0"];
m10_33 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="var entry = new ZipEntry(file.Key)", span="95-95"];
m10_29 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="var success = true", span="84-84"];
m10_28 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", span="82-82"];
m10_30 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="var buffer = new byte[4096]", span="85-85"];
m10_41 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="stream.Close()", span="113-113"];
m10_31 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="90-90"];
m10_32 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label=filenamesAndData, span="92-92"];
m10_37 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="sourceBytes = ms.Read(buffer, 0, buffer.Length)", span="104-104"];
m10_38 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="stream.Write(buffer, 0, sourceBytes)", span="105-105"];
m10_43 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="Log.Error(err)", span="118-118"];
m10_40 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="stream.Finish()", span="112-112"];
m10_42 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label=Exception, span="116-116"];
m10_45 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="return success;", span="121-121"];
m10_34 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="stream.PutNextEntry(entry)", span="97-97"];
m10_39 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="sourceBytes > 0", span="107-107"];
m10_35 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="var ms = new MemoryStream(file.Value)", span="99-99"];
m10_36 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="int sourceBytes", span="101-101"];
m10_44 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="success = false", span="119-119"];
m10_46 [cluster="QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipData(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>)", span="82-82"];
m10_124 [cluster="System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", file="Compression.cs", label="Entry System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess)", span="0-0"];
m10_399 [cluster="Unk.TestArchive", file="Compression.cs", label="Entry Unk.TestArchive", span=""];
m10_356 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="Entry QuantConnect.Compression.UnTarGzFiles(string, string)", span="771-771"];
m10_362 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="gzipStream.Close()", span="778-778"];
m10_361 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="tarArchive.Close()", span="777-777"];
m10_358 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="var gzipStream = new GZipInputStream(inStream)", span="774-774"];
m10_363 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="inStream.Close()", span="779-779"];
m10_360 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="tarArchive.ExtractContents(destination)", span="776-776"];
m10_359 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(gzipStream)", span="775-775"];
m10_357 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="var inStream = File.OpenRead(source)", span="773-773"];
m10_364 [cluster="QuantConnect.Compression.UnTarGzFiles(string, string)", file="Compression.cs", label="Exit QuantConnect.Compression.UnTarGzFiles(string, string)", span="771-771"];
m10_346 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="Entry QuantConnect.Compression.UnTarFiles(string, string)", span="757-757"];
m10_350 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="tarArchive.Close()", span="762-762"];
m10_349 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="tarArchive.ExtractContents(destination)", span="761-761"];
m10_348 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="var tarArchive = TarArchive.CreateInputTarArchive(inStream)", span="760-760"];
m10_351 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="inStream.Close()", span="763-763"];
m10_347 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="var inStream = File.OpenRead(source)", span="759-759"];
m10_352 [cluster="QuantConnect.Compression.UnTarFiles(string, string)", file="Compression.cs", label="Exit QuantConnect.Compression.UnTarFiles(string, string)", span="757-757"];
m10_244 [cluster="StreamReader.cstr", file="Compression.cs", label="Entry StreamReader.cstr", span=""];
m10_48 [cluster="System.IO.MemoryStream.Read(byte[], int, int)", file="Compression.cs", label="Entry System.IO.MemoryStream.Read(byte[], int, int)", span="0-0"];
m10_213 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="zipStream.PutNextEntry(entry)", span="461-461"];
m10_210 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="!File.Exists(file)", span="454-454"];
m10_209 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label=files, span="452-452"];
m10_211 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Log.Trace(''ZipFiles(): File does not exist: '' + file)", span="456-456"];
m10_212 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var entry = new ZipEntry(Path.GetFileName(file))", span="460-460"];
m10_217 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Log.Error(err)", span="471-471"];
m10_206 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="445-445"];
m10_208 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var buffer = new byte[4096]", span="451-451"];
m10_215 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="StreamUtils.Copy(fstream, zipStream, buffer)", span="464-464"];
m10_216 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label=Exception, span="469-469"];
m10_214 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var fstream = File.OpenRead(file)", span="462-462"];
m10_207 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var zipStream = new ZipOutputStream(File.Create(destination))", span="449-449"];
m10_218 [cluster="QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipFiles(string, System.Collections.Generic.IEnumerable<string>)", span="445-445"];
m10_354 [cluster="Unk.ExtractContents", file="Compression.cs", label="Entry Unk.ExtractContents", span=""];
m10_243 [cluster="Unk.FirstOrDefault", file="Compression.cs", label="Entry Unk.FirstOrDefault", span=""];
m10_394 [cluster="string.Substring(int)", file="Compression.cs", label="Entry string.Substring(int)", span="0-0"];
m10_125 [cluster="GZipInputStream.cstr", file="Compression.cs", label="Entry GZipInputStream.cstr", span=""];
m10_342 [cluster="ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", file="Compression.cs", label="Entry ICSharpCode.SharpZipLib.Zip.ZipFile.cstr", span=""];
m10_282 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label=firstEntryOnly, span="610-610"];
m10_263 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.ReadLinesImpl(string, bool)", span="606-606"];
m10_281 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="var zip = ZipFile.Read(filename)", span="608-608"];
m10_284 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="613-613"];
m10_285 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="yield break;", span="614-614"];
m10_287 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="618-618"];
m10_286 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label=zip, span="616-616"];
m10_283 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="var entry = zip[0]", span="612-612"];
m10_288 [cluster="QuantConnect.Compression.ReadLinesImpl(string, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.ReadLinesImpl(string, bool)", span="606-606"];
m10_123 [cluster="System.IO.Path.Combine(string, string)", file="Compression.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m10_111 [cluster="Unk.Open", file="Compression.cs", label="Entry Unk.Open", span=""];
m10_371 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="tar.CopyEntryContents(output)", span="799-799"];
m10_366 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="var tar = new TarInputStream(isTarGz ? (Stream)new GZipInputStream(stream) : stream)", span="790-790"];
m10_368 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="(entry = tar.GetNextEntry()) != null", span="793-793"];
m10_365 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="788-788"];
m10_367 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="TarEntry entry", span="792-792"];
m10_372 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="yield return new KeyValuePair<string, byte[]>(entry.Name, output.ToArray());", span="800-800"];
m10_369 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="entry.IsDirectory", span="795-795"];
m10_370 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="var output = new MemoryStream()", span="797-797"];
m10_373 [cluster="QuantConnect.Compression.UnTar(System.IO.Stream, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.UnTar(System.IO.Stream, bool)", span="788-788"];
m10_270 [cluster="Unk.ReadZipEntry", file="Compression.cs", label="Entry Unk.ReadZipEntry", span=""];
m10_245 [cluster="Unk.OpenReader", file="Compression.cs", label="Entry Unk.OpenReader", span=""];
m10_344 [cluster="Unk.GetInputStream", file="Compression.cs", label="Entry Unk.GetInputStream", span=""];
m10_328 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="!zipEntry.IsFile", span="718-718"];
m10_324 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="ICSharpCode.SharpZipLib.Zip.ZipFile zf = null", span="708-708"];
m10_323 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="outFolder = zipFile.Substring(0, slash)", span="706-706"];
m10_322 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="slash > 0", span="704-704"];
m10_325 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var fs = File.OpenRead(zipFile)", span="712-712"];
m10_318 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="Entry QuantConnect.Compression.UnzipToFolder(string)", span="698-698"];
m10_320 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var slash = zipFile.LastIndexOf(Path.DirectorySeparatorChar)", span="702-702"];
m10_333 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var fullZipToPath = Path.Combine(outFolder, entryFileName)", span="728-728"];
m10_321 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var outFolder = ''''", span="703-703"];
m10_326 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="zf = new ICSharpCode.SharpZipLib.Zip.ZipFile(fs)", span="713-713"];
m10_335 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var streamWriter = File.Create(fullZipToPath)", span="735-735"];
m10_319 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var files = new List<string>()", span="701-701"];
m10_332 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var zipStream = zf.GetInputStream(zipEntry)", span="725-725"];
m10_329 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var entryFileName = Path.GetFileName(zipEntry.Name)", span="721-721"];
m10_334 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="files.Add(fullZipToPath)", span="731-731"];
m10_327 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label=zf, span="715-715"];
m10_336 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="StreamUtils.Copy(zipStream, streamWriter, buffer)", span="737-737"];
m10_337 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="return files;", span="749-749"];
m10_331 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="var buffer = new byte[4096]", span="724-724"];
m10_330 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="entryFileName == null", span="722-722"];
m10_338 [cluster="QuantConnect.Compression.UnzipToFolder(string)", file="Compression.cs", label="Exit QuantConnect.Compression.UnzipToFolder(string)", span="698-698"];
m10_343 [cluster="Unk.GetFileName", file="Compression.cs", label="Entry Unk.GetFileName", span=""];
m10_228 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="var entry = zip.FirstOrDefault(x => zipEntryName == null || string.Compare(x.FileName, zipEntryName, StringComparison.OrdinalIgnoreCase) == 0)", span="507-507"];
m10_225 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", color=green, community=0, file="Compression.cs", label="zip = null", prediction=18, span="498-498"];
m10_224 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="StreamReader reader = null", span="497-497"];
m10_226 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="File.Exists(filename)", span="502-502"];
m10_223 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Entry QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="495-495"];
m10_241 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="return reader;", span="532-532"];
m10_227 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="zip = new ZipFile(filename)", span="506-506"];
m10_238 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Log.Error(''Data.UnZip(2): File doesn't exist: '' + filename)", span="525-525"];
m10_230 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="return null;", span="511-511"];
m10_240 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Log.Error(err, ''File: '' + filename)", span="530-530"];
m10_231 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="reader = new StreamReader(entry.OpenReader())", span="514-514"];
m10_236 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="reader != null", span="520-520"];
m10_237 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="reader.Close()", span="520-520"];
m10_234 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="zip != null", span="519-519"];
m10_235 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="zip.Dispose()", span="519-519"];
m10_239 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label=Exception, span="528-528"];
m10_229 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="entry == null", span="508-508"];
m10_232 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label=Exception, span="516-516"];
m10_233 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Log.Error(err, ''Inner try/catch'')", span="518-518"];
m10_242 [cluster="QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Exit QuantConnect.Compression.Unzip(string, string, out Ionic.Zip.ZipFile)", span="495-495"];
m10_25 [cluster="Unk.Finish", file="Compression.cs", label="Entry Unk.Finish", span=""];
m10_108 [cluster="System.IO.MemoryStream.MemoryStream()", file="Compression.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m10_166 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipDirectory(string, string, bool)", span="370-370"];
m10_169 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", color=green, community=0, file="Compression.cs", label="System.IO.Compression.ZipFile.CreateFromDirectory(directory, destination, CompressionLevel.Fastest, includeRootInZip, new PathEncoder())", prediction=19, span="375-375"];
m10_167 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="File.Exists(destination)", span="374-374"];
m10_168 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="File.Delete(destination)", span="374-374"];
m10_170 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="return true;", span="376-376"];
m10_173 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="return false;", span="381-381"];
m10_172 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="Log.Error(err)", span="380-380"];
m10_171 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label=Exception, span="378-378"];
m10_174 [cluster="QuantConnect.Compression.ZipDirectory(string, string, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipDirectory(string, string, bool)", span="370-370"];
m10_18 [cluster="System.IO.File.Create(string)", file="Compression.cs", label="Entry System.IO.File.Create(string)", span="0-0"];
m10_269 [cluster="KeyValuePair<string, IEnumerable<string>>.cstr", file="Compression.cs", label="Entry KeyValuePair<string, IEnumerable<string>>.cstr", span=""];
m10_264 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Compression.cs", label="Entry QuantConnect.Compression.Unzip(System.IO.Stream)", span="571-571"];
m10_265 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Compression.cs", label="var zip = ZipFile.Read(stream)", span="573-573"];
m10_267 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Compression.cs", label="yield return new KeyValuePair<string, IEnumerable<string>>(entry.FileName, ReadZipEntry(entry));", span="577-577"];
m10_266 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Compression.cs", label=zip, span="575-575"];
m10_268 [cluster="QuantConnect.Compression.Unzip(System.IO.Stream)", file="Compression.cs", label="Exit QuantConnect.Compression.Unzip(System.IO.Stream)", span="571-571"];
m10_151 [cluster="QuantConnect.Compression.Zip(string, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.Zip(string, bool)", span="338-338"];
m10_152 [cluster="QuantConnect.Compression.Zip(string, bool)", file="Compression.cs", label="return Zip(textPath, Path.GetFileName(textPath), deleteOriginal);", span="340-340"];
m10_153 [cluster="QuantConnect.Compression.Zip(string, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.Zip(string, bool)", span="338-338"];
m10_202 [cluster="Unk.Combine", file="Compression.cs", label="Entry Unk.Combine", span=""];
m10_341 [cluster="string.Substring(int, int)", file="Compression.cs", label="Entry string.Substring(int, int)", span="0-0"];
m10_248 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Compression.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m10_126 [cluster="Unk.Copy", file="Compression.cs", label="Entry Unk.Copy", span=""];
m10_220 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Entry QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="482-482"];
m10_221 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="return Unzip(filename, null, out zip);", span="484-484"];
m10_222 [cluster="QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", file="Compression.cs", label="Exit QuantConnect.Compression.Unzip(string, out Ionic.Zip.ZipFile)", span="482-482"];
m10_375 [cluster="Unk.CopyEntryContents", file="Compression.cs", label="Entry Unk.CopyEntryContents", span=""];
m10_253 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="Entry QuantConnect.Compression.Unzip(string)", span="546-546"];
m10_254 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="!File.Exists(filename)", span="548-548"];
m10_257 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="return ReadLinesImpl(filename);", span="556-556"];
m10_255 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="Log.Error(''Compression.Unzip(): File does not exist: '' + filename)", span="550-550"];
m10_259 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="Log.Error(err)", span="560-560"];
m10_256 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="551-551"];
m10_260 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="return Enumerable.Empty<KeyValuePair<string, IEnumerable<string>>>();", span="562-562"];
m10_258 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label=Exception, span="558-558"];
m10_261 [cluster="QuantConnect.Compression.Unzip(string)", file="Compression.cs", label="Exit QuantConnect.Compression.Unzip(string)", span="546-546"];
m10_53 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="stream.PutNextEntry(entry)", span="139-139"];
m10_49 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="131-131"];
m10_50 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var stream = new ZipOutputStream(File.Create(zipPath))", span="135-135"];
m10_52 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var entry = new ZipEntry(zipEntry)", span="138-138"];
m10_54 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label=lines, span="140-140"];
m10_56 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="return true;", span="145-145"];
m10_59 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="return false;", span="150-150"];
m10_51 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="var writer = new StreamWriter(stream)", span="136-136"];
m10_55 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="writer.WriteLine(line)", span="142-142"];
m10_58 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Log.Error(err)", span="149-149"];
m10_57 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label=Exception, span="147-147"];
m10_60 [cluster="QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipData(string, string, System.Collections.Generic.IEnumerable<string>)", span="131-131"];
m10_374 [cluster="TarInputStream.cstr", file="Compression.cs", label="Entry TarInputStream.cstr", span=""];
m10_132 [cluster="string.Replace(string, string)", file="Compression.cs", label="Entry string.Replace(string, string)", span="0-0"];
m10_76 [cluster="System.IO.File.Exists(string)", file="Compression.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m10_26 [cluster="Unk.Close", file="Compression.cs", label="Entry Unk.Close", span=""];
m10_79 [cluster="Unk.Save", file="Compression.cs", label="Entry Unk.Save", span=""];
m10_177 [cluster="QuantConnect.Compression.PathEncoder.GetBytes(string)", file="Compression.cs", label="Entry QuantConnect.Compression.PathEncoder.GetBytes(string)", span="390-390"];
m10_179 [cluster="QuantConnect.Compression.PathEncoder.GetBytes(string)", file="Compression.cs", label="return base.GetBytes(s);", span="393-393"];
m10_178 [cluster="QuantConnect.Compression.PathEncoder.GetBytes(string)", file="Compression.cs", label="s = s.Replace(''\\'', ''/'')", span="392-392"];
m10_180 [cluster="QuantConnect.Compression.PathEncoder.GetBytes(string)", file="Compression.cs", label="Exit QuantConnect.Compression.PathEncoder.GetBytes(string)", span="390-390"];
m10_62 [cluster="System.IO.TextWriter.WriteLine(string)", file="Compression.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m10_127 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="Entry QuantConnect.Compression.Zip(string, string, bool)", span="283-283"];
m10_129 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="Zip(textPath, zipPath, zipEntryName, deleteOriginal)", span="286-286"];
m10_128 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="var zipPath = textPath.Replace(''.csv'', ''.zip'').Replace(''.txt'', ''.zip'')", span="285-285"];
m10_130 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="return zipPath;", span="287-287"];
m10_131 [cluster="QuantConnect.Compression.Zip(string, string, bool)", file="Compression.cs", label="Exit QuantConnect.Compression.Zip(string, string, bool)", span="283-283"];
m10_378 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="Entry QuantConnect.Compression.UnTar(string)", span="811-811"];
m10_391 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="tarIn.Close()", span="837-837"];
m10_381 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="var tarIn = new TarInputStream(file)", span="818-818"];
m10_386 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="(tarEntry = tarIn.GetNextEntry()) != null", span="827-827"];
m10_384 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="tarIn = new TarInputStream(gzipStream)", span="823-823"];
m10_380 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="var file = File.OpenRead(source)", span="816-816"];
m10_382 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label=gzip, span="820-820"];
m10_389 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="tarIn.CopyEntryContents(stream)", span="833-833"];
m10_390 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="yield return new KeyValuePair<string, byte[]>(tarEntry.Name, stream.ToArray());", span="834-834"];
m10_385 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="TarEntry tarEntry", span="826-826"];
m10_387 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="tarEntry.IsDirectory", span="829-829"];
m10_383 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="var gzipStream = new GZipInputStream(file)", span="822-822"];
m10_379 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="var gzip = (source.Substring(Math.Max(0, source.Length - 6)) == ''tar.gz'')", span="814-814"];
m10_388 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="var stream = new MemoryStream()", span="831-831"];
m10_392 [cluster="QuantConnect.Compression.UnTar(string)", file="Compression.cs", label="Exit QuantConnect.Compression.UnTar(string)", span="811-811"];
m10_95 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Compression.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_149 [cluster="System.IO.FileStream.Read(byte[], int, int)", file="Compression.cs", label="Entry System.IO.FileStream.Read(byte[], int, int)", span="0-0"];
m10_22 [cluster="Unk.PutNextEntry", file="Compression.cs", label="Entry Unk.PutNextEntry", span=""];
m10_205 [cluster="Unk.ExtractToFile", file="Compression.cs", label="Entry Unk.ExtractToFile", span=""];
m10_17 [cluster="ZipOutputStream.cstr", file="Compression.cs", label="Entry ZipOutputStream.cstr", span=""];
m10_69 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="zip.AddEntry(entry, data)", span="177-177"];
m10_63 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="Entry QuantConnect.Compression.ZipCreateAppendData(string, string, string)", span="161-161"];
m10_64 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="File.Exists(path)", span="165-165"];
m10_65 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="var zip = ZipFile.Read(path)", span="167-167"];
m10_66 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="zip.AddEntry(entry, data)", span="169-169"];
m10_68 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="var zip = new ZipFile(path)", span="175-175"];
m10_74 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="return true;", span="187-187"];
m10_73 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="return false;", span="185-185"];
m10_67 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="zip.Save()", span="170-170"];
m10_70 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="zip.Save()", span="178-178"];
m10_72 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="Log.Error(err)", span="184-184"];
m10_71 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label=Exception, span="182-182"];
m10_75 [cluster="QuantConnect.Compression.ZipCreateAppendData(string, string, string)", file="Compression.cs", label="Exit QuantConnect.Compression.ZipCreateAppendData(string, string, string)", span="161-161"];
m10_201 [cluster="Unk.ExtractToDirectory", file="Compression.cs", label="Entry Unk.ExtractToDirectory", span=""];
m10_109 [cluster="ZipArchive.cstr", file="Compression.cs", label="Entry ZipArchive.cstr", span=""];
m10_406 [file="Compression.cs", label=string, span=""];
m10_405 [file="Compression.cs", label="QuantConnect.Compression.PathEncoder", span=""];
m11_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountTimeEventArgs.UpdateAccountTimeEventArgs(string)", file="Controls.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountTimeEventArgs.UpdateAccountTimeEventArgs(string)", span="32-32"];
m11_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountTimeEventArgs.UpdateAccountTimeEventArgs(string)", file="Controls.cs", label="Timestamp = timestamp", span="34-34"];
m11_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountTimeEventArgs.UpdateAccountTimeEventArgs(string)", file="Controls.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountTimeEventArgs.UpdateAccountTimeEventArgs(string)", span="32-32"];
m11_3 [file="Controls.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.UpdateAccountTimeEventArgs", span=""];
m12_0 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Currencies.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="299-299"];
m12_1 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Currencies.cs", label="string currencySymbol", span="301-301"];
m12_2 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Currencies.cs", label="return CurrencySymbols.TryGetValue(currency, out currencySymbol) ? currencySymbol : ''$'';", span="302-302"];
m12_3 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Currencies.cs", label="Exit QuantConnect.Currencies.GetCurrencySymbol(string)", span="299-299"];
m12_4 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Currencies.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m13_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs.TickSizeEventArgs(int, int, int)", file="CurrenciesTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs.TickSizeEventArgs(int, int, int)", span="30-30"];
m13_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs.TickSizeEventArgs(int, int, int)", file="CurrenciesTests.cs", label="Size = size", span="33-33"];
m13_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs.TickSizeEventArgs(int, int, int)", file="CurrenciesTests.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs.TickSizeEventArgs(int, int, int)", span="30-30"];
m13_3 [file="CurrenciesTests.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickSizeEventArgs", span=""];
m14_18 [cluster="System.Action<T>.Invoke(T)", file="DailyFx.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m14_8 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DailyFx.cs", label="Entry QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", span="29-29"];
m14_9 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", color=green, community=0, file="DailyFx.cs", label="disposable == null", prediction=20, span="31-31"];
m14_10 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DailyFx.cs", label="return false;", span="33-33"];
m14_11 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DailyFx.cs", label="disposable.Dispose()", span="38-38"];
m14_14 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DailyFx.cs", label="errorHandler(error)", span="43-43"];
m14_12 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DailyFx.cs", label="return true;", span="39-39"];
m14_15 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DailyFx.cs", label="return false;", span="44-44"];
m14_13 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DailyFx.cs", label=Exception, span="41-41"];
m14_16 [cluster="QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", file="DailyFx.cs", label="Exit QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable, System.Action<System.Exception>)", span="29-29"];
m14_17 [cluster="System.IDisposable.Dispose()", file="DailyFx.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m15_43 [cluster="Unk.AddOrder", file="DefaultMarginCallModel.cs", label="Entry Unk.AddOrder", span=""];
m15_19 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", span="62-62"];
m15_39 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m15_23 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="101-101"];
m15_55 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="118-118"];
m15_46 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="117-117"];
m15_49 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="117-117"];
m15_52 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Entry lambda expression", span="118-118"];
m15_47 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label=x, span="117-117"];
m15_48 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="117-117"];
m15_50 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Portfolio[x.Symbol]", span="117-117"];
m15_51 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="117-117"];
m15_53 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Value.UnrealizedProfit", span="118-118"];
m15_54 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="118-118"];
m15_56 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="x.Key", span="118-118"];
m15_57 [cluster="lambda expression", file="DefaultMarginCallModel.cs", label="Exit lambda expression", span="118-118"];
m15_25 [cluster="QuantConnect.Orders.OrderProperties.Clone()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Orders.OrderProperties.Clone()", span="31-31"];
m15_16 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="DefaultMarginCallModel.cs", label="security.Holdings.IsLong", span="92-92"];
m15_22 [cluster="System.Math.Max(decimal, decimal)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m15_41 [cluster="Unk.OrderBy", file="DefaultMarginCallModel.cs", label="Entry Unk.OrderBy", span=""];
m15_15 [cluster="QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal, decimal)", file="DefaultMarginCallModel.cs", label="quantity = Math.Max(security.SymbolProperties.LotSize, Math.Min(security.Holdings.AbsoluteQuantity, quantity))", span="91-91"];
m15_44 [cluster="Unk.WaitForOrder", file="DefaultMarginCallModel.cs", label="Entry Unk.WaitForOrder", span=""];
m15_4 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", color=green, community=0, file="DefaultMarginCallModel.cs", label="ib.Subscribe(null, new Dictionary<SecurityType, List<string>>\r\n            {\r\n                {SecurityType.Forex, new List<string>{''USDJPY'', ''EURGBP''}}\r\n            })", prediction=21, span="35-38"];
m15_5 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", file="DefaultMarginCallModel.cs", label="Thread.Sleep(1000)", span="40-40"];
m15_6 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", file="DefaultMarginCallModel.cs", label="int i = 0", span="42-42"];
m15_8 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", file="DefaultMarginCallModel.cs", label="ib.GetNextTicks()", span="44-44"];
m15_10 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", file="DefaultMarginCallModel.cs", label="i++", span="42-42"];
m15_12 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", span="28-28"];
m15_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", span="40-40"];
m15_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderMapping)", span="93-93"];
m15_7 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", file="DefaultMarginCallModel.cs", label="i < 10", span="42-42"];
m15_9 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", file="DefaultMarginCallModel.cs", label="Console.WriteLine(''{0}: {1} - {2} @ {3}'', tick.Time, tick.Symbol, tick.Price, ((Tick)tick).Quantity)", span="46-46"];
m15_11 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", file="DefaultMarginCallModel.cs", label="InteractiveBrokersGatewayRunner.Stop()", span="50-50"];
m15_17 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m15_26 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="107-107"];
m15_27 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="Portfolio.MarginRemaining >= 0", span="110-110"];
m15_30 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="var ordersWithSecurities = generatedMarginCallOrders.ToDictionary(x => x, x => Portfolio[x.Symbol])", span="117-117"];
m15_28 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="return new List<OrderTicket>();", span="112-112"];
m15_29 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="var executedOrders = new List<OrderTicket>()", span="116-116"];
m15_35 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="executedOrders.Add(ticket)", span="123-123"];
m15_37 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="return executedOrders;", span="131-131"];
m15_31 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="var orderedByLosers = ordersWithSecurities.OrderBy(x => x.Value.UnrealizedProfit).Select(x => x.Key)", span="118-118"];
m15_32 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label=orderedByLosers, span="119-119"];
m15_33 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="var ticket = Portfolio.Transactions.AddOrder(request)", span="121-121"];
m15_34 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="Portfolio.Transactions.WaitForOrder(request.OrderId)", span="122-122"];
m15_36 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="Portfolio.MarginRemaining >= 0", span="126-126"];
m15_38 [cluster="QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="DefaultMarginCallModel.cs", label="Exit QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="107-107"];
m15_0 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", file="DefaultMarginCallModel.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", span="28-28"];
m15_1 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", file="DefaultMarginCallModel.cs", label="InteractiveBrokersGatewayRunner.StartFromConfiguration()", span="30-30"];
m15_3 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageDataQueueHandlerTest.GetsTickData()", file="DefaultMarginCallModel.cs", label="ib.Connect()", span="33-33"];
m15_21 [cluster="System.Math.Min(decimal, decimal)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m15_20 [cluster="System.Math.Round(decimal, System.MidpointRounding)", file="DefaultMarginCallModel.cs", label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0"];
m15_24 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="DefaultMarginCallModel.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m15_45 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultMarginCallModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m15_42 [cluster="Unk.Select", file="DefaultMarginCallModel.cs", label="Entry Unk.Select", span=""];
m15_40 [cluster="Unk.ToDictionary", file="DefaultMarginCallModel.cs", label="Entry Unk.ToDictionary", span=""];
m15_58 [file="DefaultMarginCallModel.cs", label="QuantConnect.Securities.DefaultMarginCallModel", span=""];
m16_7 [cluster="System.Func<T, TResult>.Invoke(T)", file="EnumeratorExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m16_0 [cluster="QuantConnect.Util.EnumeratorExtensions.Where<T>(System.Collections.Generic.IEnumerator<T>, System.Func<T, bool>)", file="EnumeratorExtensions.cs", label="Entry QuantConnect.Util.EnumeratorExtensions.Where<T>(System.Collections.Generic.IEnumerator<T>, System.Func<T, bool>)", span="28-28"];
m16_5 [cluster="QuantConnect.Util.EnumeratorExtensions.Where<T>(System.Collections.Generic.IEnumerator<T>, System.Func<T, bool>)", file="EnumeratorExtensions.cs", label="Exit QuantConnect.Util.EnumeratorExtensions.Where<T>(System.Collections.Generic.IEnumerator<T>, System.Func<T, bool>)", span="28-28"];
m16_6 [cluster="System.Collections.IEnumerator.MoveNext()", file="EnumeratorExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m16_13 [cluster="QuantConnect.Util.EnumeratorExtensions.SelectMany<T, TResult>(System.Collections.Generic.IEnumerator<T>, System.Func<T, System.Collections.Generic.IEnumerator<TResult>>)", file="EnumeratorExtensions.cs", label="Entry QuantConnect.Util.EnumeratorExtensions.SelectMany<T, TResult>(System.Collections.Generic.IEnumerator<T>, System.Func<T, System.Collections.Generic.IEnumerator<TResult>>)", span="59-59"];
m16_19 [cluster="QuantConnect.Util.EnumeratorExtensions.SelectMany<T, TResult>(System.Collections.Generic.IEnumerator<T>, System.Func<T, System.Collections.Generic.IEnumerator<TResult>>)", file="EnumeratorExtensions.cs", label="Exit QuantConnect.Util.EnumeratorExtensions.SelectMany<T, TResult>(System.Collections.Generic.IEnumerator<T>, System.Func<T, System.Collections.Generic.IEnumerator<TResult>>)", span="59-59"];
m16_8 [cluster="QuantConnect.Util.EnumeratorExtensions.Select<T, TResult>(System.Collections.Generic.IEnumerator<T>, System.Func<T, TResult>)", file="EnumeratorExtensions.cs", label="Entry QuantConnect.Util.EnumeratorExtensions.Select<T, TResult>(System.Collections.Generic.IEnumerator<T>, System.Func<T, TResult>)", span="45-45"];
m16_12 [cluster="QuantConnect.Util.EnumeratorExtensions.Select<T, TResult>(System.Collections.Generic.IEnumerator<T>, System.Func<T, TResult>)", file="EnumeratorExtensions.cs", label="Exit QuantConnect.Util.EnumeratorExtensions.Select<T, TResult>(System.Collections.Generic.IEnumerator<T>, System.Func<T, TResult>)", span="45-45"];
m17_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m17_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="RequestId = requestId", span="45-45"];
m17_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Contract = contract", span="46-46"];
m17_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Execution = execution", span="47-47"];
m17_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", file="ExecutionDetailsEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ExecutionDetailsEventArgs(int, Contract, Execution)", span="43-43"];
m17_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="ExecutionDetailsEventArgs.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m17_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", color=green, community=0, file="ExecutionDetailsEventArgs.cs", label="return $''RequestId: {RequestId}, Symbol: {Contract.Symbol}, OrderId: {Execution.OrderId}, Time: {Execution.Time}, Side: {Execution.Side}, Shares: {Execution.Shares}, Price: {Execution.Price}, CumQty: {Execution.CumQty}, PermId: {Execution.PermId}, Account: {Execution.AcctNumber}'';", prediction=22, span="55-55"];
m17_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", file="ExecutionDetailsEventArgs.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs.ToString()", span="53-53"];
m17_8 [file="ExecutionDetailsEventArgs.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", span=""];
m18_435 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="Entry QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", span="890-890"];
m18_456 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", color=green, community=0, file="Extensions.cs", label="var submitOrderRequest = new SubmitOrderRequest(order.Type,\r\n                order.SecurityType,\r\n                order.Symbol,\r\n                order.Quantity,\r\n                stopPrice,\r\n                limitPrice,\r\n                order.Time,\r\n                order.Tag,\r\n                order.Properties)", prediction=23, span="921-929"];
m18_453 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="limitPrice = order.Price", span="914-914"];
m18_454 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="stopPrice = order.Price", span="915-915"];
m18_441 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="limitPrice = limitOrder.LimitPrice", span="899-899"];
m18_444 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="stopPrice = stopMarketOrder.StopPrice", span="903-903"];
m18_448 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="limitPrice = stopLimitOrder.LimitPrice", span="908-908"];
m18_457 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="submitOrderRequest.SetOrderId(order.Id)", span="931-931"];
m18_458 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="return new OrderTicket(transactionManager, submitOrderRequest);", span="933-933"];
m18_436 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var limitPrice = 0m", span="892-892"];
m18_438 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="order.Type", span="895-895"];
m18_440 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var limitOrder = order as LimitOrder", span="898-898"];
m18_443 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var stopMarketOrder = order as StopMarketOrder", span="902-902"];
m18_446 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var stopLimitOrder = order as StopLimitOrder", span="906-906"];
m18_452 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.MarketOnClose", span="913-913"];
m18_447 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="stopPrice = stopLimitOrder.StopPrice", span="907-907"];
m18_455 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="throw new ArgumentOutOfRangeException();", span="918-918"];
m18_437 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="var stopPrice = 0m", span="893-893"];
m18_439 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.Limit", span="897-897"];
m18_442 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.StopMarket", span="901-901"];
m18_445 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.StopLimit", span="905-905"];
m18_449 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.OptionExercise", span="910-910"];
m18_451 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.MarketOnOpen", span="912-912"];
m18_450 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="OrderType.Market", span="911-911"];
m18_459 [cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="Extensions.cs", label="Exit QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", span="890-890"];
m18_462 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="Extensions.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="117-117"];
m18_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", span="107-107"];
m18_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="109-109"];
m18_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="!_subscriptions.TryGetValue(symbol, out dictionary)", span="110-110"];
m18_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="subscriptions = null", span="112-112"];
m18_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="subscriptions = dictionary.Values", span="116-116"];
m18_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="return false;", span="113-113"];
m18_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="return true;", span="117-117"];
m18_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", span="107-107"];
m18_67 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="170-170"];
m18_61 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="166-166"];
m18_64 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="169-169"];
m18_62 [cluster="lambda expression", file="Extensions.cs", label="x.Value", span="166-166"];
m18_63 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="166-166"];
m18_65 [cluster="lambda expression", file="Extensions.cs", label="x.Value", span="169-169"];
m18_66 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="169-169"];
m18_68 [cluster="lambda expression", file="Extensions.cs", label="x.Configuration.TickType", span="170-170"];
m18_69 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="170-170"];
m18_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", span="34-34"];
m18_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", file="Extensions.cs", label="_subscriptions = new ConcurrentDictionary<Symbol, ConcurrentDictionary<SubscriptionDataConfig, Subscription>>()", span="36-36"];
m18_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.SubscriptionCollection()", span="34-34"];
m18_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", span="163-163"];
m18_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", file="Extensions.cs", label="_subscriptions\r\n                .Select(x => x.Value)", span="165-166"];
m18_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", file="Extensions.cs", label="yield return subscription;", span="172-172"];
m18_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", file="Extensions.cs", label="subscriptionsByConfig\r\n                    .Select(x => x.Value)\r\n                    .OrderBy(x => x.Configuration.TickType)", span="168-170"];
m18_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.GetEnumerator()", span="163-163"];
m18_60 [cluster="Unk.OrderBy", file="Extensions.cs", label="Entry Unk.OrderBy", span=""];
m18_22 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="Extensions.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m18_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", span="183-183"];
m18_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", file="Extensions.cs", label="return GetEnumerator();", span="185-185"];
m18_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.System.Collections.IEnumerable.GetEnumerator()", span="183-183"];
m18_463 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="Extensions.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="194-194"];
m18_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", span="44-44"];
m18_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="Extensions.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="46-46"];
m18_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="Extensions.cs", label="!_subscriptions.TryGetValue(configuration.Symbol, out dictionary)", span="47-47"];
m18_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="Extensions.cs", label="return dictionary.ContainsKey(configuration);", span="52-52"];
m18_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="Extensions.cs", label="return false;", span="49-49"];
m18_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.Contains(QuantConnect.Data.SubscriptionDataConfig)", span="44-44"];
m18_45 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="Extensions.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m18_10 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Extensions.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m18_3 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="Extensions.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m18_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="89-89"];
m18_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="91-91"];
m18_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="!_subscriptions.TryGetValue(configuration.Symbol, out dictionary)", span="92-92"];
m18_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="return dictionary.TryGetValue(configuration, out subscription);", span="98-98"];
m18_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="subscription = null", span="94-94"];
m18_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="return false;", span="95-95"];
m18_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryGetValue(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="89-89"];
m18_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", span="144-144"];
m18_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="146-146"];
m18_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="!_subscriptions.TryRemove(symbol, out dictionary)", span="147-147"];
m18_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="subscriptions = null", span="149-149"];
m18_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="subscriptions = dictionary.Values", span="153-153"];
m18_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="return false;", span="150-150"];
m18_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="return true;", span="154-154"];
m18_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemoveAll(QuantConnect.Symbol, out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>)", span="144-144"];
m18_461 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Extensions.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="101-101"];
m18_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="126-126"];
m18_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="128-128"];
m18_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="!_subscriptions.TryGetValue(configuration.Symbol, out dictionary)", span="129-129"];
m18_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="return dictionary.TryRemove(configuration, out subscription);", span="135-135"];
m18_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="subscription = null", span="131-131"];
m18_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="return false;", span="132-132"];
m18_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryRemove(QuantConnect.Data.SubscriptionDataConfig, out QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="126-126"];
m18_11 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="Extensions.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m18_460 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="Extensions.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m18_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="71-71"];
m18_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="ConcurrentDictionary<SubscriptionDataConfig, Subscription> dictionary", span="73-73"];
m18_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="!_subscriptions.TryGetValue(subscription.Configuration.Symbol, out dictionary)", span="74-74"];
m18_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="_subscriptions[subscription.Configuration.Symbol] = dictionary", span="77-77"];
m18_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="return dictionary.TryAdd(subscription.Configuration, subscription);", span="80-80"];
m18_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="dictionary = new ConcurrentDictionary<SubscriptionDataConfig, Subscription>()", span="76-76"];
m18_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.TryAdd(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="71-71"];
m18_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.ContainsAny(QuantConnect.Symbol)", file="Extensions.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.ContainsAny(QuantConnect.Symbol)", span="60-60"];
m18_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.ContainsAny(QuantConnect.Symbol)", file="Extensions.cs", label="return _subscriptions.ContainsKey(symbol);", span="62-62"];
m18_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.ContainsAny(QuantConnect.Symbol)", file="Extensions.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection.ContainsAny(QuantConnect.Symbol)", span="60-60"];
m18_59 [cluster="Unk.Select", file="Extensions.cs", label="Entry Unk.Select", span=""];
m18_73 [file="Extensions.cs", label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", span=""];
m19_25 [cluster="System.Collections.IEnumerator.Reset()", file="FastForwardEnumerator.cs", label="Entry System.Collections.IEnumerator.Reset()", span="0-0"];
m19_19 [cluster="System.Collections.IEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m19_29 [cluster="System.IDisposable.Dispose()", file="FastForwardEnumerator.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m19_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", span="57-57"];
m19_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", color=green, community=0, file="FastForwardEnumerator.cs", label="_current = null", prediction=24, span="85-85"];
m19_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="_enumerator.MoveNext()", span="60-60"];
m19_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", color=green, community=0, file="FastForwardEnumerator.cs", label="return false;", prediction=25, span="86-86"];
m19_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="_enumerator.Current == null || _enumerator.Current.Time == DateTime.MinValue", span="63-63"];
m19_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="_current = null", span="65-65"];
m19_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="_current != null && _current.EndTime > _enumerator.Current.EndTime", span="70-70"];
m19_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="var age = _timeProvider.GetUtcNow().ConvertFromUtc(_timeZone) - _enumerator.Current.EndTime", span="76-76"];
m19_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="age <= _maximumDataAge", span="77-77"];
m19_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="_current = _enumerator.Current", span="79-79"];
m19_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="return true;", span="66-66"];
m19_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="return true;", span="80-80"];
m19_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", file="FastForwardEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.MoveNext()", span="57-57"];
m19_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", file="FastForwardEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", span="43-43"];
m19_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", file="FastForwardEnumerator.cs", label="_enumerator = enumerator", span="45-45"];
m19_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", file="FastForwardEnumerator.cs", label="_timeProvider = timeProvider", span="46-46"];
m19_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", file="FastForwardEnumerator.cs", label="_timeZone = timeZone", span="47-47"];
m19_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", file="FastForwardEnumerator.cs", label="_maximumDataAge = maximumDataAge", span="48-48"];
m19_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", file="FastForwardEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", span="43-43"];
m19_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.Dispose()", file="FastForwardEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.Dispose()", span="125-125"];
m19_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.Dispose()", file="FastForwardEnumerator.cs", label="_enumerator.Dispose()", span="127-127"];
m19_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.Dispose()", file="FastForwardEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.Dispose()", span="125-125"];
m19_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", file="FastForwardEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", span="30-30"];
m19_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.Reset()", file="FastForwardEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.Reset()", span="93-93"];
m19_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.Reset()", file="FastForwardEnumerator.cs", label="_enumerator.Reset()", span="95-95"];
m19_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.Reset()", file="FastForwardEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.Reset()", span="93-93"];
m19_21 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="FastForwardEnumerator.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m19_30 [file="FastForwardEnumerator.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator", span=""];
m20_12 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", file="FastForwardEnumeratorTests.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", span="73-73"];
m20_13 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", file="FastForwardEnumeratorTests.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", span="73-73"];
m20_4 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="FastForwardEnumeratorTests.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m20_5 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="FastForwardEnumeratorTests.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m20_0 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="FastForwardEnumeratorTests.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="29-29"];
m20_1 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", file="FastForwardEnumeratorTests.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="29-29"];
m20_10 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", file="FastForwardEnumeratorTests.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", span="68-68"];
m20_11 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", file="FastForwardEnumeratorTests.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", span="68-68"];
m20_2 [cluster="QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="FastForwardEnumeratorTests.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="39-39"];
m20_3 [cluster="QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="FastForwardEnumeratorTests.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="39-39"];
m20_8 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FastForwardEnumeratorTests.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63"];
m20_9 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="FastForwardEnumeratorTests.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63"];
m20_6 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="FastForwardEnumeratorTests.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="54-54"];
m20_7 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", file="FastForwardEnumeratorTests.cs", label="Exit QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="54-54"];
m21_0 [cluster="QuantConnect.Holding.Holding()", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Holding.Holding()", span="77-77"];
m21_3 [cluster="QuantConnect.Holding.Holding()", file="FinancialAdvisorConfiguration.cs", label="Exit QuantConnect.Holding.Holding()", span="77-77"];
m21_26 [cluster="string.Format(string, params object[])", file="FinancialAdvisorConfiguration.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m21_18 [cluster="QuantConnect.Holding.Clone()", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Holding.Clone()", span="112-112"];
m21_20 [cluster="QuantConnect.Holding.Clone()", file="FinancialAdvisorConfiguration.cs", label="Exit QuantConnect.Holding.Clone()", span="112-112"];
m21_21 [cluster="QuantConnect.Holding.ToString()", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Holding.ToString()", span="129-129"];
m21_25 [cluster="QuantConnect.Holding.ToString()", file="FinancialAdvisorConfiguration.cs", label="Exit QuantConnect.Holding.ToString()", span="129-129"];
m21_27 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.AlgorithmControl.AlgorithmControl()", span="438-438"];
m21_28 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="FinancialAdvisorConfiguration.cs", label="HasSubscribers = true", span="441-441"];
m21_29 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="FinancialAdvisorConfiguration.cs", label="Status = AlgorithmStatus.Running", span="442-442"];
m21_30 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="FinancialAdvisorConfiguration.cs", label="ChartSubscription = ''Strategy Equity''", span="443-443"];
m21_31 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="FinancialAdvisorConfiguration.cs", label="Exit QuantConnect.AlgorithmControl.AlgorithmControl()", span="438-438"];
m21_4 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="FinancialAdvisorConfiguration.cs", label="Entry QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", span="87-87"];
m21_16 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="FinancialAdvisorConfiguration.cs", label="Exit QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", span="87-87"];
m21_17 [cluster="System.Math.Round(decimal, int)", file="FinancialAdvisorConfiguration.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m21_32 [file="FinancialAdvisorConfiguration.cs", label="QuantConnect.Holding", span=""];
m21_33 [file="FinancialAdvisorConfiguration.cs", label="QuantConnect.AlgorithmControl", span=""];
m22_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1350-1350"];
m22_0 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", span="34-34"];
m22_6 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", file="FinancialAdvisorDemoAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.Initialize()", span="34-34"];
m22_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1101-1101"];
m22_11 [cluster="QuantConnect.Orders.OrderFinancialAdvisorProperties.OrderFinancialAdvisorProperties()", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Orders.OrderFinancialAdvisorProperties.OrderFinancialAdvisorProperties()", span="21-21"];
m22_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1076-1076"];
m22_12 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.OnData(QuantConnect.Data.Slice)", span="73-73"];
m22_15 [cluster="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="FinancialAdvisorDemoAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm.OnData(QuantConnect.Data.Slice)", span="73-73"];
m22_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1025-1025"];
m22_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="FinancialAdvisorDemoAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="860-860"];
m22_17 [file="FinancialAdvisorDemoAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.FinancialAdvisorDemoAlgorithm", span=""];
m24_37 [cluster="System.Collections.IEnumerator.Reset()", file="FrontierAwareEnumerator.cs", label="Entry System.Collections.IEnumerator.Reset()", span="0-0"];
m24_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Reset()", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Reset()", span="115-115"];
m24_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Reset()", file="FrontierAwareEnumerator.cs", label="_enumerator.Reset()", span="117-117"];
m24_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Reset()", file="FrontierAwareEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Reset()", span="115-115"];
m24_32 [cluster="QuantConnect.TimeZoneOffsetProvider.GetOffsetTicks(System.DateTime)", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.TimeZoneOffsetProvider.GetOffsetTicks(System.DateTime)", span="84-84"];
m24_0 [cluster="QuantConnect.Data.Market.FuturesChains.FuturesChains()", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.Data.Market.FuturesChains.FuturesChains()", span="27-27"];
m24_1 [cluster="QuantConnect.Data.Market.FuturesChains.FuturesChains()", file="FrontierAwareEnumerator.cs", label="Exit QuantConnect.Data.Market.FuturesChains.FuturesChains()", span="27-27"];
m24_2 [cluster="QuantConnect.Data.Market.FuturesChains.FuturesChains(System.DateTime)", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.Data.Market.FuturesChains.FuturesChains(System.DateTime)", span="34-34"];
m24_3 [cluster="QuantConnect.Data.Market.FuturesChains.FuturesChains(System.DateTime)", file="FrontierAwareEnumerator.cs", label="Exit QuantConnect.Data.Market.FuturesChains.FuturesChains(System.DateTime)", span="34-34"];
m24_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.FrontierAwareEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, QuantConnect.TimeZoneOffsetProvider)", file="FrontierAwareEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.FrontierAwareEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, QuantConnect.TimeZoneOffsetProvider)", span="45-45"];
m24_33 [cluster="System.Collections.IEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m24_41 [cluster="System.IDisposable.Dispose()", file="FrontierAwareEnumerator.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m24_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", span="30-30"];
m24_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", span="59-59"];
m24_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", color=green, community=0, file="FrontierAwareEnumerator.cs", label="_current = underlyingCurrent", prediction=26, span="97-97"];
m24_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="underlyingCurrent = _enumerator.Current", span="92-92"];
m24_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", color=green, community=0, file="FrontierAwareEnumerator.cs", label="_needsMoveNext = true", prediction=27, span="96-96"];
m24_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", color=green, community=0, file="FrontierAwareEnumerator.cs", label="_lastEmittedValue = _current", prediction=28, span="98-98"];
m24_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", color=green, community=0, file="FrontierAwareEnumerator.cs", label="_needsMoveNext = underlyingCurrent == null", prediction=29, span="103-103"];
m24_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", color=green, community=0, file="FrontierAwareEnumerator.cs", label="_current = null", prediction=30, span="102-102"];
m24_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", color=green, community=0, file="FrontierAwareEnumerator.cs", label="return true;", prediction=31, span="108-108"];
m24_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="underlyingCurrent != null && underlyingCurrent.EndTime <= localFrontier", span="94-94"];
m24_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="var underlyingCurrent = _enumerator.Current", span="61-61"];
m24_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="var frontier = _timeProvider.GetUtcNow()", span="62-62"];
m24_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="var localFrontier = new DateTime(frontier.Ticks + _offsetProvider.GetOffsetTicks(frontier))", span="63-63"];
m24_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="!_needsMoveNext && underlyingCurrent != null", span="66-66"];
m24_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_current = underlyingCurrent", span="71-71"];
m24_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_needsMoveNext = true", span="72-72"];
m24_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_lastEmittedValue = _current", span="73-73"];
m24_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_current = null", span="78-78"];
m24_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_needsMoveNext = false", span="79-79"];
m24_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_needsMoveNext && !_enumerator.MoveNext()", span="85-85"];
m24_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_needsMoveNext = true", span="87-87"];
m24_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="_current = null", span="88-88"];
m24_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="return true;", span="81-81"];
m24_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="return false;", span="89-89"];
m24_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="underlyingCurrent.EndTime <= localFrontier", span="68-68"];
m24_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", file="FrontierAwareEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.MoveNext()", span="59-59"];
m24_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Dispose()", file="FrontierAwareEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Dispose()", span="147-147"];
m24_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Dispose()", file="FrontierAwareEnumerator.cs", label="_enumerator.Dispose()", span="149-149"];
m24_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Dispose()", file="FrontierAwareEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.Dispose()", span="147-147"];
m24_31 [cluster="System.DateTime.DateTime(long)", file="FrontierAwareEnumerator.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m24_42 [file="FrontierAwareEnumerator.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", span=""];
m25_6 [cluster="QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", file="Future.cs", label="Entry QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", span="29-29"];
m25_30 [cluster="System.Func<T, TResult>.Invoke(T)", file="Future.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m25_7 [cluster="System.TimeSpan.FromDays(double)", file="Future.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m25_25 [cluster="QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", file="Future.cs", label="Entry QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", span="33-33"];
m25_9 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="79-79"];
m25_10 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SettlementType = SettlementType.Cash", span="97-97"];
m25_12 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="_symbolProperties = symbolProperties", span="99-99"];
m25_11 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Holdings = new FutureHolding(this)", span="98-98"];
m25_13 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SetFilter(TimeSpan.Zero, TimeSpan.FromDays(35))", span="100-100"];
m25_14 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="79-79"];
m25_31 [cluster="QuantConnect.Securities.Future.Future.SetFilter(PyObject)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.SetFilter(PyObject)", span="172-172"];
m25_34 [cluster="QuantConnect.Securities.Future.Future.SetFilter(PyObject)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.SetFilter(PyObject)", span="172-172"];
m25_8 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="147-147"];
m25_15 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="SetFilter(universe => universe.Expiration(minExpiry, maxExpiry))", span="149-149"];
m25_16 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="147-147"];
m25_0 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="48-48"];
m25_1 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SettlementType = SettlementType.Cash", span="66-66"];
m25_3 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="_symbolProperties = symbolProperties", span="68-68"];
m25_2 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Holdings = new FutureHolding(this)", span="67-67"];
m25_4 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SetFilter(TimeSpan.Zero, TimeSpan.FromDays(35))", span="69-69"];
m25_5 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="48-48"];
m25_17 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", span="157-157"];
m25_22 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func = universe =>\r\n            {\r\n                var futureUniverse = universe as FutureFilterUniverse;\r\n                return universeFunc(futureUniverse);\r\n            }", span="159-163"];
m25_23 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="ContractFilter = new FuncSecurityDerivativeFilter(func)", span="165-165"];
m25_24 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", span="157-157"];
m25_35 [cluster="QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", file="Future.cs", label="Entry QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", span="74-74"];
m25_21 [cluster="QuantConnect.Securities.FutureFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="Entry QuantConnect.Securities.FutureFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="111-111"];
m25_26 [cluster="lambda expression", file="Future.cs", label="Entry lambda expression", span="159-163"];
m25_19 [cluster="lambda expression", file="Future.cs", label="universe.Expiration(minExpiry, maxExpiry)", span="149-149"];
m25_18 [cluster="lambda expression", file="Future.cs", label="Entry lambda expression", span="149-149"];
m25_20 [cluster="lambda expression", file="Future.cs", label="Exit lambda expression", span="149-149"];
m25_28 [cluster="lambda expression", file="Future.cs", label="return universeFunc(futureUniverse);", span="162-162"];
m25_27 [cluster="lambda expression", file="Future.cs", label="var futureUniverse = universe as FutureFilterUniverse", span="161-161"];
m25_29 [cluster="lambda expression", file="Future.cs", label="Exit lambda expression", span="159-163"];
m25_36 [file="Future.cs", label="QuantConnect.Securities.Future.Future", span=""];
m25_37 [file="Future.cs", label="System.TimeSpan", span=""];
m25_38 [file="Future.cs", label="System.TimeSpan", span=""];
m25_39 [file="Future.cs", label="System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>", span=""];
m27_45 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m27_182 [cluster="string.Contains(string)", file="GDAXBrokerage.Messaging.cs", label="Entry string.Contains(string)", span="0-0"];
m27_110 [cluster="Unk.Single", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Single", span=""];
m27_111 [cluster="System.Math.Abs(decimal)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m27_102 [cluster="Unk.Where", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Where", span=""];
m27_112 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.TotalQuantity()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.TotalQuantity()", span="78-78"];
m27_34 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m27_116 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m27_8 [cluster="RestClient.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry RestClient.cstr", span=""];
m27_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", span="111-111"];
m27_37 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label=_streamLocked, prediction=32, span="117-117"];
m27_38 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="_messageBuffer.Enqueue(e)", span="119-119"];
m27_40 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label=Exception, span="123-123"];
m27_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OnMessageImpl(sender, e)", span="128-128"];
m27_41 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="Log.Error(err)", prediction=33, span="125-125"];
m27_39 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="120-120"];
m27_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", span="111-111"];
m27_0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", span="65-65"];
m27_1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="FillSplit = new ConcurrentDictionary<long, GDAXFill>()", span="68-68"];
m27_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="_passPhrase = passPhrase", span="69-69"];
m27_113 [cluster="OrderEvent.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry OrderEvent.cstr", span=""];
m27_187 [cluster="Unk.SerializeObject", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.SerializeObject", span=""];
m27_186 [cluster="Unk.ToArray", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.ToArray", span=""];
m27_141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="288-288"];
m27_143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="var response = RestClient.Execute(req)", span="291-291"];
m27_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="var req = new RestRequest(string.Format(''/products/{0}/ticker'', ConvertSymbol(symbol)), Method.GET)", span="290-290"];
m27_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="var tick = JsonConvert.DeserializeObject<Messages.Tick>(response.Content)", span="292-292"];
m27_145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="return new Tick(tick.Time, symbol, tick.Bid, tick.Ask) { Quantity = tick.Volume };", span="293-293"];
m27_146 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="288-288"];
m27_9 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="QuantConnect.Python.SecurityInitializerPythonWrapper", span=""];
m27_11 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Subscribe(null, tickers.Select(ticker => Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)))", span="76-76"];
m27_201 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''GDAXBrokerage.PollLatestTick: started polling for ticks: {symbol.Value.ToString()}''))", span="428-428"];
m27_203 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="var rate = GetConversionRate(symbol.Value.Replace(''USD'', ''''))", span="431-431"];
m27_204 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label=_tickLocker, span="433-433"];
m27_206 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Ticks.Add(latest)", span="441-441"];
m27_209 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''PollLatestTick: stopped polling for ticks: {symbol.Value.ToString()}''))", span="447-447"];
m27_205 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="var latest = new Tick\r\n                        {\r\n                            Value = rate,\r\n                            Time = DateTime.UtcNow,\r\n                            Symbol = symbol\r\n                        }", span="435-440"];
m27_10 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="var tickers = new[] {''LTCUSD'', ''LTCEUR'', ''LTCBTC'', ''BTCUSD'', ''BTCEUR'', ''BTCGBP'', ''ETHBTC'', ''ETHUSD'', ''ETHEUR''}", span="75-75"];
m27_12 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="73-77"];
m27_15 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="76-76"];
m27_118 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="o.Value.BrokerId.Contains(message.MakerOrderId) || o.Value.BrokerId.Contains(message.TakerOrderId)", span="188-188"];
m27_117 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="188-188"];
m27_139 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="o.Value.BrokerId.Contains(message.OrderId)", span="255-255"];
m27_138 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="255-255"];
m27_190 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="383-383"];
m27_200 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Entry lambda expression", span="426-448"];
m27_208 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="token.IsCancellationRequested", span="445-445"];
m27_210 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="426-448"];
m27_202 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label=true, span="429-429"];
m27_207 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Thread.Sleep(delay)", span="444-444"];
m27_17 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="76-76"];
m27_16 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)", span="76-76"];
m27_119 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="188-188"];
m27_140 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="255-255"];
m27_191 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="s.Value.Symbol.Substring(0, 3) + ''-'' + s.Value.Symbol.Substring(3)", span="383-383"];
m27_192 [cluster="lambda expression", file="GDAXBrokerage.Messaging.cs", label="Exit lambda expression", span="383-383"];
m27_76 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", span="242-242"];
m27_122 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="var message = JsonConvert.DeserializeObject<Messages.Done>(data, JsonSettings)", span="245-245"];
m27_126 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="var cached = CachedOrderIDs.Where(o => o.Value.BrokerId.Contains(message.OrderId))", span="255-255"];
m27_130 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1,\r\n                $''GDAXWebsocketsBrokerage.OrderDone: Encountered done message prior to match filling order brokerId: {message.OrderId} orderId: {cached.FirstOrDefault().Key}''))", span="263-264"];
m27_131 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="var split = this.FillSplit[cached.First().Key]", span="266-266"];
m27_132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="var orderEvent = new OrderEvent\r\n            (\r\n                cached.First().Key, ConvertProductId(message.ProductId), message.Time, OrderStatus.Filled,\r\n                message.Side == ''sell'' ? OrderDirection.Sell : OrderDirection.Buy,\r\n                message.Price, message.Side == ''sell'' ? -split.TotalQuantity() : split.TotalQuantity(),\r\n                GetFee(cached.First().Value), ''GDAX Fill Event''\r\n            )", span="269-275"];
m27_134 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="CachedOrderIDs.TryRemove(cached.First().Key, out outOrder)", span="278-278"];
m27_135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="OnOrderEvent(orderEvent)", span="280-280"];
m27_121 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order completed with data {data}'')", span="244-244"];
m27_123 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="message.Reason == ''canceled'' || message.RemainingSize > 0", span="248-248"];
m27_124 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order cancelled. Remaining {message.RemainingSize}'')", span="250-250"];
m27_128 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order could not locate order in cache with order id {message.OrderId}'')", span="259-259"];
m27_127 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="!cached.Any() || cached.Single().Value.Status == OrderStatus.Filled", span="257-257"];
m27_133 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Orders.Order outOrder = null", span="277-277"];
m27_125 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="return;", span="251-251"];
m27_129 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="return;", span="260-260"];
m27_136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", span="242-242"];
m27_73 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m27_19 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="83-83"];
m27_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="GDAXBrokerage.Messaging.cs", label="_streamLocked = true", span="86-86"];
m27_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="GDAXBrokerage.Messaging.cs", label="Log.Trace(''GDAXBrokerage.Messaging.LockStream(): Locking Stream'')", span="85-85"];
m27_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="83-83"];
m27_193 [cluster="string.Substring(int, int)", file="GDAXBrokerage.Messaging.cs", label="Entry string.Substring(int, int)", span="0-0"];
m27_77 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", span="185-185"];
m27_79 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var message = JsonConvert.DeserializeObject<Messages.Matched>(data, JsonSettings)", span="187-187"];
m27_80 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var cached = CachedOrderIDs.Where(o => o.Value.BrokerId.Contains(message.MakerOrderId) || o.Value.BrokerId.Contains(message.TakerOrderId))", span="188-188"];
m27_81 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var symbol = ConvertProductId(message.ProductId)", span="190-190"];
m27_87 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="!FillSplit.ContainsKey(orderId)", span="201-201"];
m27_88 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="FillSplit[orderId] = new GDAXFill(orderObj)", span="203-203"];
m27_89 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var split = FillSplit[orderId]", span="206-206"];
m27_96 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var orderEvent = new OrderEvent\r\n            (\r\n                cached.First().Key, symbol, message.Time, status,\r\n                direction,\r\n                message.Price, direction == OrderDirection.Sell ? -message.Size : message.Size,\r\n                GetFee(cached.First().Value), $''GDAX Match Event {direction}''\r\n            )", span="224-230"];
m27_99 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="CachedOrderIDs.TryRemove(cached.First().Key, out outOrder)", span="236-236"];
m27_100 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="OnOrderEvent(orderEvent)", span="239-239"];
m27_84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="Log.Trace($''GDAXBrokerage.OrderMatch(): Match: {message.ProductId} {data}'')", span="197-197"];
m27_90 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="split.Add(message)", span="207-207"];
m27_91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var status = Math.Abs(message.Size) == Math.Abs(cached.Single().Value.Quantity) || Math.Abs(split.OrderQuantity) == Math.Abs(split.TotalQuantity())\r\n                ? OrderStatus.Filled : OrderStatus.PartiallyFilled", span="210-211"];
m27_94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="direction = message.Side == ''sell'' ? OrderDirection.Buy : OrderDirection.Sell", span="217-217"];
m27_95 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="direction = message.Side == ''sell'' ? OrderDirection.Sell : OrderDirection.Buy", span="221-221"];
m27_82 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="!cached.Any()", span="192-192"];
m27_85 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var orderId = cached.First().Key", span="198-198"];
m27_86 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="var orderObj = cached.First().Value", span="199-199"];
m27_97 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="orderEvent.Status == OrderStatus.Filled", span="233-233"];
m27_98 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="Orders.Order outOrder = null", span="235-235"];
m27_92 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="OrderDirection direction", span="213-213"];
m27_93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="orderObj.Type == OrderType.Market", span="215-215"];
m27_83 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="return;", span="194-194"];
m27_101 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", span="185-185"];
m27_107 [cluster="GDAXFill.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry GDAXFill.cstr", span=""];
m27_188 [cluster="Unk.GetAuthenticationToken", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m27_199 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", span="0-0"];
m27_224 [cluster="Unk.SelectToken", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.SelectToken", span=""];
m27_213 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", span="451-451"];
m27_215 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="var response = RateClient.Execute(new RestSharp.RestRequest(Method.GET))", span="453-453"];
m27_217 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GetConversionRate: error returned from conversion rate service.''))", span="456-456"];
m27_216 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="454-454"];
m27_219 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="var raw = JsonConvert.DeserializeObject<JObject>(response.Content)", span="460-460"];
m27_218 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="return 0;", span="457-457"];
m27_221 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="return parsing.Value<decimal>();", span="463-463"];
m27_220 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="var parsing = raw.SelectToken(''rates.'' + currency)", span="461-461"];
m27_222 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", span="451-451"];
m27_147 [cluster="RestRequest.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry RestRequest.cstr", span=""];
m27_35 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", span="136-136"];
m27_47 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", prediction=34, span="142-142"];
m27_46 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="var raw = JsonConvert.DeserializeObject<Messages.BaseMessage>(e.Message, JsonSettings)", span="140-140"];
m27_48 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''heartbeat''", span="144-144"];
m27_54 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''error''", prediction=35, span="154-154"];
m27_51 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''ticker''", span="149-149"];
m27_55 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Log.Error($''GDAXBrokerage.OnMessage.error(): Data: {Environment.NewLine}{e.Message}'')", span="156-156"];
m27_58 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''done''", span="160-160"];
m27_53 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="return;", prediction=36, span="152-152"];
m27_52 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="EmitTick(e.Message)", span="151-151"];
m27_56 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="var error = JsonConvert.DeserializeObject<Messages.Error>(e.Message, JsonSettings)", span="157-157"];
m27_57 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, $''GDAXBrokerage.OnMessage: {error.Message} {error.Reason}''))", span="158-158"];
m27_59 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OrderDone(e.Message)", span="162-162"];
m27_62 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OrderMatch(e.Message)", span="167-167"];
m27_66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, (''GDAXWebsocketsBrokerage.OnMessage: Unexpected message format: '' + e.Message)))", span="176-176"];
m27_68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, $''Parsing wss message failed. Data: {e.Message} Exception: {ex.ToString()}''))", span="180-180"];
m27_61 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''match''", span="165-165"];
m27_64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="raw.Type == ''open'' || raw.Type == ''change'' || raw.Type == ''received'' || raw.Type == ''subscriptions'' || raw.Type == ''last_match''", span="170-170"];
m27_49 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Log.Trace(''GDAXBrokerage.OnMessage.heartbeat()'')", span="146-146"];
m27_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="147-147"];
m27_60 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="163-163"];
m27_63 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="168-168"];
m27_65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="return;", span="173-173"];
m27_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="throw;", span="181-181"];
m27_67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label=Exception, span="178-178"];
m27_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", span="136-136"];
m27_106 [cluster="Unk.ContainsKey", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.ContainsKey", span=""];
m27_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="345-345"];
m27_165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="item.Value.Contains(''UNIVERSE'')", prediction=37, span="350-350"];
m27_164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label=symbols, span="348-348"];
m27_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="!IsSubscribeAvailable(item)", span="352-352"];
m27_171 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="Tick updating = new Tick\r\n                        {\r\n                            AskPrice = message.AskPrice,\r\n                            BidPrice = message.BidPrice,\r\n                            Value = (message.AskPrice + message.BidPrice) / 2m,\r\n                            Time = DateTime.UtcNow,\r\n                            Symbol = item,\r\n                            TickType = TickType.Quote\r\n                            //todo: tick volume\r\n                        }", prediction=38, span="367-376"];
m27_169 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="var message = GetTick(item)", span="363-363"];
m27_170 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label=_tickLocker, span="365-365"];
m27_172 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="this.Ticks.Add(updating)", prediction=32, span="378-378"];
m27_178 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="var json = JsonConvert.SerializeObject(new\r\n            {\r\n                type = payload.type,\r\n                channels = payload.channels,\r\n                product_ids = payload.product_ids,\r\n                SignHeader = token.Signature,\r\n                KeyHeader = ApiKey,\r\n                PassHeader = _passPhrase,\r\n                TimeHeader = token.Timestamp\r\n            })", prediction=40, span="399-408"];
m27_174 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="var payload = new\r\n            {\r\n                type = ''subscribe'',\r\n                product_ids = products,\r\n                channels = _channelNames\r\n            }", span="385-390"];
m27_177 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="var token = GetAuthenticationToken(JsonConvert.SerializeObject(payload), ''GET'', ''/users/self/verify'')", span="397-397"];
m27_179 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="WebSocket.Send(json)", span="410-410"];
m27_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="PollTick(item)", span="356-356"];
m27_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="this.ChannelList[item.Value] = new Channel { Name = item.Value, Symbol = item.Value }", span="360-360"];
m27_173 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="var products = ChannelList.Select(s => s.Value.Symbol.Substring(0, 3) + ''-'' + s.Value.Symbol.Substring(3)).ToArray()", span="383-383"];
m27_180 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.Subscribe: Sent subcribe.''))", span="413-413"];
m27_175 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="payload.product_ids.Length == 0", span="392-392"];
m27_176 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="return;", span="394-394"];
m27_181 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="345-345"];
m27_115 [cluster="Unk.TryRemove", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.TryRemove", span=""];
m27_227 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m27_18 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m27_71 [cluster="Unk.>", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.>", span=""];
m27_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="_algorithm = algorithm", span="70-70"];
m27_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="RateClient = new RestClient(''http://api.fixer.io/latest?base=usd'')", span="71-71"];
m27_5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="WebSocket.Open += (sender, args) =>\r\n            {\r\n                var tickers = new[] {''LTCUSD'', ''LTCEUR'', ''LTCBTC'', ''BTCUSD'', ''BTCEUR'', ''BTCGBP'', ''ETHBTC'', ''ETHUSD'', ''ETHEUR''};\r\n                Subscribe(null, tickers.Select(ticker => Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)));\r\n            }", prediction=41, span="73-77"];
m27_6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GDAXBrokerage(string, QuantConnect.Brokerages.IWebSocket, IRestClient, string, string, string, QuantConnect.Interfaces.IAlgorithm)", span="65-65"];
m27_109 [cluster="Unk.Abs", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Abs", span=""];
m27_108 [cluster="Unk.Add", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Add", span=""];
m27_7 [cluster="Unk.GIL", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.GIL", span=""];
m27_228 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="476-476"];
m27_229 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="WebSocket.Send(JsonConvert.SerializeObject(new { type = ''unsubscribe'', channels = _channelNames }))", span="478-478"];
m27_230 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="476-476"];
m27_137 [cluster="Unk.FirstOrDefault", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.FirstOrDefault", span=""];
m27_149 [cluster="string.Format(string, object)", file="GDAXBrokerage.Messaging.cs", label="Entry string.Format(string, object)", span="0-0"];
m27_212 [cluster="string.Replace(string, string)", file="GDAXBrokerage.Messaging.cs", label="Entry string.Replace(string, string)", span="0-0"];
m27_75 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m27_214 [cluster="System.Threading.Thread.Sleep(int)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m27_194 [cluster="string.Substring(int)", file="GDAXBrokerage.Messaging.cs", label="Entry string.Substring(int)", span="0-0"];
m27_189 [cluster="Unk.Send", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Send", span=""];
m27_104 [cluster="Unk.Any", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Any", span=""];
m27_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m27_78 [cluster="System.Exception.ToString()", file="GDAXBrokerage.Messaging.cs", label="Entry System.Exception.ToString()", span="0-0"];
m27_150 [cluster="Unk.Execute", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Execute", span=""];
m27_185 [cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel.Channel()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel.Channel()", span="304-304"];
m27_24 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="92-92"];
m27_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", color=green, community=0, file="GDAXBrokerage.Messaging.cs", label="_streamLocked = false", prediction=42, span="103-103"];
m27_30 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="Log.Trace(''GDAXBrokerage.Messaging.UnlockStream(): Stream Unlocked.'')", span="101-101"];
m27_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="_messageBuffer.Any()", span="95-95"];
m27_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="_messageBuffer.TryDequeue(out e)", span="98-98"];
m27_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="OnMessageImpl(this, e)", span="99-99"];
m27_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="Log.Trace(''GDAXBrokerage.Messaging.UnlockStream(): Processing Backlog...'')", span="94-94"];
m27_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="WebSocketMessage e", span="97-97"];
m27_32 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="92-92"];
m27_74 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m27_183 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", span="466-466"];
m27_225 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="return Regex.IsMatch(symbol.Value, _symbolMatching);", span="468-468"];
m27_226 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", span="466-466"];
m27_162 [cluster="System.Collections.Generic.List<T>.Add(T)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m27_44 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="GDAXBrokerage.Messaging.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m27_148 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133"];
m27_223 [cluster="RestSharp.RestRequest.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry RestSharp.RestRequest.cstr", span=""];
m27_72 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", span="300-300"];
m27_152 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", file="GDAXBrokerage.Messaging.cs", label="var message = JsonConvert.DeserializeObject<Messages.Ticker>(data, JsonSettings)", span="303-303"];
m27_153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", file="GDAXBrokerage.Messaging.cs", label="var symbol = ConvertProductId(message.ProductId)", span="305-305"];
m27_154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", file="GDAXBrokerage.Messaging.cs", label=_tickLocker, span="307-307"];
m27_156 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", file="GDAXBrokerage.Messaging.cs", label="this.Ticks.Add(updating)", span="320-320"];
m27_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", file="GDAXBrokerage.Messaging.cs", label=_tickLocker, span="322-322"];
m27_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", file="GDAXBrokerage.Messaging.cs", label="this.Ticks.Add(last)", span="333-333"];
m27_155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", file="GDAXBrokerage.Messaging.cs", label="Tick updating = new Tick\r\n                {\r\n                    AskPrice = message.BestAsk,\r\n                    BidPrice = message.BestBid,\r\n                    Value = (message.BestAsk + message.BestBid) / 2m,\r\n                    Time = DateTime.UtcNow,\r\n                    Symbol = symbol,\r\n                    TickType = TickType.Quote,\r\n                    //todo: tick volume\r\n                }", span="309-318"];
m27_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", file="GDAXBrokerage.Messaging.cs", label="Tick last = new Tick\r\n                    {\r\n                        Value = message.Price,\r\n                        Time = DateTime.UtcNow,\r\n                        Symbol = symbol,\r\n                        TickType = TickType.Trade,\r\n                        Quantity = message.Side == ''sell'' ? -message.LastSize : message.LastSize\r\n                    }", span="324-331"];
m27_160 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTick(string)", span="300-300"];
m27_120 [cluster="Unk.Contains", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Contains", span=""];
m27_151 [cluster="Tick.cstr", file="GDAXBrokerage.Messaging.cs", label="Entry Tick.cstr", span=""];
m27_105 [cluster="Unk.First", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.First", span=""];
m27_23 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m27_161 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m27_114 [cluster="Unk.GetFee", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.GetFee", span=""];
m27_211 [cluster="string.ToString()", file="GDAXBrokerage.Messaging.cs", label="Entry string.ToString()", span="0-0"];
m27_13 [cluster="Unk.Select", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Select", span=""];
m27_14 [cluster="Unk.Subscribe", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.Subscribe", span=""];
m27_103 [cluster="Unk.ConvertProductId", file="GDAXBrokerage.Messaging.cs", label="Entry Unk.ConvertProductId", span=""];
m27_184 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", span="421-421"];
m27_196 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="var token = _canceller.Token", span="425-425"];
m27_197 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="var listener = Task.Factory.StartNew(() =>\r\n            {\r\n                OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''GDAXBrokerage.PollLatestTick: started polling for ticks: {symbol.Value.ToString()}''));\r\n                while (true)\r\n                {\r\n                    var rate = GetConversionRate(symbol.Value.Replace(''USD'', ''''));\r\n\r\n                    lock (_tickLocker)\r\n                    {\r\n                        var latest = new Tick\r\n                        {\r\n                            Value = rate,\r\n                            Time = DateTime.UtcNow,\r\n                            Symbol = symbol\r\n                        };\r\n                        Ticks.Add(latest);\r\n                    }\r\n\r\n                    Thread.Sleep(delay);\r\n                    if (token.IsCancellationRequested) break;\r\n                }\r\n                OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''PollLatestTick: stopped polling for ticks: {symbol.Value.ToString()}''));\r\n            }, token, TaskCreationOptions.LongRunning, TaskScheduler.Default)", span="426-448"];
m27_195 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="int delay = 36000000", span="424-424"];
m27_198 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="GDAXBrokerage.Messaging.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", span="421-421"];
m27_231 [file="GDAXBrokerage.Messaging.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m27_234 [file="GDAXBrokerage.Messaging.cs", label="QuantConnect.Symbol", span=""];
m27_232 [file="GDAXBrokerage.Messaging.cs", label=message, span=""];
m27_233 [file="GDAXBrokerage.Messaging.cs", label=message, span=""];
m27_236 [file="GDAXBrokerage.Messaging.cs", label=token, span=""];
m27_235 [file="GDAXBrokerage.Messaging.cs", label=delay, span=""];
m28_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultFileProvider.Fetch(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="GDAXBrokerage.Utility.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultFileProvider.Fetch(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", span="32-32"];
m28_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultFileProvider.Fetch(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="GDAXBrokerage.Utility.cs", label="return false;", span="34-34"];
m28_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultFileProvider.Fetch(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="GDAXBrokerage.Utility.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.DefaultFileProvider.Fetch(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", span="32-32"];
m29_4 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m29_5 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="59-59"];
m29_6 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="return 3m;", span="61-61"];
m29_7 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="59-59"];
m29_11 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="20-20"];
m29_12 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="82-82"];
m29_13 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="message = _message", span="84-84"];
m29_14 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return false;", span="85-85"];
m29_15 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="82-82"];
m29_32 [cluster="System.Math.Abs(decimal)", file="GDAXBrokerageModel.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m29_33 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m29_8 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="69-69"];
m29_9 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="return new GDAXFeeModel();", span="71-71"];
m29_10 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="69-69"];
m29_34 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="87-87"];
m29_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="GDAXBrokerageModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m29_0 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44"];
m29_3 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="44-44"];
m29_16 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="95-95"];
m29_17 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="order.BrokerId != null && order.BrokerId.Any()", span="97-97"];
m29_29 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return base.CanSubmitOrder(security, order, out message);", span="129-129"];
m29_18 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="message = _message", span="99-99"];
m29_19 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="return false;", span="100-100"];
m29_30 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModel.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="95-95"];
m29_35 [file="GDAXBrokerageModel.cs", label="QuantConnect.Brokerages.GDAXBrokerageModel", span=""];
m30_4 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="59-59"];
m30_57 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="20-20"];
m30_35 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", span="87-87"];
m30_40 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanOnlySubmitCryptoOrders(QuantConnect.SecurityType, bool)", span="87-87"];
m30_17 [cluster="Unk.CanUpdateOrder", file="GDAXBrokerageModelTests.cs", label="Entry Unk.CanUpdateOrder", span=""];
m30_15 [cluster="QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", span="54-54"];
m30_62 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", span="123-123"];
m30_68 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForMakerOrder()", span="123-123"];
m30_27 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXBrokerageModelTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m30_11 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", span="46-46"];
m30_12 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="48-48"];
m30_14 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanUpdateOrderTest()", span="46-46"];
m30_48 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="259-259"];
m30_3 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", span="12-12"];
m30_60 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m30_16 [cluster="QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", span="20-20"];
m30_59 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
m30_6 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", span="40-40"];
m30_7 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", file="GDAXBrokerageModelTests.cs", label="Assert.IsInstanceOf<GDAXFeeModel>(_unit.GetFeeModel(GDAXTestsHelpers.GetSecurity()))", span="42-42"];
m30_8 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetFeeModelTest()", span="40-40"];
m30_10 [cluster="Unk.>", file="GDAXBrokerageModelTests.cs", label="Entry Unk.>", span=""];
m30_26 [cluster="Mock<QuantConnect.Orders.Order>.cstr", file="GDAXBrokerageModelTests.cs", label="Entry Mock<QuantConnect.Orders.Order>.cstr", span=""];
m30_18 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", span="55-55"];
m30_19 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="BrokerageMessageEvent message", span="57-57"];
m30_22 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label=isUpdate, span="61-61"];
m30_24 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(!isUpdate, _unit.CanSubmitOrder(GDAXTestsHelpers.GetSecurity(), order.Object, out message))", span="66-66"];
m30_20 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="var order = new Mock<QuantConnect.Orders.Order>()", span="58-58"];
m30_25 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenBrokerageIdIsCorrect(bool)", span="55-55"];
m30_5 [cluster="Unk.AreEqual", file="GDAXBrokerageModelTests.cs", label="Entry Unk.AreEqual", span=""];
m30_9 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="69-69"];
m30_47 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="101-101"];
m30_50 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", span="112-112"];
m30_56 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.FeeModelReturnsCorrectOrderFeeForTakerOrder()", span="112-112"];
m30_69 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="54-54"];
m30_61 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m30_49 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="95-95"];
m30_28 [cluster="Unk.CanSubmitOrder", file="GDAXBrokerageModelTests.cs", label="Entry Unk.CanSubmitOrder", span=""];
m30_29 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", span="71-71"];
m30_34 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmitOrder_WhenQuantityIsLargeEnough(decimal, bool)", span="71-71"];
m30_41 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", span="102-102"];
m30_46 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.CanSubmit_CertainOrderTypes(QuantConnect.Orders.OrderType, bool)", span="102-102"];
m30_58 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m30_0 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", file="GDAXBrokerageModelTests.cs", label="Entry QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", span="34-34"];
m30_1 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", file="GDAXBrokerageModelTests.cs", label="Assert.AreEqual(3, _unit.GetLeverage(GDAXTestsHelpers.GetSecurity()))", span="36-36"];
m30_2 [cluster="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", file="GDAXBrokerageModelTests.cs", label="Exit QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests.GetLeverageTest()", span="34-34"];
m30_70 [file="GDAXBrokerageModelTests.cs", label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", span=""];
m31_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthMessageApiEventArgs.VerifyAndAuthMessageApiEventArgs(string, string)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthMessageApiEventArgs.VerifyAndAuthMessageApiEventArgs(string, string)", span="37-37"];
m31_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthMessageApiEventArgs.VerifyAndAuthMessageApiEventArgs(string, string)", file="GDAXBrokerageTests.cs", label="ApiData = apiData", span="39-39"];
m31_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthMessageApiEventArgs.VerifyAndAuthMessageApiEventArgs(string, string)", file="GDAXBrokerageTests.cs", label="XyzChallenge = xyzChallenge", span="40-40"];
m31_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthMessageApiEventArgs.VerifyAndAuthMessageApiEventArgs(string, string)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthMessageApiEventArgs.VerifyAndAuthMessageApiEventArgs(string, string)", span="37-37"];
m31_4 [file="GDAXBrokerageTests.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.VerifyAndAuthMessageApiEventArgs", span=""];
m32_0 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="28-28"];
m32_1 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="order.Type == OrderType.Limit", span="31-31"];
m32_4 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="decimal fee = security.Price * (order.Quantity < 0 ? (order.Quantity * -1) : order.Quantity) * divisor", span="39-39"];
m32_2 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="return 0m;", span="33-33"];
m32_5 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="return fee;", span="40-40"];
m32_6 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="GDAXFeeModel.cs", label="Exit QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="28-28"];
m33_10 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m33_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
m33_21 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="33-33"];
m33_22 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", color=green, community=0, file="GDAXTestHelpers.cs", label="return new WebSocketMessage(json);", prediction=43, span="35-35"];
m33_23 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetArgs(string)", span="33-33"];
m33_24 [cluster="QuantConnect.Brokerages.WebSocketMessage.WebSocketMessage(string)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Brokerages.WebSocketMessage.WebSocketMessage(string)", span="16-16"];
m33_4 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m33_7 [cluster="QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Securities.SymbolProperties.SymbolProperties(string, string, decimal, decimal, decimal)", span="70-70"];
m33_5 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig(QuantConnect.SecurityType)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig(QuantConnect.SecurityType)", span="18-18"];
m33_8 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig(QuantConnect.SecurityType)", color=green, community=0, file="GDAXTestHelpers.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), Symbol.Create(''BTCUSD'', securityType, Market.GDAX), Resolution.Minute, TimeZones.Utc, TimeZones.Utc,\r\n                false, true, false);", prediction=44, span="20-21"];
m33_9 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig(QuantConnect.SecurityType)", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.CreateConfig(QuantConnect.SecurityType)", span="18-18"];
m33_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m33_12 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="26-26"];
m33_13 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs", label="var order = new Orders.MarketOrder { BrokerId = new List<string> { brokerId }, Quantity = quantity, Id = id }", span="28-28"];
m33_14 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs", label="unit.CachedOrderIDs.TryAdd(1, order)", span="29-29"];
m33_15 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs", label="unit.FillSplit.TryAdd(id, new GDAXFill(order))", span="30-30"];
m33_16 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.AddOrder(QuantConnect.Brokerages.GDAX.GDAXBrokerage, int, string, decimal)", span="26-26"];
m33_3 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="317-317"];
m33_18 [cluster="System.Collections.Generic.List<T>.List()", file="GDAXTestHelpers.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m33_19 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="GDAXTestHelpers.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m33_11 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m33_17 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m33_0 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", file="GDAXTestHelpers.cs", label="Entry QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", span="12-12"];
m33_1 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", color=green, community=0, file="GDAXTestHelpers.cs", label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.Utc), CreateConfig(securityType), new Cash(CashBook.AccountCurrency, 1000, price),\r\n              new SymbolProperties(''BTCUSD'', CashBook.AccountCurrency, 1, 1, 0.01m));", prediction=45, span="14-15"];
m33_2 [cluster="QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", file="GDAXTestHelpers.cs", label="Exit QuantConnect.Tests.Brokerages.GDAX.GDAXTestsHelpers.GetSecurity(decimal, QuantConnect.SecurityType)", span="12-12"];
m34_21 [cluster="QuantConnect.Currencies.GetCurrencySymbol(string)", file="Global.cs", label="Entry QuantConnect.Currencies.GetCurrencySymbol(string)", span="299-299"];
m34_0 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m34_1 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="CurrencySymbol = ''$''", span="85-85"];
m34_2 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="ConversionRate = 1m", span="86-86"];
m34_3 [cluster="QuantConnect.Holding.Holding()", file="Global.cs", label="Exit QuantConnect.Holding.Holding()", span="83-83"];
m34_32 [cluster="string.Format(string, params object[])", file="Global.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m34_23 [cluster="QuantConnect.Holding.Clone()", file="Global.cs", label="Entry QuantConnect.Holding.Clone()", span="126-126"];
m34_24 [cluster="QuantConnect.Holding.Clone()", file="Global.cs", label="return new Holding\r\n            {\r\n                AveragePrice = AveragePrice,\r\n                Symbol = Symbol,\r\n                Type = Type,\r\n                Quantity = Quantity,\r\n                MarketPrice = MarketPrice,\r\n                MarketValue = MarketValue,\r\n                UnrealizedPnL = UnrealizedPnL,\r\n                ConversionRate  = ConversionRate,\r\n                CurrencySymbol = CurrencySymbol\r\n            };", span="128-139"];
m34_25 [cluster="QuantConnect.Holding.Clone()", file="Global.cs", label="Exit QuantConnect.Holding.Clone()", span="126-126"];
m34_33 [cluster="string.Format(string, object)", file="Global.cs", label="Entry string.Format(string, object)", span="0-0"];
m34_26 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="Entry QuantConnect.Holding.ToString()", span="145-145"];
m34_27 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="var value = string.Format(''{0}: {1} @ {2}{3} - Market: {2}{4}'', Symbol.Value, Quantity, CurrencySymbol, AveragePrice, MarketPrice)", span="147-147"];
m34_28 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="ConversionRate != 1m", span="149-149"];
m34_29 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="value += string.Format('' - Conversion: {0}'', ConversionRate)", span="151-151"];
m34_30 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="return value;", span="154-154"];
m34_31 [cluster="QuantConnect.Holding.ToString()", file="Global.cs", label="Exit QuantConnect.Holding.ToString()", span="145-145"];
m34_34 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="Entry QuantConnect.AlgorithmControl.AlgorithmControl()", span="487-487"];
m34_36 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="HasSubscribers = true", span="491-491"];
m34_37 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="Status = AlgorithmStatus.Running", span="492-492"];
m34_38 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="ChartSubscription = ''Strategy Equity''", span="493-493"];
m34_39 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="Global.cs", label="Exit QuantConnect.AlgorithmControl.AlgorithmControl()", span="487-487"];
m34_4 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Entry QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", span="93-93"];
m34_5 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="var holding = security.Holdings", span="96-96"];
m34_10 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="CurrencySymbol = Currencies.GetCurrencySymbol(security.QuoteCurrency.Symbol)", span="102-102"];
m34_11 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="ConversionRate = security.QuoteCurrency.ConversionRate", span="103-103"];
m34_6 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Symbol = holding.Symbol", span="98-98"];
m34_7 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Type = holding.Type", span="99-99"];
m34_8 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Quantity = holding.Quantity", span="100-100"];
m34_9 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="MarketValue = holding.HoldingsValue", span="101-101"];
m34_13 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="holding.Type == SecurityType.Forex || holding.Type == SecurityType.Cfd", span="106-106"];
m34_15 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="holding.Type == SecurityType.Crypto", span="111-111"];
m34_17 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="AveragePrice = Math.Round(holding.AveragePrice, rounding)", span="117-117"];
m34_18 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="MarketPrice = Math.Round(holding.Price, rounding)", span="118-118"];
m34_19 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="UnrealizedPnL = Math.Round(holding.UnrealizedProfit, 2)", span="119-119"];
m34_12 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="var rounding = 2", span="105-105"];
m34_14 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="rounding = 5", span="108-108"];
m34_16 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="rounding = 28", span="113-113"];
m34_20 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", file="Global.cs", label="Exit QuantConnect.Holding.Holding(QuantConnect.Securities.Security)", span="93-93"];
m34_22 [cluster="System.Math.Round(decimal, int)", file="Global.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m34_40 [file="Global.cs", label="QuantConnect.Holding", span=""];
m34_41 [file="Global.cs", label="QuantConnect.AlgorithmControl", span=""];
m35_4 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m35_5 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="70-70"];
m35_6 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GoogleDataDownloader.cs", label="AccountType == AccountType.Cash", span="72-72"];
m35_7 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GoogleDataDownloader.cs", label="return 1m;", span="74-74"];
m35_8 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GoogleDataDownloader.cs", label="return 3m;", span="77-77"];
m35_9 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="GoogleDataDownloader.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="70-70"];
m35_13 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="22-22"];
m35_14 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="98-98"];
m35_15 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="message = _message", span="100-100"];
m35_16 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="return false;", span="101-101"];
m35_17 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="98-98"];
m35_35 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="GoogleDataDownloader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m35_36 [cluster="System.Math.Abs(decimal)", file="GoogleDataDownloader.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m35_37 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m35_10 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="85-85"];
m35_11 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GoogleDataDownloader.cs", label="return new GDAXFeeModel();", span="87-87"];
m35_12 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="GoogleDataDownloader.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="85-85"];
m35_39 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="156-156"];
m35_40 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="GoogleDataDownloader.cs", label="return new LatestPriceFillModel();", span="158-158"];
m35_41 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="GoogleDataDownloader.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="156-156"];
m35_38 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="87-87"];
m35_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="GoogleDataDownloader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m35_42 [cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.LatestPriceFillModel()", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Orders.Fills.LatestPriceFillModel.LatestPriceFillModel()", span="27-27"];
m35_0 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="55-55"];
m35_1 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="GoogleDataDownloader.cs", label="accountType == AccountType.Margin", span="58-58"];
m35_2 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="GoogleDataDownloader.cs", label="new BrokerageMessageEvent(BrokerageMessageType.Warning, 0,\r\n                    ''It is recommend to use a cash account. Margin trading is currently in pre-Alpha. Use at your own risk and please report any issues encountered.'')", span="60-61"];
m35_3 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="GoogleDataDownloader.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="55-55"];
m35_18 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="111-111"];
m35_19 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="order.BrokerId != null && order.BrokerId.Any()", span="113-113"];
m35_23 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="MinimumOrderSizes.TryGetValue(security.Symbol.Value, out minimumOrderSize) &&\r\n                Math.Abs(order.Quantity) < minimumOrderSize", span="120-121"];
m35_26 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="security.Type != SecurityType.Crypto", span="130-130"];
m35_27 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''This model does not support '' + security.Type + '' security type.''\r\n                )", span="132-134"];
m35_29 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="order.Type != OrderType.Limit && order.Type != OrderType.Market && order.Type != OrderType.StopMarket", span="139-139"];
m35_30 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''This model does not support '' + order.Type + '' order type.''\r\n                )", span="141-143"];
m35_32 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="return base.CanSubmitOrder(security, order, out message);", span="148-148"];
m35_20 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="message = _message", span="115-115"];
m35_22 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="decimal minimumOrderSize", span="119-119"];
m35_21 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="return false;", span="116-116"];
m35_25 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="return false;", span="127-127"];
m35_28 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="return false;", span="136-136"];
m35_31 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="return false;", span="145-145"];
m35_33 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="GoogleDataDownloader.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="111-111"];
m35_43 [file="GoogleDataDownloader.cs", label="QuantConnect.Brokerages.GDAXBrokerageModel", span=""];
m37_9 [cluster="QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="75-75"];
m37_10 [cluster="QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IndicatorExtensions.cs", label="throw new NotImplementedException(''This method is not supposed to be called on the Split type.'');", span="78-78"];
m37_11 [cluster="QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="75-75"];
m37_3 [cluster="QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", span="40-40"];
m37_4 [cluster="QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="IndicatorExtensions.cs", label="Symbol = symbol", span="43-43"];
m37_5 [cluster="QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="IndicatorExtensions.cs", label="Time = date", span="44-44"];
m37_6 [cluster="QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="IndicatorExtensions.cs", label="ReferencePrice = price", span="45-45"];
m37_7 [cluster="QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="IndicatorExtensions.cs", label="SplitFactor = splitFactor", span="46-46"];
m37_8 [cluster="QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Data.Market.Split.Split(QuantConnect.Symbol, System.DateTime, decimal, decimal)", span="40-40"];
m37_19 [cluster="string.Format(string, object, object)", file="IndicatorExtensions.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m37_0 [cluster="QuantConnect.Data.Market.Split.Split()", file="IndicatorExtensions.cs", label="Entry QuantConnect.Data.Market.Split.Split()", span="28-28"];
m37_1 [cluster="QuantConnect.Data.Market.Split.Split()", file="IndicatorExtensions.cs", label="DataType = MarketDataType.Auxiliary", span="30-30"];
m37_2 [cluster="QuantConnect.Data.Market.Split.Split()", file="IndicatorExtensions.cs", label="Exit QuantConnect.Data.Market.Split.Split()", span="28-28"];
m37_16 [cluster="QuantConnect.Data.Market.Split.ToString()", file="IndicatorExtensions.cs", label="Entry QuantConnect.Data.Market.Split.ToString()", span="98-98"];
m37_17 [cluster="QuantConnect.Data.Market.Split.ToString()", file="IndicatorExtensions.cs", label="return string.Format(''{0}: {1}'', Symbol, SplitFactor);", span="100-100"];
m37_18 [cluster="QuantConnect.Data.Market.Split.ToString()", file="IndicatorExtensions.cs", label="Exit QuantConnect.Data.Market.Split.ToString()", span="98-98"];
m37_20 [cluster="QuantConnect.Data.Market.Split.Clone()", file="IndicatorExtensions.cs", label="Entry QuantConnect.Data.Market.Split.Clone()", span="110-110"];
m37_21 [cluster="QuantConnect.Data.Market.Split.Clone()", file="IndicatorExtensions.cs", label="return new Split(Symbol, Time, Price, SplitFactor);", span="112-112"];
m37_22 [cluster="QuantConnect.Data.Market.Split.Clone()", file="IndicatorExtensions.cs", label="Exit QuantConnect.Data.Market.Split.Clone()", span="110-110"];
m37_13 [cluster="QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IndicatorExtensions.cs", label="Entry QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="88-88"];
m37_14 [cluster="QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IndicatorExtensions.cs", label="throw new NotImplementedException(''This method is not supposed to be called on the Split type.'');", span="91-91"];
m37_15 [cluster="QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="IndicatorExtensions.cs", label="Exit QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="88-88"];
m37_12 [cluster="System.NotImplementedException.NotImplementedException(string)", file="IndicatorExtensions.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m37_23 [file="IndicatorExtensions.cs", label="QuantConnect.Data.Market.Split", span=""];
m38_6 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="InteractiveBrokersAccountData.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m38_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.FinancialAdvisor.FinancialAdvisorConfiguration.Clear()", file="InteractiveBrokersAccountData.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.FinancialAdvisor.FinancialAdvisorConfiguration.Clear()", span="53-53"];
m38_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", file="InteractiveBrokersAccountData.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", span="48-48"];
m38_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", file="InteractiveBrokersAccountData.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData.Clear()", span="48-48"];
m38_8 [file="InteractiveBrokersAccountData.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersAccountData", span=""];
m40_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="InteractiveBrokersBrokerageFactory.cs", label="var tradingMode = Read<string>(job.BrokerageData, ''ib-trading-mode'', errors)", span="88-88"];
m40_180 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.CreateTradeBarConfig()", file="InteractiveBrokersBrokerageFactory.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, false);", span="213-213"];
m40_181 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.CreateTradeBarConfig()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.CreateTradeBarConfig()", span="211-211"];
m40_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", span="34-34"];
m40_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="InteractiveBrokersBrokerageFactory.cs", label="var account = Read<string>(job.BrokerageData, ''ib-account'', errors)", span="85-85"];
m40_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="InteractiveBrokersBrokerageFactory.cs", label="var useTws = Config.GetBool(''ib-use-tws'')", span="79-79"];
m40_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="InteractiveBrokersBrokerageFactory.cs", label="var port = Config.GetInt(''ib-port'', 4001)", span="80-80"];
m40_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="InteractiveBrokersBrokerageFactory.cs", label="var host = Config.Get(''ib-host'', ''127.0.0.1'')", span="81-81"];
m40_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="InteractiveBrokersBrokerageFactory.cs", label="var twsDirectory = Config.Get(''ib-tws-dir'', ''C:\\Jts'')", span="82-82"];
m40_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="InteractiveBrokersBrokerageFactory.cs", label="var ibControllerDirectory = Config.Get(''ib-controller-dir'', ''C:\\IBController'')", span="83-83"];
m40_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="InteractiveBrokersBrokerageFactory.cs", label="var errors = new List<string>()", span="76-76"];
m40_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", span="34-34"];
m40_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="74-74"];
m40_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="InteractiveBrokersBrokerageFactory.cs", label="var userId = Read<string>(job.BrokerageData, ''ib-user-name'', errors)", span="86-86"];
m40_162 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", span="185-185"];
m40_168 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(0, securityCache.Volume)", span="195-195"];
m40_170 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(10, securityCache.Volume)", span="199-199"];
m40_172 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(20, securityCache.Volume)", span="203-203"];
m40_167 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="var securityCache = new SecurityCache()", span="193-193"];
m40_169 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="securityCache.AddData(tick1)", span="197-197"];
m40_171 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="securityCache.AddData(tick2)", span="201-201"];
m40_166 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="tick2.Update(1, 1, 1, 20, 1, 1)", span="191-191"];
m40_163 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="var tick1 = new Tick()", span="187-187"];
m40_165 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="var tick2 = new Tick()", span="190-190"];
m40_164 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="tick1.Update(1, 1, 1, 10, 1, 1)", span="188-188"];
m40_173 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.TickQuantityUpdatedInSecurityCache()", span="185-185"];
m40_108 [cluster="Unk.AlwaysOpen", file="InteractiveBrokersBrokerageFactory.cs", label="Entry Unk.AlwaysOpen", span=""];
m40_40 [cluster="Unk.IsNotNull", file="InteractiveBrokersBrokerageFactory.cs", label="Entry Unk.IsNotNull", span=""];
m40_175 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal, decimal, decimal)", span="398-398"];
m40_42 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", span="73-73"];
m40_57 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", color=green, community=0, file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsTrue(security.Holdings.IsShort)", prediction=46, span="95-95"];
m40_43 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="var security = GetSecurity()", span="75-75"];
m40_56 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsFalse(security.Holdings.IsLong)", span="94-94"];
m40_58 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="security.Holdings.SetHoldings(100m, 0)", span="98-98"];
m40_44 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="security.Holdings.SetHoldings(100m, 100)", span="78-78"];
m40_45 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(100m, security.Holdings.AveragePrice)", span="80-80"];
m40_46 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(100, security.Holdings.Quantity)", span="81-81"];
m40_47 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsTrue(security.HoldStock)", span="82-82"];
m40_48 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsTrue(security.Invested)", span="83-83"];
m40_49 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsTrue(security.Holdings.IsLong)", span="84-84"];
m40_50 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsFalse(security.Holdings.IsShort)", span="85-85"];
m40_51 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="security.Holdings.SetHoldings(100m, -100)", span="88-88"];
m40_52 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(100m, security.Holdings.AveragePrice)", span="90-90"];
m40_53 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(-100, security.Holdings.Quantity)", span="91-91"];
m40_54 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsTrue(security.HoldStock)", span="92-92"];
m40_55 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsTrue(security.Invested)", span="93-93"];
m40_59 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(100m, security.Holdings.AveragePrice)", span="100-100"];
m40_60 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="101-101"];
m40_61 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsFalse(security.HoldStock)", span="102-102"];
m40_62 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsFalse(security.Invested)", span="103-103"];
m40_63 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsFalse(security.Holdings.IsLong)", span="104-104"];
m40_64 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsFalse(security.Holdings.IsShort)", span="105-105"];
m40_65 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", span="73-73"];
m40_24 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsNotNull(security.PortfolioModel)", span="56-56"];
m40_23 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsInstanceOf<SecurityCache>(security.Cache)", span="55-55"];
m40_29 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsInstanceOf<InteractiveBrokersFeeModel>(security.FeeModel)", span="61-61"];
m40_69 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", span="110-110"];
m40_70 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="var security = GetSecurity()", span="112-112"];
m40_71 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="security.SetMarketPrice(new TradeBar(DateTime.Now, Symbols.SPY, 101m, 103m, 100m, 102m, 100000))", span="115-115"];
m40_72 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(101m, security.Open)", span="117-117"];
m40_73 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(103m, security.High)", span="118-118"];
m40_74 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(100m, security.Low)", span="119-119"];
m40_75 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(102m, security.Close)", span="120-120"];
m40_76 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(100000, security.Volume)", span="121-121"];
m40_77 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="security.SetMarketPrice(new Tick(DateTime.Now, Symbols.SPY, 104m, 104m, 104m))", span="124-124"];
m40_78 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(103m, security.High)", span="125-125"];
m40_79 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(102m, security.Close)", span="126-126"];
m40_80 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(104m, security.Price)", span="127-127"];
m40_81 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="security.SetMarketPrice(new Tick(DateTime.Now, Symbols.SPY, 99m, 99m, 99m))", span="130-130"];
m40_82 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(100m, security.Low)", span="131-131"];
m40_83 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(102m, security.Close)", span="132-132"];
m40_84 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(99m, security.Price)", span="133-133"];
m40_85 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", span="110-110"];
m40_177 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="94-94"];
m40_37 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsInstanceOf<SecurityDataFilter>(security.DataFilter)", span="69-69"];
m40_88 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m40_159 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Entry lambda expression", span="181-181"];
m40_101 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="security.SetLeverage(0.1m)", span="147-147"];
m40_100 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Entry lambda expression", span="147-147"];
m40_102 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Exit lambda expression", span="147-147"];
m40_122 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="option.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="164-164"];
m40_126 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="option.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="166-166"];
m40_129 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="option.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted)", span="167-167"];
m40_132 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="option.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="168-168"];
m40_135 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="option.SetDataNormalizationMode(DataNormalizationMode.TotalReturn)", span="169-169"];
m40_147 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="177-177"];
m40_151 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="178-178"];
m40_154 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted)", span="179-179"];
m40_157 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="180-180"];
m40_160 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="equity.SetDataNormalizationMode(DataNormalizationMode.TotalReturn)", span="181-181"];
m40_121 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Entry lambda expression", span="164-164"];
m40_123 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Exit lambda expression", span="164-164"];
m40_125 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Entry lambda expression", span="166-166"];
m40_127 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Exit lambda expression", span="166-166"];
m40_128 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Entry lambda expression", span="167-167"];
m40_130 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Exit lambda expression", span="167-167"];
m40_131 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Entry lambda expression", span="168-168"];
m40_133 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Exit lambda expression", span="168-168"];
m40_134 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Entry lambda expression", span="169-169"];
m40_136 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Exit lambda expression", span="169-169"];
m40_146 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Entry lambda expression", span="177-177"];
m40_148 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Exit lambda expression", span="177-177"];
m40_150 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Entry lambda expression", span="178-178"];
m40_152 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Exit lambda expression", span="178-178"];
m40_153 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Entry lambda expression", span="179-179"];
m40_155 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Exit lambda expression", span="179-179"];
m40_156 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Entry lambda expression", span="180-180"];
m40_158 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Exit lambda expression", span="180-180"];
m40_161 [cluster="lambda expression", file="InteractiveBrokersBrokerageFactory.cs", label="Exit lambda expression", span="181-181"];
m40_25 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsInstanceOf<SecurityPortfolioModel>(security.PortfolioModel)", span="57-57"];
m40_68 [cluster="Unk.IsFalse", file="InteractiveBrokersBrokerageFactory.cs", label="Entry Unk.IsFalse", span=""];
m40_182 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m40_87 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="531-531"];
m40_11 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m40_13 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="286-286"];
m40_19 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="var security = GetSecurity()", span="50-50"];
m40_14 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="70-70"];
m40_15 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m40_18 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", span="48-48"];
m40_17 [cluster="Unk.AreEqual", file="InteractiveBrokersBrokerageFactory.cs", label="Entry Unk.AreEqual", span=""];
m40_20 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsNotNull(security.Exchange)", span="52-52"];
m40_21 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsInstanceOf<SecurityExchange>(security.Exchange)", span="53-53"];
m40_22 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsNotNull(security.Cache)", span="54-54"];
m40_28 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.IsNotNull(security.PortfolioModel)", span="60-60"];
m40_119 [cluster="Unk.DoesNotThrow", file="InteractiveBrokersBrokerageFactory.cs", label="Entry Unk.DoesNotThrow", span=""];
m40_67 [cluster="Unk.IsTrue", file="InteractiveBrokersBrokerageFactory.cs", label="Entry Unk.IsTrue", span=""];
m40_26 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m40_27 [cluster="QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", span="86-86"];
m40_30 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m40_31 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m40_32 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", span="183-183"];
m40_33 [cluster="QuantConnect.Util.Composer.AddPart<T>(T)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Util.Composer.AddPart<T>(T)", span="75-75"];
m40_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", span="116-116"];
m40_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="InteractiveBrokersBrokerageFactory.cs", label="InteractiveBrokersGatewayRunner.Stop()", span="118-118"];
m40_36 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", span="116-116"];
m40_38 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", span="48-48"];
m40_41 [cluster="Unk.>", file="InteractiveBrokersBrokerageFactory.cs", label="Entry Unk.>", span=""];
m40_98 [cluster="Unk.EqualTo", file="InteractiveBrokersBrokerageFactory.cs", label="Entry Unk.EqualTo", span=""];
m40_103 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", span="152-152"];
m40_105 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(option.DataNormalizationMode, DataNormalizationMode.Raw)", span="156-156"];
m40_104 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="InteractiveBrokersBrokerageFactory.cs", label="var option = new Option(SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, DateTimeZone.Utc, DateTimeZone.Utc, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties(SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="154-154"];
m40_106 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", span="152-152"];
m40_137 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", span="173-173"];
m40_138 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="InteractiveBrokersBrokerageFactory.cs", label="var equity = new QuantConnect.Securities.Equity.Equity(SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, DateTimeZone.Utc, DateTimeZone.Utc, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="175-175"];
m40_139 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.Raw); })", span="177-177"];
m40_140 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="178-178"];
m40_141 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted); })", span="179-179"];
m40_142 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="180-180"];
m40_143 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.TotalReturn); })", span="181-181"];
m40_144 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", span="173-173"];
m40_176 [cluster="QuantConnect.Securities.SecurityCache.SecurityCache()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.SecurityCache.SecurityCache()", span="29-29"];
m40_99 [cluster="Unk.That", file="InteractiveBrokersBrokerageFactory.cs", label="Entry Unk.That", span=""];
m40_109 [cluster="SubscriptionDataConfig.cstr", file="InteractiveBrokersBrokerageFactory.cs", label="Entry SubscriptionDataConfig.cstr", span=""];
m40_110 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="43-43"];
m40_39 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", span="206-206"];
m40_178 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="InteractiveBrokersBrokerageFactory.cs", label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="208-208"];
m40_179 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", span="206-206"];
m40_97 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="573-573"];
m40_124 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="349-349"];
m40_111 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", span="160-160"];
m40_112 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="InteractiveBrokersBrokerageFactory.cs", label="var option = new Option(SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, DateTimeZone.Utc, DateTimeZone.Utc, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties(SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="162-162"];
m40_113 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.DoesNotThrow(() => { option.SetDataNormalizationMode(DataNormalizationMode.Raw); })", span="164-164"];
m40_114 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="166-166"];
m40_115 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted); })", span="167-167"];
m40_116 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="168-168"];
m40_117 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.TotalReturn); })", span="169-169"];
m40_118 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", span="160-160"];
m40_66 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m40_89 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", span="137-137"];
m40_90 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="InteractiveBrokersBrokerageFactory.cs", label="var security = GetSecurity()", span="139-139"];
m40_91 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="InteractiveBrokersBrokerageFactory.cs", label="security.SetLeverage(4m)", span="141-141"];
m40_92 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(4m,security.Leverage)", span="142-142"];
m40_93 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="InteractiveBrokersBrokerageFactory.cs", label="security.SetLeverage(5m)", span="144-144"];
m40_94 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.AreEqual(5m, security.Leverage)", span="145-145"];
m40_95 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="InteractiveBrokersBrokerageFactory.cs", label="Assert.That(() => security.SetLeverage(0.1m),\r\n                Throws.TypeOf<ArgumentException>().With.Message.EqualTo(''Leverage must be greater than or equal to 1.''))", span="147-148"];
m40_96 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="InteractiveBrokersBrokerageFactory.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", span="137-137"];
m40_107 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="49-49"];
m40_149 [cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89"];
m40_120 [cluster="Unk.Throws", file="InteractiveBrokersBrokerageFactory.cs", label="Entry Unk.Throws", span=""];
m40_174 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m40_86 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m40_145 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="InteractiveBrokersBrokerageFactory.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="65-65"];
m40_183 [file="InteractiveBrokersBrokerageFactory.cs", label="QuantConnect.Tests.Common.Securities.SecurityTests", span=""];
m40_184 [file="InteractiveBrokersBrokerageFactory.cs", label=security, span=""];
m40_185 [file="InteractiveBrokersBrokerageFactory.cs", label=option, span=""];
m40_186 [file="InteractiveBrokersBrokerageFactory.cs", label=equity, span=""];
m41_34 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m41_64 [cluster="string.Contains(string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry string.Contains(string)", span="0-0"];
m41_65 [cluster="System.Diagnostics.Process.Kill()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.Kill()", span="0-0"];
m41_105 [cluster="Unk.Where", file="InteractiveBrokersGatewayRunner.cs", label="Entry Unk.Where", span=""];
m41_101 [cluster="System.Diagnostics.Process.WaitForExit()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.WaitForExit()", span="0-0"];
m41_100 [cluster="System.IO.StreamReader.ReadToEnd()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m41_4 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m41_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="107-107"];
m41_38 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Log.Trace(''InteractiveBrokersGatewayRunner.Stop(): Stopping IBController...'')", span="116-116"];
m41_36 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="_scriptProcessId == 0", span="109-109"];
m41_39 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="OS.IsWindows", span="118-118"];
m41_37 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="return;", span="111-111"];
m41_40 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label=_useTws, span="120-120"];
m41_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Process.Start(''pkill'', ''xvfb-run'')", span="163-163"];
m41_61 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Log.Error(err)", span="178-178"];
m41_41 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Process.GetProcessesByName(''java'')", span="122-122"];
m41_49 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Process.GetProcesses()", span="141-141"];
m41_55 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Process.Start(''pkill'', ''java'')", span="164-164"];
m41_60 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label=Exception, span="176-176"];
m41_59 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="_scriptProcessId = 0", span="174-174"];
m41_42 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="process.MainWindowTitle.Contains(''Interactive Brokers'')", span="124-124"];
m41_44 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Thread.Sleep(2500)", span="127-127"];
m41_45 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Process.GetProcessesByName(''cmd'')", span="130-130"];
m41_43 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="process.Kill()", span="126-126"];
m41_50 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="process.MainWindowTitle.ToLower().Contains(''ibcontroller'') ||\r\n                                    process.MainWindowTitle.ToLower().Contains(''ib gateway'')", span="145-146"];
m41_53 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label=Exception, span="152-152"];
m41_52 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Thread.Sleep(2500)", span="149-149"];
m41_51 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="process.Kill()", span="148-148"];
m41_56 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Process.Start(''pkill'', ''Xvfb'')", span="165-165"];
m41_57 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Thread.Sleep(2500)", span="166-166"];
m41_58 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label=Exception, span="168-168"];
m41_46 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="process.MainWindowTitle.ToLower().Contains(''ibcontroller'')", span="132-132"];
m41_48 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Thread.Sleep(2500)", span="135-135"];
m41_47 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="process.Kill()", span="134-134"];
m41_62 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="107-107"];
m41_106 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="Entry lambda expression", span="270-285"];
m41_109 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="return parent.Id == id;", span="277-277"];
m41_107 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="var parent = ProcessExtensions.Parent(x)", span="274-274"];
m41_108 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="parent != null", span="275-275"];
m41_110 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="return false;", span="282-282"];
m41_111 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="return false;", span="284-284"];
m41_112 [cluster="lambda expression", file="InteractiveBrokersGatewayRunner.cs", label="Exit lambda expression", span="270-285"];
m41_129 [cluster="System.Diagnostics.PerformanceCounter.NextValue()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.PerformanceCounter.NextValue()", span="0-0"];
m41_70 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", span="186-186"];
m41_77 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersGatewayRunner.cs", label="Log.Error(err)", span="205-205"];
m41_76 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersGatewayRunner.cs", label=Exception, span="203-203"];
m41_78 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersGatewayRunner.cs", label="return false;", span="208-208"];
m41_72 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersGatewayRunner.cs", label="return false;", span="190-190"];
m41_74 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersGatewayRunner.cs", label="return true;", span="196-196"];
m41_75 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersGatewayRunner.cs", label="return IsIbControllerRunning();", span="201-201"];
m41_71 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersGatewayRunner.cs", label="_scriptProcessId == 0", span="188-188"];
m41_73 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersGatewayRunner.cs", label=_useTws, span="194-194"];
m41_79 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsRunning()", span="186-186"];
m41_68 [cluster="System.Diagnostics.Process.GetProcesses()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.GetProcesses()", span="0-0"];
m41_69 [cluster="System.Diagnostics.Process.Start(string, string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.Start(string, string)", span="0-0"];
m41_114 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", span="291-291"];
m41_116 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="var processesByName = Process.GetProcessesByName(processName)", span="294-294"];
m41_115 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="var processName = Process.GetProcessById(pid).ProcessName", span="293-293"];
m41_117 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="string processIndexdName = null", span="295-295"];
m41_119 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="index < processesByName.Length", span="297-297"];
m41_120 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="processIndexdName = index == 0 ? processName : processName + ''#'' + index", span="299-299"];
m41_118 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="var index = 0", span="297-297"];
m41_125 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="return processIndexdName;", span="307-307"];
m41_124 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="index++", span="297-297"];
m41_122 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="(int)processId.NextValue() == pid", span="301-301"];
m41_121 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="var processId = new PerformanceCounter(''Process'', ''ID Process'', processIndexdName)", span="300-300"];
m41_123 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="return processIndexdName;", span="303-303"];
m41_126 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindIndexedProcessName(int)", span="291-291"];
m41_67 [cluster="string.ToLower()", file="InteractiveBrokersGatewayRunner.cs", label="Entry string.ToLower()", span="0-0"];
m41_128 [cluster="System.Diagnostics.PerformanceCounter.PerformanceCounter(string, string, string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.PerformanceCounter.PerformanceCounter(string, string, string)", span="0-0"];
m41_3 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m41_127 [cluster="System.Diagnostics.Process.GetProcessById(int)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.GetProcessById(int)", span="0-0"];
m41_63 [cluster="System.Diagnostics.Process.GetProcessesByName(string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.GetProcessesByName(string)", span="0-0"];
m41_99 [cluster="System.Diagnostics.Process.Start()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.Start()", span="0-0"];
m41_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", span="48-48"];
m41_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", file="InteractiveBrokersGatewayRunner.cs", label="Start(Config.Get(''ib-controller-dir''),\r\n                Config.Get(''ib-tws-dir''),\r\n                Config.Get(''ib-user-name''),\r\n                Config.Get(''ib-password''),\r\n                Config.Get(''ib-trading-mode''),\r\n                Config.GetBool(''ib-use-tws'')\r\n                )", span="50-56"];
m41_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.StartFromConfiguration()", span="48-48"];
m41_97 [cluster="System.Diagnostics.Process.Process()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.Process()", span="0-0"];
m41_98 [cluster="System.Diagnostics.ProcessStartInfo.ProcessStartInfo()", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.ProcessStartInfo.ProcessStartInfo()", span="0-0"];
m41_66 [cluster="System.Threading.Thread.Sleep(int)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m41_31 [cluster="System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", span="0-0"];
m41_81 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", span="214-214"];
m41_82 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="InteractiveBrokersGatewayRunner.cs", label="Start(_ibControllerDirectory, _twsDirectory, _userId, _password, _tradingMode, _useTws)", span="216-216"];
m41_83 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Restart()", span="214-214"];
m41_27 [cluster="System.IO.Path.Combine(string, string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m41_28 [cluster="string.Format(string, params object[])", file="InteractiveBrokersGatewayRunner.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m41_80 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", span="222-222"];
m41_85 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="Process.GetProcesses()", span="226-226"];
m41_86 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="process.MainWindowTitle.ToLower().Contains(''ibcontroller'')", span="230-230"];
m41_92 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="var processFound = output.Contains(''java'') && output.Contains(''ibgateway'')", span="257-257"];
m41_84 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="OS.IsWindows", span="224-224"];
m41_88 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label=Exception, span="235-235"];
m41_95 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="return false;", span="264-264"];
m41_87 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="return true;", span="232-232"];
m41_91 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="var output = process.StandardOutput.ReadToEnd()", span="256-256"];
m41_93 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="process.WaitForExit()", span="259-259"];
m41_94 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="return processFound;", span="261-261"];
m41_89 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="var process = new Process\r\n                {\r\n                    StartInfo = new ProcessStartInfo\r\n                    {\r\n                        FileName = ''bash'',\r\n                        Arguments = ''-c 'ps aux | grep -v bash | grep java | grep ibgateway''',\r\n                        UseShellExecute = false,\r\n                        RedirectStandardOutput = true,\r\n                        CreateNoWindow = true\r\n                    }\r\n                }", span="243-253"];
m41_90 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="process.Start()", span="255-255"];
m41_96 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.IsIbControllerRunning()", span="222-222"];
m41_113 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", span="316-316"];
m41_134 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="InteractiveBrokersGatewayRunner.cs", label="return FindPidFromIndexedProcessName(FindIndexedProcessName(process.Id));", span="318-318"];
m41_135 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.Parent(System.Diagnostics.Process)", span="316-316"];
m41_29 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m41_30 [cluster="System.Diagnostics.ProcessStartInfo.ProcessStartInfo(string, string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Diagnostics.ProcessStartInfo.ProcessStartInfo(string, string)", span="0-0"];
m41_33 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m41_32 [cluster="System.TimeSpan.FromSeconds(double)", file="InteractiveBrokersGatewayRunner.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m41_130 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", span="310-310"];
m41_132 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="InteractiveBrokersGatewayRunner.cs", label="return Process.GetProcessById((int)parentId.NextValue());", span="313-313"];
m41_131 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="InteractiveBrokersGatewayRunner.cs", label="var parentId = new PerformanceCounter(''Process'', ''Creating Process ID'', indexedProcessName)", span="312-312"];
m41_133 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.ProcessExtensions.FindPidFromIndexedProcessName(string)", span="310-310"];
m41_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m41_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", color=green, community=0, file="InteractiveBrokersGatewayRunner.cs", label="Log.Trace($''InteractiveBrokersGatewayRunner.Start(): Launching IBController: {file} {ibControllerDirectory} {twsDirectory} {userId} XXX {useTwsSwitch} {tradingMode}'')", prediction=47, span="86-86"];
m41_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="var useTwsSwitch = useTws ? ''TWS'' : ''GATEWAY''", span="77-77"];
m41_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="var arguments = string.Format(''{0} {1} {2} {3} {4} {5} {6}'', file, ibControllerDirectory, twsDirectory, userId, password, useTwsSwitch, tradingMode)", span="84-84"];
m41_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="var file = OS.IsWindows ? batchFilename : bashFilename", span="83-83"];
m41_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="var processStartInfo = OS.IsWindows ? new ProcessStartInfo(''cmd.exe'', ''/C '' + arguments) : new ProcessStartInfo(''bash'', arguments)", span="88-88"];
m41_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="_ibControllerDirectory = ibControllerDirectory", span="70-70"];
m41_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="_twsDirectory = twsDirectory", span="71-71"];
m41_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="_userId = userId", span="72-72"];
m41_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="_password = password", span="73-73"];
m41_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="_tradingMode = tradingMode", span="74-74"];
m41_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="_useTws = useTws", span="75-75"];
m41_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="var batchFilename = Path.Combine(''InteractiveBrokers'', ''run-ib-controller.bat'')", span="78-78"];
m41_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="var bashFilename = Path.Combine(''InteractiveBrokers'', ''run-ib-controller.sh'')", span="79-79"];
m41_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="processStartInfo.UseShellExecute = false", span="90-90"];
m41_20 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="processStartInfo.RedirectStandardOutput = false", span="91-91"];
m41_21 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="var process = Process.Start(processStartInfo)", span="92-92"];
m41_23 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="Thread.Sleep(TimeSpan.FromSeconds(30))", span="96-96"];
m41_25 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="Log.Error(err)", span="100-100"];
m41_22 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="_scriptProcessId = process != null ? process.Id : 0", span="93-93"];
m41_24 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label=Exception, span="98-98"];
m41_26 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m41_102 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="InteractiveBrokersGatewayRunner.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", span="267-267"];
m41_103 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="InteractiveBrokersGatewayRunner.cs", label="return Process.GetProcesses().Where(x =>\r\n            {\r\n                try\r\n                {\r\n                    var parent = ProcessExtensions.Parent(x);\r\n                    if (parent != null)\r\n                    {\r\n                        return parent.Id == id;\r\n                    }\r\n                }\r\n                catch\r\n                {\r\n                    return false;\r\n                }\r\n                return false;\r\n            });", span="270-285"];
m41_104 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", file="InteractiveBrokersGatewayRunner.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.GetSpawnedProcesses(int)", span="267-267"];
m41_136 [file="InteractiveBrokersGatewayRunner.cs", label=int, span=""];
m42_4 [cluster="QuantConnect.Brokerages.IWebSocket.Connect()", file="IWebSocket.cs", label="Entry QuantConnect.Brokerages.IWebSocket.Connect()", span="40-40"];
m42_5 [cluster="QuantConnect.Brokerages.IWebSocket.Connect()", file="IWebSocket.cs", label="Exit QuantConnect.Brokerages.IWebSocket.Connect()", span="40-40"];
m42_6 [cluster="QuantConnect.Brokerages.IWebSocket.Close()", file="IWebSocket.cs", label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="45-45"];
m42_7 [cluster="QuantConnect.Brokerages.IWebSocket.Close()", file="IWebSocket.cs", label="Exit QuantConnect.Brokerages.IWebSocket.Close()", span="45-45"];
m42_0 [cluster="QuantConnect.Brokerages.IWebSocket.Initialize(string)", file="IWebSocket.cs", label="Entry QuantConnect.Brokerages.IWebSocket.Initialize(string)", span="29-29"];
m42_1 [cluster="QuantConnect.Brokerages.IWebSocket.Initialize(string)", file="IWebSocket.cs", label="Exit QuantConnect.Brokerages.IWebSocket.Initialize(string)", span="29-29"];
m42_2 [cluster="QuantConnect.Brokerages.IWebSocket.Send(string)", file="IWebSocket.cs", label="Entry QuantConnect.Brokerages.IWebSocket.Send(string)", span="35-35"];
m42_3 [cluster="QuantConnect.Brokerages.IWebSocket.Send(string)", file="IWebSocket.cs", label="Exit QuantConnect.Brokerages.IWebSocket.Send(string)", span="35-35"];
m43_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="var list = packet.Data", span="152-152"];
m43_235 [cluster="QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)", span="293-293"];
m43_186 [cluster="QuantConnect.Securities.Security.GetLastData()", file="LeanData.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="585-585"];
m43_107 [cluster="QuantConnect.Data.Market.OptionChains.OptionChains(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.OptionChains.OptionChains(System.DateTime)", span="34-34"];
m43_117 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="LeanData.cs", label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", span="194-194"];
m43_187 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LeanData.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m43_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="var baseDataCollectionCount = ((BaseDataCollection)list[0]).Data.Count", span="160-160"];
m43_94 [cluster="System.Collections.Generic.List<T>.List()", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m43_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="var dividends = new Dividends(algorithmTime)", span="143-143"];
m43_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="list.Count == 0", span="155-155"];
m43_95 [cluster="System.Collections.Generic.List<T>.List(int)", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m43_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="!packet.Configuration.IsInternalFeed", span="183-183"];
m43_98 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="LeanData.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m43_104 [cluster="QuantConnect.Data.Market.Splits.Splits(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.Splits.Splits(System.DateTime)", span="36-36"];
m43_118 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="136-136"];
m43_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="allDataForAlgorithm.Add(baseData)", span="186-186"];
m43_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="baseData.DataType != MarketDataType.Auxiliary", span="189-189"];
m43_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="!packet.Configuration.IsInternalFeed", span="191-191"];
m43_194 [cluster="lambda expression", file="LeanData.cs", label="option.PriceModel.Evaluate(option, sliceFuture.Value, contract)", span="385-385"];
m43_193 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="385-385"];
m43_195 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="385-385"];
m43_121 [cluster="lambda expression", file="LeanData.cs", label="Entry lambda expression", span="150-150"];
m43_123 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="150-150"];
m43_122 [cluster="lambda expression", file="LeanData.cs", label="x.Configuration.Symbol.SecurityType", span="150-150"];
m43_119 [cluster="lambda expression", file="LeanData.cs", label=slice, span="136-136"];
m43_120 [cluster="lambda expression", file="LeanData.cs", label="Exit lambda expression", span="136-136"];
m43_109 [cluster="QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents(System.DateTime)", span="36-36"];
m43_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="custom.Add(new UpdateData<Security>(packet.Security, packet.Configuration.Type, list))", span="175-175"];
m43_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="var consolidatorUpdate = new List<BaseData>(list.Count)", span="179-179"];
m43_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="count += baseDataCollectionCount", span="165-165"];
m43_137 [cluster="System.Collections.Generic.IDictionary<TKey, TCollection>.Add<TKey, TElement, TCollection>(TKey, TElement)", file="LeanData.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TCollection>.Add<TKey, TElement, TCollection>(TKey, TElement)", span="164-164"];
m43_101 [cluster="QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", span="35-35"];
m43_97 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="LeanData.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m43_232 [cluster="QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="115-115"];
m43_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="var symbol = packet.Security.Symbol", span="153-153"];
m43_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="i < list.Count", span="180-180"];
m43_11 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="rows.Add(current)", span="49-49"];
m43_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", span=""];
m43_28 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.EquityPerShareGrowth1Y, row.EarningRatios.EquityPerShareGrowth.OneYear)", span="70-70"];
m43_38 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="LeanData.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m43_18 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.CompanyShortName, row.CompanyReference.ShortName)", span="60-60"];
m43_27 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.CostOfRevenue12M, row.FinancialStatements.IncomeStatement.CostOfRevenue)", span="69-69"];
m43_35 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LeanData.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="314-314"];
m43_53 [cluster="Unk.Select", file="LeanData.cs", label="Entry Unk.Select", span=""];
m43_60 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters.FineFundamentalTestParameters(string)", file="LeanData.cs", label="Name = name", span="170-170"];
m43_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="packet.Security.Type == SecurityType.Future", span="209-209"];
m43_29 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.EquityPerShareGrowth1Y, row.EarningRatios.EquityPerShareGrowth)", span="71-71"];
m43_30 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.PeRatio, row.ValuationRatios.PERatio)", span="72-72"];
m43_31 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", span="34-34"];
m43_32 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="LeanData.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m43_34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="LeanData.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", span="156-156"];
m43_36 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="LeanData.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="73-73"];
m43_37 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LeanData.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m43_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="!HandleFuturesData(algorithmTime, baseData, futuresChains, packet.Security)", span="215-215"];
m43_91 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="slice = new Slice(algorithmTime, allDataForAlgorithm, tradeBars, quoteBars, ticks, optionChains, futuresChains, splits, dividends, delistings, symbolChanges, allDataForAlgorithm.Count > 0)", span="284-284"];
m43_90 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="consolidator.Add(new UpdateData<SubscriptionDataConfig>(packet.Configuration, packet.Configuration.Type, consolidatorUpdate))", span="280-280"];
m43_44 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m43_89 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="consolidatorUpdate.Count > 0", span="278-278"];
m43_47 [cluster="Unk.AreEqual", file="LeanData.cs", label="Entry Unk.AreEqual", span=""];
m43_59 [cluster="Unk.SetName", file="LeanData.cs", label="Entry Unk.SetName", span=""];
m43_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="packet.Security.Symbol.SecurityType == SecurityType.Equity", span="233-233"];
m43_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="optionUnderlyingUpdates[packet.Security.Symbol] = baseData", span="235-235"];
m43_80 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="symbolChanges[packet.Configuration.Symbol] = symbolChange", span="254-254"];
m43_83 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="cashSecurities.Contains(packet.Security.Symbol)", span="264-264"];
m43_85 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="cashKvp.Value.SecuritySymbol == packet.Security.Symbol", span="268-268"];
m43_87 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="cash.Add(new UpdateData<Cash>(cashKvp.Value, packet.Configuration.Type, cashUpdates))", span="271-271"];
m43_88 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="security.Add(new UpdateData<Security>(packet.Security, packet.Configuration.Type, securityUpdate))", span="276-276"];
m43_17 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="var row = rows[0]", span="59-59"];
m43_19 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.Symbol, row.Symbol)", span="61-61"];
m43_26 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.CostOfRevenue12M, row.FinancialStatements.IncomeStatement.CostOfRevenue.TwelveMonths)", span="68-68"];
m43_58 [cluster="TestCaseData.cstr", file="LeanData.cs", label="Entry TestCaseData.cstr", span=""];
m43_61 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters.FineFundamentalTestParameters(string)", file="LeanData.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters.FineFundamentalTestParameters(string)", span="168-168"];
m43_51 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters.FineFundamentalTestParameters(string)", file="LeanData.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters.FineFundamentalTestParameters(string)", span="168-168"];
m43_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="baseData.DataType == MarketDataType.FuturesChain", span="211-211"];
m43_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="futuresChains[baseData.Symbol] = (FuturesChain)baseData", span="213-213"];
m43_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="consolidatorUpdate.Add(baseData)", span="222-222"];
m43_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="var tick = baseData as Tick", span="227-227"];
m43_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="securityUpdate.Add(baseData)", span="230-230"];
m43_73 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="(delisting = baseData as Delisting) != null", span="239-239"];
m43_75 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="(dividend = baseData as Dividend) != null", span="243-243"];
m43_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="(split = baseData as Split) != null", span="247-247"];
m43_79 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="(symbolChange = baseData as SymbolChangedEvent) != null", span="251-251"];
m43_81 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="i++", span="180-180"];
m43_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="tick != null && tick.Suspicious", span="228-228"];
m43_82 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="securityUpdate.Count > 0", span="258-258"];
m43_21 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.Symbol != Symbol.Empty ? parameters.Symbol.Value : null, row.SecurityReference.SecuritySymbol)", span="63-63"];
m43_12 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="stopwatch.Stop()", span="52-52"];
m43_16 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="return;", span="57-57"];
m43_20 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.Symbol != Symbol.Empty ? parameters.Symbol.Value : null, row.CompanyReference.PrimarySymbol)", span="62-62"];
m43_84 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label=cashBook, span="266-266"];
m43_92 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="return new TimeSlice(utcDateTime, count, slice, data, cash, security, consolidator, custom, changes);", span="286-286"];
m43_78 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="splits[symbol] = split", span="249-249"];
m43_76 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="dividends[symbol] = dividend", span="245-245"];
m43_74 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="delistings[symbol] = delisting", span="241-241"];
m43_15 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="parameters.RowCount != 1", span="57-57"];
m43_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", span="54-54"];
m43_46 [cluster="System.Console.WriteLine(string, object, object)", file="LeanData.cs", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
m43_14 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.RowCount, rows.Count)", span="55-55"];
m43_86 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="var cashUpdates = new List<BaseData> {securityUpdate[securityUpdate.Count - 1]}", span="270-270"];
m43_13 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Console.WriteLine(''Total rows: {0}, elapsed time: {1}'', rows.Count, stopwatch.Elapsed)", span="53-53"];
m43_25 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.CostOfRevenue3M, row.FinancialStatements.IncomeStatement.CostOfRevenue.ThreeMonths)", span="67-67"];
m43_22 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.Ebitda3M, row.FinancialStatements.IncomeStatement.EBITDA.ThreeMonths)", span="64-64"];
m43_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.Ebitda12M, row.FinancialStatements.IncomeStatement.EBITDA)", span="66-66"];
m43_23 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.ReadsFineFundamental(QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters)", file="LeanData.cs", label="Assert.AreEqual(parameters.Ebitda12M, row.FinancialStatements.IncomeStatement.EBITDA.TwelveMonths)", span="65-65"];
m43_93 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="111-111"];
m43_233 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", span="541-541"];
m43_263 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="tick.TickType == TickType.Trade", span="543-543"];
m43_264 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.LastPrice = tick.Price", span="545-545"];
m43_265 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="tick.TickType == TickType.Quote", span="547-547"];
m43_266 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="tick.AskPrice != 0m", span="549-549"];
m43_267 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.AskPrice = tick.AskPrice", span="551-551"];
m43_268 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.AskSize = (long)tick.AskSize", span="552-552"];
m43_269 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="tick.BidPrice != 0m", span="554-554"];
m43_270 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.BidPrice = tick.BidPrice", span="556-556"];
m43_271 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.BidSize = (long)tick.BidSize", span="557-557"];
m43_272 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="tick.TickType == TickType.OpenInterest", span="560-560"];
m43_273 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="tick.Value != 0m", span="562-562"];
m43_274 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.OpenInterest = tick.Value", span="564-564"];
m43_275 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.Tick)", span="541-541"];
m43_103 [cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="37-37"];
m43_230 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="LeanData.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m43_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="81-81"];
m43_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="Time = time", span="91-91"];
m43_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="Slice = slice", span="93-93"];
m43_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="DataPointCount = dataPointCount", span="95-95"];
m43_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="Data = data", span="92-92"];
m43_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="CustomData = customData", span="94-94"];
m43_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="CashBookUpdateData = cashBookUpdateData", span="96-96"];
m43_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="ConsolidatorUpdateData = consolidatorUpdateData", span="98-98"];
m43_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="SecuritiesUpdateData = securitiesUpdateData", span="97-97"];
m43_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="SecurityChanges = securityChanges", span="99-99"];
m43_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="81-81"];
m43_99 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="LeanData.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m43_108 [cluster="QuantConnect.Data.Market.FuturesChains.FuturesChains(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.FuturesChains.FuturesChains(System.DateTime)", span="34-34"];
m43_116 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="LeanData.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m43_115 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", span="418-418"];
m43_200 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="!futuresChains.TryGetValue(canonical, out chain)", span="424-424"];
m43_209 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="!chain.Contracts.TryGetValue(baseData.Symbol, out contract)", span="441-441"];
m43_199 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="var canonical = Symbol.Create(symbol.ID.Symbol, SecurityType.Future, symbol.ID.Market)", span="423-423"];
m43_201 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="chain = new FuturesChain(canonical, algorithmTime)", span="426-426"];
m43_203 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="var universeData = baseData as FuturesChainUniverseDataCollection", span="430-430"];
m43_206 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="chain.FilteredContracts.Add(contractSymbol)", span="435-435"];
m43_212 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="chain.Contracts[baseData.Symbol] = contract", span="454-454"];
m43_216 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="chain.Ticks.Add(tick.Symbol, tick)", span="462-462"];
m43_220 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="chain.TradeBars[symbol] = tradeBar", span="468-468"];
m43_224 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="chain.QuoteBars[symbol] = quote", span="474-474"];
m43_227 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="chain.AddAuxData(baseData)", span="479-479"];
m43_208 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="FuturesContract contract", span="440-440"];
m43_210 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="var underlyingSymbol = baseData.Symbol.Underlying", span="443-443"];
m43_213 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="baseData.DataType", span="458-458"];
m43_217 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="UpdateContract(contract, tick)", span="463-463"];
m43_221 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="contract.LastPrice = tradeBar.Close", span="469-469"];
m43_225 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="UpdateContract(contract, quote)", span="475-475"];
m43_197 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="var symbol = baseData.Symbol", span="420-420"];
m43_202 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="futuresChains[canonical] = chain", span="427-427"];
m43_211 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="contract = new FuturesContract(baseData.Symbol, underlyingSymbol)\r\n                {\r\n                    Time = baseData.EndTime,\r\n                    LastPrice = security.Close,\r\n                    BidPrice = security.BidPrice,\r\n                    BidSize = (long)security.BidSize,\r\n                    AskPrice = security.AskPrice,\r\n                    AskSize = (long)security.AskSize,\r\n                    OpenInterest = security.OpenInterest\r\n                }", span="444-453"];
m43_215 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="var tick = (Tick)baseData", span="461-461"];
m43_219 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="var tradeBar = (TradeBar)baseData", span="467-467"];
m43_223 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="var quote = (QuoteBar)baseData", span="473-473"];
m43_198 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="FuturesChain chain", span="422-422"];
m43_204 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="universeData != null", span="431-431"];
m43_205 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="universeData.FilteredContracts", span="433-433"];
m43_226 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="MarketDataType.Base", span="478-478"];
m43_228 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="return true;", span="482-482"];
m43_214 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="MarketDataType.Tick", span="460-460"];
m43_218 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="MarketDataType.TradeBar", span="466-466"];
m43_222 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="MarketDataType.QuoteBar", span="472-472"];
m43_207 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="return false;", span="437-437"];
m43_229 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleFuturesData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.FuturesChains, QuantConnect.Securities.Security)", span="418-418"];
m43_196 [cluster="QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="LeanData.cs", label="Entry QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", span="34-34"];
m43_191 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", span="485-485"];
m43_236 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="quote.Ask != null && quote.Ask.Close != 0m", span="487-487"];
m43_237 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="contract.AskPrice = quote.Ask.Close", span="489-489"];
m43_238 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="contract.AskSize = (long)quote.LastAskSize", span="490-490"];
m43_239 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="quote.Bid != null && quote.Bid.Close != 0m", span="492-492"];
m43_240 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="contract.BidPrice = quote.Bid.Close", span="494-494"];
m43_241 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="contract.BidSize = (long)quote.LastBidSize", span="495-495"];
m43_242 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", span="485-485"];
m43_231 [cluster="QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.FuturesChain.FuturesChain(QuantConnect.Symbol, System.DateTime)", span="94-94"];
m43_106 [cluster="QuantConnect.Data.Market.Delistings.Delistings(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.Delistings.Delistings(System.DateTime)", span="36-36"];
m43_184 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m43_111 [cluster="QuantConnect.Lean.Engine.DataFeeds.UpdateData<T>.UpdateData(T, System.Type, System.Collections.Generic.IReadOnlyList<QuantConnect.Data.BaseData>)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.UpdateData<T>.UpdateData(T, System.Type, System.Collections.Generic.IReadOnlyList<QuantConnect.Data.BaseData>)", span="49-49"];
m43_110 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="LeanData.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m43_192 [cluster="QuantConnect.Data.Market.OptionChain.AddAuxData(QuantConnect.Data.BaseData)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.OptionChain.AddAuxData(QuantConnect.Data.BaseData)", span="297-297"];
m43_189 [cluster="QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func<QuantConnect.Securities.Option.OptionPriceModelResult>)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func<QuantConnect.Securities.Option.OptionPriceModelResult>)", span="175-175"];
m43_96 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LeanData.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m43_114 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", span="321-321"];
m43_164 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", color=green, community=0, file="LeanData.cs", label="option != null", prediction=48, span="383-383"];
m43_144 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="var option = security as Option", span="334-334"];
m43_163 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="chain.Contracts[baseData.Symbol] = contract", span="381-381"];
m43_165 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="contract.SetOptionPriceModel(() => option.PriceModel.Evaluate(option, sliceFuture.Value, contract))", span="385-385"];
m43_166 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="baseData.DataType", span="390-390"];
m43_174 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", color=green, community=0, file="LeanData.cs", label="contract.LastPrice = tradeBar.Close", prediction=49, span="401-401"];
m43_160 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="!chain.Contracts.TryGetValue(baseData.Symbol, out contract)", span="366-366"];
m43_162 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="contract = new OptionContract(baseData.Symbol, underlyingSymbol)\r\n                {\r\n                    Time = baseData.EndTime,\r\n                    LastPrice = security.Close,\r\n                    BidPrice = security.BidPrice,\r\n                    BidSize = (long)security.BidSize,\r\n                    AskPrice = security.AskPrice,\r\n                    AskSize = (long)security.AskSize,\r\n                    OpenInterest = security.OpenInterest,\r\n                    UnderlyingLastPrice = chain.Underlying.Price\r\n                }", span="369-379"];
m43_172 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="var tradeBar = (TradeBar)baseData", span="399-399"];
m43_173 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="chain.TradeBars[symbol] = tradeBar", span="400-400"];
m43_181 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="return true;", span="414-414"];
m43_175 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", color=green, community=0, file="LeanData.cs", label="MarketDataType.QuoteBar", prediction=50, span="404-404"];
m43_176 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="var quote = (QuoteBar)baseData", span="405-405"];
m43_141 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="!optionChains.TryGetValue(canonical, out chain)", span="327-327"];
m43_143 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="optionChains[canonical] = chain", span="330-330"];
m43_145 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="option != null", span="335-335"];
m43_146 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="var underlyingData = option.Underlying.GetLastData()", span="337-337"];
m43_148 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="optionUnderlyingUpdates.TryGetValue(option.Underlying.Symbol, out underlyingUpdate)", span="340-340"];
m43_142 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="chain = new OptionChain(canonical, algorithmTime)", span="329-329"];
m43_167 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="MarketDataType.Tick", span="392-392"];
m43_171 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="MarketDataType.TradeBar", span="398-398"];
m43_179 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="MarketDataType.Base", span="410-410"];
m43_159 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="OptionContract contract", span="365-365"];
m43_161 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="var underlyingSymbol = baseData.Symbol.Underlying", span="368-368"];
m43_170 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="UpdateContract(contract, tick)", span="395-395"];
m43_178 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="UpdateContract(contract, quote)", span="407-407"];
m43_138 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="var symbol = baseData.Symbol", span="323-323"];
m43_180 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="chain.AddAuxData(baseData)", span="411-411"];
m43_177 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="chain.QuoteBars[symbol] = quote", span="406-406"];
m43_151 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="var universeData = baseData as OptionChainUniverseDataCollection", span="348-348"];
m43_168 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="var tick = (Tick)baseData", span="393-393"];
m43_140 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="var canonical = Symbol.CreateOption(symbol.Underlying, symbol.ID.Market, default(OptionStyle), default(OptionRight), 0, SecurityIdentifier.DefaultDate)", span="326-326"];
m43_150 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="chain.Underlying = underlyingData", span="345-345"];
m43_154 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="chain.Contracts", span="353-353"];
m43_155 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="addedContract.Value.UnderlyingLastPrice = chain.Underlying.Price", span="355-355"];
m43_157 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="chain.FilteredContracts.Add(contractSymbol)", span="360-360"];
m43_169 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="chain.Ticks.Add(tick.Symbol, tick)", span="394-394"];
m43_147 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="BaseData underlyingUpdate", span="339-339"];
m43_149 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="underlyingData = underlyingUpdate", span="342-342"];
m43_152 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="universeData != null", span="349-349"];
m43_139 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="OptionChain chain", span="325-325"];
m43_153 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="universeData.Underlying != null", span="351-351"];
m43_158 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="return false;", span="362-362"];
m43_156 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="universeData.FilteredContracts", span="358-358"];
m43_182 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>)", span="321-321"];
m43_188 [cluster="QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="165-165"];
m43_112 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LeanData.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m43_234 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", span="527-527"];
m43_256 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="quote.Ask != null && quote.Ask.Close != 0m", span="529-529"];
m43_257 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="contract.AskPrice = quote.Ask.Close", span="531-531"];
m43_258 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="contract.AskSize = (long)quote.LastAskSize", span="532-532"];
m43_259 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="quote.Bid != null && quote.Bid.Close != 0m", span="534-534"];
m43_260 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="contract.BidPrice = quote.Bid.Close", span="536-536"];
m43_261 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="contract.BidSize = (long)quote.LastBidSize", span="537-537"];
m43_262 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.FuturesContract, QuantConnect.Data.Market.QuoteBar)", span="527-527"];
m43_185 [cluster="QuantConnect.Data.Market.OptionChain.OptionChain(QuantConnect.Symbol, System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.OptionChain.OptionChain(QuantConnect.Symbol, System.DateTime)", span="94-94"];
m43_190 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", span="499-499"];
m43_245 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", color=green, community=0, file="LeanData.cs", label="tick.TickType == TickType.Quote", prediction=51, span="505-505"];
m43_243 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="tick.TickType == TickType.Trade", span="501-501"];
m43_246 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="tick.AskPrice != 0m", span="507-507"];
m43_252 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="tick.TickType == TickType.OpenInterest", span="518-518"];
m43_253 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", color=green, community=0, file="LeanData.cs", label="tick.Value != 0m", prediction=51, span="520-520"];
m43_254 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.OpenInterest = tick.Value", span="522-522"];
m43_244 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.LastPrice = tick.Price", span="503-503"];
m43_247 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.AskPrice = tick.AskPrice", span="509-509"];
m43_248 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.AskSize = (long)tick.AskSize", span="510-510"];
m43_249 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="tick.BidPrice != 0m", span="512-512"];
m43_250 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.BidPrice = tick.BidPrice", span="514-514"];
m43_251 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="contract.BidSize = (long)tick.BidSize", span="515-515"];
m43_255 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", span="499-499"];
m43_102 [cluster="QuantConnect.Data.Market.QuoteBars.QuoteBars(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.QuoteBars.QuoteBars(System.DateTime)", span="34-34"];
m43_183 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="LeanData.cs", label="Entry QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="119-119"];
m43_105 [cluster="QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", file="LeanData.cs", label="Entry QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", span="36-36"];
m43_113 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", span="292-292"];
m43_127 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="ticks.Add(symbol, (Tick)baseData)", span="300-300"];
m43_124 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="var symbol = baseData.Symbol", span="294-294"];
m43_126 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="MarketDataType.Tick", span="299-299"];
m43_125 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="baseData.DataType", span="297-297"];
m43_129 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="tradeBars[symbol] = (TradeBar) baseData", span="304-304"];
m43_131 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="quoteBars[symbol] = (QuoteBar) baseData", span="308-308"];
m43_133 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="optionChains[symbol] = (OptionChain) baseData", span="312-312"];
m43_135 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="futuresChains[symbol] = (FuturesChain)baseData", span="316-316"];
m43_128 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="MarketDataType.TradeBar", span="303-303"];
m43_130 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="MarketDataType.QuoteBar", span="307-307"];
m43_132 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="MarketDataType.OptionChain", span="311-311"];
m43_134 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="MarketDataType.FuturesChain", span="315-315"];
m43_136 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", file="LeanData.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.FuturesChains)", span="292-292"];
m43_100 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="LeanData.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m43_278 [file="LeanData.cs", label="System.Lazy<QuantConnect.Data.Slice>", span=""];
m43_279 [file="LeanData.cs", label=option, span=""];
m43_280 [file="LeanData.cs", label=contract, span=""];
m43_277 [file="LeanData.cs", label=slice, span=""];
m43_276 [file="LeanData.cs", label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", span=""];
m44_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.BaseDataCollectionSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="LeanDataTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.BaseDataCollectionSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="41-41"];
m44_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.BaseDataCollectionSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="LeanDataTests.cs", label="_tradableDaysProvider = tradableDaysProvider ?? (request => request.TradableDays)", span="43-43"];
m44_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.BaseDataCollectionSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="LeanDataTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.BaseDataCollectionSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="41-41"];
m44_14 [cluster="System.Func<T, TResult>.Invoke(T)", file="LeanDataTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m44_17 [cluster="Unk.ForSource", file="LeanDataTests.cs", label="Entry Unk.ForSource", span=""];
m44_19 [cluster="BaseDataCollection.cstr", file="LeanDataTests.cs", label="Entry BaseDataCollection.cstr", span=""];
m44_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="LeanDataTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="35-35"];
m44_21 [cluster="Unk.GetEnumerator", file="LeanDataTests.cs", label="Entry Unk.GetEnumerator", span=""];
m44_18 [cluster="Unk.Read", file="LeanDataTests.cs", label="Entry Unk.Read", span=""];
m44_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="LeanDataTests.cs", label="_dataCacheProvider = new SingleEntryDataCacheProvider(dataProvider)", span="54-54"];
m44_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="LeanDataTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="52-52"];
m44_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="LeanDataTests.cs", label="var configuration = request.Configuration", span="55-55"];
m44_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="LeanDataTests.cs", label="var tradableDays = _tradableDaysProvider(request)", span="56-56"];
m44_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="LeanDataTests.cs", label="var sourceFactory = (BaseData) Activator.CreateInstance(request.Configuration.Type)", span="57-57"];
m44_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="LeanDataTests.cs", label="return (\r\n                from date in tradableDays\r\n                let source = sourceFactory.GetSource(configuration, date, false)\r\n                let factory = SubscriptionDataSourceReader.ForSource(source, _dataCacheProvider, configuration, date, false)\r\n                let coarseFundamentalForDate = factory.Read(source)\r\n                select new BaseDataCollection(date.AddDays(1), configuration.Symbol, coarseFundamentalForDate)\r\n                ).GetEnumerator();", span="59-65"];
m44_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="LeanDataTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="52-52"];
m44_20 [cluster="Unk.AddDays", file="LeanDataTests.cs", label="Entry Unk.AddDays", span=""];
m44_16 [cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataTests.cs", label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="160-160"];
m44_15 [cluster="System.Activator.CreateInstance(System.Type)", file="LeanDataTests.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m44_3 [cluster="lambda expression", file="LeanDataTests.cs", label="Entry lambda expression", span="43-43"];
m44_4 [cluster="lambda expression", file="LeanDataTests.cs", label="request.TradableDays", span="43-43"];
m44_5 [cluster="lambda expression", file="LeanDataTests.cs", label="Exit lambda expression", span="43-43"];
m44_22 [file="LeanDataTests.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataCollectionSubscriptionEnumeratorFactory", span=""];
m47_79 [cluster="System.Math.Max(long, long)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m47_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="48-48"];
m47_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="48-48"];
m47_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.FrontierAwareEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, QuantConnect.TimeZoneOffsetProvider)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator.FrontierAwareEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, QuantConnect.TimeZoneOffsetProvider)", span="45-45"];
m47_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.RateLimitEnumerator(System.Collections.Generic.IEnumerator<T>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.RateLimitEnumerator(System.Collections.Generic.IEnumerator<T>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", span="42-42"];
m47_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMaximumDataAge(System.TimeSpan)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMaximumDataAge(System.TimeSpan)", span="152-152"];
m47_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMaximumDataAge(System.TimeSpan)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMaximumDataAge(System.TimeSpan)", span="152-152"];
m47_52 [cluster="System.Collections.Generic.List<T>.List()", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m47_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="37-37"];
m47_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", span="30-30"];
m47_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", span="37-37"];
m47_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.LiveCustomDataSubscriptionEnumeratorFactory(QuantConnect.Lean.Engine.DataFeeds.ITimeProvider)", span="37-37"];
m47_12 [cluster="QuantConnect.Util.Ref.Create<T>(T)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Util.Ref.Create<T>(T)", span="100-100"];
m47_47 [cluster="lambda expression", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry lambda expression", span="91-95"];
m47_18 [cluster="lambda expression", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry lambda expression", span="59-99"];
m47_34 [cluster="lambda expression", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Exit lambda expression", span="59-99"];
m47_50 [cluster="lambda expression", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Exit lambda expression", span="91-95"];
m47_65 [cluster="QuantConnect.Time.Max(System.DateTime, System.DateTime)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Time.Max(System.DateTime, System.DateTime)", span="189-189"];
m47_73 [cluster="System.TimeSpan.FromMinutes(double)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m47_51 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m47_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator.FastForwardEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, DateTimeZone, System.TimeSpan)", span="43-43"];
m47_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="23-23"];
m47_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SingleEntryDataCacheProvider.SingleEntryDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="35-35"];
m47_38 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m47_37 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m47_40 [cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="160-160"];
m47_75 [cluster="System.TimeSpan.FromTicks(long)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m47_46 [cluster="System.Collections.Generic.IEnumerator<T>.SelectMany<T, TResult>(System.Func<T, System.Collections.Generic.IEnumerator<TResult>>)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.Collections.Generic.IEnumerator<T>.SelectMany<T, TResult>(System.Func<T, System.Collections.Generic.IEnumerator<TResult>>)", span="59-59"];
m47_74 [cluster="System.Math.Min(long, long)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m47_13 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="50-50"];
m47_78 [cluster="System.TimeSpan.FromSeconds(double)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m47_14 [cluster="System.Func<T, TResult>.Invoke(T)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m47_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.SourceRequiresFastForward(QuantConnect.Data.SubscriptionDataSource)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.SourceRequiresFastForward(QuantConnect.Data.SubscriptionDataSource)", span="141-141"];
m47_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.SourceRequiresFastForward(QuantConnect.Data.SubscriptionDataSource)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.SourceRequiresFastForward(QuantConnect.Data.SubscriptionDataSource)", span="141-141"];
m47_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", span="38-38"];
m47_16 [cluster="QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", span="51-51"];
m47_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMinimumTimeBetweenCalls(System.TimeSpan)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMinimumTimeBetweenCalls(System.TimeSpan)", span="147-147"];
m47_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMinimumTimeBetweenCalls(System.TimeSpan)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetMinimumTimeBetweenCalls(System.TimeSpan)", span="147-147"];
m47_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", span="106-106"];
m47_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.EnumerateDataSourceReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Interfaces.IDataProvider, QuantConnect.Util.Ref<System.DateTime>, QuantConnect.Data.SubscriptionDataSource, System.DateTime)", span="106-106"];
m47_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="132-132"];
m47_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory.GetSubscriptionDataSourceReader(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="132-132"];
m47_39 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m47_80 [file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.LiveCustomDataSubscriptionEnumeratorFactory", span=""];
m47_81 [file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label=config, span=""];
m47_82 [file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label=lastSourceRefreshTime, span=""];
m47_83 [file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label=sourceFactory, span=""];
m47_84 [file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label="QuantConnect.Interfaces.IDataProvider", span=""];
m47_85 [file="LiveCustomDataSubscriptionEnumeratorFactory.cs", label=frontier, span=""];
m48_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEventArgs.TickEventArgs(int, int)", file="LiveCustomDataSubscriptionEnumeratorFactoryTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.TickEventArgs.TickEventArgs(int, int)", span="37-37"];
m48_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEventArgs.TickEventArgs(int, int)", file="LiveCustomDataSubscriptionEnumeratorFactoryTests.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.TickEventArgs.TickEventArgs(int, int)", span="37-37"];
m48_4 [file="LiveCustomDataSubscriptionEnumeratorFactoryTests.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.TickEventArgs", span=""];
m50_25 [cluster="Unk.Where", file="LiveTradingRealTimeHandler.cs", label="Entry Unk.Where", span=""];
m50_76 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="180-180"];
m50_77 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="ScheduledEvent scheduledEvent", span="182-182"];
m50_78 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="_scheduledEvents.TryRemove(name, out scheduledEvent)", span="183-183"];
m50_79 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Remove(string)", span="180-180"];
m50_88 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="LiveTradingRealTimeHandler.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m50_28 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Entry lambda expression", span="74-78"];
m50_29 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="RefreshMarketHoursToday(triggerTime.ConvertFromUtc(_algorithm.TimeZone).Date)", span="77-77"];
m50_31 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Entry lambda expression", span="84-84"];
m50_30 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Exit lambda expression", span="74-78"];
m50_33 [cluster="lambda expression", file="LiveTradingRealTimeHandler.cs", label="Exit lambda expression", span="84-84"];
m50_57 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m50_83 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="200-200"];
m50_84 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.ScanPastEvents(System.DateTime)", span="200-200"];
m50_26 [cluster="Unk.EverySecurityEndOfDay", file="LiveTradingRealTimeHandler.cs", label="Entry Unk.EverySecurityEndOfDay", span=""];
m50_85 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="209-209"];
m50_86 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="_cancellationTokenSource.Cancel()", span="211-211"];
m50_87 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Exit()", span="209-209"];
m50_54 [cluster="System.Convert.ToInt32(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m50_59 [cluster="System.Exception.Exception(string)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m50_53 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="567-567"];
m50_18 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="147-147"];
m50_61 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="date = date.Date", span="149-149"];
m50_62 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="_algorithm.Securities.Values", span="152-152"];
m50_63 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="var marketHours = _api.MarketToday(date, security.Symbol)", span="154-154"];
m50_64 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="security.Exchange.SetMarketHours(marketHours, date.DayOfWeek)", span="155-155"];
m50_65 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="var localMarketHours = security.Exchange.Hours.MarketHours[date.DayOfWeek]", span="156-156"];
m50_66 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(string.Format(''LiveTradingRealTimeHandler.RefreshMarketHoursToday({0}): Market hours set: Symbol: {1} {2} ({3})'',\r\n                        security.Type, security.Symbol, localMarketHours, security.Exchange.Hours.TimeZone))", span="157-158"];
m50_67 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.RefreshMarketHoursToday(System.DateTime)", span="147-147"];
m50_68 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.Symbol)", span="288-288"];
m50_56 [cluster="QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)", span="126-126"];
m50_80 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m50_35 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="103-103"];
m50_36 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="_isActive = true", span="105-105"];
m50_37 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="!_cancellationTokenSource.IsCancellationRequested", span="108-108"];
m50_38 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var time = DateTime.UtcNow", span="111-111"];
m50_49 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="_isActive = false", span="140-140"];
m50_39 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var nextSecond = time.RoundUp(TimeSpan.FromSeconds(1))", span="114-114"];
m50_40 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var delay = Convert.ToInt32((nextSecond - time).TotalMilliseconds)", span="115-115"];
m50_43 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.Value.Scan(time)", span="123-123"];
m50_41 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Thread.Sleep(delay < 0 ? 1 : delay)", span="116-116"];
m50_42 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label=_scheduledEvents, span="119-119"];
m50_44 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label=ScheduledEventException, span="125-125"];
m50_45 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="var errorMessage = $''LiveTradingRealTimeHandler.Run(): There was an error in a scheduled event {scheduledEvent.Key}. The error was {scheduledEventException.ScheduledEventExceptionMessage}''", span="127-127"];
m50_46 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Log.Error(errorMessage)", span="129-129"];
m50_47 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="_resultHandler.RuntimeError(errorMessage)", span="131-131"];
m50_48 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="_algorithm.RunTimeError = new Exception(errorMessage)", span="135-135"];
m50_50 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Log.Trace(''LiveTradingRealTimeHandler.Run(): Exiting thread... Exit triggered: '' + _cancellationTokenSource.IsCancellationRequested)", span="141-141"];
m50_51 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Run()", span="103-103"];
m50_69 [cluster="QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable<QuantConnect.Securities.MarketHoursSegment>, params System.DayOfWeek[])", span="126-126"];
m50_16 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="LiveTradingRealTimeHandler.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m50_27 [cluster="QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)", span="183-183"];
m50_55 [cluster="System.Threading.Thread.Sleep(int)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m50_75 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="LiveTradingRealTimeHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m50_21 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m50_34 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m50_20 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="249-249"];
m50_81 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="190-190"];
m50_82 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.SetTime(System.DateTime)", span="190-190"];
m50_22 [cluster="ScheduledEvent.cstr", file="LiveTradingRealTimeHandler.cs", label="Entry ScheduledEvent.cstr", span=""];
m50_0 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="56-56"];
m50_1 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_api = api", span="59-59"];
m50_2 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_algorithm = algorithm", span="60-60"];
m50_3 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_resultHandler = resultHandler", span="61-61"];
m50_13 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.Value.SkipEventsUntil(algorithm.UtcTime)", span="93-93"];
m50_4 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="_cancellationTokenSource = new CancellationTokenSource()", span="62-62"];
m50_5 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="var todayInAlgorithmTimeZone = DateTime.UtcNow.ConvertFromUtc(_algorithm.TimeZone).Date", span="64-64"];
m50_6 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="RefreshMarketHoursToday(todayInAlgorithmTimeZone)", span="67-67"];
m50_7 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="var times =\r\n                from date in Time.EachDay(todayInAlgorithmTimeZone.AddDays(1), Time.EndOfTime)\r\n                select date.ConvertToUtc(_algorithm.TimeZone)", span="70-72"];
m50_9 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Add(ScheduledEventFactory.EveryAlgorithmEndOfDay(_algorithm, _resultHandler, todayInAlgorithmTimeZone, Time.EndOfTime, ScheduledEvent.AlgorithmEndOfDayDelta, DateTime.UtcNow))", span="81-81"];
m50_11 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Add(ScheduledEventFactory.EverySecurityEndOfDay(_algorithm, _resultHandler, security, todayInAlgorithmTimeZone, Time.EndOfTime, ScheduledEvent.SecurityEndOfDayDelta, DateTime.UtcNow))", span="87-87"];
m50_8 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Add(new ScheduledEvent(''RefreshMarketHours'', times, (name, triggerTime) =>\r\n            {\r\n                // refresh market hours from api every day\r\n                RefreshMarketHoursToday(triggerTime.ConvertFromUtc(_algorithm.TimeZone).Date);\r\n            }))", span="74-78"];
m50_12 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label=_scheduledEvents, span="90-90"];
m50_14 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.Value.IsLoggingEnabled = Log.DebuggingEnabled", span="95-95"];
m50_15 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="56-56"];
m50_70 [cluster="Unk.Format", file="LiveTradingRealTimeHandler.cs", label="Entry Unk.Format", span=""];
m50_23 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="166-166"];
m50_71 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="_algorithm != null", span="168-168"];
m50_72 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="scheduledEvent.SkipEventsUntil(_algorithm.UtcTime)", span="170-170"];
m50_73 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="_scheduledEvents.AddOrUpdate(scheduledEvent.Name, scheduledEvent)", span="173-173"];
m50_74 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", file="LiveTradingRealTimeHandler.cs", label="Exit QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.Add(QuantConnect.Scheduling.ScheduledEvent)", span="166-166"];
m50_60 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m50_19 [cluster="System.DateTime.AddDays(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m50_24 [cluster="QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.ScheduledEventFactory.EveryAlgorithmEndOfDay(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime, System.DateTime, System.TimeSpan, System.DateTime?)", span="64-64"];
m50_52 [cluster="System.TimeSpan.FromSeconds(double)", file="LiveTradingRealTimeHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m50_58 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="LiveTradingRealTimeHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="134-134"];
m50_17 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="LiveTradingRealTimeHandler.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m50_89 [file="LiveTradingRealTimeHandler.cs", label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", span=""];
m51_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="60-60"];
m51_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="60-60"];
m51_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="72-72"];
m51_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="72-72"];
m51_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="77-77"];
m51_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="77-77"];
m51_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IFileProvider)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IFileProvider)", span="53-53"];
m51_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IFileProvider)", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IFileProvider)", span="53-53"];
m51_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", file="MarketOnCloseOrder.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", span="67-67"];
m51_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", file="MarketOnCloseOrder.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", span="67-67"];
m52_0 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m52_1 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder()", span="36-36"];
m52_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="238-238"];
m52_4 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="57-57"];
m52_5 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="return Quantity*security.Price;", span="59-59"];
m52_6 [cluster="QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)", span="57-57"];
m52_2 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m52_3 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m52_7 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="66-66"];
m52_8 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="var order = new MarketOnOpenOrder()", span="68-68"];
m52_9 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="CopyTo(order)", span="69-69"];
m52_10 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="return order;", span="70-70"];
m52_11 [cluster="QuantConnect.Orders.MarketOnOpenOrder.Clone()", file="MarketOnOpenOrder.cs", label="Exit QuantConnect.Orders.MarketOnOpenOrder.Clone()", span="66-66"];
m52_13 [file="MarketOnOpenOrder.cs", label="QuantConnect.Orders.MarketOnOpenOrder", span=""];
m53_2 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m53_3 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m53_7 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.Clone()", span="66-66"];
m53_8 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="var order = new MarketOrder()", span="68-68"];
m53_9 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="CopyTo(order)", span="69-69"];
m53_10 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="return order;", span="70-70"];
m53_11 [cluster="QuantConnect.Orders.MarketOrder.Clone()", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.Clone()", span="66-66"];
m53_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="238-238"];
m53_0 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m53_1 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.MarketOrder()", span="28-28"];
m53_4 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="Entry QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="57-57"];
m53_5 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="return Quantity*security.Price;", span="59-59"];
m53_6 [cluster="QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", file="MarketOrder.cs", label="Exit QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)", span="57-57"];
m53_13 [file="MarketOrder.cs", label="QuantConnect.Orders.MarketOrder", span=""];
m54_15 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="238-238"];
m54_9 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="189-189"];
m54_5 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="60-60"];
m54_6 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="var option = (Option)security", span="62-62"];
m54_7 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="return option.GetExerciseQuantity(Quantity) * Price  / option.SymbolProperties.ContractMultiplier;", span="64-64"];
m54_8 [cluster="QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="60-60"];
m54_0 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", span="29-29"];
m54_1 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder()", span="29-29"];
m54_2 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="42-42"];
m54_3 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="OptionExerciseOrder.cs", label="Price = Symbol.ID.StrikePrice", span="45-45"];
m54_4 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="42-42"];
m54_10 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.Clone()", span="71-71"];
m54_11 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="var order = new OptionExerciseOrder()", span="73-73"];
m54_12 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="CopyTo(order)", span="74-74"];
m54_13 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="return order;", span="75-75"];
m54_14 [cluster="QuantConnect.Orders.OptionExerciseOrder.Clone()", file="OptionExerciseOrder.cs", label="Exit QuantConnect.Orders.OptionExerciseOrder.Clone()", span="71-71"];
m54_16 [file="OptionExerciseOrder.cs", label="QuantConnect.Orders.OptionExerciseOrder", span=""];
m55_52 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="238-238"];
m55_53 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Id = Id", span="240-240"];
m55_54 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Time = Time", span="241-241"];
m55_55 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.BrokerId = BrokerId.ToList()", span="242-242"];
m55_56 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.ContingentId = ContingentId", span="243-243"];
m55_57 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Duration = Duration", span="244-244"];
m55_58 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Price = Price", span="245-245"];
m55_59 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.PriceCurrency = PriceCurrency", span="246-246"];
m55_60 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Quantity = Quantity", span="247-247"];
m55_61 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Status = Status", span="248-248"];
m55_62 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Symbol = Symbol", span="249-249"];
m55_63 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="order.Tag = Tag", span="250-250"];
m55_65 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="Order.cs", label="Exit QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="238-238"];
m55_97 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m55_96 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m55_15 [cluster="System.Collections.Generic.List<T>.List()", file="Order.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m55_68 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="259-259"];
m55_69 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="Order order", span="261-261"];
m55_70 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="request.OrderType", span="262-262"];
m55_87 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="order.Id = request.OrderId", span="289-289"];
m55_88 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="request.Tag != null", span="290-290"];
m55_89 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="order.Tag = request.Tag", span="292-292"];
m55_71 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.Market", span="264-264"];
m55_73 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.Limit", span="267-267"];
m55_75 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.StopMarket", span="270-270"];
m55_77 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.StopLimit", span="273-273"];
m55_79 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.MarketOnOpen", span="276-276"];
m55_81 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.MarketOnClose", span="279-279"];
m55_83 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="OrderType.OptionExercise", span="282-282"];
m55_85 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="throw new ArgumentOutOfRangeException();", span="286-286"];
m55_86 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="order.Status = OrderStatus.New", span="288-288"];
m55_90 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="return order;", span="294-294"];
m55_91 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Order.cs", label="Exit QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="259-259"];
m55_94 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="54-54"];
m55_50 [cluster="QuantConnect.Orders.Order.Clone()", file="Order.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="232-232"];
m55_51 [cluster="QuantConnect.Orders.Order.Clone()", file="Order.cs", label="Exit QuantConnect.Orders.Order.Clone()", span="232-232"];
m55_67 [cluster="QuantConnect.Orders.OrderProperties.Clone()", file="Order.cs", label="Entry QuantConnect.Orders.OrderProperties.Clone()", span="31-31"];
m55_92 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="48-48"];
m55_37 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="200-200"];
m55_38 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="request.OrderId != Id", span="202-202"];
m55_40 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="request.Quantity.HasValue", span="206-206"];
m55_41 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="Quantity = request.Quantity.Value", span="208-208"];
m55_42 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="request.Tag != null", span="210-210"];
m55_43 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="Tag = request.Tag", span="212-212"];
m55_39 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="throw new ArgumentException(''Attempted to apply updates to the incorrect order!'');", span="204-204"];
m55_44 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="Order.cs", label="Exit QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="200-200"];
m55_17 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Entry QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="160-160"];
m55_18 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Time = time", span="162-162"];
m55_21 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Quantity = quantity", span="165-165"];
m55_22 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Symbol = symbol", span="166-166"];
m55_24 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Tag = tag", span="168-168"];
m55_19 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Price = 0", span="163-163"];
m55_20 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="PriceCurrency = string.Empty", span="164-164"];
m55_23 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Status = OrderStatus.None", span="167-167"];
m55_25 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Duration = OrderDuration.GTC", span="169-169"];
m55_26 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="BrokerId = new List<string>()", span="170-170"];
m55_27 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="ContingentId = 0", span="171-171"];
m55_28 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="DurationValue = DateTime.MaxValue", span="172-172"];
m55_30 [cluster="QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Exit QuantConnect.Orders.Order.Order(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="160-160"];
m55_98 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="42-42"];
m55_16 [cluster="QuantConnect.Orders.OrderProperties.OrderProperties()", file="Order.cs", label="Entry QuantConnect.Orders.OrderProperties.OrderProperties()", span="20-20"];
m55_45 [cluster="System.ArgumentException.ArgumentException(string)", file="Order.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m55_31 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Order.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="182-182"];
m55_32 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Order.cs", label="var value = GetValueImpl(security)", span="184-184"];
m55_33 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Order.cs", label="return value*security.QuoteCurrency.ConversionRate*security.SymbolProperties.ContractMultiplier;", span="185-185"];
m55_34 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Order.cs", label="Exit QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="182-182"];
m55_66 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="Order.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m55_93 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="54-54"];
m55_49 [cluster="string.Format(string, params object[])", file="Order.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m55_95 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="Order.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="65-65"];
m55_46 [cluster="QuantConnect.Orders.Order.ToString()", file="Order.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="223-223"];
m55_47 [cluster="QuantConnect.Orders.Order.ToString()", file="Order.cs", label="return string.Format(''OrderId: {0} {1} {2} order for {3} unit{4} of {5}'', Id, Status, Type, Quantity, Quantity == 1 ? '''' : ''s'', Symbol);", span="225-225"];
m55_48 [cluster="QuantConnect.Orders.Order.ToString()", file="Order.cs", label="Exit QuantConnect.Orders.Order.ToString()", span="223-223"];
m55_99 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="Order.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m55_14 [cluster="System.DateTime.DateTime()", file="Order.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m55_35 [cluster="QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", file="Order.cs", label="Entry QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", span="194-194"];
m55_36 [cluster="QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", file="Order.cs", label="Exit QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)", span="194-194"];
m55_0 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Entry QuantConnect.Orders.Order.Order()", span="136-136"];
m55_1 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Time = new DateTime()", span="138-138"];
m55_2 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Price = 0", span="139-139"];
m55_3 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="PriceCurrency = string.Empty", span="140-140"];
m55_4 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Quantity = 0", span="141-141"];
m55_5 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Symbol = Symbol.Empty", span="142-142"];
m55_6 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Status = OrderStatus.None", span="143-143"];
m55_7 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Tag = ''''", span="144-144"];
m55_8 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Duration = OrderDuration.GTC", span="145-145"];
m55_9 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="BrokerId = new List<string>()", span="146-146"];
m55_10 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="ContingentId = 0", span="147-147"];
m55_11 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="DurationValue = DateTime.MaxValue", span="148-148"];
m55_13 [cluster="QuantConnect.Orders.Order.Order()", file="Order.cs", label="Exit QuantConnect.Orders.Order.Order()", span="136-136"];
m55_100 [file="Order.cs", label="QuantConnect.Orders.Order", span=""];
m56_0 [cluster="QuantConnect.Orders.OrderFinancialAdvisorProperties.Clone()", file="OrderFinancialAdvisorProperties.cs", label="Entry QuantConnect.Orders.OrderFinancialAdvisorProperties.Clone()", span="52-52"];
m56_2 [cluster="QuantConnect.Orders.OrderFinancialAdvisorProperties.Clone()", file="OrderFinancialAdvisorProperties.cs", label="Exit QuantConnect.Orders.OrderFinancialAdvisorProperties.Clone()", span="52-52"];
m56_3 [cluster="object.MemberwiseClone()", file="OrderFinancialAdvisorProperties.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m56_4 [file="OrderFinancialAdvisorProperties.cs", label="QuantConnect.Orders.OrderFinancialAdvisorProperties", span=""];
m57_0 [cluster="QuantConnect.Orders.OrderProperties.Clone()", file="OrderProperties.cs", label="Entry QuantConnect.Orders.OrderProperties.Clone()", span="31-31"];
m57_2 [cluster="QuantConnect.Orders.OrderProperties.Clone()", file="OrderProperties.cs", label="Exit QuantConnect.Orders.OrderProperties.Clone()", span="31-31"];
m57_3 [cluster="QuantConnect.Orders.OrderProperties.OrderProperties()", file="OrderProperties.cs", label="Entry QuantConnect.Orders.OrderProperties.OrderProperties()", span="20-20"];
m57_4 [cluster="QuantConnect.Orders.OrderFinancialAdvisorProperties.Clone()", file="OrderProperties.cs", label="Entry QuantConnect.Orders.OrderFinancialAdvisorProperties.Clone()", span="52-52"];
m57_5 [file="OrderProperties.cs", label="QuantConnect.Orders.OrderProperties", span=""];
m58_36 [cluster="string.ConvertTo(System.Type)", file="ParameterAttribute.cs", label="Entry string.ConvertTo(System.Type)", span="759-759"];
m58_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ParameterAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m58_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ParameterAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m58_37 [cluster="System.Reflection.FieldInfo.SetValue(object, object)", file="ParameterAttribute.cs", label="Entry System.Reflection.FieldInfo.SetValue(object, object)", span="0-0"];
m58_29 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="ParameterAttribute.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m58_33 [cluster="System.Reflection.MemberInfo.GetCustomAttribute<T>()", file="ParameterAttribute.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttribute<T>()", span="0-0"];
m58_35 [cluster="string.Format(string, object, object)", file="ParameterAttribute.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m58_32 [cluster="System.Exception.Exception(string)", file="ParameterAttribute.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m58_38 [cluster="System.Reflection.PropertyInfo.SetValue(object, object)", file="ParameterAttribute.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object)", span="0-0"];
m58_39 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="Entry QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", span="119-119"];
m58_40 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="var parameters = new Dictionary<string, string>()", span="121-121"];
m58_41 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="assembly.GetTypes()", span="122-122"];
m58_47 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="parameters[parameterName] = field.FieldType.GetBetterTypeName()", span="131-131"];
m58_53 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="parameters[parameterName] = property.PropertyType.Name", span="142-142"];
m58_54 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="return parameters;", span="146-146"];
m58_42 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="Log.Debug(''ParameterAttribute.GetParametersFromAssembly(): Checking type '' + type.Name)", span="124-124"];
m58_43 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="type.GetFields(BindingFlags)", span="125-125"];
m58_48 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="type.GetProperties(BindingFlags)", span="134-134"];
m58_44 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="var attribute = field.GetCustomAttribute<ParameterAttribute>()", span="127-127"];
m58_46 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="var parameterName = attribute.Name ?? field.Name", span="130-130"];
m58_45 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="attribute != null", span="128-128"];
m58_49 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="!property.CanWrite", span="137-137"];
m58_50 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="var attribute = property.GetCustomAttribute<ParameterAttribute>()", span="138-138"];
m58_52 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="var parameterName = attribute.Name ?? property.Name", span="141-141"];
m58_51 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="attribute != null", span="139-139"];
m58_55 [cluster="QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", file="ParameterAttribute.cs", label="Exit QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)", span="119-119"];
m58_58 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="ParameterAttribute.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m58_59 [cluster="System.Type.GetBetterTypeName()", file="ParameterAttribute.cs", label="Entry System.Type.GetBetterTypeName()", span="705-705"];
m58_30 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="ParameterAttribute.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m58_0 [cluster="QuantConnect.Parameters.ParameterAttribute.ParameterAttribute(string)", file="ParameterAttribute.cs", label="Entry QuantConnect.Parameters.ParameterAttribute.ParameterAttribute(string)", span="48-48"];
m58_1 [cluster="QuantConnect.Parameters.ParameterAttribute.ParameterAttribute(string)", file="ParameterAttribute.cs", label="Name = name", span="50-50"];
m58_2 [cluster="QuantConnect.Parameters.ParameterAttribute.ParameterAttribute(string)", file="ParameterAttribute.cs", label="Exit QuantConnect.Parameters.ParameterAttribute.ParameterAttribute(string)", span="48-48"];
m58_28 [cluster="object.GetType()", file="ParameterAttribute.cs", label="Entry object.GetType()", span="0-0"];
m58_27 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ParameterAttribute.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m58_3 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="Entry QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", span="59-59"];
m58_4 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="instance == null", span="61-61"];
m58_6 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="var type = instance.GetType()", span="63-63"];
m58_17 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="!parameters.TryGetValue(parameterName, out parameterValue)", span="87-87"];
m58_24 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="fieldInfo.SetValue(instance, value)", span="105-105"];
m58_25 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="propertyInfo.SetValue(instance, value)", span="109-109"];
m58_5 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="throw new ArgumentNullException(''instance'');", span="61-61"];
m58_7 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="var members = type.GetFields(BindingFlags).Concat<MemberInfo>(type.GetProperties(BindingFlags))", span="66-66"];
m58_8 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label=members, span="67-67"];
m58_9 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="var fieldInfo = memberInfo as FieldInfo", span="69-69"];
m58_10 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="var propertyInfo = memberInfo as PropertyInfo", span="70-70"];
m58_13 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="var attribute = memberInfo.GetCustomAttribute<ParameterAttribute>()", span="79-79"];
m58_15 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="var parameterName = attribute.Name ?? memberInfo.Name", span="83-83"];
m58_11 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="fieldInfo == null && propertyInfo == null", span="73-73"];
m58_21 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="var memberType = fieldInfo != null ? fieldInfo.FieldType : propertyInfo.PropertyType", span="97-97"];
m58_23 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="fieldInfo != null", span="103-103"];
m58_18 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="propertyInfo != null && !propertyInfo.CanWrite", span="90-90"];
m58_19 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="var message = string.Format(''The specified property is read only: {0}.{1}'', propertyInfo.DeclaringType, propertyInfo.Name)", span="92-92"];
m58_12 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="throw new Exception(''Resolved member that is neither FieldInfo or PropertyInfo'');", span="75-75"];
m58_14 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="attribute == null", span="80-80"];
m58_16 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="string parameterValue", span="86-86"];
m58_22 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="var value = parameterValue.ConvertTo(memberType)", span="100-100"];
m58_20 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="throw new Exception(message);", span="93-93"];
m58_26 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ParameterAttribute.cs", label="Exit QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", span="59-59"];
m58_57 [cluster="System.Reflection.Assembly.GetTypes()", file="ParameterAttribute.cs", label="Entry System.Reflection.Assembly.GetTypes()", span="0-0"];
m58_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ParameterAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m58_60 [file="ParameterAttribute.cs", label="QuantConnect.Parameters.ParameterAttribute", span=""];
m59_211 [cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108"];
m59_140 [cluster="System.Type.GetMethods()", file="QCAlgorithm.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m59_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="856-856"];
m59_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label=_locked, span="858-858"];
m59_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="_timeKeeper.AddTimeZone(timeZone)", span="864-864"];
m59_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(timeZone)", span="865-865"];
m59_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="TimeRules.SetDefaultTimeZone(timeZone)", span="868-868"];
m59_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetTimeZone(): Cannot change time zone after algorithm running.'');", span="860-860"];
m59_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="timeZone == null", span="863-863"];
m59_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''timeZone'');", span="863-863"];
m59_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="856-856"];
m59_0 [cluster="QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", span="30-30"];
m59_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", color=green, community=0, file="QCAlgorithm.cs", label="Portfolio = new SecurityPortfolioManager(Securities, Transactions, DefaultOrderProperties)", prediction=53, span="118-118"];
m59_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Transactions = new SecurityTransactionManager(Securities)", span="117-117"];
m59_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="BrokerageModel = new DefaultBrokerageModel()", span="119-119"];
m59_1 [cluster="QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Exit QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", span="30-30"];
m59_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Running", span="93-93"];
m59_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="IsWarmingUp = true", span="96-96"];
m59_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_startDate = new DateTime(1998, 01, 01)", span="103-103"];
m59_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_endDate = DateTime.Now.AddDays(-1)", span="104-104"];
m59_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_timeKeeper = new TimeKeeper(_startDate, new[] { TimeZones.NewYork })", span="107-107"];
m59_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork)", span="109-109"];
m59_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Settings = new AlgorithmSettings()", span="111-111"];
m59_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="SubscriptionManager = new SubscriptionManager(Settings, _timeKeeper)", span="114-114"];
m59_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Securities = new SecurityManager(_timeKeeper)", span="116-116"];
m59_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Notify = new NotificationManager(false)", span="120-120"];
m59_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_runMode = RunMode.Series", span="123-123"];
m59_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_locked = false", span="126-126"];
m59_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="129-129"];
m59_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="132-132"];
m59_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="UniverseManager = new UniverseManager()", span="135-135"];
m59_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Universe = new UniverseDefinitions(this)", span="136-136"];
m59_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="UniverseSettings = new UniverseSettings(Resolution.Minute, 2m, true, false, TimeSpan.FromDays(1))", span="137-137"];
m59_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Schedule = new ScheduleManager(Securities, TimeZone)", span="140-140"];
m59_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="TradeBuilder = new TradeBuilder(FillGroupingMethod.FillToFill, FillMatchingMethod.FIFO)", span="143-143"];
m59_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(new DefaultBrokerageModel(AccountType.Margin),\r\n                                                                        new FuncSecuritySeeder(GetLastKnownPrice))", span="145-146"];
m59_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="CandlestickPatterns = new CandlestickPatterns(this)", span="148-148"];
m59_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="TradingCalendar = new TradingCalendar(Securities, _marketHoursDatabase)", span="151-151"];
m59_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="OptionChainProvider = new EmptyOptionChainProvider()", span="153-153"];
m59_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
m59_427 [cluster="QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", span="48-48"];
m59_29 [cluster="object.GetType()", file="QCAlgorithm.cs", label="Entry object.GetType()", span="0-0"];
m59_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1227-1227"];
m59_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="return _locked;", span="1229-1229"];
m59_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1227-1227"];
m59_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="837-837"];
m59_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="SetTimeZone(tz)", span="849-849"];
m59_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="tz = DateTimeZoneProviders.Tzdb[timeZone]", span="842-842"];
m59_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="DateTimeZone tz", span="839-839"];
m59_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label=DateTimeZoneNotFoundException, span="844-844"];
m59_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="throw new ArgumentException(string.Format(''TimeZone with id '{0}' was not found. For a complete list of time zones please visit: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones'', timeZone));", span="846-846"];
m59_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="837-837"];
m59_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1529-1529"];
m59_450 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Crypto>(SecurityType.Crypto, ticker, resolution, market, fillDataForward, leverage, false);", span="1531-1531"];
m59_451 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1529-1529"];
m59_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m59_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="561-561"];
m59_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="SubscriptionManager.AvailableDataTypes[dataFeed.Key] = dataFeed.Value", span="565-565"];
m59_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label=availableDataTypes, span="563-563"];
m59_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="561-561"];
m59_212 [cluster="QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", span="48-48"];
m59_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1616-1616"];
m59_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="1619-1619"];
m59_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="1623-1623"];
m59_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(typeof(T), Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="1626-1627"];
m59_498 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1629-1629"];
m59_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="1622-1622"];
m59_499 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1616-1616"];
m59_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1014-1014"];
m59_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="SetCash((decimal)startingCash)", span="1016-1016"];
m59_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1014-1014"];
m59_199 [cluster="string.Format(string, object)", file="QCAlgorithm.cs", label="Entry string.Format(string, object)", span="0-0"];
m59_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1101-1101"];
m59_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="SetEndDate(end)", span="1110-1110"];
m59_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="end = end.Date.AddDays(1).Subtract(TimeSpan.FromTicks(1))", span="1108-1108"];
m59_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label=Exception, span="1112-1112"];
m59_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="var end = new DateTime(year, month, day)", span="1105-1105"];
m59_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1114-1114"];
m59_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1101-1101"];
m59_476 [cluster="Unk.Any", file="QCAlgorithm.cs", label="Entry Unk.Any", span=""];
m59_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="900-900"];
m59_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="BrokerageModel = model", span="902-902"];
m59_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="!_userSetSecurityInitializer", span="903-903"];
m59_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(model, new FuncSecuritySeeder(GetLastKnownPrice))", span="906-906"];
m59_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Securities.Values", span="909-909"];
m59_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="SecurityInitializer.Initialize(security, false)", span="917-917"];
m59_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="security.SetLeverage(leverage)", span="920-920"];
m59_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="var leverage = security.Leverage", span="914-914"];
m59_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="900-900"];
m59_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1025-1025"];
m59_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="SetCash((decimal)startingCash)", span="1027-1027"];
m59_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1025-1025"];
m59_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1180-1180"];
m59_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label=_liveMode, span="1183-1183"];
m59_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="_startDate != new DateTime()", span="1193-1193"];
m59_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end < _startDate", span="1195-1195"];
m59_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="!_locked", span="1205-1205"];
m59_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="_endDate = end", span="1207-1207"];
m59_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="return;", span="1183-1183"];
m59_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end > DateTime.Now.Date.AddDays(-1)", span="1187-1187"];
m59_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end = DateTime.Now.Date.AddDays(-1)", span="1189-1189"];
m59_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="1202-1202"];
m59_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select end date greater than start date.'');", span="1197-1197"];
m59_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="1211-1211"];
m59_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1180-1180"];
m59_475 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m59_233 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654"];
m59_272 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m59_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1254-1254"];
m59_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="TradeBuilder = tradeBuilder", span="1256-1256"];
m59_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="TradeBuilder.SetLiveMode(LiveMode)", span="1257-1257"];
m59_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1254-1254"];
m59_37 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m59_554 [cluster="Unk.CreateSymbol", file="QCAlgorithm.cs", label="Entry Unk.CreateSymbol", span=""];
m59_525 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1688-1688"];
m59_526 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Debug(''Quit(): '' + message)", span="1690-1690"];
m59_527 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Stopped", span="1691-1691"];
m59_528 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1688-1688"];
m59_39 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m59_452 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1539-1539"];
m59_454 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Securities.TryGetValue(symbol, out security)", span="1542-1542"];
m59_455 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Transactions.CancelOpenOrders(security.Symbol)", span="1545-1545"];
m59_458 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Liquidate(security.Symbol)", span="1551-1551"];
m59_459 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="var universe = UniverseManager.Values.OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(symbol))", span="1553-1553"];
m59_462 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="symbol == _benchmarkSymbol", span="1559-1559"];
m59_463 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Securities.Remove(symbol)", span="1561-1561"];
m59_464 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security = CreateBenchmarkSecurity()", span="1563-1563"];
m59_465 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1564-1564"];
m59_466 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="SubscriptionManager.HasCustomData = universe.Members.Any(x => x.Value.Subscriptions.Any(y => y.IsCustomData))", span="1567-1567"];
m59_453 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Security security", span="1541-1541"];
m59_468 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="return false;", span="1572-1572"];
m59_456 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security.Cache.Reset()", span="1548-1548"];
m59_457 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="security.Invested", span="1551-1551"];
m59_460 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="universe != null", span="1554-1554"];
m59_461 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="var ret = universe.Remove(symbol)", span="1556-1556"];
m59_467 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="return ret;", span="1569-1569"];
m59_469 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1539-1539"];
m59_404 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m59_85 [cluster="Unk.AddEquity", file="QCAlgorithm.cs", label="Entry Unk.AddEquity", span=""];
m59_141 [cluster="Unk.Where", file="QCAlgorithm.cs", label="Entry Unk.Where", span=""];
m59_295 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="QCAlgorithm.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m59_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="533-533"];
m59_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="return _parameters.TryGetValue(name, out value) ? value : null;", span="536-536"];
m59_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="string value", span="535-535"];
m59_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="533-533"];
m59_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1053-1053"];
m59_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="!_locked", span="1055-1055"];
m59_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Portfolio.SetCash(symbol, startingCash, conversionRate)", span="1057-1057"];
m59_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1061-1061"];
m59_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1053-1053"];
m59_42 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m59_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.OrderProperties)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.OrderProperties)", span="65-65"];
m59_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="878-878"];
m59_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Debug(''Algorithm.SetRunMode(): RunMode-Parallel Type has been deprecated. Series analysis selected instead'')", span="881-881"];
m59_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="mode != RunMode.Parallel", span="880-880"];
m59_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="return;", span="880-880"];
m59_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="878-878"];
m59_47 [cluster="QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", span="51-51"];
m59_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="602-602"];
m59_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="OptionChainProvider = optionChainProvider", span="604-604"];
m59_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="602-602"];
m59_487 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1582-1582"];
m59_488 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m)", span="1589-1589"];
m59_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1582-1582"];
m59_345 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", span="30-30"];
m59_484 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1567-1567"];
m59_87 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="504-504"];
m59_120 [cluster="lambda expression", file="QCAlgorithm.cs", label="securityInitializer(security)", span="595-595"];
m59_148 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="629-629"];
m59_151 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="630-630"];
m59_154 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="631-631"];
m59_158 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="632-632"];
m59_251 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="972-972"];
m59_477 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1553-1553"];
m59_481 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="1567-1567"];
m59_89 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="504-504"];
m59_88 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Value", span="504-504"];
m59_119 [cluster="lambda expression", file="QCAlgorithm.cs", label="Entry lambda expression", span="595-595"];
m59_121 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="595-595"];
m59_150 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="629-629"];
m59_149 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Name == ''OnData''", span="629-629"];
m59_153 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="630-630"];
m59_152 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.DeclaringType != typeof(QCAlgorithm)", span="630-630"];
m59_156 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="631-631"];
m59_155 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.GetParameters().Length == 1", span="631-631"];
m59_160 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="632-632"];
m59_159 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.GetParameters()[0].ParameterType == typeof (Slice)", span="632-632"];
m59_252 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Key.Value == symbol", span="972-972"];
m59_253 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="972-972"];
m59_478 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Members.ContainsKey(symbol)", span="1553-1553"];
m59_479 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1553-1553"];
m59_482 [cluster="lambda expression", file="QCAlgorithm.cs", label="x.Value.Subscriptions.Any(y => y.IsCustomData)", span="1567-1567"];
m59_483 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1567-1567"];
m59_485 [cluster="lambda expression", file="QCAlgorithm.cs", label="y.IsCustomData", span="1567-1567"];
m59_486 [cluster="lambda expression", file="QCAlgorithm.cs", label="Exit lambda expression", span="1567-1567"];
m59_145 [cluster="Unk.Call", file="QCAlgorithm.cs", label="Entry Unk.Call", span=""];
m59_190 [cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68"];
m59_30 [cluster="System.DateTime.DateTime(int, int, int)", file="QCAlgorithm.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m59_115 [cluster="QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="31-31"];
m59_403 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442"];
m59_555 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1776-1776"];
m59_558 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="HistoryProvider = historyProvider", span="1782-1782"];
m59_556 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="historyProvider == null", span="1778-1778"];
m59_557 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''Algorithm.SetHistoryProvider(): Historical data provider cannot be null.'');", span="1780-1780"];
m59_559 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1776-1776"];
m59_473 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="QCAlgorithm.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m59_222 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m59_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="951-951"];
m59_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="this.BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="955-955"];
m59_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(symbol, securityType, market)", span="957-957"];
m59_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="string market = Market.USA", span="953-953"];
m59_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="951-951"];
m59_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="968-968"];
m59_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="var security = Securities.FirstOrDefault(x => x.Key.Value == symbol).Value", span="972-972"];
m59_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="_benchmarkSymbol = security == null\r\n                ? QuantConnect.Symbol.Create(symbol, SecurityType.Equity, Market.USA)\r\n                : security.Symbol", span="973-975"];
m59_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="symbol = symbol.ToUpper()", span="971-971"];
m59_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="968-968"];
m59_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1638-1638"];
m59_502 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="1640-1640"];
m59_504 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="_debugMessages.Enqueue(message)", span="1641-1641"];
m59_505 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="_previousDebugMessage = message", span="1642-1642"];
m59_503 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="return;", span="1640-1640"];
m59_506 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1638-1638"];
m59_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="828-828"];
m59_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="_timeKeeper.SetUtcDateTime(frontier)", span="830-830"];
m59_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="828-828"];
m59_377 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="488-488"];
m59_508 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1651-1651"];
m59_509 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="!_liveMode && message == ''''", span="1653-1653"];
m59_511 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="_logMessages.Enqueue(message)", span="1654-1654"];
m59_510 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="return;", span="1653-1653"];
m59_512 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1651-1651"];
m59_52 [cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.cs", label="Entry QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", span="18-18"];
m59_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="992-992"];
m59_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Benchmark = new FuncBenchmark(benchmark)", span="994-994"];
m59_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="992-992"];
m59_316 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m59_51 [cluster="QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", span="34-34"];
m59_406 [cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", span="49-49"];
m59_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="982-982"];
m59_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="_benchmarkSymbol = symbol", span="984-984"];
m59_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="982-982"];
m59_314 [cluster="System.DateTime.DateTime()", file="QCAlgorithm.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m59_31 [cluster="System.DateTime.AddDays(double)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m59_82 [cluster="Unk.Select", file="QCAlgorithm.cs", label="Entry Unk.Select", span=""];
m59_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="584-584"];
m59_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="SetSecurityInitializer(new FuncSecurityInitializer(securityInitializer))", span="586-586"];
m59_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="584-584"];
m59_471 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="182-182"];
m59_102 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="QCAlgorithm.cs", label="Entry QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", span="59-59"];
m59_94 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m59_41 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m59_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1663-1663"];
m59_513 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1665-1665"];
m59_515 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="_errorMessages.Enqueue(message)", span="1666-1666"];
m59_516 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="_previousErrorMessage = message", span="1667-1667"];
m59_514 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="return;", span="1665-1665"];
m59_517 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1663-1663"];
m59_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1283-1283"];
m59_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddSecurity(securityType, symbol, resolution, null, fillDataForward, leverage, extendedMarketHours);", span="1285-1285"];
m59_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1283-1283"];
m59_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1123-1123"];
m59_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="_algorithmId = algorithmId", span="1125-1125"];
m59_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1123-1123"];
m59_565 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1803-1803"];
m59_566 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Status = status", span="1805-1805"];
m59_567 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1803-1803"];
m59_84 [cluster="Unk.TryGetValue", file="QCAlgorithm.cs", label="Entry Unk.TryGetValue", span=""];
m59_174 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m59_278 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m59_49 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="47-47"];
m59_209 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m59_34 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="QCAlgorithm.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m59_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1350-1350"];
m59_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddSecurity<Equity>(SecurityType.Equity, ticker, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="1352-1352"];
m59_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1350-1350"];
m59_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1076-1076"];
m59_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="SetStartDate(start)", span="1085-1085"];
m59_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="start = start.Date", span="1083-1083"];
m59_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label=Exception, span="1087-1087"];
m59_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="var start = new DateTime(year, month, day)", span="1080-1080"];
m59_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1089-1089"];
m59_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1076-1076"];
m59_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="477-477"];
m59_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Benchmark == null", span="480-480"];
m59_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="_benchmarkSymbol == null || _benchmarkSymbol == QuantConnect.Symbol.Empty", span="483-483"];
m59_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)", span="485-485"];
m59_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="!Securities.TryGetValue(_benchmarkSymbol, out security)", span="492-492"];
m59_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="security = CreateBenchmarkSecurity()", span="495-495"];
m59_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="496-496"];
m59_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Benchmark = new SecurityBenchmark(security)", span="500-500"];
m59_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Securities.Select(x => x.Value).OfType<Option>()", span="504-504"];
m59_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="!Securities.TryGetValue(underlying, out equity)", span="508-508"];
m59_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="511-511"];
m59_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Security security", span="491-491"];
m59_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity.VolatilityModel == VolatilityModel.Null", span="518-518"];
m59_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="equity.VolatilityModel = new StandardDeviationOfReturnsVolatilityModel(periods)", span="521-521"];
m59_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="var underlying = option.Symbol.Underlying", span="506-506"];
m59_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="option.Underlying = equity", span="515-515"];
m59_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Security equity", span="507-507"];
m59_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="int periods = 30", span="520-520"];
m59_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="477-477"];
m59_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1473-1473"];
m59_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var option = (Option)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1475-1476"];
m59_437 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="!Securities.TryGetValue(underlying, out equity)", span="1481-1481"];
m59_438 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="1483-1483"];
m59_440 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(option)", span="1487-1487"];
m59_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var underlying = option.Symbol.Underlying", span="1479-1479"];
m59_439 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="option.Underlying = equity", span="1485-1485"];
m59_441 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="return option;", span="1489-1489"];
m59_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Security equity", span="1480-1480"];
m59_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1473-1473"];
m59_198 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m59_53 [cluster="QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", span="25-25"];
m59_147 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m59_157 [cluster="Unk.GetParameters", file="QCAlgorithm.cs", label="Entry Unk.GetParameters", span=""];
m59_86 [cluster="QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", span="68-68"];
m59_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="766-766"];
m59_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="OnEndOfDay(symbol.ToString())", span="768-768"];
m59_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="766-766"];
m59_46 [cluster="System.TimeSpan.FromDays(double)", file="QCAlgorithm.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m59_142 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.cs", label="Entry Unk.FirstOrDefault", span=""];
m59_407 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m59_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1749-1749"];
m59_548 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label=_liveMode, span="1753-1753"];
m59_550 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="var hasNonAddSecurityUniverses = (\r\n                    from kvp in UniverseManager\r\n                    let config = kvp.Value.Configuration\r\n                    let symbol = UserDefinedUniverse.CreateSymbol(config.SecurityType, config.Market)\r\n                    where config.Symbol != symbol\r\n                    select kvp).Any()", span="1760-1765"];
m59_551 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="resolution = hasNonAddSecurityUniverses ? UniverseSettings.Resolution : Resolution.Daily", span="1767-1767"];
m59_552 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="return SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer, _benchmarkSymbol, resolution, true, 1m, false, true, false, LiveMode);", span="1769-1769"];
m59_547 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Resolution resolution", span="1752-1752"];
m59_549 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="resolution = Resolution.Second", span="1755-1755"];
m59_553 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1749-1749"];
m59_81 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", span="31-31"];
m59_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1235-1235"];
m59_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="!_locked", span="1237-1237"];
m59_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_liveMode = live", span="1239-1239"];
m59_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Notify = new NotificationManager(live)", span="1240-1240"];
m59_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="TradeBuilder.SetLiveMode(live)", span="1241-1241"];
m59_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_startDate = DateTime.Today", span="1245-1245"];
m59_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="_endDate = QuantConnect.Time.EndOfTime", span="1246-1246"];
m59_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label=live, span="1243-1243"];
m59_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1235-1235"];
m59_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="543-543"];
m59_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="_parameters = parameters.ToDictionary()", span="546-546"];
m59_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="ParameterAttribute.ApplyAttributes(parameters, this)", span="549-549"];
m59_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Error(''Error applying parameter values: '' + err.Message)", span="553-553"];
m59_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label=Exception, span="551-551"];
m59_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="543-543"];
m59_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="890-890"];
m59_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="SetBrokerageModel(Brokerages.BrokerageModel.Create(brokerage, accountType))", span="892-892"];
m59_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="890-890"];
m59_294 [cluster="System.TimeSpan.FromTicks(long)", file="QCAlgorithm.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m59_144 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0"];
m59_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1723-1723"];
m59_538 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1728-1728"];
m59_543 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1740-1741"];
m59_544 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1742-1742"];
m59_537 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="market == null", span="1726-1726"];
m59_539 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1730-1730"];
m59_540 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Symbol symbol", span="1734-1734"];
m59_542 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="symbol = QuantConnect.Symbol.Create(ticker, securityType, market)", span="1737-1737"];
m59_541 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(ticker, out symbol)", span="1735-1735"];
m59_545 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return (T)security;", span="1743-1743"];
m59_546 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1723-1723"];
m59_146 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m59_500 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m59_402 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m59_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="573-573"];
m59_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="_userSetSecurityInitializer = true", span="576-576"];
m59_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="SecurityInitializer = securityInitializer", span="577-577"];
m59_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="573-573"];
m59_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1035-1035"];
m59_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="!_locked", span="1037-1037"];
m59_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Portfolio.SetCash(startingCash)", span="1039-1039"];
m59_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1043-1043"];
m59_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1035-1035"];
m59_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1268-1268"];
m59_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="return AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours);", span="1270-1270"];
m59_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1268-1268"];
m59_501 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m59_43 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m59_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="621-621"];
m59_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="!_checkedForOnDataSlice", span="624-624"];
m59_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_checkedForOnDataSlice = true", span="626-626"];
m59_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var method = GetType().GetMethods()\r\n                    .Where(x => x.Name == ''OnData'')\r\n                    .Where(x => x.DeclaringType != typeof(QCAlgorithm))\r\n                    .Where(x => x.GetParameters().Length == 1)\r\n                    .FirstOrDefault(x => x.GetParameters()[0].ParameterType == typeof (Slice))", span="628-632"];
m59_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var self = Expression.Constant(this)", span="639-639"];
m59_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice = lambda.Compile()", span="643-643"];
m59_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice != null", span="646-646"];
m59_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="_onDataSlice(slice)", span="648-648"];
m59_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="method == null", span="634-634"];
m59_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var call = Expression.Call(self, method, parameter)", span="641-641"];
m59_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var parameter = Expression.Parameter(typeof (Slice), ''data'')", span="640-640"];
m59_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="var lambda = Expression.Lambda<Action<Slice>>(call, parameter)", span="642-642"];
m59_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="return;", span="636-636"];
m59_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="621-621"];
m59_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1364-1364"];
m59_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Option, out market)", span="1368-1368"];
m59_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, underlying, SecurityType.Option)", span="1381-1381"];
m59_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, underlying, SecurityType.Option, CashBook.AccountCurrency)", span="1382-1382"];
m59_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var canonicalSecurity = (Option) SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1383-1385"];
m59_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Securities.Add(canonicalSecurity)", span="1387-1387"];
m59_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1391-1391"];
m59_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="universe = new OptionChainUniverse(canonicalSecurity, settings, SecurityInitializer, LiveMode)", span="1394-1394"];
m59_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1395-1395"];
m59_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="market == null", span="1366-1366"];
m59_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Option);", span="1370-1370"];
m59_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Symbol canonicalSymbol", span="1374-1374"];
m59_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(underlying, SecurityType.Option, market, alias)", span="1378-1378"];
m59_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1376-1376"];
m59_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSecurity.IsTradable = false", span="1386-1386"];
m59_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return canonicalSecurity;", span="1398-1398"];
m59_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Universe universe", span="1390-1390"];
m59_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1393-1393"];
m59_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var alias = ''?'' + underlying", span="1375-1375"];
m59_400 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1364-1364"];
m59_405 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m59_480 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m59_244 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m59_560 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1789-1789"];
m59_563 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="RunTimeError = exception", span="1796-1796"];
m59_561 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="exception == null", span="1791-1791"];
m59_562 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''Algorithm.SetRunTimeError(): Algorithm.RunTimeError cannot be set to null.'');", span="1793-1793"];
m59_564 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1789-1789"];
m59_101 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="QCAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m59_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1455-1455"];
m59_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="var future = (Future)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1457-1458"];
m59_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(future)", span="1460-1460"];
m59_431 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="return future;", span="1462-1462"];
m59_432 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1455-1455"];
m59_376 [cluster="QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", span="60-60"];
m59_232 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="28-28"];
m59_44 [cluster="QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", span="45-45"];
m59_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1410-1410"];
m59_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Future, out market)", span="1414-1414"];
m59_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, symbol, SecurityType.Future)", span="1427-1427"];
m59_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, symbol, SecurityType.Future, CashBook.AccountCurrency)", span="1428-1428"];
m59_417 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var canonicalSecurity = (Future)SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1429-1431"];
m59_419 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Securities.Add(canonicalSecurity)", span="1433-1433"];
m59_421 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1437-1437"];
m59_423 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="universe = new FuturesChainUniverse(canonicalSecurity, settings, SubscriptionManager, SecurityInitializer)", span="1440-1440"];
m59_424 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1441-1441"];
m59_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="market == null", span="1412-1412"];
m59_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Future);", span="1416-1416"];
m59_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Symbol canonicalSymbol", span="1420-1420"];
m59_414 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(symbol, SecurityType.Future, market, alias)", span="1424-1424"];
m59_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1422-1422"];
m59_418 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="canonicalSecurity.IsTradable = false", span="1432-1432"];
m59_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return canonicalSecurity;", span="1444-1444"];
m59_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Universe universe", span="1436-1436"];
m59_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1439-1439"];
m59_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="var alias = ''/'' + symbol", span="1421-1421"];
m59_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1410-1410"];
m59_48 [cluster="QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", file="QCAlgorithm.cs", label="Entry QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", span="61-61"];
m59_50 [cluster="QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", span="33-33"];
m59_45 [cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59"];
m59_260 [cluster="QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", span="30-30"];
m59_401 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m59_329 [cluster="System.DateTime.AddTicks(long)", file="QCAlgorithm.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m59_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1298-1298"];
m59_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddOption(symbol, resolution, market, fillDataForward, leverage);", span="1303-1303"];
m59_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return AddFuture(symbol, resolution, market, fillDataForward, leverage);", span="1308-1308"];
m59_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1315-1315"];
m59_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                    symbolObject, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1327-1328"];
m59_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="AddToUserDefinedUniverse(security)", span="1330-1330"];
m59_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Error(''Algorithm.AddSecurity(): '' + err)", span="1335-1335"];
m59_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="securityType == SecurityType.Option", span="1301-1301"];
m59_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="securityType == SecurityType.Future", span="1306-1306"];
m59_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="market == null", span="1313-1313"];
m59_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1317-1317"];
m59_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Symbol symbolObject", span="1321-1321"];
m59_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="symbolObject = QuantConnect.Symbol.Create(symbol, securityType, market)", span="1324-1324"];
m59_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="!SymbolCache.TryGetSymbol(symbol, out symbolObject)", span="1322-1322"];
m59_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return security;", span="1331-1331"];
m59_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label=Exception, span="1333-1333"];
m59_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="return null;", span="1336-1336"];
m59_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1298-1298"];
m59_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="758-758"];
m59_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="758-758"];
m59_36 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m59_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1601-1601"];
m59_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="AddData<T>(symbol, resolution, TimeZones.NewYork, fillDataForward, leverage)", span="1604-1604"];
m59_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1601-1601"];
m59_210 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="QCAlgorithm.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m59_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1501-1501"];
m59_444 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Forex>(SecurityType.Forex, ticker, resolution, market, fillDataForward, leverage, false);", span="1503-1503"];
m59_445 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1501-1501"];
m59_315 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m59_529 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1700-1700"];
m59_531 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Status = AlgorithmStatus.Stopped", span="1704-1704"];
m59_530 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label=quit, span="1702-1702"];
m59_532 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1700-1700"];
m59_77 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m59_83 [cluster="Unk.>", file="QCAlgorithm.cs", label="Entry Unk.>", span=""];
m59_33 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m59_446 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1515-1515"];
m59_447 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="return AddSecurity<Cfd>(SecurityType.Cfd, ticker, resolution, market, fillDataForward, leverage, false);", span="1517-1517"];
m59_448 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1515-1515"];
m59_250 [cluster="string.ToUpper()", file="QCAlgorithm.cs", label="Entry string.ToUpper()", span="0-0"];
m59_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="593-593"];
m59_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="SetSecurityInitializer(new FuncSecurityInitializer((security, seedSecurity) => securityInitializer(security)))", span="595-595"];
m59_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="593-593"];
m59_35 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="QCAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m59_32 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="QCAlgorithm.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m59_78 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m59_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="932-932"];
m59_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="BrokerageMessageHandler = handler", span="939-939"];
m59_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="handler == null", span="934-934"];
m59_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="throw new ArgumentNullException(''handler'');", span="936-936"];
m59_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="932-932"];
m59_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1134-1134"];
m59_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label=_liveMode, span="1137-1137"];
m59_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="_endDate != new DateTime()", span="1147-1147"];
m59_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start > _endDate", span="1149-1149"];
m59_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="!_locked", span="1159-1159"];
m59_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="!LiveMode", span="1162-1162"];
m59_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="_startDate = start", span="1164-1164"];
m59_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="SetDateTime(_startDate.ConvertToUtc(TimeZone))", span="1165-1165"];
m59_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="return;", span="1137-1137"];
m59_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start < (new DateTime(1900, 01, 01))", span="1141-1141"];
m59_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="start = start.RoundDown(TimeSpan.FromDays(1))", span="1156-1156"];
m59_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select start date less than end date.'');", span="1151-1151"];
m59_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="1170-1170"];
m59_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="1143-1143"];
m59_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1134-1134"];
m59_472 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="759-759"];
m59_518 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1676-1676"];
m59_520 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1679-1679"];
m59_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="_errorMessages.Enqueue(message)", span="1680-1680"];
m59_523 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="_previousErrorMessage = message", span="1681-1681"];
m59_519 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="var message = error.Message", span="1678-1678"];
m59_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="return;", span="1679-1679"];
m59_524 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1676-1676"];
m59_122 [cluster="System.Action<T>.Invoke(T)", file="QCAlgorithm.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m59_507 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="QCAlgorithm.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m59_143 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="QCAlgorithm.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m59_40 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="QCAlgorithm.cs", label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="41-41"];
m59_470 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m59_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1219-1219"];
m59_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="_locked = true", span="1221-1221"];
m59_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1219-1219"];
m59_474 [cluster="Unk.Remove", file="QCAlgorithm.cs", label="Entry Unk.Remove", span=""];
m59_568 [file="QCAlgorithm.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m59_569 [file="QCAlgorithm.cs", label="System.Action<QuantConnect.Securities.Security>", span=""];
m59_570 [file="QCAlgorithm.cs", label=string, span=""];
m59_571 [file="QCAlgorithm.cs", label="QuantConnect.Symbol", span=""];
m60_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", span="50-50"];
m60_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", file="QCAlgorithm.History.cs", label="var enumerators = GetSubscriptionConfigurations(request)\r\n                .Select(c => new SubscriptionRequest(request, configuration: c))\r\n                .Select(sr => _enumeratorConfigurator(request, _factory.CreateEnumerator(sr, fileProvider))\r\n                )", span="52-55"];
m60_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", file="QCAlgorithm.History.cs", label="return new OptionChainUniverseDataCollectionAggregatorEnumerator(sync, request.Security.Symbol);", span="58-58"];
m60_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", file="QCAlgorithm.History.cs", label="var sync = new SynchronizingEnumerator(enumerators)", span="57-57"];
m60_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IFileProvider)", span="50-50"];
m60_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.OptionChainUniverseSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.OptionChainUniverseSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", span="38-38"];
m60_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.OptionChainUniverseSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.History.cs", label="_enumeratorConfigurator = enumeratorConfigurator", span="40-40"];
m60_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.OptionChainUniverseSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.History.cs", label="_factory = new BaseDataSubscriptionEnumeratorFactory()", span="41-41"];
m60_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.OptionChainUniverseSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.OptionChainUniverseSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>>)", span="38-38"];
m60_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.GetSubscriptionConfigurations(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.GetSubscriptionConfigurations(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="61-61"];
m60_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.GetSubscriptionConfigurations(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="QCAlgorithm.History.cs", label="var config = request.Configuration", span="64-64"];
m60_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.GetSubscriptionConfigurations(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="QCAlgorithm.History.cs", label="var underlying = Symbol.Create(config.Symbol.ID.Symbol, SecurityType.Equity, config.Market)", span="65-65"];
m60_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.GetSubscriptionConfigurations(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="QCAlgorithm.History.cs", label="var resolution = config.Resolution == Resolution.Tick ? Resolution.Second : config.Resolution", span="66-66"];
m60_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.GetSubscriptionConfigurations(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="QCAlgorithm.History.cs", label="return new[]\r\n            {\r\n                // rewrite the primary to be non-tick and fill forward\r\n                new SubscriptionDataConfig(config, resolution: resolution, fillForward: true),\r\n                // add underlying trade data\r\n                new SubscriptionDataConfig(config, resolution: resolution, fillForward: true, symbol: underlying, objectType: typeof (TradeBar), tickType: TickType.Trade),\r\n            };", span="67-73"];
m60_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.GetSubscriptionConfigurations(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory.GetSubscriptionConfigurations(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="61-61"];
m60_21 [cluster="Unk.CreateEnumerator", file="QCAlgorithm.History.cs", label="Entry Unk.CreateEnumerator", span=""];
m60_29 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?)", span="243-243"];
m60_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.OptionChainUniverseDataCollectionAggregatorEnumerator.OptionChainUniverseDataCollectionAggregatorEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.OptionChainUniverseDataCollectionAggregatorEnumerator.OptionChainUniverseDataCollectionAggregatorEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Symbol)", span="32-32"];
m60_11 [cluster="Unk.Select", file="QCAlgorithm.History.cs", label="Entry Unk.Select", span=""];
m60_22 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="QCAlgorithm.History.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m60_17 [cluster="QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(QuantConnect.Data.UniverseSelection.SubscriptionRequest, bool?, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime?, System.DateTime?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(QuantConnect.Data.UniverseSelection.SubscriptionRequest, bool?, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime?, System.DateTime?)", span="115-115"];
m60_28 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m60_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="38-38"];
m60_12 [cluster="SynchronizingEnumerator.cstr", file="QCAlgorithm.History.cs", label="Entry SynchronizingEnumerator.cstr", span=""];
m60_18 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="54-54"];
m60_15 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="new SubscriptionRequest(request, configuration: c)", span="53-53"];
m60_19 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="_enumeratorConfigurator(request, _factory.CreateEnumerator(sr, fileProvider))", span="54-54"];
m60_14 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="53-53"];
m60_16 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="53-53"];
m60_20 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="54-54"];
m60_30 [file="QCAlgorithm.History.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory", span=""];
m60_31 [file="QCAlgorithm.History.cs", label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", span=""];
m60_32 [file="QCAlgorithm.History.cs", label="QuantConnect.Interfaces.IFileProvider", span=""];
m61_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, double)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, double)", span="122-122"];
m61_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, double)", file="QCAlgorithm.Plotting.cs", label="Plot(chart, series, (decimal)value)", span="124-124"];
m61_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, double)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, double)", span="122-122"];
m61_54 [cluster="QuantConnect.Chart.Chart(string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
m61_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Record(string, decimal)", span="86-86"];
m61_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Plot(series, value)", span="89-89"];
m61_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Record(string, decimal)", span="86-86"];
m61_4 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m61_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, double)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Record(string, double)", span="75-75"];
m61_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, double)", file="QCAlgorithm.Plotting.cs", label="Plot(series, value)", span="77-77"];
m61_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, double)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Record(string, double)", span="75-75"];
m61_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, float)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, float)", span="113-113"];
m61_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, float)", file="QCAlgorithm.Plotting.cs", label="Plot(series, (decimal)value)", span="115-115"];
m61_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, float)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, float)", span="113-113"];
m61_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="210-210"];
m61_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label=indicators, span="213-213"];
m61_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="i.Updated += (sender, args) =>\r\n                {\r\n                    Plot(chart, ilocal);\r\n                }", span="219-222"];
m61_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="var ilocal = i", span="218-218"];
m61_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="210-210"];
m61_95 [cluster="int.ToString()", file="QCAlgorithm.Plotting.cs", label="Entry int.ToString()", span="0-0"];
m61_57 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212"];
m61_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, int)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, int)", span="131-131"];
m61_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, int)", file="QCAlgorithm.Plotting.cs", label="Plot(chart, series, (decimal)value)", span="133-133"];
m61_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, int)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, int)", span="131-131"];
m61_59 [cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", span="282-282"];
m61_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1663-1663"];
m61_111 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Entry lambda expression", span="297-297"];
m61_72 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Plot(chart, ilocal)", span="221-221"];
m61_71 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Entry lambda expression", span="219-222"];
m61_73 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Exit lambda expression", span="219-222"];
m61_81 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="!waitForReady || ilocal.IsReady", span="240-240"];
m61_82 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Plot(chart, ilocal)", span="242-242"];
m61_80 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Entry lambda expression", span="238-244"];
m61_83 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Exit lambda expression", span="238-244"];
m61_112 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="chart.GetUpdates()", span="297-297"];
m61_113 [cluster="lambda expression", file="QCAlgorithm.Plotting.cs", label="Exit lambda expression", span="297-297"];
m61_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, int)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Record(string, int)", span="66-66"];
m61_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, int)", file="QCAlgorithm.Plotting.cs", label="Plot(series, value)", span="68-68"];
m61_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.Record(string, int)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Record(string, int)", span="66-66"];
m61_114 [cluster="QuantConnect.Chart.GetUpdates()", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Chart.GetUpdates()", span="91-91"];
m61_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", span="96-96"];
m61_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", file="QCAlgorithm.Plotting.cs", label="Plot(series, (decimal)value)", span="97-97"];
m61_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, double)", span="96-96"];
m61_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m61_53 [cluster="System.Exception.Exception(string)", file="QCAlgorithm.Plotting.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m61_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, float)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, float)", span="140-140"];
m61_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, float)", file="QCAlgorithm.Plotting.cs", label="Plot(chart, series, (decimal)value)", span="142-142"];
m61_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, float)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, float)", span="140-140"];
m61_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", span="264-264"];
m61_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="QCAlgorithm.Plotting.cs", label="SetRuntimeStatistic(name, value.ToString(CultureInfo.InvariantCulture))", span="266-266"];
m61_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, decimal)", span="264-264"];
m61_109 [cluster="Unk.ToList", file="QCAlgorithm.Plotting.cs", label="Entry Unk.ToList", span=""];
m61_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1638-1638"];
m61_91 [cluster="decimal.ToString(System.IFormatProvider)", file="QCAlgorithm.Plotting.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m61_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="198-198"];
m61_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label=indicators, span="201-201"];
m61_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Plot(chart, indicator.Name, indicator)", span="203-203"];
m61_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="198-198"];
m61_87 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="QCAlgorithm.Plotting.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134"];
m61_55 [cluster="Unk.Sum", file="QCAlgorithm.Plotting.cs", label="Entry Unk.Sum", span=""];
m61_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", span="104-104"];
m61_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="QCAlgorithm.Plotting.cs", label="Plot(series, (decimal)value)", span="106-106"];
m61_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, int)", span="104-104"];
m61_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="295-295"];
m61_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="var updates = _charts.Values.Select(chart => chart.GetUpdates()).ToList()", span="297-297"];
m61_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label=clearChartData, span="299-299"];
m61_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="return updates;", span="310-310"];
m61_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label=_charts, span="302-302"];
m61_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="chart.Value.Series", span="304-304"];
m61_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="series.Value.Purge()", span="306-306"];
m61_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="295-295"];
m61_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", span="274-274"];
m61_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="QCAlgorithm.Plotting.cs", label="SetRuntimeStatistic(name, value.ToString())", span="276-276"];
m61_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, int)", span="274-274"];
m61_58 [cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74"];
m61_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151"];
m61_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="(chart == ''Strategy Equity'' && series == ''Equity'') || (chart == ''Daily Performance'') || (chart == ''Meta'')", span="154-154"];
m61_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="!_charts.ContainsKey(chart)", span="160-160"];
m61_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="_charts.Add(chart, new Chart(chart))", span="162-162"];
m61_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="var thisChart = _charts[chart]", span="165-165"];
m61_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="!thisChart.Series.ContainsKey(series)", span="166-166"];
m61_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="thisChart.AddSeries(new Series(series, SeriesType.Line, 0, ''$''))", span="178-178"];
m61_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="var thisSeries = thisChart.Series[series]", span="181-181"];
m61_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="thisSeries.AddPoint(UtcTime, value, _liveMode)", span="184-184"];
m61_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="throw new Exception(''Algorithm.Plot(): 'Equity', 'Daily Performance' and 'Meta' are reserved chart names created for all charts.'');", span="156-156"];
m61_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="var seriesCount = (from x in _charts.Values select x.Series.Count).Sum()", span="169-169"];
m61_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="seriesCount > 10", span="171-171"];
m61_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="Error(''Exceeded maximum series count: Each backtest can have up to 10 series in total.'')", span="173-173"];
m61_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="return;", span="174-174"];
m61_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="thisSeries.Values.Count < 4000 || _liveMode", span="182-182"];
m61_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="Debug(''Exceeded maximum points per chart, data skipped.'')", span="188-188"];
m61_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151"];
m61_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="54-54"];
m61_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Plot(''Strategy Equity'', series, value)", span="57-57"];
m61_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="54-54"];
m61_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", span="229-229"];
m61_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label=indicators, span="232-232"];
m61_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="i.Updated += (sender, args) =>\r\n                {\r\n                    if (!waitForReady || ilocal.IsReady)\r\n                    {\r\n                        Plot(chart, ilocal);\r\n                    }\r\n                }", span="238-244"];
m61_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="var ilocal = i", span="237-237"];
m61_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", span="229-229"];
m61_99 [cluster="double.ToString(System.IFormatProvider)", file="QCAlgorithm.Plotting.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m61_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", span="284-284"];
m61_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="QCAlgorithm.Plotting.cs", label="SetRuntimeStatistic(name, value.ToString(CultureInfo.InvariantCulture))", span="286-286"];
m61_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, double)", span="284-284"];
m61_108 [cluster="Unk.Select", file="QCAlgorithm.Plotting.cs", label="Entry Unk.Select", span=""];
m61_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", span="40-40"];
m61_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="QCAlgorithm.Plotting.cs", label="!_charts.ContainsKey(chart.Name)", span="42-42"];
m61_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="QCAlgorithm.Plotting.cs", label="_charts.Add(chart.Name, chart)", span="44-44"];
m61_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", span="40-40"];
m61_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", span="254-254"];
m61_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="QCAlgorithm.Plotting.cs", label="RuntimeStatistics.AddOrUpdate(name, value)", span="256-256"];
m61_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", file="QCAlgorithm.Plotting.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRuntimeStatistic(string, string)", span="254-254"];
m61_110 [cluster="QuantConnect.Series.Purge()", file="QCAlgorithm.Plotting.cs", label="Entry QuantConnect.Series.Purge()", span="333-333"];
m61_115 [file="QCAlgorithm.Plotting.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m61_116 [file="QCAlgorithm.Plotting.cs", label=string, span=""];
m61_117 [file="QCAlgorithm.Plotting.cs", label=ilocal, span=""];
m61_118 [file="QCAlgorithm.Plotting.cs", label=bool, span=""];
m61_119 [file="QCAlgorithm.Plotting.cs", label=ilocal, span=""];
m61_120 [file="QCAlgorithm.Plotting.cs", label=string, span=""];
m64_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.Dispose()", file="RateLimitEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.Dispose()", span="122-122"];
m64_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.Dispose()", file="RateLimitEnumerator.cs", label="_enumerator.Dispose()", span="124-124"];
m64_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.Dispose()", file="RateLimitEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.Dispose()", span="122-122"];
m64_23 [cluster="System.Collections.IEnumerator.Reset()", file="RateLimitEnumerator.cs", label="Entry System.Collections.IEnumerator.Reset()", span="0-0"];
m64_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.RateLimitEnumerator(System.Collections.Generic.IEnumerator<T>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", file="RateLimitEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.RateLimitEnumerator(System.Collections.Generic.IEnumerator<T>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", span="42-42"];
m64_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.RateLimitEnumerator(System.Collections.Generic.IEnumerator<T>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", file="RateLimitEnumerator.cs", label="_enumerator = enumerator", span="44-44"];
m64_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.RateLimitEnumerator(System.Collections.Generic.IEnumerator<T>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", file="RateLimitEnumerator.cs", label="_timeProvider = timeProvider", span="45-45"];
m64_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.RateLimitEnumerator(System.Collections.Generic.IEnumerator<T>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", file="RateLimitEnumerator.cs", label="_minimumTimeBetweenCalls = minimumTimeBetweenCalls", span="46-46"];
m64_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.RateLimitEnumerator(System.Collections.Generic.IEnumerator<T>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", file="RateLimitEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.RateLimitEnumerator(System.Collections.Generic.IEnumerator<T>, QuantConnect.Lean.Engine.DataFeeds.ITimeProvider, System.TimeSpan)", span="42-42"];
m64_19 [cluster="System.Collections.IEnumerator.MoveNext()", file="RateLimitEnumerator.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m64_27 [cluster="System.IDisposable.Dispose()", file="RateLimitEnumerator.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m64_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.Reset()", file="RateLimitEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.Reset()", span="90-90"];
m64_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.Reset()", file="RateLimitEnumerator.cs", label="_enumerator.Reset()", span="92-92"];
m64_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.Reset()", file="RateLimitEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.Reset()", span="90-90"];
m64_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", file="RateLimitEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", span="56-56"];
m64_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", file="RateLimitEnumerator.cs", label="var currentTime = _timeProvider.GetUtcNow().RoundDown(_minimumTimeBetweenCalls)", span="60-60"];
m64_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", file="RateLimitEnumerator.cs", label="var timeBetweenCalls = currentTime - _lastCallTime", span="61-61"];
m64_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", file="RateLimitEnumerator.cs", label="_lastCallTime = currentTime", span="74-74"];
m64_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", file="RateLimitEnumerator.cs", label="timeBetweenCalls >= _minimumTimeBetweenCalls", span="64-64"];
m64_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", file="RateLimitEnumerator.cs", label="!_enumerator.MoveNext()", span="66-66"];
m64_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", color=green, community=0, file="RateLimitEnumerator.cs", label="return false;", prediction=54, span="70-70"];
m64_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", file="RateLimitEnumerator.cs", label="_current = _enumerator.Current", span="75-75"];
m64_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", file="RateLimitEnumerator.cs", label="return true;", span="83-83"];
m64_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", file="RateLimitEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", span="56-56"];
m64_18 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="RateLimitEnumerator.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m64_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", file="RateLimitEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ITimeProvider.GetUtcNow()", span="30-30"];
m64_28 [file="RateLimitEnumerator.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>", span=""];
m65_27 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.CreateSymbol(int)", file="RateLimitEnumeratorTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.CreateSymbol(int)", span="51-51"];
m65_28 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.CreateSymbol(int)", file="RateLimitEnumeratorTests.cs", label="return new Symbol(SecurityIdentifier.GenerateBase(x.ToString(), Market.USA), x.ToString());", span="53-53"];
m65_29 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.CreateSymbol(int)", file="RateLimitEnumeratorTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.CreateSymbol(int)", span="51-51"];
m65_22 [cluster="Unk.AreEqual", file="RateLimitEnumeratorTests.cs", label="Entry Unk.AreEqual", span=""];
m65_30 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="RateLimitEnumeratorTests.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221"];
m65_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.ManualTimeProvider(System.DateTime, DateTimeZone)", file="RateLimitEnumeratorTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.ManualTimeProvider(System.DateTime, DateTimeZone)", span="47-47"];
m65_16 [cluster="Unk.GetEnumerator", file="RateLimitEnumeratorTests.cs", label="Entry Unk.GetEnumerator", span=""];
m65_17 [cluster="RateLimitEnumerator<BaseData>.cstr", file="RateLimitEnumeratorTests.cs", label="Entry RateLimitEnumerator<BaseData>.cstr", span=""];
m65_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="RateLimitEnumeratorTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", span="30-30"];
m65_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="RateLimitEnumeratorTests.cs", label="var currentTime = new DateTime(2015, 10, 10, 13, 6, 0)", span="32-32"];
m65_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="RateLimitEnumeratorTests.cs", label="var timeProvider = new ManualTimeProvider(currentTime, TimeZones.Utc)", span="33-33"];
m65_8 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="RateLimitEnumeratorTests.cs", label="var delta = (timeProvider.GetUtcNow() - currentTime).TotalSeconds", span="44-44"];
m65_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="RateLimitEnumeratorTests.cs", label="var data = Enumerable.Range(0, 100).Select(x => new Tick {Symbol = CreateSymbol(x)}).GetEnumerator()", span="34-34"];
m65_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="RateLimitEnumeratorTests.cs", label="timeProvider.AdvanceSeconds(0.1)", span="41-41"];
m65_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="RateLimitEnumeratorTests.cs", label="Assert.AreEqual(''1'', data.Current.Symbol.Value)", span="48-48"];
m65_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="RateLimitEnumeratorTests.cs", label="Assert.IsTrue(rateLimit.MoveNext())", span="37-37"];
m65_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="RateLimitEnumeratorTests.cs", label="rateLimit.MoveNext() && rateLimit.Current == null", span="39-39"];
m65_9 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="RateLimitEnumeratorTests.cs", label="Assert.AreEqual(1, delta)", span="46-46"];
m65_11 [cluster="QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", file="RateLimitEnumeratorTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Enumerators.RateLimitEnumeratorTests.LimitsBasedOnTimeBetweenCalls()", span="30-30"];
m65_19 [cluster="Unk.IsTrue", file="RateLimitEnumeratorTests.cs", label="Entry Unk.IsTrue", span=""];
m65_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.GetUtcNow()", file="RateLimitEnumeratorTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.GetUtcNow()", span="57-57"];
m65_14 [cluster="System.Linq.Enumerable.Range(int, int)", file="RateLimitEnumeratorTests.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m65_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", file="RateLimitEnumeratorTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>.MoveNext()", span="56-56"];
m65_26 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="RateLimitEnumeratorTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m65_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.AdvanceSeconds(double)", file="RateLimitEnumeratorTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ManualTimeProvider.AdvanceSeconds(double)", span="95-95"];
m65_31 [cluster="int.ToString()", file="RateLimitEnumeratorTests.cs", label="Entry int.ToString()", span="0-0"];
m65_15 [cluster="Unk.Select", file="RateLimitEnumeratorTests.cs", label="Entry Unk.Select", span=""];
m65_32 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="RateLimitEnumeratorTests.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m65_12 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="RateLimitEnumeratorTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m65_23 [cluster="lambda expression", file="RateLimitEnumeratorTests.cs", label="Entry lambda expression", span="34-34"];
m65_24 [cluster="lambda expression", file="RateLimitEnumeratorTests.cs", label="new Tick {Symbol = CreateSymbol(x)}", span="34-34"];
m65_25 [cluster="lambda expression", file="RateLimitEnumeratorTests.cs", label="Exit lambda expression", span="34-34"];
m66_21 [cluster="System.Collections.IEnumerator.Reset()", file="RefreshEnumerator.cs", label="Entry System.Collections.IEnumerator.Reset()", span="0-0"];
m66_16 [cluster="System.IDisposable.DisposeSafely()", file="RefreshEnumerator.cs", label="Entry System.IDisposable.DisposeSafely()", span="15-15"];
m66_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", span="50-50"];
m66_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="_enumerator == null", span="52-52"];
m66_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="_enumerator = _enumeratorFactory.Invoke()", span="54-54"];
m66_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="var moveNext = _enumerator.MoveNext()", span="57-57"];
m66_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label=moveNext, span="58-58"];
m66_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="_current = _enumerator.Current", span="60-60"];
m66_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="_enumerator = null", span="66-66"];
m66_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="_current = default(T)", span="67-67"];
m66_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="return true;", span="70-70"];
m66_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", file="RefreshEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.MoveNext()", span="50-50"];
m66_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="RefreshEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", span="38-38"];
m66_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="RefreshEnumerator.cs", label="_enumeratorFactory = enumeratorFactory", span="40-40"];
m66_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", file="RefreshEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.RefreshEnumerator(System.Func<System.Collections.Generic.IEnumerator<T>>)", span="38-38"];
m66_15 [cluster="System.Collections.IEnumerator.MoveNext()", file="RefreshEnumerator.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m66_26 [cluster="System.IDisposable.Dispose()", file="RefreshEnumerator.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m66_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="RefreshEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", span="112-112"];
m66_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="RefreshEnumerator.cs", label="_enumerator != null", span="114-114"];
m66_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="RefreshEnumerator.cs", label="_enumerator.Dispose()", span="116-116"];
m66_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", file="RefreshEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Dispose()", span="112-112"];
m66_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="RefreshEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", span="77-77"];
m66_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="RefreshEnumerator.cs", label="_enumerator != null", span="79-79"];
m66_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="RefreshEnumerator.cs", label="_enumerator.Reset()", span="81-81"];
m66_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", file="RefreshEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>.Reset()", span="77-77"];
m66_14 [cluster="System.Func<TResult>.Invoke()", file="RefreshEnumerator.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m66_27 [file="RefreshEnumerator.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", span=""];
m67_0 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m67_1 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="RefreshEnumeratorTests.cs", label="AlgorithmRunner.RunLocalBacktest(''BasicTemplateAlgorithm'', new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''3.33%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''1546.436%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''3.332%''},\r\n                {''Sharpe Ratio'', ''4.42''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.026''},\r\n                {''Beta'', ''2.025''},\r\n                {''Annual Standard Deviation'', ''0.388''},\r\n                {''Annual Variance'', ''0.151''},\r\n                {''Information Ratio'', ''4.353''},\r\n                {''Tracking Error'', ''0.197''},\r\n                {''Treynor Ratio'', ''0.848''},\r\n                {''Total Fees'', ''$12.30''}\r\n            })", span="26-47"];
m67_2 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="RefreshEnumeratorTests.cs", label="Exit QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m67_4 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", span="32-32"];
m67_5 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", span="51-51"];
m67_7 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", file="RefreshEnumeratorTests.cs", label="Exit QuantConnect.Tests.RegressionTests.BasicTemplateFillForwardAlgorithm()", span="51-51"];
m67_8 [cluster="QuantConnect.Tests.RegressionTests.RegressionAlgorithm()", file="RefreshEnumeratorTests.cs", label="Entry QuantConnect.Tests.RegressionTests.RegressionAlgorithm()", span="78-78"];
m67_9 [cluster="QuantConnect.Tests.RegressionTests.RegressionAlgorithm()", file="RefreshEnumeratorTests.cs", label="AlgorithmRunner.RunLocalBacktest(''RegressionAlgorithm'', new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2145''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.361%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-0.990''},\r\n                {''Net Profit'', ''-0.043%''},\r\n                {''Sharpe Ratio'', ''-28.984''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''1.65''},\r\n                {''Alpha'', ''-0.018''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.251''},\r\n                {''Tracking Error'', ''0.173''},\r\n                {''Treynor Ratio'', ''611.111''},\r\n                {''Total Fees'', ''$4292.00''}\r\n            })", span="80-101"];
m67_10 [cluster="QuantConnect.Tests.RegressionTests.RegressionAlgorithm()", file="RefreshEnumeratorTests.cs", label="Exit QuantConnect.Tests.RegressionTests.RegressionAlgorithm()", span="78-78"];
m67_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RefreshEnumeratorTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m68_0 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="RegressionTests.cs", label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m68_1 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="RegressionTests.cs", label="_universes = new ConcurrentDictionary<Symbol, Universe>()", span="42-42"];
m68_2 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="RegressionTests.cs", label="Exit QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m68_58 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="RegressionTests.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="0-0"];
m68_7 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", file="RegressionTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m68_50 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="715-715"];
m68_51 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="716-716"];
m68_52 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="712-712"];
m68_43 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m68_44 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="703-703"];
m68_45 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="703-703"];
m68_46 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="703-703"];
m68_48 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m68_47 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m68_49 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="714-714"];
m68_8 [cluster="QuantConnect.Securities.UniverseManager.System.Collections.IEnumerable.GetEnumerator()", file="RegressionTests.cs", label="Entry QuantConnect.Securities.UniverseManager.System.Collections.IEnumerable.GetEnumerator()", span="66-66"];
m68_9 [cluster="QuantConnect.Securities.UniverseManager.System.Collections.IEnumerable.GetEnumerator()", file="RegressionTests.cs", label="return ((IEnumerable)_universes).GetEnumerator();", span="68-68"];
m68_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m68_40 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="RegressionTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m68_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="548-569"];
m68_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="571-592"];
m68_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="RegressionTests.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.53%''},\r\n                {''Average Loss'', ''-2.00%''},\r\n                {''Compounding Annual Return'', ''65.652%''},\r\n                {''Drawdown'', ''5.000%''},\r\n                {''Expectancy'', ''-0.158''},\r\n                {''Net Profit'', ''0.555%''},\r\n                {''Sharpe Ratio'', ''0.731''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.26''},\r\n                {''Alpha'', ''-1.237''},\r\n                {''Beta'', ''1.189''},\r\n                {''Annual Standard Deviation'', ''0.544''},\r\n                {''Annual Variance'', ''0.296''},\r\n                {''Information Ratio'', ''-8.473''},\r\n                {''Tracking Error'', ''0.115''},\r\n                {''Treynor Ratio'', ''0.335''},\r\n                {''Total Fees'', ''$2023.72''}\r\n            }", prediction=55, span="594-615"];
m68_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63"];
m68_42 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m68_54 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="RegressionTests.cs", label="var handler = CollectionChanged", span="262-262"];
m68_56 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="RegressionTests.cs", label="handler(this, e)", span="263-263"];
m68_55 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="RegressionTests.cs", label="handler != null", span="263-263"];
m68_57 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="RegressionTests.cs", label="Exit QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="260-260"];
m68_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86"];
m68_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109"];
m68_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132"];
m68_41 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", file="RegressionTests.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", span="0-0"];
m68_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431"];
m68_53 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m68_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="525-546"];
m68_4 [cluster="QuantConnect.Securities.UniverseManager.GetEnumerator()", file="RegressionTests.cs", label="Entry QuantConnect.Securities.UniverseManager.GetEnumerator()", span="54-54"];
m68_5 [cluster="QuantConnect.Securities.UniverseManager.GetEnumerator()", file="RegressionTests.cs", label="return _universes.GetEnumerator();", span="56-56"];
m68_6 [cluster="QuantConnect.Securities.UniverseManager.GetEnumerator()", file="RegressionTests.cs", label="Exit QuantConnect.Securities.UniverseManager.GetEnumerator()", span="54-54"];
m68_3 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="RegressionTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m68_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454"];
m68_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477"];
m68_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500"];
m68_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523"];
m68_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155"];
m68_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                //new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="640-703"];
m68_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m68_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m68_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638"];
m68_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339"];
m68_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362"];
m68_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="RegressionTests.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.27''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''-0.002''},\r\n                {''Beta'', ''0.411''},\r\n                {''Annual Standard Deviation'', ''0.112''},\r\n                {''Annual Variance'', ''0.013''},\r\n                {''Information Ratio'', ''-0.352''},\r\n                {''Tracking Error'', ''0.134''},\r\n                {''Treynor Ratio'', ''0.073''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", prediction=56, span="364-385"];
m68_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408"];
m68_16 [cluster="QuantConnect.Securities.UniverseManager.Clear()", file="RegressionTests.cs", label="Entry QuantConnect.Securities.UniverseManager.Clear()", span="84-84"];
m68_17 [cluster="QuantConnect.Securities.UniverseManager.Clear()", file="RegressionTests.cs", label="_universes.Clear()", span="86-86"];
m68_18 [cluster="QuantConnect.Securities.UniverseManager.Clear()", file="RegressionTests.cs", label="Exit QuantConnect.Securities.UniverseManager.Clear()", span="84-84"];
m68_19 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="RegressionTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m68_20 [cluster="QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="RegressionTests.cs", label="Entry QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="96-96"];
m68_21 [cluster="QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="RegressionTests.cs", label="return _universes.Contains(item);", span="98-98"];
m68_22 [cluster="QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="RegressionTests.cs", label="Exit QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="96-96"];
m68_59 [file="RegressionTests.cs", label="QuantConnect.Securities.UniverseManager", span=""];
m69_89 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="63-63"];
m69_125 [cluster="Unk.Where", file="SecurityPortfolioManager.cs", label="Entry Unk.Where", span=""];
m69_213 [cluster="decimal.RoundToSignificantDigits(int)", file="SecurityPortfolioManager.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="195-195"];
m69_174 [cluster="QuantConnect.Securities.Security.GetLastData()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="585-585"];
m69_63 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="244-244"];
m69_64 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="return Securities.Select(x => new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)).GetEnumerator();", span="246-246"];
m69_65 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="244-244"];
m69_230 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m69_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs.CurrentTimeUtcEventArgs(System.DateTime)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs.CurrentTimeUtcEventArgs(System.DateTime)", span="32-32"];
m69_3 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.OrderProperties)", color=green, community=0, file="SecurityPortfolioManager.cs", label="QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs", prediction=57, span=""];
m69_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs.CurrentTimeUtcEventArgs(System.DateTime)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs.CurrentTimeUtcEventArgs(System.DateTime)", span="32-32"];
m69_4 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.OrderProperties)", file="SecurityPortfolioManager.cs", label="CashBook = new CashBook()", span="71-71"];
m69_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.Client.CurrentTimeUtcEventArgs.CurrentTimeUtcEventArgs(System.DateTime)", file="SecurityPortfolioManager.cs", label="CurrentTimeUtc = currentTimeUtc", span="34-34"];
m69_5 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.OrderProperties)", file="SecurityPortfolioManager.cs", label="UnsettledCashBook = new CashBook()", span="72-72"];
m69_6 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.OrderProperties)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts = new List<UnsettledCashAmount>()", span="73-73"];
m69_7 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.OrderProperties)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash = CashBook[CashBook.AccountCurrency]", span="75-75"];
m69_8 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.OrderProperties)", file="SecurityPortfolioManager.cs", label="_baseCurrencyUnsettledCash = UnsettledCashBook[CashBook.AccountCurrency]", span="76-76"];
m69_9 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.OrderProperties)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.SetAmount(100000)", span="79-79"];
m69_10 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.OrderProperties)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.OrderProperties)", span="65-65"];
m69_48 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", span="221-221"];
m69_50 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="var success = Securities.TryGetValue(symbol, out security)", span="224-224"];
m69_49 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Security security", span="223-223"];
m69_51 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="holding = success ? security.Holdings : null", span="225-225"];
m69_52 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="return success;", span="226-226"];
m69_53 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.SecurityHolding)", span="221-221"];
m69_47 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m69_145 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", span="688-688"];
m69_176 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionSecurities = Securities\r\n                                   .Where(x => x.Value.Type == SecurityType.Option && split.Symbol == x.Key.Underlying && x.Value.Holdings.Invested)\r\n                                   .ToList()", span="691-693"];
m69_183 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var newSymbol = GetSplitAdjustedSymbol(symbol, splitFactor)", span="708-708"];
m69_185 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Securities.Remove(symbol)", span="712-712"];
m69_186 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionHoldings = new Option.OptionHolding(Securities[newSymbol], (Option.OptionHolding)security.Holdings)", span="713-713"];
m69_188 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Securities[newSymbol].Holdings = optionHoldings", span="715-715"];
m69_184 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="newSymbol != null", span="710-710"];
m69_177 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label=optionSecurities, span="695-695"];
m69_182 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var splitFactor = split.SplitFactor", span="707-707"];
m69_178 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var symbol = securityKV.Key", span="697-697"];
m69_179 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var security = securityKV.Value", span="698-698"];
m69_187 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="optionHoldings.SplitUnderlying(splitFactor)", span="714-714"];
m69_189 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var optionHoldings = (Option.OptionHolding)security.Holdings", span="719-719"];
m69_181 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="mode != DataNormalizationMode.Raw", span="702-702"];
m69_190 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="optionHoldings.SplitUnderlying(splitFactor)", span="720-720"];
m69_180 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var mode = security.DataNormalizationMode", span="701-701"];
m69_191 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)", span="688-688"];
m69_14 [cluster="System.Collections.Generic.List<T>.List()", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m69_200 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", span="725-725"];
m69_204 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", color=green, community=1, file="SecurityPortfolioManager.cs", label="Func<Symbol, bool> symbolIsFound = x =>\r\n            {\r\n                var rootSymbol = newRootSymbol ?? symbol.Underlying.Value;\r\n                var strike = newStrike != 0.0m ? newStrike : symbol.ID.StrikePrice;\r\n\r\n                return x.HasUnderlying == true &&\r\n                        x.Underlying.Value == rootSymbol &&\r\n                        x.ID.Date == symbol.ID.Date &&\r\n                        x.ID.OptionRight == symbol.ID.OptionRight &&\r\n                        x.ID.Market == symbol.ID.Market &&\r\n                        x.ID.OptionStyle == symbol.ID.OptionStyle &&\r\n                        x.ID.StrikePrice == strike;\r\n            }", prediction=58, span="732-744"];
m69_202 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="decimal newStrike = 0.0m", span="729-729"];
m69_203 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="string newRootSymbol = null", span="730-730"];
m69_205 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="splitFactor > 1.0m", span="747-747"];
m69_211 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="return Securities\r\n                    .Select(x => x.Key)\r\n                    .Where(symbolIsFound)\r\n                    .FirstOrDefault();", span="766-769"];
m69_201 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="var inverseFactor = 1.0m / splitFactor", span="727-727"];
m69_206 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newRootSymbol = symbol.Underlying.Value + ''1''", span="750-750"];
m69_208 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newStrike = Math.Round(symbol.ID.StrikePrice / inverseFactor, 2)", span="757-757"];
m69_209 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newStrike = Math.Round(symbol.ID.StrikePrice / inverseFactor, 2)", span="762-762"];
m69_210 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="newRootSymbol = symbol.Underlying.Value + ''1''", span="763-763"];
m69_207 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="inverseFactor.RoundToSignificantDigits(5) % 1 == 0", span="754-754"];
m69_212 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.GetSplitAdjustedSymbol(QuantConnect.Symbol, decimal)", span="725-725"];
m69_139 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="101-101"];
m69_88 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m69_193 [cluster="Unk.GetSplitAdjustedSymbol", file="SecurityPortfolioManager.cs", label="Entry Unk.GetSplitAdjustedSymbol", span=""];
m69_132 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="595-595"];
m69_133 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var security = Securities[dividend.Symbol]", span="597-597"];
m69_137 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.AddAmount(total)", span="607-607"];
m69_134 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var mode = security.DataNormalizationMode", span="600-600"];
m69_136 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var total = security.Holdings.Quantity*dividend.Distribution", span="604-604"];
m69_135 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="mode == DataNormalizationMode.Raw || mode == DataNormalizationMode.SplitAdjusted", span="601-601"];
m69_138 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="595-595"];
m69_196 [cluster="QuantConnect.Securities.Option.OptionHolding.SplitUnderlying(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Option.OptionHolding.SplitUnderlying(decimal)", span="48-48"];
m69_39 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", span="175-175"];
m69_40 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="array = new KeyValuePair<Symbol, SecurityHolding>[Securities.Count]", span="177-177"];
m69_42 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label=Securities, span="179-179"];
m69_41 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="var i = 0", span="178-178"];
m69_44 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="array[i] = new KeyValuePair<Symbol, SecurityHolding>(asset.Key, asset.Value.Holdings)", span="183-183"];
m69_45 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="i++", span="185-185"];
m69_43 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="i >= index", span="181-181"];
m69_46 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>[], int)", span="175-175"];
m69_197 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="692-692"];
m69_219 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="return x.HasUnderlying == true &&\r\n                        x.Underlying.Value == rootSymbol &&\r\n                        x.ID.Date == symbol.ID.Date &&\r\n                        x.ID.OptionRight == symbol.ID.OptionRight &&\r\n                        x.ID.Market == symbol.ID.Market &&\r\n                        x.ID.OptionStyle == symbol.ID.OptionStyle &&\r\n                        x.ID.StrikePrice == strike;", span="737-743"];
m69_217 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="var rootSymbol = newRootSymbol ?? symbol.Underlying.Value", span="734-734"];
m69_218 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="var strike = newStrike != 0.0m ? newStrike : symbol.ID.StrikePrice", span="735-735"];
m69_216 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="732-744"];
m69_220 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="732-744"];
m69_221 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="767-767"];
m69_60 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="236-236"];
m69_66 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="246-246"];
m69_129 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="576-576"];
m69_223 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="767-767"];
m69_222 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Key", span="767-767"];
m69_62 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="236-236"];
m69_61 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)", span="236-236"];
m69_68 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="246-246"];
m69_67 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)", span="246-246"];
m69_131 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="576-576"];
m69_130 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Holdings.Quantity != 0 && x.Price != 0", span="576-576"];
m69_198 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="x.Value.Type == SecurityType.Option && split.Symbol == x.Key.Underlying && x.Value.Holdings.Invested", span="692-692"];
m69_199 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="692-692"];
m69_252 [cluster="System.Collections.Generic.List<T>.Remove(T)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0"];
m69_224 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="781-781"];
m69_226 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Transactions.TransactionRecord.ContainsKey(clone)", span="784-784"];
m69_228 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Transactions.TransactionRecord.Add(clone, transactionProfitLoss)", span="788-788"];
m69_225 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="var clone = time", span="783-783"];
m69_227 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="clone = clone.AddMilliseconds(1)", span="786-786"];
m69_229 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="781-781"];
m69_231 [cluster="System.DateTime.AddMilliseconds(double)", file="SecurityPortfolioManager.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m69_175 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
m69_232 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m69_81 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m69_83 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="CashBook.TryGetValue(symbol, out item)", span="486-486"];
m69_86 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="CashBook.Add(symbol, cash, conversionRate)", span="493-493"];
m69_82 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Cash item", span="485-485"];
m69_84 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="item.SetAmount(cash)", span="488-488"];
m69_85 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="item.ConversionRate = conversionRate", span="489-489"];
m69_87 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m69_13 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="50-50"];
m69_103 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="541-541"];
m69_105 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var totalMarginUsed = TotalMarginUsed", span="545-545"];
m69_108 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var averageHoldingsLeverage = TotalAbsoluteHoldingsCost/totalMarginUsed", span="554-554"];
m69_111 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginRemaining = MarginRemaining", span="560-560"];
m69_112 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var totalPortfolioValue = TotalPortfolioValue", span="563-563"];
m69_117 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="Securities.Values.Where(x => x.Holdings.Quantity != 0 && x.Price != 0)", span="576-576"];
m69_119 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginCallOrder = MarginCallModel.GenerateMarginCallOrder(security, totalPortfolioValue, totalMarginUsed, maintenanceMarginRequirement)", span="579-579"];
m69_104 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="issueMarginCallWarning = false", span="543-543"];
m69_106 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="totalMarginUsed <= 0", span="548-548"];
m69_109 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="averageHoldingsLeverage <= 1.0m", span="555-555"];
m69_113 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginRemaining <= totalPortfolioValue*0.05m", span="564-564"];
m69_116 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginRemaining <= 0", span="573-573"];
m69_121 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginCallOrders.Add(marginCallOrder)", span="582-582"];
m69_120 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="marginCallOrder != null && marginCallOrder.Quantity != 0", span="580-580"];
m69_118 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var maintenanceMarginRequirement = security.MarginModel.GetMaintenanceMarginRequirement(security)", span="578-578"];
m69_122 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="issueMarginCallWarning = marginCallOrders.Count > 0", span="585-585"];
m69_107 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="return new List<SubmitOrderRequest>();", span="550-550"];
m69_110 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="return new List<SubmitOrderRequest>();", span="557-557"];
m69_115 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="var marginCallOrders = new List<SubmitOrderRequest>()", span="570-570"];
m69_114 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="issueMarginCallWarning = true", span="566-566"];
m69_123 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="return marginCallOrders;", span="588-588"];
m69_124 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="541-541"];
m69_59 [cluster="Unk.GetEnumerator", file="SecurityPortfolioManager.cs", label="Entry Unk.GetEnumerator", span=""];
m69_239 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", span="812-812"];
m69_240 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label=_unsettledCashAmountsLocker, span="814-814"];
m69_241 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts.Add(item)", span="816-816"];
m69_242 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)", span="812-812"];
m69_192 [cluster="Unk.ToList", file="SecurityPortfolioManager.cs", label="Entry Unk.ToList", span=""];
m69_144 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", span="625-625"];
m69_146 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var security = Securities[split.Symbol]", span="627-627"];
m69_156 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.AddAmount(extraCash)", span="649-649"];
m69_147 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.Type != SecurityType.Equity", span="630-630"];
m69_149 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var mode = security.DataNormalizationMode", span="636-636"];
m69_152 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var quantity = security.Holdings.Quantity / split.SplitFactor", span="643-643"];
m69_153 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var avgPrice = security.Holdings.AveragePrice * split.SplitFactor", span="644-644"];
m69_157 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.Holdings.SetHoldings(avgPrice, (int)quantity)", span="651-651"];
m69_158 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var next = security.GetLastData()", span="654-654"];
m69_171 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.SetMarketPrice(next)", span="682-682"];
m69_155 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var extraCash = leftOver * split.ReferencePrice", span="648-648"];
m69_161 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="next.Value *= split.SplitFactor", span="663-663"];
m69_164 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.Open *= split.SplitFactor", span="669-669"];
m69_165 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.High *= split.SplitFactor", span="670-670"];
m69_166 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.Low *= split.SplitFactor", span="671-671"];
m69_169 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick.AskPrice *= split.SplitFactor", span="678-678"];
m69_170 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick.BidPrice *= split.SplitFactor", span="679-679"];
m69_148 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="return;", span="632-632"];
m69_150 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="mode != DataNormalizationMode.Raw", span="637-637"];
m69_154 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var leftOver = quantity - (int)quantity", span="647-647"];
m69_159 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="next == null", span="655-655"];
m69_162 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var tradeBar = next as TradeBar", span="666-666"];
m69_167 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var tick = next as Tick", span="675-675"];
m69_168 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick != null", span="676-676"];
m69_151 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="return;", span="639-639"];
m69_160 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="return;", span="661-661"];
m69_163 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar != null", span="667-667"];
m69_172 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)", span="625-625"];
m69_12 [cluster="QuantConnect.Orders.OrderProperties.OrderProperties()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Orders.OrderProperties.OrderProperties()", span="20-20"];
m69_90 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m69_91 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="var security = Securities[symbol]", span="505-505"];
m69_92 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="return security.MarginModel.GetMarginRemaining(this, security, direction);", span="506-506"];
m69_93 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m69_140 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="615-615"];
m69_141 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="ApplySplitToEquities(split)", span="617-617"];
m69_142 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="ApplySplitToOptions(split)", span="618-618"];
m69_143 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="615-615"];
m69_36 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="140-140"];
m69_37 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="return Securities.ContainsKey(pair.Key);", span="142-142"];
m69_38 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>)", span="140-140"];
m69_15 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m69_195 [cluster="QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Option.OptionHolding)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Option.OptionHolding)", span="39-39"];
m69_11 [cluster="QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.OrderProperties)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.DefaultMarginCallModel.DefaultMarginCallModel(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.OrderProperties)", span="47-47"];
m69_32 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="129-129"];
m69_33 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="return Securities.ContainsKey(symbol);", span="131-131"];
m69_34 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="129-129"];
m69_55 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="234-234"];
m69_56 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="return Securities.Select(x => new KeyValuePair<Symbol, SecurityHolding>(x.Key, x.Value.Holdings)).GetEnumerator();", span="236-236"];
m69_57 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="234-234"];
m69_95 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="516-516"];
m69_96 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="return GetMarginRemaining(symbol, direction);", span="518-518"];
m69_97 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="516-516"];
m69_98 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="529-529"];
m69_99 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="var security = Securities[fill.Symbol]", span="531-531"];
m69_100 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="security.PortfolioModel.ProcessFill(this, security, fill)", span="532-532"];
m69_101 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="529-529"];
m69_243 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823"];
m69_244 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label=_unsettledCashAmountsLocker, span="825-825"];
m69_245 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts.ToList()", span="827-827"];
m69_247 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="_unsettledCashAmounts.Remove(item)", span="833-833"];
m69_248 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="UnsettledCashBook[item.Currency].AddAmount(-item.Amount)", span="836-836"];
m69_249 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="CashBook[item.Currency].AddAmount(item.Amount)", span="839-839"];
m69_246 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="timeUtc >= item.SettlementTimeUtc", span="830-830"];
m69_250 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823"];
m69_215 [cluster="Unk.FirstOrDefault", file="SecurityPortfolioManager.cs", label="Entry Unk.FirstOrDefault", span=""];
m69_54 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m69_233 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="796-796"];
m69_235 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Securities.TryGetValue(symbol, out security)", span="800-800"];
m69_234 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Security security", span="798-798"];
m69_236 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="return security;", span="802-802"];
m69_237 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="return null;", span="805-805"];
m69_238 [cluster="QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="796-796"];
m69_102 [cluster="QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="30-30"];
m69_251 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m69_35 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m69_94 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63"];
m69_214 [cluster="System.Math.Round(decimal, int)", file="SecurityPortfolioManager.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m69_126 [cluster="Unk.GetMaintenanceMarginRequirement", file="SecurityPortfolioManager.cs", label="Entry Unk.GetMaintenanceMarginRequirement", span=""];
m69_78 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m69_79 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.SetAmount(cash)", span="474-474"];
m69_80 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m69_128 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m69_173 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383"];
m69_58 [cluster="Unk.Select", file="SecurityPortfolioManager.cs", label="Entry Unk.Select", span=""];
m69_127 [cluster="Unk.GenerateMarginCallOrder", file="SecurityPortfolioManager.cs", label="Entry Unk.GenerateMarginCallOrder", span=""];
m69_194 [cluster="Unk.Remove", file="SecurityPortfolioManager.cs", label="Entry Unk.Remove", span=""];
m69_253 [file="SecurityPortfolioManager.cs", label="QuantConnect.Securities.SecurityPortfolioManager", span=""];
m69_255 [file="SecurityPortfolioManager.cs", label="QuantConnect.Symbol", span=""];
m69_256 [file="SecurityPortfolioManager.cs", label=newRootSymbol, span=""];
m69_257 [file="SecurityPortfolioManager.cs", label=newStrike, span=""];
m69_254 [file="SecurityPortfolioManager.cs", label="QuantConnect.Data.Market.Split", span=""];
m70_37 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="238-238"];
m70_9 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="82-82"];
m70_10 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Quantity < 0", span="85-85"];
m70_11 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return Quantity*Math.Max(LimitPrice, security.Price);", span="87-87"];
m70_13 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return Quantity*Math.Min(LimitPrice, security.Price);", span="93-93"];
m70_12 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Quantity > 0", span="91-91"];
m70_14 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="return 0m;", span="96-96"];
m70_15 [cluster="QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)", span="82-82"];
m70_31 [cluster="string.Format(string, object, object, object)", file="StopLimitOrder.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m70_16 [cluster="System.Math.Max(decimal, decimal)", file="StopLimitOrder.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m70_2 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="65-65"];
m70_3 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="StopLimitOrder.cs", label="StopPrice = stopPrice", span="68-68"];
m70_4 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="StopLimitOrder.cs", label="LimitPrice = limitPrice", span="69-69"];
m70_5 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="StopLimitOrder.cs", label="tag == ''''", span="71-71"];
m70_6 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="StopLimitOrder.cs", label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'') + '' Limit Price: '' + limitPrice.ToString(''C'')", span="74-74"];
m70_7 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="65-65"];
m70_29 [cluster="QuantConnect.Orders.Order.ToString()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.ToString()", span="223-223"];
m70_17 [cluster="System.Math.Min(decimal, decimal)", file="StopLimitOrder.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m70_32 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.Clone()", span="132-132"];
m70_33 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="var order = new StopLimitOrder {StopPrice = StopPrice, LimitPrice = LimitPrice}", span="134-134"];
m70_34 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="CopyTo(order)", span="135-135"];
m70_35 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="return order;", span="136-136"];
m70_36 [cluster="QuantConnect.Orders.StopLimitOrder.Clone()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.Clone()", span="132-132"];
m70_25 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="200-200"];
m70_0 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51"];
m70_1 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="51-51"];
m70_26 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.ToString()", span="123-123"];
m70_27 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="return string.Format(''{0} at stop {1} limit {2}'', base.ToString(), StopPrice.SmartRounding(), LimitPrice.SmartRounding());", span="125-125"];
m70_28 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.ToString()", span="123-123"];
m70_18 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Entry QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="103-103"];
m70_19 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="base.ApplyUpdateOrderRequest(request)", span="105-105"];
m70_20 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="request.StopPrice.HasValue", span="106-106"];
m70_21 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="StopPrice = request.StopPrice.Value", span="108-108"];
m70_22 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="request.LimitPrice.HasValue", span="110-110"];
m70_23 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="LimitPrice = request.LimitPrice.Value", span="112-112"];
m70_24 [cluster="QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="StopLimitOrder.cs", label="Exit QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="103-103"];
m70_8 [cluster="decimal.ToString(string)", file="StopLimitOrder.cs", label="Entry decimal.ToString(string)", span="0-0"];
m70_30 [cluster="decimal.SmartRounding()", file="StopLimitOrder.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m70_38 [file="StopLimitOrder.cs", label="QuantConnect.Orders.StopLimitOrder", span=""];
m71_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", file="StopMarketOrder.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", span="109-109"];
m71_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", file="StopMarketOrder.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler)", span="109-109"];
m71_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="StopMarketOrder.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="124-124"];
m71_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", file="StopMarketOrder.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="124-124"];
m71_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="StopMarketOrder.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="119-119"];
m71_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="StopMarketOrder.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="119-119"];
m71_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="StopMarketOrder.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="114-114"];
m71_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", file="StopMarketOrder.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Run()", span="114-114"];
m72_18 [cluster="string.Format(string, params object[])", file="SubmitOrderRequest.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m72_13 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.ToString()", span="129-129"];
m72_14 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="var proxy = Order.CreateOrder(this)", span="132-132"];
m72_15 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="return string.Format(''{0} UTC: Submit Order: ({1}) - {2} {3}'', Time, OrderId, proxy, Tag) + '' Status: '' + Status;", span="133-133"];
m72_16 [cluster="QuantConnect.Orders.SubmitOrderRequest.ToString()", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.ToString()", span="129-129"];
m72_0 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="101-101"];
m72_1 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="SubmitOrderRequest.cs", label="SecurityType = securityType", span="104-104"];
m72_2 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="SubmitOrderRequest.cs", label="Symbol = symbol", span="105-105"];
m72_3 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="SubmitOrderRequest.cs", label="OrderType = orderType", span="106-106"];
m72_4 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="SubmitOrderRequest.cs", label="Quantity = quantity", span="107-107"];
m72_5 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="SubmitOrderRequest.cs", label="LimitPrice = limitPrice", span="108-108"];
m72_6 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="SubmitOrderRequest.cs", label="StopPrice = stopPrice", span="109-109"];
m72_8 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Orders.OrderProperties)", span="101-101"];
m72_10 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="117-117"];
m72_11 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="SubmitOrderRequest.cs", label="OrderId = orderId", span="119-119"];
m72_12 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="SubmitOrderRequest.cs", label="Exit QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="117-117"];
m72_17 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="259-259"];
m72_9 [cluster="QuantConnect.Orders.OrderProperties.OrderProperties()", file="SubmitOrderRequest.cs", label="Entry QuantConnect.Orders.OrderProperties.OrderProperties()", span="20-20"];
m72_19 [file="SubmitOrderRequest.cs", label="QuantConnect.Orders.SubmitOrderRequest", span=""];
m73_0 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m73_1 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="Symbols.cs", label="_universes = new ConcurrentDictionary<Symbol, Universe>()", span="42-42"];
m73_2 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m73_58 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="Symbols.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="0-0"];
m73_7 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", file="Symbols.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m73_50 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m73_51 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="Symbols.cs", label="return _universes.TryGetValue(key, out value);", span="196-196"];
m73_52 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m73_43 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", span="176-176"];
m73_44 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="Symbols.cs", label="Universe universe", span="178-178"];
m73_45 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="Symbols.cs", label="_universes.TryRemove(key, out universe)", span="179-179"];
m73_46 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="Symbols.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, universe))", span="181-181"];
m73_48 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="Symbols.cs", label="return false;", span="184-184"];
m73_47 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="Symbols.cs", label="return true;", span="182-182"];
m73_49 [cluster="QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)", span="176-176"];
m73_8 [cluster="QuantConnect.Securities.UniverseManager.System.Collections.IEnumerable.GetEnumerator()", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.System.Collections.IEnumerable.GetEnumerator()", span="66-66"];
m73_9 [cluster="QuantConnect.Securities.UniverseManager.System.Collections.IEnumerable.GetEnumerator()", file="Symbols.cs", label="return ((IEnumerable)_universes).GetEnumerator();", span="68-68"];
m73_10 [cluster="QuantConnect.Securities.UniverseManager.System.Collections.IEnumerable.GetEnumerator()", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.System.Collections.IEnumerable.GetEnumerator()", span="66-66"];
m73_33 [cluster="QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", span="152-152"];
m73_34 [cluster="QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", file="Symbols.cs", label="return _universes.ContainsKey(key);", span="154-154"];
m73_35 [cluster="QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", span="152-152"];
m73_11 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="Symbols.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m73_42 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="260-260"];
m73_54 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="Symbols.cs", label="var handler = CollectionChanged", span="262-262"];
m73_56 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="Symbols.cs", label="handler(this, e)", span="263-263"];
m73_55 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="Symbols.cs", label="handler != null", span="263-263"];
m73_57 [cluster="QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="260-260"];
m73_12 [cluster="QuantConnect.Securities.UniverseManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="75-75"];
m73_13 [cluster="QuantConnect.Securities.UniverseManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="Symbols.cs", label="Add(item.Key, item.Value)", span="77-77"];
m73_14 [cluster="QuantConnect.Securities.UniverseManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="75-75"];
m73_40 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="Symbols.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m73_27 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="Symbols.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m73_53 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Symbols.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m73_32 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="Symbols.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m73_4 [cluster="QuantConnect.Securities.UniverseManager.GetEnumerator()", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.GetEnumerator()", span="54-54"];
m73_5 [cluster="QuantConnect.Securities.UniverseManager.GetEnumerator()", file="Symbols.cs", label="return _universes.GetEnumerator();", span="56-56"];
m73_6 [cluster="QuantConnect.Securities.UniverseManager.GetEnumerator()", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.GetEnumerator()", span="54-54"];
m73_3 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="Symbols.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m73_28 [cluster="QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="117-117"];
m73_29 [cluster="QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="Symbols.cs", label="Universe universe", span="119-119"];
m73_30 [cluster="QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="Symbols.cs", label="return _universes.TryRemove(item.Key, out universe);", span="120-120"];
m73_31 [cluster="QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="117-117"];
m73_15 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m73_37 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="Symbols.cs", label="_universes.TryAdd(key, universe)", span="163-163"];
m73_38 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="Symbols.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, universe))", span="165-165"];
m73_39 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m73_36 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="Symbols.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m73_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="Symbols.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m73_24 [cluster="QuantConnect.Securities.UniverseManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>[], int)", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>[], int)", span="105-105"];
m73_25 [cluster="QuantConnect.Securities.UniverseManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>[], int)", file="Symbols.cs", label="((IDictionary<Symbol, Universe>)_universes).CopyTo(array, arrayIndex)", span="107-107"];
m73_26 [cluster="QuantConnect.Securities.UniverseManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>[], int)", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>[], int)", span="105-105"];
m73_41 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", file="Symbols.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", span="0-0"];
m73_20 [cluster="QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="96-96"];
m73_21 [cluster="QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="Symbols.cs", label="return _universes.Contains(item);", span="98-98"];
m73_22 [cluster="QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>)", span="96-96"];
m73_19 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="Symbols.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m73_16 [cluster="QuantConnect.Securities.UniverseManager.Clear()", file="Symbols.cs", label="Entry QuantConnect.Securities.UniverseManager.Clear()", span="84-84"];
m73_17 [cluster="QuantConnect.Securities.UniverseManager.Clear()", file="Symbols.cs", label="_universes.Clear()", span="86-86"];
m73_18 [cluster="QuantConnect.Securities.UniverseManager.Clear()", file="Symbols.cs", label="Exit QuantConnect.Securities.UniverseManager.Clear()", span="84-84"];
m73_59 [file="Symbols.cs", label="QuantConnect.Securities.UniverseManager", span=""];
m75_14 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Time.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m75_4 [cluster="System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime, System.TimeZoneInfo)", file="Time.cs", label="Entry System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime, System.TimeZoneInfo)", span="0-0"];
m75_30 [cluster="System.Math.Max(long, long)", file="Time.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m75_79 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="295-295"];
m75_80 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="var day = from.Date", span="297-297"];
m75_83 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="yield return day;", span="301-301"];
m75_81 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="day.Date <= thru.Date", span="297-297"];
m75_82 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="exchange.IsDateOpen(day)", span="299-299"];
m75_84 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="day = day.AddDays(1)", span="297-297"];
m75_85 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="295-295"];
m75_101 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", file="Time.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", span="141-141"];
m75_32 [cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="Entry QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", span="181-181"];
m75_33 [cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="return TimeSpan.FromTicks(Math.Min(one.Ticks, two.Ticks));", span="183-183"];
m75_34 [cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="Exit QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", span="181-181"];
m75_0 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="Time.cs", label="Entry QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", span="89-89"];
m75_1 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="Time.cs", label="utcDateTime = TimeZoneInfo.ConvertTimeToUtc(dateTime, timeZone)", span="91-91"];
m75_2 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="Time.cs", label="this.timeZone = timeZone", span="92-92"];
m75_3 [cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="Time.cs", label="Exit QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", span="89-89"];
m75_27 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="Entry QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="174-174"];
m75_28 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="return TimeSpan.FromTicks(Math.Max(one.Ticks, two.Ticks));", span="176-176"];
m75_29 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="Time.cs", label="Exit QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="174-174"];
m75_58 [cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="Time.cs", label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m75_59 [cluster="string.Substring(int, int)", file="Time.cs", label="Entry string.Substring(int, int)", span="0-0"];
m75_36 [cluster="QuantConnect.Time.Max(System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.Max(System.DateTime, System.DateTime)", span="189-189"];
m75_38 [cluster="QuantConnect.Time.Max(System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.Max(System.DateTime, System.DateTime)", span="189-189"];
m75_5 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m75_6 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="DateTime time", span="129-129"];
m75_7 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="time = EpochTime.AddSeconds(unixTimeStamp)", span="133-133"];
m75_9 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="Log.Error(err, ''UnixTimeStamp: '' + unixTimeStamp)", span="137-137"];
m75_8 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label=Exception, span="135-135"];
m75_11 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="return time;", span="140-140"];
m75_10 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="time = DateTime.Now", span="138-138"];
m75_12 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Time.cs", label="Exit QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m75_42 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="Entry QuantConnect.Time.ParseDate(string)", span="207-207"];
m75_43 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime date", span="212-212"];
m75_44 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.SixCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="213-213"];
m75_46 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.EightCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="217-217"];
m75_48 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime.TryParseExact(dateToParse.Substring(0, 19), DateFormat.JsonFormat, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="221-221"];
m75_50 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.US, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="225-225"];
m75_52 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="DateTime.TryParse(dateToParse, out date)", span="229-229"];
m75_45 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return date;", span="215-215"];
m75_47 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return date;", span="219-219"];
m75_49 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return date;", span="223-223"];
m75_51 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return date;", span="227-227"];
m75_53 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return date;", span="231-231"];
m75_54 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label=Exception, span="234-234"];
m75_56 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="return DateTime.Now;", span="239-239"];
m75_55 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="Log.Error(err)", span="236-236"];
m75_57 [cluster="QuantConnect.Time.ParseDate(string)", file="Time.cs", label="Exit QuantConnect.Time.ParseDate(string)", span="207-207"];
m75_24 [cluster="QuantConnect.Time.TimeStamp()", file="Time.cs", label="Entry QuantConnect.Time.TimeStamp()", span="166-166"];
m75_25 [cluster="QuantConnect.Time.TimeStamp()", file="Time.cs", label="return DateTimeToUnixTimeStamp(DateTime.UtcNow);", span="168-168"];
m75_26 [cluster="QuantConnect.Time.TimeStamp()", file="Time.cs", label="Exit QuantConnect.Time.TimeStamp()", span="166-166"];
m75_68 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="263-263"];
m75_69 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="var day = from.Date", span="265-265"];
m75_72 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="yield return day;", span="269-269"];
m75_70 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="day.Date <= thru.Date", span="265-265"];
m75_71 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="TradableDate(securities, day)", span="267-267"];
m75_73 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="day = day.AddDays(1)", span="265-265"];
m75_74 [cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="263-263"];
m75_23 [cluster="System.DateTime.ToString(string)", file="Time.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m75_110 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="376-376"];
m75_111 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="var count = 0", span="378-378"];
m75_112 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Log.Trace(''Time.TradeableDates(): Security Count: '' + securities.Count)", span="379-379"];
m75_115 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="count++", span="386-386"];
m75_118 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="return count;", span="394-394"];
m75_117 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Log.Error(err)", span="392-392"];
m75_119 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="376-376"];
m75_134 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="Time.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m75_109 [cluster="QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", file="Time.cs", label="Entry QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", span="115-115"];
m75_22 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="Time.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m75_100 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="Time.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m75_31 [cluster="System.TimeSpan.FromTicks(long)", file="Time.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m75_13 [cluster="System.DateTime.AddSeconds(double)", file="Time.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m75_86 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsDateOpen(System.DateTime)", file="Time.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsDateOpen(System.DateTime)", span="177-177"];
m75_35 [cluster="System.Math.Min(long, long)", file="Time.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m75_61 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="249-249"];
m75_62 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="var day = from.Date", span="251-251"];
m75_64 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="yield return day;", span="252-252"];
m75_63 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="day.Date <= thru.Date", span="251-251"];
m75_65 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="day = day.AddDays(1)", span="251-251"];
m75_66 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="249-249"];
m75_60 [cluster="System.DateTime.TryParse(string, out System.DateTime)", file="Time.cs", label="Entry System.DateTime.TryParse(string, out System.DateTime)", span="0-0"];
m75_15 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="148-148"];
m75_16 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="double timestamp = 0", span="150-150"];
m75_17 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="timestamp = (time - new DateTime(1970, 1, 1, 0, 0, 0, 0)).TotalSeconds", span="153-153"];
m75_19 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="Log.Error(err, time.ToString(''o''))", span="157-157"];
m75_18 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", color=green, community=0, file="Time.cs", label=Exception, prediction=59, span="155-155"];
m75_20 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="return timestamp;", span="159-159"];
m75_21 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="148-148"];
m75_39 [cluster="QuantConnect.Time.Min(System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.Min(System.DateTime, System.DateTime)", span="197-197"];
m75_41 [cluster="QuantConnect.Time.Min(System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.Min(System.DateTime, System.DateTime)", span="197-197"];
m75_133 [cluster="System.ArgumentException.ArgumentException(string, string)", file="Time.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m75_75 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", span="352-352"];
m75_102 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label=securities, span="356-356"];
m75_103 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="security.Exchange.IsOpenDuringBar(day.Date, day.Date.AddDays(1), security.IsExtendedMarketHours)", span="358-358"];
m75_105 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label=Exception, span="361-361"];
m75_107 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="return false;", span="365-365"];
m75_104 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="return true;", span="358-358"];
m75_106 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="Log.Error(err)", span="363-363"];
m75_108 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", span="352-352"];
m75_76 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="Time.cs", label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="282-282"];
m75_77 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="Time.cs", label="return EachTradeableDay(security.Exchange.Hours, from, thru);", span="284-284"];
m75_78 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="Time.cs", label="Exit QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="282-282"];
m75_120 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Time.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m75_121 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="406-406"];
m75_122 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="barSize <= TimeSpan.Zero", span="408-408"];
m75_124 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="var current = end.RoundDown(barSize)", span="413-413"];
m75_126 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="i < barCount", span="414-414"];
m75_128 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="current = current - barSize", span="417-417"];
m75_129 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="exchange.IsOpen(current, previous, extendedMarketHours)", span="418-418"];
m75_123 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="throw new ArgumentException(''barSize must be greater than TimeSpan.Zero'', ''barSize'');", span="410-410"];
m75_125 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="int i = 0", span="414-414"];
m75_127 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="var previous = current", span="416-416"];
m75_131 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="return current;", span="423-423"];
m75_130 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="i++", span="420-420"];
m75_132 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="Time.cs", label="Exit QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="406-406"];
m75_67 [cluster="System.DateTime.AddDays(double)", file="Time.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m75_87 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="Entry QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", span="319-319"];
m75_88 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="var currentExchangeTime = from", span="321-321"];
m75_97 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="yield return currentInTimeZone.Date;", span="339-339"];
m75_89 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="thru = thru.Date.AddDays(1)", span="322-322"];
m75_91 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="var currentInTimeZone = currentExchangeTime.ConvertTo(exchange.TimeZone, timeZone)", span="326-326"];
m75_93 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone) > thru", span="330-330"];
m75_94 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="currentInTimeZoneEod = thru.ConvertTo(exchange.TimeZone, timeZone)", span="332-332"];
m75_95 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="var currentExchangeTimeEod = currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone)", span="336-336"];
m75_96 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="exchange.IsOpen(currentExchangeTime, currentExchangeTimeEod, includeExtendedMarketHours)", span="337-337"];
m75_98 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="currentExchangeTime = currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone)", span="342-342"];
m75_90 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="currentExchangeTime < thru", span="323-323"];
m75_92 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="var currentInTimeZoneEod = currentInTimeZone.Date.AddDays(1)", span="327-327"];
m75_99 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="Time.cs", label="Exit QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", span="319-319"];
m75_135 [file="Time.cs", label="out QuantConnect.Time.DateTimeWithZone", span=""];
m76_18 [cluster="Unk.Where", file="TradeBar.cs", label="Entry Unk.Where", span=""];
m76_48 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="103-103"];
m76_108 [cluster="Unk.GetSufficientCapitalForOrder", file="TradeBar.cs", label="Entry Unk.GetSufficientCapitalForOrder", span=""];
m76_27 [cluster="lambda expression", file="TradeBar.cs", label="Entry lambda expression", span="94-94"];
m76_21 [cluster="lambda expression", file="TradeBar.cs", label="Entry lambda expression", span="94-94"];
m76_24 [cluster="lambda expression", file="TradeBar.cs", label="Entry lambda expression", span="94-94"];
m76_22 [cluster="lambda expression", file="TradeBar.cs", label="x.AbsoluteQuantity > 0", span="94-94"];
m76_23 [cluster="lambda expression", file="TradeBar.cs", label="Exit lambda expression", span="94-94"];
m76_25 [cluster="lambda expression", file="TradeBar.cs", label="x.Symbol", span="94-94"];
m76_26 [cluster="lambda expression", file="TradeBar.cs", label="Exit lambda expression", span="94-94"];
m76_28 [cluster="lambda expression", file="TradeBar.cs", label="new Holding(holding)", span="94-94"];
m76_29 [cluster="lambda expression", file="TradeBar.cs", label="Exit lambda expression", span="94-94"];
m76_35 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="111-111"];
m76_36 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="order.Status == OrderStatus.New", span="113-113"];
m76_37 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="_pending[order.Id] = order", span="115-115"];
m76_38 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="!order.BrokerId.Contains(order.Id)", span="116-116"];
m76_39 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="order.BrokerId.Add(order.Id)", span="116-116"];
m76_40 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var submitted = new OrderEvent(order) {Status = OrderStatus.Submitted}", span="119-119"];
m76_43 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return false;", span="124-124"];
m76_41 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="OnOrderEvent(submitted)", span="120-120"];
m76_42 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return true;", span="122-122"];
m76_44 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="111-111"];
m76_31 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="101-101"];
m76_32 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="TradeBar.cs", label="return _algorithm.Portfolio.CashBook.Values.ToList();", span="103-103"];
m76_33 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetCashBalance()", span="101-101"];
m76_47 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", file="TradeBar.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", span="100-100"];
m76_6 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="54-54"];
m76_7 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="TradeBar.cs", label="_algorithm = algorithm", span="57-57"];
m76_8 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="TradeBar.cs", label="_orders = _algorithm.Transactions.Orders", span="58-58"];
m76_9 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="TradeBar.cs", label="_pending = new ConcurrentDictionary<int, Order>()", span="59-59"];
m76_10 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="54-54"];
m76_116 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="TradeBar.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m76_11 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="77-77"];
m76_12 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="TradeBar.cs", label="return (from order in _orders\r\n                    where order.Value.Status != OrderStatus.Filled &&\r\n                          order.Value.Status != OrderStatus.Canceled &&\r\n                          order.Value.Status != OrderStatus.Invalid\r\n                    orderby order.Value.Id\r\n                    select order.Value).ToList();", span="79-84"];
m76_13 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetOpenOrders()", span="77-77"];
m76_19 [cluster="Unk.OrderBy", file="TradeBar.cs", label="Entry Unk.OrderBy", span=""];
m76_112 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="TradeBar.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="34-34"];
m76_14 [cluster="Unk.ToList", file="TradeBar.cs", label="Entry Unk.ToList", span=""];
m76_71 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="173-173"];
m76_72 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="_pending.Count == 0", span="176-176"];
m76_73 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="return;", span="178-178"];
m76_74 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="var orders = (from order in _pending\r\n                          where order.Value.Status != OrderStatus.Filled &&\r\n                                order.Value.Status != OrderStatus.Canceled &&\r\n                                order.Value.Status != OrderStatus.Invalid\r\n                          orderby order.Value.Id ascending\r\n                          select order)", span="187-192"];
m76_75 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label=orders, span="195-195"];
m76_76 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="var order = kvp.Value", span="197-197"];
m76_77 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="var security = _algorithm.Securities[order.Symbol]", span="199-199"];
m76_78 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="!_algorithm.BrokerageModel.CanExecuteOrder(security, order)", span="202-202"];
m76_79 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="var sufficientBuyingPower = _algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="208-208"];
m76_81 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="fill.Symbol = order.Symbol", span="211-211"];
m76_84 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="order.Type", span="222-222"];
m76_86 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="fill = model.LimitFill(security, order as LimitOrder)", span="225-225"];
m76_88 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="fill = model.StopMarketFill(security, order as StopMarketOrder)", span="229-229"];
m76_90 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="fill = model.MarketFill(security, order as MarketOrder)", span="233-233"];
m76_92 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="fill = model.StopLimitFill(security, order as StopLimitOrder)", span="237-237"];
m76_94 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="fill = model.MarketOnOpenFill(security, order as MarketOnOpenOrder)", span="241-241"];
m76_96 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="fill = model.MarketOnCloseFill(security, order as MarketOnCloseOrder)", span="245-245"];
m76_99 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'', order.Id, order.Type, err.Message))", span="252-252"];
m76_100 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="order.Status = OrderStatus.Invalid", span="258-258"];
m76_102 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="order.Status != fill.Status || fill.FillQuantity != 0", span="263-263"];
m76_104 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="order.Status == OrderStatus.Filled || order.Status == OrderStatus.Invalid || order.Status == OrderStatus.Canceled", span="269-269"];
m76_105 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="_pending.TryRemove(order.Id, out order)", span="271-271"];
m76_83 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="var model = security.TransactionModel", span="217-217"];
m76_80 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="var fill = new OrderEvent()", span="210-210"];
m76_82 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label=sufficientBuyingPower, span="214-214"];
m76_103 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="OnOrderEvent(fill)", span="266-266"];
m76_85 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="OrderType.Limit", span="224-224"];
m76_87 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="OrderType.StopMarket", span="228-228"];
m76_89 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="OrderType.Market", span="232-232"];
m76_91 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="OrderType.StopLimit", span="236-236"];
m76_93 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="OrderType.MarketOnOpen", span="240-240"];
m76_95 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="OrderType.MarketOnClose", span="244-244"];
m76_97 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label=Exception, span="249-249"];
m76_98 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="Log.Error(''BacktestingBrokerage.Scan(): '' + err.Message)", span="251-251"];
m76_101 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.Value))", span="259-259"];
m76_106 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="173-173"];
m76_119 [cluster="Unk.TryRemove", file="TradeBar.cs", label="Entry Unk.TryRemove", span=""];
m76_118 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="TradeBar.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="248-248"];
m76_70 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="TradeBar.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m76_30 [cluster="Holding.cstr", file="TradeBar.cs", label="Entry Holding.cstr", span=""];
m76_5 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="TradeBar.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m76_0 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="41-41"];
m76_1 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="TradeBar.cs", label="_algorithm = algorithm", span="44-44"];
m76_2 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="TradeBar.cs", label="_orders = _algorithm.Transactions.Orders", span="45-45"];
m76_3 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="TradeBar.cs", label="_pending = new ConcurrentDictionary<int, Order>()", span="46-46"];
m76_4 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="41-41"];
m76_49 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="132-132"];
m76_50 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="order.Status == OrderStatus.Update", span="134-134"];
m76_51 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="_pending[order.Id] = order", span="136-136"];
m76_52 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="!order.BrokerId.Contains(order.Id)", span="137-137"];
m76_53 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="order.BrokerId.Add(order.Id)", span="137-137"];
m76_54 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var updated = new OrderEvent(order) {Status = OrderStatus.Update}", span="140-140"];
m76_57 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return false;", span="145-145"];
m76_55 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="OnOrderEvent(updated)", span="141-141"];
m76_56 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return true;", span="143-143"];
m76_58 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="132-132"];
m76_109 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, string, QuantConnect.Orders.OrderStatus, decimal, int, string)", file="TradeBar.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, string, QuantConnect.Orders.OrderStatus, decimal, int, string)", span="85-85"];
m76_45 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="TradeBar.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m76_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="TradeBar.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m76_115 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="TradeBar.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="73-73"];
m76_120 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="279-279"];
m76_121 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="279-279"];
m76_59 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="153-153"];
m76_60 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="order.Status == OrderStatus.Canceled", span="155-155"];
m76_62 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="_pending.TryRemove(order.Id, out pending)", span="158-158"];
m76_63 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="!order.BrokerId.Contains(order.Id)", span="159-159"];
m76_64 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="order.BrokerId.Add(order.Id)", span="159-159"];
m76_65 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="var canceled = new OrderEvent(order) {Status = OrderStatus.Canceled}", span="162-162"];
m76_61 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Order pending", span="157-157"];
m76_68 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return false;", span="167-167"];
m76_66 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="OnOrderEvent(canceled)", span="163-163"];
m76_67 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="return true;", span="165-165"];
m76_69 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="153-153"];
m76_122 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="287-287"];
m76_123 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="287-287"];
m76_46 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TradeBar.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m76_111 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="TradeBar.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="42-42"];
m76_117 [cluster="Unk.Format", file="TradeBar.cs", label="Entry Unk.Format", span=""];
m76_114 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="TradeBar.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="65-65"];
m76_113 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="TradeBar.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="50-50"];
m76_15 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="TradeBar.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="91-91"];
m76_16 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="TradeBar.cs", label="return _algorithm.Portfolio.Values.Where(x => x.AbsoluteQuantity > 0).OrderBy(x => x.Symbol).Select(holding => new Holding(holding)).ToList();", span="94-94"];
m76_17 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="TradeBar.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="91-91"];
m76_20 [cluster="Unk.Select", file="TradeBar.cs", label="Entry Unk.Select", span=""];
m76_110 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="TradeBar.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="57-57"];
m76_107 [cluster="Unk.CanExecuteOrder", file="TradeBar.cs", label="Entry Unk.CanExecuteOrder", span=""];
m76_124 [file="TradeBar.cs", label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span=""];
m77_0 [cluster="QuantConnect.Brokerages.WebSocketError.WebSocketError(string, System.Exception)", file="WebSocketError.cs", label="Entry QuantConnect.Brokerages.WebSocketError.WebSocketError(string, System.Exception)", span="24-24"];
m77_3 [cluster="QuantConnect.Brokerages.WebSocketError.WebSocketError(string, System.Exception)", file="WebSocketError.cs", label="Exit QuantConnect.Brokerages.WebSocketError.WebSocketError(string, System.Exception)", span="24-24"];
m77_4 [file="WebSocketError.cs", label="QuantConnect.Brokerages.WebSocketError", span=""];
m78_0 [cluster="QuantConnect.Brokerages.WebSocketMessage.WebSocketMessage(string)", file="WebSocketMessage.cs", label="Entry QuantConnect.Brokerages.WebSocketMessage.WebSocketMessage(string)", span="16-16"];
m78_2 [cluster="QuantConnect.Brokerages.WebSocketMessage.WebSocketMessage(string)", file="WebSocketMessage.cs", label="Exit QuantConnect.Brokerages.WebSocketMessage.WebSocketMessage(string)", span="16-16"];
m78_3 [file="WebSocketMessage.cs", label="QuantConnect.Brokerages.WebSocketMessage", span=""];
m79_44 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m79_10 [cluster="WebSocket.cstr", file="WebSocketWrapper.cs", label="Entry WebSocket.cstr", span=""];
m79_40 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="WebSocketWrapper.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m79_9 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="WebSocketWrapper.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m79_19 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnMessage(QuantConnect.Brokerages.WebSocketMessage)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.OnMessage(QuantConnect.Brokerages.WebSocketMessage)", span="102-102"];
m79_39 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnMessage(QuantConnect.Brokerages.WebSocketMessage)", file="WebSocketWrapper.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.OnMessage(QuantConnect.Brokerages.WebSocketMessage)", span="102-102"];
m79_14 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", file="WebSocketWrapper.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", span="121-121"];
m79_47 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", file="WebSocketWrapper.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", span="121-121"];
m79_29 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Connect()", file="WebSocketWrapper.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Connect()", span="60-60"];
m79_32 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Connect()", file="WebSocketWrapper.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.Connect()", span="60-60"];
m79_49 [cluster="System.EventHandler.Invoke(object, System.EventArgs)", file="WebSocketWrapper.cs", label="Entry System.EventHandler.Invoke(object, System.EventArgs)", span="0-0"];
m79_33 [cluster="Unk.Connect", file="WebSocketWrapper.cs", label="Entry Unk.Connect", span=""];
m79_37 [cluster="Unk.Close", file="WebSocketWrapper.cs", label="Entry Unk.Close", span=""];
m79_25 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Send(string)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Send(string)", span="52-52"];
m79_26 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Send(string)", file="WebSocketWrapper.cs", label="wrapped.Send(data)", span="54-54"];
m79_27 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Send(string)", file="WebSocketWrapper.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.Send(string)", span="52-52"];
m79_34 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="WebSocketWrapper.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Close()", span="71-71"];
m79_35 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="WebSocketWrapper.cs", label="wrapped.Close()", span="73-73"];
m79_36 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="WebSocketWrapper.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.Close()", span="71-71"];
m79_28 [cluster="Unk.Send", file="WebSocketWrapper.cs", label="Entry Unk.Send", span=""];
m79_23 [cluster="WebSocketError.cstr", file="WebSocketWrapper.cs", label="Entry WebSocketError.cstr", span=""];
m79_48 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m79_18 [cluster="WebSocketMessage.cstr", file="WebSocketWrapper.cs", label="Entry WebSocketMessage.cstr", span=""];
m79_24 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnError(QuantConnect.Brokerages.WebSocketError)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.OnError(QuantConnect.Brokerages.WebSocketError)", span="112-112"];
m79_43 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnError(QuantConnect.Brokerages.WebSocketError)", file="WebSocketWrapper.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.OnError(QuantConnect.Brokerages.WebSocketError)", span="112-112"];
m79_0 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="WebSocketWrapper.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", span="33-33"];
m79_3 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="WebSocketWrapper.cs", label="_url = url", span="40-40"];
m79_4 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="WebSocketWrapper.cs", label="wrapped = new WebSocket(url)", span="41-41"];
m79_8 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="WebSocketWrapper.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", span="33-33"];
m79_20 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Entry lambda expression", span="45-45"];
m79_11 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Entry lambda expression", span="43-43"];
m79_13 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Exit lambda expression", span="43-43"];
m79_15 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Entry lambda expression", span="44-44"];
m79_17 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Exit lambda expression", span="44-44"];
m79_22 [cluster="lambda expression", file="WebSocketWrapper.cs", label="Exit lambda expression", span="45-45"];
m79_50 [file="WebSocketWrapper.cs", label="QuantConnect.Brokerages.WebSocketWrapper", span=""];
m0_43 -> m0_47  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments", style=dashed];
m0_43 -> m0_48  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments", style=dashed];
m0_43 -> m0_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments", style=dashed];
m0_43 -> m0_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments", style=dashed];
m0_43 -> m0_52  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments", style=dashed];
m0_43 -> m0_53  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataPathComponentsTests.Arguments", style=dashed];
m0_46 -> m0_49  [color=darkseagreen4, key=1, label=expectedFileName, style=dashed];
m0_45 -> m0_47  [color=darkseagreen4, key=1, label=decomposed, style=dashed];
m0_45 -> m0_48  [color=darkseagreen4, key=1, label=decomposed, style=dashed];
m0_45 -> m0_49  [color=darkseagreen4, key=1, label=decomposed, style=dashed];
m0_45 -> m0_50  [color=darkseagreen4, key=1, label=decomposed, style=dashed];
m0_45 -> m0_51  [color=darkseagreen4, key=1, label=decomposed, style=dashed];
m0_45 -> m0_52  [color=darkseagreen4, key=1, label=decomposed, style=dashed];
m0_45 -> m0_53  [color=darkseagreen4, key=1, label=decomposed, style=dashed];
m0_0 -> m0_6  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m0_14 -> m0_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_14 -> m0_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_66 -> m0_41  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m0_67 -> m0_41  [color=darkseagreen4, key=1, label=market, style=dashed];
m0_68 -> m0_41  [color=darkseagreen4, key=1, label=name, style=dashed];
m1_37 -> m1_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_37 -> m1_43  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_252 -> m1_269  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_252 -> m1_277  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_263 -> m1_275  [color=darkseagreen4, key=1, label=delay, style=dashed];
m1_265 -> m1_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_265 -> m1_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_265 -> m1_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_191 -> m1_193  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_191 -> m1_209  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_191 -> m1_197  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_191 -> m1_201  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_195 -> m1_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_203 -> m1_206  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m1_199 -> m1_201  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_199 -> m1_205  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_12 -> m1_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_187 -> m1_187  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m1_209 -> m1_209  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m1_259 -> m1_259  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel>", style=dashed];
m1_276 -> m1_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_276 -> m1_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_213 -> m1_215  [color=darkseagreen4, key=1, label=response, style=dashed];
m1_77 -> m1_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_118 -> m1_121  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_120 -> m1_127  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_120 -> m1_128  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_120 -> m1_131  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_120 -> m1_132  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_122 -> m1_125  [color=darkseagreen4, key=1, label=side, style=dashed];
m1_122 -> m1_129  [color=darkseagreen4, key=1, label=side, style=dashed];
m1_123 -> m1_127  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_123 -> m1_128  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_123 -> m1_131  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_123 -> m1_132  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_124 -> m1_126  [color=darkseagreen4, key=1, label=size, style=dashed];
m1_124 -> m1_128  [color=darkseagreen4, key=1, label=size, style=dashed];
m1_124 -> m1_130  [color=darkseagreen4, key=1, label=size, style=dashed];
m1_124 -> m1_132  [color=darkseagreen4, key=1, label=size, style=dashed];
m1_82 -> m1_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_140 -> m1_142  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_187  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_147  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_153  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_140 -> m1_156  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_143 -> m1_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_143 -> m1_145  [color=darkseagreen4, key=1, label=cached, style=dashed];
m1_164 -> m1_170  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m1_148 -> m1_150  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_148 -> m1_160  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_148 -> m1_167  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_148 -> m1_169  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m1_149 -> m1_156  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_236 -> m1_238  [color=darkseagreen4, key=1, label=item, style=dashed];
m1_236 -> m1_239  [color=darkseagreen4, key=1, label=item, style=dashed];
m1_241 -> m1_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_36 -> m1_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_58  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_36 -> m1_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m1_47 -> m1_49  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_51  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_54  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_57  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_62  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_65  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_47 -> m1_68  [color=darkseagreen4, key=1, label=raw, style=dashed];
m1_283 -> m1_285  [color=darkseagreen4, key=1, label=response, style=dashed];
m1_283 -> m1_290  [color=darkseagreen4, key=1, label=response, style=dashed];
m1_288 -> m1_292  [color=darkseagreen4, key=1, label=rate, style=dashed];
m1_83 -> m1_91  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_83 -> m1_95  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_84 -> m1_86  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_84 -> m1_101  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_86 -> m1_90  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_86 -> m1_94  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_86 -> m1_98  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_86 -> m1_101  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_87 -> m1_94  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_87 -> m1_98  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_87 -> m1_101  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m1_92 -> m1_94  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_96 -> m1_98  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_114 -> m1_116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs", style=dashed];
m1_303 -> m1_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_43  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_86  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_101  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_115  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_141  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_150  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_160  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_167  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_169  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_170  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_205  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_224  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_231  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_238  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_239  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_247  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_248  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_269  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_272  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_274  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_277  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_285  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_290  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_303 -> m1_300  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m1_304 -> m1_187  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_305 -> m1_209  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_306 -> m1_269  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_306 -> m1_277  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_307 -> m1_275  [color=darkseagreen4, key=1, label=delay, style=dashed];
m1_308 -> m1_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_308 -> m1_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m5_22 -> m5_25  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_23 -> m5_26  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerageFactory", style=dashed];
m5_7 -> m5_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m5_8 -> m5_10  [color=darkseagreen4, key=1, label=error, style=dashed];
m5_8 -> m5_11  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m5_103 -> m5_109  [color=darkseagreen4, key=1, label=jobDays, style=dashed];
m5_104 -> m5_107  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m5_104 -> m5_109  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m5_104 -> m5_112  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m5_106 -> m5_112  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m5_108 -> m5_112  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m5_30 -> m5_33  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m5_30 -> m5_35  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_30 -> m5_82  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_30 -> m5_83  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_30 -> m5_84  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_30 -> m5_85  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_30 -> m5_86  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_30 -> m5_49  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_30 -> m5_58  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_31 -> m5_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_31 -> m5_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_31 -> m5_82  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_31 -> m5_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_31 -> m5_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_31 -> m5_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_31 -> m5_61  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_44 -> m5_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_44 -> m5_64  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m5_132 -> m5_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m5_132 -> m5_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m5_132 -> m5_89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m5_132 -> m5_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m5_132 -> m5_61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m5_132 -> m5_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m5_133 -> m5_82  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_133 -> m5_83  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_133 -> m5_84  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_133 -> m5_85  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_133 -> m5_86  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m5_134 -> m5_82  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_135 -> m5_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m6_10 -> m6_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_52 -> m6_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>", style=dashed];
m6_61 -> m6_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_63 -> m6_66  [color=darkseagreen4, key=1, label=removed, style=dashed];
m6_35 -> m6_38  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_35 -> m6_39  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_35 -> m6_40  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_15 -> m6_19  [color=darkseagreen4, key=1, label=addedSecurities, style=dashed];
m6_15 -> m6_20  [color=darkseagreen4, key=1, label=addedSecurities, style=dashed];
m6_17 -> m6_19  [color=darkseagreen4, key=1, label=security, style=dashed];
m6_25 -> m6_29  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m6_73 -> m6_75  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>", style=dashed];
m6_73 -> m6_76  [color=darkseagreen4, key=1, label=removed, style=dashed];
m6_75 -> m6_75  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>", style=dashed];
m6_102 -> m6_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_37  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_52  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_55  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_87  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_91  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_95  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m6_102 -> m6_99  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m7_5 -> m7_10  [color=darkseagreen4, key=1, label=double, style=dashed];
m7_27 -> m7_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_27 -> m7_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_27 -> m7_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_27 -> m7_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_27 -> m7_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_46 -> m7_48  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m7_47 -> m7_49  [color=darkseagreen4, key=1, label=day, style=dashed];
m7_69 -> m7_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m7_69 -> m7_72  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m7_69 -> m7_73  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m7_70 -> m7_74  [color=green, key=1, label=count, style=dashed];
m7_70 -> m7_77  [color=green, key=1, label=count, style=dashed];
m7_74 -> m7_74  [color=darkseagreen4, key=1, label=count, style=dashed];
m7_74 -> m7_77  [color=darkseagreen4, key=1, label=count, style=dashed];
m7_16 -> m7_20  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m7_60 -> m7_62  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m7_53 -> m7_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m7_53 -> m7_55  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m7_54 -> m7_56  [color=darkseagreen4, key=1, label=day, style=dashed];
m7_54 -> m7_57  [color=darkseagreen4, key=1, label=day, style=dashed];
m8_22 -> m8_25  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_23 -> m8_25  [color=darkseagreen4, key=1, label=conversionRate, style=dashed];
m8_96 -> m8_98  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_96 -> m8_102  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_97 -> m8_102  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m8_99 -> m8_101  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_99 -> m8_102  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_100 -> m8_102  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_103 -> m8_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_13 -> m8_17  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_14 -> m8_18  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_16 -> m8_18  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_16 -> m8_19  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_15 -> m8_19  [color=darkseagreen4, key=1, label=conversionRate, style=dashed];
m8_79 -> m8_81  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_79 -> m8_85  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_80 -> m8_85  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m8_82 -> m8_84  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_82 -> m8_85  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_83 -> m8_85  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_86 -> m8_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_175 -> m8_177  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_175 -> m8_181  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_175 -> m8_183  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_175 -> m8_184  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_176 -> m8_181  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m8_178 -> m8_180  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_178 -> m8_181  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_179 -> m8_181  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_182 -> m8_184  [color=darkseagreen4, key=1, label=last, style=dashed];
m8_30 -> m8_32  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_30 -> m8_37  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_31 -> m8_37  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m8_33 -> m8_37  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_33 -> m8_38  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_34 -> m8_36  [color=darkseagreen4, key=1, label=abcConfig, style=dashed];
m8_38 -> m8_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_35 -> m8_37  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_35 -> m8_39  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_39 -> m8_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_159 -> m8_161  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_159 -> m8_165  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_159 -> m8_167  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_159 -> m8_168  [color=darkseagreen4, key=1, label=cash, style=dashed];
m8_160 -> m8_165  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m8_162 -> m8_164  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_162 -> m8_165  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_163 -> m8_165  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_166 -> m8_168  [color=darkseagreen4, key=1, label=last, style=dashed];
m8_62 -> m8_64  [color=green, key=1, label=cash, style=dashed];
m8_62 -> m8_69  [color=green, key=1, label=cash, style=dashed];
m8_61 -> m8_68  [color=green, key=1, label=minimumResolution, style=dashed];
m8_61 -> m8_70  [color=green, key=1, label=minimumResolution, style=dashed];
m8_70 -> m8_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_63 -> m8_69  [color=green, key=1, label=cashBook, style=dashed];
m8_65 -> m8_67  [color=green, key=1, label=subscriptions, style=dashed];
m8_65 -> m8_68  [color=green, key=1, label=subscriptions, style=dashed];
m8_65 -> m8_69  [color=green, key=1, label=subscriptions, style=dashed];
m8_65 -> m8_70  [color=green, key=1, label=subscriptions, style=dashed];
m8_66 -> m8_68  [color=green, key=1, label=securities, style=dashed];
m8_66 -> m8_69  [color=green, key=1, label=securities, style=dashed];
m8_113 -> m8_116  [color=darkseagreen4, key=1, label=cashJPY, style=dashed];
m8_113 -> m8_122  [color=darkseagreen4, key=1, label=cashJPY, style=dashed];
m8_114 -> m8_117  [color=darkseagreen4, key=1, label=cashGBP, style=dashed];
m8_114 -> m8_125  [color=darkseagreen4, key=1, label=cashGBP, style=dashed];
m8_115 -> m8_117  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m8_115 -> m8_122  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m8_115 -> m8_125  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m8_118 -> m8_121  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_119 -> m8_121  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_119 -> m8_122  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_119 -> m8_125  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m8_120 -> m8_122  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_120 -> m8_125  [color=darkseagreen4, key=1, label=securities, style=dashed];
m8_123 -> m8_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_126 -> m8_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_4 -> m9_12  [color=green, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m9_4 -> m9_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m9_33 -> m9_24  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m9_33 -> m9_25  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m9_33 -> m9_26  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m10_84 -> m10_89  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m10_86 -> m10_89  [color=darkseagreen4, key=1, label=entry, style=dashed];
m10_86 -> m10_90  [color=darkseagreen4, key=1, label=entry, style=dashed];
m10_88 -> m10_90  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m10_82 -> m10_93  [color=darkseagreen4, key=1, label=data, style=dashed];
m10_82 -> m10_90  [color=darkseagreen4, key=1, label=data, style=dashed];
m10_290 -> m10_292  [color=darkseagreen4, key=1, label=entryReader, style=dashed];
m10_156 -> m10_158  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_156 -> m10_163  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_162 -> m10_164  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m10_159 -> m10_163  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m10_133 -> m10_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_133 -> m10_143  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_134 -> m10_141  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m10_135 -> m10_137  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_135 -> m10_141  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_140 -> m10_142  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m10_271 -> m10_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_271 -> m10_273  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_100 -> m10_105  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m10_101 -> m10_106  [color=darkseagreen4, key=1, label=memoryStream, style=dashed];
m10_310 -> m10_317  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m10_311 -> m10_313  [color=darkseagreen4, key=1, label=entry, style=dashed];
m10_4 -> m10_7  [color=darkseagreen4, key=1, label=entry, style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m10_1 -> m10_11  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_1 -> m10_7  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_1 -> m10_8  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_1 -> m10_9  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_1 -> m10_10  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_6 -> m10_8  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m10_181 -> m10_184  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_181 -> m10_185  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_187 -> m10_195  [color=darkseagreen4, key=1, label=file, style=dashed];
m10_192 -> m10_194  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m10_192 -> m10_195  [color=darkseagreen4, key=1, label=outputFile, style=dashed];
m10_299 -> m10_301  [color=darkseagreen4, key=1, label=entry, style=dashed];
m10_298 -> m10_301  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m10_115 -> m10_120  [color=darkseagreen4, key=1, label=newFileOutput, style=dashed];
m10_117 -> m10_119  [color=darkseagreen4, key=1, label=gzipStream, style=dashed];
m10_114 -> m10_119  [color=darkseagreen4, key=1, label=dataBuffer, style=dashed];
m10_28 -> m10_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, byte[]>>", style=dashed];
m10_30 -> m10_38  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m10_31 -> m10_41  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_31 -> m10_34  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_31 -> m10_38  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_31 -> m10_40  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_37 -> m10_39  [color=darkseagreen4, key=1, label=sourceBytes, style=dashed];
m10_356 -> m10_360  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_358 -> m10_362  [color=darkseagreen4, key=1, label=gzipStream, style=dashed];
m10_359 -> m10_361  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m10_357 -> m10_363  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m10_346 -> m10_349  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_348 -> m10_350  [color=darkseagreen4, key=1, label=tarArchive, style=dashed];
m10_347 -> m10_351  [color=darkseagreen4, key=1, label=inStream, style=dashed];
m10_209 -> m10_211  [color=darkseagreen4, key=1, label=file, style=dashed];
m10_206 -> m10_209  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m10_208 -> m10_215  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m10_207 -> m10_215  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m10_207 -> m10_213  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m10_263 -> m10_282  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_281 -> m10_286  [color=darkseagreen4, key=1, label=zip, style=dashed];
m10_366 -> m10_371  [color=darkseagreen4, key=1, label=tar, style=dashed];
m10_368 -> m10_372  [color=darkseagreen4, key=1, label=entry, style=dashed];
m10_370 -> m10_372  [color=darkseagreen4, key=1, label=output, style=dashed];
m10_320 -> m10_322  [color=darkseagreen4, key=1, label=slash, style=dashed];
m10_319 -> m10_334  [color=darkseagreen4, key=1, label=files, style=dashed];
m10_319 -> m10_337  [color=darkseagreen4, key=1, label=files, style=dashed];
m10_332 -> m10_336  [color=darkseagreen4, key=1, label=zipStream, style=dashed];
m10_331 -> m10_336  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m10_228 -> m10_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_225 -> m10_242  [color=green, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m10_224 -> m10_241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_223 -> m10_226  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_223 -> m10_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_223 -> m10_238  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_223 -> m10_240  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_227 -> m10_242  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m10_227 -> m10_234  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m10_227 -> m10_235  [color=darkseagreen4, key=1, label="out Ionic.Zip.ZipFile", style=dashed];
m10_231 -> m10_236  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_231 -> m10_237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_166 -> m10_169  [color=green, key=1, label=string, style=dashed];
m10_166 -> m10_168  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_253 -> m10_255  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_253 -> m10_257  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_49 -> m10_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m10_50 -> m10_53  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_51 -> m10_55  [color=darkseagreen4, key=1, label=writer, style=dashed];
m10_127 -> m10_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_128 -> m10_130  [color=darkseagreen4, key=1, label=zipPath, style=dashed];
m10_381 -> m10_391  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m10_381 -> m10_389  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m10_386 -> m10_390  [color=darkseagreen4, key=1, label=tarEntry, style=dashed];
m10_384 -> m10_391  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m10_384 -> m10_389  [color=darkseagreen4, key=1, label=tarIn, style=dashed];
m10_379 -> m10_382  [color=darkseagreen4, key=1, label=gzip, style=dashed];
m10_388 -> m10_390  [color=darkseagreen4, key=1, label=stream, style=dashed];
m10_63 -> m10_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_63 -> m10_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_65 -> m10_67  [color=darkseagreen4, key=1, label=zip, style=dashed];
m10_68 -> m10_70  [color=darkseagreen4, key=1, label=zip, style=dashed];
m10_406 -> m10_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_405 -> m10_179  [color=darkseagreen4, key=1, label="QuantConnect.Compression.PathEncoder", style=dashed];
m12_0 -> m12_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_2 -> m12_2  [color=darkseagreen4, key=1, label=currencySymbol, style=dashed];
m14_8 -> m14_11  [color=darkseagreen4, key=1, label="System.IDisposable", style=dashed];
m14_8 -> m14_14  [color=darkseagreen4, key=1, label="System.Action<System.Exception>", style=dashed];
m15_15 -> m15_17  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m15_4 -> m15_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_4 -> m15_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_4 -> m15_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_4 -> m15_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_4 -> m15_14  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m15_4 -> m15_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m15_6 -> m15_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_10 -> m15_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m15_12 -> m15_14  [color=darkseagreen4, key=1, label=deltaInQuoteCurrency, style=dashed];
m15_17 -> m15_17  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m15_30 -> m15_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_30 -> m15_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_29 -> m15_35  [color=darkseagreen4, key=1, label=executedOrders, style=dashed];
m15_29 -> m15_37  [color=darkseagreen4, key=1, label=executedOrders, style=dashed];
m15_31 -> m15_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_31 -> m15_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_32 -> m15_34  [color=darkseagreen4, key=1, label=request, style=dashed];
m15_33 -> m15_35  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m15_58 -> m15_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m15_58 -> m15_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m15_58 -> m15_50  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m15_58 -> m15_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m15_58 -> m15_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.DefaultMarginCallModel", style=dashed];
m17_8 -> m17_6  [color=green, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.Client.ExecutionDetailsEventArgs", style=dashed];
m18_435 -> m18_438  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_435 -> m18_457  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m18_435 -> m18_458  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m18_456 -> m18_458  [color=green, key=1, label=submitOrderRequest, style=dashed];
m18_30 -> m18_32  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_35 -> m18_37  [color=darkseagreen4, key=1, label="out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>", style=dashed];
m18_62 -> m18_62  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, System.Collections.Concurrent.ConcurrentDictionary<QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Lean.Engine.DataFeeds.Subscription>>", style=dashed];
m18_55 -> m18_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_56 -> m18_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_56 -> m18_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_4 -> m18_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_4 -> m18_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_23 -> m18_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_23 -> m18_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_46 -> m18_48  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_51 -> m18_53  [color=darkseagreen4, key=1, label="out System.Collections.Generic.ICollection<QuantConnect.Lean.Engine.DataFeeds.Subscription>", style=dashed];
m18_38 -> m18_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_38 -> m18_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_15 -> m18_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m18_15 -> m18_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m18_18 -> m18_20  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m18_73 -> m18_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m18_73 -> m18_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m18_73 -> m18_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m18_73 -> m18_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m18_73 -> m18_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m18_73 -> m18_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m18_73 -> m18_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m18_73 -> m18_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m18_73 -> m18_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionCollection", style=dashed];
m19_30 -> m19_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator", style=dashed];
m19_30 -> m19_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator", style=dashed];
m19_30 -> m19_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator", style=dashed];
m19_30 -> m19_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator", style=dashed];
m19_30 -> m19_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator", style=dashed];
m19_30 -> m19_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FastForwardEnumerator", style=dashed];
m24_0 -> m24_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.ITimeProvider", style=dashed];
m24_0 -> m24_3  [color=darkseagreen4, key=1, label="QuantConnect.TimeZoneOffsetProvider", style=dashed];
m24_6 -> m24_9  [color=darkseagreen4, key=1, label=underlyingCurrent, style=dashed];
m24_6 -> m24_10  [color=darkseagreen4, key=1, label=underlyingCurrent, style=dashed];
m24_8 -> m24_22  [color=darkseagreen4, key=1, label=localFrontier, style=dashed];
m24_8 -> m24_10  [color=darkseagreen4, key=1, label=localFrontier, style=dashed];
m24_42 -> m24_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m24_42 -> m24_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m24_42 -> m24_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m24_42 -> m24_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m24_42 -> m24_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m24_42 -> m24_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m24_42 -> m24_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.FrontierAwareEnumerator", style=dashed];
m25_8 -> m25_19  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_15 -> m25_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_17 -> m25_28  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>", style=dashed];
m25_36 -> m25_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m25_36 -> m25_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m25_36 -> m25_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m25_37 -> m25_19  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_38 -> m25_19  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_39 -> m25_28  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>", style=dashed];
m27_36 -> m27_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m27_36 -> m27_42  [color=darkseagreen4, key=1, label=object, style=dashed];
m27_11 -> m27_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_118 -> m27_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m27_139 -> m27_139  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m27_208 -> m27_208  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_208 -> m27_210  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_191 -> m27_191  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel>", style=dashed];
m27_122 -> m27_124  [color=darkseagreen4, key=1, label=message, style=dashed];
m27_122 -> m27_139  [color=darkseagreen4, key=1, label=message, style=dashed];
m27_122 -> m27_128  [color=darkseagreen4, key=1, label=message, style=dashed];
m27_122 -> m27_130  [color=darkseagreen4, key=1, label=message, style=dashed];
m27_126 -> m27_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_126 -> m27_130  [color=darkseagreen4, key=1, label=cached, style=dashed];
m27_126 -> m27_134  [color=darkseagreen4, key=1, label=cached, style=dashed];
m27_132 -> m27_135  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m27_77 -> m27_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_79 -> m27_118  [color=darkseagreen4, key=1, label=message, style=dashed];
m27_79 -> m27_84  [color=darkseagreen4, key=1, label=message, style=dashed];
m27_79 -> m27_90  [color=darkseagreen4, key=1, label=message, style=dashed];
m27_80 -> m27_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_80 -> m27_82  [color=darkseagreen4, key=1, label=cached, style=dashed];
m27_80 -> m27_99  [color=darkseagreen4, key=1, label=cached, style=dashed];
m27_96 -> m27_100  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m27_85 -> m27_87  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m27_86 -> m27_93  [color=darkseagreen4, key=1, label=orderObj, style=dashed];
m27_215 -> m27_217  [color=darkseagreen4, key=1, label=response, style=dashed];
m27_35 -> m27_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m27_35 -> m27_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m27_35 -> m27_59  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m27_35 -> m27_62  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m27_35 -> m27_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m27_35 -> m27_68  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m27_46 -> m27_54  [color=green, key=1, label=raw, style=dashed];
m27_46 -> m27_48  [color=darkseagreen4, key=1, label=raw, style=dashed];
m27_46 -> m27_51  [color=darkseagreen4, key=1, label=raw, style=dashed];
m27_46 -> m27_58  [color=darkseagreen4, key=1, label=raw, style=dashed];
m27_46 -> m27_61  [color=darkseagreen4, key=1, label=raw, style=dashed];
m27_46 -> m27_64  [color=darkseagreen4, key=1, label=raw, style=dashed];
m27_164 -> m27_166  [color=darkseagreen4, key=1, label=item, style=dashed];
m27_164 -> m27_167  [color=darkseagreen4, key=1, label=item, style=dashed];
m27_173 -> m27_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_184 -> m27_201  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m27_184 -> m27_209  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m27_197 -> m27_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_197 -> m27_208  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_197 -> m27_210  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_195 -> m27_207  [color=darkseagreen4, key=1, label=delay, style=dashed];
m27_231 -> m27_37  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_172  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_26  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_42  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_57  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_59  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_62  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_68  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_87  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_99  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_130  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_134  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_135  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_154  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_156  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_159  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_166  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_167  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_170  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_179  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_180  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_204  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_209  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_231 -> m27_217  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m27_234 -> m27_201  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m27_234 -> m27_209  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m27_232 -> m27_118  [color=darkseagreen4, key=1, label=message, style=dashed];
m27_233 -> m27_139  [color=darkseagreen4, key=1, label=message, style=dashed];
m27_236 -> m27_208  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_236 -> m27_210  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_235 -> m27_207  [color=darkseagreen4, key=1, label=delay, style=dashed];
m29_13 -> m29_15  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m29_16 -> m29_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m29_35 -> m29_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAXBrokerageModel", style=dashed];
m30_18 -> m30_22  [color=darkseagreen4, key=1, label=bool, style=dashed];
m30_18 -> m30_24  [color=darkseagreen4, key=1, label=bool, style=dashed];
m30_70 -> m30_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m30_70 -> m30_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m30_70 -> m30_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Brokerages.GDAXBrokerageModelTests", style=dashed];
m33_12 -> m33_14  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m33_12 -> m33_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m33_13 -> m33_15  [color=darkseagreen4, key=1, label=order, style=dashed];
m34_27 -> m34_30  [color=darkseagreen4, key=1, label=value, style=dashed];
m34_5 -> m34_13  [color=darkseagreen4, key=1, label=holding, style=dashed];
m34_5 -> m34_15  [color=darkseagreen4, key=1, label=holding, style=dashed];
m34_40 -> m34_28  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m35_15 -> m35_17  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m35_18 -> m35_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m35_18 -> m35_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m35_18 -> m35_29  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m35_18 -> m35_32  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m35_23 -> m35_23  [color=darkseagreen4, key=1, label=minimumOrderSize, style=dashed];
m35_43 -> m35_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAXBrokerageModel", style=dashed];
m35_43 -> m35_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAXBrokerageModel", style=dashed];
m37_23 -> m37_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m37_23 -> m37_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m40_12 -> m40_18  [color=darkseagreen4, key=1, label=tradingMode, style=dashed];
m40_4 -> m40_18  [color=darkseagreen4, key=1, label=useTws, style=dashed];
m40_7 -> m40_18  [color=darkseagreen4, key=1, label=twsDirectory, style=dashed];
m40_8 -> m40_18  [color=darkseagreen4, key=1, label=ibControllerDirectory, style=dashed];
m40_3 -> m40_11  [color=darkseagreen4, key=1, label=errors, style=dashed];
m40_2 -> m40_11  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m40_2 -> m40_13  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m40_10 -> m40_18  [color=darkseagreen4, key=1, label=userId, style=dashed];
m40_167 -> m40_170  [color=darkseagreen4, key=1, label=securityCache, style=dashed];
m40_167 -> m40_172  [color=darkseagreen4, key=1, label=securityCache, style=dashed];
m40_167 -> m40_169  [color=darkseagreen4, key=1, label=securityCache, style=dashed];
m40_167 -> m40_171  [color=darkseagreen4, key=1, label=securityCache, style=dashed];
m40_163 -> m40_169  [color=darkseagreen4, key=1, label=tick1, style=dashed];
m40_165 -> m40_171  [color=darkseagreen4, key=1, label=tick2, style=dashed];
m40_43 -> m40_57  [color=green, key=1, label=security, style=dashed];
m40_43 -> m40_45  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_46  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_47  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_48  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_49  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_50  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_51  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_52  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_53  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_54  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_55  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_56  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_58  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_59  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_60  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_61  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_62  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_63  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_43 -> m40_64  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_73  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_74  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_75  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_76  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_77  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_78  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_79  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_80  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_81  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_82  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_83  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_70 -> m40_84  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_11 -> m40_18  [color=darkseagreen4, key=1, label=password, style=dashed];
m40_19 -> m40_21  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_22  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_23  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_24  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_25  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_26  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_27  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_28  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_29  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_30  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_31  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_33  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_34  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_35  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_36  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_19 -> m40_37  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_138 -> m40_147  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_138 -> m40_140  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_138 -> m40_151  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_138 -> m40_141  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_138 -> m40_154  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_138 -> m40_142  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_138 -> m40_157  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_138 -> m40_143  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_138 -> m40_160  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_139 -> m40_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_140 -> m40_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_141 -> m40_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_142 -> m40_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_143 -> m40_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_112 -> m40_122  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_112 -> m40_114  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_112 -> m40_126  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_112 -> m40_115  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_112 -> m40_129  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_112 -> m40_116  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_112 -> m40_132  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_112 -> m40_117  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_112 -> m40_135  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_113 -> m40_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_114 -> m40_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_115 -> m40_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_116 -> m40_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_117 -> m40_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_90 -> m40_92  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_90 -> m40_93  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_90 -> m40_94  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_90 -> m40_95  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_90 -> m40_101  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_95 -> m40_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_184 -> m40_101  [color=darkseagreen4, key=1, label=security, style=dashed];
m40_185 -> m40_122  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_185 -> m40_126  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_185 -> m40_129  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_185 -> m40_132  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_185 -> m40_135  [color=darkseagreen4, key=1, label=option, style=dashed];
m40_186 -> m40_147  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_186 -> m40_151  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_186 -> m40_154  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_186 -> m40_157  [color=darkseagreen4, key=1, label=equity, style=dashed];
m40_186 -> m40_160  [color=darkseagreen4, key=1, label=equity, style=dashed];
m41_41 -> m41_43  [color=darkseagreen4, key=1, label=process, style=dashed];
m41_49 -> m41_51  [color=darkseagreen4, key=1, label=process, style=dashed];
m41_45 -> m41_47  [color=darkseagreen4, key=1, label=process, style=dashed];
m41_107 -> m41_109  [color=darkseagreen4, key=1, label=parent, style=dashed];
m41_114 -> m41_122  [color=darkseagreen4, key=1, label=int, style=dashed];
m41_116 -> m41_119  [color=darkseagreen4, key=1, label=processesByName, style=dashed];
m41_117 -> m41_125  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m41_120 -> m41_123  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m41_120 -> m41_125  [color=darkseagreen4, key=1, label=processIndexdName, style=dashed];
m41_118 -> m41_124  [color=darkseagreen4, key=1, label=index, style=dashed];
m41_124 -> m41_124  [color=darkseagreen4, key=1, label=index, style=dashed];
m41_92 -> m41_94  [color=darkseagreen4, key=1, label=processFound, style=dashed];
m41_89 -> m41_93  [color=darkseagreen4, key=1, label=process, style=dashed];
m41_5 -> m41_17  [color=green, key=1, label=string, style=dashed];
m41_12 -> m41_17  [color=green, key=1, label=useTwsSwitch, style=dashed];
m41_15 -> m41_17  [color=green, key=1, label=file, style=dashed];
m41_102 -> m41_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m41_103 -> m41_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_136 -> m41_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m43_39 -> m43_53  [color=darkseagreen4, key=1, label=list, style=dashed];
m43_39 -> m43_52  [color=darkseagreen4, key=1, label=list, style=dashed];
m43_39 -> m43_41  [color=darkseagreen4, key=1, label=list, style=dashed];
m43_39 -> m43_42  [color=darkseagreen4, key=1, label=list, style=dashed];
m43_39 -> m43_46  [color=darkseagreen4, key=1, label=list, style=dashed];
m43_39 -> m43_48  [color=darkseagreen4, key=1, label=list, style=dashed];
m43_50 -> m43_90  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m43_50 -> m43_89  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m43_50 -> m43_67  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m43_45 -> m43_92  [color=darkseagreen4, key=1, label=count, style=dashed];
m43_11 -> m43_28  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m43_11 -> m43_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>", style=dashed];
m43_11 -> m43_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>", style=dashed];
m43_11 -> m43_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m43_11 -> m43_84  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m43_11 -> m43_92  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m43_28 -> m43_62  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m43_28 -> m43_30  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m43_28 -> m43_31  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m43_28 -> m43_32  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m43_28 -> m43_34  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m43_28 -> m43_35  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m43_28 -> m43_36  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m43_28 -> m43_37  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m43_28 -> m43_66  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m43_38 -> m43_62  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_38 -> m43_47  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_48  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_54  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_57  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_59  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_63  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_66  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_71  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_83  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_85  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_87  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_88  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_38 -> m43_90  [color=darkseagreen4, key=1, label=packet, style=dashed];
m43_18 -> m43_62  [color=darkseagreen4, key=1, label=optionUnderlyingUpdates, style=dashed];
m43_27 -> m43_62  [color=darkseagreen4, key=1, label=sliceFuture, style=dashed];
m43_35 -> m43_62  [color=darkseagreen4, key=1, label=optionChains, style=dashed];
m43_35 -> m43_58  [color=darkseagreen4, key=1, label=optionChains, style=dashed];
m43_35 -> m43_61  [color=darkseagreen4, key=1, label=optionChains, style=dashed];
m43_53 -> m43_62  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m43_53 -> m43_55  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m43_53 -> m43_56  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m43_53 -> m43_58  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m43_53 -> m43_61  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m43_53 -> m43_64  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m43_53 -> m43_66  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m43_53 -> m43_67  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m43_53 -> m43_70  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m43_29 -> m43_58  [color=darkseagreen4, key=1, label=tradeBars, style=dashed];
m43_30 -> m43_58  [color=darkseagreen4, key=1, label=quoteBars, style=dashed];
m43_31 -> m43_58  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m43_36 -> m43_58  [color=darkseagreen4, key=1, label=futuresChains, style=dashed];
m43_36 -> m43_66  [color=darkseagreen4, key=1, label=futuresChains, style=dashed];
m43_85 -> m43_85  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m43_85 -> m43_87  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m43_87 -> m43_87  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m43_17 -> m43_87  [color=darkseagreen4, key=1, label=cash, style=dashed];
m43_17 -> m43_92  [color=darkseagreen4, key=1, label=cash, style=dashed];
m43_17 -> m43_19  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_17 -> m43_20  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_17 -> m43_21  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_17 -> m43_22  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_17 -> m43_23  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_17 -> m43_24  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_17 -> m43_25  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_17 -> m43_26  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_17 -> m43_27  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_17 -> m43_28  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_17 -> m43_29  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_17 -> m43_30  [color=darkseagreen4, key=1, label=row, style=dashed];
m43_19 -> m43_83  [color=darkseagreen4, key=1, label=cashSecurities, style=dashed];
m43_19 -> m43_21  [color=darkseagreen4, key=1, label=cashSecurities, style=dashed];
m43_26 -> m43_119  [color=darkseagreen4, key=1, label=slice, style=dashed];
m43_51 -> m43_53  [color=darkseagreen4, key=1, label=i, style=dashed];
m43_51 -> m43_81  [color=darkseagreen4, key=1, label=i, style=dashed];
m43_81 -> m43_81  [color=darkseagreen4, key=1, label=i, style=dashed];
m43_12 -> m43_46  [color=darkseagreen4, key=1, label=count, style=dashed];
m43_12 -> m43_92  [color=darkseagreen4, key=1, label=count, style=dashed];
m43_16 -> m43_55  [color=darkseagreen4, key=1, label=allDataForAlgorithm, style=dashed];
m43_15 -> m43_90  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m43_15 -> m43_92  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m43_46 -> m43_92  [color=darkseagreen4, key=1, label=count, style=dashed];
m43_46 -> m43_46  [color=darkseagreen4, key=1, label=count, style=dashed];
m43_14 -> m43_48  [color=darkseagreen4, key=1, label=custom, style=dashed];
m43_14 -> m43_92  [color=darkseagreen4, key=1, label=custom, style=dashed];
m43_13 -> m43_88  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_13 -> m43_92  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_233 -> m43_265  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m43_233 -> m43_266  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m43_233 -> m43_269  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m43_233 -> m43_272  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m43_233 -> m43_273  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m43_0 -> m43_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_15  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_18  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_19  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_20  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_22  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_23  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_27  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_28  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_29  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_0 -> m43_30  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactoryTests.FineFundamentalTestParameters", style=dashed];
m43_1 -> m43_12  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m43_1 -> m43_13  [color=darkseagreen4, key=1, label=stopwatch, style=dashed];
m43_2 -> m43_11  [color=darkseagreen4, key=1, label=rows, style=dashed];
m43_2 -> m43_13  [color=darkseagreen4, key=1, label=rows, style=dashed];
m43_2 -> m43_14  [color=darkseagreen4, key=1, label=rows, style=dashed];
m43_8 -> m43_10  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
m43_115 -> m43_200  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.FuturesChains", style=dashed];
m43_115 -> m43_209  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m43_115 -> m43_213  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m43_115 -> m43_227  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m43_200 -> m43_206  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_200 -> m43_209  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_200 -> m43_216  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_200 -> m43_227  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_209 -> m43_217  [color=darkseagreen4, key=1, label=contract, style=dashed];
m43_209 -> m43_225  [color=darkseagreen4, key=1, label=contract, style=dashed];
m43_201 -> m43_209  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_201 -> m43_206  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_201 -> m43_216  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_201 -> m43_227  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_203 -> m43_205  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m43_211 -> m43_217  [color=darkseagreen4, key=1, label=contract, style=dashed];
m43_211 -> m43_225  [color=darkseagreen4, key=1, label=contract, style=dashed];
m43_215 -> m43_217  [color=darkseagreen4, key=1, label=tick, style=dashed];
m43_223 -> m43_225  [color=darkseagreen4, key=1, label=quote, style=dashed];
m43_191 -> m43_239  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.QuoteBar", style=dashed];
m43_114 -> m43_165  [color=darkseagreen4, key=1, label="System.Lazy<QuantConnect.Data.Slice>", style=dashed];
m43_114 -> m43_166  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m43_114 -> m43_160  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m43_114 -> m43_141  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionChains", style=dashed];
m43_114 -> m43_148  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<QuantConnect.Symbol, QuantConnect.Data.BaseData>", style=dashed];
m43_114 -> m43_194  [color=darkseagreen4, key=1, label="System.Lazy<QuantConnect.Data.Slice>", style=dashed];
m43_114 -> m43_180  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m43_144 -> m43_164  [color=green, key=1, label=option, style=dashed];
m43_144 -> m43_148  [color=darkseagreen4, key=1, label=option, style=dashed];
m43_144 -> m43_165  [color=darkseagreen4, key=1, label=option, style=dashed];
m43_144 -> m43_194  [color=darkseagreen4, key=1, label=option, style=dashed];
m43_165 -> m43_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_160 -> m43_170  [color=darkseagreen4, key=1, label=contract, style=dashed];
m43_160 -> m43_178  [color=darkseagreen4, key=1, label=contract, style=dashed];
m43_162 -> m43_165  [color=darkseagreen4, key=1, label=contract, style=dashed];
m43_162 -> m43_194  [color=darkseagreen4, key=1, label=contract, style=dashed];
m43_162 -> m43_170  [color=darkseagreen4, key=1, label=contract, style=dashed];
m43_162 -> m43_178  [color=darkseagreen4, key=1, label=contract, style=dashed];
m43_176 -> m43_178  [color=darkseagreen4, key=1, label=quote, style=dashed];
m43_141 -> m43_160  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_141 -> m43_154  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_141 -> m43_157  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_141 -> m43_169  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_141 -> m43_180  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_142 -> m43_160  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_142 -> m43_154  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_142 -> m43_157  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_142 -> m43_169  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_142 -> m43_180  [color=darkseagreen4, key=1, label=chain, style=dashed];
m43_151 -> m43_153  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m43_151 -> m43_156  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m43_168 -> m43_170  [color=darkseagreen4, key=1, label=tick, style=dashed];
m43_234 -> m43_259  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.QuoteBar", style=dashed];
m43_190 -> m43_245  [color=green, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m43_190 -> m43_253  [color=green, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m43_190 -> m43_246  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m43_190 -> m43_249  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m43_190 -> m43_252  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m43_113 -> m43_127  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m43_113 -> m43_125  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m43_124 -> m43_127  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m43_278 -> m43_194  [color=darkseagreen4, key=1, label="System.Lazy<QuantConnect.Data.Slice>", style=dashed];
m43_279 -> m43_194  [color=darkseagreen4, key=1, label=option, style=dashed];
m43_280 -> m43_194  [color=darkseagreen4, key=1, label=contract, style=dashed];
m43_277 -> m43_119  [color=darkseagreen4, key=1, label=slice, style=dashed];
m44_1 -> m44_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m50_76 -> m50_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_61 -> m50_64  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m50_62 -> m50_64  [color=darkseagreen4, key=1, label=security, style=dashed];
m50_62 -> m50_66  [color=darkseagreen4, key=1, label=security, style=dashed];
m50_38 -> m50_43  [color=darkseagreen4, key=1, label=time, style=dashed];
m50_43 -> m50_43  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m50_45 -> m50_47  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m50_0 -> m50_13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m50_13 -> m50_13  [color=darkseagreen4, key=1, label=scheduledEvent, style=dashed];
m50_5 -> m50_7  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m50_5 -> m50_9  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m50_5 -> m50_11  [color=darkseagreen4, key=1, label=todayInAlgorithmTimeZone, style=dashed];
m50_7 -> m50_7  [color=darkseagreen4, key=1, label=date, style=dashed];
m50_8 -> m50_29  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m50_23 -> m50_72  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m50_23 -> m50_73  [color=darkseagreen4, key=1, label="QuantConnect.Scheduling.ScheduledEvent", style=dashed];
m50_89 -> m50_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m50_89 -> m50_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler", style=dashed];
m52_8 -> m52_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m52_13 -> m52_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m52_13 -> m52_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m53_8 -> m53_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m53_13 -> m53_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
m53_13 -> m53_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
m54_11 -> m54_13  [color=darkseagreen4, key=1, label=order, style=dashed];
m54_16 -> m54_7  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OptionExerciseOrder", style=dashed];
m54_16 -> m54_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OptionExerciseOrder", style=dashed];
m55_68 -> m55_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m55_68 -> m55_88  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m55_37 -> m55_40  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m55_37 -> m55_42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m55_31 -> m55_33  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m55_100 -> m55_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m55_100 -> m55_47  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m58_39 -> m58_41  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m58_40 -> m58_54  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m58_41 -> m58_43  [color=darkseagreen4, key=1, label=type, style=dashed];
m58_41 -> m58_48  [color=darkseagreen4, key=1, label=type, style=dashed];
m58_3 -> m58_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m58_3 -> m58_24  [color=darkseagreen4, key=1, label=object, style=dashed];
m58_3 -> m58_25  [color=darkseagreen4, key=1, label=object, style=dashed];
m58_9 -> m58_11  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m58_9 -> m58_23  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m58_9 -> m58_24  [color=darkseagreen4, key=1, label=fieldInfo, style=dashed];
m58_10 -> m58_18  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m58_10 -> m58_25  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m58_15 -> m58_17  [color=darkseagreen4, key=1, label=parameterName, style=dashed];
m58_22 -> m58_24  [color=darkseagreen4, key=1, label=value, style=dashed];
m58_22 -> m58_25  [color=darkseagreen4, key=1, label=value, style=dashed];
m59_200 -> m59_205  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m59_200 -> m59_207  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m59_200 -> m59_203  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m59_191 -> m59_195  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_227 -> m59_229  [color=darkseagreen4, key=1, label=security, style=dashed];
m59_227 -> m59_230  [color=darkseagreen4, key=1, label=security, style=dashed];
m59_228 -> m59_230  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m59_296 -> m59_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m59_296 -> m59_319  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m59_320 -> m59_322  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m59_452 -> m59_454  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m59_452 -> m59_462  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m59_452 -> m59_463  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m59_452 -> m59_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m59_454 -> m59_456  [color=darkseagreen4, key=1, label=security, style=dashed];
m59_454 -> m59_457  [color=darkseagreen4, key=1, label=security, style=dashed];
m59_454 -> m59_458  [color=darkseagreen4, key=1, label=security, style=dashed];
m59_459 -> m59_477  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_466 -> m59_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_461 -> m59_467  [color=darkseagreen4, key=1, label=ret, style=dashed];
m59_90 -> m59_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_92 -> m59_92  [color=darkseagreen4, key=1, label=value, style=dashed];
m59_273 -> m59_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_88 -> m59_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m59_252 -> m59_252  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m59_482 -> m59_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_239 -> m59_241  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m59_247 -> m59_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_246 -> m59_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_218 -> m59_504  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_508 -> m59_511  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_103 -> m59_515  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_67 -> m59_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_70 -> m59_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m59_71 -> m59_73  [color=darkseagreen4, key=1, label=equity, style=dashed];
m59_68 -> m59_70  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m59_434 -> m59_440  [color=darkseagreen4, key=1, label=option, style=dashed];
m59_434 -> m59_441  [color=darkseagreen4, key=1, label=option, style=dashed];
m59_435 -> m59_437  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m59_336 -> m59_340  [color=darkseagreen4, key=1, label=bool, style=dashed];
m59_336 -> m59_341  [color=darkseagreen4, key=1, label=bool, style=dashed];
m59_95 -> m59_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m59_381 -> m59_538  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m59_381 -> m59_539  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m59_381 -> m59_541  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_543 -> m59_545  [color=darkseagreen4, key=1, label=security, style=dashed];
m59_264 -> m59_269  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m59_126 -> m59_138  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m59_129 -> m59_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_129 -> m59_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_129 -> m59_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_129 -> m59_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m59_391 -> m59_393  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m59_391 -> m59_399  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m59_388 -> m59_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m59_388 -> m59_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m59_387 -> m59_395  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m59_387 -> m59_398  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m59_429 -> m59_431  [color=darkseagreen4, key=1, label=future, style=dashed];
m59_417 -> m59_419  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m59_417 -> m59_425  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m59_414 -> m59_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m59_414 -> m59_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m59_413 -> m59_421  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m59_413 -> m59_424  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m59_356 -> m59_358  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_356 -> m59_360  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_356 -> m59_362  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m59_356 -> m59_359  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m59_356 -> m59_361  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_356 -> m59_363  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m59_356 -> m59_365  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_367 -> m59_369  [color=darkseagreen4, key=1, label=security, style=dashed];
m59_116 -> m59_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m59_117 -> m59_120  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m59_286 -> m59_305  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m59_286 -> m59_302  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m59_519 -> m59_522  [color=darkseagreen4, key=1, label=message, style=dashed];
m59_568 -> m59_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_172  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_196  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_201  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_205  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_207  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_225  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_227  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_241  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_266  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_268  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_269  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_274  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_275  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_282  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_300  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_304  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_305  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_308  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_309  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_311  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_317  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_321  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_337  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_351  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_354  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_358  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_360  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_362  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_368  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_371  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_379  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_383  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_393  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_395  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_398  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_409  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_419  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_421  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_424  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_430  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_437  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_440  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_444  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_447  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_450  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_454  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_455  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_458  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_462  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_463  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_465  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_488  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_491  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_498  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_502  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_504  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_509  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_511  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_513  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_515  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_520  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_522  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_526  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_538  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_544  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_548  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_568 -> m59_552  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m59_569 -> m59_120  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m59_570 -> m59_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m59_571 -> m59_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m60_5 -> m60_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m60_5 -> m60_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m60_5 -> m60_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m60_6 -> m60_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_6 -> m60_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_23 -> m60_26  [color=darkseagreen4, key=1, label=config, style=dashed];
m60_24 -> m60_26  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m60_30 -> m60_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.OptionChainUniverseSubscriptionEnumeratorFactory", style=dashed];
m60_31 -> m60_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m60_31 -> m60_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m60_32 -> m60_19  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IFileProvider", style=dashed];
m61_65 -> m61_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m61_68 -> m61_72  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m61_61 -> m61_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m61_100 -> m61_102  [color=darkseagreen4, key=1, label=bool, style=dashed];
m61_101 -> m61_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m61_101 -> m61_106  [color=darkseagreen4, key=1, label=updates, style=dashed];
m61_104 -> m61_104  [color=darkseagreen4, key=1, label=chart, style=dashed];
m61_105 -> m61_105  [color=darkseagreen4, key=1, label=series, style=dashed];
m61_9 -> m61_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m61_9 -> m61_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m61_9 -> m61_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m61_9 -> m61_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m61_9 -> m61_50  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m61_41 -> m61_47  [color=darkseagreen4, key=1, label=thisChart, style=dashed];
m61_48 -> m61_50  [color=darkseagreen4, key=1, label=thisSeries, style=dashed];
m61_74 -> m61_81  [color=darkseagreen4, key=1, label=bool, style=dashed];
m61_74 -> m61_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m61_77 -> m61_81  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m61_77 -> m61_82  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m61_0 -> m61_2  [color=darkseagreen4, key=1, label="QuantConnect.Chart", style=dashed];
m61_115 -> m61_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_115 -> m61_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m61_116 -> m61_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m61_117 -> m61_72  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m61_118 -> m61_81  [color=darkseagreen4, key=1, label=bool, style=dashed];
m61_119 -> m61_81  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m61_119 -> m61_82  [color=darkseagreen4, key=1, label=ilocal, style=dashed];
m61_120 -> m61_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m64_28 -> m64_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>", style=dashed];
m64_28 -> m64_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>", style=dashed];
m64_28 -> m64_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>", style=dashed];
m64_28 -> m64_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RateLimitEnumerator<T>", style=dashed];
m65_2 -> m65_7  [color=darkseagreen4, key=1, label=timeProvider, style=dashed];
m65_3 -> m65_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_3 -> m65_10  [color=darkseagreen4, key=1, label=data, style=dashed];
m66_27 -> m66_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m66_27 -> m66_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m66_27 -> m66_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m66_27 -> m66_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m66_27 -> m66_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.RefreshEnumerator<T>", style=dashed];
m68_43 -> m68_45  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m68_33 -> m68_37  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m68_34 -> m68_37  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m68_35 -> m68_37  [color=green, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m68_11 -> m68_37  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m68_42 -> m68_56  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m68_54 -> m68_56  [color=darkseagreen4, key=1, label=handler, style=dashed];
m68_12 -> m68_37  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m68_13 -> m68_37  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m68_14 -> m68_37  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m68_27 -> m68_37  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m68_32 -> m68_37  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m68_28 -> m68_37  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m68_29 -> m68_37  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m68_30 -> m68_37  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m68_31 -> m68_37  [color=darkseagreen4, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m68_15 -> m68_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m68_37 -> m68_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_23 -> m68_37  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m68_24 -> m68_37  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m68_25 -> m68_37  [color=green, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m68_26 -> m68_37  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m68_16 -> m68_37  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m68_17 -> m68_37  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m68_18 -> m68_37  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m68_19 -> m68_37  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m68_20 -> m68_37  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m68_21 -> m68_37  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m68_22 -> m68_37  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m68_59 -> m68_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m68_59 -> m68_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m68_59 -> m68_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m68_59 -> m68_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m68_59 -> m68_37  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m68_59 -> m68_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m68_59 -> m68_45  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m68_59 -> m68_46  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m68_59 -> m68_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m69_64 -> m69_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_0 -> m69_3  [color=green, key=1, label="QuantConnect.Orders.OrderProperties", style=dashed];
m69_0 -> m69_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityTransactionManager", style=dashed];
m69_50 -> m69_52  [color=darkseagreen4, key=1, label=success, style=dashed];
m69_51 -> m69_53  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.SecurityHolding", style=dashed];
m69_145 -> m69_198  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m69_176 -> m69_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_182 -> m69_187  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m69_182 -> m69_190  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m69_178 -> m69_185  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m69_200 -> m69_219  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m69_200 -> m69_205  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m69_204 -> m69_219  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m69_204 -> m69_211  [color=green, key=1, label=symbolIsFound, style=dashed];
m69_211 -> m69_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_201 -> m69_207  [color=darkseagreen4, key=1, label=inverseFactor, style=dashed];
m69_39 -> m69_43  [color=darkseagreen4, key=1, label=int, style=dashed];
m69_41 -> m69_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m69_41 -> m69_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m69_45 -> m69_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m69_217 -> m69_219  [color=darkseagreen4, key=1, label=rootSymbol, style=dashed];
m69_216 -> m69_219  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m69_222 -> m69_222  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m69_61 -> m69_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m69_67 -> m69_67  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m69_198 -> m69_198  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m69_224 -> m69_228  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m69_225 -> m69_228  [color=darkseagreen4, key=1, label=clone, style=dashed];
m69_227 -> m69_228  [color=darkseagreen4, key=1, label=clone, style=dashed];
m69_81 -> m69_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_81 -> m69_86  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_81 -> m69_84  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m69_111 -> m69_113  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m69_111 -> m69_116  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m69_117 -> m69_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_119 -> m69_121  [color=darkseagreen4, key=1, label=marginCallOrder, style=dashed];
m69_104 -> m69_124  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m69_122 -> m69_124  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m69_115 -> m69_121  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m69_115 -> m69_123  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m69_114 -> m69_124  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m69_239 -> m69_241  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UnsettledCashAmount", style=dashed];
m69_146 -> m69_157  [color=darkseagreen4, key=1, label=security, style=dashed];
m69_146 -> m69_171  [color=darkseagreen4, key=1, label=security, style=dashed];
m69_152 -> m69_157  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m69_153 -> m69_157  [color=darkseagreen4, key=1, label=avgPrice, style=dashed];
m69_158 -> m69_171  [color=darkseagreen4, key=1, label=next, style=dashed];
m69_90 -> m69_92  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m69_140 -> m69_142  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m69_37 -> m69_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.SecurityHolding>", style=dashed];
m69_56 -> m69_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_98 -> m69_100  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m69_243 -> m69_246  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m69_245 -> m69_247  [color=darkseagreen4, key=1, label=item, style=dashed];
m69_245 -> m69_248  [color=darkseagreen4, key=1, label=item, style=dashed];
m69_245 -> m69_249  [color=darkseagreen4, key=1, label=item, style=dashed];
m69_233 -> m69_235  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m69_253 -> m69_3  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_33  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_37  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_64  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_83  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_86  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_92  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_96  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_100  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_117  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_137  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_141  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_142  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_156  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_185  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_211  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_226  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_228  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_235  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_240  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_241  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_244  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_245  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_247  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_248  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_253 -> m69_249  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m69_255 -> m69_219  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m69_254 -> m69_198  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m70_9 -> m70_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m70_9 -> m70_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m70_2 -> m70_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_33 -> m70_35  [color=darkseagreen4, key=1, label=order, style=dashed];
m70_18 -> m70_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m70_18 -> m70_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m70_38 -> m70_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m70_38 -> m70_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m70_38 -> m70_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m70_38 -> m70_13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m70_38 -> m70_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m70_38 -> m70_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m70_38 -> m70_34  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m72_19 -> m72_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m73_43 -> m73_45  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m73_42 -> m73_56  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m73_54 -> m73_56  [color=darkseagreen4, key=1, label=handler, style=dashed];
m73_13 -> m73_13  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m73_28 -> m73_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m73_30 -> m73_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m73_15 -> m73_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m73_59 -> m73_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_37  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_45  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_46  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_51  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m73_59 -> m73_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.UniverseManager", style=dashed];
m75_79 -> m75_81  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m75_79 -> m75_82  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m75_80 -> m75_82  [color=darkseagreen4, key=1, label=day, style=dashed];
m75_80 -> m75_83  [color=darkseagreen4, key=1, label=day, style=dashed];
m75_33 -> m75_33  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m75_1 -> m75_135  [color=darkseagreen4, key=1, label="QuantConnect.Time.DateTimeWithZone", style=dashed];
m75_2 -> m75_135  [color=darkseagreen4, key=1, label="QuantConnect.Time.DateTimeWithZone", style=dashed];
m75_28 -> m75_28  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m75_5 -> m75_9  [color=darkseagreen4, key=1, label=double, style=dashed];
m75_42 -> m75_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m75_42 -> m75_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m75_42 -> m75_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m75_42 -> m75_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m75_42 -> m75_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m75_68 -> m75_70  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m75_68 -> m75_71  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>", style=dashed];
m75_69 -> m75_71  [color=darkseagreen4, key=1, label=day, style=dashed];
m75_69 -> m75_72  [color=darkseagreen4, key=1, label=day, style=dashed];
m75_110 -> m75_112  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>", style=dashed];
m75_111 -> m75_115  [color=darkseagreen4, key=1, label=count, style=dashed];
m75_111 -> m75_118  [color=darkseagreen4, key=1, label=count, style=dashed];
m75_115 -> m75_115  [color=darkseagreen4, key=1, label=count, style=dashed];
m75_115 -> m75_118  [color=darkseagreen4, key=1, label=count, style=dashed];
m75_61 -> m75_63  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m75_62 -> m75_64  [color=darkseagreen4, key=1, label=day, style=dashed];
m75_15 -> m75_19  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m75_75 -> m75_103  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m75_121 -> m75_126  [color=darkseagreen4, key=1, label=int, style=dashed];
m75_121 -> m75_129  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m75_124 -> m75_131  [color=darkseagreen4, key=1, label=current, style=dashed];
m75_128 -> m75_131  [color=darkseagreen4, key=1, label=current, style=dashed];
m75_125 -> m75_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m75_127 -> m75_129  [color=darkseagreen4, key=1, label=previous, style=dashed];
m75_130 -> m75_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m75_87 -> m75_93  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m75_87 -> m75_96  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m75_88 -> m75_90  [color=darkseagreen4, key=1, label=currentExchangeTime, style=dashed];
m75_88 -> m75_96  [color=darkseagreen4, key=1, label=currentExchangeTime, style=dashed];
m75_89 -> m75_93  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m75_91 -> m75_97  [color=darkseagreen4, key=1, label=currentInTimeZone, style=dashed];
m76_35 -> m76_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m76_35 -> m76_39  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m76_12 -> m76_12  [color=darkseagreen4, key=1, label=order, style=dashed];
m76_76 -> m76_78  [color=darkseagreen4, key=1, label=order, style=dashed];
m76_76 -> m76_84  [color=darkseagreen4, key=1, label=order, style=dashed];
m76_76 -> m76_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m76_76 -> m76_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m76_76 -> m76_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m76_76 -> m76_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m76_79 -> m76_82  [color=darkseagreen4, key=1, label=sufficientBuyingPower, style=dashed];
m76_96 -> m76_103  [color=darkseagreen4, key=1, label=fill, style=dashed];
m76_100 -> m76_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m76_100 -> m76_104  [color=darkseagreen4, key=1, label=order, style=dashed];
m76_100 -> m76_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m76_105 -> m76_105  [color=darkseagreen4, key=1, label=order, style=dashed];
m76_80 -> m76_102  [color=darkseagreen4, key=1, label=fill, style=dashed];
m76_80 -> m76_103  [color=darkseagreen4, key=1, label=fill, style=dashed];
m76_49 -> m76_52  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m76_49 -> m76_53  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m76_59 -> m76_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m76_59 -> m76_63  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m76_59 -> m76_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m76_16 -> m76_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m76_16 -> m76_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m76_16 -> m76_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m76_124 -> m76_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_16  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_41  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_62  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_78  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_99  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_101  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_103  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m76_124 -> m76_105  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m79_50 -> m79_26  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m79_50 -> m79_35  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
}
