digraph  {
n619 [label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", span=""];
n0 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="57-57", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)"];
n1 [label="Security msft", span="59-59", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)"];
n2 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="60-60", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)"];
n3 [label="Update(msft, 25)", span="62-62", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)"];
n7 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", span="1162-1162", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)"];
n4 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="63-63", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)"];
n8 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", span="1186-1186", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)"];
n5 [label="Assert.AreEqual(2000, actual)", span="64-64", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)"];
n9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="927-927", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)"];
n6 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="57-57", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)"];
n10 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual"];
n11 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", span="68-68", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)"];
n12 [label="Security msft", span="70-70", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)"];
n13 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="71-71", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)"];
n14 [label="Update(msft, 25)", span="73-73", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)"];
n15 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="74-74", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)"];
n16 [label="Assert.AreEqual(1999, actual)", span="76-76", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)"];
n17 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", span="68-68", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)"];
n18 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", span="80-80", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)"];
n19 [label="Security msft", span="82-82", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)"];
n20 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="83-83", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)"];
n21 [label="Update(msft, 25)", span="85-85", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)"];
n22 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="86-86", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)"];
n23 [label="Assert.AreEqual(1600, actual)", span="88-88", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)"];
n24 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", span="80-80", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)"];
n25 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", span="92-92", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)"];
n26 [label="Security msft", span="94-94", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)"];
n27 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="95-95", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)"];
n28 [label="Update(msft, 25)", span="97-97", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)"];
n29 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="98-98", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)"];
n30 [label="Assert.AreEqual(-2000, actual)", span="99-99", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)"];
n31 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", span="92-92", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)"];
n32 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="103-103", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)"];
n33 [label="Security msft", span="105-105", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)"];
n34 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="106-106", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)"];
n35 [label="Update(msft, 25)", span="108-108", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)"];
n36 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="109-109", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)"];
n37 [label="Assert.AreEqual(-1999, actual)", span="110-110", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)"];
n38 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="103-103", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)"];
n39 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="114-114", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)"];
n40 [label="Security msft", span="116-116", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)"];
n41 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="117-117", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)"];
n42 [label="Update(msft, 25)", span="119-119", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)"];
n43 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="120-120", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)"];
n44 [label="Assert.AreEqual(-1600, actual)", span="121-121", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)"];
n45 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="114-114", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)"];
n46 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="125-125", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)"];
n47 [label="Security msft", span="127-127", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)"];
n48 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="128-128", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)"];
n49 [label="Update(msft, 25)", span="130-130", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)"];
n50 [label="algo.Portfolio.SetCash(50000)", span="132-132", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)"];
n51 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="133-133", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)"];
n52 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="135-135", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)"];
n55 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)"];
n56 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)"];
n53 [label="Assert.AreEqual(1000, actual)", span="136-136", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)"];
n54 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="125-125", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)"];
n57 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="140-140", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)"];
n58 [label="Security msft", span="142-142", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)"];
n59 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="143-143", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)"];
n60 [label="Update(msft, 25)", span="145-145", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)"];
n61 [label="algo.Portfolio.SetCash(50000)", span="147-147", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)"];
n62 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="148-148", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)"];
n63 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="150-150", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)"];
n64 [label="Assert.AreEqual(999, actual)", span="151-151", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)"];
n65 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="140-140", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)"];
n66 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="155-155", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)"];
n67 [label="Security msft", span="157-157", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)"];
n68 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="158-158", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)"];
n69 [label="Update(msft, 25)", span="160-160", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)"];
n70 [label="algo.Portfolio.SetCash(50000)", span="162-162", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)"];
n71 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="163-163", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)"];
n72 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="165-165", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)"];
n73 [label="Assert.AreEqual(600, actual)", span="166-166", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)"];
n74 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="155-155", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)"];
n75 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="170-170", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)"];
n76 [label="Security msft", span="172-172", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)"];
n77 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="173-173", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)"];
n78 [label="Update(msft, 25)", span="175-175", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)"];
n79 [label="algo.Portfolio.SetCash(25000)", span="177-177", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)"];
n80 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="178-178", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)"];
n81 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="180-180", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)"];
n82 [label="Assert.AreEqual(-1000, actual)", span="181-181", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)"];
n83 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="170-170", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)"];
n84 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="185-185", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)"];
n85 [label="Security msft", span="187-187", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)"];
n86 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="188-188", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)"];
n87 [label="Update(msft, 25)", span="190-190", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)"];
n88 [label="algo.Portfolio.SetCash(25000)", span="192-192", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)"];
n89 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="193-193", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)"];
n90 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="195-195", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)"];
n91 [label="Assert.AreEqual(-999, actual)", span="196-196", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)"];
n92 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="185-185", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)"];
n93 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="200-200", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)"];
n94 [label="Security msft", span="202-202", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)"];
n95 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="203-203", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)"];
n96 [label="Update(msft, 25)", span="205-205", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)"];
n97 [label="algo.Portfolio.SetCash(25000)", span="207-207", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)"];
n98 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="208-208", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)"];
n99 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="210-210", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)"];
n100 [label="Assert.AreEqual(-600, actual)", span="211-211", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)"];
n101 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="200-200", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)"];
n102 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="215-215", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)"];
n103 [label="Security msft", span="217-217", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)"];
n104 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="218-218", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)"];
n105 [label="Update(msft, 25)", span="220-220", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)"];
n106 [label="algo.Portfolio.SetCash(50000)", span="222-222", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)"];
n107 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="223-223", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)"];
n108 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="225-225", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)"];
n109 [label="Assert.AreEqual(-2000, actual)", span="226-226", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)"];
n110 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="215-215", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)"];
n111 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="230-230", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)"];
n112 [label="Security msft", span="232-232", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)"];
n113 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="233-233", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)"];
n114 [label="Update(msft, 25)", span="235-235", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)"];
n115 [label="algo.Portfolio.SetCash(50000)", span="237-237", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)"];
n116 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="238-238", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)"];
n117 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="240-240", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)"];
n118 [label="Assert.AreEqual(-2000, actual)", span="241-241", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)"];
n119 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="230-230", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)"];
n120 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="245-245", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)"];
n121 [label="Security msft", span="247-247", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)"];
n122 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="248-248", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)"];
n123 [label="Update(msft, 25)", span="250-250", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)"];
n124 [label="algo.Portfolio.SetCash(50000)", span="252-252", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)"];
n125 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="253-253", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)"];
n126 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="255-255", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)"];
n127 [label="Assert.AreEqual(-2000, actual)", span="256-256", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)"];
n128 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="245-245", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)"];
n129 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="260-260", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)"];
n130 [label="Security msft", span="262-262", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)"];
n131 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="263-263", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)"];
n132 [label="Update(msft, 25)", span="265-265", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)"];
n133 [label="algo.Portfolio.SetCash(50000)", span="267-267", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)"];
n134 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="268-268", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)"];
n135 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="271-271", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)"];
n136 [label="Assert.AreEqual(-4000, actual)", span="272-272", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)"];
n137 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="260-260", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)"];
n138 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="276-276", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)"];
n139 [label="Security msft", span="278-278", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)"];
n140 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="279-279", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)"];
n141 [label="Update(msft, 25)", span="281-281", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)"];
n142 [label="algo.Portfolio.SetCash(50000)", span="283-283", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)"];
n143 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="284-284", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)"];
n144 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="287-287", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)"];
n145 [label="Assert.AreEqual(-3999, actual)", span="288-288", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)"];
n146 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="276-276", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)"];
n147 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="292-292", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)"];
n148 [label="Security msft", span="294-294", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)"];
n149 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="295-295", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)"];
n150 [label="Update(msft, 25)", span="297-297", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)"];
n151 [label="algo.Portfolio.SetCash(50000)", span="299-299", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)"];
n152 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="300-300", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)"];
n153 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="303-303", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)"];
n154 [label="Assert.AreEqual(-3600, actual)", span="304-304", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)"];
n155 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="292-292", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)"];
n156 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="308-308", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)"];
n157 [label="Security msft", span="310-310", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)"];
n158 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="311-311", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)"];
n159 [label="Update(msft, 25)", span="313-313", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)"];
n160 [label="algo.Portfolio.SetCash(50000)", span="315-315", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)"];
n161 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="316-316", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)"];
n162 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="319-319", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)"];
n163 [label="Assert.AreEqual(-6000, actual)", span="320-320", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)"];
n164 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="308-308", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)"];
n165 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="324-324", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)"];
n166 [label="Security msft", span="326-326", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)"];
n167 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="327-327", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)"];
n168 [label="Update(msft, 25)", span="329-329", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)"];
n169 [label="algo.Portfolio.SetCash(50000)", span="331-331", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)"];
n170 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="332-332", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)"];
n171 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="335-335", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)"];
n172 [label="Assert.AreEqual(-5999, actual)", span="336-336", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)"];
n173 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="324-324", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)"];
n174 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="340-340", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)"];
n175 [label="Security msft", span="342-342", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)"];
n176 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="343-343", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)"];
n177 [label="Update(msft, 25)", span="345-345", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)"];
n178 [label="algo.Portfolio.SetCash(50000)", span="347-347", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)"];
n179 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="348-348", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)"];
n180 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="351-351", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)"];
n181 [label="Assert.AreEqual(-5600, actual)", span="352-352", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)"];
n182 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="340-340", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)"];
n183 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="356-356", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)"];
n184 [label="Security msft", span="358-358", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)"];
n185 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="359-359", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)"];
n186 [label="Update(msft, 25)", span="361-361", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)"];
n187 [label="algo.Portfolio.SetCash(150000)", span="363-363", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)"];
n188 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="364-364", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)"];
n189 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="366-366", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)"];
n190 [label="Assert.AreEqual(2000, actual)", span="367-367", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)"];
n191 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="356-356", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)"];
n192 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="371-371", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)"];
n193 [label="Security msft", span="373-373", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)"];
n194 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="374-374", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)"];
n195 [label="Update(msft, 25)", span="376-376", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)"];
n196 [label="algo.Portfolio.SetCash(150000)", span="378-378", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)"];
n197 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="379-379", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)"];
n198 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="381-381", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)"];
n199 [label="Assert.AreEqual(2000, actual)", span="382-382", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)"];
n200 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="371-371", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)"];
n201 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="386-386", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)"];
n202 [label="Security msft", span="388-388", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)"];
n203 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="389-389", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)"];
n204 [label="Update(msft, 25)", span="391-391", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)"];
n205 [label="algo.Portfolio.SetCash(150000)", span="393-393", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)"];
n206 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="394-394", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)"];
n207 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="396-396", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)"];
n208 [label="Assert.AreEqual(2000, actual)", span="397-397", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)"];
n209 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="386-386", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)"];
n210 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="401-401", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)"];
n211 [label="Security msft", span="403-403", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)"];
n212 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="404-404", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)"];
n213 [label="Update(msft, 25)", span="406-406", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)"];
n214 [label="algo.Portfolio.SetCash(150000)", span="408-408", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)"];
n215 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="409-409", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)"];
n216 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="417-417", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)"];
n217 [label="Assert.AreEqual(-1000, actual)", span="418-418", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)"];
n218 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="401-401", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)"];
n219 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="422-422", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)"];
n220 [label="Security msft", span="424-424", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)"];
n221 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="425-425", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)"];
n222 [label="Update(msft, 25)", span="427-427", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)"];
n223 [label="algo.Portfolio.SetCash(150000)", span="429-429", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)"];
n224 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="430-430", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)"];
n225 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="438-438", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)"];
n226 [label="Assert.AreEqual(-999, actual)", span="439-439", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)"];
n227 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="422-422", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)"];
n228 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="443-443", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)"];
n229 [label="Security msft", span="445-445", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)"];
n230 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="446-446", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)"];
n231 [label="Update(msft, 25)", span="448-448", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)"];
n232 [label="algo.Portfolio.SetCash(150000)", span="450-450", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)"];
n233 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="451-451", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)"];
n234 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="459-459", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)"];
n235 [label="Assert.AreEqual(-600, actual)", span="460-460", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)"];
n236 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="443-443", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)"];
n237 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="464-464", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)"];
n238 [label="Security msft", span="466-466", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)"];
n239 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="467-467", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)"];
n240 [label="Update(msft, 25)", span="469-469", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)"];
n241 [label="algo.Portfolio.SetCash(150000)", span="471-471", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)"];
n242 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="472-472", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)"];
n243 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="474-474", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)"];
n244 [label="Assert.AreEqual(4000, actual)", span="475-475", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)"];
n245 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="464-464", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)"];
n246 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="479-479", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)"];
n247 [label="Security msft", span="481-481", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)"];
n248 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="482-482", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)"];
n249 [label="Update(msft, 25)", span="484-484", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)"];
n250 [label="algo.Portfolio.SetCash(150000)", span="486-486", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)"];
n251 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="487-487", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)"];
n252 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="489-489", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)"];
n253 [label="Assert.AreEqual(3999, actual)", span="490-490", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)"];
n254 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="479-479", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)"];
n255 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="494-494", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)"];
n256 [label="Security msft", span="496-496", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)"];
n257 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="497-497", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)"];
n258 [label="Update(msft, 25)", span="499-499", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)"];
n259 [label="algo.Portfolio.SetCash(150000)", span="501-501", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)"];
n260 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="502-502", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)"];
n261 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="504-504", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)"];
n262 [label="Assert.AreEqual(3600, actual)", span="505-505", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)"];
n263 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="494-494", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)"];
n264 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="509-509", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)"];
n265 [label="Security msft", span="511-511", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)"];
n266 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="512-512", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)"];
n267 [label="Update(msft, 25)", span="514-514", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)"];
n273 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1174-1174", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)"];
n268 [label="algo.Portfolio.SetCash(50000)", span="516-516", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)"];
n269 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="517-517", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)"];
n270 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="520-520", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)"];
n271 [label="Assert.AreEqual(-4000, actual)", span="521-521", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)"];
n272 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="509-509", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)"];
n274 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="525-525", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n275 [label="Security msft", span="527-527", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n276 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="528-528", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n277 [label="Update(msft, 25)", span="530-530", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n278 [label="algo.Portfolio.SetCash(50000)", span="532-532", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n279 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="533-533", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n280 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="536-536", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n281 [label="Assert.AreEqual(-3999, actual)", span="537-537", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n282 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="525-525", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n283 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="541-541", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n284 [label="Security msft", span="543-543", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n285 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="544-544", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n286 [label="Update(msft, 25)", span="546-546", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n287 [label="algo.Portfolio.SetCash(50000)", span="548-548", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n288 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="549-549", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n289 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="552-552", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n290 [label="Assert.AreEqual(-3600, actual)", span="553-553", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n291 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="541-541", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n292 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="557-557", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)"];
n293 [label="Security msft", span="559-559", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)"];
n294 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="560-560", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)"];
n295 [label="Update(msft, 25)", span="562-562", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)"];
n296 [label="algo.Portfolio.SetCash(50000)", span="564-564", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)"];
n297 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="565-565", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)"];
n298 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="568-568", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)"];
n299 [label="Assert.AreEqual(-6000, actual)", span="569-569", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)"];
n300 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="557-557", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)"];
n301 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="573-573", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n302 [label="Security msft", span="575-575", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n303 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="576-576", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n304 [label="Update(msft, 25)", span="578-578", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n305 [label="algo.Portfolio.SetCash(50000)", span="580-580", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n306 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="581-581", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n307 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="584-584", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n308 [label="Assert.AreEqual(-5999, actual)", span="585-585", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n309 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="573-573", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n310 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="589-589", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n311 [label="Security msft", span="591-591", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n312 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="592-592", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n313 [label="Update(msft, 25)", span="594-594", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n314 [label="algo.Portfolio.SetCash(50000)", span="596-596", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n315 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="597-597", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n316 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="600-600", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n317 [label="Assert.AreEqual(-5600, actual)", span="601-601", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n318 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="589-589", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n319 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="605-605", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)"];
n320 [label="Security msft", span="607-607", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)"];
n321 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="608-608", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)"];
n322 [label="Update(msft, 25)", span="610-610", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)"];
n323 [label="algo.Portfolio.SetCash(50000)", span="612-612", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)"];
n324 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="613-613", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)"];
n325 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="616-616", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)"];
n326 [label="Assert.AreEqual(-10000, actual)", span="617-617", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)"];
n327 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="605-605", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)"];
n328 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="621-621", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n329 [label="Security msft", span="623-623", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n330 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="624-624", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n331 [label="Update(msft, 25)", span="626-626", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n332 [label="algo.Portfolio.SetCash(50000)", span="628-628", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n333 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="629-629", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n334 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="632-632", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n335 [label="Assert.AreEqual(-9999, actual)", span="633-633", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n336 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="621-621", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n337 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="637-637", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n338 [label="Security msft", span="639-639", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n339 [label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="640-640", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n340 [label="Update(msft, 25)", span="642-642", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n341 [label="algo.Portfolio.SetCash(50000)", span="644-644", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n342 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="645-645", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n343 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="648-648", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n344 [label="Assert.AreEqual(-9200, actual)", span="649-649", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n345 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="637-637", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)"];
n346 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="658-658", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)"];
n347 [label="Security msft", span="660-660", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)"];
n348 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="661-661", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)"];
n349 [label="Update(msft, 25)", span="663-663", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)"];
n350 [label="algo.Portfolio.SetCash(50000)", span="666-666", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)"];
n351 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="667-667", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)"];
n352 [label="Update(msft, 50)", span="670-670", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)"];
n353 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="674-674", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)"];
n354 [label="Assert.AreEqual(-500, actual)", span="677-677", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)"];
n355 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="658-658", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)"];
n356 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="681-681", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)"];
n357 [label="Security msft", span="683-683", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)"];
n358 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="684-684", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)"];
n359 [label="Update(msft, 25)", span="686-686", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)"];
n360 [label="algo.Portfolio.SetCash(50000)", span="689-689", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)"];
n361 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="690-690", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)"];
n362 [label="Update(msft, 50)", span="693-693", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)"];
n363 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="697-697", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)"];
n364 [label="Assert.AreEqual(-499, actual)", span="700-700", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)"];
n365 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="681-681", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)"];
n366 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="704-704", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)"];
n367 [label="Security msft", span="706-706", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)"];
n368 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="707-707", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)"];
n369 [label="Update(msft, 25)", span="709-709", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)"];
n370 [label="algo.Portfolio.SetCash(50000)", span="712-712", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)"];
n371 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="713-713", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)"];
n372 [label="Update(msft, 50)", span="716-716", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)"];
n373 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="720-720", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)"];
n374 [label="Assert.AreEqual(-300, actual)", span="723-723", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)"];
n375 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="704-704", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)"];
n376 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="727-727", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)"];
n377 [label="Security msft", span="729-729", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)"];
n378 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="730-730", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)"];
n379 [label="Update(msft, 25)", span="732-732", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)"];
n380 [label="algo.Portfolio.SetCash(50000)", span="734-734", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)"];
n381 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="735-735", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)"];
n382 [label="Update(msft, 50)", span="738-738", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)"];
n383 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="742-742", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)"];
n384 [label="Assert.AreEqual(250, actual)", span="745-745", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)"];
n385 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="727-727", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)"];
n386 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="749-749", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)"];
n387 [label="Security msft", span="751-751", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)"];
n388 [label="var algo = GetAlgorithm(out msft, leverage, 1)", span="752-752", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)"];
n389 [label="Update(msft, 25)", span="754-754", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)"];
n390 [label="algo.Portfolio.SetCash(50000)", span="756-756", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)"];
n391 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="757-757", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)"];
n392 [label="Update(msft, 50)", span="760-760", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)"];
n393 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="764-764", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)"];
n394 [label="Assert.AreEqual(249, actual)", span="767-767", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)"];
n395 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="749-749", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)"];
n396 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="771-771", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)"];
n397 [label="Security msft", span="773-773", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)"];
n398 [label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="774-774", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)"];
n399 [label="Update(msft, 25)", span="776-776", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)"];
n400 [label="algo.Portfolio.SetCash(50000)", span="778-778", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)"];
n401 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="779-779", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)"];
n402 [label="Update(msft, 50)", span="782-782", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)"];
n403 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="786-786", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)"];
n404 [label="Assert.AreEqual(50, actual)", span="789-789", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)"];
n405 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="771-771", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)"];
n406 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="793-793", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)"];
n407 [label="Security msft", span="795-795", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)"];
n408 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="796-796", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)"];
n409 [label="Update(msft, 25)", span="798-798", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)"];
n410 [label="algo.Portfolio.SetCash(25000)", span="801-801", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)"];
n411 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="802-802", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)"];
n412 [label="Update(msft, 50)", span="805-805", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)"];
n413 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="809-809", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)"];
n414 [label="Assert.AreEqual(-1250, actual)", span="812-812", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)"];
n415 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="793-793", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)"];
n416 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="816-816", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)"];
n417 [label="Security msft", span="818-818", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)"];
n418 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="819-819", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)"];
n419 [label="Update(msft, 25)", span="821-821", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)"];
n420 [label="algo.Portfolio.SetCash(50000)", span="823-823", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)"];
n421 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="824-824", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)"];
n422 [label="Update(msft, 50)", span="827-827", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)"];
n423 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="830-830", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)"];
n424 [label="Assert.AreEqual(-3500, actual)", span="833-833", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)"];
n425 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="816-816", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)"];
n426 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="837-837", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)"];
n427 [label="Security msft", span="839-839", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)"];
n428 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="840-840", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)"];
n429 [label="Update(msft, 25)", span="842-842", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)"];
n430 [label="algo.Portfolio.SetCash(150000)", span="844-844", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)"];
n431 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="845-845", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)"];
n432 [label="Update(msft, 50)", span="848-848", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)"];
n433 [label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="853-853", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)"];
n434 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="856-856", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)"];
n435 [label="Assert.AreEqual(1250, actual)", span="859-859", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)"];
n436 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="837-837", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)"];
n437 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="863-863", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)"];
n438 [label="Security msft", span="865-865", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)"];
n439 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="866-866", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)"];
n440 [label="Update(msft, 25)", span="868-868", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)"];
n441 [label="algo.Portfolio.SetCash(150000)", span="870-870", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)"];
n442 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="871-871", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)"];
n443 [label="Update(msft, 50m)", span="874-874", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)"];
n444 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="877-877", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)"];
n445 [label="Assert.AreEqual(2500, actual)", span="880-880", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)"];
n446 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="863-863", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)"];
n447 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="884-884", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)"];
n448 [label="Security msft", span="886-886", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)"];
n449 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="887-887", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)"];
n450 [label="Update(msft, 25)", span="889-889", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)"];
n451 [label="algo.Portfolio.SetCash(150000)", span="891-891", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)"];
n452 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="892-892", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)"];
n453 [label="Update(msft, 50m)", span="895-895", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)"];
n454 [label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="900-900", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)"];
n455 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="903-903", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)"];
n456 [label="Assert.AreEqual(2500, actual)", span="906-906", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)"];
n457 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="884-884", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)"];
n458 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="916-916", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)"];
n459 [label="Security msft", span="918-918", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)"];
n460 [label="var algo = GetAlgorithm(out msft, leverage, 0)", span="919-919", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)"];
n461 [label="Update(msft, 25)", span="921-921", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)"];
n462 [label="algo.Portfolio.SetCash(150000)", span="923-923", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)"];
n463 [label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="924-924", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)"];
n464 [label="Update(msft, 12.5m)", span="926-926", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)"];
n465 [label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="935-935", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)"];
n466 [label="Assert.AreEqual(-3000, actual)", span="936-936", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)"];
n467 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="916-916", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)"];
n468 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="944-944", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()"];
n469 [label="var algo = new QCAlgorithm()", span="946-946", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()"];
n470 [label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="947-947", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()"];
n479 [label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()"];
n471 [label="algo.SetCash(100000)", span="948-948", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()"];
n472 [label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="949-949", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()"];
n473 [label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="950-950", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()"];
n474 [label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="951-951", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()"];
n476 [label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, 1m)", span="955-955", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()"];
n480 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1268-1268", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)"];
n481 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1025-1025", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)"];
n482 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="890-890", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)"];
n483 [label="Entry QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", span="31-31", cluster="QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)"];
n475 [label="Update(eurusd, 26)", span="953-953", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()"];
n477 [label="Assert.AreEqual(3000m, actual)", span="956-956", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()"];
n478 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="944-944", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()"];
n484 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="961-961", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()"];
n485 [label="var algo = new QCAlgorithm()", span="963-963", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()"];
n486 [label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="964-964", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()"];
n487 [label="algo.SetCash(100000)", span="965-965", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()"];
n488 [label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="966-966", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()"];
n489 [label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="967-967", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()"];
n490 [label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="968-968", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()"];
n492 [label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, -1m)", span="972-972", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()"];
n491 [label="Update(eurusd, 26)", span="970-970", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()"];
n493 [label="Assert.AreEqual(-3000m, actual)", span="973-973", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()"];
n494 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="961-961", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()"];
n495 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="977-977", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()"];
n496 [label="var algo = new QCAlgorithm()", span="979-979", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()"];
n497 [label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="980-980", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()"];
n498 [label="algo.SetCash(10000)", span="981-981", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()"];
n499 [label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="982-982", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()"];
n500 [label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="983-983", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()"];
n501 [label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="984-984", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()"];
n503 [label="var actual = algo.CalculateOrderQuantity(Symbols.EURUSD, 1m)", span="988-988", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()"];
n502 [label="Update(eurusd, 25)", span="986-986", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()"];
n504 [label="Assert.AreEqual(0m, actual)", span="989-989", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()"];
n505 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="977-977", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()"];
n506 [label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", span="1098-1098", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n507 [label="Security msft", span="1100-1100", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n508 [label="var algo = GetAlgorithm(out msft, 1, 0)", span="1101-1101", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n509 [label="Update(msft, 25)", span="1103-1103", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n510 [label="algo.Portfolio.SetCash(150000)", span="1105-1105", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n514 [label="algo.Transactions.SetOrderProcessor(mock.Object)", span="1110-1110", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n515 [label="algo.Buy(Symbols.MSFT, 1)", span="1112-1112", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n516 [label="algo.Buy(Symbols.MSFT, 1.0)", span="1113-1113", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n517 [label="algo.Buy(Symbols.MSFT, 1.0m)", span="1114-1114", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n518 [label="algo.Buy(Symbols.MSFT, 1.0f)", span="1115-1115", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n519 [label="algo.Sell(Symbols.MSFT, 1)", span="1117-1117", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n520 [label="algo.Sell(Symbols.MSFT, 1.0)", span="1118-1118", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n521 [label="algo.Sell(Symbols.MSFT, 1.0m)", span="1119-1119", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n522 [label="algo.Sell(Symbols.MSFT, 1.0f)", span="1120-1120", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n523 [label="algo.Order(Symbols.MSFT, 1)", span="1122-1122", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n524 [label="algo.Order(Symbols.MSFT, 1.0)", span="1123-1123", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n525 [label="algo.Order(Symbols.MSFT, 1.0m)", span="1124-1124", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n526 [label="algo.Order(Symbols.MSFT, 1.0f)", span="1125-1125", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n527 [label="algo.MarketOrder(Symbols.MSFT, 1)", span="1127-1127", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n528 [label="algo.MarketOrder(Symbols.MSFT, 1.0)", span="1128-1128", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n529 [label="algo.MarketOrder(Symbols.MSFT, 1.0m)", span="1129-1129", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n530 [label="algo.MarketOrder(Symbols.MSFT, 1.0f)", span="1130-1130", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n531 [label="algo.MarketOnOpenOrder(Symbols.MSFT, 1)", span="1132-1132", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n532 [label="algo.MarketOnOpenOrder(Symbols.MSFT, 1.0)", span="1133-1133", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n533 [label="algo.MarketOnOpenOrder(Symbols.MSFT, 1.0m)", span="1134-1134", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n534 [label="algo.MarketOnCloseOrder(Symbols.MSFT, 1)", span="1136-1136", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n535 [label="algo.MarketOnCloseOrder(Symbols.MSFT, 1.0)", span="1137-1137", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n536 [label="algo.MarketOnCloseOrder(Symbols.MSFT, 1.0m)", span="1138-1138", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n537 [label="algo.LimitOrder(Symbols.MSFT, 1, 1)", span="1140-1140", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n538 [label="algo.LimitOrder(Symbols.MSFT, 1.0, 1)", span="1141-1141", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n539 [label="algo.LimitOrder(Symbols.MSFT, 1.0m, 1)", span="1142-1142", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n540 [label="algo.StopMarketOrder(Symbols.MSFT, 1, 1)", span="1144-1144", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n541 [label="algo.StopMarketOrder(Symbols.MSFT, 1.0, 1)", span="1145-1145", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n542 [label="algo.StopMarketOrder(Symbols.MSFT, 1.0m, 1)", span="1146-1146", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n543 [label="algo.StopLimitOrder(Symbols.MSFT, 1, 1, 2)", span="1148-1148", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n544 [label="algo.StopLimitOrder(Symbols.MSFT, 1.0, 1, 2)", span="1149-1149", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n545 [label="algo.StopLimitOrder(Symbols.MSFT, 1.0m, 1, 2)", span="1150-1150", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n546 [label="algo.SetHoldings(Symbols.MSFT, 1)", span="1152-1152", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n547 [label="algo.SetHoldings(Symbols.MSFT, 1.0)", span="1153-1153", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n548 [label="algo.SetHoldings(Symbols.MSFT, 1.0m)", span="1154-1154", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n549 [label="algo.SetHoldings(Symbols.MSFT, 1.0f)", span="1155-1155", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n551 [label="Assert.AreEqual(expected, algo.Transactions.LastOrderId)", span="1158-1158", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n511 [label="var mock = new Mock<IOrderProcessor>()", span="1107-1107", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n512 [label="var request = new Mock<Orders.SubmitOrderRequest>(null, null, null, null, null, null, null, null)", span="1108-1108", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", color=red, community=0];
n553 [label="Entry Mock<IOrderProcessor>.cstr", span="", cluster="Mock<IOrderProcessor>.cstr"];
n513 [label="mock.Setup(m => m.Process(It.IsAny<Orders.OrderRequest>())).Returns(new Orders.OrderTicket(null, request.Object))", span="1109-1109", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n554 [label="Entry Mock<Orders.SubmitOrderRequest>.cstr", span="", cluster="Mock<Orders.SubmitOrderRequest>.cstr"];
n555 [label="Entry Unk.Setup", span="", cluster="Unk.Setup"];
n556 [label="Entry Orders.OrderTicket.cstr", span="", cluster="Orders.OrderTicket.cstr"];
n557 [label="Entry Unk.Returns", span="", cluster="Unk.Returns"];
n592 [label="Entry lambda expression", span="1109-1109", cluster="lambda expression"];
n558 [label="Entry Unk.SetOrderProcessor", span="", cluster="Unk.SetOrderProcessor"];
n559 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="39-39", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)"];
n560 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="50-50", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)"];
n561 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="61-61", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)"];
n562 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="72-72", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)"];
n563 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="84-84", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)"];
n564 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="95-95", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)"];
n565 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="117-117", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)"];
n566 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="106-106", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)"];
n567 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="135-135", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)"];
n568 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="126-126", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)"];
n569 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="144-144", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)"];
n570 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="170-170", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)"];
n571 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="183-183", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)"];
n572 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="196-196", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)"];
n573 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="259-259", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)"];
n574 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="247-247", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)"];
n575 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="271-271", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)"];
n576 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="291-291", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)"];
n577 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="303-303", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)"];
n578 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="315-315", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)"];
n579 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="336-336", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)"];
n580 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="349-349", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)"];
n581 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="362-362", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)"];
n582 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="383-383", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)"];
n583 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="396-396", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)"];
n584 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="409-409", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)"];
n585 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="431-431", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)"];
n586 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="445-445", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)"];
n587 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="459-459", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)"];
n588 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="860-860", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)"];
n589 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="834-834", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)"];
n590 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="875-875", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)"];
n550 [label="int expected = 32", span="1157-1157", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n591 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="847-847", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)"];
n552 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()", span="1098-1098", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.OrderQuantityConversionTest()"];
n593 [label="m.Process(It.IsAny<Orders.OrderRequest>())", span="1109-1109", cluster="lambda expression"];
n594 [label="Exit lambda expression", span="1109-1109", cluster="lambda expression"];
n595 [label="Entry Unk.>", span="", cluster="Unk.>"];
n596 [label="Entry Unk.Process", span="", cluster="Unk.Process"];
n597 [label="var algo = new QCAlgorithm()", span="1165-1165", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)"];
n600 [label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1168-1168", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)"];
n602 [label="msft.SetLeverage(leverage)", span="1170-1170", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)"];
n598 [label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1166-1166", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)"];
n599 [label="algo.SetCash(100000)", span="1167-1167", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)"];
n601 [label="msft = algo.Securities[Symbols.MSFT]", span="1169-1169", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)"];
n603 [label="return algo;", span="1171-1171", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)"];
n604 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", span="1162-1162", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)"];
n605 [label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654", cluster="QuantConnect.Securities.Security.SetLeverage(decimal)"];
n606 [label="var algo = new QCAlgorithm()", span="1177-1177", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)"];
n609 [label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1180-1180", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)"];
n611 [label="msft.MarginModel = new SecurityMarginModel(initialMarginRequirement, maintenanceMarginRequirement)", span="1182-1182", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)"];
n607 [label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1178-1178", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)"];
n608 [label="algo.SetCash(100000)", span="1179-1179", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)"];
n610 [label="msft = algo.Securities[Symbols.MSFT]", span="1181-1181", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)"];
n612 [label="return algo;", span="1183-1183", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)"];
n613 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1174-1174", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)"];
n614 [label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35", cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)"];
n615 [label="security.SetMarketPrice(new TradeBar\r\n            {\r\n                Time = DateTime.Now,\r\n                Symbol = security.Symbol,\r\n                Open = close,\r\n                High = close,\r\n                Low = close,\r\n                Close = close\r\n            })", span="1188-1196", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)"];
n616 [label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", span="1186-1186", cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)"];
n617 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()"];
n618 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)"];
m0_13 [label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="75-75", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="InteractiveBrokersBrokerage.cs"];
m0_14 [label="!IsReady", span="78-78", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="InteractiveBrokersBrokerage.cs"];
m0_15 [label="return input;", span="78-78", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="InteractiveBrokersBrokerage.cs"];
m0_16 [label="var series = window\r\n                .OrderBy(i => i.Time)\r\n                .Select(i => Convert.ToDouble(i.Value))\r\n                .ToArray()", span="81-84", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="InteractiveBrokersBrokerage.cs"];
m0_18 [label="Intercept.Update(input.Time, (decimal)ols.Item1)", span="87-87", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="InteractiveBrokersBrokerage.cs"];
m0_19 [label="Slope.Update(input.Time, (decimal)ols.Item2)", span="88-88", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="InteractiveBrokersBrokerage.cs"];
m0_17 [label="var ols = Fit.Line(x: t, y: series)", span="86-86", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="InteractiveBrokersBrokerage.cs"];
m0_20 [label="return Intercept + Slope * Period;", span="91-91", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="InteractiveBrokersBrokerage.cs"];
m0_21 [label="Exit QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="75-75", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="InteractiveBrokersBrokerage.cs"];
m0_11 [label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(int)", span="62-62", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(int)", file="InteractiveBrokersBrokerage.cs"];
m0_12 [label="Exit QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(int)", span="62-62", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(int)", file="InteractiveBrokersBrokerage.cs"];
m0_25 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="36-36", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="InteractiveBrokersBrokerage.cs"];
m0_33 [label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", span="97-97", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", file="InteractiveBrokersBrokerage.cs"];
m0_34 [label="Intercept.Reset()", span="99-99", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", file="InteractiveBrokersBrokerage.cs"];
m0_35 [label="Slope.Reset()", span="100-100", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", file="InteractiveBrokersBrokerage.cs"];
m0_36 [label="base.Reset()", span="101-101", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", file="InteractiveBrokersBrokerage.cs"];
m0_37 [label="Exit QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", span="97-97", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.Reset()", file="InteractiveBrokersBrokerage.cs"];
m0_7 [label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27", cluster="QuantConnect.Indicators.Identity.Identity(string)", file="InteractiveBrokersBrokerage.cs"];
m0_0 [label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", span="50-50", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="InteractiveBrokersBrokerage.cs"];
m0_1 [label="t = Vector<double>.Build.Dense(period, i => i + 1).ToArray()", span="53-53", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="InteractiveBrokersBrokerage.cs"];
m0_2 [label="Intercept = new Identity(name + ''_Intercept'')", span="54-54", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="InteractiveBrokersBrokerage.cs"];
m0_3 [label="Slope = new Identity(name + ''_Slope'')", span="55-55", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="InteractiveBrokersBrokerage.cs"];
m0_4 [label="Exit QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", span="50-50", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="InteractiveBrokersBrokerage.cs"];
m0_32 [label="Entry System.Convert.ToDouble(decimal)", span="0-0", cluster="System.Convert.ToDouble(decimal)", file="InteractiveBrokersBrokerage.cs"];
m0_5 [label="Entry Unk.Dense", span="", cluster="Unk.Dense", file="InteractiveBrokersBrokerage.cs"];
m0_22 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="InteractiveBrokersBrokerage.cs"];
m0_39 [label="Entry QuantConnect.Indicators.WindowIndicator<T>.Reset()", span="69-69", cluster="QuantConnect.Indicators.WindowIndicator<T>.Reset()", file="InteractiveBrokersBrokerage.cs"];
m0_23 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="InteractiveBrokersBrokerage.cs"];
m0_6 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="InteractiveBrokersBrokerage.cs"];
m0_24 [label="Entry Unk.Line", span="", cluster="Unk.Line", file="InteractiveBrokersBrokerage.cs"];
m0_38 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="102-102", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="InteractiveBrokersBrokerage.cs"];
m0_29 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="InteractiveBrokersBrokerage.cs"];
m0_8 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="InteractiveBrokersBrokerage.cs"];
m0_9 [label="i + 1", span="53-53", cluster="lambda expression", file="InteractiveBrokersBrokerage.cs"];
m0_10 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="InteractiveBrokersBrokerage.cs"];
m0_26 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="InteractiveBrokersBrokerage.cs"];
m0_27 [label="i.Time", span="82-82", cluster="lambda expression", file="InteractiveBrokersBrokerage.cs"];
m0_28 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="InteractiveBrokersBrokerage.cs"];
m0_30 [label="Convert.ToDouble(i.Value)", span="83-83", cluster="lambda expression", file="InteractiveBrokersBrokerage.cs"];
m0_31 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="InteractiveBrokersBrokerage.cs"];
m0_40 [label="QuantConnect.Indicators.LeastSquaresMovingAverage", span="", file="InteractiveBrokersBrokerage.cs"];
m1_76 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Order.cs"];
m1_66 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="Order.cs"];
m1_71 [label="Entry System.Math.Sign(decimal)", span="0-0", cluster="System.Math.Sign(decimal)", file="Order.cs"];
m1_75 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="781-781", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="Order.cs"];
m1_72 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", span="357-357", cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", file="Order.cs"];
m1_69 [label="Entry QuantConnect.Securities.ISettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", span="32-32", cluster="QuantConnect.Securities.ISettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", file="Order.cs"];
m1_0 [label="Entry QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="34-34", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_1 [label="var quoteCash = security.QuoteCurrency", span="36-36", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_2 [label="var isLong = security.Holdings.IsLong", span="39-39", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_3 [label="var isShort = security.Holdings.IsShort", span="40-40", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_5 [label="var quantityHoldings = (decimal)security.Holdings.Quantity", span="43-43", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_6 [label="var absoluteHoldingsQuantity = security.Holdings.AbsoluteQuantity", span="44-44", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_7 [label="var averageHoldingsPrice = security.Holdings.AveragePrice", span="45-45", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_8 [label="security.Type == SecurityType.Future", span="50-50", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_9 [label="var saleValueInQuoteCurrency = fill.FillPrice * Convert.ToDecimal(fill.AbsoluteFillQuantity)", span="53-53", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_11 [label="security.Holdings.AddNewSale(saleValue)", span="55-55", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_12 [label="var saleValueInQuoteCurrency = fill.FillPrice * Convert.ToDecimal(fill.AbsoluteFillQuantity) * security.SymbolProperties.ContractMultiplier", span="59-59", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_14 [label="security.Holdings.AddNewSale(saleValue)", span="61-61", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_15 [label="var feeThisOrder = Math.Abs(fill.OrderFee)", span="65-65", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_16 [label="security.Holdings.AddNewFee(feeThisOrder)", span="66-66", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_17 [label="portfolio.CashBook[CashBook.AccountCurrency].AddAmount(-feeThisOrder)", span="67-67", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_18 [label="security.Type != SecurityType.Future", span="71-71", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_19 [label="security.SettlementModel.ApplyFunds(portfolio, security, fill.UtcTime, quoteCash.Symbol, -fill.FillQuantity * fill.FillPrice * security.SymbolProperties.ContractMultiplier)", span="73-73", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_20 [label="security.Type == SecurityType.Forex", span="75-75", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_21 [label="var forex = (Forex.Forex) security", span="78-78", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_22 [label="security.SettlementModel.ApplyFunds(portfolio, security, fill.UtcTime, forex.BaseCurrencySymbol, fill.FillQuantity)", span="79-79", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_23 [label="closedPosition = isLong && fill.Direction == OrderDirection.Sell\r\n                             || isShort && fill.Direction == OrderDirection.Buy", span="83-84", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_25 [label="var absoluteQuantityClosed = Math.Min(fill.AbsoluteFillQuantity, absoluteHoldingsQuantity)", span="92-92", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_26 [label="var closedSaleValueInQuoteCurrency = Math.Sign(-fill.FillQuantity)*fill.FillPrice*absoluteQuantityClosed", span="93-93", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_27 [label="var closedCost = Math.Sign(-fill.FillQuantity)*absoluteQuantityClosed*averageHoldingsPrice", span="94-94", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_28 [label="var conversionFactor = security.QuoteCurrency.ConversionRate*security.SymbolProperties.ContractMultiplier", span="95-95", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_30 [label="security.Type == SecurityType.Future", span="99-99", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_31 [label="security.SettlementModel.ApplyFunds(portfolio, security, fill.UtcTime, quoteCash.Symbol, lastTradeProfit)", span="101-101", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_32 [label="security.Holdings.AddNewProfit(lastTradeProfit)", span="105-105", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_33 [label="security.Holdings.SetLastTradeProfit(lastTradeProfit)", span="106-106", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_34 [label="portfolio.AddTransactionRecord(security.LocalTime.ConvertToUtc(security.Exchange.TimeZone), lastTradeProfit - 2*feeThisOrder)", span="107-107", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_36 [label="averageHoldingsPrice = fill.FillPrice", span="115-115", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_37 [label="quantityHoldings = fill.FillQuantity", span="116-116", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_39 [label="fill.Direction", span="121-121", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_41 [label="averageHoldingsPrice = ((averageHoldingsPrice*quantityHoldings) + (fill.FillQuantity*fill.FillPrice))/(quantityHoldings + fill.FillQuantity)", span="125-125", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_42 [label="quantityHoldings += fill.FillQuantity", span="127-127", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_44 [label="quantityHoldings += fill.FillQuantity", span="131-131", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_46 [label="averageHoldingsPrice = fill.FillPrice", span="135-135", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_50 [label="fill.Direction", span="147-147", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_52 [label="quantityHoldings += fill.FillQuantity", span="151-151", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_54 [label="averageHoldingsPrice = fill.FillPrice", span="155-155", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_58 [label="averageHoldingsPrice = ((averageHoldingsPrice*quantityHoldings) + (fill.FillQuantity*fill.FillPrice))/(quantityHoldings + fill.FillQuantity)", span="167-167", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_59 [label="quantityHoldings += fill.FillQuantity", span="168-168", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_62 [label="security.Holdings.SetHoldings(averageHoldingsPrice, quantityHoldings)", span="179-179", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_10 [label="var saleValue = saleValueInQuoteCurrency * quoteCash.ConversionRate", span="54-54", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_13 [label="var saleValue = saleValueInQuoteCurrency * quoteCash.ConversionRate", span="60-60", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_38 [label=isLong, span="118-118", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_4 [label="var closedPosition = false", span="41-41", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_49 [label=isShort, span="144-144", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_35 [label="quantityHoldings == 0", span="112-112", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_24 [label=closedPosition, span="87-87", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_29 [label="var lastTradeProfit = (closedSaleValueInQuoteCurrency - closedCost)*conversionFactor", span="96-96", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_40 [label="OrderDirection.Buy", span="123-123", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_43 [label="OrderDirection.Sell", span="130-130", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_45 [label="quantityHoldings < 0", span="132-132", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_47 [label="quantityHoldings == 0", span="137-137", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_48 [label="averageHoldingsPrice = 0", span="139-139", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_60 [label=Exception, span="173-173", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_51 [label="OrderDirection.Buy", span="149-149", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_57 [label="OrderDirection.Sell", span="163-163", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_53 [label="quantityHoldings > 0", span="152-152", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_55 [label="quantityHoldings == 0", span="157-157", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_56 [label="averageHoldingsPrice = 0", span="159-159", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_61 [label="Log.Error(err)", span="175-175", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_63 [label="Exit QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="34-34", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="Order.cs"];
m1_70 [label="Entry System.Math.Min(decimal, decimal)", span="0-0", cluster="System.Math.Min(decimal, decimal)", file="Order.cs"];
m1_64 [label="Entry System.Convert.ToDecimal(decimal)", span="0-0", cluster="System.Convert.ToDecimal(decimal)", file="Order.cs"];
m1_73 [label="Entry QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", span="375-375", cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", file="Order.cs"];
m1_77 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", span="392-392", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", file="Order.cs"];
m1_68 [label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="101-101", cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Order.cs"];
m1_67 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", span="348-348", cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", file="Order.cs"];
m1_65 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="366-366", cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="Order.cs"];
m1_74 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="576-576", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="Order.cs"];
n619 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n194  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n231  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n249  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n266  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n267  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n276  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n277  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n286  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n294  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n295  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n303  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n304  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n312  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n313  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n322  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n330  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n331  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n339  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n340  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n348  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n349  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n352  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n358  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n359  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n362  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n368  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n369  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n372  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n378  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n379  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n382  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n388  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n389  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n392  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n398  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n399  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n402  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n408  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n409  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n412  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n418  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n419  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n422  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n428  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n429  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n432  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n439  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n440  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n443  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n449  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n450  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n453  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n460  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n461  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n464  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n475  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n491  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n502  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n508  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n619 -> n509  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n7  [key=2, style=dotted];
n2 -> n4  [key=1, style=dashed, color=darkseagreen4, label=algo];
n3 -> n4  [key=0, style=solid];
n3 -> n8  [key=2, style=dotted];
n7 -> n597  [key=0, style=solid];
n7 -> n600  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n7 -> n602  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n7 -> n1  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n12  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n19  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n26  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n33  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n40  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n47  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n58  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n67  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n76  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n85  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n94  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n103  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n112  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n121  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n130  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n139  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n148  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n157  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n166  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n175  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n184  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n193  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n202  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n211  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n220  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n229  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n238  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n247  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n256  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n347  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n357  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n367  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n377  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n387  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n397  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n407  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n417  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n427  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n438  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n448  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n459  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n507  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n7 -> n0  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n11  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n18  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n25  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n32  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n39  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n46  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n57  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n66  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n75  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n84  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n93  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n102  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n111  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n120  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n129  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n138  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n147  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n156  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n165  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n174  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n183  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n192  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n201  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n210  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n219  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n228  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n237  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n246  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n255  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n346  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n356  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n366  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n376  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n386  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n396  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n406  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n416  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n426  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n437  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n447  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n458  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal leverage"];
n7 -> n508  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal fee"];
n7 -> n2  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal fee"];
n7 -> n20  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal fee"];
n4 -> n5  [key=0, style=solid];
n4 -> n9  [key=2, style=dotted];
n8 -> n615  [key=0, style=solid];
n8 -> n1  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n12  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n19  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n26  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n33  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n40  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n47  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n58  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n67  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n76  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n85  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n94  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n103  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n112  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n121  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n130  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n139  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n148  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n157  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n166  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n175  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n184  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n193  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n202  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n211  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n220  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n229  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n238  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n247  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n256  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n265  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n275  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n284  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n293  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n302  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n311  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n320  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n329  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n338  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n347  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n357  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n367  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n377  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n387  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n397  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n407  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n417  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n427  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n438  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n448  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n459  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n474  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n490  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n501  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n507  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security security"];
n8 -> n3  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal close"];
n8 -> n352  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal close"];
n8 -> n443  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal close"];
n8 -> n464  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal close"];
n8 -> n475  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal close"];
n5 -> n6  [key=0, style=solid];
n5 -> n10  [key=2, style=dotted];
n6 -> n0  [key=0, style=bold, color=blue];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n7  [key=2, style=dotted];
n13 -> n15  [key=1, style=dashed, color=darkseagreen4, label=algo];
n14 -> n15  [key=0, style=solid];
n14 -> n8  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n9  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n10  [key=2, style=dotted];
n17 -> n11  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n7  [key=2, style=dotted];
n20 -> n22  [key=1, style=dashed, color=darkseagreen4, label=algo];
n21 -> n22  [key=0, style=solid];
n21 -> n8  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n9  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n10  [key=2, style=dotted];
n24 -> n18  [key=0, style=bold, color=blue];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n7  [key=2, style=dotted];
n27 -> n29  [key=1, style=dashed, color=darkseagreen4, label=algo];
n28 -> n29  [key=0, style=solid];
n28 -> n8  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n9  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n10  [key=2, style=dotted];
n31 -> n25  [key=0, style=bold, color=blue];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n7  [key=2, style=dotted];
n34 -> n36  [key=1, style=dashed, color=darkseagreen4, label=algo];
n35 -> n36  [key=0, style=solid];
n35 -> n8  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n9  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n10  [key=2, style=dotted];
n38 -> n32  [key=0, style=bold, color=blue];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n40 -> n41  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n7  [key=2, style=dotted];
n41 -> n43  [key=1, style=dashed, color=darkseagreen4, label=algo];
n42 -> n43  [key=0, style=solid];
n42 -> n8  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n9  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n10  [key=2, style=dotted];
n45 -> n39  [key=0, style=bold, color=blue];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n47 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n7  [key=2, style=dotted];
n48 -> n50  [key=1, style=dashed, color=darkseagreen4, label=algo];
n48 -> n51  [key=1, style=dashed, color=darkseagreen4, label=algo];
n48 -> n52  [key=1, style=dashed, color=darkseagreen4, label=algo];
n49 -> n50  [key=0, style=solid];
n49 -> n8  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n55  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n56  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n9  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n10  [key=2, style=dotted];
n54 -> n46  [key=0, style=bold, color=blue];
n57 -> n58  [key=0, style=solid];
n57 -> n59  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n58 -> n59  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n7  [key=2, style=dotted];
n59 -> n61  [key=1, style=dashed, color=darkseagreen4, label=algo];
n59 -> n62  [key=1, style=dashed, color=darkseagreen4, label=algo];
n59 -> n63  [key=1, style=dashed, color=darkseagreen4, label=algo];
n60 -> n61  [key=0, style=solid];
n60 -> n8  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n55  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n56  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n9  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n10  [key=2, style=dotted];
n65 -> n57  [key=0, style=bold, color=blue];
n66 -> n67  [key=0, style=solid];
n66 -> n68  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n67 -> n68  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n7  [key=2, style=dotted];
n68 -> n70  [key=1, style=dashed, color=darkseagreen4, label=algo];
n68 -> n71  [key=1, style=dashed, color=darkseagreen4, label=algo];
n68 -> n72  [key=1, style=dashed, color=darkseagreen4, label=algo];
n69 -> n70  [key=0, style=solid];
n69 -> n8  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n55  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n56  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n9  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n10  [key=2, style=dotted];
n74 -> n66  [key=0, style=bold, color=blue];
n75 -> n76  [key=0, style=solid];
n75 -> n77  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n76 -> n77  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n77 -> n7  [key=2, style=dotted];
n77 -> n79  [key=1, style=dashed, color=darkseagreen4, label=algo];
n77 -> n80  [key=1, style=dashed, color=darkseagreen4, label=algo];
n77 -> n81  [key=1, style=dashed, color=darkseagreen4, label=algo];
n78 -> n79  [key=0, style=solid];
n78 -> n8  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n79 -> n55  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n80 -> n56  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid];
n81 -> n9  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n82 -> n10  [key=2, style=dotted];
n83 -> n75  [key=0, style=bold, color=blue];
n84 -> n85  [key=0, style=solid];
n84 -> n86  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n85 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n86 -> n7  [key=2, style=dotted];
n86 -> n88  [key=1, style=dashed, color=darkseagreen4, label=algo];
n86 -> n89  [key=1, style=dashed, color=darkseagreen4, label=algo];
n86 -> n90  [key=1, style=dashed, color=darkseagreen4, label=algo];
n87 -> n88  [key=0, style=solid];
n87 -> n8  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n55  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n56  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n9  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n10  [key=2, style=dotted];
n92 -> n84  [key=0, style=bold, color=blue];
n93 -> n94  [key=0, style=solid];
n93 -> n95  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n94 -> n95  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n95 -> n7  [key=2, style=dotted];
n95 -> n97  [key=1, style=dashed, color=darkseagreen4, label=algo];
n95 -> n98  [key=1, style=dashed, color=darkseagreen4, label=algo];
n95 -> n99  [key=1, style=dashed, color=darkseagreen4, label=algo];
n96 -> n97  [key=0, style=solid];
n96 -> n8  [key=2, style=dotted];
n97 -> n98  [key=0, style=solid];
n97 -> n55  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n56  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n99 -> n9  [key=2, style=dotted];
n100 -> n101  [key=0, style=solid];
n100 -> n10  [key=2, style=dotted];
n101 -> n93  [key=0, style=bold, color=blue];
n102 -> n103  [key=0, style=solid];
n102 -> n104  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n103 -> n104  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n104 -> n7  [key=2, style=dotted];
n104 -> n106  [key=1, style=dashed, color=darkseagreen4, label=algo];
n104 -> n107  [key=1, style=dashed, color=darkseagreen4, label=algo];
n104 -> n108  [key=1, style=dashed, color=darkseagreen4, label=algo];
n105 -> n106  [key=0, style=solid];
n105 -> n8  [key=2, style=dotted];
n106 -> n107  [key=0, style=solid];
n106 -> n55  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n107 -> n56  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n108 -> n9  [key=2, style=dotted];
n109 -> n110  [key=0, style=solid];
n109 -> n10  [key=2, style=dotted];
n110 -> n102  [key=0, style=bold, color=blue];
n111 -> n112  [key=0, style=solid];
n111 -> n113  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n112 -> n113  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n113 -> n7  [key=2, style=dotted];
n113 -> n115  [key=1, style=dashed, color=darkseagreen4, label=algo];
n113 -> n116  [key=1, style=dashed, color=darkseagreen4, label=algo];
n113 -> n117  [key=1, style=dashed, color=darkseagreen4, label=algo];
n114 -> n115  [key=0, style=solid];
n114 -> n8  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n55  [key=2, style=dotted];
n116 -> n117  [key=0, style=solid];
n116 -> n56  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n117 -> n9  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n118 -> n10  [key=2, style=dotted];
n119 -> n111  [key=0, style=bold, color=blue];
n120 -> n121  [key=0, style=solid];
n120 -> n122  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n121 -> n122  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n7  [key=2, style=dotted];
n122 -> n124  [key=1, style=dashed, color=darkseagreen4, label=algo];
n122 -> n125  [key=1, style=dashed, color=darkseagreen4, label=algo];
n122 -> n126  [key=1, style=dashed, color=darkseagreen4, label=algo];
n123 -> n124  [key=0, style=solid];
n123 -> n8  [key=2, style=dotted];
n124 -> n125  [key=0, style=solid];
n124 -> n55  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n125 -> n56  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n126 -> n9  [key=2, style=dotted];
n127 -> n128  [key=0, style=solid];
n127 -> n10  [key=2, style=dotted];
n128 -> n120  [key=0, style=bold, color=blue];
n129 -> n130  [key=0, style=solid];
n129 -> n131  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n130 -> n131  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n131 -> n7  [key=2, style=dotted];
n131 -> n133  [key=1, style=dashed, color=darkseagreen4, label=algo];
n131 -> n134  [key=1, style=dashed, color=darkseagreen4, label=algo];
n131 -> n135  [key=1, style=dashed, color=darkseagreen4, label=algo];
n132 -> n133  [key=0, style=solid];
n132 -> n8  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n55  [key=2, style=dotted];
n134 -> n135  [key=0, style=solid];
n134 -> n56  [key=2, style=dotted];
n135 -> n136  [key=0, style=solid];
n135 -> n9  [key=2, style=dotted];
n136 -> n137  [key=0, style=solid];
n136 -> n10  [key=2, style=dotted];
n137 -> n129  [key=0, style=bold, color=blue];
n138 -> n139  [key=0, style=solid];
n138 -> n140  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n139 -> n140  [key=0, style=solid];
n140 -> n141  [key=0, style=solid];
n140 -> n7  [key=2, style=dotted];
n140 -> n142  [key=1, style=dashed, color=darkseagreen4, label=algo];
n140 -> n143  [key=1, style=dashed, color=darkseagreen4, label=algo];
n140 -> n144  [key=1, style=dashed, color=darkseagreen4, label=algo];
n141 -> n142  [key=0, style=solid];
n141 -> n8  [key=2, style=dotted];
n142 -> n143  [key=0, style=solid];
n142 -> n55  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n56  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n9  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n10  [key=2, style=dotted];
n146 -> n138  [key=0, style=bold, color=blue];
n147 -> n148  [key=0, style=solid];
n147 -> n149  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n148 -> n149  [key=0, style=solid];
n149 -> n150  [key=0, style=solid];
n149 -> n7  [key=2, style=dotted];
n149 -> n151  [key=1, style=dashed, color=darkseagreen4, label=algo];
n149 -> n152  [key=1, style=dashed, color=darkseagreen4, label=algo];
n149 -> n153  [key=1, style=dashed, color=darkseagreen4, label=algo];
n150 -> n151  [key=0, style=solid];
n150 -> n8  [key=2, style=dotted];
n151 -> n152  [key=0, style=solid];
n151 -> n55  [key=2, style=dotted];
n152 -> n153  [key=0, style=solid];
n152 -> n56  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n9  [key=2, style=dotted];
n154 -> n155  [key=0, style=solid];
n154 -> n10  [key=2, style=dotted];
n155 -> n147  [key=0, style=bold, color=blue];
n156 -> n157  [key=0, style=solid];
n156 -> n158  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n157 -> n158  [key=0, style=solid];
n158 -> n159  [key=0, style=solid];
n158 -> n7  [key=2, style=dotted];
n158 -> n160  [key=1, style=dashed, color=darkseagreen4, label=algo];
n158 -> n161  [key=1, style=dashed, color=darkseagreen4, label=algo];
n158 -> n162  [key=1, style=dashed, color=darkseagreen4, label=algo];
n159 -> n160  [key=0, style=solid];
n159 -> n8  [key=2, style=dotted];
n160 -> n161  [key=0, style=solid];
n160 -> n55  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n56  [key=2, style=dotted];
n162 -> n163  [key=0, style=solid];
n162 -> n9  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n163 -> n10  [key=2, style=dotted];
n164 -> n156  [key=0, style=bold, color=blue];
n165 -> n166  [key=0, style=solid];
n165 -> n167  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n166 -> n167  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n167 -> n7  [key=2, style=dotted];
n167 -> n169  [key=1, style=dashed, color=darkseagreen4, label=algo];
n167 -> n170  [key=1, style=dashed, color=darkseagreen4, label=algo];
n167 -> n171  [key=1, style=dashed, color=darkseagreen4, label=algo];
n168 -> n169  [key=0, style=solid];
n168 -> n8  [key=2, style=dotted];
n169 -> n170  [key=0, style=solid];
n169 -> n55  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n56  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n9  [key=2, style=dotted];
n172 -> n173  [key=0, style=solid];
n172 -> n10  [key=2, style=dotted];
n173 -> n165  [key=0, style=bold, color=blue];
n174 -> n175  [key=0, style=solid];
n174 -> n176  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n175 -> n176  [key=0, style=solid];
n176 -> n177  [key=0, style=solid];
n176 -> n7  [key=2, style=dotted];
n176 -> n178  [key=1, style=dashed, color=darkseagreen4, label=algo];
n176 -> n179  [key=1, style=dashed, color=darkseagreen4, label=algo];
n176 -> n180  [key=1, style=dashed, color=darkseagreen4, label=algo];
n177 -> n178  [key=0, style=solid];
n177 -> n8  [key=2, style=dotted];
n178 -> n179  [key=0, style=solid];
n178 -> n55  [key=2, style=dotted];
n179 -> n180  [key=0, style=solid];
n179 -> n56  [key=2, style=dotted];
n180 -> n181  [key=0, style=solid];
n180 -> n9  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n10  [key=2, style=dotted];
n182 -> n174  [key=0, style=bold, color=blue];
n183 -> n184  [key=0, style=solid];
n183 -> n185  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n184 -> n185  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n185 -> n7  [key=2, style=dotted];
n185 -> n187  [key=1, style=dashed, color=darkseagreen4, label=algo];
n185 -> n188  [key=1, style=dashed, color=darkseagreen4, label=algo];
n185 -> n189  [key=1, style=dashed, color=darkseagreen4, label=algo];
n186 -> n187  [key=0, style=solid];
n186 -> n8  [key=2, style=dotted];
n187 -> n188  [key=0, style=solid];
n187 -> n55  [key=2, style=dotted];
n188 -> n189  [key=0, style=solid];
n188 -> n56  [key=2, style=dotted];
n189 -> n190  [key=0, style=solid];
n189 -> n9  [key=2, style=dotted];
n190 -> n191  [key=0, style=solid];
n190 -> n10  [key=2, style=dotted];
n191 -> n183  [key=0, style=bold, color=blue];
n192 -> n193  [key=0, style=solid];
n192 -> n194  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n193 -> n194  [key=0, style=solid];
n194 -> n195  [key=0, style=solid];
n194 -> n7  [key=2, style=dotted];
n194 -> n196  [key=1, style=dashed, color=darkseagreen4, label=algo];
n194 -> n197  [key=1, style=dashed, color=darkseagreen4, label=algo];
n194 -> n198  [key=1, style=dashed, color=darkseagreen4, label=algo];
n195 -> n196  [key=0, style=solid];
n195 -> n8  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n55  [key=2, style=dotted];
n197 -> n198  [key=0, style=solid];
n197 -> n56  [key=2, style=dotted];
n198 -> n199  [key=0, style=solid];
n198 -> n9  [key=2, style=dotted];
n199 -> n200  [key=0, style=solid];
n199 -> n10  [key=2, style=dotted];
n200 -> n192  [key=0, style=bold, color=blue];
n201 -> n202  [key=0, style=solid];
n201 -> n203  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n202 -> n203  [key=0, style=solid];
n203 -> n204  [key=0, style=solid];
n203 -> n7  [key=2, style=dotted];
n203 -> n205  [key=1, style=dashed, color=darkseagreen4, label=algo];
n203 -> n206  [key=1, style=dashed, color=darkseagreen4, label=algo];
n203 -> n207  [key=1, style=dashed, color=darkseagreen4, label=algo];
n204 -> n205  [key=0, style=solid];
n204 -> n8  [key=2, style=dotted];
n205 -> n206  [key=0, style=solid];
n205 -> n55  [key=2, style=dotted];
n206 -> n207  [key=0, style=solid];
n206 -> n56  [key=2, style=dotted];
n207 -> n208  [key=0, style=solid];
n207 -> n9  [key=2, style=dotted];
n208 -> n209  [key=0, style=solid];
n208 -> n10  [key=2, style=dotted];
n209 -> n201  [key=0, style=bold, color=blue];
n210 -> n211  [key=0, style=solid];
n210 -> n212  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n211 -> n212  [key=0, style=solid];
n212 -> n213  [key=0, style=solid];
n212 -> n7  [key=2, style=dotted];
n212 -> n214  [key=1, style=dashed, color=darkseagreen4, label=algo];
n212 -> n215  [key=1, style=dashed, color=darkseagreen4, label=algo];
n212 -> n216  [key=1, style=dashed, color=darkseagreen4, label=algo];
n213 -> n214  [key=0, style=solid];
n213 -> n8  [key=2, style=dotted];
n214 -> n215  [key=0, style=solid];
n214 -> n55  [key=2, style=dotted];
n215 -> n216  [key=0, style=solid];
n215 -> n56  [key=2, style=dotted];
n216 -> n217  [key=0, style=solid];
n216 -> n9  [key=2, style=dotted];
n217 -> n218  [key=0, style=solid];
n217 -> n10  [key=2, style=dotted];
n218 -> n210  [key=0, style=bold, color=blue];
n219 -> n220  [key=0, style=solid];
n219 -> n221  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n220 -> n221  [key=0, style=solid];
n221 -> n222  [key=0, style=solid];
n221 -> n7  [key=2, style=dotted];
n221 -> n223  [key=1, style=dashed, color=darkseagreen4, label=algo];
n221 -> n224  [key=1, style=dashed, color=darkseagreen4, label=algo];
n221 -> n225  [key=1, style=dashed, color=darkseagreen4, label=algo];
n222 -> n223  [key=0, style=solid];
n222 -> n8  [key=2, style=dotted];
n223 -> n224  [key=0, style=solid];
n223 -> n55  [key=2, style=dotted];
n224 -> n225  [key=0, style=solid];
n224 -> n56  [key=2, style=dotted];
n225 -> n226  [key=0, style=solid];
n225 -> n9  [key=2, style=dotted];
n226 -> n227  [key=0, style=solid];
n226 -> n10  [key=2, style=dotted];
n227 -> n219  [key=0, style=bold, color=blue];
n228 -> n229  [key=0, style=solid];
n228 -> n230  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n229 -> n230  [key=0, style=solid];
n230 -> n231  [key=0, style=solid];
n230 -> n7  [key=2, style=dotted];
n230 -> n232  [key=1, style=dashed, color=darkseagreen4, label=algo];
n230 -> n233  [key=1, style=dashed, color=darkseagreen4, label=algo];
n230 -> n234  [key=1, style=dashed, color=darkseagreen4, label=algo];
n231 -> n232  [key=0, style=solid];
n231 -> n8  [key=2, style=dotted];
n232 -> n233  [key=0, style=solid];
n232 -> n55  [key=2, style=dotted];
n233 -> n234  [key=0, style=solid];
n233 -> n56  [key=2, style=dotted];
n234 -> n235  [key=0, style=solid];
n234 -> n9  [key=2, style=dotted];
n235 -> n236  [key=0, style=solid];
n235 -> n10  [key=2, style=dotted];
n236 -> n228  [key=0, style=bold, color=blue];
n237 -> n238  [key=0, style=solid];
n237 -> n239  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n238 -> n239  [key=0, style=solid];
n239 -> n240  [key=0, style=solid];
n239 -> n7  [key=2, style=dotted];
n239 -> n241  [key=1, style=dashed, color=darkseagreen4, label=algo];
n239 -> n242  [key=1, style=dashed, color=darkseagreen4, label=algo];
n239 -> n243  [key=1, style=dashed, color=darkseagreen4, label=algo];
n240 -> n241  [key=0, style=solid];
n240 -> n8  [key=2, style=dotted];
n241 -> n242  [key=0, style=solid];
n241 -> n55  [key=2, style=dotted];
n242 -> n243  [key=0, style=solid];
n242 -> n56  [key=2, style=dotted];
n243 -> n244  [key=0, style=solid];
n243 -> n9  [key=2, style=dotted];
n244 -> n245  [key=0, style=solid];
n244 -> n10  [key=2, style=dotted];
n245 -> n237  [key=0, style=bold, color=blue];
n246 -> n247  [key=0, style=solid];
n246 -> n248  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n247 -> n248  [key=0, style=solid];
n248 -> n249  [key=0, style=solid];
n248 -> n7  [key=2, style=dotted];
n248 -> n250  [key=1, style=dashed, color=darkseagreen4, label=algo];
n248 -> n251  [key=1, style=dashed, color=darkseagreen4, label=algo];
n248 -> n252  [key=1, style=dashed, color=darkseagreen4, label=algo];
n249 -> n250  [key=0, style=solid];
n249 -> n8  [key=2, style=dotted];
n250 -> n251  [key=0, style=solid];
n250 -> n55  [key=2, style=dotted];
n251 -> n252  [key=0, style=solid];
n251 -> n56  [key=2, style=dotted];
n252 -> n253  [key=0, style=solid];
n252 -> n9  [key=2, style=dotted];
n253 -> n254  [key=0, style=solid];
n253 -> n10  [key=2, style=dotted];
n254 -> n246  [key=0, style=bold, color=blue];
n255 -> n256  [key=0, style=solid];
n255 -> n257  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n256 -> n257  [key=0, style=solid];
n257 -> n258  [key=0, style=solid];
n257 -> n7  [key=2, style=dotted];
n257 -> n259  [key=1, style=dashed, color=darkseagreen4, label=algo];
n257 -> n260  [key=1, style=dashed, color=darkseagreen4, label=algo];
n257 -> n261  [key=1, style=dashed, color=darkseagreen4, label=algo];
n258 -> n259  [key=0, style=solid];
n258 -> n8  [key=2, style=dotted];
n259 -> n260  [key=0, style=solid];
n259 -> n55  [key=2, style=dotted];
n260 -> n261  [key=0, style=solid];
n260 -> n56  [key=2, style=dotted];
n261 -> n262  [key=0, style=solid];
n261 -> n9  [key=2, style=dotted];
n262 -> n263  [key=0, style=solid];
n262 -> n10  [key=2, style=dotted];
n263 -> n255  [key=0, style=bold, color=blue];
n264 -> n265  [key=0, style=solid];
n264 -> n266  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n265 -> n266  [key=0, style=solid];
n266 -> n267  [key=0, style=solid];
n266 -> n273  [key=2, style=dotted];
n266 -> n268  [key=1, style=dashed, color=darkseagreen4, label=algo];
n266 -> n269  [key=1, style=dashed, color=darkseagreen4, label=algo];
n266 -> n270  [key=1, style=dashed, color=darkseagreen4, label=algo];
n267 -> n268  [key=0, style=solid];
n267 -> n8  [key=2, style=dotted];
n273 -> n606  [key=0, style=solid];
n273 -> n609  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n273 -> n611  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n273 -> n265  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n273 -> n275  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n273 -> n284  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n273 -> n293  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n273 -> n302  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n273 -> n311  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n273 -> n320  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n273 -> n329  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n273 -> n338  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security msft"];
n273 -> n264  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal maintenanceMarginRequirement"];
n273 -> n274  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal maintenanceMarginRequirement"];
n273 -> n283  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal maintenanceMarginRequirement"];
n273 -> n292  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal maintenanceMarginRequirement"];
n273 -> n301  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal maintenanceMarginRequirement"];
n273 -> n310  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal maintenanceMarginRequirement"];
n273 -> n319  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal maintenanceMarginRequirement"];
n273 -> n328  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal maintenanceMarginRequirement"];
n273 -> n337  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal maintenanceMarginRequirement"];
n273 -> n2  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal fee"];
n273 -> n508  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal fee"];
n273 -> n20  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal fee"];
n268 -> n269  [key=0, style=solid];
n268 -> n55  [key=2, style=dotted];
n269 -> n270  [key=0, style=solid];
n269 -> n56  [key=2, style=dotted];
n270 -> n271  [key=0, style=solid];
n270 -> n9  [key=2, style=dotted];
n271 -> n272  [key=0, style=solid];
n271 -> n10  [key=2, style=dotted];
n272 -> n264  [key=0, style=bold, color=blue];
n274 -> n275  [key=0, style=solid];
n274 -> n276  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n275 -> n276  [key=0, style=solid];
n276 -> n277  [key=0, style=solid];
n276 -> n273  [key=2, style=dotted];
n276 -> n278  [key=1, style=dashed, color=darkseagreen4, label=algo];
n276 -> n279  [key=1, style=dashed, color=darkseagreen4, label=algo];
n276 -> n280  [key=1, style=dashed, color=darkseagreen4, label=algo];
n277 -> n278  [key=0, style=solid];
n277 -> n8  [key=2, style=dotted];
n278 -> n279  [key=0, style=solid];
n278 -> n55  [key=2, style=dotted];
n279 -> n280  [key=0, style=solid];
n279 -> n56  [key=2, style=dotted];
n280 -> n281  [key=0, style=solid];
n280 -> n9  [key=2, style=dotted];
n281 -> n282  [key=0, style=solid];
n281 -> n10  [key=2, style=dotted];
n282 -> n274  [key=0, style=bold, color=blue];
n283 -> n284  [key=0, style=solid];
n283 -> n285  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n284 -> n285  [key=0, style=solid];
n285 -> n286  [key=0, style=solid];
n285 -> n273  [key=2, style=dotted];
n285 -> n287  [key=1, style=dashed, color=darkseagreen4, label=algo];
n285 -> n288  [key=1, style=dashed, color=darkseagreen4, label=algo];
n285 -> n289  [key=1, style=dashed, color=darkseagreen4, label=algo];
n286 -> n287  [key=0, style=solid];
n286 -> n8  [key=2, style=dotted];
n287 -> n288  [key=0, style=solid];
n287 -> n55  [key=2, style=dotted];
n288 -> n289  [key=0, style=solid];
n288 -> n56  [key=2, style=dotted];
n289 -> n290  [key=0, style=solid];
n289 -> n9  [key=2, style=dotted];
n290 -> n291  [key=0, style=solid];
n290 -> n10  [key=2, style=dotted];
n291 -> n283  [key=0, style=bold, color=blue];
n292 -> n293  [key=0, style=solid];
n292 -> n294  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n293 -> n294  [key=0, style=solid];
n294 -> n295  [key=0, style=solid];
n294 -> n273  [key=2, style=dotted];
n294 -> n296  [key=1, style=dashed, color=darkseagreen4, label=algo];
n294 -> n297  [key=1, style=dashed, color=darkseagreen4, label=algo];
n294 -> n298  [key=1, style=dashed, color=darkseagreen4, label=algo];
n295 -> n296  [key=0, style=solid];
n295 -> n8  [key=2, style=dotted];
n296 -> n297  [key=0, style=solid];
n296 -> n55  [key=2, style=dotted];
n297 -> n298  [key=0, style=solid];
n297 -> n56  [key=2, style=dotted];
n298 -> n299  [key=0, style=solid];
n298 -> n9  [key=2, style=dotted];
n299 -> n300  [key=0, style=solid];
n299 -> n10  [key=2, style=dotted];
n300 -> n292  [key=0, style=bold, color=blue];
n301 -> n302  [key=0, style=solid];
n301 -> n303  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n302 -> n303  [key=0, style=solid];
n303 -> n304  [key=0, style=solid];
n303 -> n273  [key=2, style=dotted];
n303 -> n305  [key=1, style=dashed, color=darkseagreen4, label=algo];
n303 -> n306  [key=1, style=dashed, color=darkseagreen4, label=algo];
n303 -> n307  [key=1, style=dashed, color=darkseagreen4, label=algo];
n304 -> n305  [key=0, style=solid];
n304 -> n8  [key=2, style=dotted];
n305 -> n306  [key=0, style=solid];
n305 -> n55  [key=2, style=dotted];
n306 -> n307  [key=0, style=solid];
n306 -> n56  [key=2, style=dotted];
n307 -> n308  [key=0, style=solid];
n307 -> n9  [key=2, style=dotted];
n308 -> n309  [key=0, style=solid];
n308 -> n10  [key=2, style=dotted];
n309 -> n301  [key=0, style=bold, color=blue];
n310 -> n311  [key=0, style=solid];
n310 -> n312  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n311 -> n312  [key=0, style=solid];
n312 -> n313  [key=0, style=solid];
n312 -> n273  [key=2, style=dotted];
n312 -> n314  [key=1, style=dashed, color=darkseagreen4, label=algo];
n312 -> n315  [key=1, style=dashed, color=darkseagreen4, label=algo];
n312 -> n316  [key=1, style=dashed, color=darkseagreen4, label=algo];
n313 -> n314  [key=0, style=solid];
n313 -> n8  [key=2, style=dotted];
n314 -> n315  [key=0, style=solid];
n314 -> n55  [key=2, style=dotted];
n315 -> n316  [key=0, style=solid];
n315 -> n56  [key=2, style=dotted];
n316 -> n317  [key=0, style=solid];
n316 -> n9  [key=2, style=dotted];
n317 -> n318  [key=0, style=solid];
n317 -> n10  [key=2, style=dotted];
n318 -> n310  [key=0, style=bold, color=blue];
n319 -> n320  [key=0, style=solid];
n319 -> n321  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n320 -> n321  [key=0, style=solid];
n321 -> n322  [key=0, style=solid];
n321 -> n273  [key=2, style=dotted];
n321 -> n323  [key=1, style=dashed, color=darkseagreen4, label=algo];
n321 -> n324  [key=1, style=dashed, color=darkseagreen4, label=algo];
n321 -> n325  [key=1, style=dashed, color=darkseagreen4, label=algo];
n322 -> n323  [key=0, style=solid];
n322 -> n8  [key=2, style=dotted];
n323 -> n324  [key=0, style=solid];
n323 -> n55  [key=2, style=dotted];
n324 -> n325  [key=0, style=solid];
n324 -> n56  [key=2, style=dotted];
n325 -> n326  [key=0, style=solid];
n325 -> n9  [key=2, style=dotted];
n326 -> n327  [key=0, style=solid];
n326 -> n10  [key=2, style=dotted];
n327 -> n319  [key=0, style=bold, color=blue];
n328 -> n329  [key=0, style=solid];
n328 -> n330  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n329 -> n330  [key=0, style=solid];
n330 -> n331  [key=0, style=solid];
n330 -> n273  [key=2, style=dotted];
n330 -> n332  [key=1, style=dashed, color=darkseagreen4, label=algo];
n330 -> n333  [key=1, style=dashed, color=darkseagreen4, label=algo];
n330 -> n334  [key=1, style=dashed, color=darkseagreen4, label=algo];
n331 -> n332  [key=0, style=solid];
n331 -> n8  [key=2, style=dotted];
n332 -> n333  [key=0, style=solid];
n332 -> n55  [key=2, style=dotted];
n333 -> n334  [key=0, style=solid];
n333 -> n56  [key=2, style=dotted];
n334 -> n335  [key=0, style=solid];
n334 -> n9  [key=2, style=dotted];
n335 -> n336  [key=0, style=solid];
n335 -> n10  [key=2, style=dotted];
n336 -> n328  [key=0, style=bold, color=blue];
n337 -> n338  [key=0, style=solid];
n337 -> n339  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n338 -> n339  [key=0, style=solid];
n339 -> n340  [key=0, style=solid];
n339 -> n273  [key=2, style=dotted];
n339 -> n341  [key=1, style=dashed, color=darkseagreen4, label=algo];
n339 -> n342  [key=1, style=dashed, color=darkseagreen4, label=algo];
n339 -> n343  [key=1, style=dashed, color=darkseagreen4, label=algo];
n340 -> n341  [key=0, style=solid];
n340 -> n8  [key=2, style=dotted];
n341 -> n342  [key=0, style=solid];
n341 -> n55  [key=2, style=dotted];
n342 -> n343  [key=0, style=solid];
n342 -> n56  [key=2, style=dotted];
n343 -> n344  [key=0, style=solid];
n343 -> n9  [key=2, style=dotted];
n344 -> n345  [key=0, style=solid];
n344 -> n10  [key=2, style=dotted];
n345 -> n337  [key=0, style=bold, color=blue];
n346 -> n347  [key=0, style=solid];
n346 -> n348  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n347 -> n348  [key=0, style=solid];
n348 -> n349  [key=0, style=solid];
n348 -> n7  [key=2, style=dotted];
n348 -> n350  [key=1, style=dashed, color=darkseagreen4, label=algo];
n348 -> n351  [key=1, style=dashed, color=darkseagreen4, label=algo];
n348 -> n352  [key=1, style=dashed, color=darkseagreen4, label=msft];
n348 -> n353  [key=1, style=dashed, color=darkseagreen4, label=algo];
n349 -> n350  [key=0, style=solid];
n349 -> n8  [key=2, style=dotted];
n350 -> n351  [key=0, style=solid];
n350 -> n55  [key=2, style=dotted];
n351 -> n352  [key=0, style=solid];
n351 -> n56  [key=2, style=dotted];
n352 -> n353  [key=0, style=solid];
n352 -> n8  [key=2, style=dotted];
n353 -> n354  [key=0, style=solid];
n353 -> n9  [key=2, style=dotted];
n354 -> n355  [key=0, style=solid];
n354 -> n10  [key=2, style=dotted];
n355 -> n346  [key=0, style=bold, color=blue];
n356 -> n357  [key=0, style=solid];
n356 -> n358  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n357 -> n358  [key=0, style=solid];
n358 -> n359  [key=0, style=solid];
n358 -> n7  [key=2, style=dotted];
n358 -> n360  [key=1, style=dashed, color=darkseagreen4, label=algo];
n358 -> n361  [key=1, style=dashed, color=darkseagreen4, label=algo];
n358 -> n362  [key=1, style=dashed, color=darkseagreen4, label=msft];
n358 -> n363  [key=1, style=dashed, color=darkseagreen4, label=algo];
n359 -> n360  [key=0, style=solid];
n359 -> n8  [key=2, style=dotted];
n360 -> n361  [key=0, style=solid];
n360 -> n55  [key=2, style=dotted];
n361 -> n362  [key=0, style=solid];
n361 -> n56  [key=2, style=dotted];
n362 -> n363  [key=0, style=solid];
n362 -> n8  [key=2, style=dotted];
n363 -> n364  [key=0, style=solid];
n363 -> n9  [key=2, style=dotted];
n364 -> n365  [key=0, style=solid];
n364 -> n10  [key=2, style=dotted];
n365 -> n356  [key=0, style=bold, color=blue];
n366 -> n367  [key=0, style=solid];
n366 -> n368  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n367 -> n368  [key=0, style=solid];
n368 -> n369  [key=0, style=solid];
n368 -> n7  [key=2, style=dotted];
n368 -> n370  [key=1, style=dashed, color=darkseagreen4, label=algo];
n368 -> n371  [key=1, style=dashed, color=darkseagreen4, label=algo];
n368 -> n372  [key=1, style=dashed, color=darkseagreen4, label=msft];
n368 -> n373  [key=1, style=dashed, color=darkseagreen4, label=algo];
n369 -> n370  [key=0, style=solid];
n369 -> n8  [key=2, style=dotted];
n370 -> n371  [key=0, style=solid];
n370 -> n55  [key=2, style=dotted];
n371 -> n372  [key=0, style=solid];
n371 -> n56  [key=2, style=dotted];
n372 -> n373  [key=0, style=solid];
n372 -> n8  [key=2, style=dotted];
n373 -> n374  [key=0, style=solid];
n373 -> n9  [key=2, style=dotted];
n374 -> n375  [key=0, style=solid];
n374 -> n10  [key=2, style=dotted];
n375 -> n366  [key=0, style=bold, color=blue];
n376 -> n377  [key=0, style=solid];
n376 -> n378  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n377 -> n378  [key=0, style=solid];
n378 -> n379  [key=0, style=solid];
n378 -> n7  [key=2, style=dotted];
n378 -> n380  [key=1, style=dashed, color=darkseagreen4, label=algo];
n378 -> n381  [key=1, style=dashed, color=darkseagreen4, label=algo];
n378 -> n382  [key=1, style=dashed, color=darkseagreen4, label=msft];
n378 -> n383  [key=1, style=dashed, color=darkseagreen4, label=algo];
n379 -> n380  [key=0, style=solid];
n379 -> n8  [key=2, style=dotted];
n380 -> n381  [key=0, style=solid];
n380 -> n55  [key=2, style=dotted];
n381 -> n382  [key=0, style=solid];
n381 -> n56  [key=2, style=dotted];
n382 -> n383  [key=0, style=solid];
n382 -> n8  [key=2, style=dotted];
n383 -> n384  [key=0, style=solid];
n383 -> n9  [key=2, style=dotted];
n384 -> n385  [key=0, style=solid];
n384 -> n10  [key=2, style=dotted];
n385 -> n376  [key=0, style=bold, color=blue];
n386 -> n387  [key=0, style=solid];
n386 -> n388  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n387 -> n388  [key=0, style=solid];
n388 -> n389  [key=0, style=solid];
n388 -> n7  [key=2, style=dotted];
n388 -> n390  [key=1, style=dashed, color=darkseagreen4, label=algo];
n388 -> n391  [key=1, style=dashed, color=darkseagreen4, label=algo];
n388 -> n392  [key=1, style=dashed, color=darkseagreen4, label=msft];
n388 -> n393  [key=1, style=dashed, color=darkseagreen4, label=algo];
n389 -> n390  [key=0, style=solid];
n389 -> n8  [key=2, style=dotted];
n390 -> n391  [key=0, style=solid];
n390 -> n55  [key=2, style=dotted];
n391 -> n392  [key=0, style=solid];
n391 -> n56  [key=2, style=dotted];
n392 -> n393  [key=0, style=solid];
n392 -> n8  [key=2, style=dotted];
n393 -> n394  [key=0, style=solid];
n393 -> n9  [key=2, style=dotted];
n394 -> n395  [key=0, style=solid];
n394 -> n10  [key=2, style=dotted];
n395 -> n386  [key=0, style=bold, color=blue];
n396 -> n397  [key=0, style=solid];
n396 -> n398  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n397 -> n398  [key=0, style=solid];
n398 -> n399  [key=0, style=solid];
n398 -> n7  [key=2, style=dotted];
n398 -> n400  [key=1, style=dashed, color=darkseagreen4, label=algo];
n398 -> n401  [key=1, style=dashed, color=darkseagreen4, label=algo];
n398 -> n402  [key=1, style=dashed, color=darkseagreen4, label=msft];
n398 -> n403  [key=1, style=dashed, color=darkseagreen4, label=algo];
n399 -> n400  [key=0, style=solid];
n399 -> n8  [key=2, style=dotted];
n400 -> n401  [key=0, style=solid];
n400 -> n55  [key=2, style=dotted];
n401 -> n402  [key=0, style=solid];
n401 -> n56  [key=2, style=dotted];
n402 -> n403  [key=0, style=solid];
n402 -> n8  [key=2, style=dotted];
n403 -> n404  [key=0, style=solid];
n403 -> n9  [key=2, style=dotted];
n404 -> n405  [key=0, style=solid];
n404 -> n10  [key=2, style=dotted];
n405 -> n396  [key=0, style=bold, color=blue];
n406 -> n407  [key=0, style=solid];
n406 -> n408  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n407 -> n408  [key=0, style=solid];
n408 -> n409  [key=0, style=solid];
n408 -> n7  [key=2, style=dotted];
n408 -> n410  [key=1, style=dashed, color=darkseagreen4, label=algo];
n408 -> n411  [key=1, style=dashed, color=darkseagreen4, label=algo];
n408 -> n412  [key=1, style=dashed, color=darkseagreen4, label=msft];
n408 -> n413  [key=1, style=dashed, color=darkseagreen4, label=algo];
n409 -> n410  [key=0, style=solid];
n409 -> n8  [key=2, style=dotted];
n410 -> n411  [key=0, style=solid];
n410 -> n55  [key=2, style=dotted];
n411 -> n412  [key=0, style=solid];
n411 -> n56  [key=2, style=dotted];
n412 -> n413  [key=0, style=solid];
n412 -> n8  [key=2, style=dotted];
n413 -> n414  [key=0, style=solid];
n413 -> n9  [key=2, style=dotted];
n414 -> n415  [key=0, style=solid];
n414 -> n10  [key=2, style=dotted];
n415 -> n406  [key=0, style=bold, color=blue];
n416 -> n417  [key=0, style=solid];
n416 -> n418  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n417 -> n418  [key=0, style=solid];
n418 -> n419  [key=0, style=solid];
n418 -> n7  [key=2, style=dotted];
n418 -> n420  [key=1, style=dashed, color=darkseagreen4, label=algo];
n418 -> n421  [key=1, style=dashed, color=darkseagreen4, label=algo];
n418 -> n422  [key=1, style=dashed, color=darkseagreen4, label=msft];
n418 -> n423  [key=1, style=dashed, color=darkseagreen4, label=algo];
n419 -> n420  [key=0, style=solid];
n419 -> n8  [key=2, style=dotted];
n420 -> n421  [key=0, style=solid];
n420 -> n55  [key=2, style=dotted];
n421 -> n422  [key=0, style=solid];
n421 -> n56  [key=2, style=dotted];
n422 -> n423  [key=0, style=solid];
n422 -> n8  [key=2, style=dotted];
n423 -> n424  [key=0, style=solid];
n423 -> n9  [key=2, style=dotted];
n424 -> n425  [key=0, style=solid];
n424 -> n10  [key=2, style=dotted];
n425 -> n416  [key=0, style=bold, color=blue];
n426 -> n427  [key=0, style=solid];
n426 -> n428  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n427 -> n428  [key=0, style=solid];
n428 -> n429  [key=0, style=solid];
n428 -> n7  [key=2, style=dotted];
n428 -> n430  [key=1, style=dashed, color=darkseagreen4, label=algo];
n428 -> n431  [key=1, style=dashed, color=darkseagreen4, label=algo];
n428 -> n432  [key=1, style=dashed, color=darkseagreen4, label=msft];
n428 -> n433  [key=1, style=dashed, color=darkseagreen4, label=algo];
n428 -> n434  [key=1, style=dashed, color=darkseagreen4, label=algo];
n429 -> n430  [key=0, style=solid];
n429 -> n8  [key=2, style=dotted];
n430 -> n431  [key=0, style=solid];
n430 -> n55  [key=2, style=dotted];
n431 -> n432  [key=0, style=solid];
n431 -> n56  [key=2, style=dotted];
n432 -> n433  [key=0, style=solid];
n432 -> n8  [key=2, style=dotted];
n433 -> n434  [key=0, style=solid];
n433 -> n10  [key=2, style=dotted];
n434 -> n435  [key=0, style=solid];
n434 -> n9  [key=2, style=dotted];
n435 -> n436  [key=0, style=solid];
n435 -> n10  [key=2, style=dotted];
n436 -> n426  [key=0, style=bold, color=blue];
n437 -> n438  [key=0, style=solid];
n437 -> n439  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n438 -> n439  [key=0, style=solid];
n439 -> n440  [key=0, style=solid];
n439 -> n7  [key=2, style=dotted];
n439 -> n441  [key=1, style=dashed, color=darkseagreen4, label=algo];
n439 -> n442  [key=1, style=dashed, color=darkseagreen4, label=algo];
n439 -> n443  [key=1, style=dashed, color=darkseagreen4, label=msft];
n439 -> n444  [key=1, style=dashed, color=darkseagreen4, label=algo];
n440 -> n441  [key=0, style=solid];
n440 -> n8  [key=2, style=dotted];
n441 -> n442  [key=0, style=solid];
n441 -> n55  [key=2, style=dotted];
n442 -> n443  [key=0, style=solid];
n442 -> n56  [key=2, style=dotted];
n443 -> n444  [key=0, style=solid];
n443 -> n8  [key=2, style=dotted];
n444 -> n445  [key=0, style=solid];
n444 -> n9  [key=2, style=dotted];
n445 -> n446  [key=0, style=solid];
n445 -> n10  [key=2, style=dotted];
n446 -> n437  [key=0, style=bold, color=blue];
n447 -> n448  [key=0, style=solid];
n447 -> n449  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n448 -> n449  [key=0, style=solid];
n449 -> n450  [key=0, style=solid];
n449 -> n7  [key=2, style=dotted];
n449 -> n451  [key=1, style=dashed, color=darkseagreen4, label=algo];
n449 -> n452  [key=1, style=dashed, color=darkseagreen4, label=algo];
n449 -> n453  [key=1, style=dashed, color=darkseagreen4, label=msft];
n449 -> n454  [key=1, style=dashed, color=darkseagreen4, label=algo];
n449 -> n455  [key=1, style=dashed, color=darkseagreen4, label=algo];
n450 -> n451  [key=0, style=solid];
n450 -> n8  [key=2, style=dotted];
n451 -> n452  [key=0, style=solid];
n451 -> n55  [key=2, style=dotted];
n452 -> n453  [key=0, style=solid];
n452 -> n56  [key=2, style=dotted];
n453 -> n454  [key=0, style=solid];
n453 -> n8  [key=2, style=dotted];
n454 -> n455  [key=0, style=solid];
n454 -> n10  [key=2, style=dotted];
n455 -> n456  [key=0, style=solid];
n455 -> n9  [key=2, style=dotted];
n456 -> n457  [key=0, style=solid];
n456 -> n10  [key=2, style=dotted];
n457 -> n447  [key=0, style=bold, color=blue];
n458 -> n459  [key=0, style=solid];
n458 -> n460  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n459 -> n460  [key=0, style=solid];
n460 -> n461  [key=0, style=solid];
n460 -> n7  [key=2, style=dotted];
n460 -> n462  [key=1, style=dashed, color=darkseagreen4, label=algo];
n460 -> n463  [key=1, style=dashed, color=darkseagreen4, label=algo];
n460 -> n464  [key=1, style=dashed, color=darkseagreen4, label=msft];
n460 -> n465  [key=1, style=dashed, color=darkseagreen4, label=algo];
n461 -> n462  [key=0, style=solid];
n461 -> n8  [key=2, style=dotted];
n462 -> n463  [key=0, style=solid];
n462 -> n55  [key=2, style=dotted];
n463 -> n464  [key=0, style=solid];
n463 -> n56  [key=2, style=dotted];
n464 -> n465  [key=0, style=solid];
n464 -> n8  [key=2, style=dotted];
n465 -> n466  [key=0, style=solid];
n465 -> n9  [key=2, style=dotted];
n466 -> n467  [key=0, style=solid];
n466 -> n10  [key=2, style=dotted];
n467 -> n458  [key=0, style=bold, color=blue];
n468 -> n469  [key=0, style=solid];
n469 -> n470  [key=0, style=solid];
n469 -> n479  [key=2, style=dotted];
n469 -> n471  [key=1, style=dashed, color=darkseagreen4, label=algo];
n469 -> n472  [key=1, style=dashed, color=darkseagreen4, label=algo];
n469 -> n473  [key=1, style=dashed, color=darkseagreen4, label=algo];
n469 -> n474  [key=1, style=dashed, color=darkseagreen4, label=algo];
n469 -> n476  [key=1, style=dashed, color=darkseagreen4, label=algo];
n470 -> n471  [key=0, style=solid];
n470 -> n480  [key=2, style=dotted];
n471 -> n472  [key=0, style=solid];
n471 -> n481  [key=2, style=dotted];
n472 -> n473  [key=0, style=solid];
n472 -> n482  [key=2, style=dotted];
n473 -> n474  [key=0, style=solid];
n473 -> n483  [key=2, style=dotted];
n474 -> n475  [key=0, style=solid];
n476 -> n477  [key=0, style=solid];
n476 -> n9  [key=2, style=dotted];
n475 -> n476  [key=0, style=solid];
n475 -> n8  [key=2, style=dotted];
n477 -> n478  [key=0, style=solid];
n477 -> n10  [key=2, style=dotted];
n478 -> n468  [key=0, style=bold, color=blue];
n484 -> n485  [key=0, style=solid];
n485 -> n486  [key=0, style=solid];
n485 -> n479  [key=2, style=dotted];
n485 -> n487  [key=1, style=dashed, color=darkseagreen4, label=algo];
n485 -> n488  [key=1, style=dashed, color=darkseagreen4, label=algo];
n485 -> n489  [key=1, style=dashed, color=darkseagreen4, label=algo];
n485 -> n490  [key=1, style=dashed, color=darkseagreen4, label=algo];
n485 -> n492  [key=1, style=dashed, color=darkseagreen4, label=algo];
n486 -> n487  [key=0, style=solid];
n486 -> n480  [key=2, style=dotted];
n487 -> n488  [key=0, style=solid];
n487 -> n481  [key=2, style=dotted];
n488 -> n489  [key=0, style=solid];
n488 -> n482  [key=2, style=dotted];
n489 -> n490  [key=0, style=solid];
n489 -> n483  [key=2, style=dotted];
n490 -> n491  [key=0, style=solid];
n492 -> n493  [key=0, style=solid];
n492 -> n9  [key=2, style=dotted];
n491 -> n492  [key=0, style=solid];
n491 -> n8  [key=2, style=dotted];
n493 -> n494  [key=0, style=solid];
n493 -> n10  [key=2, style=dotted];
n494 -> n484  [key=0, style=bold, color=blue];
n495 -> n496  [key=0, style=solid];
n496 -> n497  [key=0, style=solid];
n496 -> n479  [key=2, style=dotted];
n496 -> n498  [key=1, style=dashed, color=darkseagreen4, label=algo];
n496 -> n499  [key=1, style=dashed, color=darkseagreen4, label=algo];
n496 -> n500  [key=1, style=dashed, color=darkseagreen4, label=algo];
n496 -> n501  [key=1, style=dashed, color=darkseagreen4, label=algo];
n496 -> n503  [key=1, style=dashed, color=darkseagreen4, label=algo];
n497 -> n498  [key=0, style=solid];
n497 -> n480  [key=2, style=dotted];
n498 -> n499  [key=0, style=solid];
n498 -> n481  [key=2, style=dotted];
n499 -> n500  [key=0, style=solid];
n499 -> n482  [key=2, style=dotted];
n500 -> n501  [key=0, style=solid];
n500 -> n483  [key=2, style=dotted];
n501 -> n502  [key=0, style=solid];
n503 -> n504  [key=0, style=solid];
n503 -> n9  [key=2, style=dotted];
n502 -> n503  [key=0, style=solid];
n502 -> n8  [key=2, style=dotted];
n504 -> n505  [key=0, style=solid];
n504 -> n10  [key=2, style=dotted];
n505 -> n495  [key=0, style=bold, color=blue];
n506 -> n507  [key=0, style=solid];
n507 -> n508  [key=0, style=solid];
n508 -> n509  [key=0, style=solid];
n508 -> n7  [key=2, style=dotted];
n508 -> n510  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n514  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n515  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n516  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n517  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n518  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n519  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n520  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n521  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n522  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n523  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n524  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n525  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n526  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n527  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n528  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n529  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n530  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n531  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n532  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n533  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n534  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n535  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n536  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n537  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n538  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n539  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n540  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n541  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n542  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n543  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n544  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n545  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n546  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n547  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n548  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n549  [key=1, style=dashed, color=darkseagreen4, label=algo];
n508 -> n551  [key=1, style=dashed, color=darkseagreen4, label=algo];
n509 -> n510  [key=0, style=solid];
n509 -> n8  [key=2, style=dotted];
n510 -> n511  [key=0, style=solid];
n510 -> n55  [key=2, style=dotted];
n514 -> n515  [key=0, style=solid];
n514 -> n558  [key=2, style=dotted];
n515 -> n516  [key=0, style=solid];
n515 -> n559  [key=2, style=dotted];
n516 -> n517  [key=0, style=solid];
n516 -> n560  [key=2, style=dotted];
n517 -> n518  [key=0, style=solid];
n517 -> n561  [key=2, style=dotted];
n518 -> n519  [key=0, style=solid];
n518 -> n562  [key=2, style=dotted];
n519 -> n520  [key=0, style=solid];
n519 -> n563  [key=2, style=dotted];
n520 -> n521  [key=0, style=solid];
n520 -> n564  [key=2, style=dotted];
n521 -> n522  [key=0, style=solid];
n521 -> n565  [key=2, style=dotted];
n522 -> n523  [key=0, style=solid];
n522 -> n566  [key=2, style=dotted];
n523 -> n524  [key=0, style=solid];
n523 -> n567  [key=2, style=dotted];
n524 -> n525  [key=0, style=solid];
n524 -> n568  [key=2, style=dotted];
n525 -> n526  [key=0, style=solid];
n525 -> n569  [key=2, style=dotted];
n526 -> n527  [key=0, style=solid];
n526 -> n568  [key=2, style=dotted];
n527 -> n528  [key=0, style=solid];
n527 -> n570  [key=2, style=dotted];
n528 -> n529  [key=0, style=solid];
n528 -> n571  [key=2, style=dotted];
n529 -> n530  [key=0, style=solid];
n529 -> n572  [key=2, style=dotted];
n530 -> n531  [key=0, style=solid];
n530 -> n571  [key=2, style=dotted];
n531 -> n532  [key=0, style=solid];
n531 -> n573  [key=2, style=dotted];
n532 -> n533  [key=0, style=solid];
n532 -> n574  [key=2, style=dotted];
n533 -> n534  [key=0, style=solid];
n533 -> n575  [key=2, style=dotted];
n534 -> n535  [key=0, style=solid];
n534 -> n576  [key=2, style=dotted];
n535 -> n536  [key=0, style=solid];
n535 -> n577  [key=2, style=dotted];
n536 -> n537  [key=0, style=solid];
n536 -> n578  [key=2, style=dotted];
n537 -> n538  [key=0, style=solid];
n537 -> n579  [key=2, style=dotted];
n538 -> n539  [key=0, style=solid];
n538 -> n580  [key=2, style=dotted];
n539 -> n540  [key=0, style=solid];
n539 -> n581  [key=2, style=dotted];
n540 -> n541  [key=0, style=solid];
n540 -> n582  [key=2, style=dotted];
n541 -> n542  [key=0, style=solid];
n541 -> n583  [key=2, style=dotted];
n542 -> n543  [key=0, style=solid];
n542 -> n584  [key=2, style=dotted];
n543 -> n544  [key=0, style=solid];
n543 -> n585  [key=2, style=dotted];
n544 -> n545  [key=0, style=solid];
n544 -> n586  [key=2, style=dotted];
n545 -> n546  [key=0, style=solid];
n545 -> n587  [key=2, style=dotted];
n546 -> n547  [key=0, style=solid];
n546 -> n588  [key=2, style=dotted];
n547 -> n548  [key=0, style=solid];
n547 -> n589  [key=2, style=dotted];
n548 -> n549  [key=0, style=solid];
n548 -> n590  [key=2, style=dotted];
n549 -> n550  [key=0, style=solid];
n549 -> n591  [key=2, style=dotted];
n551 -> n552  [key=0, style=solid];
n551 -> n10  [key=2, style=dotted];
n511 -> n512  [key=0, style=solid, color=red];
n511 -> n553  [key=2, style=dotted];
n511 -> n513  [key=1, style=dashed, color=darkseagreen4, label=mock];
n511 -> n514  [key=1, style=dashed, color=darkseagreen4, label=mock];
n512 -> n513  [key=0, style=solid, color=red];
n512 -> n554  [key=2, style=dotted, color=red];
n513 -> n514  [key=0, style=solid];
n513 -> n555  [key=2, style=dotted];
n513 -> n556  [key=2, style=dotted];
n513 -> n557  [key=2, style=dotted];
n513 -> n592  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n592 -> n593  [key=0, style=solid];
n550 -> n551  [key=0, style=solid];
n550 -> n550  [key=3, color=darkorchid, style=bold, label="Local variable int expected"];
n552 -> n506  [key=0, style=bold, color=blue];
n593 -> n594  [key=0, style=solid];
n593 -> n595  [key=2, style=dotted];
n593 -> n596  [key=2, style=dotted];
n594 -> n592  [key=0, style=bold, color=blue];
n597 -> n598  [key=0, style=solid];
n597 -> n479  [key=2, style=dotted];
n597 -> n599  [key=1, style=dashed, color=darkseagreen4, label=algo];
n597 -> n600  [key=1, style=dashed, color=darkseagreen4, label=algo];
n597 -> n601  [key=1, style=dashed, color=darkseagreen4, label=algo];
n597 -> n603  [key=1, style=dashed, color=darkseagreen4, label=algo];
n600 -> n601  [key=0, style=solid];
n600 -> n483  [key=2, style=dotted];
n602 -> n603  [key=0, style=solid];
n602 -> n605  [key=2, style=dotted];
n598 -> n599  [key=0, style=solid];
n598 -> n480  [key=2, style=dotted];
n599 -> n600  [key=0, style=solid];
n599 -> n481  [key=2, style=dotted];
n601 -> n602  [key=0, style=solid];
n601 -> n604  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
n603 -> n604  [key=0, style=solid];
n604 -> n7  [key=0, style=bold, color=blue];
n606 -> n607  [key=0, style=solid];
n606 -> n479  [key=2, style=dotted];
n606 -> n608  [key=1, style=dashed, color=darkseagreen4, label=algo];
n606 -> n609  [key=1, style=dashed, color=darkseagreen4, label=algo];
n606 -> n610  [key=1, style=dashed, color=darkseagreen4, label=algo];
n606 -> n612  [key=1, style=dashed, color=darkseagreen4, label=algo];
n609 -> n610  [key=0, style=solid];
n609 -> n483  [key=2, style=dotted];
n611 -> n612  [key=0, style=solid];
n611 -> n614  [key=2, style=dotted];
n607 -> n608  [key=0, style=solid];
n607 -> n480  [key=2, style=dotted];
n608 -> n609  [key=0, style=solid];
n608 -> n481  [key=2, style=dotted];
n610 -> n611  [key=0, style=solid];
n610 -> n613  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.Security"];
n612 -> n613  [key=0, style=solid];
n613 -> n273  [key=0, style=bold, color=blue];
n615 -> n616  [key=0, style=solid];
n615 -> n617  [key=2, style=dotted];
n615 -> n618  [key=2, style=dotted];
n616 -> n8  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
m0_13 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>"];
m0_13 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
m0_13 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
m0_13 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal ComputeNextValue"];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=0, style=solid];
m0_15 -> m0_21  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_22  [key=2, style=dotted];
m0_16 -> m0_23  [key=2, style=dotted];
m0_16 -> m0_6  [key=2, style=dotted];
m0_16 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_16 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_25  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_25  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_24  [key=2, style=dotted];
m0_17 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=ols];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_13  [key=0, style=bold, color=blue];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_11  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_38  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_38  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_39  [key=2, style=dotted];
m0_37 -> m0_33  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_7  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_28 -> m0_26  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=2, style=dotted];
m0_31 -> m0_29  [key=0, style=bold, color=blue];
m0_40 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.LeastSquaresMovingAverage"];
m0_40 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.LeastSquaresMovingAverage"];
m0_40 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.LeastSquaresMovingAverage"];
m0_40 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.LeastSquaresMovingAverage"];
m0_40 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.LeastSquaresMovingAverage"];
m0_40 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.LeastSquaresMovingAverage"];
m0_40 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.LeastSquaresMovingAverage"];
m0_40 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.LeastSquaresMovingAverage"];
m0_40 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.LeastSquaresMovingAverage"];
m0_40 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.LeastSquaresMovingAverage"];
m0_40 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.LeastSquaresMovingAverage"];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m1_0 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m1_0 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m1_0 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m1_0 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_0 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m1_0 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m1_0 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=quoteCash];
m1_1 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=quoteCash];
m1_1 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=quoteCash];
m1_1 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=quoteCash];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=isLong];
m1_2 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=isLong];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=isShort];
m1_3 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label=isShort];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_5 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_5 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_5 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_5 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=absoluteHoldingsQuantity];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m1_7 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m1_7 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m1_7 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m1_7 -> m1_7  [key=3, color=darkorchid, style=bold, label="Property variable QuantConnect.Symbol Symbol"];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_12  [key=0, style=solid];
m1_8 -> m1_8  [key=3, color=darkorchid, style=bold, label="Property variable decimal Price"];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_64  [key=2, style=dotted];
m1_11 -> m1_15  [key=0, style=solid];
m1_11 -> m1_65  [key=2, style=dotted];
m1_11 -> m1_11  [key=3, color=darkorchid, style=bold, label="Property variable string PriceCurrency"];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_64  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_65  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_66  [key=2, style=dotted];
m1_15 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=feeThisOrder];
m1_15 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=feeThisOrder];
m1_15 -> m1_15  [key=3, color=darkorchid, style=bold, label="Property variable decimal Quantity"];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_67  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_68  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_20  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_69  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_23  [key=0, style=solid];
m1_20 -> m1_20  [key=3, color=darkorchid, style=bold, label="Property variable QuantConnect.Orders.OrderStatus Status"];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_69  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_70  [key=2, style=dotted];
m1_25 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=absoluteQuantityClosed];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_71  [key=2, style=dotted];
m1_26 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=closedSaleValueInQuoteCurrency];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_71  [key=2, style=dotted];
m1_27 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=closedCost];
m1_28 -> m1_29  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_69  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_72  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_73  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_74  [key=2, style=dotted];
m1_34 -> m1_75  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m1_37 -> m1_60  [key=0, style=solid];
m1_37 -> m1_62  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_43  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m1_41 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m1_42 -> m1_60  [key=0, style=solid];
m1_42 -> m1_62  [key=0, style=solid];
m1_42 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_42 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_44 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_44 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_46 -> m1_60  [key=0, style=solid];
m1_46 -> m1_62  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_57  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_52 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_52 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_52 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_54 -> m1_60  [key=0, style=solid];
m1_54 -> m1_62  [key=0, style=solid];
m1_54 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m1_58 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_62  [key=0, style=solid];
m1_59 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=quantityHoldings];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_77  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_13  [key=3, color=darkorchid, style=bold, label="Property variable System.DateTime Time"];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_49  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_60  [key=0, style=solid];
m1_49 -> m1_62  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_38  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_35  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
m1_29 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
m1_29 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
m1_29 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=lastTradeProfit];
m1_40 -> m1_41  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_60  [key=0, style=solid];
m1_47 -> m1_62  [key=0, style=solid];
m1_48 -> m1_60  [key=0, style=solid];
m1_48 -> m1_62  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_55  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_60  [key=0, style=solid];
m1_55 -> m1_62  [key=0, style=solid];
m1_56 -> m1_60  [key=0, style=solid];
m1_56 -> m1_62  [key=0, style=solid];
m1_56 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=averageHoldingsPrice];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_76  [key=2, style=dotted];
m1_63 -> m1_0  [key=0, style=bold, color=blue];
}
