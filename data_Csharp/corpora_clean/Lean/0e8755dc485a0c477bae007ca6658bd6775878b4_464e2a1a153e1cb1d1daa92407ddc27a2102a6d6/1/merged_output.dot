digraph  {
n528 [label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", span=""];
n0 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="56-56"];
n1 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", label="Security msft", span="58-58"];
n2 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="59-59"];
n3 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", label="Update(msft, 25)", span="61-61"];
n7 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", span="1097-1097"];
n4 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="62-62"];
n8 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", span="1121-1121"];
n5 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", label="Assert.AreEqual(2000, actual)", span="63-63"];
n9 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="558-558"];
n6 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong(decimal)", span="56-56"];
n10 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
n11 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", span="67-67"];
n12 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", label="Security msft", span="69-69"];
n13 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="70-70"];
n14 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="72-72"];
n15 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="73-73"];
n16 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(1999, actual)", span="75-75"];
n17 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_SmallConstantFeeStructure(decimal)", span="67-67"];
n18 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", span="79-79"];
n19 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", label="Security msft", span="81-81"];
n20 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="82-82"];
n21 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="84-84"];
n22 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="85-85"];
n23 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(1600, actual)", span="87-87"];
n24 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToLong_HighConstantFeeStructure(decimal)", span="79-79"];
n25 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", span="91-91"];
n26 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", label="Security msft", span="93-93"];
n27 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="94-94"];
n28 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", label="Update(msft, 25)", span="96-96"];
n29 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="97-97"];
n30 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", label="Assert.AreEqual(-2000, actual)", span="98-98"];
n31 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort(decimal)", span="91-91"];
n32 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="102-102"];
n33 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", label="Security msft", span="104-104"];
n34 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="105-105"];
n35 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="107-107"];
n36 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="108-108"];
n37 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(-1999, actual)", span="109-109"];
n38 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_SmallConstantFeeStructure(decimal)", span="102-102"];
n39 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="113-113"];
n40 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", label="Security msft", span="115-115"];
n41 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="116-116"];
n42 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="118-118"];
n43 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="119-119"];
n44 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(-1600, actual)", span="120-120"];
n45 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ZeroToShort_HighConstantFeeStructure(decimal)", span="113-113"];
n46 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="124-124"];
n47 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", label="Security msft", span="126-126"];
n48 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="127-127"];
n49 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", label="Update(msft, 25)", span="129-129"];
n50 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", label="algo.Portfolio.SetCash(50000)", span="131-131"];
n51 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="132-132"];
n52 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="134-134"];
n55 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="467-467"];
n56 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="343-343"];
n53 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", label="Assert.AreEqual(1000, actual)", span="135-135"];
n54 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger(decimal)", span="124-124"];
n57 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="139-139"];
n58 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", label="Security msft", span="141-141"];
n59 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="142-142"];
n60 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="144-144"];
n61 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="146-146"];
n62 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="147-147"];
n63 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="149-149"];
n64 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(999, actual)", span="150-150"];
n65 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_SmallConstantFeeStructure(decimal)", span="139-139"];
n66 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="154-154"];
n67 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", label="Security msft", span="156-156"];
n68 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="157-157"];
n69 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="159-159"];
n70 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="161-161"];
n71 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="162-162"];
n72 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="164-164"];
n73 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(600, actual)", span="165-165"];
n74 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_HighConstantFeeStructure(decimal)", span="154-154"];
n75 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="169-169"];
n76 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", label="Security msft", span="171-171"];
n77 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="172-172"];
n78 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", label="Update(msft, 25)", span="174-174"];
n79 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", label="algo.Portfolio.SetCash(25000)", span="176-176"];
n80 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="177-177"];
n81 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="179-179"];
n82 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", label="Assert.AreEqual(-1000, actual)", span="180-180"];
n83 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong(decimal)", span="169-169"];
n84 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="184-184"];
n85 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", label="Security msft", span="186-186"];
n86 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="187-187"];
n87 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="189-189"];
n88 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(25000)", span="191-191"];
n89 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="192-192"];
n90 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="194-194"];
n91 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(-999, actual)", span="195-195"];
n92 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_SmallConstantFeeStructure(decimal)", span="184-184"];
n93 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="199-199"];
n94 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", label="Security msft", span="201-201"];
n95 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="202-202"];
n96 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="204-204"];
n97 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(25000)", span="206-206"];
n98 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="207-207"];
n99 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="209-209"];
n100 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(-600, actual)", span="210-210"];
n101 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_HighConstantFeeStructure(decimal)", span="199-199"];
n102 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="214-214"];
n103 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", label="Security msft", span="216-216"];
n104 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="217-217"];
n105 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", label="Update(msft, 25)", span="219-219"];
n106 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", label="algo.Portfolio.SetCash(50000)", span="221-221"];
n107 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="222-222"];
n108 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="224-224"];
n109 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", label="Assert.AreEqual(-2000, actual)", span="225-225"];
n110 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero(decimal)", span="214-214"];
n111 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="229-229"];
n112 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", label="Security msft", span="231-231"];
n113 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="232-232"];
n114 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="234-234"];
n115 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="236-236"];
n116 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="237-237"];
n117 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="239-239"];
n118 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(-2000, actual)", span="240-240"];
n119 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_SmallConstantFeeStructure(decimal)", span="229-229"];
n120 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="244-244"];
n121 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", label="Security msft", span="246-246"];
n122 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="247-247"];
n123 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="249-249"];
n124 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="251-251"];
n125 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="252-252"];
n126 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="254-254"];
n127 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(-2000, actual)", span="255-255"];
n128 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToZero_HighConstantFeeStructure(decimal)", span="244-244"];
n129 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="259-259"];
n130 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", label="Security msft", span="261-261"];
n131 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="262-262"];
n132 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", label="Update(msft, 25)", span="264-264"];
n133 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", label="algo.Portfolio.SetCash(50000)", span="266-266"];
n134 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="267-267"];
n135 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="270-270"];
n136 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", label="Assert.AreEqual(-4000, actual)", span="271-271"];
n137 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort(decimal)", span="259-259"];
n138 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="275-275"];
n139 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", label="Security msft", span="277-277"];
n140 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="278-278"];
n141 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="280-280"];
n142 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="282-282"];
n143 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="283-283"];
n144 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="286-286"];
n145 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(-3999, actual)", span="287-287"];
n146 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_SmallConstantFeeStructure(decimal)", span="275-275"];
n147 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="291-291"];
n148 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", label="Security msft", span="293-293"];
n149 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="294-294"];
n150 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="296-296"];
n151 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="298-298"];
n152 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="299-299"];
n153 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="302-302"];
n154 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(-3600, actual)", span="303-303"];
n155 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_HighConstantFeeStructure(decimal)", span="291-291"];
n156 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="307-307"];
n157 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", label="Security msft", span="309-309"];
n158 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="310-310"];
n159 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", label="Update(msft, 25)", span="312-312"];
n160 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", label="algo.Portfolio.SetCash(50000)", span="314-314"];
n161 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="315-315"];
n162 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="318-318"];
n163 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", label="Assert.AreEqual(-6000, actual)", span="319-319"];
n164 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort(decimal)", span="307-307"];
n165 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="323-323"];
n166 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", label="Security msft", span="325-325"];
n167 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="326-326"];
n168 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="328-328"];
n169 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="330-330"];
n170 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="331-331"];
n171 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="334-334"];
n172 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(-5999, actual)", span="335-335"];
n173 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure(decimal)", span="323-323"];
n174 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="339-339"];
n175 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", label="Security msft", span="341-341"];
n176 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="342-342"];
n177 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="344-344"];
n178 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="346-346"];
n179 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="347-347"];
n180 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="350-350"];
n181 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(-5600, actual)", span="351-351"];
n182 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure(decimal)", span="339-339"];
n183 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="355-355"];
n184 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", label="Security msft", span="357-357"];
n185 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="358-358"];
n186 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", label="Update(msft, 25)", span="360-360"];
n187 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", label="algo.Portfolio.SetCash(150000)", span="362-362"];
n188 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="363-363"];
n189 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="365-365"];
n190 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", label="Assert.AreEqual(2000, actual)", span="366-366"];
n191 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero(decimal)", span="355-355"];
n192 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="370-370"];
n193 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", label="Security msft", span="372-372"];
n194 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="373-373"];
n195 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="375-375"];
n196 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(150000)", span="377-377"];
n197 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="378-378"];
n198 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="380-380"];
n199 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(2000, actual)", span="381-381"];
n200 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_SmallConstantFeeStructure(decimal)", span="370-370"];
n201 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="385-385"];
n202 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", label="Security msft", span="387-387"];
n203 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="388-388"];
n204 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="390-390"];
n205 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(150000)", span="392-392"];
n206 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="393-393"];
n207 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0m)", span="395-395"];
n208 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(2000, actual)", span="396-396"];
n209 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToZero_HighConstantFeeStructure(decimal)", span="385-385"];
n210 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="400-400"];
n211 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", label="Security msft", span="402-402"];
n212 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="403-403"];
n213 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", label="Update(msft, 25)", span="405-405"];
n214 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", label="algo.Portfolio.SetCash(150000)", span="407-407"];
n215 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="408-408"];
n216 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="416-416"];
n217 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", label="Assert.AreEqual(-1000, actual)", span="417-417"];
n218 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter(decimal)", span="400-400"];
n219 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="421-421"];
n220 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", label="Security msft", span="423-423"];
n221 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="424-424"];
n222 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="426-426"];
n223 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(150000)", span="428-428"];
n224 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="429-429"];
n225 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="437-437"];
n226 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(-999, actual)", span="438-438"];
n227 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_SmallConstantFeeStructure(decimal)", span="421-421"];
n228 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="442-442"];
n229 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", label="Security msft", span="444-444"];
n230 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="445-445"];
n231 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="447-447"];
n232 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(150000)", span="449-449"];
n233 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="450-450"];
n234 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="458-458"];
n235 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(-600, actual)", span="459-459"];
n236 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_HighConstantFeeStructure(decimal)", span="442-442"];
n237 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="463-463"];
n238 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", label="Security msft", span="465-465"];
n239 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="466-466"];
n240 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", label="Update(msft, 25)", span="468-468"];
n241 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", label="algo.Portfolio.SetCash(150000)", span="470-470"];
n242 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="471-471"];
n243 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="473-473"];
n244 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", label="Assert.AreEqual(4000, actual)", span="474-474"];
n245 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong(decimal)", span="463-463"];
n246 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="478-478"];
n247 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", label="Security msft", span="480-480"];
n248 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="481-481"];
n249 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="483-483"];
n250 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(150000)", span="485-485"];
n251 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="486-486"];
n252 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="488-488"];
n253 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(3999, actual)", span="489-489"];
n254 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_SmallConstantFeeStructure(decimal)", span="478-478"];
n255 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="493-493"];
n256 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", label="Security msft", span="495-495"];
n257 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="496-496"];
n258 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="498-498"];
n259 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(150000)", span="500-500"];
n260 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="501-501"];
n261 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="503-503"];
n262 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(3600, actual)", span="504-504"];
n263 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_HighConstantFeeStructure(decimal)", span="493-493"];
n264 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="508-508"];
n265 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", label="Security msft", span="510-510"];
n266 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="511-511"];
n267 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", label="Update(msft, 25)", span="513-513"];
n273 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1109-1109"];
n268 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", label="algo.Portfolio.SetCash(50000)", span="515-515"];
n269 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="516-516"];
n270 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="519-519"];
n271 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", label="Assert.AreEqual(-4000, actual)", span="520-520"];
n272 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_DifferentMargins(decimal, decimal)", span="508-508"];
n274 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="524-524"];
n275 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Security msft", span="526-526"];
n276 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="527-527"];
n277 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Update(msft, 25)", span="529-529"];
n278 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio.SetCash(50000)", span="531-531"];
n279 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="532-532"];
n280 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="535-535"];
n281 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Assert.AreEqual(-3999, actual)", span="536-536"];
n282 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="524-524"];
n283 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="540-540"];
n284 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Security msft", span="542-542"];
n285 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="543-543"];
n286 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Update(msft, 25)", span="545-545"];
n287 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio.SetCash(50000)", span="547-547"];
n288 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="548-548"];
n289 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="551-551"];
n290 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Assert.AreEqual(-3600, actual)", span="552-552"];
n291 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToHalfShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="540-540"];
n292 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="556-556"];
n293 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", label="Security msft", span="558-558"];
n294 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="559-559"];
n295 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", label="Update(msft, 25)", span="561-561"];
n296 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", label="algo.Portfolio.SetCash(50000)", span="563-563"];
n297 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="564-564"];
n298 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="567-567"];
n299 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", label="Assert.AreEqual(-6000, actual)", span="568-568"];
n300 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_DifferentMargins(decimal, decimal)", span="556-556"];
n301 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="572-572"];
n302 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Security msft", span="574-574"];
n303 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="575-575"];
n304 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Update(msft, 25)", span="577-577"];
n305 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio.SetCash(50000)", span="579-579"];
n306 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="580-580"];
n307 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="583-583"];
n308 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Assert.AreEqual(-5999, actual)", span="584-584"];
n309 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="572-572"];
n310 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="588-588"];
n311 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Security msft", span="590-590"];
n312 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="591-591"];
n313 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Update(msft, 25)", span="593-593"];
n314 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio.SetCash(50000)", span="595-595"];
n315 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="596-596"];
n316 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -1m)", span="599-599"];
n317 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Assert.AreEqual(-5600, actual)", span="600-600"];
n318 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFullShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="588-588"];
n319 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="604-604"];
n320 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", label="Security msft", span="606-606"];
n321 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 0)", span="607-607"];
n322 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", label="Update(msft, 25)", span="609-609"];
n323 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", label="algo.Portfolio.SetCash(50000)", span="611-611"];
n324 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="612-612"];
n325 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="615-615"];
n326 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", label="Assert.AreEqual(-10000, actual)", span="616-616"];
n327 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_DifferentMargins(decimal, decimal)", span="604-604"];
n328 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="620-620"];
n329 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Security msft", span="622-622"];
n330 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 1)", span="623-623"];
n331 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Update(msft, 25)", span="625-625"];
n332 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio.SetCash(50000)", span="627-627"];
n333 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="628-628"];
n334 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="631-631"];
n335 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Assert.AreEqual(-9999, actual)", span="632-632"];
n336 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_SmallConstantFeeStructure_DifferentMargins(decimal, decimal)", span="620-620"];
n337 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="636-636"];
n338 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Security msft", span="638-638"];
n339 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var algo = GetAlgorithm(out msft, initialMarginRequirement, maintenanceMarginRequirement, 10000)", span="639-639"];
n340 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Update(msft, 25)", span="641-641"];
n341 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio.SetCash(50000)", span="643-643"];
n342 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="644-644"];
n343 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -2m)", span="647-647"];
n344 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Assert.AreEqual(-9200, actual)", span="648-648"];
n345 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_HalfLongToFull2xShort_HighConstantFeeStructure_DifferentMargins(decimal, decimal)", span="636-636"];
n346 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="657-657"];
n347 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", label="Security msft", span="659-659"];
n348 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="660-660"];
n349 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", label="Update(msft, 25)", span="662-662"];
n350 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", label="algo.Portfolio.SetCash(50000)", span="665-665"];
n351 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="666-666"];
n352 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", label="Update(msft, 50)", span="669-669"];
n353 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="673-673"];
n354 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", label="Assert.AreEqual(-500, actual)", span="676-676"];
n355 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise(decimal)", span="657-657"];
n356 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="680-680"];
n357 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", label="Security msft", span="682-682"];
n358 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="683-683"];
n359 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="685-685"];
n360 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="688-688"];
n361 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="689-689"];
n362 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", label="Update(msft, 50)", span="692-692"];
n363 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="696-696"];
n364 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(-499, actual)", span="699-699"];
n365 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_SmallConstantFeeStructure(decimal)", span="680-680"];
n366 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="703-703"];
n367 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", label="Security msft", span="705-705"];
n368 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="706-706"];
n369 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="708-708"];
n370 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="711-711"];
n371 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="712-712"];
n372 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", label="Update(msft, 50)", span="715-715"];
n373 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="719-719"];
n374 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(-300, actual)", span="722-722"];
n375 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongFixed_PriceRise_HighConstantFeeStructure(decimal)", span="703-703"];
n376 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="726-726"];
n377 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", label="Security msft", span="728-728"];
n378 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="729-729"];
n379 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", label="Update(msft, 25)", span="731-731"];
n380 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", label="algo.Portfolio.SetCash(50000)", span="733-733"];
n381 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="734-734"];
n382 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", label="Update(msft, 50)", span="737-737"];
n383 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="741-741"];
n384 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", label="Assert.AreEqual(250, actual)", span="744-744"];
n385 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise(decimal)", span="726-726"];
n386 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="748-748"];
n387 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", label="Security msft", span="750-750"];
n388 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 1)", span="751-751"];
n389 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", label="Update(msft, 25)", span="753-753"];
n390 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="755-755"];
n391 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="756-756"];
n392 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", label="Update(msft, 50)", span="759-759"];
n393 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="763-763"];
n394 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", label="Assert.AreEqual(249, actual)", span="766-766"];
n395 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_SmallConstantFeeStructure(decimal)", span="748-748"];
n396 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="770-770"];
n397 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", label="Security msft", span="772-772"];
n398 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 10000)", span="773-773"];
n399 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", label="Update(msft, 25)", span="775-775"];
n400 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", label="algo.Portfolio.SetCash(50000)", span="777-777"];
n401 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="778-778"];
n402 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", label="Update(msft, 50)", span="781-781"];
n403 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.75m)", span="785-785"];
n404 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", label="Assert.AreEqual(50, actual)", span="788-788"];
n405 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToLonger_PriceRise_HighConstantFeeStructure(decimal)", span="770-770"];
n406 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="792-792"];
n407 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", label="Security msft", span="794-794"];
n408 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="795-795"];
n409 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", label="Update(msft, 25)", span="797-797"];
n410 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", label="algo.Portfolio.SetCash(25000)", span="800-800"];
n411 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 3000)", span="801-801"];
n412 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", label="Update(msft, 50)", span="804-804"];
n413 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="808-808"];
n414 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", label="Assert.AreEqual(-1250, actual)", span="811-811"];
n415 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongerToLong_PriceRise(decimal)", span="792-792"];
n416 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="815-815"];
n417 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", label="Security msft", span="817-817"];
n418 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="818-818"];
n419 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", label="Update(msft, 25)", span="820-820"];
n420 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", label="algo.Portfolio.SetCash(50000)", span="822-822"];
n421 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, 2000)", span="823-823"];
n422 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", label="Update(msft, 50)", span="826-826"];
n423 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="829-829"];
n424 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", label="Assert.AreEqual(-3500, actual)", span="832-832"];
n425 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_LongToShort_PriceRise(decimal)", span="815-815"];
n426 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="836-836"];
n427 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", label="Security msft", span="838-838"];
n428 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="839-839"];
n429 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", label="Update(msft, 25)", span="841-841"];
n430 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", label="algo.Portfolio.SetCash(150000)", span="843-843"];
n431 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="844-844"];
n432 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", label="Update(msft, 50)", span="847-847"];
n433 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="852-852"];
n434 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.75m)", span="855-855"];
n435 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", label="Assert.AreEqual(1250, actual)", span="858-858"];
n436 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToShorter_PriceRise(decimal)", span="836-836"];
n437 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="862-862"];
n438 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", label="Security msft", span="864-864"];
n439 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="865-865"];
n440 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", label="Update(msft, 25)", span="867-867"];
n441 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", label="algo.Portfolio.SetCash(150000)", span="869-869"];
n442 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="870-870"];
n443 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", label="Update(msft, 50m)", span="873-873"];
n444 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="876-876"];
n445 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", label="Assert.AreEqual(2500, actual)", span="879-879"];
n446 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise_ZeroValue(decimal)", span="862-862"];
n447 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="883-883"];
n448 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", label="Security msft", span="885-885"];
n449 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="886-886"];
n450 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", label="Update(msft, 25)", span="888-888"];
n451 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", label="algo.Portfolio.SetCash(150000)", span="890-890"];
n452 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="891-891"];
n453 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", label="Update(msft, 50m)", span="894-894"];
n454 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", label="Assert.AreEqual(50000, algo.Portfolio.TotalPortfolioValue)", span="899-899"];
n455 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, 0.5m)", span="902-902"];
n456 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", label="Assert.AreEqual(2500, actual)", span="905-905"];
n457 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortToLong_PriceRise(decimal)", span="883-883"];
n458 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="915-915"];
n459 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", label="Security msft", span="917-917"];
n460 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", label="var algo = GetAlgorithm(out msft, leverage, 0)", span="918-918"];
n461 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", label="Update(msft, 25)", span="920-920"];
n462 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", label="algo.Portfolio.SetCash(150000)", span="922-922"];
n463 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", label="algo.Portfolio[Symbols.MSFT].SetHoldings(25, -2000)", span="923-923"];
n464 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", label="Update(msft, 12.5m)", span="925-925"];
n465 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", label="var actual = algo.CalculateOrderQuantity(Symbols.MSFT, -0.5m)", span="934-934"];
n466 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", label="Assert.AreEqual(-3000, actual)", span="935-935"];
n467 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_ShortFixed_PriceFall(decimal)", span="915-915"];
n468 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="943-943"];
n469 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", label="var algo = new QCAlgorithm()", span="945-945"];
n470 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="946-946"];
n479 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90"];
n471 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", label="algo.SetCash(100000)", span="947-947"];
n472 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="948-948"];
n473 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="949-949"];
n474 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="950-950"];
n476 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", label="var actual = algo.CalculateOrderQuantity(''EURUSD'', 1m)", span="954-954"];
n480 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1188-1188"];
n481 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="954-954"];
n482 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="838-838"];
n483 [cluster="QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", label="Entry QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", span="31-31"];
n475 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", label="Update(eurusd, 26)", span="952-952"];
n477 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", label="Assert.AreEqual(3000m, actual)", span="955-955"];
n478 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_RoundOff()", span="943-943"];
n484 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="960-960"];
n485 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", label="var algo = new QCAlgorithm()", span="962-962"];
n486 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="963-963"];
n487 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", label="algo.SetCash(100000)", span="964-964"];
n488 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="965-965"];
n489 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="966-966"];
n490 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="967-967"];
n492 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", label="var actual = algo.CalculateOrderQuantity(''EURUSD'', -1m)", span="971-971"];
n491 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", label="Update(eurusd, 26)", span="969-969"];
n493 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", label="Assert.AreEqual(-3000m, actual)", span="972-972"];
n494 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Short_RoundOff()", span="960-960"];
n495 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", label="Entry QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="976-976"];
n496 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", label="var algo = new QCAlgorithm()", span="978-978"];
n497 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", label="algo.AddSecurity(SecurityType.Forex, ''EURUSD'')", span="979-979"];
n498 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", label="algo.SetCash(10000)", span="980-980"];
n499 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", label="algo.SetBrokerageModel(BrokerageName.FxcmBrokerage)", span="981-981"];
n500 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", label="algo.Securities[Symbols.EURUSD].TransactionModel = new ConstantFeeTransactionModel(0)", span="982-982"];
n501 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", label="Security eurusd = algo.Securities[Symbols.EURUSD]", span="983-983"];
n503 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", label="var actual = algo.CalculateOrderQuantity(''EURUSD'', 1m)", span="987-987"];
n502 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", label="Update(eurusd, 25)", span="985-985"];
n504 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", label="Assert.AreEqual(0m, actual)", span="988-988"];
n505 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.SetHoldings_Long_ToZero_RoundOff()", span="976-976"];
n506 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", label="var algo = new QCAlgorithm()", span="1100-1100"];
n509 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1103-1103"];
n511 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", label="msft.SetLeverage(leverage)", span="1105-1105"];
n507 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1101-1101"];
n508 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", label="algo.SetCash(100000)", span="1102-1102"];
n510 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", label="msft = algo.Securities[Symbols.MSFT]", span="1104-1104"];
n512 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", label="return algo;", span="1106-1106"];
n513 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal)", span="1097-1097"];
n514 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="606-606"];
n515 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", label="var algo = new QCAlgorithm()", span="1112-1112"];
n518 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", label="algo.Securities[Symbols.MSFT].TransactionModel = new ConstantFeeTransactionModel(fee)", span="1115-1115"];
n520 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", label="msft.MarginModel = new SecurityMarginModel(initialMarginRequirement, maintenanceMarginRequirement)", span="1117-1117"];
n516 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", label="algo.AddSecurity(SecurityType.Equity, ''MSFT'')", span="1113-1113"];
n517 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", label="algo.SetCash(100000)", span="1114-1114"];
n519 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", label="msft = algo.Securities[Symbols.MSFT]", span="1116-1116"];
n521 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", label="return algo;", span="1118-1118"];
n522 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.GetAlgorithm(out QuantConnect.Securities.Security, decimal, decimal, decimal)", span="1109-1109"];
n523 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="35-35"];
n524 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", label="security.SetMarketPrice(new TradeBar\r\n            {\r\n                Time = DateTime.Now,\r\n                Symbol = security.Symbol,\r\n                Open = close,\r\n                High = close,\r\n                Low = close,\r\n                Close = close\r\n            })", span="1123-1131"];
n525 [cluster="QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmTradingTests.Update(QuantConnect.Securities.Security, decimal)", span="1121-1121"];
n526 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="121-121"];
n527 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="581-581"];
m1_276 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="610-610"];
m1_316 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="445-445"];
m1_246 [cluster="System.Type.GetMethods()", file="BrokerageSetupHandler.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m1_309 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="247-247"];
m1_321 [cluster="System.Reflection.MethodBase.GetParameters()", file="BrokerageSetupHandler.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m1_245 [cluster="object.GetType()", file="BrokerageSetupHandler.cs", label="Entry object.GetType()", span="0-0"];
m1_275 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83"];
m1_129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.RunTimeError = err", span="418-418"];
m1_141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="444-444"];
m1_258 [cluster="QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", span="41-41"];
m1_139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_liveMode || algorithm.Securities[split.Symbol].DataNormalizationMode == DataNormalizationMode.Raw", span="440-440"];
m1_315 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
m1_444 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_300 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
m1_126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="timeSlice.SecurityChanges != SecurityChanges.None", span="410-410"];
m1_169 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.RunTimeError = err", span="515-515"];
m1_190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="hasOnDataQuoteBars && timeSlice.Slice.QuoteBars.Count > 0", span="563-563"];
m1_191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="methodInvokers[typeof(QuoteBars)](algorithm, timeSlice.Slice.QuoteBars)", span="563-563"];
m1_192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="hasOnDataOptionChains && timeSlice.Slice.OptionChains.Count > 0", span="564-564"];
m1_193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="methodInvokers[typeof(OptionChains)](algorithm, timeSlice.Slice.OptionChains)", span="564-564"];
m1_440 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
m1_317 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="181-181"];
m1_430 [cluster="Unk.ToList", file="BrokerageSetupHandler.cs", label="Entry Unk.ToList", span=""];
m1_536 [cluster="decimal.SmartRounding()", file="BrokerageSetupHandler.cs", label="Entry decimal.SmartRounding()", span="206-206"];
m1_125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="nextSettlementScanTime = time + settlementScanFrequency", span="406-406"];
m1_314 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="213-213"];
m1_310 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="387-387"];
m1_282 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="367-367"];
m1_168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=Exception, span="513-513"];
m1_135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.Portfolio.ApplyDividend(dividend)", span="429-429"];
m1_132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="return;", span="421-421"];
m1_285 [cluster="string.Format(string, object)", file="BrokerageSetupHandler.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_7 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="return null;", span="114-114"];
m1_10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_dataPointCount = 0", span="134-134"];
m1_9 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", span="131-131"];
m1_11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm = algorithm", span="135-135"];
m1_8 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="108-115"];
m1_12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="136-136"];
m1_13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="137-137"];
m1_14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="138-138"];
m1_15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="139-139"];
m1_292 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_433 [cluster="Unk.Any", file="BrokerageSetupHandler.cs", label="Entry Unk.Any", span=""];
m1_528 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m1_293 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
m1_43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Stream(job, algorithm, feed, results, token)", span="198-198"];
m1_16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var nextMarginCallTime = DateTime.MinValue", span="140-140"];
m1_284 [cluster="string.Format(string, params object[])", file="BrokerageSetupHandler.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m1_189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="562-562"];
m1_437 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_441 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="349-349"];
m1_425 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="502-502"];
m1_263 [cluster="QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", span="38-38"];
m1_172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="return;", span="518-518"];
m1_328 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m1_439 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m1_173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="525-525"];
m1_436 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m1_261 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m1_274 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="82-82"];
m1_247 [cluster="Unk.Where", file="BrokerageSetupHandler.cs", label="Entry Unk.Where", span=""];
m1_288 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="343-343"];
m1_260 [cluster="QuantConnect.Commands.ICommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Commands.ICommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="29-29"];
m1_5 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="CurrentTimeStepElapsed > _timeLoopMaximum", span="110-110"];
m1_243 [cluster="System.Collections.Generic.List<T>.List()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_290 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="595-595"];
m1_183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="return;", span="543-543"];
m1_429 [cluster="Unk.Min", file="BrokerageSetupHandler.cs", label="Entry Unk.Min", span=""];
m1_29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var hasOnDataDelistings = AddMethodInvoker<Delistings>(algorithm, methodInvokers)", span="162-162"];
m1_4 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="69-69"];
m1_6 [cluster="System.TimeSpan.FromDays(double)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m1_323 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.DeclaringType == algorithm.GetType()", span="168-168"];
m1_318 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="167-167"];
m1_322 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="168-168"];
m1_326 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.Status.IsOpen() && x.Symbol == symbol", span="286-286"];
m1_325 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="286-286"];
m1_330 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="443-443"];
m1_329 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="443-443"];
m1_332 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="557-557"];
m1_319 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="167-167"];
m1_320 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="167-167"];
m1_324 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="168-168"];
m1_327 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="286-286"];
m1_331 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="443-443"];
m1_333 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.Key.ID.SecurityType == SecurityType.Forex", span="557-557"];
m1_334 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="557-557"];
m1_446 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="702-702"];
m1_449 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="711-711"];
m1_452 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="712-712"];
m1_455 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="727-727"];
m1_458 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="729-729"];
m1_461 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="729-729"];
m1_464 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="730-730"];
m1_467 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="818-818"];
m1_447 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.Value.Configuration.Resolution.ToTimeSpan()", span="702-702"];
m1_448 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="702-702"];
m1_450 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="!x.IsInternalFeed", span="711-711"];
m1_451 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="711-711"];
m1_453 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.Resolution", span="712-712"];
m1_454 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="712-712"];
m1_456 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.FillForwardResolution.HasValue", span="727-727"];
m1_457 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="727-727"];
m1_459 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.FillForwardResolution.HasValue", span="729-729"];
m1_460 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="729-729"];
m1_462 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.FillForwardResolution.Value", span="729-729"];
m1_463 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="729-729"];
m1_465 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.FillForwardResolution.HasValue", span="730-730"];
m1_466 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="730-730"];
m1_468 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label=x, span="818-818"];
m1_469 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="818-818"];
m1_502 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="x.Symbol == delisting.Symbol && x.Type == delisting.Type", span="914-914"];
m1_501 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Entry lambda expression", span="914-914"];
m1_503 [cluster="lambda expression", file="BrokerageSetupHandler.cs", label="Exit lambda expression", span="914-914"];
m1_156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="consolidator.Scan(localTime)", span="482-482"];
m1_157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=Exception, span="486-486"];
m1_158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.RunTimeError = err", span="488-488"];
m1_159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="489-489"];
m1_160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="490-490"];
m1_161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="return;", span="491-491"];
m1_163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="MethodInvoker methodInvoker", span="497-497"];
m1_179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=Exception, span="538-538"];
m1_162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="timeSlice.CustomData", span="495-495"];
m1_155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var localTime = time.ConvertFromUtc(update.Target.ExchangeTimeZone)", span="481-481"];
m1_164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="!methodInvokers.TryGetValue(update.DataType, out methodInvoker)", span="498-498"];
m1_165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="update.Data", span="505-505"];
m1_167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="methodInvoker(algorithm, dataPoint)", span="509-509"];
m1_175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="529-529"];
m1_178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="535-535"];
m1_180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.RunTimeError = err", span="540-540"];
m1_184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="HandleDelistedSymbols(algorithm, timeSlice.Slice.Delistings, delistings)", span="547-547"];
m1_152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var algorithmTimeSpan = resolutionTimeSpan == TimeSpan.FromTicks(0)\r\n                                    ? TimeSpan.FromTicks(0)\r\n                                    : TimeSpan.FromSeconds(1)", span="471-473"];
m1_166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="update.DataType.IsInstanceOfType(dataPoint)", span="507-507"];
m1_151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="update.Data", span="465-465"];
m1_176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="531-531"];
m1_177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="533-533"];
m1_186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="timeSlice.Slice.QuoteBars.Where(x => x.Key.ID.SecurityType == SecurityType.Forex)", span="557-557"];
m1_185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="timeSlice.Slice.QuoteBars.Count > 0", span="555-555"];
m1_44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_currentTimeStepTime = DateTime.UtcNow", span="201-201"];
m1_150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=consolidators, span="463-463"];
m1_153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.UtcTime.RoundDown(algorithmTimeSpan) == dataPoint.EndTime.RoundUp(resolutionTimeSpan).ConvertToUtc(update.Target.ExchangeTimeZone)", span="474-474"];
m1_21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status = AlgorithmStatus.Running", span="148-148"];
m1_22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_previousTime = algorithm.StartDate.Date", span="149-149"];
m1_24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var hasOnDataQuoteBars = AddMethodInvoker<QuoteBars>(algorithm, methodInvokers)", span="155-155"];
m1_45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status != AlgorithmStatus.Running", span="204-204"];
m1_46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="206-206"];
m1_20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithmId = job.AlgorithmId", span="147-147"];
m1_23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="154-154"];
m1_25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var hasOnDataOptionChains = AddMethodInvoker<OptionChains>(algorithm, methodInvokers)", span="156-156"];
m1_30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var hasOnDataSymbolChangedEvents = AddMethodInvoker<SymbolChangedEvents>(algorithm, methodInvokers)", span="163-163"];
m1_31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var hasOnDataSlice = algorithm.GetType().GetMethods()\r\n                .Where(x => x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice))\r\n                .FirstOrDefault(x => x.DeclaringType == algorithm.GetType()) != null", span="166-168"];
m1_483 [cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38"];
m1_123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="time >= nextSettlementScanTime || (_liveMode && nextSettlementScanTime > DateTime.UtcNow)", span="402-402"];
m1_442 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="496-496"];
m1_277 [cluster="QuantConnect.Statistics.TradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Statistics.TradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="104-104"];
m1_525 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m1_537 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="165-165"];
m1_298 [cluster="System.DateTime.RoundUp(System.TimeSpan)", file="BrokerageSetupHandler.cs", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="509-509"];
m1_33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="config.IsCustomData", span="174-174"];
m1_37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="185-185"];
m1_38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="186-186"];
m1_34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="177-177"];
m1_35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="methodInvokers.ContainsKey(config.Type)", span="180-180"];
m1_39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="return;", span="187-187"];
m1_36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="genericMethod == null && !hasOnDataSlice", span="183-183"];
m1_40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="genericMethod != null", span="189-189"];
m1_127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="414-414"];
m1_286 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="372-372"];
m1_291 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="615-615"];
m1_142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=Exception, span="447-447"];
m1_253 [cluster="Unk.Add", file="BrokerageSetupHandler.cs", label="Entry Unk.Add", span=""];
m1_171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="517-517"];
m1_269 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="422-422"];
m1_265 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="983-983"];
m1_529 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BrokerageSetupHandler.cs", label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="988-988"];
m1_531 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BrokerageSetupHandler.cs", label="algorithm.RunTimeError = err", span="992-992"];
m1_530 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BrokerageSetupHandler.cs", label=Exception, span="990-990"];
m1_532 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BrokerageSetupHandler.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="993-993"];
m1_533 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="994-994"];
m1_534 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="983-983"];
m1_268 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="157-157"];
m1_273 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="123-123"];
m1_267 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="149-149"];
m1_435 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
m1_299 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="BrokerageSetupHandler.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="558-558"];
m1_130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="419-419"];
m1_307 [cluster="Unk.Collapse", file="BrokerageSetupHandler.cs", label="Entry Unk.Collapse", span=""];
m1_308 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="337-337"];
m1_47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="token.IsCancellationRequested", span="211-211"];
m1_311 [cluster="System.Exception.Exception(string, System.Exception)", file="BrokerageSetupHandler.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m1_124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="404-404"];
m1_254 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m1_313 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="114-114"];
m1_181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="541-541"];
m1_427 [cluster="Unk.Select", file="BrokerageSetupHandler.cs", label="Entry Unk.Select", span=""];
m1_271 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
m1_27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="160-160"];
m1_301 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="BrokerageSetupHandler.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="546-546"];
m1_445 [cluster="Unk.Subtract", file="BrokerageSetupHandler.cs", label="Entry Unk.Subtract", span=""];
m1_32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.SubscriptionManager.Subscriptions", span="171-171"];
m1_303 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="197-197"];
m1_280 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="934-934"];
m1_504 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="var i = delistings.Count - 1", span="936-936"];
m1_506 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="var security = algorithm.Securities[delistings[i].Symbol]", span="939-939"];
m1_508 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="var delistingTime = delistings[i].Time", span="943-943"];
m1_514 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="var underlying = algorithm.Securities[security.Symbol.Underlying]", span="954-954"];
m1_517 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option exercise on expiration'')", span="959-960"];
m1_518 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option assignment on expiration'')", span="964-965"];
m1_519 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="970-971"];
m1_520 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="algorithm.Transactions.ProcessRequest(request)", span="974-974"];
m1_521 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="delistings.RemoveAt(i)", span="976-976"];
m1_505 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="i >= 0", span="936-936"];
m1_522 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="i--", span="936-936"];
m1_507 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="security.Holdings.Quantity == 0", span="940-940"];
m1_509 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="var nextMarketOpen = security.Exchange.Hours.GetNextMarketOpen(delistingTime, false)", span="944-944"];
m1_510 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(nextMarketOpen, false)", span="945-945"];
m1_511 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="security.LocalTime < nextMarketClose", span="947-947"];
m1_513 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="security.Type == SecurityType.Option", span="952-952"];
m1_515 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="var option = (Option)security", span="955-955"];
m1_516 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="security.Holdings.Quantity > 0", span="957-957"];
m1_512 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="SubmitOrderRequest request", span="950-950"];
m1_523 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="934-934"];
m1_305 [cluster="Unk.methodInvoker", file="BrokerageSetupHandler.cs", label="Entry Unk.methodInvoker", span=""];
m1_438 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
m1_272 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="258-258"];
m1_144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="450-450"];
m1_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m1_28 [cluster="Unk.Single", file="BrokerageSetupHandler.cs", label="Entry Unk.Single", span=""];
m1_50 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var liveJob = job as LiveNodePacket", span="145-145"];
m1_54 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="string.IsNullOrWhiteSpace(liveJob.Brokerage)", span="153-153"];
m1_57 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="EventHandler<BrokerageMessageEvent> brokerageOnMessage = (sender, args) =>\r\n            {\r\n                if (args.Type == BrokerageMessageType.Error)\r\n                {\r\n                    AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message));\r\n                }\r\n            }", span="161-167"];
m1_59 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="resultHandler.SendStatusUpdate(AlgorithmStatus.Initializing, ''Initializing algorithm...'')", span="173-173"];
m1_64 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Initialization timed out.'')", span="211-211"];
m1_65 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="212-212"];
m1_67 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="brokerage.Message += brokerageOnMessage", span="218-218"];
m1_68 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.Transactions.SetOrderProcessor(transactionHandler)", span="220-220"];
m1_69 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.PostInitialize()", span="221-221"];
m1_70 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Connecting to brokerage...'')", span="223-223"];
m1_71 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="brokerage.Connect()", span="227-227"];
m1_74 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(string.Format(''Error connecting to brokerage: {0}. '' +\r\n                        ''This may be caused by incorrect login credentials or an unsupported account type.'', err.Message))", span="232-233"];
m1_76 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!brokerage.IsConnected", span="237-237"];
m1_80 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var cashBalance = brokerage.GetCashBalance()", span="248-248"];
m1_81 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=cashBalance, span="249-249"];
m1_90 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=openOrders, span="267-267"];
m1_91 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Has open order: '' + order.Symbol.ToString() + '' - '' + order.Quantity)", span="270-270"];
m1_92 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="order.Id = algorithm.Transactions.GetIncrementOrderId()", span="271-271"];
m1_93 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="transactionHandler.Orders.AddOrUpdate(order.Id, order, (i, o) => order)", span="272-272"];
m1_94 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="275-275"];
m1_96 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Error getting open orders from brokerage: '' + err.Message)", span="278-278"];
m1_98 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching holdings from brokerage...'')", span="282-282"];
m1_101 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var minResolution = new Lazy<Resolution>(() => algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min())", span="288-288"];
m1_104 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!supportedSecurityTypes.Contains(holding.Type)", span="294-294"];
m1_106 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Found unsupported security type in existing brokerage holdings: '' + holding.Type + ''. '' +\r\n                                ''QuantConnect currently supports the following security types: '' + string.Join('','', supportedSecurityTypes))", span="297-298"];
m1_108 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Adding unrequested security: '' + holding.Symbol.ToString())", span="306-306"];
m1_110 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0, file="BrokerageSetupHandler.cs", label="4: algorithm.Portfolio[holding.Symbol].SetHoldings(holding.AveragePrice, (int) holding.Quantity)", span="310-310"];
m1_116 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="StartingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="332-332"];
m1_118 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="335-335"];
m1_134 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="478-478"];
m1_137 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="334-334"];
m1_138 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m1_140 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m1_143 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m1_174 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m1_195 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", span=""];
m1_197 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=liveJob, span=""];
m1_202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=order, span=""];
m1_204 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.RunTimeError = err", span="585-585"];
m1_208 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="transactions.ProcessSynchronousEvents()", span="593-593"];
m1_210 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.ProcessSynchronousEvents()", span="599-599"];
m1_213 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.OnEndOfAlgorithm()", span="609-609"];
m1_216 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="614-614"];
m1_219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.ProcessSynchronousEvents(forceProcess: true)", span="620-620"];
m1_222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.Liquidate()", span="626-626"];
m1_223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.LogMessage(''Algorithm Liquidated'')", span="627-627"];
m1_224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="628-628"];
m1_227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.LogMessage(''Algorithm Stopped'')", span="635-635"];
m1_228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="636-636"];
m1_231 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="643-643"];
m1_232 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SendStatusUpdate(AlgorithmStatus.Deleted)", span="644-644"];
m1_233 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SendStatusUpdate(AlgorithmStatus.Completed)", span="648-648"];
m1_234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SampleRange(algorithm.GetChartUpdates())", span="651-651"];
m1_235 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="652-652"];
m1_236 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="SampleBenchmark(algorithm, results, _previousTime)", span="653-653"];
m1_238 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SamplePerformance(_previousTime, 0m)", span="658-658"];
m1_239 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SamplePerformance(_previousTime, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="662-662"];
m1_66 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="resultHandler.SendStatusUpdate(AlgorithmStatus.LoggingIn, ''Logging into brokerage...'')", span="216-216"];
m1_237 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="portfolioValue == 0m", span="656-656"];
m1_62 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(300), () =>\r\n                {\r\n                    try\r\n                    {\r\n                        //Set the default brokerage model before initialize\r\n                        algorithm.SetBrokerageModel(_factory.BrokerageModel);\r\n                        //Set our parameters\r\n                        algorithm.SetParameters(job.Parameters);\r\n                        //Algorithm is live, not backtesting:\r\n                        algorithm.SetLiveMode(true);\r\n                        //Initialize the algorithm's starting date\r\n                        algorithm.SetDateTime(DateTime.UtcNow);\r\n                        //Set the source impl for the event scheduling\r\n                        algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n                        //Initialise the algorithm, get the required data:\r\n                        algorithm.Initialize();\r\n                        if (liveJob.Brokerage != ''PaperBrokerage'')\r\n                        {\r\n                            //Zero the CashBook - we'll populate directly from brokerage\r\n                            foreach (var kvp in algorithm.Portfolio.CashBook)\r\n                            {\r\n                                kvp.Value.SetAmount(0);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        AddInitializationError(err.Message);\r\n                    }\r\n                })", span="178-207"];
m1_41 [cluster="System.ArgumentException.ArgumentException(string)", file="BrokerageSetupHandler.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_122 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="354-354"];
m1_17 [cluster="System.TimeSpan.FromSeconds(double)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m1_99 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var holdings = brokerage.GetAccountHoldings()", span="286-286"];
m1_18 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="368-368"];
m1_19 [cluster="System.Exception.Exception(string)", file="BrokerageSetupHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_188 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="354-354"];
m1_194 [cluster="System.IDisposable.Dispose()", file="BrokerageSetupHandler.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m1_73 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="231-231"];
m1_211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_currentTimeStepTime = DateTime.MinValue", span="603-603"];
m1_48 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="140-140"];
m1_60 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var controls = job.Controls", span="176-176"];
m1_61 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var isolator = new Isolator()", span="177-177"];
m1_72 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="229-229"];
m1_75 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="234-234"];
m1_78 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="241-241"];
m1_79 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching cash balance from brokerage...'')", span="244-244"];
m1_82 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Setting '' + cash.Symbol + '' cash to '' + cash.Amount)", span="251-251"];
m1_86 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Error getting cash balance from brokerage: '' + err.Message)", span="258-258"];
m1_133 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="70-70"];
m1_136 [cluster="QuantConnect.Symbol.ToString()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Symbol.ToString()", span="208-208"];
m1_147 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="343-343"];
m1_187 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="BrokerageSetupHandler.cs", label="Errors.Add(''Failed to initialize algorithm: '' + message)", span="356-356"];
m1_201 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=liveJob, span=""];
m1_49 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="_algorithm = algorithm", span="142-142"];
m1_51 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="liveJob == null", span="146-146"];
m1_52 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''BrokerageSetupHandler requires a LiveNodePacket'')", span="148-148"];
m1_58 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Initializing algorithm...'')", span="171-171"];
m1_53 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="149-149"];
m1_55 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''A brokerage must be specified'')", span="155-155"];
m1_56 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="156-156"];
m1_63 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!initializeComplete", span="209-209"];
m1_209 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_previousTime = time", span="596-596"];
m1_77 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Unable to connect to brokerage.'')", span="240-240"];
m1_83 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.Portfolio.SetCash(cash.Symbol, cash.Amount, cash.ConversionRate)", span="252-252"];
m1_84 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="255-255"];
m1_85 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="257-257"];
m1_87 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="259-259"];
m1_88 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching open orders from brokerage...'')", span="262-262"];
m1_89 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var openOrders = brokerage.GetOpenOrders()", span="266-266"];
m1_95 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="277-277"];
m1_97 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="279-279"];
m1_100 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="var supportedSecurityTypes = new HashSet<SecurityType> { SecurityType.Equity, SecurityType.Forex, SecurityType.Cfd }", span="287-287"];
m1_102 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=holdings, span="289-289"];
m1_115 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return false;", span="328-328"];
m1_103 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Trace(''BrokerageSetupHandler.Setup(): Has existing holding: '' + holding)", span="291-291"];
m1_105 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(''BrokerageSetupHandler.Setup(): Unsupported security type: '' + holding.Type + ''-'' + holding.Symbol.Value)", span="296-296"];
m1_112 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label=Exception, span="324-324"];
m1_107 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="!algorithm.Portfolio.ContainsKey(holding.Symbol)", span="304-304"];
m1_109 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.AddSecurity(holding.Type, holding.Symbol.Value, minResolution.Value, null, true, 1.0m, false)", span="308-308"];
m1_111 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="algorithm.Securities[holding.Symbol].SetMarketPrice(new TradeBar\r\n                        {\r\n                            Time = DateTime.Now,\r\n                            Open = holding.MarketPrice,\r\n                            High = holding.MarketPrice,\r\n                            Low = holding.MarketPrice,\r\n                            Close = holding.MarketPrice,\r\n                            Volume = 0,\r\n                            Symbol = holding.Symbol,\r\n                            DataType = MarketDataType.TradeBar\r\n                        })", span="311-321"];
m1_113 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="326-326"];
m1_114 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(''Error getting account holdings from brokerage: '' + err.Message)", span="327-327"];
m1_117 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="StartingDate = DateTime.Now", span="333-333"];
m1_119 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="AddInitializationError(err.Message)", span="337-337"];
m1_120 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="return Errors.Count == 0;", span="347-347"];
m1_121 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="140-140"];
m1_128 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="343-343"];
m1_131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="420-420"];
m1_145 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="129-129"];
m1_146 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="449-449"];
m1_148 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="121-121"];
m1_149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var consolidators = update.Target.Consolidators", span="462-462"];
m1_154 [cluster="string.Format(string, object, object)", file="BrokerageSetupHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_170 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="476-476"];
m1_182 [cluster="Unk.DefaultIfEmpty", file="BrokerageSetupHandler.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m1_196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=algorithmName, span=""];
m1_198 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m1_199 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
m1_200 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span=""];
m1_203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=Exception, span="583-583"];
m1_205 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="586-586"];
m1_206 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="587-587"];
m1_207 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="return;", span="588-588"];
m1_212 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="606-606"];
m1_214 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=Exception, span="611-611"];
m1_215 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="613-613"];
m1_217 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="615-615"];
m1_218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="return;", span="616-616"];
m1_220 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="623-623"];
m1_221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="625-625"];
m1_225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status == AlgorithmStatus.Stopped", span="632-632"];
m1_226 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="634-634"];
m1_229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_algorithm.Status == AlgorithmStatus.Deleted", span="640-640"];
m1_230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="642-642"];
m1_240 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", span="131-131"];
m1_289 [cluster="QuantConnect.Symbol.ToString()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Symbol.ToString()", span="348-348"];
m1_524 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", span="205-205"];
m1_244 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="892-892"];
m1_484 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BrokerageSetupHandler.cs", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="894-894"];
m1_486 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BrokerageSetupHandler.cs", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="897-897"];
m1_485 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BrokerageSetupHandler.cs", label="newSplitMethodInfo != null", span="895-895"];
m1_488 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BrokerageSetupHandler.cs", label="return false;", span="900-900"];
m1_487 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BrokerageSetupHandler.cs", label="return true;", span="898-898"];
m1_489 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="892-892"];
m1_251 [cluster="System.Exception.Exception(string)", file="BrokerageSetupHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_281 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="541-541"];
m1_482 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
m1_252 [cluster="Unk.DelegateForCallMethod", file="BrokerageSetupHandler.cs", label="Entry Unk.DelegateForCallMethod", span=""];
m1_270 [cluster="Unk.]", file="BrokerageSetupHandler.cs", label="Entry Unk.]", span=""];
m1_443 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m1_0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="106-106"];
m1_1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="BrokerageSetupHandler.cs", label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return ''Algorithm took longer than 10 minutes on a single time loop.'';\r\n                }\r\n                return null;\r\n            }", span="108-115"];
m1_2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="BrokerageSetupHandler.cs", label="_liveMode = liveMode", span="116-116"];
m1_3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="106-106"];
m1_255 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="682-682"];
m1_340 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="bool setStartTime = false", span="684-684"];
m1_383 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="yield break;", span="766-766"];
m1_393 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="yield return timeSlice;", span="785-785"];
m1_422 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="yield return timeSlice;", span="854-854"];
m1_341 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var timeZone = algorithm.TimeZone", span="685-685"];
m1_342 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var history = algorithm.HistoryProvider", span="686-686"];
m1_343 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.LiveMode", span="689-689"];
m1_344 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="ProcessVolatilityHistoryRequirements(algorithm)", span="691-691"];
m1_346 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="696-696"];
m1_349 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="701-704"];
m1_352 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="711-711"];
m1_356 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="716-716"];
m1_371 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var security = algorithm.Securities[symbol]", span="752-752"];
m1_379 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="760-760"];
m1_382 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.RunTimeError = err", span="765-765"];
m1_388 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.Debug(''Algorithm warming up...'')", span="775-775"];
m1_392 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="783-783"];
m1_395 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="!algorithm.LiveMode || historyRequests.Count == 0", span="792-792"];
m1_396 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.SetFinishedWarmingUp()", span="794-794"];
m1_397 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SendStatusUpdate(AlgorithmStatus.Running)", span="795-795"];
m1_399 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.Debug(''Algorithm finished warming up.'')", span="798-798"];
m1_401 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=feed, span="803-803"];
m1_405 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.LiveMode && algorithm.IsWarmingUp", span="810-810"];
m1_409 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="821-821"];
m1_414 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.SetFinishedWarmingUp()", span="840-840"];
m1_415 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SendStatusUpdate(AlgorithmStatus.Running)", span="841-841"];
m1_416 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="algorithm.Debug(''Algorithm finished warming up.'')", span="842-842"];
m1_421 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="851-851"];
m1_385 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="!setStartTime", span="771-771"];
m1_402 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="!setStartTime", span="805-805"];
m1_367 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="history.GetHistory(historyRequests, timeZone)", span="743-743"];
m1_345 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="DateTime? lastHistoryTimeUtc = null", span="695-695"];
m1_406 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="lastHistoryTimeUtc.HasValue", span="814-814"];
m1_347 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var start = DateTime.UtcNow.Ticks", span="699-699"];
m1_351 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="historyRequests.Count != 0", span="708-708"];
m1_354 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=historyRequests, span="713-713"];
m1_360 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="727-727"];
m1_361 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="729-729"];
m1_362 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="730-730"];
m1_364 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=historyRequests, span="736-736"];
m1_398 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="historyRequests.Count != 0", span="796-796"];
m1_348 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="700-700"];
m1_365 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="738-738"];
m1_391 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="782-782"];
m1_420 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="850-850"];
m1_389 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="DateTime.UtcNow > nextStatusTime", span="777-777"];
m1_418 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="DateTime.UtcNow > nextStatusTime", span="845-845"];
m1_350 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="706-706"];
m1_413 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="838-838"];
m1_353 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="712-712"];
m1_357 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="request.Resolution < minResolution", span="718-718"];
m1_358 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="request.Resolution = minResolution", span="720-720"];
m1_359 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="721-721"];
m1_355 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Security security", span="715-715"];
m1_363 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="request.FillForwardResolution = minResolution", span="732-732"];
m1_366 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="739-739"];
m1_368 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="TimeSlice timeSlice", span="745-745"];
m1_370 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="slice.Keys", span="750-750"];
m1_372 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var data = slice[symbol]", span="753-753"];
m1_369 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var paired = new List<DataFeedPacket>()", span="749-749"];
m1_378 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="paired.Add(new DataFeedPacket(security, security.Subscriptions.First(), list))", span="758-758"];
m1_373 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var list = new List<BaseData>()", span="754-754"];
m1_374 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var ticks = data as List<Tick>", span="755-755"];
m1_377 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="list.Add(data)", span="757-757"];
m1_376 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="list.AddRange(ticks)", span="756-756"];
m1_375 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="ticks != null", span="756-756"];
m1_380 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=Exception, span="762-762"];
m1_384 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="timeSlice != null", span="769-769"];
m1_387 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_previousTime = timeSlice.Time", span="774-774"];
m1_394 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="lastHistoryTimeUtc = timeSlice.Time", span="786-786"];
m1_381 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Error(err)", span="764-764"];
m1_386 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="setStartTime = true", span="773-773"];
m1_390 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="781-781"];
m1_400 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="799-799"];
m1_404 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="_previousTime = timeSlice.Time", span="808-808"];
m1_408 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="818-818"];
m1_403 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="setStartTime = true", span="807-807"];
m1_407 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="var hasHistoricalData = false", span="817-817"];
m1_411 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label=hasHistoricalData, span="827-827"];
m1_410 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="hasHistoricalData = true", span="823-823"];
m1_412 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="lastHistoryTimeUtc = null", span="833-833"];
m1_417 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="843-843"];
m1_419 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="849-849"];
m1_423 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="682-682"];
m1_248 [cluster="Unk.FirstOrDefault", file="BrokerageSetupHandler.cs", label="Entry Unk.FirstOrDefault", span=""];
m1_259 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
m1_535 [cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29"];
m1_481 [cluster="QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="46-46"];
m1_266 [cluster="System.Math.Round(decimal, int)", file="BrokerageSetupHandler.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m1_295 [cluster="System.TimeSpan.FromTicks(long)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m1_432 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
m1_527 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129"];
m1_283 [cluster="QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="43-43"];
m1_424 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="858-858"];
m1_470 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="Log.Trace(''AlgorithmManager.ProcessVolatilityHistoryRequirements(): Updating volatility models with historical data...'')", span="860-860"];
m1_471 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="algorithm.Securities.Values", span="862-862"];
m1_473 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="var historyReq = security.VolatilityModel.GetHistoryRequirements(security, algorithm.UtcTime)", span="866-866"];
m1_474 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="historyReq != null && algorithm.HistoryProvider != null", span="868-868"];
m1_475 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="var history = algorithm.HistoryProvider.GetHistory(historyReq, algorithm.TimeZone)", span="870-870"];
m1_472 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="security.VolatilityModel != VolatilityModel.Null", span="864-864"];
m1_478 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="slice.Bars.ContainsKey(security.Symbol)", span="875-875"];
m1_479 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="security.VolatilityModel.Update(security, slice.Bars[security.Symbol])", span="876-876"];
m1_476 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="history != null", span="871-871"];
m1_477 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label=history, span="873-873"];
m1_480 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="858-858"];
m1_335 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="669-669"];
m1_336 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="BrokerageSetupHandler.cs", label=_lock, span="671-671"];
m1_337 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="BrokerageSetupHandler.cs", label="state != AlgorithmStatus.Running", span="675-675"];
m1_338 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="BrokerageSetupHandler.cs", label="_algorithm.Status = state", span="677-677"];
m1_339 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="669-669"];
m1_302 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
m1_256 [cluster="string.Format(string, object, object)", file="BrokerageSetupHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_306 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="907-907"];
m1_490 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="newDelistings.Values", span="909-909"];
m1_492 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="!delistings.Any(x => x.Symbol == delisting.Symbol && x.Type == delisting.Type)", span="914-914"];
m1_493 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="delistings.Add(delisting)", span="916-916"];
m1_496 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="923-923"];
m1_491 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="delisting.Type == DelistingType.Warning", span="912-912"];
m1_494 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.Value)", span="917-917"];
m1_495 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.Value)", span="922-922"];
m1_497 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label=cancelledOrders, span="924-924"];
m1_498 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="926-926"];
m1_499 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", file="BrokerageSetupHandler.cs", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="907-907"];
m1_294 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="654-654"];
m1_296 [cluster="System.TimeSpan.FromSeconds(double)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m1_278 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53"];
m1_250 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_257 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m1_242 [cluster="System.TimeSpan.FromMinutes(double)", file="BrokerageSetupHandler.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m1_312 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol)", span="485-485"];
m1_297 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="BrokerageSetupHandler.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="457-457"];
m1_262 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="361-361"];
m1_526 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", span="92-92"];
m1_287 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823"];
m1_431 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="200-200"];
m1_279 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="67-67"];
m1_426 [cluster="System.DateTime.AddSeconds(double)", file="BrokerageSetupHandler.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m1_434 [cluster="System.Math.Min(long, long)", file="BrokerageSetupHandler.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m1_241 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_249 [cluster="System.Type.GetMethod(string, System.Type[])", file="BrokerageSetupHandler.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m1_264 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="BrokerageSetupHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m1_500 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="BrokerageSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="173-173"];
m1_304 [cluster="System.Type.IsInstanceOfType(object)", file="BrokerageSetupHandler.cs", label="Entry System.Type.IsInstanceOfType(object)", span="0-0"];
m1_428 [cluster="Unk.DefaultIfEmpty", file="BrokerageSetupHandler.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m1_538 [file="BrokerageSetupHandler.cs", label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
m1_539 [file="BrokerageSetupHandler.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m1_540 [file="BrokerageSetupHandler.cs", label=symbol, span=""];
m1_541 [file="BrokerageSetupHandler.cs", label=split, span=""];
m1_542 [file="BrokerageSetupHandler.cs", label=delisting, span=""];
m2_61 [cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120"];
m2_291 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m2_67 [cluster="QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)", span="250-250"];
m2_95 [cluster="QuantConnect.Orders.OrderResponse.InvalidStatus(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.InvalidStatus(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.Order)", span="136-136"];
m2_29 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="901-901"];
m2_445 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="var delta = _algorithm.Portfolio.CashBook[account.CurrencySymbol].Amount - account.CashBalance", span="904-904"];
m2_448 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="_brokerage.AccountInstantlyUpdated", span="911-911"];
m2_449 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.CashBook[account.CurrencySymbol].SetAmount(account.CashBalance)", span="914-914"];
m2_446 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="delta != 0", span="905-905"];
m2_447 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="Log.Trace(string.Format(''BrokerageTransactionHandler.HandleAccountChanged(): {0} Cash Delta: {1}'', account.CurrencySymbol, delta))", span="907-907"];
m2_450 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="901-901"];
m2_68 [cluster="QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)", span="322-322"];
m2_385 [cluster="QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="192-192"];
m2_65 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m2_349 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m2_347 [cluster="decimal.SmartRounding()", file="BrokerageTransactionHandler.cs", label="Entry decimal.SmartRounding()", span="173-173"];
m2_461 [cluster="string.Format(string, object)", file="BrokerageTransactionHandler.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_22 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", span="343-343"];
m2_143 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="BrokerageTransactionHandler.cs", label="Order order = GetOrderByIdInternal(orderId)", span="345-345"];
m2_144 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="BrokerageTransactionHandler.cs", label="return order != null ? order.Clone() : null;", span="346-346"];
m2_145 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderById(int)", span="343-343"];
m2_171 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="BrokerageTransactionHandler.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_203 [cluster="QuantConnect.Util.BusyBlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Util.BusyBlockingCollection<T>.GetConsumingEnumerable(System.Threading.CancellationToken)", span="139-139"];
m2_271 [cluster="QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.CashBook.ConvertToAccountCurrency(decimal, string)", span="112-112"];
m2_63 [cluster="QuantConnect.Orders.OrderRequest.SetResponse(QuantConnect.Orders.OrderResponse, QuantConnect.Orders.OrderRequestStatus)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderRequest.SetResponse(QuantConnect.Orders.OrderResponse, QuantConnect.Orders.OrderRequestStatus)", span="93-93"];
m2_204 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", span="599-599"];
m2_296 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Quantity = RoundOffOrder(order, security)", span="609-609"];
m2_293 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var order = Order.CreateOrder(request)", span="602-602"];
m2_294 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[order.Symbol]", span="605-605"];
m2_297 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orders.TryAdd(order.Id, order)", span="611-611"];
m2_300 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orderTickets.TryGetValue(order.Id, out ticket)", span="616-616"];
m2_305 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="sufficientCapitalForOrder = _algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="629-629"];
m2_308 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="634-634"];
m2_309 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Error executing margin models''))", span="635-635"];
m2_314 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(response.ErrorMessage)", span="643-643"];
m2_315 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Insufficient buying power to complete order''))", span="644-644"];
m2_318 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_algorithm.LiveMode && !_algorithm.BrokerageModel.CanSubmitOrder(security, order, out message)", span="650-650"];
m2_323 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(response.ErrorMessage)", span="656-656"];
m2_324 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''BrokerageModel declared unable to submit order''))", span="657-657"];
m2_327 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderPlaced = _brokerage.PlaceOrder(order)", span="665-665"];
m2_335 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(response.ErrorMessage)", span="679-679"];
m2_336 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to place order''))", span="680-680"];
m2_295 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.PriceCurrency = security.SymbolProperties.QuoteCurrency", span="606-606"];
m2_292 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="601-601"];
m2_303 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="ticket.SetOrder(order)", span="623-623"];
m2_312 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="641-641"];
m2_313 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.InsufficientBuyingPower, string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.GetValue(security).SmartRounding()))", span="642-642"];
m2_319 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="653-653"];
m2_321 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''InvalidOrder'', ''BrokerageModel declared unable to submit order: '' + order.Id)", span="654-654"];
m2_322 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageModelRefusedToSubmitOrder, ''OrderID: '' + order.Id + '' '' + message)", span="655-655"];
m2_332 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="676-676"];
m2_333 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var errorMessage = ''Brokerage failed to place order: '' + order.Id", span="677-677"];
m2_338 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Submitted", span="684-684"];
m2_298 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleSubmitOrderRequest(): Unable to add new order, order not processed.'')", span="613-613"];
m2_301 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleSubmitOrderRequest(): Unable to retrieve order ticket, order not processed.'')", span="618-618"];
m2_304 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="bool sufficientCapitalForOrder", span="626-626"];
m2_306 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="631-631"];
m2_311 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="!sufficientCapitalForOrder", span="639-639"];
m2_307 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="633-633"];
m2_310 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ProcessingError, ''Error in GetSufficientCapitalForOrder'');", span="636-636"];
m2_316 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return response;", span="645-645"];
m2_317 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="BrokerageMessageEvent message", span="649-649"];
m2_326 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="bool orderPlaced", span="662-662"];
m2_320 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="message == null", span="654-654"];
m2_325 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return response;", span="658-658"];
m2_328 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="667-667"];
m2_331 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="!orderPlaced", span="673-673"];
m2_334 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToSubmitOrder, errorMessage)", span="678-678"];
m2_337 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return response;", span="681-681"];
m2_299 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.OrderAlreadyExists, ''Cannot process submit request because order with id {0} already exists'');", span="614-614"];
m2_302 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.UnableToFindOrder(request);", span="619-619"];
m2_339 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Success(request);", span="685-685"];
m2_329 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="669-669"];
m2_330 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderPlaced = false", span="670-670"];
m2_340 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSubmitOrderRequest(QuantConnect.Orders.SubmitOrderRequest)", span="599-599"];
m2_235 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan, System.Threading.CancellationToken)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan, System.Threading.CancellationToken)", span="667-667"];
m2_127 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="319-319"];
m2_128 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BrokerageTransactionHandler.cs", label="return _orderTickets.Select(x => x.Value).Where(filter ?? (x => true));", span="321-321"];
m2_129 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="319-319"];
m2_96 [cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154"];
m2_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="93-93"];
m2_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_resultHandler = resultHandler", span="101-101"];
m2_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_syncedLiveBrokerageCashToday = true", span="102-102"];
m2_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_lastSyncTimeTicks = DateTime.Now.Ticks", span="103-103"];
m2_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_brokerage = brokerage", span="105-105"];
m2_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_brokerage.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                // log every fill in live mode\r\n                if (algorithm.LiveMode)\r\n                {\r\n                    var brokerIds = string.Empty;\r\n                    var order = GetOrderById(fill.OrderId);\r\n                    if (order != null && order.BrokerId.Count > 0) brokerIds = string.Join('', '', order.BrokerId);\r\n                    Log.Trace(''BrokerageTransactionHandler.OrderStatusChanged(): '' + fill + '' BrokerId: '' + brokerIds);\r\n                }\r\n\r\n                HandleOrderEvent(fill);\r\n            }", span="106-118"];
m2_8 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                HandleAccountChanged(account);\r\n            }", span="120-123"];
m2_9 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="IsActive = true", span="125-125"];
m2_10 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="_algorithm = algorithm", span="127-127"];
m2_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="brokerage == null", span="95-95"];
m2_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="throw new ArgumentNullException(''brokerage'');", span="97-97"];
m2_11 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="93-93"];
m2_97 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m2_270 [cluster="System.Math.Abs(decimal)", file="BrokerageTransactionHandler.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m2_66 [cluster="QuantConnect.Util.BusyBlockingCollection<T>.Add(T)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Util.BusyBlockingCollection<T>.Add(T)", span="91-91"];
m2_383 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="755-755"];
m2_387 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="return order.Status != OrderStatus.Filled\r\n                && order.Status != OrderStatus.Canceled\r\n                && order.Status != OrderStatus.PartiallyFilled\r\n                && order.Status != OrderStatus.Invalid;", span="757-760"];
m2_388 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CanUpdateOrder(QuantConnect.Orders.Order)", span="755-755"];
m2_131 [cluster="Unk.Where", file="BrokerageTransactionHandler.cs", label="Entry Unk.Where", span=""];
m2_342 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="301-301"];
m2_267 [cluster="System.Collections.Generic.List<T>.List()", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_42 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="170-170"];
m2_46 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var response = !_algorithm.IsWarmingUp\r\n                ? OrderResponse.Success(request) \r\n                : OrderResponse.WarmingUp(request)", span="172-174"];
m2_48 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var ticket = new OrderTicket(_algorithm.Transactions, request)", span="177-177"];
m2_49 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_orderTickets.TryAdd(ticket.OrderId, ticket)", span="178-178"];
m2_51 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_orderRequestQueue.Add(request)", span="183-183"];
m2_53 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[order.Symbol]", span="191-191"];
m2_58 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="_orders.TryAdd(request.OrderId, order)", span="197-197"];
m2_47 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(response)", span="176-176"];
m2_50 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="response.IsSuccess", span="181-181"];
m2_57 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="ticket.SetOrder(order)", span="196-196"];
m2_59 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="return ticket;", span="199-199"];
m2_52 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="var order = Order.CreateOrder(request)", span="188-188"];
m2_54 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.PriceCurrency = security.SymbolProperties.QuoteCurrency", span="192-192"];
m2_56 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Tag = ''Algorithm warming up.''", span="195-195"];
m2_55 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="194-194"];
m2_60 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="170-170"];
m2_277 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="565-580"];
m2_16 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="var order = GetOrderById(fill.OrderId)", span="112-112"];
m2_20 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(fill)", span="117-117"];
m2_27 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="HandleAccountChanged(account)", span="122-122"];
m2_278 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="TimeSinceLastFill <= TimeSpan.FromSeconds(20)", span="568-568"];
m2_279 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="_syncedLiveBrokerageCashToday = false", span="572-572"];
m2_281 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="_lastSyncTimeTicks = DateTime.Now.Ticks", span="577-577"];
m2_19 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.OrderStatusChanged(): '' + fill + '' BrokerId: '' + brokerIds)", span="114-114"];
m2_13 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="106-118"];
m2_15 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="var brokerIds = string.Empty", span="111-111"];
m2_17 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="order != null && order.BrokerId.Count > 0", span="113-113"];
m2_18 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="brokerIds = string.Join('', '', order.BrokerId)", span="113-113"];
m2_14 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="algorithm.LiveMode", span="109-109"];
m2_21 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="106-118"];
m2_26 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="120-123"];
m2_28 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="120-123"];
m2_132 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="321-321"];
m2_160 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="368-368"];
m2_172 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="389-389"];
m2_175 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="389-389"];
m2_178 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="391-391"];
m2_181 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="391-391"];
m2_241 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="495-495"];
m2_244 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="497-497"];
m2_280 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'')", span="573-573"];
m2_282 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'')", span="578-578"];
m2_134 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="321-321"];
m2_133 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Value", span="321-321"];
m2_161 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Value.BrokerId.Contains(brokerageId)", span="368-368"];
m2_162 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="368-368"];
m2_174 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="389-389"];
m2_173 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Value", span="389-389"];
m2_177 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="389-389"];
m2_176 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Clone()", span="389-389"];
m2_180 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="391-391"];
m2_179 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Value", span="391-391"];
m2_183 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="391-391"];
m2_182 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Clone()", span="391-391"];
m2_245 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Key <= lowestOrderIdToKeep", span="497-497"];
m2_243 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="495-495"];
m2_242 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Key", span="495-495"];
m2_246 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="497-497"];
m2_283 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="565-580"];
m2_239 [cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", span="0-0"];
m2_184 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="397-397"];
m2_185 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="_orderRequestQueue.GetConsumingEnumerable(_cancellationTokenSource.Token)", span="401-401"];
m2_189 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="response = HandleSubmitOrderRequest((SubmitOrderRequest) request)", span="407-407"];
m2_191 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="response = HandleUpdateOrderRequest((UpdateOrderRequest) request)", span="410-410"];
m2_193 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="response = HandleCancelOrderRequest((CancelOrderRequest) request)", span="413-413"];
m2_196 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="ProcessAsynchronousEvents()", span="422-422"];
m2_199 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="_algorithm.RunTimeError = err", span="430-430"];
m2_201 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="IsActive = false", span="434-434"];
m2_186 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderResponse response", span="403-403"];
m2_197 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label=Exception, span="425-425"];
m2_200 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="433-433"];
m2_187 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="request.OrderRequestType", span="404-404"];
m2_195 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="request.SetResponse(response, OrderRequestStatus.Processed)", span="420-420"];
m2_188 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Submit", span="406-406"];
m2_190 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Update", span="409-409"];
m2_192 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Cancel", span="412-412"];
m2_198 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="428-428"];
m2_194 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="throw new ArgumentOutOfRangeException();", span="416-416"];
m2_202 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="397-397"];
m2_30 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", span="142-142"];
m2_31 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.LiveMode", span="144-144"];
m2_35 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="return AddOrder((SubmitOrderRequest) request);", span="152-152"];
m2_37 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="return UpdateOrder((UpdateOrderRequest) request);", span="155-155"];
m2_39 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="return CancelOrder((CancelOrderRequest) request);", span="158-158"];
m2_32 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.Process(): '' + request)", span="146-146"];
m2_33 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="request.OrderRequestType", span="149-149"];
m2_34 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Submit", span="151-151"];
m2_36 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Update", span="154-154"];
m2_38 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderRequestType.Cancel", span="157-157"];
m2_40 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="throw new ArgumentOutOfRangeException();", span="161-161"];
m2_41 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Process(QuantConnect.Orders.OrderRequest)", span="142-142"];
m2_384 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="66-66"];
m2_209 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="448-448"];
m2_210 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="!_algorithm.LiveMode", span="453-453"];
m2_211 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orderRequestQueue.IsBusy && !_orderRequestQueue.WaitHandle.WaitOne(Time.OneSecond, _cancellationTokenSource.Token)", span="455-455"];
m2_215 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_syncedLiveBrokerageCashToday && DateTime.Now.Date != LastSyncDate", span="465-465"];
m2_216 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_syncedLiveBrokerageCashToday = false", span="467-467"];
m2_217 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_algorithm.LiveMode && !_syncedLiveBrokerageCashToday && DateTime.Now.TimeOfDay >= _liveBrokerageCashSyncTime", span="471-471"];
m2_218 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="TimeSinceLastFill > TimeSpan.FromSeconds(10)", span="476-476"];
m2_219 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="PerformCashSync()", span="478-478"];
m2_223 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orders.Count < maxOrdersToKeep + 1", span="489-489"];
m2_226 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="int max = _orders.Max(x => x.Key)", span="495-495"];
m2_228 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orders.Where(x => x.Key <= lowestOrderIdToKeep)", span="497-497"];
m2_231 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orders.TryRemove(item.Key, out value)", span="501-501"];
m2_232 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orderTickets.TryRemove(item.Key, out ticket)", span="502-502"];
m2_214 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Enter'')", span="462-462"];
m2_212 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Timed out waiting for request queue to finish processing.'')", span="457-457"];
m2_213 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="return;", span="459-459"];
m2_222 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="int maxOrdersToKeep = 10000", span="488-488"];
m2_220 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label=Exception, span="481-481"];
m2_224 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Exit'')", span="491-491"];
m2_227 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="int lowestOrderIdToKeep = max - maxOrdersToKeep", span="496-496"];
m2_229 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Order value", span="499-499"];
m2_233 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Log.Debug(''BrokerageTransactionHandler.ProcessSynchronousEvents(): Exit'')", span="505-505"];
m2_230 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="500-500"];
m2_221 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Log.Error(err, ''Updating cash balances'')", span="483-483"];
m2_225 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="return;", span="492-492"];
m2_234 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="448-448"];
m2_350 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="77-77"];
m2_207 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="440-440"];
m2_208 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="440-440"];
m2_440 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="524-524"];
m2_290 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m2_443 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="232-232"];
m2_91 [cluster="QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)", span="336-336"];
m2_206 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", span="766-766"];
m2_391 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orders.TryGetValue(request.OrderId, out order) || !_orderTickets.TryGetValue(request.OrderId, out ticket)", span="770-770"];
m2_398 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderCanceled = _brokerage.CancelOrder(order)", span="786-786"];
m2_404 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(message)", span="798-798"];
m2_405 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to cancel order''))", span="799-799"];
m2_390 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="769-769"];
m2_392 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleCancelOrderRequest(): Unable to cancel order with ID '' + request.OrderId + ''.'')", span="772-772"];
m2_394 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status.IsClosed()", span="776-776"];
m2_395 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.InvalidStatus(request, order);", span="778-778"];
m2_396 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="ticket.SetOrder(order)", span="781-781"];
m2_403 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="var message = ''Brokerage failed to cancel order with id '' + order.Id", span="797-797"];
m2_407 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Canceled", span="804-804"];
m2_409 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Tag = request.Tag", span="809-809"];
m2_397 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="bool orderCanceled", span="783-783"];
m2_399 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="788-788"];
m2_402 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="!orderCanceled", span="794-794"];
m2_406 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToCancelOrder, message);", span="800-800"];
m2_410 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Success(request);", span="812-812"];
m2_389 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Order order", span="768-768"];
m2_393 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.UnableToFindOrder(request);", span="773-773"];
m2_408 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.Tag != null", span="806-806"];
m2_400 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="790-790"];
m2_401 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderCanceled = false", span="791-791"];
m2_411 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelOrderRequest(QuantConnect.Orders.CancelOrderRequest)", span="766-766"];
m2_24 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m2_64 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="194-194"];
m2_130 [cluster="Unk.Select", file="BrokerageTransactionHandler.cs", label="Entry Unk.Select", span=""];
m2_92 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", span="349-349"];
m2_147 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="_orders == null", span="352-352"];
m2_150 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="return _orders.TryGetValue(orderId, out order) ? order : null;", span="355-355"];
m2_148 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="return null;", span="352-352"];
m2_149 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="Order order", span="354-354"];
m2_151 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByIdInternal(int)", span="349-349"];
m2_386 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="84-84"];
m2_276 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m2_238 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="511-511"];
m2_247 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="!Monitor.TryEnter(_performCashSyncReentranceGuard)", span="516-516"];
m2_251 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="balances = _brokerage.GetCashBalance()", span="526-526"];
m2_258 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.CashBook.TryGetValue(balance.Symbol, out cash)", span="542-542"];
m2_260 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Math.Abs(delta) > _algorithm.Portfolio.CashBook.ConvertToAccountCurrency(delta, cash.Symbol)", span="546-546"];
m2_262 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.SetCash(balance.Symbol, balance.Amount, balance.ConversionRate)", span="553-553"];
m2_263 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="_syncedLiveBrokerageCashToday = true", span="556-556"];
m2_264 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Task.Delay(TimeSpan.FromSeconds(10)).ContinueWith(_ =>\r\n            {\r\n                // we want to make sure this is a good value, so check for any recent fills\r\n                if (TimeSinceLastFill <= TimeSpan.FromSeconds(20))\r\n                {\r\n                    // this will cause us to come back in and reset cash again until we \r\n                    // haven't processed a fill for +- 10 seconds of the set cash time\r\n                    _syncedLiveBrokerageCashToday = false;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Unverified cash sync - resync required.'');\r\n                }\r\n                else\r\n                {\r\n                    _lastSyncTimeTicks = DateTime.Now.Ticks;\r\n                    Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Verified cash sync.'');\r\n                }\r\n            })", span="565-580"];
m2_248 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="return;", span="518-518"];
m2_249 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.PerformCashSync(): Sync cash balance'')", span="521-521"];
m2_250 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="var balances = new List<Cash>()", span="523-523"];
m2_252 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label=Exception, span="528-528"];
m2_254 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="balances.Count == 0", span="533-533"];
m2_256 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label=balances, span="539-539"];
m2_257 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Cash cash", span="541-541"];
m2_259 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="var delta = cash.Amount - balance.Amount", span="545-545"];
m2_261 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Log.LogHandler.Trace(''BrokerageTransactionHandler.PerformCashSync(): {0} Delta: {1}'', balance.Symbol,\r\n                                delta.ToString(''0.00''))", span="549-550"];
m2_255 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="return;", span="535-535"];
m2_253 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="530-530"];
m2_265 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.PerformCashSync()", span="511-511"];
m2_269 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="223-223"];
m2_146 [cluster="QuantConnect.Orders.Order.Clone()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="224-224"];
m2_274 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="478-478"];
m2_284 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="586-586"];
m2_286 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="!_orderRequestQueue.WaitHandle.WaitOne(timeout)", span="589-589"];
m2_288 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="_cancellationTokenSource.Cancel()", span="593-593"];
m2_285 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="var timeout = TimeSpan.FromSeconds(60)", span="588-588"];
m2_287 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.Exit(): Exceed timeout: '' + (int)(timeout.TotalSeconds) + '' seconds.'')", span="591-591"];
m2_289 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="586-586"];
m2_441 [cluster="QuantConnect.Statistics.TradeBuilder.ProcessFill(QuantConnect.Orders.OrderEvent, decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Statistics.TradeBuilder.ProcessFill(QuantConnect.Orders.OrderEvent, decimal)", span="120-120"];
m2_442 [cluster="QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)", span="296-296"];
m2_98 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
m2_346 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m2_163 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m2_158 [cluster="Unk.FirstOrDefault", file="BrokerageTransactionHandler.cs", label="Entry Unk.FirstOrDefault", span=""];
m2_62 [cluster="QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", span="163-163"];
m2_348 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="56-56"];
m2_266 [cluster="System.Threading.Monitor.TryEnter(object)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.Monitor.TryEnter(object)", span="0-0"];
m2_93 [cluster="QuantConnect.Orders.OrderResponse.UnableToFindOrder(QuantConnect.Orders.OrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderResponse.UnableToFindOrder(QuantConnect.Orders.OrderRequest)", span="145-145"];
m2_90 [cluster="QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.UpdateOrderRequest)", span="391-391"];
m2_45 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="BrokerageTransactionHandler.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m2_343 [cluster="string.Format(string, object, object)", file="BrokerageTransactionHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_25 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="815-815"];
m2_413 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="var order = GetOrderByIdInternal(fill.OrderId)", span="818-818"];
m2_419 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Interlocked.Exchange(ref _lastFillTimeTicks, DateTime.Now.Ticks)", span="836-836"];
m2_420 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[fill.Symbol]", span="839-839"];
m2_421 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.ProcessFill(fill)", span="852-852"];
m2_423 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.TradeBuilder.ProcessFill(fill, conversionRate)", span="856-856"];
m2_426 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Error in Portfolio.ProcessFill: {1}'', order.Id, err.Message))", span="861-861"];
m2_428 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_orderTickets.TryGetValue(fill.OrderId, out ticket)", span="867-867"];
m2_433 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_resultHandler.OrderEvent(fill)", span="881-881"];
m2_434 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.OnOrderEvent(fill)", span="885-885"];
m2_436 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="889-889"];
m2_437 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.RunTimeError = err", span="891-891"];
m2_414 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="order == null", span="819-819"];
m2_417 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="order.Status = fill.Status", span="826-826"];
m2_430 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="order.Price = ticket.AverageFillPrice", span="870-870"];
m2_418 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="834-834"];
m2_422 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="var conversionRate = security.QuoteCurrency.ConversionRate", span="854-854"];
m2_424 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label=Exception, span="858-858"];
m2_427 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="866-866"];
m2_425 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="860-860"];
m2_429 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="ticket.AddOrderEvent(fill)", span="869-869"];
m2_431 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvent(): Unable to resolve ticket: '' + fill.OrderId)", span="874-874"];
m2_432 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="fill.Status != OrderStatus.None", span="878-878"];
m2_435 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label=Exception, span="887-887"];
m2_415 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvent(): Unable to locate Order with id '' + fill.OrderId)", span="821-821"];
m2_416 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="return;", span="822-822"];
m2_438 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="815-815"];
m2_237 [cluster="System.TimeSpan.FromSeconds(double)", file="BrokerageTransactionHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m2_345 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="122-122"];
m2_272 [cluster="decimal.ToString(string)", file="BrokerageTransactionHandler.cs", label="Entry decimal.ToString(string)", span="0-0"];
m2_159 [cluster="Unk.Clone", file="BrokerageTransactionHandler.cs", label="Entry Unk.Clone", span=""];
m2_444 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="393-393"];
m2_23 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="BrokerageTransactionHandler.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m2_275 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m2_124 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m2_43 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="207-207"];
m2_70 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orderTickets.TryGetValue(request.OrderId, out ticket)", span="210-210"];
m2_71 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderTicket.InvalidUpdateOrderId(_algorithm.Transactions, request);", span="212-212"];
m2_73 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="var order = GetOrderByIdInternal(request.OrderId)", span="220-220"];
m2_80 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.IsWarmingUp", span="235-235"];
m2_83 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="_orderRequestQueue.Add(request)", span="242-242"];
m2_69 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="209-209"];
m2_72 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="ticket.AddUpdateRequest(request)", span="215-215"];
m2_87 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return ticket;", span="251-251"];
m2_74 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="order == null", span="221-221"];
m2_76 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status.IsClosed()", span="226-226"];
m2_77 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.InvalidStatus(request, order))", span="229-229"];
m2_78 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.Quantity.HasValue && request.Quantity.Value == 0", span="231-231"];
m2_81 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.WarmingUp(request))", span="237-237"];
m2_82 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.Success(request), OrderRequestStatus.Processing)", span="241-241"];
m2_84 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="245-245"];
m2_75 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.UnableToFindOrder(request))", span="224-224"];
m2_79 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.ZeroQuantity(request))", span="233-233"];
m2_86 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.Error(request, OrderResponseErrorCode.ProcessingError, err.Message))", span="248-248"];
m2_85 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="247-247"];
m2_88 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)", span="207-207"];
m2_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BrokerageTransactionHandler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_240 [cluster="Unk.TryRemove", file="BrokerageTransactionHandler.cs", label="Entry Unk.TryRemove", span=""];
m2_439 [cluster="System.Threading.Interlocked.Exchange(ref long, long)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.Interlocked.Exchange(ref long, long)", span="0-0"];
m2_344 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="360-360"];
m2_89 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_451 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114"];
m2_164 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="377-377"];
m2_165 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="_orders == null", span="379-379"];
m2_168 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="return _orders.Select(x => x.Value).Where(filter).Select(x => x.Clone());", span="389-389"];
m2_169 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="return _orders.Select(x => x.Value).Select(x => x.Clone());", span="391-391"];
m2_166 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="return Enumerable.Empty<Order>();", span="383-383"];
m2_167 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="filter != null", span="386-386"];
m2_170 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="377-377"];
m2_205 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="691-691"];
m2_359 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Quantity = RoundOffOrder(order, security)", span="708-708"];
m2_351 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Order order", span="693-693"];
m2_358 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="var security = _algorithm.Securities[order.Symbol]", span="707-707"];
m2_353 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orders.TryGetValue(request.OrderId, out order) || !_orderTickets.TryGetValue(request.OrderId, out ticket)", span="695-695"];
m2_356 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="!CanUpdateOrder(order)", span="701-701"];
m2_361 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_algorithm.LiveMode && !_algorithm.BrokerageModel.CanUpdateOrder(_algorithm.Securities[order.Symbol], order, request, out message)", span="712-712"];
m2_366 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(response.ErrorMessage)", span="718-718"];
m2_367 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''BrokerageModel declared unable to update order''))", span="719-719"];
m2_372 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderUpdated = _brokerage.UpdateOrder(order)", span="730-730"];
m2_378 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(errorMessage)", span="742-742"];
m2_379 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(new OrderEvent(order, _algorithm.UtcTime, 0m, ''Brokerage failed to update order''))", span="743-743"];
m2_360 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="BrokerageMessageEvent message", span="711-711"];
m2_352 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="694-694"];
m2_354 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleUpdateOrderRequest(): Unable to update order with ID '' + request.OrderId)", span="697-697"];
m2_357 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.InvalidStatus(request, order);", span="703-703"];
m2_362 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="715-715"];
m2_364 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''InvalidOrder'', ''BrokerageModel declared unable to update order: '' + order.Id)", span="716-716"];
m2_365 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="var response = OrderResponse.Error(request, OrderResponseErrorCode.BrokerageModelRefusedToUpdateOrder, ''OrderID: '' + order.Id + '' '' + message)", span="717-717"];
m2_369 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.ApplyUpdateOrderRequest(request)", span="724-724"];
m2_370 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="ticket.SetOrder(order)", span="725-725"];
m2_363 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="message == null", span="716-716"];
m2_368 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return response;", span="720-720"];
m2_371 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="bool orderUpdated", span="727-727"];
m2_373 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="732-732"];
m2_376 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="!orderUpdated", span="738-738"];
m2_377 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="var errorMessage = ''Brokerage failed to update order with id '' + request.OrderId", span="741-741"];
m2_380 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.BrokerageFailedToUpdateOrder, errorMessage);", span="744-744"];
m2_355 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.UnableToFindOrder(request);", span="698-698"];
m2_381 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderResponse.Success(request);", span="747-747"];
m2_374 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="734-734"];
m2_375 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="orderUpdated = false", span="735-735"];
m2_382 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)", span="691-691"];
m2_236 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m2_126 [cluster="QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)", span="357-357"];
m2_273 [cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="62-62"];
m2_125 [cluster="QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.CancelOrderRequest)", span="377-377"];
m2_94 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m2_412 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="91-91"];
m2_341 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="937-937"];
m2_452 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", color=green, community=0, file="BrokerageTransactionHandler.cs", label="7: var orderLotMod = order.Quantity % security.SymbolProperties.LotSize", span="939-939"];
m2_453 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="orderLotMod != 0", span="941-941"];
m2_454 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="order.Quantity = order.Quantity - orderLotMod", span="943-943"];
m2_456 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", color=green, community=0, file="BrokerageTransactionHandler.cs", label="7: _algorithm.Error(\r\n                        string.Format(\r\n                            ''Warning: Due to brokerage limitations, orders will be rounded to the nearest lot size of {0}'',\r\n                            security.SymbolProperties.LotSize))", span="947-950"];
m2_455 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="!_firstRoundOffMessage", span="945-945"];
m2_457 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="_firstRoundOffMessage = true", span="951-951"];
m2_458 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="return order.Quantity;", span="953-953"];
m2_459 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="return order.Quantity;", span="957-957"];
m2_460 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.RoundOffOrder(QuantConnect.Orders.Order, QuantConnect.Securities.Security)", span="937-937"];
m2_152 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", span="363-363"];
m2_153 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="_orders == null", span="366-366"];
m2_155 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="var order = _orders.FirstOrDefault(x => x.Value.BrokerId.Contains(brokerageId)).Value", span="368-368"];
m2_154 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="return null;", span="366-366"];
m2_156 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="return order != null ? order.Clone() : null;", span="369-369"];
m2_157 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderByBrokerageId(string)", span="363-363"];
m2_268 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="70-70"];
m2_138 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", span="329-329"];
m2_140 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="BrokerageTransactionHandler.cs", label="_orderTickets.TryGetValue(orderId, out ticket)", span="332-332"];
m2_139 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="331-331"];
m2_141 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="BrokerageTransactionHandler.cs", label="return ticket;", span="333-333"];
m2_142 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.GetOrderTicket(int)", span="329-329"];
m2_44 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", span="258-258"];
m2_100 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="!_orderTickets.TryGetValue(request.OrderId, out ticket)", span="261-261"];
m2_102 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return OrderTicket.InvalidCancelOrderId(_algorithm.Transactions, request);", span="264-264"];
m2_106 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="var order = GetOrderByIdInternal(request.OrderId)", span="279-279"];
m2_115 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="_algorithm.IsWarmingUp", span="294-294"];
m2_118 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="_orderRequestQueue.Add(request)", span="302-302"];
m2_99 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="OrderTicket ticket", span="260-260"];
m2_101 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Unable to locate ticket for order.'')", span="263-263"];
m2_103 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="!ticket.TrySetCancelRequest(request)", span="271-271"];
m2_105 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return ticket;", span="275-275"];
m2_122 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="return ticket;", span="311-311"];
m2_107 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order != null && request.Tag != null", span="280-280"];
m2_108 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Tag = request.Tag", span="282-282"];
m2_109 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order == null", span="284-284"];
m2_112 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="order.Status.IsClosed()", span="289-289"];
m2_113 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Order already '' + order.Status)", span="291-291"];
m2_114 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.InvalidStatus(request, order))", span="292-292"];
m2_116 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.WarmingUp(request))", span="296-296"];
m2_117 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.Success(request), OrderRequestStatus.Processing)", span="301-301"];
m2_119 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label=Exception, span="305-305"];
m2_104 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.Error(request, OrderResponseErrorCode.InvalidRequest, ''Cancellation is already in progress.''))", span="274-274"];
m2_111 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.UnableToFindOrder(request))", span="287-287"];
m2_121 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="request.SetResponse(OrderResponse.Error(request, OrderResponseErrorCode.ProcessingError, err.Message))", span="308-308"];
m2_110 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.CancelOrder(): Cannot find this id.'')", span="286-286"];
m2_120 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Log.Error(err)", span="307-307"];
m2_123 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.CancelOrder(QuantConnect.Orders.CancelOrderRequest)", span="258-258"];
m2_462 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span=""];
m2_463 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m2_464 [file="BrokerageTransactionHandler.cs", label=string, span=""];
m2_465 [file="BrokerageTransactionHandler.cs", label=lowestOrderIdToKeep, span=""];
m3_0 [cluster="QuantConnect.Securities.SecurityDataFilter.SecurityDataFilter()", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Securities.SecurityDataFilter.SecurityDataFilter()", span="42-42"];
m3_1 [cluster="QuantConnect.Securities.SecurityDataFilter.SecurityDataFilter()", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Securities.SecurityDataFilter.SecurityDataFilter()", span="42-42"];
m3_2 [cluster="QuantConnect.Securities.SecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="BrokerageTransactionHandlerTests.cs", label="Entry QuantConnect.Securities.SecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="53-53"];
m3_3 [cluster="QuantConnect.Securities.SecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="BrokerageTransactionHandlerTests.cs", label="return true;", span="56-56"];
m3_4 [cluster="QuantConnect.Securities.SecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="BrokerageTransactionHandlerTests.cs", label="Exit QuantConnect.Securities.SecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="53-53"];
m4_12 [cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.SecurityType, QuantConnect.Resolution, bool, decimal, bool, bool)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.SecurityType, QuantConnect.Resolution, bool, decimal, bool, bool)", span="109-109"];
m4_104 [cluster="QuantConnect.Securities.SecurityManager.SetLimits(int, int, int)", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.SetLimits(int, int, int)", span="391-391"];
m4_105 [cluster="System.Math.Max(int, int)", file="CustomDataRegressionAlgorithm.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m4_0 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager()", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager()", span="60-60"];
m4_3 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager()", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.SecurityManager()", span="60-60"];
m4_1 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager()", file="CustomDataRegressionAlgorithm.cs", label="_securityManager = new Dictionary<string, Security>()", span="62-62"];
m4_2 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager()", file="CustomDataRegressionAlgorithm.cs", label="_securityHoldings = new Dictionary<string, SecurityHolding>()", span="63-63"];
m4_9 [cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Resolution, bool)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Resolution, bool)", span="93-93"];
m4_4 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CustomDataRegressionAlgorithm.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_5 [cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", span="81-81"];
m4_6 [cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", file="CustomDataRegressionAlgorithm.cs", label="_securityManager.Add(symbol, security)", span="83-83"];
m4_7 [cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", span="81-81"];
m4_8 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="CustomDataRegressionAlgorithm.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_10 [cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Resolution, bool)", file="CustomDataRegressionAlgorithm.cs", label="Add(symbol, SecurityType.Equity, resolution, fillDataForward)", span="95-95"];
m4_57 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataRegressionAlgorithm.cs", label="security.Holdings.SetHoldings(100m, 0)", span="95-95"];
m4_77 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.AreEqual(103m, security.High)", span="122-122"];
m4_78 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.AreEqual(102m, security.Close)", span="123-123"];
m4_79 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.AreEqual(104m, security.Price)", span="124-124"];
m4_73 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.AreEqual(100m, security.Low)", span="116-116"];
m4_74 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.AreEqual(102m, security.Close)", span="117-117"];
m4_75 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.AreEqual(100000, security.Volume)", span="118-118"];
m4_61 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsFalse(security.Invested)", span="100-100"];
m4_39 [cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.SecurityType, QuantConnect.Resolution, bool, decimal, bool, bool)", file="CustomDataRegressionAlgorithm.cs", label="_securityManager[symbol] = new Security(symbol, SecurityType.Base, resolution, fillDataForward, leverage, extendedMarketHours, isDynamicallyLoadedData)", span="167-167"];
m4_13 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="294-294"];
m4_14 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m4_16 [cluster="Unk.AreEqual", file="CustomDataRegressionAlgorithm.cs", label="Entry Unk.AreEqual", span=""];
m4_18 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="var security = GetSecurity()", span="47-47"];
m4_24 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsInstanceOf<SecurityPortfolioModel>(security.PortfolioModel)", span="54-54"];
m4_26 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsInstanceOf<ImmediateFillModel>(security.FillModel)", span="56-56"];
m4_28 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsInstanceOf<InteractiveBrokersFeeModel>(security.FeeModel)", span="58-58"];
m4_30 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsInstanceOf<SpreadSlippageModel>(security.SlippageModel)", span="60-60"];
m4_33 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsNotNull(security.MarginModel)", span="63-63"];
m4_35 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsNotNull(security.DataFilter)", span="65-65"];
m4_37 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", span="45-45"];
m4_23 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", color=green, community=0, file="CustomDataRegressionAlgorithm.cs", label="10: Assert.IsNotNull(security.PortfolioModel)", span="53-53"];
m4_15 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="74-74"];
m4_17 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", span="45-45"];
m4_19 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsNotNull(security.Exchange)", span="49-49"];
m4_20 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsInstanceOf<SecurityExchange>(security.Exchange)", span="50-50"];
m4_21 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsNotNull(security.Cache)", span="51-51"];
m4_22 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsInstanceOf<SecurityCache>(security.Cache)", span="52-52"];
m4_32 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsInstanceOf<ImmediateSettlementModel>(security.SettlementModel)", span="62-62"];
m4_25 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsNotNull(security.FillModel)", span="55-55"];
m4_27 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsNotNull(security.PortfolioModel)", span="57-57"];
m4_29 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsNotNull(security.SlippageModel)", span="59-59"];
m4_31 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsNotNull(security.SettlementModel)", span="61-61"];
m4_34 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsInstanceOf<SecurityMarginModel>(security.MarginModel)", span="64-64"];
m4_36 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataRegressionAlgorithm.cs", label="Assert.IsInstanceOf<SecurityDataFilter>(security.DataFilter)", span="66-66"];
m4_38 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", span="147-147"];
m4_40 [cluster="Unk.>", file="CustomDataRegressionAlgorithm.cs", label="Entry Unk.>", span=""];
m4_41 [cluster="string.ToUpper()", file="CustomDataRegressionAlgorithm.cs", label="Entry string.ToUpper()", span="0-0"];
m4_42 [cluster="QuantConnect.Securities.SecurityManager.GetResolutionCount(QuantConnect.Resolution)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.GetResolutionCount(QuantConnect.Resolution)", span="368-368"];
m4_43 [cluster="System.Exception.Exception(string)", file="CustomDataRegressionAlgorithm.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m4_44 [cluster="QuantConnect.Securities.SecurityManager.GetRamEstimate(int, int, int)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.GetRamEstimate(int, int, int)", span="406-406"];
m4_45 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="CustomDataRegressionAlgorithm.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_46 [cluster="QuantConnect.Securities.Equity.Equity.Equity(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(string, QuantConnect.Resolution, bool, decimal, bool, bool)", span="42-42"];
m4_47 [cluster="QuantConnect.Securities.Forex.Forex.Forex(string, QuantConnect.Resolution, bool, decimal, bool, bool)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(string, QuantConnect.Resolution, bool, decimal, bool, bool)", span="45-45"];
m4_48 [cluster="QuantConnect.Securities.Security.Security(string, QuantConnect.SecurityType, QuantConnect.Resolution, bool, decimal, bool, bool)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Security.Security(string, QuantConnect.SecurityType, QuantConnect.Resolution, bool, decimal, bool, bool)", span="185-185"];
m4_49 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m4_50 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", span="179-179"];
m4_51 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", file="CustomDataRegressionAlgorithm.cs", label="_securityManager.Add(pair.Key, pair.Value)", span="181-181"];
m4_52 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", file="CustomDataRegressionAlgorithm.cs", label="_securityHoldings.Add(pair.Key, pair.Value.Holdings)", span="182-182"];
m4_53 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", span="179-179"];
m4_54 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Clear()", span="190-190"];
m4_55 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="CustomDataRegressionAlgorithm.cs", label="_securityManager.Clear()", span="192-192"];
m4_56 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.Clear()", span="190-190"];
m4_58 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", span="202-202"];
m4_59 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", file="CustomDataRegressionAlgorithm.cs", label="return _securityManager.Contains(pair);", span="204-204"];
m4_60 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", span="202-202"];
m4_62 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(string)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(string)", span="214-214"];
m4_63 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(string)", file="CustomDataRegressionAlgorithm.cs", label="return _securityManager.ContainsKey(symbol);", span="216-216"];
m4_64 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(string)", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.ContainsKey(string)", span="214-214"];
m4_68 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="CustomDataRegressionAlgorithm.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m4_69 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", span="258-258"];
m4_70 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", file="CustomDataRegressionAlgorithm.cs", label="return _securityManager.Remove(pair);", span="260-260"];
m4_71 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>)", span="258-258"];
m4_72 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="CustomDataRegressionAlgorithm.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m4_76 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="CustomDataRegressionAlgorithm.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m4_80 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CustomDataRegressionAlgorithm.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_81 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>>.GetEnumerator()", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>>.GetEnumerator()", span="311-311"];
m4_82 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>>.GetEnumerator()", file="CustomDataRegressionAlgorithm.cs", label="return _securityManager.GetEnumerator();", span="313-313"];
m4_83 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>>.GetEnumerator()", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>>.GetEnumerator()", span="311-311"];
m4_84 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="CustomDataRegressionAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m4_87 [cluster="QuantConnect.Securities.SecurityManager.GetInternalPortfolioCollection()", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.GetInternalPortfolioCollection()", span="322-322"];
m4_99 [cluster="QuantConnect.Securities.SecurityManager.SetLimits(int, int, int)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.SetLimits(int, int, int)", span="391-391"];
m4_100 [cluster="QuantConnect.Securities.SecurityManager.SetLimits(int, int, int)", file="CustomDataRegressionAlgorithm.cs", label="_minuteLimit = minute", span="393-393"];
m4_101 [cluster="QuantConnect.Securities.SecurityManager.SetLimits(int, int, int)", file="CustomDataRegressionAlgorithm.cs", label="_secondLimit = second", span="394-394"];
m4_98 [cluster="Unk.That", file="CustomDataRegressionAlgorithm.cs", label="Entry Unk.That", span=""];
m4_67 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>[], int)", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>[], int)", span="226-226"];
m4_65 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="343-343"];
m4_66 [cluster="Unk.IsTrue", file="CustomDataRegressionAlgorithm.cs", label="Entry Unk.IsTrue", span=""];
m4_85 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="159-159"];
m4_86 [cluster="QuantConnect.Securities.SecurityManager.GetInternalPortfolioCollection()", file="CustomDataRegressionAlgorithm.cs", label="return _securityHoldings;", span="324-324"];
m4_91 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="CustomDataRegressionAlgorithm.cs", label="Assert.AreEqual(4m,security.Leverage)", span="139-139"];
m4_92 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="CustomDataRegressionAlgorithm.cs", label="security.SetLeverage(5m)", span="141-141"];
m4_93 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="CustomDataRegressionAlgorithm.cs", label="Assert.AreEqual(5m, security.Leverage)", span="142-142"];
m4_95 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", span="134-134"];
m4_94 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="CustomDataRegressionAlgorithm.cs", label="Assert.That(() => security.SetLeverage(0.1m),\r\n                Throws.TypeOf<ArgumentException>().With.Message.EqualTo(''Leverage must be greater than or equal to 1.''))", span="144-145"];
m4_96 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="529-529"];
m4_97 [cluster="Unk.Count", file="CustomDataRegressionAlgorithm.cs", label="Entry Unk.Count", span=""];
m4_106 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", span="157-157"];
m4_107 [cluster="QuantConnect.Securities.SecurityManager.GetRamEstimate(int, int, int)", file="CustomDataRegressionAlgorithm.cs", label="QuantConnect.Tests.Common.Securities.SecurityTests", span=""];
m4_11 [cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Resolution, bool)", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Resolution, bool)", span="93-93"];
m4_102 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="CustomDataRegressionAlgorithm.cs", label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="149-149"];
m4_103 [cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", span="147-147"];
m4_116 [cluster="QuantConnect.Securities.Security.Update(System.DateTime, QuantConnect.Data.BaseData)", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.Security.Update(System.DateTime, QuantConnect.Data.BaseData)", span="387-387"];
m4_108 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, QuantConnect.Data.BaseData)", file="CustomDataRegressionAlgorithm.cs", label=security, span=""];
m4_109 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, QuantConnect.Data.BaseData)", file="CustomDataRegressionAlgorithm.cs", label="_securityManager.Values", span="421-421"];
m4_110 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, QuantConnect.Data.BaseData)", file="CustomDataRegressionAlgorithm.cs", label="data.Symbol == security.Symbol", span="423-423"];
m4_111 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, QuantConnect.Data.BaseData)", file="CustomDataRegressionAlgorithm.cs", label="security.Update(time, data)", span="425-425"];
m4_112 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, QuantConnect.Data.BaseData)", file="CustomDataRegressionAlgorithm.cs", label="security.Update(time, null)", span="429-429"];
m4_113 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, QuantConnect.Data.BaseData)", file="CustomDataRegressionAlgorithm.cs", label=Exception, span="433-433"];
m4_114 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, QuantConnect.Data.BaseData)", file="CustomDataRegressionAlgorithm.cs", label="Log.Error(''Algorithm.Market.Update(): '' + err.Message)", span="435-435"];
m4_115 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, QuantConnect.Data.BaseData)", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.Update(System.DateTime, QuantConnect.Data.BaseData)", span="416-416"];
m4_88 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="CustomDataRegressionAlgorithm.cs", label="Entry QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="333-333"];
m4_89 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="CustomDataRegressionAlgorithm.cs", label="return _securityManager.GetEnumerator();", span="335-335"];
m4_90 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="CustomDataRegressionAlgorithm.cs", label="Exit QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="333-333"];
m4_117 [file="CustomDataRegressionAlgorithm.cs", label="QuantConnect.Securities.SecurityManager", span=""];
m5_36 [cluster="System.Math.Truncate(decimal)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry System.Math.Truncate(decimal)", span="0-0"];
m5_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="703-703"];
m5_35 [cluster="System.Math.Abs(decimal)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m5_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="126-126"];
m5_16 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(int)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(int)", span="53-53"];
m5_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1218-1218"];
m5_19 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", span="47-47"];
m5_20 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="7: var quantity = Math.Truncate(Portfolio.Cash / Math.Abs(e.Value + 1))", span="50-50"];
m5_21 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="4: !Portfolio.Invested", span="51-51"];
m5_22 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="1: Order(''BTCUSD'', quantity)", span="53-53"];
m5_23 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="2: Portfolio[''BTCUSD''].Quantity == quantity", span="55-55"];
m5_25 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="10: Portfolio[''BTCUSD''].Quantity == quantity + 0.1m", span="59-59"];
m5_27 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="2: Portfolio[''BTCUSD''].Quantity == quantity + 0.11m", span="63-63"];
m5_29 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="10: Portfolio[''BTCUSD''].Quantity == quantity + 0.09m", span="67-67"];
m5_24 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="1: Order(''BTCUSD'', 0.1)", span="57-57"];
m5_26 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="1: Order(''BTCUSD'', 0.01)", span="61-61"];
m5_28 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="1: Order(''BTCUSD'', -0.02)", span="65-65"];
m5_30 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="7: var ticket = Order(''BTCUSD'', 0.001)", span="71-71"];
m5_31 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="10: SetHoldings(''BTCUSD'', -2.0m)", span="73-73"];
m5_32 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="10: SetHoldings(''BTCUSD'', 2.0m)", span="74-74"];
m5_33 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="10: this.Quit()", span="75-75"];
m5_34 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", file="FractionalQuantityRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.con_DataConsolidated(object, QuantConnect.Data.Market.TradeBar)", span="47-47"];
m5_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="911-911"];
m5_17 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="121-121"];
m5_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="144-144"];
m5_0 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", span="31-31"];
m5_1 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="3: SetStartDate(2015, 11, 12)", span="33-33"];
m5_2 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="10: SetEndDate(2016, 04, 01)", span="34-34"];
m5_3 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="2: SetCash(100000)", span="37-37"];
m5_4 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="10: SetTimeZone(NodaTime.DateTimeZone.Utc)", span="39-39"];
m5_5 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="2: var security = AddSecurity(SecurityType.Forex, ''BTCUSD'', Resolution.Daily, Market.Bitfinex, false, 3.3m, true)", span="40-40"];
m5_6 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="9: TradeBarConsolidator con = new TradeBarConsolidator(1)", span="41-41"];
m5_9 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="0: SetBenchmark(security.Symbol)", span="44-44"];
m5_7 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="1: SubscriptionManager.AddConsolidator(''BTCUSD'', con)", span="42-42"];
m5_8 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="FractionalQuantityRegressionAlgorithm.cs", label="2: con.DataConsolidated += con_DataConsolidated", span="43-43"];
m5_10 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="FractionalQuantityRegressionAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", span="31-31"];
m5_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1030-1030"];
m5_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1482-1482"];
m5_14 [cluster="Unk.SetTimeZone", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry Unk.SetTimeZone", span=""];
m5_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="FractionalQuantityRegressionAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1005-1005"];
m5_41 [file="FractionalQuantityRegressionAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", span=""];
m6_0 [cluster="QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", file="IBrokerageModel.cs", label="Entry QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", span="30-30"];
m6_1 [cluster="QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", file="IBrokerageModel.cs", label="Exit QuantConnect.Packets.AlgorithmNodePacket.AlgorithmNodePacket(QuantConnect.Packets.PacketType)", span="30-30"];
m7_199 [cluster="QuantConnect.Data.SubscriptionDataConfigList.SubscriptionDataConfigList(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.SubscriptionDataConfigList.SubscriptionDataConfigList(QuantConnect.Symbol)", span="47-47"];
m7_18 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m7_42 [cluster="Unk.Pass", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Pass", span=""];
m7_86 [cluster="System.Collections.Generic.List<T>.List()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_43 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", span="77-77"];
m7_44 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="InteractiveBrokersBrokerage.cs", label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="79-79"];
m7_45 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="InteractiveBrokersBrokerage.cs", label="var manager = new SecurityManager(timeKeeper)", span="80-80"];
m7_46 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="InteractiveBrokersBrokerage.cs", label="var security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="82-82"];
m7_47 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="InteractiveBrokersBrokerage.cs", label="manager.CollectionChanged += (sender, args) =>\r\n            {\r\n                if (args.NewItems.OfType<object>().Single() != security)\r\n                {\r\n                    Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'');\r\n                }\r\n                else\r\n                {\r\n                    Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Add);\r\n                    Assert.Pass();\r\n                }\r\n            }", span="83-94"];
m7_48 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="InteractiveBrokersBrokerage.cs", label="manager[security.Symbol] = security", span="96-96"];
m7_49 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAddedViaIndexer()", span="77-77"];
m7_17 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m7_28 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", span="357-357"];
m7_218 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", file="InteractiveBrokersBrokerage.cs", label="return new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, false);", span="359-359"];
m7_219 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.CreateTradeBarConfig()", span="357-357"];
m7_155 [cluster="QuantConnect.Symbol.IsCanonical()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="164-164"];
m7_180 [cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, string, string)", span="319-319"];
m7_190 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", span="343-343"];
m7_191 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="InteractiveBrokersBrokerage.cs", label="var option = new Symbol(SecurityIdentifier.GenerateOption(SecurityIdentifier.DefaultDate, Symbols.SPY.ID, Market.USA, 0, default(OptionRight), default(OptionStyle)), ''?SPY'')", span="345-345"];
m7_192 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="InteractiveBrokersBrokerage.cs", label="var subscriptionDataConfigList = new SubscriptionDataConfigList(option)", span="347-347"];
m7_193 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="InteractiveBrokersBrokerage.cs", label="Assert.DoesNotThrow(() => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Raw); })", span="349-349"];
m7_194 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="InteractiveBrokersBrokerage.cs", label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="351-351"];
m7_195 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="InteractiveBrokersBrokerage.cs", label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted); })", span="352-352"];
m7_196 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="InteractiveBrokersBrokerage.cs", label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="353-353"];
m7_197 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="InteractiveBrokersBrokerage.cs", label="Assert.Throws(typeof(ArgumentException), () => { subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.TotalReturn); })", span="354-354"];
m7_198 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.Option_SubscriptionDataConfigList_CanOnlyHave_RawDataNormalization()", span="343-343"];
m7_205 [cluster="QuantConnect.Data.SubscriptionDataConfigList.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.SubscriptionDataConfigList.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="56-56"];
m7_215 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="354-354"];
m7_33 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.NewItems.OfType<object>().Single() != security", span="62-62"];
m7_35 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Add)", span="68-68"];
m7_32 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="60-71"];
m7_34 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'')", span="64-64"];
m7_36 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Assert.Pass()", span="69-69"];
m7_37 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="60-71"];
m7_51 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.NewItems.OfType<object>().Single() != security", span="85-85"];
m7_53 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Add)", span="91-91"];
m7_50 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="83-94"];
m7_52 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'')", span="87-87"];
m7_54 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Assert.Pass()", span="92-92"];
m7_55 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="83-94"];
m7_66 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="args.OldItems.OfType<object>().Single() != security", span="109-109"];
m7_68 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Remove)", span="115-115"];
m7_65 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="107-118"];
m7_67 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'')", span="111-111"];
m7_69 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Assert.Pass()", span="116-116"];
m7_70 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="107-118"];
m7_158 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="303-303"];
m7_161 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="304-304"];
m7_164 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="305-305"];
m7_159 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)", span="303-303"];
m7_160 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="303-303"];
m7_162 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)", span="304-304"];
m7_163 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="304-304"];
m7_165 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.TickType == TickType.Trade && x.Type == typeof(TradeBar)", span="305-305"];
m7_166 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="305-305"];
m7_181 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="337-337"];
m7_184 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="338-338"];
m7_187 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="339-339"];
m7_182 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)", span="337-337"];
m7_183 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="337-337"];
m7_185 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)", span="338-338"];
m7_186 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="338-338"];
m7_188 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.TickType == TickType.Trade && x.Type == typeof(TradeBar)", span="339-339"];
m7_189 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="339-339"];
m7_203 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="349-349"];
m7_207 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="351-351"];
m7_210 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted)", span="352-352"];
m7_213 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="353-353"];
m7_216 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="subscriptionDataConfigList.SetDataNormalizationMode(DataNormalizationMode.TotalReturn)", span="354-354"];
m7_202 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="349-349"];
m7_206 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="351-351"];
m7_209 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="352-352"];
m7_212 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="353-353"];
m7_204 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="349-349"];
m7_208 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="351-351"];
m7_211 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="352-352"];
m7_214 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="353-353"];
m7_217 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="354-354"];
m7_136 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m7_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m7_156 [cluster="Unk.IsFalse", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.IsFalse", span=""];
m7_220 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161"];
m7_31 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="69-69"];
m7_173 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var subscriptions = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                marketHoursDbEntry.ExchangeHours,\r\n                marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties,\r\n                _securityInitializer,\r\n                symbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="318-332"];
m7_167 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", span="309-309"];
m7_168 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var identifier = SecurityIdentifier.GenerateFuture(new DateTime(2020, 12, 15), ''ED'', Market.USA)", span="311-311"];
m7_169 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var symbol = new Symbol(identifier, ''ED'', Symbol.Empty)", span="312-312"];
m7_170 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, ''ED'', SecurityType.Equity, TimeZones.NewYork)", span="313-313"];
m7_171 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, ''ED'', symbol.ID.SecurityType, CashBook.AccountCurrency)", span="314-314"];
m7_174 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsFalse(symbol.IsCanonical())", span="334-334"];
m7_172 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var subscriptionTypes = new List<Type>() { typeof(TradeBar), typeof(QuoteBar), typeof(OpenInterest) }", span="316-316"];
m7_175 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(subscriptions.Subscriptions.Count(), 3)", span="336-336"];
m7_176 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(subscriptions.Subscriptions.Any(x => x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)))", span="337-337"];
m7_177 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(subscriptions.Subscriptions.Any(x => x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)))", span="338-338"];
m7_178 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(subscriptions.Subscriptions.Any(x => x.TickType == TickType.Trade && x.Type == typeof(TradeBar)))", span="339-339"];
m7_179 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteFutures_WithCorrectSubscriptions()", span="309-309"];
m7_200 [cluster="Unk.DoesNotThrow", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.DoesNotThrow", span=""];
m7_11 [cluster="System.DateTime.DateTime(int, int, int)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m7_16 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m7_12 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="56-56"];
m7_41 [cluster="Unk.IsTrue", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.IsTrue", span=""];
m7_38 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m7_82 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m7_85 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", span="72-72"];
m7_19 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", span="54-54"];
m7_20 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="InteractiveBrokersBrokerage.cs", label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="56-56"];
m7_21 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="InteractiveBrokersBrokerage.cs", label="var manager = new SecurityManager(timeKeeper)", span="57-57"];
m7_22 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="InteractiveBrokersBrokerage.cs", label="var security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="59-59"];
m7_23 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="InteractiveBrokersBrokerage.cs", label="manager.CollectionChanged += (sender, args) =>\r\n            {\r\n                if (args.NewItems.OfType<object>().Single() != security)\r\n                {\r\n                    Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'');\r\n                }\r\n                else\r\n                {\r\n                    Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Add);\r\n                    Assert.Pass();\r\n                }\r\n            }", span="60-71"];
m7_24 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="InteractiveBrokersBrokerage.cs", label="manager.Add(security.Symbol, security)", span="73-73"];
m7_25 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityAdded()", span="54-54"];
m7_119 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var subscriptions = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                marketHoursDbEntry.ExchangeHours,\r\n                marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties,\r\n                _securityInitializer,\r\n                symbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="223-237"];
m7_113 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", span="215-215"];
m7_114 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var symbol = Symbol.Create(''abc'', SecurityType.Cfd, Market.USA)", span="217-217"];
m7_115 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(symbol.ID.Market, symbol, SecurityType.Equity)", span="218-218"];
m7_117 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol, symbol.ID.SecurityType, defaultQuoteCurrency)", span="220-220"];
m7_116 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var defaultQuoteCurrency = CashBook.AccountCurrency", span="219-219"];
m7_118 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var subscriptionTypes = new List<Type>() { typeof(TradeBar) }", span="221-221"];
m7_120 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(subscriptions.Subscriptions.Count(), 1)", span="239-239"];
m7_121 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(subscriptions.Subscriptions.First().Type, typeof(TradeBar))", span="240-240"];
m7_122 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(subscriptions.Subscriptions.First().TickType, TickType.Trade)", span="241-241"];
m7_123 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Cfd_WithCorrectSubscriptions()", span="215-215"];
m7_129 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var equity = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                equityMarketHoursDbEntry.ExchangeHours,\r\n                equityMarketHoursDbEntry.DataTimeZone,\r\n                equitySymbolProperties,\r\n                _securityInitializer,\r\n                equitySymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="252-266"];
m7_124 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", span="245-245"];
m7_125 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var equitySymbol = new Symbol(SecurityIdentifier.GenerateBase(''BTC'', Market.USA), ''BTC'')", span="247-247"];
m7_126 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var equityMarketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, ''BTC'', SecurityType.Base, TimeZones.NewYork)", span="248-248"];
m7_127 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var equitySymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(equitySymbol.ID.Market, equitySymbol, equitySymbol.ID.SecurityType, CashBook.AccountCurrency)", span="249-249"];
m7_128 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var subscriptionTypes = new List<Type>() { typeof(Bitcoin) }", span="250-250"];
m7_130 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(equity.Subscriptions.Count(), 1)", span="268-268"];
m7_131 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(equity.Subscriptions.First().Type, typeof(Bitcoin))", span="269-269"];
m7_132 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(equity.Subscriptions.First().TickType, TickType.Trade)", span="270-270"];
m7_133 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CustomSecurities_WithCorrectSubscriptions()", span="245-245"];
m7_152 [cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="302-302"];
m7_27 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m7_99 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(option.Subscriptions.First().Type, typeof(ZipEntryName))", span="179-179"];
m7_91 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", span="154-154"];
m7_92 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var optionSymbol = Symbol.Create(''GOOG'', SecurityType.Option, Market.USA)", span="156-156"];
m7_93 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var optionMarketHoursDbEntry = _marketHoursDatabase.GetEntry(optionSymbol.ID.Market, optionSymbol, SecurityType.Option)", span="157-157"];
m7_95 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var optionSymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(optionSymbol.ID.Market, optionSymbol, optionSymbol.ID.SecurityType, optionDefaultQuoteCurrency)", span="159-159"];
m7_97 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var option = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                optionMarketHoursDbEntry.ExchangeHours,\r\n                optionMarketHoursDbEntry.DataTimeZone,\r\n                optionSymbolProperties,\r\n                _securityInitializer,\r\n                optionSymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="162-176"];
m7_94 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var optionDefaultQuoteCurrency = CashBook.AccountCurrency", span="158-158"];
m7_96 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var subscriptionTypes = new List<Type>() { typeof(ZipEntryName) }", span="160-160"];
m7_98 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(option.Subscriptions.Count(), 1)", span="178-178"];
m7_100 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(option.Subscriptions.First().TickType, TickType.Quote)", span="180-180"];
m7_101 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_CanonicalOption_WithCorrectSubscriptions()", span="154-154"];
m7_14 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m7_15 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m7_10 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m7_40 [cluster="Unk.Fail", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Fail", span=""];
m7_84 [cluster="string.Substring(int)", file="InteractiveBrokersBrokerage.cs", label="Entry string.Substring(int)", span="0-0"];
m7_26 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m7_157 [cluster="Unk.Any", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Any", span=""];
m7_108 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var equity = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                equityMarketHoursDbEntry.ExchangeHours,\r\n                equityMarketHoursDbEntry.DataTimeZone,\r\n                equitySymbolProperties,\r\n                _securityInitializer,\r\n                equitySymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="193-207"];
m7_102 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", span="185-185"];
m7_103 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var equitySymbol = Symbol.Create(''AAPL'', SecurityType.Equity, Market.USA)", span="187-187"];
m7_104 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var equityMarketHoursDbEntry = _marketHoursDatabase.GetEntry(equitySymbol.ID.Market, equitySymbol, SecurityType.Equity)", span="188-188"];
m7_106 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var equitySymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(equitySymbol.ID.Market, equitySymbol, equitySymbol.ID.SecurityType, equityDefaultQuoteCurrency)", span="190-190"];
m7_105 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var equityDefaultQuoteCurrency = CashBook.AccountCurrency", span="189-189"];
m7_107 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var subscriptionTypes = new List<Type>() { typeof(TradeBar) }", span="191-191"];
m7_109 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(equity.Subscriptions.Count(), 1)", span="209-209"];
m7_110 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(equity.Subscriptions.First().Type, typeof(TradeBar))", span="210-210"];
m7_111 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(equity.Subscriptions.First().TickType, TickType.Trade)", span="211-211"];
m7_112 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Equity_WithCorrectSubscriptions()", span="185-185"];
m7_30 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m7_64 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="173-173"];
m7_144 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var optionSubscriptions = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                optionMarketHoursDbEntry.ExchangeHours,\r\n                optionMarketHoursDbEntry.DataTimeZone,\r\n                optionSymbolProperties,\r\n                _securityInitializer,\r\n                optionSymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="284-298"];
m7_137 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", span="274-274"];
m7_138 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var underlying = SecurityIdentifier.GenerateEquity(new DateTime(1998, 01, 02), ''SPY'', Market.USA)", span="276-276"];
m7_139 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var optionIdentifier = SecurityIdentifier.GenerateOption(new DateTime(2015, 09, 18), underlying, Market.USA, 195.50m, OptionRight.Put, OptionStyle.European)", span="277-277"];
m7_140 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var optionSymbol = new Symbol(optionIdentifier, ''SPY'', Symbol.Empty)", span="278-278"];
m7_141 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var optionMarketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, ''SPY'', SecurityType.Equity, TimeZones.NewYork)", span="279-279"];
m7_142 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var optionSymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(optionSymbol.ID.Market, ''SPY'', optionSymbol.ID.SecurityType, CashBook.AccountCurrency)", span="280-280"];
m7_145 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsFalse(optionSymbol.IsCanonical())", span="300-300"];
m7_143 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var subscriptionTypes = new List<Type>() { typeof(TradeBar), typeof(QuoteBar), typeof(OpenInterest) }", span="282-282"];
m7_146 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(optionSubscriptions.Subscriptions.Count(), 3)", span="302-302"];
m7_147 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(optionSubscriptions.Subscriptions.Any(x => x.TickType == TickType.OpenInterest && x.Type == typeof(OpenInterest)))", span="303-303"];
m7_148 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(optionSubscriptions.Subscriptions.Any(x => x.TickType == TickType.Quote && x.Type == typeof(QuoteBar)))", span="304-304"];
m7_149 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(optionSubscriptions.Subscriptions.Any(x => x.TickType == TickType.Trade && x.Type == typeof(TradeBar)))", span="305-305"];
m7_150 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_ConcreteOptions_WithCorrectSubscriptions()", span="274-274"];
m7_13 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m7_29 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m7_87 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Type>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Type>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="309-309"];
m7_134 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="217-217"];
m7_56 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", span="100-100"];
m7_57 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="InteractiveBrokersBrokerage.cs", label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="102-102"];
m7_58 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="InteractiveBrokersBrokerage.cs", label="var manager = new SecurityManager(timeKeeper)", span="103-103"];
m7_59 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="InteractiveBrokersBrokerage.cs", label="var security = new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="105-105"];
m7_60 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="InteractiveBrokersBrokerage.cs", label="manager.Add(security.Symbol, security)", span="106-106"];
m7_61 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="InteractiveBrokersBrokerage.cs", label="manager.CollectionChanged += (sender, args) =>\r\n            {\r\n                if (args.OldItems.OfType<object>().Single() != security)\r\n                {\r\n                    Assert.Fail(''Expected args.NewItems to have exactly one element equal to security'');\r\n                }\r\n                else\r\n                {\r\n                    Assert.IsTrue(args.Action == NotifyCollectionChangedAction.Remove);\r\n                    Assert.Pass();\r\n                }\r\n            }", span="107-118"];
m7_62 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="InteractiveBrokersBrokerage.cs", label="manager.Remove(security.Symbol)", span="120-120"];
m7_63 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.NotifiesWhenSecurityRemoved()", span="100-100"];
m7_153 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string, QuantConnect.Symbol)", span="259-259"];
m7_0 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", span="41-41"];
m7_1 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="var timeKeeper = new TimeKeeper(new DateTime(2015, 12, 07))", span="43-43"];
m7_2 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_securityManager = new SecurityManager(timeKeeper)", span="44-44"];
m7_5 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_subscriptionManager = new SubscriptionManager(new AlgorithmSettings(), timeKeeper)", span="47-47"];
m7_3 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_securityTransactionManager = new SecurityTransactionManager(_securityManager)", span="45-45"];
m7_4 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_securityPortfolioManager = new SecurityPortfolioManager(_securityManager, _securityTransactionManager)", span="46-46"];
m7_6 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="48-48"];
m7_7 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="49-49"];
m7_8 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_securityInitializer = SecurityInitializer.Null", span="50-50"];
m7_9 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.Setup()", span="41-41"];
m7_154 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m7_201 [cluster="Unk.Throws", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Throws", span=""];
m7_83 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="210-210"];
m7_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m7_135 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m7_151 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", span="362-362"];
m7_88 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m7_77 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var forex = SecurityManager.CreateSecurity(subscriptionTypes,\r\n                _securityPortfolioManager,\r\n                _subscriptionManager,\r\n                forexMarketHoursDbEntry.ExchangeHours,\r\n                forexMarketHoursDbEntry.DataTimeZone,\r\n                forexSymbolProperties,\r\n                _securityInitializer,\r\n                forexSymbol,\r\n                Resolution.Second,\r\n                false,\r\n                1.0m,\r\n                false,\r\n                false,\r\n                false,\r\n                false)", span="133-147"];
m7_71 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", span="124-124"];
m7_72 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var forexSymbol = Symbol.Create(''EURUSD'', SecurityType.Forex, Market.FXCM)", span="126-126"];
m7_73 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var forexMarketHoursDbEntry = _marketHoursDatabase.GetEntry(forexSymbol.ID.Market, forexSymbol, SecurityType.Forex)", span="127-127"];
m7_74 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var forexDefaultQuoteCurrency = forexSymbol.Value.Substring(3)", span="128-128"];
m7_75 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var forexSymbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(forexSymbol.ID.Market, forexSymbol, forexSymbol.ID.SecurityType, forexDefaultQuoteCurrency)", span="130-130"];
m7_76 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="var subscriptionTypes = new List<Type>() { typeof(QuoteBar) }", span="131-131"];
m7_78 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(forex.Subscriptions.Count(), 1)", span="148-148"];
m7_79 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(forex.Subscriptions.First().Type, typeof(QuoteBar))", span="149-149"];
m7_80 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(forex.Subscriptions.First().TickType, TickType.Quote)", span="150-150"];
m7_81 [cluster="QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityManagerTests.SecurityManagerCanCreate_Forex_WithCorrectSubscriptions()", span="124-124"];
m7_221 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", span=""];
m7_222 [file="InteractiveBrokersBrokerage.cs", label=security, span=""];
m7_223 [file="InteractiveBrokersBrokerage.cs", label=security, span=""];
m7_224 [file="InteractiveBrokersBrokerage.cs", label=security, span=""];
m7_225 [file="InteractiveBrokersBrokerage.cs", label=subscriptionDataConfigList, span=""];
m9_8 [cluster="Unk.HasAttr", file="OpeningBreakoutAlgorithm.cs", label="Entry Unk.HasAttr", span=""];
m9_0 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", file="OpeningBreakoutAlgorithm.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", span="33-33"];
m9_1 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", file="OpeningBreakoutAlgorithm.cs", label="Py.GIL()", span="35-35"];
m9_3 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", file="OpeningBreakoutAlgorithm.cs", label="!model.HasAttr(attributeName)", span="39-39"];
m9_4 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", file="OpeningBreakoutAlgorithm.cs", label="throw new NotImplementedException($''IPortfolioSelectionModel.{attributeName} must be implemented. Please implement this missing method on {model.GetPythonType()}'');", span="41-41"];
m9_5 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", file="OpeningBreakoutAlgorithm.cs", label="_model = model", span="45-45"];
m9_2 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", file="OpeningBreakoutAlgorithm.cs", label="new[] { ''CreateUniverses'' }", span="37-37"];
m9_6 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", file="OpeningBreakoutAlgorithm.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", span="33-33"];
m9_17 [cluster="Unk.CreateUniverses", file="OpeningBreakoutAlgorithm.cs", label="Entry Unk.CreateUniverses", span=""];
m9_18 [cluster="Unk.AsManagedObject", file="OpeningBreakoutAlgorithm.cs", label="Entry Unk.AsManagedObject", span=""];
m9_10 [cluster="Unk.GetPythonType", file="OpeningBreakoutAlgorithm.cs", label="Entry Unk.GetPythonType", span=""];
m9_11 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="OpeningBreakoutAlgorithm.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="53-53"];
m9_12 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="OpeningBreakoutAlgorithm.cs", label="Py.GIL()", span="55-55"];
m9_15 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="OpeningBreakoutAlgorithm.cs", label="yield return universe.AsManagedObject(typeof(Universe)) as Universe;", span="60-60"];
m9_13 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="OpeningBreakoutAlgorithm.cs", label="var universers = _model.CreateUniverses(algorithm) as PyObject", span="57-57"];
m9_14 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="OpeningBreakoutAlgorithm.cs", label=universers, span="58-58"];
m9_16 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="OpeningBreakoutAlgorithm.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="53-53"];
m9_9 [cluster="System.NotImplementedException.NotImplementedException(string)", file="OpeningBreakoutAlgorithm.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m9_7 [cluster="Unk.GIL", file="OpeningBreakoutAlgorithm.cs", label="Entry Unk.GIL", span=""];
m9_19 [file="OpeningBreakoutAlgorithm.cs", label="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper", span=""];
m10_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="957-957"];
m10_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Error($''The order quantity for {symbol.Value} cannot be calculated: the price of the security is zero.'')", span="962-962"];
m10_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var targetPortfolioValue = target * Portfolio.TotalPortfolioValue", span="967-967"];
m10_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Error($''The order quantity for {symbol.Value} cannot be calculated: Reason: {result.Reason}.'')", span="972-972"];
m10_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="security.Price == 0", span="960-960"];
m10_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="var result = security.BuyingPowerModel.GetMaximumOrderQuantityForTargetValue(Portfolio, security, targetPortfolioValue)", span="969-969"];
m10_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return 0;", span="963-963"];
m10_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="result.Quantity == 0 && result.IsError", span="970-970"];
m10_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return result.Quantity;", span="975-975"];
m10_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="955-955"];
m10_288 [cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120"];
m10_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
m10_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="412-412"];
m10_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopMarket, security, quantity, tag, stopPrice: stopPrice, properties: DefaultOrderProperties?.Clone())", span="413-413"];
m10_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="414-414"];
m10_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="417-417"];
m10_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="420-420"];
m10_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="415-415"];
m10_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
m10_74 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="247-247"];
m10_203 [cluster="int.ToString()", file="QCAlgorithm.Trading.cs", label="Entry int.ToString()", span="0-0"];
m10_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531"];
m10_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return Order(strategy, Math.Abs(quantity) * -1);", span="533-533"];
m10_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="531-531"];
m10_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1344-1344"];
m10_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="976-976"];
m10_19 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.OnData(QuantConnect.Data.Slice)", span="66-66"];
m10_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="857-857"];
m10_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="859-859"];
m10_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="857-857"];
m10_0 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.Initialize()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.Initialize()", span="45-45"];
m10_1 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.Initialize()", color=green, community=0, file="QCAlgorithm.Trading.cs", label="6: SetStartDate(2013, 10, 07)", span="47-47"];
m10_2 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.Initialize()", color=green, community=0, file="QCAlgorithm.Trading.cs", label="6: SetEndDate(2013, 10, 11)", span="48-48"];
m10_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547"];
m10_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var orders = new List<OrderTicket>()", span="549-549"];
m10_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var strategyTag = strategy.Name + '' ('' + strategyQuantity.ToString() + '')''", span="552-552"];
m10_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.OptionLegs != null", span="555-555"];
m10_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.OptionLegs", span="557-557"];
m10_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var optionSeq = Securities.Where(kv => kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike)", span="559-562"];
m10_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var error = string.Format(''Couldn't find the option contract in algorithm securities list. Underlying: {0}, option {1}, strike {2}, expiration: {3}'',\r\n                                strategy.Underlying.ToString(), optionLeg.Right.ToString(), optionLeg.Strike.ToString(), optionLeg.Expiration.ToString())", span="566-567"];
m10_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var marketOrder = MarketOrder(option, optionLeg.Quantity * strategyQuantity, tag: strategyTag)", span="576-576"];
m10_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var limitOrder = LimitOrder(option, optionLeg.Quantity * strategyQuantity, optionLeg.OrderPrice, tag: strategyTag)", span="580-580"];
m10_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="strategy.UnderlyingLegs != null", span="590-590"];
m10_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", color=red, community=0, file="QCAlgorithm.Trading.cs", label="0: strategy.UnderlyingLegs", span="592-592"];
m10_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="!Securities.ContainsKey(strategy.Underlying)", span="594-594"];
m10_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var error = string.Format(''Couldn't find the option contract underlying in algorithm securities list. Underlying: {0}'', strategy.Underlying.ToString())", span="596-596"];
m10_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var marketOrder = MarketOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, tag: strategyTag)", span="603-603"];
m10_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var limitOrder = LimitOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, underlyingLeg.OrderPrice, tag: strategyTag)", span="607-607"];
m10_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(marketOrder)", span="577-577"];
m10_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(limitOrder)", span="581-581"];
m10_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(marketOrder)", span="604-604"];
m10_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="orders.Add(limitOrder)", span="608-608"];
m10_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return orders;", span="615-615"];
m10_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="optionLeg.OrderType", span="573-573"];
m10_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + optionLeg.OrderType.ToString());", span="584-584"];
m10_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="optionSeq.Count() != 1", span="564-564"];
m10_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="var option = optionSeq.First().Key", span="571-571"];
m10_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(error);", span="568-568"];
m10_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Market", span="575-575"];
m10_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Limit", span="579-579"];
m10_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="underlyingLeg.OrderType", span="600-600"];
m10_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + underlyingLeg.OrderType.ToString());", span="611-611"];
m10_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="throw new InvalidOperationException(error);", span="597-597"];
m10_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Market", span="602-602"];
m10_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="OrderType.Limit", span="606-606"];
m10_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="547-547"];
m10_284 [cluster="string.ToLower()", file="QCAlgorithm.Trading.cs", label="Entry string.ToLower()", span="0-0"];
m10_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397"];
m10_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="399-399"];
m10_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, double, decimal, string)", span="397-397"];
m10_205 [cluster="Unk.Count", file="QCAlgorithm.Trading.cs", label="Entry Unk.Count", span=""];
m10_217 [cluster="string.Format(string, object)", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, object)", span="0-0"];
m10_12 [cluster="System.Math.Abs(decimal)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m10_66 [cluster="Unk.Any", file="QCAlgorithm.Trading.cs", label="Entry Unk.Any", span=""];
m10_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m10_387 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m10_210 [cluster="string.Format(string, params object[])", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m10_214 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m10_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="844-844"];
m10_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="846-846"];
m10_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="844-844"];
m10_283 [cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154"];
m10_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m10_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="294-294"];
m10_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292"];
m10_3 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.Initialize()", color=green, community=0, file="QCAlgorithm.Trading.cs", label="6: SetCash(1000000)", span="49-49"];
m10_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="870-870"];
m10_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="872-872"];
m10_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="870-870"];
m10_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304"];
m10_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnCloseOrder(symbol, (decimal)quantity, tag);", span="306-306"];
m10_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, double, string)", span="304-304"];
m10_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="6: Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m10_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="6: Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m10_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="53-53"];
m10_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m10_8 [cluster="System.Math.Abs(double)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m10_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m10_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, Math.Abs(quantity));", span="64-64"];
m10_204 [cluster="Unk.Where", file="QCAlgorithm.Trading.cs", label="Entry Unk.Where", span=""];
m10_287 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m10_310 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="270-270"];
m10_202 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m10_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542"];
m10_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return GenerateOrders(strategy, quantity);", span="544-544"];
m10_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="542-542"];
m10_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272"];
m10_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="274-274"];
m10_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnOpen, security, quantity, tag, DefaultOrderProperties?.Clone())", span="275-275"];
m10_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="276-276"];
m10_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="279-279"];
m10_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="282-282"];
m10_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="277-277"];
m10_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, decimal, string)", span="272-272"];
m10_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
m10_75 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="206-206"];
m10_76 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Resolution != Resolution.Daily", span="206-206"];
m10_77 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="206-206"];
m10_219 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike", span="559-562"];
m10_218 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="559-562"];
m10_220 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="559-562"];
m10_313 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="774-774"];
m10_314 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="x.Value", span="774-774"];
m10_315 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="774-774"];
m10_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity);", span="138-138"];
m10_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136"];
m10_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="885-885"];
m10_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Security security", span="888-888"];
m10_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!Securities.TryGetValue(symbol, out security)", span="889-889"];
m10_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="891-891"];
m10_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=liquidateExistingHoldings, span="896-896"];
m10_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="902-902"];
m10_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Order(holdingSymbol, liquidationQuantity, false, tag)", span="906-906"];
m10_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var marketOrdersQuantity =\r\n                (from order in Transactions.GetOpenOrders(symbol)\r\n                 where order.Type == OrderType.Market\r\n                 select Transactions.GetOrderTicket(order.Id)\r\n                 into ticket\r\n                 where ticket != null\r\n                 select ticket.Quantity - ticket.QuantityFilled).Sum()", span="912-918"];
m10_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var quantity = CalculateOrderQuantity(symbol, percentage) - marketOrdersQuantity", span="921-921"];
m10_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="MarketOrder(symbol, quantity, false, tag)", span="927-927"];
m10_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="MarketOnOpenOrder(symbol, quantity, tag)", span="931-931"];
m10_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="security.Exchange.ExchangeOpen", span="925-925"];
m10_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return;", span="892-892"];
m10_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=Portfolio, span="898-898"];
m10_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var holdingSymbol = kvp.Key", span="900-900"];
m10_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var holdings = kvp.Value", span="901-901"];
m10_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var liquidationQuantity = CalculateOrderQuantity(holdingSymbol, 0m)", span="905-905"];
m10_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Math.Abs(quantity) > 0", span="922-922"];
m10_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="885-885"];
m10_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350"];
m10_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="352-352"];
m10_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, double, decimal, string)", span="350-350"];
m10_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1013-1013"];
m10_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)quantity);", span="1015-1015"];
m10_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="1013-1013"];
m10_38 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="153-153"];
m10_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636"];
m10_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", span=""];
m10_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
m10_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="365-365"];
m10_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.Limit, security, quantity, tag, limitPrice: limitPrice, properties: DefaultOrderProperties?.Clone())", span="366-366"];
m10_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="367-367"];
m10_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="370-370"];
m10_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="373-373"];
m10_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="368-368"];
m10_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
m10_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
m10_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="434-434"];
m10_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432"];
m10_286 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m10_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640"];
m10_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label=IsWarmingUp, span="642-642"];
m10_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.WarmingUp(request);", span="644-644"];
m10_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Securities.TryGetValue(request.Symbol, out security)", span="650-650"];
m10_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MissingSecurity, ''You haven't requested '' + request.Symbol.ToString() + '' data. Add this with AddSecurity() in the Initialize() Method.'');", span="652-652"];
m10_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity == 0", span="656-656"];
m10_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.ZeroQuantity(request);", span="658-658"];
m10_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Math.Abs(request.Quantity) < security.SymbolProperties.LotSize", span="661-661"];
m10_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.OrderQuantityLessThanLoteSize, $''Unable to {request.OrderRequestType.ToString().ToLower()} order with id {request.OrderId} which quantity ({Math.Abs(request.Quantity)}) is less than lot size ({security.SymbolProperties.LotSize}).'');", span="663-663"];
m10_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="668-668"];
m10_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="674-674"];
m10_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="676-676"];
m10_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.OptionExercise && !security.Exchange.ExchangeOpen", span="680-680"];
m10_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="682-682"];
m10_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="687-687"];
m10_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.QuoteCurrencyRequired, request.Symbol.Value + '': requires '' + quoteCurrency + '' in the cashbook to trade.'');", span="695-695"];
m10_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ConversionRateZero, request.Symbol.Value + '': requires '' + quoteCurrency + '' to have a non-zero conversion rate. This can be caused by lack of data.'');", span="699-699"];
m10_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' in the cashbook to trade.'');", span="709-709"];
m10_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexConversionRateZero, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' to have non-zero conversion rates. This can be caused by lack of data.'');", span="713-713"];
m10_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityHasNoData, ''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'');", span="720-720"];
m10_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="727-727"];
m10_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.OptionExercise", span="730-730"];
m10_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonExercisableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is not exercisable.'');", span="733-733"];
m10_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''The security with symbol ''' + request.Symbol.ToString() + ''' has a short option position. Only long option positions are exercisable.'');", span="736-736"];
m10_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity > security.Holdings.Quantity", span="738-738"];
m10_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''Cannot exercise more contracts of ''' + request.Symbol.ToString() + ''' than is currently available in the portfolio. '');", span="739-739"];
m10_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.Quantity <= 0.0m", span="741-741"];
m10_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="OrderResponse.ZeroQuantity(request)", span="742-742"];
m10_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="request.OrderType == OrderType.MarketOnClose", span="745-745"];
m10_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="755-755"];
m10_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return OrderResponse.Success(request);", span="760-760"];
m10_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Security security", span="649-649"];
m10_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.IsTradable", span="666-666"];
m10_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var price = security.Price", span="671-671"];
m10_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var quoteCurrency = security.QuoteCurrency.Symbol", span="692-692"];
m10_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.QuoteCurrency.ConversionRate == 0m", span="697-697"];
m10_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.Type == SecurityType.Forex || security.Type == SecurityType.Crypto", span="703-703"];
m10_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var baseCurrency = ((IBaseCurrencySymbol)security).BaseCurrencySymbol", span="706-706"];
m10_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.HasData", span="718-718"];
m10_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.Type != SecurityType.Option", span="732-732"];
m10_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="security.Holdings.IsShort", span="735-735"];
m10_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="747-747"];
m10_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="750-750"];
m10_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="price == 0", span="685-685"];
m10_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Cash quoteCash", span="691-691"];
m10_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Portfolio.CashBook.TryGetValue(quoteCurrency, out quoteCash)", span="693-693"];
m10_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Cash baseCash", span="705-705"];
m10_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="707-707"];
m10_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="baseCash.ConversionRate == 0m", span="711-711"];
m10_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="!LiveMode && Transactions.OrdersCount > _maxOrders", span="724-724"];
m10_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Status = AlgorithmStatus.Stopped", span="726-726"];
m10_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var latestSubmissionTime = nextMarketClose.Subtract(Orders.MarketOnCloseOrder.DefaultSubmissionTimeBuffer)", span="749-749"];
m10_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="640-640"];
m10_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1023-1023"];
m10_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="var exchangeHours = MarketHoursDatabase\r\n                .FromDataFolder()\r\n                .GetExchangeHours(symbol.ID.Market, symbol, symbol.SecurityType)", span="1025-1027"];
m10_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="var time = UtcTime.ConvertFromUtc(exchangeHours.TimeZone)", span="1029-1029"];
m10_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="return exchangeHours.IsOpen(time, false);", span="1031-1031"];
m10_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1023-1023"];
m10_351 [cluster="Unk.Abs", file="QCAlgorithm.Trading.cs", label="Entry Unk.Abs", span=""];
m10_16 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="146-146"];
m10_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1791-1791"];
m10_29 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.Trading.cs", label="Entry Unk.FirstOrDefault", span=""];
m10_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)quantity);", span="129-129"];
m10_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m10_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
m10_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="250-250"];
m10_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, double, string)", span="248-248"];
m10_207 [cluster="System.Enum.ToString()", file="QCAlgorithm.Trading.cs", label="Entry System.Enum.ToString()", span="0-0"];
m10_216 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m10_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="989-989"];
m10_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity, asynchronous, tag);", span="991-991"];
m10_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="989-989"];
m10_309 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m10_72 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="437-437"];
m10_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="6: Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96"];
m10_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity) * -1);", span="98-98"];
m10_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m10_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="6: return Order(symbol, (decimal)Math.Abs(quantity) * -1m);", span="109-109"];
m10_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="96-96"];
m10_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m10_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m10_366 [cluster="QuantConnect.Securities.IBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.IBuyingPowerModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="57-57"];
m10_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625"];
m10_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecksImpl(request)", span="627-627"];
m10_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="628-628"];
m10_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Error(response.ErrorMessage)", span="630-630"];
m10_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="return response;", span="632-632"];
m10_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="625-625"];
m10_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m10_215 [cluster="Unk.LimitOrder", file="QCAlgorithm.Trading.cs", label="Entry Unk.LimitOrder", span=""];
m10_383 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="607-607"];
m10_384 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124"];
m10_213 [cluster="Unk.MarketOrder", file="QCAlgorithm.Trading.cs", label="Entry Unk.MarketOrder", span=""];
m10_381 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
m10_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1882-1882"];
m10_285 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="247-247"];
m10_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384"];
m10_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopMarketOrder(symbol, (decimal)quantity, stopPrice, tag);", span="386-386"];
m10_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384"];
m10_206 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Symbol.ToString()", span="375-375"];
m10_68 [cluster="QuantConnect.Interfaces.IOrderProperties.Clone()", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Interfaces.IOrderProperties.Clone()", span="32-32"];
m10_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
m10_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="return Order(strategy, Math.Abs(quantity));", span="522-522"];
m10_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="520-520"];
m10_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184"];
m10_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="186-186"];
m10_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, double, bool, string)", span="184-184"];
m10_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m10_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1001-1001"];
m10_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity);", span="1003-1003"];
m10_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="1001-1001"];
m10_282 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
m10_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
m10_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="return MarketOnOpenOrder(symbol, (decimal)quantity, tag);", span="262-262"];
m10_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260"];
m10_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
m10_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="462-462"];
m10_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice, properties: DefaultOrderProperties?.Clone())", span="463-463"];
m10_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="464-464"];
m10_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="467-467"];
m10_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="471-471"];
m10_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="465-465"];
m10_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, decimal, decimal, decimal, string)", span="460-460"];
m10_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m10_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
m10_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="return LimitOrder(symbol, (decimal)quantity, limitPrice, tag);", span="339-339"];
m10_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337"];
m10_280 [cluster="QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)", span="164-164"];
m10_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
m10_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var option = (Option)Securities[optionSymbol]", span="483-483"];
m10_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.OptionExercise, option, quantity, tag, DefaultOrderProperties?.Clone())", span="485-485"];
m10_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="!asynchronous", span="504-504"];
m10_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label=IsWarmingUp, span="488-488"];
m10_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="490-490"];
m10_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="494-494"];
m10_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="497-497"];
m10_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.AddOrder(request)", span="501-501"];
m10_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="preOrderCheckResponse.IsError", span="495-495"];
m10_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="506-506"];
m10_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return ticket;", span="509-509"];
m10_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="481-481"];
m10_70 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="446-446"];
m10_352 [cluster="Unk.MarketOnOpenOrder", file="QCAlgorithm.Trading.cs", label="Entry Unk.MarketOnOpenOrder", span=""];
m10_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="829-829"];
m10_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="!_locked", span="831-831"];
m10_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="_maxOrders = max", span="833-833"];
m10_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="829-829"];
m10_212 [cluster="Unk.First", file="QCAlgorithm.Trading.cs", label="Entry Unk.First", span=""];
m10_311 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="235-235"];
m10_209 [cluster="System.DateTime.ToString()", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m10_36 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.Trading.cs", label="Log(orderEvent.ToString())", span="99-99"];
m10_37 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="97-97"];
m10_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m10_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, (decimal)quantity, asynchronous, tag);", span="173-173"];
m10_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171"];
m10_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
m10_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="318-318"];
m10_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag, DefaultOrderProperties?.Clone())", span="319-319"];
m10_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="var response = PreOrderChecks(request)", span="320-320"];
m10_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="323-323"];
m10_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="return Transactions.AddOrder(request);", span="326-326"];
m10_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="response.IsError", span="321-321"];
m10_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316"];
m10_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="942-942"];
m10_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="return CalculateOrderQuantity(symbol, (decimal)target);", span="944-944"];
m10_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="942-942"];
m10_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (decimal)Math.Abs(quantity));", span="75-75"];
m10_35 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="97-97"];
m10_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="199-199"];
m10_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="205-205"];
m10_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag, DefaultOrderProperties?.Clone())", span="214-214"];
m10_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!asynchronous", span="233-233"];
m10_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!security.Exchange.ExchangeOpen", span="203-203"];
m10_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var anyNonDailySubscriptions = security.Subscriptions.Any(x => x.Resolution != Resolution.Daily)", span="206-206"];
m10_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="mooTicket.SubmitRequest.Response.IsSuccess && !anyNonDailySubscriptions", span="207-207"];
m10_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="209-209"];
m10_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return mooTicket;", span="211-211"];
m10_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=IsWarmingUp, span="217-217"];
m10_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="219-219"];
m10_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="223-223"];
m10_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="226-226"];
m10_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.AddOrder(request)", span="230-230"];
m10_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="preOrderCheckResponse.IsError", span="224-224"];
m10_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="235-235"];
m10_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return ticket;", span="238-238"];
m10_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m10_349 [cluster="Unk.GetOrderTicket", file="QCAlgorithm.Trading.cs", label="Entry Unk.GetOrderTicket", span=""];
m10_211 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="QCAlgorithm.Trading.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m10_281 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
m10_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770"];
m10_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var orderIdList = new List<int>()", span="772-772"];
m10_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="symbol != symbolToLiquidate && symbolToLiquidate != null", span="777-777"];
m10_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Transactions.CancelOrder(order.Id, tag)", span="806-806"];
m10_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Order(symbol, -quantity - marketOrdersQuantity, tag: tag)", span="814-814"];
m10_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Securities.Keys.OrderBy(x => x.Value)", span="774-774"];
m10_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="orderIdList.Add(ticket.OrderId)", span="817-817"];
m10_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="return orderIdList;", span="822-822"];
m10_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var orders = Transactions.GetOpenOrders(symbol)", span="781-781"];
m10_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var quantity = Portfolio[symbol].Quantity", span="784-784"];
m10_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="787-787"];
m10_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label=orders, span="792-792"];
m10_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="quantity != 0", span="811-811"];
m10_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var marketOrdersQuantity = 0m", span="791-791"];
m10_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="801-801"];
m10_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="order.Type == OrderType.Market", span="794-794"];
m10_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="var ticket = Transactions.GetOrderTicket(order.Id)", span="797-797"];
m10_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="ticket != null", span="798-798"];
m10_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="ticket.Status == OrderStatus.Filled", span="815-815"];
m10_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770"];
m10_73 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="153-153"];
m10_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", span="1034-1034"];
m10_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="QCAlgorithm.Trading.cs", label="return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag, properties);", span="1036-1036"];
m10_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, decimal, string, QuantConnect.Interfaces.IOrderProperties, decimal, decimal)", span="1034-1034"];
m10_350 [cluster="Unk.Sum", file="QCAlgorithm.Trading.cs", label="Entry Unk.Sum", span=""];
m10_382 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="74-74"];
m10_312 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="173-173"];
m10_208 [cluster="decimal.ToString()", file="QCAlgorithm.Trading.cs", label="Entry decimal.ToString()", span="0-0"];
m10_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="120-120"];
m10_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
m10_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="return StopLimitOrder(symbol, (decimal)quantity, stopPrice, limitPrice, tag);", span="448-448"];
m10_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, double, decimal, decimal, string)", span="446-446"];
m10_388 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m10_389 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Securities.Option.OptionStrategy", span=""];
m10_390 [file="QCAlgorithm.Trading.cs", label=optionLeg, span=""];
m11_59 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="RegressionTests.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m11_50 [cluster="MapFile.cstr", file="RegressionTests.cs", label="Entry MapFile.cstr", span=""];
m11_49 [cluster="Unk.SafeMapFileRowRead", file="RegressionTests.cs", label="Entry Unk.SafeMapFileRowRead", span=""];
m11_5 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="32-53"];
m11_36 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetEnumerator()", file="RegressionTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.GetEnumerator()", span="128-128"];
m11_37 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetEnumerator()", file="RegressionTests.cs", label="return _data.Values.GetEnumerator();", span="130-130"];
m11_38 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetEnumerator()", file="RegressionTests.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.GetEnumerator()", span="128-128"];
m11_43 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMapFiles(string)", file="RegressionTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.GetMapFiles(string)", span="152-152"];
m11_44 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMapFiles(string)", file="RegressionTests.cs", label="return from file in Directory.EnumerateFiles(mapFileDirectory)\r\n                   where file.EndsWith(''.csv'')\r\n                   let permtick = Path.GetFileNameWithoutExtension(file)\r\n                   let fileRead = SafeMapFileRowRead(file)\r\n                   select new MapFile(permtick, fileRead);", span="154-158"];
m11_45 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMapFiles(string)", file="RegressionTests.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.GetMapFiles(string)", span="152-152"];
m11_60 [cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_30 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m11_25 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="RegressionTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m11_26 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="377-377"];
m11_8 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="101-122"];
m11_9 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="124-145"];
m11_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-56.034%''},\r\n                {''Drawdown'', ''3.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-3.755%''},\r\n                {''Sharpe Ratio'', ''-3.629''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.424''},\r\n                {''Beta'', ''1.25''},\r\n                {''Annual Standard Deviation'', ''0.173''},\r\n                {''Annual Variance'', ''0.03''},\r\n                {''Information Ratio'', ''-3.62''},\r\n                {''Tracking Error'', ''0.128''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$2.00''}\r\n            }", span="147-168"];
m11_27 [cluster="QuantConnect.Data.Auxiliary.MapFile.Read(string, string)", file="RegressionTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.Read(string, string)", span="103-103"];
m11_28 [cluster="QuantConnect.Data.Auxiliary.MapFile.Read(string, string)", file="RegressionTests.cs", label="return new MapFile(permtick, MapFileRow.Read(permtick, market));", span="105-105"];
m11_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="RegressionTests.cs", label="1: var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''2.57%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''900.493%''},\r\n                {''Drawdown'', ''3.300%''},\r\n                {''Expectancy'', ''86.582''},\r\n                {''Net Profit'', ''2.556%''},\r\n                {''Sharpe Ratio'', ''3.003''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''261.75''},\r\n                {''Alpha'', ''-0.014''},\r\n                {''Beta'', ''0.996''},\r\n                {''Annual Standard Deviation'', ''0.452''},\r\n                {''Annual Variance'', ''0.204''},\r\n                {''Information Ratio'', ''-10.05''},\r\n                {''Tracking Error'', ''0.002''},\r\n                {''Treynor Ratio'', ''1.361''},\r\n                {''Total Fees'', ''$22.33''},\r\n            }", span="331-352"];
m11_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="RegressionTests.cs", label="1: return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="354-377"];
m11_21 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m11_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="30-30"];
m11_22 [cluster="QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)", file="RegressionTests.cs", label="return false;", span="95-95"];
m11_23 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="386-386"];
m11_24 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m11_31 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="388-388"];
m11_32 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="389-389"];
m11_33 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="390-390"];
m11_35 [cluster="System.IO.Path.Combine(params string[])", file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m11_0 [cluster="QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", file="RegressionTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", span="57-57"];
m11_1 [cluster="QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", file="RegressionTests.cs", label="Permtick = permtick.ToUpper()", span="59-59"];
m11_2 [cluster="QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", file="RegressionTests.cs", label="_data = new SortedDictionary<DateTime, MapFileRow>(data.Distinct().ToDictionary(x => x.Date))", span="60-60"];
m11_3 [cluster="QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", file="RegressionTests.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", span="57-57"];
m11_34 [cluster="string.ToLower()", file="RegressionTests.cs", label="Entry string.ToLower()", span="0-0"];
m11_29 [cluster="QuantConnect.Data.Auxiliary.MapFile.Read(string, string)", file="RegressionTests.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.Read(string, string)", span="103-103"];
m11_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="RegressionTests.cs", label="1: var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''99.900%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0.453''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''46.332''},\r\n                {''Beta'', ''73.501''},\r\n                {''Annual Standard Deviation'', ''118.922''},\r\n                {''Annual Variance'', ''14142.47''},\r\n                {''Information Ratio'', ''0.452''},\r\n                {''Tracking Error'', ''118.915''},\r\n                {''Treynor Ratio'', ''0.733''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="170-191"];
m11_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="193-214"];
m11_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="239-260"];
m11_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="216-237"];
m11_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.774''},\r\n                {''Beta'', ''0.182''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''1.319''},\r\n                {''Tracking Error'', ''0.247''},\r\n                {''Treynor Ratio'', ''4.798''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="285-306"];
m11_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="262-283"];
m11_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.39%''},\r\n                {''Average Loss'', ''-0.66%''},\r\n                {''Compounding Annual Return'', ''-0.622%''},\r\n                {''Drawdown'', ''2.600%''},\r\n                {''Expectancy'', ''-0.229''},\r\n                {''Net Profit'', ''-0.622%''},\r\n                {''Sharpe Ratio'', ''-0.228''},\r\n                {''Loss Rate'', ''75%''},\r\n                {''Win Rate'', ''25%''},\r\n                {''Profit-Loss Ratio'', ''2.09''},\r\n                {''Alpha'', ''-0.009''},\r\n                {''Beta'', ''0.04''},\r\n                {''Annual Standard Deviation'', ''0.021''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-0.966''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.121''},\r\n                {''Total Fees'', ''$8.64''},\r\n            }", span="308-329"];
m11_57 [cluster="QuantConnect.Data.Auxiliary.MapFileRow.Read(string)", file="RegressionTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileRow.Read(string)", span="61-61"];
m11_47 [cluster="string.EndsWith(string)", file="RegressionTests.cs", label="Entry string.EndsWith(string)", span="0-0"];
m11_4 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="30-30"];
m11_58 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RegressionTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m11_40 [cluster="QuantConnect.Data.Auxiliary.MapFile.System.Collections.IEnumerable.GetEnumerator()", file="RegressionTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.System.Collections.IEnumerable.GetEnumerator()", span="140-140"];
m11_41 [cluster="QuantConnect.Data.Auxiliary.MapFile.System.Collections.IEnumerable.GetEnumerator()", file="RegressionTests.cs", label="return GetEnumerator();", span="142-142"];
m11_42 [cluster="QuantConnect.Data.Auxiliary.MapFile.System.Collections.IEnumerable.GetEnumerator()", file="RegressionTests.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.System.Collections.IEnumerable.GetEnumerator()", span="140-140"];
m11_48 [cluster="Unk.GetFileNameWithoutExtension", file="RegressionTests.cs", label="Entry Unk.GetFileNameWithoutExtension", span=""];
m11_39 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.ValueCollection.GetEnumerator()", file="RegressionTests.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.ValueCollection.GetEnumerator()", span="0-0"];
m11_46 [cluster="System.IO.Directory.EnumerateFiles(string)", file="RegressionTests.cs", label="Entry System.IO.Directory.EnumerateFiles(string)", span="0-0"];
m11_51 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="RegressionTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", span="164-164"];
m11_52 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="RegressionTests.cs", label="return MapFileRow.Read(file).ToList();", span="168-168"];
m11_54 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="RegressionTests.cs", label="Log.Error(err, ''File: '' + file)", span="172-172"];
m11_53 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="RegressionTests.cs", label=Exception, span="170-170"];
m11_55 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="RegressionTests.cs", label="return new List<MapFileRow>();", span="173-173"];
m11_56 [cluster="QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", file="RegressionTests.cs", label="Exit QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(string)", span="164-164"];
m11_6 [cluster="System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", file="RegressionTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", span="0-0"];
m11_7 [cluster="Unk.ToDictionary", file="RegressionTests.cs", label="Entry Unk.ToDictionary", span=""];
m11_61 [file="RegressionTests.cs", label="QuantConnect.Data.Auxiliary.MapFile", span=""];
m12_199 [cluster="string.GetExtension()", file="SecurityPortfolioModel.cs", label="Entry string.GetExtension()", span="202-202"];
m12_208 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.SubscriptionStreamReader(string, QuantConnect.DataFeedEndpoint)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionStreamReader.SubscriptionStreamReader(string, QuantConnect.DataFeedEndpoint)", span="84-84"];
m12_154 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", span="649-649"];
m12_231 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="var newSource = ''''", span="651-651"];
m12_233 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="newSource = _getSourceMethod.Invoke(_dataFactory, new object[] { _config, date, _feedEndpoint }) as String", span="657-657"];
m12_232 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="_dataFactory != null", span="653-653"];
m12_237 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="return newSource;", span="666-666"];
m12_234 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="SecurityPortfolioModel.cs", label=Exception, span="659-659"];
m12_235 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Log.Error(''SubscriptionDataReader.GetSource(): '' + err.Message)", span="661-661"];
m12_236 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Engine.ResultHandler.ErrorMessage(''Error getting string source location for custom data source: '' + err.Message, err.StackTrace)", span="662-662"];
m12_238 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.GetSource(System.DateTime)", span="649-649"];
m12_201 [cluster="System.Net.WebClient.WebClient()", file="SecurityPortfolioModel.cs", label="Entry System.Net.WebClient.WebClient()", span="0-0"];
m12_229 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.Dispose()", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionStreamReader.Dispose()", span="157-157"];
m12_109 [cluster="QuantConnect.Data.SubscriptionDataConfig.SetMappedSymbol(string)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SetMappedSymbol(string)", span="139-139"];
m12_33 [cluster="object.GetType()", file="SecurityPortfolioModel.cs", label="Entry object.GetType()", span="0-0"];
m12_120 [cluster="System.NotImplementedException.NotImplementedException(string)", file="SecurityPortfolioModel.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m12_155 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", span="630-630"];
m12_222 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="SecurityPortfolioModel.cs", label="_reader != null", span="632-632"];
m12_223 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="SecurityPortfolioModel.cs", label="_reader.Close()", span="634-634"];
m12_225 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="SecurityPortfolioModel.cs", label="_web != null", span="638-638"];
m12_224 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="SecurityPortfolioModel.cs", label="_reader.Dispose()", span="635-635"];
m12_226 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="SecurityPortfolioModel.cs", label="_web.Dispose()", span="640-640"];
m12_227 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="SecurityPortfolioModel.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", span="630-630"];
m12_40 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="104-104"];
m12_42 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", span="241-241"];
m12_43 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="BaseData instance = null", span="243-243"];
m12_44 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="var instanceMarketOpen = false", span="244-244"];
m12_51 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="instance == null && !_reader.EndOfStream", span="267-267"];
m12_77 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_lastBarOfStream = _lastBarOutsideMarketHours ?? instance", span="345-345"];
m12_80 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Current = instance", span="355-355"];
m12_81 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_reader.EndOfStream && instance == null", span="358-358"];
m12_45 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_endOfStream || _reader == null || _reader.EndOfStream", span="248-248"];
m12_46 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_reader == null", span="250-250"];
m12_47 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Current = null", span="253-253"];
m12_48 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_lastBarOfStream = Current", span="258-258"];
m12_49 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_endOfStream = true", span="260-260"];
m12_50 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="return false;", span="261-261"];
m12_52 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="var line = _reader.ReadLine()", span="270-270"];
m12_75 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Current == null", span="339-339"];
m12_53 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="instance = _readerMethodInvoker(_dataFactory, _config, line, _date, _feedEndpoint) as BaseData", span="274-274"];
m12_55 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Engine.ResultHandler.RuntimeError(''Error invoking '' + _config.Symbol + '' data reader. Line: '' + line + '' Error: '' + err.Message, err.StackTrace)", span="279-279"];
m12_54 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label=Exception, span="276-276"];
m12_57 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="instance != null", span="284-284"];
m12_58 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="instanceMarketOpen = _security.Exchange.DateTimeIsOpen(instance.Time)", span="286-286"];
m12_59 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="!_security.DataFilter.Filter(_security, instance)", span="291-291"];
m12_64 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="instance == null", span="303-303"];
m12_66 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="instance.Time < _periodStart", span="311-311"];
m12_67 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_lastBarOutsideMarketHours = instance", span="313-313"];
m12_69 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="instance.Time > _periodFinish", span="317-317"];
m12_72 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_lastBarOutsideMarketHours = instance", span="326-326"];
m12_56 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_endOfStream = true", span="280-280"];
m12_71 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="!instanceMarketOpen", span="324-324"];
m12_73 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="!_config.ExtendedMarketHours && !instanceMarketOpen", span="330-330"];
m12_60 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="instance = null", span="293-293"];
m12_61 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label=Exception, span="297-297"];
m12_62 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Log.Error(''SubscriptionDataReader.MoveNext(): Error applying filter: '' + err.Message)", span="299-299"];
m12_63 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Engine.ResultHandler.RuntimeError(''Runtime error applying data filter. Assuming filter pass: '' + err.Message, err.StackTrace)", span="300-300"];
m12_65 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Log.Trace(''SubscriptionDataReader.MoveNext(): Instance null, continuing...'')", span="305-305"];
m12_68 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="instance = null", span="314-314"];
m12_70 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="instance = null", span="319-319"];
m12_74 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="instance = null", span="332-332"];
m12_76 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_lastBarOfStream == null", span="342-342"];
m12_79 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Previous = Current", span="352-352"];
m12_78 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Previous = _lastBarOfStream", span="348-348"];
m12_82 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_endOfStream = true", span="361-361"];
m12_88 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="return true;", span="374-374"];
m12_83 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_isFillForward && Previous != null", span="363-363"];
m12_84 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Current = Previous.Clone(true)", span="366-366"];
m12_87 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="return false;", span="372-372"];
m12_85 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Current.Time = _security.Exchange.TimeOfDayClosed(Previous.Time)", span="368-368"];
m12_86 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="_lastBarOfStream = Previous", span="370-370"];
m12_89 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="SecurityPortfolioModel.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", span="241-241"];
m12_31 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", span="114-114"];
m12_230 [cluster="System.ComponentModel.Component.Dispose()", file="SecurityPortfolioModel.cs", label="Entry System.ComponentModel.Component.Dispose()", span="0-0"];
m12_107 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetTimePriceFactor(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.DateTime)", span="75-75"];
m12_93 [cluster="QuantConnect.Securities.SecurityExchange.DateTimeIsOpen(System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Securities.SecurityExchange.DateTimeIsOpen(System.DateTime)", span="196-196"];
m12_206 [cluster="QuantConnect.Compression.Unzip(string)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Compression.Unzip(string)", span="248-248"];
m12_158 [cluster="System.Exception.Exception(string)", file="SecurityPortfolioModel.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m12_37 [cluster="QuantConnect.Data.Custom.Quandl.SetAuthCode(string)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Data.Custom.Quandl.SetAuthCode(string)", span="108-108"];
m12_90 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionStreamReader.ReadLine()", span="117-117"];
m12_97 [cluster="QuantConnect.Securities.SecurityExchange.TimeOfDayClosed(System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Securities.SecurityExchange.TimeOfDayClosed(System.DateTime)", span="185-185"];
m12_200 [cluster="System.Uri.Uri(string, System.UriKind)", file="SecurityPortfolioModel.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m12_228 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.Close()", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionStreamReader.Close()", span="146-146"];
m12_91 [cluster="Unk._readerMethodInvoker", file="SecurityPortfolioModel.cs", label="Entry Unk._readerMethodInvoker", span=""];
m12_29 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.HasScalingFactors(string)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.HasScalingFactors(string)", span="59-59"];
m12_35 [cluster="Unk.DelegateForCallMethod", file="SecurityPortfolioModel.cs", label="Entry Unk.DelegateForCallMethod", span=""];
m12_121 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", span="431-431"];
m12_122 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="_date = date", span="434-434"];
m12_125 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="UpdateScaleFactors(date)", span="440-440"];
m12_126 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="!_security.Exchange.DateIsOpen(date)", span="444-444"];
m12_129 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="newSource = GetSource(date)", span="451-451"];
m12_142 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Log.Error(''Failed to get StreamReader for data source('' + _source + ''), symbol('' + _mappedSymbol + ''). Skipping date('' + date.ToShortDateString() + ''). Reader is null.'')", span="485-485"];
m12_123 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="var newSource = ''''", span="435-435"];
m12_124 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label=_hasScaleFactors, span="438-438"];
m12_127 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="_endOfStream = true", span="446-446"];
m12_128 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="return false;", span="447-447"];
m12_130 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="newSource == ''''", span="454-454"];
m12_133 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="_source != newSource && newSource != ''''", span="461-461"];
m12_135 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="_source = newSource", span="466-466"];
m12_131 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="_endOfStream = true", span="456-456"];
m12_132 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="return false;", span="457-457"];
m12_134 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="_endOfStream = false", span="464-464"];
m12_151 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="return true;", span="512-512"];
m12_136 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Dispose()", span="468-468"];
m12_137 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="_reader = GetReader(_source)", span="474-474"];
m12_138 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label=Exception, span="476-476"];
m12_141 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="_reader == null", span="483-483"];
m12_139 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Log.Error(''SubscriptionDataReader.RefreshSource(): Failed to get reader: '' + err.Message)", span="478-478"];
m12_140 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="return false;", span="480-480"];
m12_146 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Current = null", span="496-496"];
m12_143 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label=_isDynamicallyLoadedData, span="488-488"];
m12_144 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Engine.ResultHandler.ErrorMessage(''We could not fetch the requested data. This may not be valid data, or a failed download of custom data. Skipping source ('' + _source + '').'')", span="490-490"];
m12_145 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="return false;", span="492-492"];
m12_147 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Previous = null", span="497-497"];
m12_148 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="MoveNext()", span="503-503"];
m12_149 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label=Exception, span="505-505"];
m12_150 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="throw new Exception(''SubscriptionDataReader.RefreshSource(): Could not MoveNext to init stream: '' + _source + '' '' + err.Message + '' >> '' + err.StackTrace);", span="507-507"];
m12_152 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="SecurityPortfolioModel.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", span="431-431"];
m12_195 [cluster="System.IO.Directory.CreateDirectory(string)", file="SecurityPortfolioModel.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m12_116 [cluster="QuantConnect.Securities.SecurityExchange.DateTimeIsExtendedOpen(System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Securities.SecurityExchange.DateTimeIsExtendedOpen(System.DateTime)", span="207-207"];
m12_209 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", span="604-604"];
m12_210 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="SecurityPortfolioModel.cs", label="StreamReader reader", span="607-607"];
m12_213 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="SecurityPortfolioModel.cs", label="var stream = _web.OpenRead(source)", span="612-612"];
m12_214 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="SecurityPortfolioModel.cs", label="source.GetExtension() == ''.zip''", span="615-615"];
m12_211 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="SecurityPortfolioModel.cs", label="_web = new WebClient()", span="610-610"];
m12_212 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="SecurityPortfolioModel.cs", label="_web.Proxy = WebRequest.GetSystemWebProxy()", span="611-611"];
m12_215 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="SecurityPortfolioModel.cs", label="reader = Compression.UnzipStream(stream)", span="617-617"];
m12_216 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="SecurityPortfolioModel.cs", label="reader = new StreamReader(stream)", span="621-621"];
m12_217 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="SecurityPortfolioModel.cs", label="return reader;", span="624-624"];
m12_218 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", file="SecurityPortfolioModel.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.WebReader(string)", span="604-604"];
m12_207 [cluster="QuantConnect.Lean.Engine.SubscriptionStreamReader.SubscriptionStreamReader(System.IO.StreamReader, QuantConnect.DataFeedEndpoint)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionStreamReader.SubscriptionStreamReader(System.IO.StreamReader, QuantConnect.DataFeedEndpoint)", span="104-104"];
m12_94 [cluster="QuantConnect.Securities.Interfaces.ISecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityDataFilter.Filter(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="46-46"];
m12_197 [cluster="System.IO.File.Delete(string)", file="SecurityPortfolioModel.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m12_219 [cluster="System.Net.WebClient.OpenRead(string)", file="SecurityPortfolioModel.cs", label="Entry System.Net.WebClient.OpenRead(string)", span="0-0"];
m12_194 [cluster="System.IO.Directory.Exists(string)", file="SecurityPortfolioModel.cs", label="Entry System.IO.Directory.Exists(string)", span="0-0"];
m12_96 [cluster="QuantConnect.Data.BaseData.Clone(bool)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="189-189"];
m12_198 [cluster="string.ToMD5()", file="SecurityPortfolioModel.cs", label="Entry string.ToMD5()", span="109-109"];
m12_113 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", span="412-412"];
m12_114 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", file="SecurityPortfolioModel.cs", label="return _security.Exchange.DateTimeIsExtendedOpen(time);", span="414-414"];
m12_115 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", file="SecurityPortfolioModel.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", span="412-412"];
m12_0 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", span="165-165"];
m12_1 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_config = config", span="168-168"];
m12_2 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_isFillForward = config.FillDataForward", span="171-171"];
m12_3 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_periodStart = periodStart", span="174-174"];
m12_4 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_periodFinish = periodFinish", span="175-175"];
m12_5 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_security = security", span="178-178"];
m12_6 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_isDynamicallyLoadedData = security.IsDynamicallyLoadedData", span="179-179"];
m12_7 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_hasScaleFactors = SubscriptionAdjustment.HasScalingFactors(config.Symbol)", span="182-182"];
m12_8 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_feedEndpoint = feed", span="185-185"];
m12_9 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_objectActivator = ObjectActivator.GetActivator(config.Type)", span="188-188"];
m12_11 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="Engine.ResultHandler.ErrorMessage(''Custom data type ''' + config.Type.Name + ''' missing parameterless constructor E.g. public '' + config.Type.Name + ''() { }'')", span="192-192"];
m12_22 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_priceFactors = SubscriptionAdjustment.GetFactorTable(config.Symbol)", span="221-221"];
m12_23 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_symbolMap = SubscriptionAdjustment.GetMapTable(config.Symbol)", span="222-222"];
m12_10 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_objectActivator == null", span="190-190"];
m12_14 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="var userObj = _objectActivator.Invoke(new object[] { })", span="198-198"];
m12_12 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_endOfStream = true", span="193-193"];
m12_13 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="return;", span="194-194"];
m12_15 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_dataFactory = userObj as BaseData", span="199-199"];
m12_16 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="var readerMethod = _dataFactory.GetType().GetMethod(''Reader'', new[] { typeof(SubscriptionDataConfig), typeof(string), typeof(DateTime), typeof(DataFeedEndpoint) })", span="202-202"];
m12_17 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_readerMethodInvoker = readerMethod.DelegateForCallMethod()", span="205-205"];
m12_18 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_getSourceMethod = _dataFactory.GetType().GetMethod(''GetSource'', new[] { typeof(SubscriptionDataConfig), typeof(DateTime), typeof(DataFeedEndpoint) })", span="208-208"];
m12_19 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_dataFactory.GetType().Name == ''Quandl''", span="211-211"];
m12_20 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="((Quandl)_dataFactory).SetAuthCode(Config.Get(''quandl-auth-token''))", span="213-213"];
m12_21 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label=_hasScaleFactors, span="219-219"];
m12_24 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label=Exception, span="225-225"];
m12_25 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="Log.Error(''SubscriptionDataReader(): Fetching Price/Map Factors: '' + err.Message)", span="227-227"];
m12_26 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_priceFactors = new SortedDictionary<DateTime, decimal>()", span="228-228"];
m12_27 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="_symbolMap = new SortedDictionary<DateTime, string>()", span="229-229"];
m12_28 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="SecurityPortfolioModel.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", span="165-165"];
m12_204 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="150-150"];
m12_205 [cluster="System.IO.File.Exists(string)", file="SecurityPortfolioModel.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m12_203 [cluster="System.Net.WebClient.DownloadFile(string, string)", file="SecurityPortfolioModel.cs", label="Entry System.Net.WebClient.DownloadFile(string, string)", span="0-0"];
m12_220 [cluster="QuantConnect.Compression.UnzipStream(System.IO.Stream)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Compression.UnzipStream(System.IO.Stream)", span="287-287"];
m12_221 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SecurityPortfolioModel.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m12_30 [cluster="QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Util.ObjectActivator.GetActivator(System.Type)", span="39-39"];
m12_34 [cluster="System.Type.GetMethod(string, System.Type[])", file="SecurityPortfolioModel.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m12_106 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMappedSymbol(System.Collections.Generic.SortedDictionary<System.DateTime, string>, System.DateTime)", span="177-177"];
m12_202 [cluster="System.Net.WebRequest.GetSystemWebProxy()", file="SecurityPortfolioModel.cs", label="Entry System.Net.WebRequest.GetSystemWebProxy()", span="0-0"];
m12_32 [cluster="System.Func<T, TResult>.Invoke(T)", file="SecurityPortfolioModel.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m12_98 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", span="382-382"];
m12_99 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SecurityPortfolioModel.cs", label="_mappedSymbol = SubscriptionAdjustment.GetMappedSymbol(_symbolMap, date)", span="385-385"];
m12_100 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SecurityPortfolioModel.cs", label="_priceFactor = SubscriptionAdjustment.GetTimePriceFactor(_priceFactors, date)", span="386-386"];
m12_101 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SecurityPortfolioModel.cs", label=Exception, span="388-388"];
m12_103 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SecurityPortfolioModel.cs", label="_config.SetPriceScaleFactor(_priceFactor)", span="392-392"];
m12_102 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SecurityPortfolioModel.cs", label="Log.Error(''SubscriptionDataReader.UpdateScaleFactors(): '' + err.Message)", span="390-390"];
m12_104 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SecurityPortfolioModel.cs", label="_config.SetMappedSymbol(_mappedSymbol)", span="393-393"];
m12_105 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", file="SecurityPortfolioModel.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.UpdateScaleFactors(System.DateTime)", span="382-382"];
m12_157 [cluster="System.DateTime.ToShortDateString()", file="SecurityPortfolioModel.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m12_239 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="SecurityPortfolioModel.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m12_110 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", span="401-401"];
m12_111 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", file="SecurityPortfolioModel.cs", label="return _security.Exchange.DateTimeIsOpen(time);", span="403-403"];
m12_112 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", file="SecurityPortfolioModel.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", span="401-401"];
m12_153 [cluster="QuantConnect.Securities.SecurityExchange.DateIsOpen(System.DateTime)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Securities.SecurityExchange.DateIsOpen(System.DateTime)", span="163-163"];
m12_41 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", file="SecurityPortfolioModel.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0"];
m12_156 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", span="521-521"];
m12_159 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="string cache = ''./cache/data''", span="524-524"];
m12_165 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="var filename = source.ToMD5() + source.GetExtension()", span="531-531"];
m12_170 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="var uri = new Uri(source, UriKind.RelativeOrAbsolute)", span="540-540"];
m12_174 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="client.DownloadFile(source, location)", span="550-550"];
m12_180 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="File.Exists(source)", span="565-565"];
m12_181 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="source.GetExtension() == ''.zip''", span="567-567"];
m12_182 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="var sr = Compression.Unzip(source)", span="570-570"];
m12_186 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="reader = new SubscriptionStreamReader(source, _feedEndpoint)", span="577-577"];
m12_187 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="Log.Trace(''SubscriptionDataReader.GetReader(): Could not find QC Data, skipped: '' + source)", span="582-582"];
m12_191 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="reader = new SubscriptionStreamReader(source, _feedEndpoint)", span="590-590"];
m12_160 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="SubscriptionStreamReader reader = null", span="525-525"];
m12_161 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="!Directory.Exists(cache)", span="526-526"];
m12_162 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="Directory.CreateDirectory(cache)", span="526-526"];
m12_163 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="Directory.EnumerateFiles(cache)", span="527-527"];
m12_166 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="var location = cache + @''/'' + filename", span="532-532"];
m12_164 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="File.Delete(file)", span="527-527"];
m12_167 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label=_feedEndpoint, span="535-535"];
m12_175 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="source = location", span="553-553"];
m12_168 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="DataFeedEndpoint.FileSystem", span="537-537"];
m12_190 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="DataFeedEndpoint.LiveTrading", span="589-589"];
m12_169 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="DataFeedEndpoint.Backtesting", span="538-538"];
m12_171 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="uri.IsAbsoluteUri && !uri.IsLoopback", span="543-543"];
m12_172 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="var client = new WebClient()", span="547-547"];
m12_173 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="client.Proxy = WebRequest.GetSystemWebProxy()", span="549-549"];
m12_176 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label=Exception, span="556-556"];
m12_177 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="Engine.ResultHandler.ErrorMessage(''Error downloading custom data source file, skipped: '' + source + '' Err: '' + err.Message, err.StackTrace)", span="558-558"];
m12_178 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="Engine.ResultHandler.SamplePerformance(_date.Date, 0)", span="559-559"];
m12_179 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="return null;", span="560-560"];
m12_183 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="sr == null", span="571-571"];
m12_185 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="reader = new SubscriptionStreamReader(sr, _feedEndpoint)", span="572-572"];
m12_184 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="return null;", span="571-571"];
m12_188 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="Engine.ResultHandler.SamplePerformance(_date.Date, 0)", span="583-583"];
m12_189 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="return null;", span="584-584"];
m12_192 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="return reader;", span="594-594"];
m12_193 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", file="SecurityPortfolioModel.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.GetReader(string)", span="521-521"];
m12_108 [cluster="QuantConnect.Data.SubscriptionDataConfig.SetPriceScaleFactor(decimal)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SetPriceScaleFactor(decimal)", span="130-130"];
m12_196 [cluster="System.IO.Directory.EnumerateFiles(string)", file="SecurityPortfolioModel.cs", label="Entry System.IO.Directory.EnumerateFiles(string)", span="0-0"];
m12_95 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="122-122"];
m12_38 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetFactorTable(string)", span="93-93"];
m12_117 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Reset()", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.Reset()", span="421-421"];
m12_118 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Reset()", file="SecurityPortfolioModel.cs", label="throw new NotImplementedException(''Reset method not implemented. Assumes loop will only be used once.'');", span="423-423"];
m12_119 [cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Reset()", file="SecurityPortfolioModel.cs", label="Exit QuantConnect.Lean.Engine.SubscriptionDataReader.Reset()", span="421-421"];
m12_36 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m12_39 [cluster="QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.SubscriptionAdjustment.GetMapTable(string)", span="120-120"];
m12_92 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="SecurityPortfolioModel.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="121-121"];
m12_240 [file="SecurityPortfolioModel.cs", label="QuantConnect.Lean.Engine.SubscriptionDataReader", span=""];
m13_0 [cluster="QuantConnect.Tests.Indicators.AroonOscillatorTests.ComparesWithExternalData()", file="UpdateOrderLiveTestAlgorithm.cs", label="Entry QuantConnect.Tests.Indicators.AroonOscillatorTests.ComparesWithExternalData()", span="25-25"];
m13_1 [cluster="QuantConnect.Tests.Indicators.AroonOscillatorTests.ComparesWithExternalData()", file="UpdateOrderLiveTestAlgorithm.cs", label="int maxFailures = 57", span="28-28"];
m13_2 [cluster="QuantConnect.Tests.Indicators.AroonOscillatorTests.ComparesWithExternalData()", file="UpdateOrderLiveTestAlgorithm.cs", label="int totalFailures = 0", span="29-29"];
m13_5 [cluster="QuantConnect.Tests.Indicators.AroonOscillatorTests.ComparesWithExternalData()", file="UpdateOrderLiveTestAlgorithm.cs", label="totalFailures > maxFailures", span="43-43"];
m13_6 [cluster="QuantConnect.Tests.Indicators.AroonOscillatorTests.ComparesWithExternalData()", file="UpdateOrderLiveTestAlgorithm.cs", label="Assert.Fail(''Aroon did worse than previously expected. Failed: {0} Expected: {1}'', totalFailures, maxFailures)", span="45-45"];
m13_7 [cluster="QuantConnect.Tests.Indicators.AroonOscillatorTests.ComparesWithExternalData()", file="UpdateOrderLiveTestAlgorithm.cs", label="Console.WriteLine(''Aroon failed {0} data points against an expected of {1}'', totalFailures, maxFailures)", span="49-49"];
m13_3 [cluster="QuantConnect.Tests.Indicators.AroonOscillatorTests.ComparesWithExternalData()", file="UpdateOrderLiveTestAlgorithm.cs", label="var aroon = new AroonOscillator(14, 14)", span="30-30"];
m13_4 [cluster="QuantConnect.Tests.Indicators.AroonOscillatorTests.ComparesWithExternalData()", color=red, community=0, file="UpdateOrderLiveTestAlgorithm.cs", label="7: TestHelper.TestIndicator(aroon, ''spy_aroon_oscillator.txt'', ''Aroon Oscillator 14'', (i, expected) =>\r\n            {\r\n                try\r\n                {\r\n                    Assert.AreEqual(expected, (double) aroon.Current.Value, 1e-3);\r\n                }\r\n                catch\r\n                {\r\n                    totalFailures++;\r\n                }\r\n            })", span="31-41"];
m13_8 [cluster="QuantConnect.Tests.Indicators.AroonOscillatorTests.ComparesWithExternalData()", file="UpdateOrderLiveTestAlgorithm.cs", label="Exit QuantConnect.Tests.Indicators.AroonOscillatorTests.ComparesWithExternalData()", span="25-25"];
m13_11 [cluster="Unk.Fail", file="UpdateOrderLiveTestAlgorithm.cs", label="Entry Unk.Fail", span=""];
m13_10 [cluster="Unk.TestIndicator", file="UpdateOrderLiveTestAlgorithm.cs", label="Entry Unk.TestIndicator", span=""];
m13_9 [cluster="QuantConnect.Indicators.AroonOscillator.AroonOscillator(int, int)", file="UpdateOrderLiveTestAlgorithm.cs", label="Entry QuantConnect.Indicators.AroonOscillator.AroonOscillator(int, int)", span="50-50"];
m13_12 [cluster="System.Console.WriteLine(string, object, object)", file="UpdateOrderLiveTestAlgorithm.cs", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
m13_13 [cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs", label="Entry lambda expression", span="31-41"];
m13_14 [cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs", label="Assert.AreEqual(expected, (double) aroon.Current.Value, 1e-3)", span="35-35"];
m13_15 [cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs", label="totalFailures++", span="39-39"];
m13_16 [cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs", label="Exit lambda expression", span="31-41"];
m13_18 [file="UpdateOrderLiveTestAlgorithm.cs", label=aroon, span=""];
m13_19 [file="UpdateOrderLiveTestAlgorithm.cs", label=totalFailures, span=""];
n528 -> n2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n20  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n27  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n28  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n34  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n41  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n42  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n48  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n59  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n60  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n68  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n69  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n77  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n78  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n86  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n87  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n95  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n96  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n104  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n105  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n113  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n114  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n122  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n123  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n131  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n132  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n140  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n141  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n149  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n150  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n158  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n159  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n167  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n168  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n176  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n177  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n185  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n186  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n194  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n195  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n203  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n204  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n212  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n213  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n221  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n222  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n230  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n231  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n239  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n248  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n249  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n257  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n258  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n266  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n267  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n276  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n277  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n285  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n286  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n294  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n295  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n303  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n304  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n312  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n313  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n321  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n322  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n330  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n331  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n339  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n340  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n348  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n349  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n352  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n358  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n359  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n362  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n368  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n369  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n372  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n378  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n379  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n382  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n388  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n389  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n392  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n398  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n399  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n402  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n408  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n409  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n412  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n418  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n419  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n422  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n428  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n429  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n432  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n439  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n440  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n443  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n449  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n450  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n453  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n460  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n461  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n464  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n475  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n491  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n528 -> n502  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.AlgorithmTradingTests", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n7  [key=2, style=dotted];
n2 -> n4  [color=darkseagreen4, key=1, label=algo, style=dashed];
n3 -> n4  [key=0, style=solid];
n3 -> n8  [key=2, style=dotted];
n7 -> n506  [key=0, style=solid];
n7 -> n509  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n7 -> n511  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n7 -> n1  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n12  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n19  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n26  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n33  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n40  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n47  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n58  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n67  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n76  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n85  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n94  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n103  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n112  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n121  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n130  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n148  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n157  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n166  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n175  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n184  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n193  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n202  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n211  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n220  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n229  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n238  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n247  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n256  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n347  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n357  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n367  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n377  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n387  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n397  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n407  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n417  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n427  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n438  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n448  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n459  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n7 -> n0  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n11  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n18  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n25  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n32  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n39  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n46  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n57  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n66  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n75  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n84  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n93  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n102  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n111  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n120  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n129  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n138  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n147  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n156  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n165  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n174  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n183  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n192  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n201  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n210  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n219  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n228  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n237  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n246  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n255  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n346  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n356  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n366  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n376  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n386  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n396  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n406  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n416  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n426  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n437  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n447  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n458  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
n7 -> n2  [color=darkorchid, key=3, label="Parameter variable decimal fee", style=bold];
n7 -> n13  [color=darkorchid, key=3, label="Parameter variable decimal fee", style=bold];
n7 -> n20  [color=darkorchid, key=3, label="Parameter variable decimal fee", style=bold];
n4 -> n5  [key=0, style=solid];
n4 -> n9  [key=2, style=dotted];
n8 -> n524  [key=0, style=solid];
n8 -> n1  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n12  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n19  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n26  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n33  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n40  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n47  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n58  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n67  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n76  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n85  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n94  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n103  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n112  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n121  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n130  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n139  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n148  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n157  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n166  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n175  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n184  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n193  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n202  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n211  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n220  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n229  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n238  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n247  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n256  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n265  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n275  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n284  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n302  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n311  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n320  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n329  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n338  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n347  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n357  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n367  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n377  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n387  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n397  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n407  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n417  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n427  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n438  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n448  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n459  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n474  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n490  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n501  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
n8 -> n3  [color=darkorchid, key=3, label="Parameter variable decimal close", style=bold];
n8 -> n352  [color=darkorchid, key=3, label="Parameter variable decimal close", style=bold];
n8 -> n443  [color=darkorchid, key=3, label="Parameter variable decimal close", style=bold];
n8 -> n464  [color=darkorchid, key=3, label="Parameter variable decimal close", style=bold];
n8 -> n475  [color=darkorchid, key=3, label="Parameter variable decimal close", style=bold];
n5 -> n6  [key=0, style=solid];
n5 -> n10  [key=2, style=dotted];
n6 -> n0  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n7  [key=2, style=dotted];
n13 -> n15  [color=darkseagreen4, key=1, label=algo, style=dashed];
n14 -> n15  [key=0, style=solid];
n14 -> n8  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n9  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n10  [key=2, style=dotted];
n17 -> n11  [color=blue, key=0, style=bold];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n7  [key=2, style=dotted];
n20 -> n22  [color=darkseagreen4, key=1, label=algo, style=dashed];
n21 -> n22  [key=0, style=solid];
n21 -> n8  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n9  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n10  [key=2, style=dotted];
n24 -> n18  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n7  [key=2, style=dotted];
n27 -> n29  [color=darkseagreen4, key=1, label=algo, style=dashed];
n28 -> n29  [key=0, style=solid];
n28 -> n8  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n9  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n10  [key=2, style=dotted];
n31 -> n25  [color=blue, key=0, style=bold];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n7  [key=2, style=dotted];
n34 -> n36  [color=darkseagreen4, key=1, label=algo, style=dashed];
n35 -> n36  [key=0, style=solid];
n35 -> n8  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n9  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n10  [key=2, style=dotted];
n38 -> n32  [color=blue, key=0, style=bold];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n40 -> n41  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n7  [key=2, style=dotted];
n41 -> n43  [color=darkseagreen4, key=1, label=algo, style=dashed];
n42 -> n43  [key=0, style=solid];
n42 -> n8  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n9  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n10  [key=2, style=dotted];
n45 -> n39  [color=blue, key=0, style=bold];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n47 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n7  [key=2, style=dotted];
n48 -> n50  [color=darkseagreen4, key=1, label=algo, style=dashed];
n48 -> n51  [color=darkseagreen4, key=1, label=algo, style=dashed];
n48 -> n52  [color=darkseagreen4, key=1, label=algo, style=dashed];
n49 -> n50  [key=0, style=solid];
n49 -> n8  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n55  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n56  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n9  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n10  [key=2, style=dotted];
n54 -> n46  [color=blue, key=0, style=bold];
n57 -> n58  [key=0, style=solid];
n57 -> n59  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n58 -> n59  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n7  [key=2, style=dotted];
n59 -> n61  [color=darkseagreen4, key=1, label=algo, style=dashed];
n59 -> n62  [color=darkseagreen4, key=1, label=algo, style=dashed];
n59 -> n63  [color=darkseagreen4, key=1, label=algo, style=dashed];
n60 -> n61  [key=0, style=solid];
n60 -> n8  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n55  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n56  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n9  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n10  [key=2, style=dotted];
n65 -> n57  [color=blue, key=0, style=bold];
n66 -> n67  [key=0, style=solid];
n66 -> n68  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n67 -> n68  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n7  [key=2, style=dotted];
n68 -> n70  [color=darkseagreen4, key=1, label=algo, style=dashed];
n68 -> n71  [color=darkseagreen4, key=1, label=algo, style=dashed];
n68 -> n72  [color=darkseagreen4, key=1, label=algo, style=dashed];
n69 -> n70  [key=0, style=solid];
n69 -> n8  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n55  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n56  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n9  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n10  [key=2, style=dotted];
n74 -> n66  [color=blue, key=0, style=bold];
n75 -> n76  [key=0, style=solid];
n75 -> n77  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n76 -> n77  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n77 -> n7  [key=2, style=dotted];
n77 -> n79  [color=darkseagreen4, key=1, label=algo, style=dashed];
n77 -> n80  [color=darkseagreen4, key=1, label=algo, style=dashed];
n77 -> n81  [color=darkseagreen4, key=1, label=algo, style=dashed];
n78 -> n79  [key=0, style=solid];
n78 -> n8  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n79 -> n55  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n80 -> n56  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid];
n81 -> n9  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n82 -> n10  [key=2, style=dotted];
n83 -> n75  [color=blue, key=0, style=bold];
n84 -> n85  [key=0, style=solid];
n84 -> n86  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n85 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n86 -> n7  [key=2, style=dotted];
n86 -> n88  [color=darkseagreen4, key=1, label=algo, style=dashed];
n86 -> n89  [color=darkseagreen4, key=1, label=algo, style=dashed];
n86 -> n90  [color=darkseagreen4, key=1, label=algo, style=dashed];
n87 -> n88  [key=0, style=solid];
n87 -> n8  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n55  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n56  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n9  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n10  [key=2, style=dotted];
n92 -> n84  [color=blue, key=0, style=bold];
n93 -> n94  [key=0, style=solid];
n93 -> n95  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n94 -> n95  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n95 -> n7  [key=2, style=dotted];
n95 -> n97  [color=darkseagreen4, key=1, label=algo, style=dashed];
n95 -> n98  [color=darkseagreen4, key=1, label=algo, style=dashed];
n95 -> n99  [color=darkseagreen4, key=1, label=algo, style=dashed];
n96 -> n97  [key=0, style=solid];
n96 -> n8  [key=2, style=dotted];
n97 -> n98  [key=0, style=solid];
n97 -> n55  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n56  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n99 -> n9  [key=2, style=dotted];
n100 -> n101  [key=0, style=solid];
n100 -> n10  [key=2, style=dotted];
n101 -> n93  [color=blue, key=0, style=bold];
n102 -> n103  [key=0, style=solid];
n102 -> n104  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n103 -> n104  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n104 -> n7  [key=2, style=dotted];
n104 -> n106  [color=darkseagreen4, key=1, label=algo, style=dashed];
n104 -> n107  [color=darkseagreen4, key=1, label=algo, style=dashed];
n104 -> n108  [color=darkseagreen4, key=1, label=algo, style=dashed];
n105 -> n106  [key=0, style=solid];
n105 -> n8  [key=2, style=dotted];
n106 -> n107  [key=0, style=solid];
n106 -> n55  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n107 -> n56  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n108 -> n9  [key=2, style=dotted];
n109 -> n110  [key=0, style=solid];
n109 -> n10  [key=2, style=dotted];
n110 -> n102  [color=blue, key=0, style=bold];
n111 -> n112  [key=0, style=solid];
n111 -> n113  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n112 -> n113  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n113 -> n7  [key=2, style=dotted];
n113 -> n115  [color=darkseagreen4, key=1, label=algo, style=dashed];
n113 -> n116  [color=darkseagreen4, key=1, label=algo, style=dashed];
n113 -> n117  [color=darkseagreen4, key=1, label=algo, style=dashed];
n114 -> n115  [key=0, style=solid];
n114 -> n8  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n55  [key=2, style=dotted];
n116 -> n117  [key=0, style=solid];
n116 -> n56  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n117 -> n9  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n118 -> n10  [key=2, style=dotted];
n119 -> n111  [color=blue, key=0, style=bold];
n120 -> n121  [key=0, style=solid];
n120 -> n122  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n121 -> n122  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n7  [key=2, style=dotted];
n122 -> n124  [color=darkseagreen4, key=1, label=algo, style=dashed];
n122 -> n125  [color=darkseagreen4, key=1, label=algo, style=dashed];
n122 -> n126  [color=darkseagreen4, key=1, label=algo, style=dashed];
n123 -> n124  [key=0, style=solid];
n123 -> n8  [key=2, style=dotted];
n124 -> n125  [key=0, style=solid];
n124 -> n55  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n125 -> n56  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n126 -> n9  [key=2, style=dotted];
n127 -> n128  [key=0, style=solid];
n127 -> n10  [key=2, style=dotted];
n128 -> n120  [color=blue, key=0, style=bold];
n129 -> n130  [key=0, style=solid];
n129 -> n131  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n130 -> n131  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n131 -> n7  [key=2, style=dotted];
n131 -> n133  [color=darkseagreen4, key=1, label=algo, style=dashed];
n131 -> n134  [color=darkseagreen4, key=1, label=algo, style=dashed];
n131 -> n135  [color=darkseagreen4, key=1, label=algo, style=dashed];
n132 -> n133  [key=0, style=solid];
n132 -> n8  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n55  [key=2, style=dotted];
n134 -> n135  [key=0, style=solid];
n134 -> n56  [key=2, style=dotted];
n135 -> n136  [key=0, style=solid];
n135 -> n9  [key=2, style=dotted];
n136 -> n137  [key=0, style=solid];
n136 -> n10  [key=2, style=dotted];
n137 -> n129  [color=blue, key=0, style=bold];
n138 -> n139  [key=0, style=solid];
n138 -> n140  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n139 -> n140  [key=0, style=solid];
n140 -> n141  [key=0, style=solid];
n140 -> n7  [key=2, style=dotted];
n140 -> n142  [color=darkseagreen4, key=1, label=algo, style=dashed];
n140 -> n143  [color=darkseagreen4, key=1, label=algo, style=dashed];
n140 -> n144  [color=darkseagreen4, key=1, label=algo, style=dashed];
n141 -> n142  [key=0, style=solid];
n141 -> n8  [key=2, style=dotted];
n142 -> n143  [key=0, style=solid];
n142 -> n55  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n56  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n9  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n10  [key=2, style=dotted];
n146 -> n138  [color=blue, key=0, style=bold];
n147 -> n148  [key=0, style=solid];
n147 -> n149  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n148 -> n149  [key=0, style=solid];
n149 -> n150  [key=0, style=solid];
n149 -> n7  [key=2, style=dotted];
n149 -> n151  [color=darkseagreen4, key=1, label=algo, style=dashed];
n149 -> n152  [color=darkseagreen4, key=1, label=algo, style=dashed];
n149 -> n153  [color=darkseagreen4, key=1, label=algo, style=dashed];
n150 -> n151  [key=0, style=solid];
n150 -> n8  [key=2, style=dotted];
n151 -> n152  [key=0, style=solid];
n151 -> n55  [key=2, style=dotted];
n152 -> n153  [key=0, style=solid];
n152 -> n56  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n9  [key=2, style=dotted];
n154 -> n155  [key=0, style=solid];
n154 -> n10  [key=2, style=dotted];
n155 -> n147  [color=blue, key=0, style=bold];
n156 -> n157  [key=0, style=solid];
n156 -> n158  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n157 -> n158  [key=0, style=solid];
n158 -> n159  [key=0, style=solid];
n158 -> n7  [key=2, style=dotted];
n158 -> n160  [color=darkseagreen4, key=1, label=algo, style=dashed];
n158 -> n161  [color=darkseagreen4, key=1, label=algo, style=dashed];
n158 -> n162  [color=darkseagreen4, key=1, label=algo, style=dashed];
n159 -> n160  [key=0, style=solid];
n159 -> n8  [key=2, style=dotted];
n160 -> n161  [key=0, style=solid];
n160 -> n55  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n56  [key=2, style=dotted];
n162 -> n163  [key=0, style=solid];
n162 -> n9  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n163 -> n10  [key=2, style=dotted];
n164 -> n156  [color=blue, key=0, style=bold];
n165 -> n166  [key=0, style=solid];
n165 -> n167  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n166 -> n167  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n167 -> n7  [key=2, style=dotted];
n167 -> n169  [color=darkseagreen4, key=1, label=algo, style=dashed];
n167 -> n170  [color=darkseagreen4, key=1, label=algo, style=dashed];
n167 -> n171  [color=darkseagreen4, key=1, label=algo, style=dashed];
n168 -> n169  [key=0, style=solid];
n168 -> n8  [key=2, style=dotted];
n169 -> n170  [key=0, style=solid];
n169 -> n55  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n56  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n9  [key=2, style=dotted];
n172 -> n173  [key=0, style=solid];
n172 -> n10  [key=2, style=dotted];
n173 -> n165  [color=blue, key=0, style=bold];
n174 -> n175  [key=0, style=solid];
n174 -> n176  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n175 -> n176  [key=0, style=solid];
n176 -> n177  [key=0, style=solid];
n176 -> n7  [key=2, style=dotted];
n176 -> n178  [color=darkseagreen4, key=1, label=algo, style=dashed];
n176 -> n179  [color=darkseagreen4, key=1, label=algo, style=dashed];
n176 -> n180  [color=darkseagreen4, key=1, label=algo, style=dashed];
n177 -> n178  [key=0, style=solid];
n177 -> n8  [key=2, style=dotted];
n178 -> n179  [key=0, style=solid];
n178 -> n55  [key=2, style=dotted];
n179 -> n180  [key=0, style=solid];
n179 -> n56  [key=2, style=dotted];
n180 -> n181  [key=0, style=solid];
n180 -> n9  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n10  [key=2, style=dotted];
n182 -> n174  [color=blue, key=0, style=bold];
n183 -> n184  [key=0, style=solid];
n183 -> n185  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n184 -> n185  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n185 -> n7  [key=2, style=dotted];
n185 -> n187  [color=darkseagreen4, key=1, label=algo, style=dashed];
n185 -> n188  [color=darkseagreen4, key=1, label=algo, style=dashed];
n185 -> n189  [color=darkseagreen4, key=1, label=algo, style=dashed];
n186 -> n187  [key=0, style=solid];
n186 -> n8  [key=2, style=dotted];
n187 -> n188  [key=0, style=solid];
n187 -> n55  [key=2, style=dotted];
n188 -> n189  [key=0, style=solid];
n188 -> n56  [key=2, style=dotted];
n189 -> n190  [key=0, style=solid];
n189 -> n9  [key=2, style=dotted];
n190 -> n191  [key=0, style=solid];
n190 -> n10  [key=2, style=dotted];
n191 -> n183  [color=blue, key=0, style=bold];
n192 -> n193  [key=0, style=solid];
n192 -> n194  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n193 -> n194  [key=0, style=solid];
n194 -> n195  [key=0, style=solid];
n194 -> n7  [key=2, style=dotted];
n194 -> n196  [color=darkseagreen4, key=1, label=algo, style=dashed];
n194 -> n197  [color=darkseagreen4, key=1, label=algo, style=dashed];
n194 -> n198  [color=darkseagreen4, key=1, label=algo, style=dashed];
n195 -> n196  [key=0, style=solid];
n195 -> n8  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n55  [key=2, style=dotted];
n197 -> n198  [key=0, style=solid];
n197 -> n56  [key=2, style=dotted];
n198 -> n199  [key=0, style=solid];
n198 -> n9  [key=2, style=dotted];
n199 -> n200  [key=0, style=solid];
n199 -> n10  [key=2, style=dotted];
n200 -> n192  [color=blue, key=0, style=bold];
n201 -> n202  [key=0, style=solid];
n201 -> n203  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n202 -> n203  [key=0, style=solid];
n203 -> n204  [key=0, style=solid];
n203 -> n7  [key=2, style=dotted];
n203 -> n205  [color=darkseagreen4, key=1, label=algo, style=dashed];
n203 -> n206  [color=darkseagreen4, key=1, label=algo, style=dashed];
n203 -> n207  [color=darkseagreen4, key=1, label=algo, style=dashed];
n204 -> n205  [key=0, style=solid];
n204 -> n8  [key=2, style=dotted];
n205 -> n206  [key=0, style=solid];
n205 -> n55  [key=2, style=dotted];
n206 -> n207  [key=0, style=solid];
n206 -> n56  [key=2, style=dotted];
n207 -> n208  [key=0, style=solid];
n207 -> n9  [key=2, style=dotted];
n208 -> n209  [key=0, style=solid];
n208 -> n10  [key=2, style=dotted];
n209 -> n201  [color=blue, key=0, style=bold];
n210 -> n211  [key=0, style=solid];
n210 -> n212  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n211 -> n212  [key=0, style=solid];
n212 -> n213  [key=0, style=solid];
n212 -> n7  [key=2, style=dotted];
n212 -> n214  [color=darkseagreen4, key=1, label=algo, style=dashed];
n212 -> n215  [color=darkseagreen4, key=1, label=algo, style=dashed];
n212 -> n216  [color=darkseagreen4, key=1, label=algo, style=dashed];
n213 -> n214  [key=0, style=solid];
n213 -> n8  [key=2, style=dotted];
n214 -> n215  [key=0, style=solid];
n214 -> n55  [key=2, style=dotted];
n215 -> n216  [key=0, style=solid];
n215 -> n56  [key=2, style=dotted];
n216 -> n217  [key=0, style=solid];
n216 -> n9  [key=2, style=dotted];
n217 -> n218  [key=0, style=solid];
n217 -> n10  [key=2, style=dotted];
n218 -> n210  [color=blue, key=0, style=bold];
n219 -> n220  [key=0, style=solid];
n219 -> n221  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n220 -> n221  [key=0, style=solid];
n221 -> n222  [key=0, style=solid];
n221 -> n7  [key=2, style=dotted];
n221 -> n223  [color=darkseagreen4, key=1, label=algo, style=dashed];
n221 -> n224  [color=darkseagreen4, key=1, label=algo, style=dashed];
n221 -> n225  [color=darkseagreen4, key=1, label=algo, style=dashed];
n222 -> n223  [key=0, style=solid];
n222 -> n8  [key=2, style=dotted];
n223 -> n224  [key=0, style=solid];
n223 -> n55  [key=2, style=dotted];
n224 -> n225  [key=0, style=solid];
n224 -> n56  [key=2, style=dotted];
n225 -> n226  [key=0, style=solid];
n225 -> n9  [key=2, style=dotted];
n226 -> n227  [key=0, style=solid];
n226 -> n10  [key=2, style=dotted];
n227 -> n219  [color=blue, key=0, style=bold];
n228 -> n229  [key=0, style=solid];
n228 -> n230  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n229 -> n230  [key=0, style=solid];
n230 -> n231  [key=0, style=solid];
n230 -> n7  [key=2, style=dotted];
n230 -> n232  [color=darkseagreen4, key=1, label=algo, style=dashed];
n230 -> n233  [color=darkseagreen4, key=1, label=algo, style=dashed];
n230 -> n234  [color=darkseagreen4, key=1, label=algo, style=dashed];
n231 -> n232  [key=0, style=solid];
n231 -> n8  [key=2, style=dotted];
n232 -> n233  [key=0, style=solid];
n232 -> n55  [key=2, style=dotted];
n233 -> n234  [key=0, style=solid];
n233 -> n56  [key=2, style=dotted];
n234 -> n235  [key=0, style=solid];
n234 -> n9  [key=2, style=dotted];
n235 -> n236  [key=0, style=solid];
n235 -> n10  [key=2, style=dotted];
n236 -> n228  [color=blue, key=0, style=bold];
n237 -> n238  [key=0, style=solid];
n237 -> n239  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n238 -> n239  [key=0, style=solid];
n239 -> n240  [key=0, style=solid];
n239 -> n7  [key=2, style=dotted];
n239 -> n241  [color=darkseagreen4, key=1, label=algo, style=dashed];
n239 -> n242  [color=darkseagreen4, key=1, label=algo, style=dashed];
n239 -> n243  [color=darkseagreen4, key=1, label=algo, style=dashed];
n240 -> n241  [key=0, style=solid];
n240 -> n8  [key=2, style=dotted];
n241 -> n242  [key=0, style=solid];
n241 -> n55  [key=2, style=dotted];
n242 -> n243  [key=0, style=solid];
n242 -> n56  [key=2, style=dotted];
n243 -> n244  [key=0, style=solid];
n243 -> n9  [key=2, style=dotted];
n244 -> n245  [key=0, style=solid];
n244 -> n10  [key=2, style=dotted];
n245 -> n237  [color=blue, key=0, style=bold];
n246 -> n247  [key=0, style=solid];
n246 -> n248  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n247 -> n248  [key=0, style=solid];
n248 -> n249  [key=0, style=solid];
n248 -> n7  [key=2, style=dotted];
n248 -> n250  [color=darkseagreen4, key=1, label=algo, style=dashed];
n248 -> n251  [color=darkseagreen4, key=1, label=algo, style=dashed];
n248 -> n252  [color=darkseagreen4, key=1, label=algo, style=dashed];
n249 -> n250  [key=0, style=solid];
n249 -> n8  [key=2, style=dotted];
n250 -> n251  [key=0, style=solid];
n250 -> n55  [key=2, style=dotted];
n251 -> n252  [key=0, style=solid];
n251 -> n56  [key=2, style=dotted];
n252 -> n253  [key=0, style=solid];
n252 -> n9  [key=2, style=dotted];
n253 -> n254  [key=0, style=solid];
n253 -> n10  [key=2, style=dotted];
n254 -> n246  [color=blue, key=0, style=bold];
n255 -> n256  [key=0, style=solid];
n255 -> n257  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n256 -> n257  [key=0, style=solid];
n257 -> n258  [key=0, style=solid];
n257 -> n7  [key=2, style=dotted];
n257 -> n259  [color=darkseagreen4, key=1, label=algo, style=dashed];
n257 -> n260  [color=darkseagreen4, key=1, label=algo, style=dashed];
n257 -> n261  [color=darkseagreen4, key=1, label=algo, style=dashed];
n258 -> n259  [key=0, style=solid];
n258 -> n8  [key=2, style=dotted];
n259 -> n260  [key=0, style=solid];
n259 -> n55  [key=2, style=dotted];
n260 -> n261  [key=0, style=solid];
n260 -> n56  [key=2, style=dotted];
n261 -> n262  [key=0, style=solid];
n261 -> n9  [key=2, style=dotted];
n262 -> n263  [key=0, style=solid];
n262 -> n10  [key=2, style=dotted];
n263 -> n255  [color=blue, key=0, style=bold];
n264 -> n265  [key=0, style=solid];
n264 -> n266  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n265 -> n266  [key=0, style=solid];
n266 -> n267  [key=0, style=solid];
n266 -> n273  [key=2, style=dotted];
n266 -> n268  [color=darkseagreen4, key=1, label=algo, style=dashed];
n266 -> n269  [color=darkseagreen4, key=1, label=algo, style=dashed];
n266 -> n270  [color=darkseagreen4, key=1, label=algo, style=dashed];
n267 -> n268  [key=0, style=solid];
n267 -> n8  [key=2, style=dotted];
n273 -> n515  [key=0, style=solid];
n273 -> n518  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n273 -> n520  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n273 -> n265  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n273 -> n275  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n273 -> n284  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n273 -> n9  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n273 -> n302  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n273 -> n311  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n273 -> n320  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n273 -> n329  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n273 -> n338  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security msft", style=bold];
n273 -> n264  [color=darkorchid, key=3, label="Parameter variable decimal maintenanceMarginRequirement", style=bold];
n273 -> n274  [color=darkorchid, key=3, label="Parameter variable decimal maintenanceMarginRequirement", style=bold];
n273 -> n283  [color=darkorchid, key=3, label="Parameter variable decimal maintenanceMarginRequirement", style=bold];
n273 -> n292  [color=darkorchid, key=3, label="Parameter variable decimal maintenanceMarginRequirement", style=bold];
n273 -> n301  [color=darkorchid, key=3, label="Parameter variable decimal maintenanceMarginRequirement", style=bold];
n273 -> n310  [color=darkorchid, key=3, label="Parameter variable decimal maintenanceMarginRequirement", style=bold];
n273 -> n319  [color=darkorchid, key=3, label="Parameter variable decimal maintenanceMarginRequirement", style=bold];
n273 -> n328  [color=darkorchid, key=3, label="Parameter variable decimal maintenanceMarginRequirement", style=bold];
n273 -> n337  [color=darkorchid, key=3, label="Parameter variable decimal maintenanceMarginRequirement", style=bold];
n273 -> n2  [color=darkorchid, key=3, label="Parameter variable decimal fee", style=bold];
n273 -> n13  [color=darkorchid, key=3, label="Parameter variable decimal fee", style=bold];
n273 -> n20  [color=darkorchid, key=3, label="Parameter variable decimal fee", style=bold];
n268 -> n269  [key=0, style=solid];
n268 -> n55  [key=2, style=dotted];
n269 -> n270  [key=0, style=solid];
n269 -> n56  [key=2, style=dotted];
n270 -> n271  [key=0, style=solid];
n270 -> n9  [key=2, style=dotted];
n271 -> n272  [key=0, style=solid];
n271 -> n10  [key=2, style=dotted];
n272 -> n264  [color=blue, key=0, style=bold];
n274 -> n275  [key=0, style=solid];
n274 -> n276  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n275 -> n276  [key=0, style=solid];
n276 -> n277  [key=0, style=solid];
n276 -> n273  [key=2, style=dotted];
n276 -> n278  [color=darkseagreen4, key=1, label=algo, style=dashed];
n276 -> n279  [color=darkseagreen4, key=1, label=algo, style=dashed];
n276 -> n280  [color=darkseagreen4, key=1, label=algo, style=dashed];
n277 -> n278  [key=0, style=solid];
n277 -> n8  [key=2, style=dotted];
n278 -> n279  [key=0, style=solid];
n278 -> n55  [key=2, style=dotted];
n279 -> n280  [key=0, style=solid];
n279 -> n56  [key=2, style=dotted];
n280 -> n281  [key=0, style=solid];
n280 -> n9  [key=2, style=dotted];
n281 -> n282  [key=0, style=solid];
n281 -> n10  [key=2, style=dotted];
n282 -> n274  [color=blue, key=0, style=bold];
n283 -> n284  [key=0, style=solid];
n283 -> n285  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n284 -> n285  [key=0, style=solid];
n285 -> n286  [key=0, style=solid];
n285 -> n273  [key=2, style=dotted];
n285 -> n287  [color=darkseagreen4, key=1, label=algo, style=dashed];
n285 -> n288  [color=darkseagreen4, key=1, label=algo, style=dashed];
n285 -> n289  [color=darkseagreen4, key=1, label=algo, style=dashed];
n286 -> n287  [key=0, style=solid];
n286 -> n8  [key=2, style=dotted];
n287 -> n288  [key=0, style=solid];
n287 -> n55  [key=2, style=dotted];
n288 -> n289  [key=0, style=solid];
n288 -> n56  [key=2, style=dotted];
n289 -> n290  [key=0, style=solid];
n289 -> n9  [key=2, style=dotted];
n290 -> n291  [key=0, style=solid];
n290 -> n10  [key=2, style=dotted];
n291 -> n283  [color=blue, key=0, style=bold];
n292 -> n293  [key=0, style=solid];
n292 -> n294  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n293 -> n294  [key=0, style=solid];
n294 -> n295  [key=0, style=solid];
n294 -> n273  [key=2, style=dotted];
n294 -> n296  [color=darkseagreen4, key=1, label=algo, style=dashed];
n294 -> n297  [color=darkseagreen4, key=1, label=algo, style=dashed];
n294 -> n298  [color=darkseagreen4, key=1, label=algo, style=dashed];
n295 -> n296  [key=0, style=solid];
n295 -> n8  [key=2, style=dotted];
n296 -> n297  [key=0, style=solid];
n296 -> n55  [key=2, style=dotted];
n297 -> n298  [key=0, style=solid];
n297 -> n56  [key=2, style=dotted];
n298 -> n299  [key=0, style=solid];
n298 -> n9  [key=2, style=dotted];
n299 -> n300  [key=0, style=solid];
n299 -> n10  [key=2, style=dotted];
n300 -> n292  [color=blue, key=0, style=bold];
n301 -> n302  [key=0, style=solid];
n301 -> n303  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n302 -> n303  [key=0, style=solid];
n303 -> n304  [key=0, style=solid];
n303 -> n273  [key=2, style=dotted];
n303 -> n305  [color=darkseagreen4, key=1, label=algo, style=dashed];
n303 -> n306  [color=darkseagreen4, key=1, label=algo, style=dashed];
n303 -> n307  [color=darkseagreen4, key=1, label=algo, style=dashed];
n304 -> n305  [key=0, style=solid];
n304 -> n8  [key=2, style=dotted];
n305 -> n306  [key=0, style=solid];
n305 -> n55  [key=2, style=dotted];
n306 -> n307  [key=0, style=solid];
n306 -> n56  [key=2, style=dotted];
n307 -> n308  [key=0, style=solid];
n307 -> n9  [key=2, style=dotted];
n308 -> n309  [key=0, style=solid];
n308 -> n10  [key=2, style=dotted];
n309 -> n301  [color=blue, key=0, style=bold];
n310 -> n311  [key=0, style=solid];
n310 -> n312  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n311 -> n312  [key=0, style=solid];
n312 -> n313  [key=0, style=solid];
n312 -> n273  [key=2, style=dotted];
n312 -> n314  [color=darkseagreen4, key=1, label=algo, style=dashed];
n312 -> n315  [color=darkseagreen4, key=1, label=algo, style=dashed];
n312 -> n316  [color=darkseagreen4, key=1, label=algo, style=dashed];
n313 -> n314  [key=0, style=solid];
n313 -> n8  [key=2, style=dotted];
n314 -> n315  [key=0, style=solid];
n314 -> n55  [key=2, style=dotted];
n315 -> n316  [key=0, style=solid];
n315 -> n56  [key=2, style=dotted];
n316 -> n317  [key=0, style=solid];
n316 -> n9  [key=2, style=dotted];
n317 -> n318  [key=0, style=solid];
n317 -> n10  [key=2, style=dotted];
n318 -> n310  [color=blue, key=0, style=bold];
n319 -> n320  [key=0, style=solid];
n319 -> n321  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n320 -> n321  [key=0, style=solid];
n321 -> n322  [key=0, style=solid];
n321 -> n273  [key=2, style=dotted];
n321 -> n323  [color=darkseagreen4, key=1, label=algo, style=dashed];
n321 -> n324  [color=darkseagreen4, key=1, label=algo, style=dashed];
n321 -> n325  [color=darkseagreen4, key=1, label=algo, style=dashed];
n322 -> n323  [key=0, style=solid];
n322 -> n8  [key=2, style=dotted];
n323 -> n324  [key=0, style=solid];
n323 -> n55  [key=2, style=dotted];
n324 -> n325  [key=0, style=solid];
n324 -> n56  [key=2, style=dotted];
n325 -> n326  [key=0, style=solid];
n325 -> n9  [key=2, style=dotted];
n326 -> n327  [key=0, style=solid];
n326 -> n10  [key=2, style=dotted];
n327 -> n319  [color=blue, key=0, style=bold];
n328 -> n329  [key=0, style=solid];
n328 -> n330  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n329 -> n330  [key=0, style=solid];
n330 -> n331  [key=0, style=solid];
n330 -> n273  [key=2, style=dotted];
n330 -> n332  [color=darkseagreen4, key=1, label=algo, style=dashed];
n330 -> n333  [color=darkseagreen4, key=1, label=algo, style=dashed];
n330 -> n334  [color=darkseagreen4, key=1, label=algo, style=dashed];
n331 -> n332  [key=0, style=solid];
n331 -> n8  [key=2, style=dotted];
n332 -> n333  [key=0, style=solid];
n332 -> n55  [key=2, style=dotted];
n333 -> n334  [key=0, style=solid];
n333 -> n56  [key=2, style=dotted];
n334 -> n335  [key=0, style=solid];
n334 -> n9  [key=2, style=dotted];
n335 -> n336  [key=0, style=solid];
n335 -> n10  [key=2, style=dotted];
n336 -> n328  [color=blue, key=0, style=bold];
n337 -> n338  [key=0, style=solid];
n337 -> n339  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n338 -> n339  [key=0, style=solid];
n339 -> n340  [key=0, style=solid];
n339 -> n273  [key=2, style=dotted];
n339 -> n341  [color=darkseagreen4, key=1, label=algo, style=dashed];
n339 -> n342  [color=darkseagreen4, key=1, label=algo, style=dashed];
n339 -> n343  [color=darkseagreen4, key=1, label=algo, style=dashed];
n340 -> n341  [key=0, style=solid];
n340 -> n8  [key=2, style=dotted];
n341 -> n342  [key=0, style=solid];
n341 -> n55  [key=2, style=dotted];
n342 -> n343  [key=0, style=solid];
n342 -> n56  [key=2, style=dotted];
n343 -> n344  [key=0, style=solid];
n343 -> n9  [key=2, style=dotted];
n344 -> n345  [key=0, style=solid];
n344 -> n10  [key=2, style=dotted];
n345 -> n337  [color=blue, key=0, style=bold];
n346 -> n347  [key=0, style=solid];
n346 -> n348  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n347 -> n348  [key=0, style=solid];
n348 -> n349  [key=0, style=solid];
n348 -> n7  [key=2, style=dotted];
n348 -> n350  [color=darkseagreen4, key=1, label=algo, style=dashed];
n348 -> n351  [color=darkseagreen4, key=1, label=algo, style=dashed];
n348 -> n352  [color=darkseagreen4, key=1, label=msft, style=dashed];
n348 -> n353  [color=darkseagreen4, key=1, label=algo, style=dashed];
n349 -> n350  [key=0, style=solid];
n349 -> n8  [key=2, style=dotted];
n350 -> n351  [key=0, style=solid];
n350 -> n55  [key=2, style=dotted];
n351 -> n352  [key=0, style=solid];
n351 -> n56  [key=2, style=dotted];
n352 -> n353  [key=0, style=solid];
n352 -> n8  [key=2, style=dotted];
n353 -> n354  [key=0, style=solid];
n353 -> n9  [key=2, style=dotted];
n354 -> n355  [key=0, style=solid];
n354 -> n10  [key=2, style=dotted];
n355 -> n346  [color=blue, key=0, style=bold];
n356 -> n357  [key=0, style=solid];
n356 -> n358  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n357 -> n358  [key=0, style=solid];
n358 -> n359  [key=0, style=solid];
n358 -> n7  [key=2, style=dotted];
n358 -> n360  [color=darkseagreen4, key=1, label=algo, style=dashed];
n358 -> n361  [color=darkseagreen4, key=1, label=algo, style=dashed];
n358 -> n362  [color=darkseagreen4, key=1, label=msft, style=dashed];
n358 -> n363  [color=darkseagreen4, key=1, label=algo, style=dashed];
n359 -> n360  [key=0, style=solid];
n359 -> n8  [key=2, style=dotted];
n360 -> n361  [key=0, style=solid];
n360 -> n55  [key=2, style=dotted];
n361 -> n362  [key=0, style=solid];
n361 -> n56  [key=2, style=dotted];
n362 -> n363  [key=0, style=solid];
n362 -> n8  [key=2, style=dotted];
n363 -> n364  [key=0, style=solid];
n363 -> n9  [key=2, style=dotted];
n364 -> n365  [key=0, style=solid];
n364 -> n10  [key=2, style=dotted];
n365 -> n356  [color=blue, key=0, style=bold];
n366 -> n367  [key=0, style=solid];
n366 -> n368  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n367 -> n368  [key=0, style=solid];
n368 -> n369  [key=0, style=solid];
n368 -> n7  [key=2, style=dotted];
n368 -> n370  [color=darkseagreen4, key=1, label=algo, style=dashed];
n368 -> n371  [color=darkseagreen4, key=1, label=algo, style=dashed];
n368 -> n372  [color=darkseagreen4, key=1, label=msft, style=dashed];
n368 -> n373  [color=darkseagreen4, key=1, label=algo, style=dashed];
n369 -> n370  [key=0, style=solid];
n369 -> n8  [key=2, style=dotted];
n370 -> n371  [key=0, style=solid];
n370 -> n55  [key=2, style=dotted];
n371 -> n372  [key=0, style=solid];
n371 -> n56  [key=2, style=dotted];
n372 -> n373  [key=0, style=solid];
n372 -> n8  [key=2, style=dotted];
n373 -> n374  [key=0, style=solid];
n373 -> n9  [key=2, style=dotted];
n374 -> n375  [key=0, style=solid];
n374 -> n10  [key=2, style=dotted];
n375 -> n366  [color=blue, key=0, style=bold];
n376 -> n377  [key=0, style=solid];
n376 -> n378  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n377 -> n378  [key=0, style=solid];
n378 -> n379  [key=0, style=solid];
n378 -> n7  [key=2, style=dotted];
n378 -> n380  [color=darkseagreen4, key=1, label=algo, style=dashed];
n378 -> n381  [color=darkseagreen4, key=1, label=algo, style=dashed];
n378 -> n382  [color=darkseagreen4, key=1, label=msft, style=dashed];
n378 -> n383  [color=darkseagreen4, key=1, label=algo, style=dashed];
n379 -> n380  [key=0, style=solid];
n379 -> n8  [key=2, style=dotted];
n380 -> n381  [key=0, style=solid];
n380 -> n55  [key=2, style=dotted];
n381 -> n382  [key=0, style=solid];
n381 -> n56  [key=2, style=dotted];
n382 -> n383  [key=0, style=solid];
n382 -> n8  [key=2, style=dotted];
n383 -> n384  [key=0, style=solid];
n383 -> n9  [key=2, style=dotted];
n384 -> n385  [key=0, style=solid];
n384 -> n10  [key=2, style=dotted];
n385 -> n376  [color=blue, key=0, style=bold];
n386 -> n387  [key=0, style=solid];
n386 -> n388  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n387 -> n388  [key=0, style=solid];
n388 -> n389  [key=0, style=solid];
n388 -> n7  [key=2, style=dotted];
n388 -> n390  [color=darkseagreen4, key=1, label=algo, style=dashed];
n388 -> n391  [color=darkseagreen4, key=1, label=algo, style=dashed];
n388 -> n392  [color=darkseagreen4, key=1, label=msft, style=dashed];
n388 -> n393  [color=darkseagreen4, key=1, label=algo, style=dashed];
n389 -> n390  [key=0, style=solid];
n389 -> n8  [key=2, style=dotted];
n390 -> n391  [key=0, style=solid];
n390 -> n55  [key=2, style=dotted];
n391 -> n392  [key=0, style=solid];
n391 -> n56  [key=2, style=dotted];
n392 -> n393  [key=0, style=solid];
n392 -> n8  [key=2, style=dotted];
n393 -> n394  [key=0, style=solid];
n393 -> n9  [key=2, style=dotted];
n394 -> n395  [key=0, style=solid];
n394 -> n10  [key=2, style=dotted];
n395 -> n386  [color=blue, key=0, style=bold];
n396 -> n397  [key=0, style=solid];
n396 -> n398  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n397 -> n398  [key=0, style=solid];
n398 -> n399  [key=0, style=solid];
n398 -> n7  [key=2, style=dotted];
n398 -> n400  [color=darkseagreen4, key=1, label=algo, style=dashed];
n398 -> n401  [color=darkseagreen4, key=1, label=algo, style=dashed];
n398 -> n402  [color=darkseagreen4, key=1, label=msft, style=dashed];
n398 -> n403  [color=darkseagreen4, key=1, label=algo, style=dashed];
n399 -> n400  [key=0, style=solid];
n399 -> n8  [key=2, style=dotted];
n400 -> n401  [key=0, style=solid];
n400 -> n55  [key=2, style=dotted];
n401 -> n402  [key=0, style=solid];
n401 -> n56  [key=2, style=dotted];
n402 -> n403  [key=0, style=solid];
n402 -> n8  [key=2, style=dotted];
n403 -> n404  [key=0, style=solid];
n403 -> n9  [key=2, style=dotted];
n404 -> n405  [key=0, style=solid];
n404 -> n10  [key=2, style=dotted];
n405 -> n396  [color=blue, key=0, style=bold];
n406 -> n407  [key=0, style=solid];
n406 -> n408  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n407 -> n408  [key=0, style=solid];
n408 -> n409  [key=0, style=solid];
n408 -> n7  [key=2, style=dotted];
n408 -> n410  [color=darkseagreen4, key=1, label=algo, style=dashed];
n408 -> n411  [color=darkseagreen4, key=1, label=algo, style=dashed];
n408 -> n412  [color=darkseagreen4, key=1, label=msft, style=dashed];
n408 -> n413  [color=darkseagreen4, key=1, label=algo, style=dashed];
n409 -> n410  [key=0, style=solid];
n409 -> n8  [key=2, style=dotted];
n410 -> n411  [key=0, style=solid];
n410 -> n55  [key=2, style=dotted];
n411 -> n412  [key=0, style=solid];
n411 -> n56  [key=2, style=dotted];
n412 -> n413  [key=0, style=solid];
n412 -> n8  [key=2, style=dotted];
n413 -> n414  [key=0, style=solid];
n413 -> n9  [key=2, style=dotted];
n414 -> n415  [key=0, style=solid];
n414 -> n10  [key=2, style=dotted];
n415 -> n406  [color=blue, key=0, style=bold];
n416 -> n417  [key=0, style=solid];
n416 -> n418  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n417 -> n418  [key=0, style=solid];
n418 -> n419  [key=0, style=solid];
n418 -> n7  [key=2, style=dotted];
n418 -> n420  [color=darkseagreen4, key=1, label=algo, style=dashed];
n418 -> n421  [color=darkseagreen4, key=1, label=algo, style=dashed];
n418 -> n422  [color=darkseagreen4, key=1, label=msft, style=dashed];
n418 -> n423  [color=darkseagreen4, key=1, label=algo, style=dashed];
n419 -> n420  [key=0, style=solid];
n419 -> n8  [key=2, style=dotted];
n420 -> n421  [key=0, style=solid];
n420 -> n55  [key=2, style=dotted];
n421 -> n422  [key=0, style=solid];
n421 -> n56  [key=2, style=dotted];
n422 -> n423  [key=0, style=solid];
n422 -> n8  [key=2, style=dotted];
n423 -> n424  [key=0, style=solid];
n423 -> n9  [key=2, style=dotted];
n424 -> n425  [key=0, style=solid];
n424 -> n10  [key=2, style=dotted];
n425 -> n416  [color=blue, key=0, style=bold];
n426 -> n427  [key=0, style=solid];
n426 -> n428  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n427 -> n428  [key=0, style=solid];
n428 -> n429  [key=0, style=solid];
n428 -> n7  [key=2, style=dotted];
n428 -> n430  [color=darkseagreen4, key=1, label=algo, style=dashed];
n428 -> n431  [color=darkseagreen4, key=1, label=algo, style=dashed];
n428 -> n432  [color=darkseagreen4, key=1, label=msft, style=dashed];
n428 -> n433  [color=darkseagreen4, key=1, label=algo, style=dashed];
n428 -> n434  [color=darkseagreen4, key=1, label=algo, style=dashed];
n429 -> n430  [key=0, style=solid];
n429 -> n8  [key=2, style=dotted];
n430 -> n431  [key=0, style=solid];
n430 -> n55  [key=2, style=dotted];
n431 -> n432  [key=0, style=solid];
n431 -> n56  [key=2, style=dotted];
n432 -> n433  [key=0, style=solid];
n432 -> n8  [key=2, style=dotted];
n433 -> n434  [key=0, style=solid];
n433 -> n10  [key=2, style=dotted];
n434 -> n435  [key=0, style=solid];
n434 -> n9  [key=2, style=dotted];
n435 -> n436  [key=0, style=solid];
n435 -> n10  [key=2, style=dotted];
n436 -> n426  [color=blue, key=0, style=bold];
n437 -> n438  [key=0, style=solid];
n437 -> n439  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n438 -> n439  [key=0, style=solid];
n439 -> n440  [key=0, style=solid];
n439 -> n7  [key=2, style=dotted];
n439 -> n441  [color=darkseagreen4, key=1, label=algo, style=dashed];
n439 -> n442  [color=darkseagreen4, key=1, label=algo, style=dashed];
n439 -> n443  [color=darkseagreen4, key=1, label=msft, style=dashed];
n439 -> n444  [color=darkseagreen4, key=1, label=algo, style=dashed];
n440 -> n441  [key=0, style=solid];
n440 -> n8  [key=2, style=dotted];
n441 -> n442  [key=0, style=solid];
n441 -> n55  [key=2, style=dotted];
n442 -> n443  [key=0, style=solid];
n442 -> n56  [key=2, style=dotted];
n443 -> n444  [key=0, style=solid];
n443 -> n8  [key=2, style=dotted];
n444 -> n445  [key=0, style=solid];
n444 -> n9  [key=2, style=dotted];
n445 -> n446  [key=0, style=solid];
n445 -> n10  [key=2, style=dotted];
n446 -> n437  [color=blue, key=0, style=bold];
n447 -> n448  [key=0, style=solid];
n447 -> n449  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n448 -> n449  [key=0, style=solid];
n449 -> n450  [key=0, style=solid];
n449 -> n7  [key=2, style=dotted];
n449 -> n451  [color=darkseagreen4, key=1, label=algo, style=dashed];
n449 -> n452  [color=darkseagreen4, key=1, label=algo, style=dashed];
n449 -> n453  [color=darkseagreen4, key=1, label=msft, style=dashed];
n449 -> n454  [color=darkseagreen4, key=1, label=algo, style=dashed];
n449 -> n455  [color=darkseagreen4, key=1, label=algo, style=dashed];
n450 -> n451  [key=0, style=solid];
n450 -> n8  [key=2, style=dotted];
n451 -> n452  [key=0, style=solid];
n451 -> n55  [key=2, style=dotted];
n452 -> n453  [key=0, style=solid];
n452 -> n56  [key=2, style=dotted];
n453 -> n454  [key=0, style=solid];
n453 -> n8  [key=2, style=dotted];
n454 -> n455  [key=0, style=solid];
n454 -> n10  [key=2, style=dotted];
n455 -> n456  [key=0, style=solid];
n455 -> n9  [key=2, style=dotted];
n456 -> n457  [key=0, style=solid];
n456 -> n10  [key=2, style=dotted];
n457 -> n447  [color=blue, key=0, style=bold];
n458 -> n459  [key=0, style=solid];
n458 -> n460  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n459 -> n460  [key=0, style=solid];
n460 -> n461  [key=0, style=solid];
n460 -> n7  [key=2, style=dotted];
n460 -> n462  [color=darkseagreen4, key=1, label=algo, style=dashed];
n460 -> n463  [color=darkseagreen4, key=1, label=algo, style=dashed];
n460 -> n464  [color=darkseagreen4, key=1, label=msft, style=dashed];
n460 -> n465  [color=darkseagreen4, key=1, label=algo, style=dashed];
n461 -> n462  [key=0, style=solid];
n461 -> n8  [key=2, style=dotted];
n462 -> n463  [key=0, style=solid];
n462 -> n55  [key=2, style=dotted];
n463 -> n464  [key=0, style=solid];
n463 -> n56  [key=2, style=dotted];
n464 -> n465  [key=0, style=solid];
n464 -> n8  [key=2, style=dotted];
n465 -> n466  [key=0, style=solid];
n465 -> n9  [key=2, style=dotted];
n466 -> n467  [key=0, style=solid];
n466 -> n10  [key=2, style=dotted];
n467 -> n458  [color=blue, key=0, style=bold];
n468 -> n469  [key=0, style=solid];
n469 -> n470  [key=0, style=solid];
n469 -> n479  [key=2, style=dotted];
n469 -> n471  [color=darkseagreen4, key=1, label=algo, style=dashed];
n469 -> n472  [color=darkseagreen4, key=1, label=algo, style=dashed];
n469 -> n473  [color=darkseagreen4, key=1, label=algo, style=dashed];
n469 -> n474  [color=darkseagreen4, key=1, label=algo, style=dashed];
n469 -> n476  [color=darkseagreen4, key=1, label=algo, style=dashed];
n470 -> n471  [key=0, style=solid];
n470 -> n480  [key=2, style=dotted];
n471 -> n472  [key=0, style=solid];
n471 -> n481  [key=2, style=dotted];
n472 -> n473  [key=0, style=solid];
n472 -> n482  [key=2, style=dotted];
n473 -> n474  [key=0, style=solid];
n473 -> n483  [key=2, style=dotted];
n474 -> n475  [key=0, style=solid];
n476 -> n477  [key=0, style=solid];
n476 -> n9  [key=2, style=dotted];
n475 -> n476  [key=0, style=solid];
n475 -> n8  [key=2, style=dotted];
n477 -> n478  [key=0, style=solid];
n477 -> n10  [key=2, style=dotted];
n478 -> n468  [color=blue, key=0, style=bold];
n484 -> n485  [key=0, style=solid];
n485 -> n486  [key=0, style=solid];
n485 -> n479  [key=2, style=dotted];
n485 -> n487  [color=darkseagreen4, key=1, label=algo, style=dashed];
n485 -> n488  [color=darkseagreen4, key=1, label=algo, style=dashed];
n485 -> n489  [color=darkseagreen4, key=1, label=algo, style=dashed];
n485 -> n490  [color=darkseagreen4, key=1, label=algo, style=dashed];
n485 -> n492  [color=darkseagreen4, key=1, label=algo, style=dashed];
n486 -> n487  [key=0, style=solid];
n486 -> n480  [key=2, style=dotted];
n487 -> n488  [key=0, style=solid];
n487 -> n481  [key=2, style=dotted];
n488 -> n489  [key=0, style=solid];
n488 -> n482  [key=2, style=dotted];
n489 -> n490  [key=0, style=solid];
n489 -> n483  [key=2, style=dotted];
n490 -> n491  [key=0, style=solid];
n492 -> n493  [key=0, style=solid];
n492 -> n9  [key=2, style=dotted];
n491 -> n492  [key=0, style=solid];
n491 -> n8  [key=2, style=dotted];
n493 -> n494  [key=0, style=solid];
n493 -> n10  [key=2, style=dotted];
n494 -> n484  [color=blue, key=0, style=bold];
n495 -> n496  [key=0, style=solid];
n496 -> n497  [key=0, style=solid];
n496 -> n479  [key=2, style=dotted];
n496 -> n498  [color=darkseagreen4, key=1, label=algo, style=dashed];
n496 -> n499  [color=darkseagreen4, key=1, label=algo, style=dashed];
n496 -> n500  [color=darkseagreen4, key=1, label=algo, style=dashed];
n496 -> n501  [color=darkseagreen4, key=1, label=algo, style=dashed];
n496 -> n503  [color=darkseagreen4, key=1, label=algo, style=dashed];
n497 -> n498  [key=0, style=solid];
n497 -> n480  [key=2, style=dotted];
n498 -> n499  [key=0, style=solid];
n498 -> n481  [key=2, style=dotted];
n499 -> n500  [key=0, style=solid];
n499 -> n482  [key=2, style=dotted];
n500 -> n501  [key=0, style=solid];
n500 -> n483  [key=2, style=dotted];
n501 -> n502  [key=0, style=solid];
n503 -> n504  [key=0, style=solid];
n503 -> n9  [key=2, style=dotted];
n502 -> n503  [key=0, style=solid];
n502 -> n8  [key=2, style=dotted];
n504 -> n505  [key=0, style=solid];
n504 -> n10  [key=2, style=dotted];
n505 -> n495  [color=blue, key=0, style=bold];
n506 -> n507  [key=0, style=solid];
n506 -> n479  [key=2, style=dotted];
n506 -> n508  [color=darkseagreen4, key=1, label=algo, style=dashed];
n506 -> n509  [color=darkseagreen4, key=1, label=algo, style=dashed];
n506 -> n510  [color=darkseagreen4, key=1, label=algo, style=dashed];
n506 -> n512  [color=darkseagreen4, key=1, label=algo, style=dashed];
n509 -> n510  [key=0, style=solid];
n509 -> n483  [key=2, style=dotted];
n511 -> n512  [key=0, style=solid];
n511 -> n514  [key=2, style=dotted];
n507 -> n508  [key=0, style=solid];
n507 -> n480  [key=2, style=dotted];
n508 -> n509  [key=0, style=solid];
n508 -> n481  [key=2, style=dotted];
n510 -> n511  [key=0, style=solid];
n510 -> n513  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.Security", style=dashed];
n512 -> n513  [key=0, style=solid];
n513 -> n7  [color=blue, key=0, style=bold];
n515 -> n516  [key=0, style=solid];
n515 -> n479  [key=2, style=dotted];
n515 -> n517  [color=darkseagreen4, key=1, label=algo, style=dashed];
n515 -> n518  [color=darkseagreen4, key=1, label=algo, style=dashed];
n515 -> n519  [color=darkseagreen4, key=1, label=algo, style=dashed];
n515 -> n521  [color=darkseagreen4, key=1, label=algo, style=dashed];
n518 -> n519  [key=0, style=solid];
n518 -> n483  [key=2, style=dotted];
n520 -> n521  [key=0, style=solid];
n520 -> n523  [key=2, style=dotted];
n516 -> n517  [key=0, style=solid];
n516 -> n480  [key=2, style=dotted];
n517 -> n518  [key=0, style=solid];
n517 -> n481  [key=2, style=dotted];
n519 -> n520  [key=0, style=solid];
n519 -> n522  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.Security", style=dashed];
n521 -> n522  [key=0, style=solid];
n522 -> n273  [color=blue, key=0, style=bold];
n524 -> n525  [key=0, style=solid];
n524 -> n526  [key=2, style=dotted];
n524 -> n527  [key=2, style=dotted];
n525 -> n8  [color=blue, key=0, style=bold];
m1_129 -> m1_130  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_136  [key=0, style=solid];
m1_141 -> m1_292  [key=2, style=dotted];
m1_141 -> m1_293  [key=2, style=dotted];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_142  [key=0, style=solid];
m1_139 -> m1_136  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_133  [key=0, style=solid];
m1_169 -> m1_170  [key=0, style=solid];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_192  [key=0, style=solid];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_193  [key=0, style=solid];
m1_191 -> m1_270  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_194  [key=2, style=dotted];
m1_193 -> m1_190  [color=blue, key=0, style=bold];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_270  [key=2, style=dotted];
m1_125 -> m1_126  [key=0, style=solid];
m1_168 -> m1_169  [key=0, style=solid];
m1_135 -> m1_133  [key=0, style=solid];
m1_135 -> m1_290  [key=2, style=dotted];
m1_132 -> m1_240  [key=0, style=solid];
m1_7 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_7 -> m1_9  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Interfaces.IAlgorithm CreateAlgorithmInstance", style=bold];
m1_10 -> m1_17  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_16  [key=2, style=dotted];
m1_10 -> m1_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m1_10 -> m1_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m1_10 -> m1_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_12  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_13  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_9 -> m1_20  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_9 -> m1_22  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_23  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_25  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_27  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_28  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_29  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_30  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_31  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_323  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_32  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_34  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_37  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_43  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_9 -> m1_47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_9 -> m1_50  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.ICommandQueueHandler", style=dashed];
m1_9 -> m1_54  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_57  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_9 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_65  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_9 -> m1_68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_69  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_71  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_74  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m1_9 -> m1_80  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_81  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_90  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m1_9 -> m1_92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m1_9 -> m1_93  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_94  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_96  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_98  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_101  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_104  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_106  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_108  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_110  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_116  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_118  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_124  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_127  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_129  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_134  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_135  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_137  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_138  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_139  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_140  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m1_9 -> m1_141  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_143  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_153  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_158  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_167  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_169  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_174  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_176  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_178  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_180  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_184  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_189  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_191  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_193  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_195  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_197  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_202  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_204  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_208  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m1_9 -> m1_210  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_9 -> m1_213  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_216  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_219  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_9 -> m1_222  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_223  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_9 -> m1_224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_9 -> m1_227  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_9 -> m1_228  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_9 -> m1_231  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_9 -> m1_232  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_9 -> m1_233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_9 -> m1_234  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_235  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_236  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_9 -> m1_238  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_9 -> m1_239  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_18  [key=2, style=dotted];
m1_11 -> m1_13  [color=darkseagreen4, key=1, label=error, style=dashed];
m1_11 -> m1_14  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_4  [color=blue, key=0, style=bold];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=0, style=solid];
m1_12 -> m1_66  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_12 -> m1_68  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_12 -> m1_237  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_12 -> m1_239  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_13 -> m1_15  [key=0, style=solid];
m1_13 -> m1_19  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_62  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_241  [key=2, style=dotted];
m1_14 -> m1_23  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_24  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_25  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_26  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_27  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_28  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_29  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_30  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_35  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_41  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_74  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_164  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_174  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_176  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_178  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_189  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_191  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_193  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_14 -> m1_195  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
m1_15 -> m1_7  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_242  [key=2, style=dotted];
m1_15 -> m1_122  [color=darkseagreen4, key=1, label=marginCallFrequency, style=dashed];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_211  [key=0, style=solid];
m1_43 -> m1_255  [key=2, style=dotted];
m1_43 -> m1_46  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_48  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_60  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_61  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_72  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_74  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_75  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_78  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_79  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_82  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_86  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_91  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_98  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_126  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_127  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_133  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_136  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_147  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_162  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_173  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_174  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_175  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_176  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_177  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_178  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_184  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_185  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_186  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_187  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_188  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_189  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_190  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_191  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_192  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_193  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_194  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_195  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_201  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_43 -> m1_202  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_99  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
m1_16 -> m1_22  [color=darkorchid, key=3, label="method methodReturn bool Setup", style=bold];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_270  [key=2, style=dotted];
m1_172 -> m1_48  [color=darkorchid, key=3, label="Field variable QuantConnect.Interfaces.IAlgorithm _algorithm", style=bold];
m1_172 -> m1_240  [key=0, style=solid];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_175  [key=0, style=solid];
m1_274 -> m1_293  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Interfaces.IAlgorithm CreateAlgorithmInstance", style=bold];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=0, style=solid];
m1_183 -> m1_240  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_244  [key=2, style=dotted];
m1_29 -> m1_177  [color=darkseagreen4, key=1, label=hasOnDataDelistings, style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_6 -> m1_8  [key=0, style=solid];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_245  [key=2, style=dotted];
m1_318 -> m1_319  [key=0, style=solid];
m1_322 -> m1_323  [key=0, style=solid];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_328  [key=2, style=dotted];
m1_325 -> m1_326  [key=0, style=solid];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_328  [key=2, style=dotted];
m1_329 -> m1_330  [key=0, style=solid];
m1_332 -> m1_333  [key=0, style=solid];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_321  [key=2, style=dotted];
m1_320 -> m1_318  [color=blue, key=0, style=bold];
m1_324 -> m1_322  [color=blue, key=0, style=bold];
m1_327 -> m1_325  [color=blue, key=0, style=bold];
m1_331 -> m1_329  [color=blue, key=0, style=bold];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_333  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.QuoteBar>", style=dashed];
m1_334 -> m1_332  [color=blue, key=0, style=bold];
m1_446 -> m1_447  [key=0, style=solid];
m1_449 -> m1_450  [key=0, style=solid];
m1_452 -> m1_453  [key=0, style=solid];
m1_455 -> m1_456  [key=0, style=solid];
m1_458 -> m1_459  [key=0, style=solid];
m1_461 -> m1_462  [key=0, style=solid];
m1_464 -> m1_465  [key=0, style=solid];
m1_467 -> m1_468  [key=0, style=solid];
m1_447 -> m1_448  [key=0, style=solid];
m1_447 -> m1_294  [key=2, style=dotted];
m1_447 -> m1_447  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m1_448 -> m1_446  [color=blue, key=0, style=bold];
m1_450 -> m1_451  [key=0, style=solid];
m1_451 -> m1_449  [color=blue, key=0, style=bold];
m1_453 -> m1_454  [key=0, style=solid];
m1_454 -> m1_452  [color=blue, key=0, style=bold];
m1_456 -> m1_457  [key=0, style=solid];
m1_457 -> m1_455  [color=blue, key=0, style=bold];
m1_459 -> m1_460  [key=0, style=solid];
m1_460 -> m1_458  [color=blue, key=0, style=bold];
m1_462 -> m1_463  [key=0, style=solid];
m1_463 -> m1_461  [color=blue, key=0, style=bold];
m1_465 -> m1_466  [key=0, style=solid];
m1_466 -> m1_464  [color=blue, key=0, style=bold];
m1_468 -> m1_469  [key=0, style=solid];
m1_469 -> m1_467  [color=blue, key=0, style=bold];
m1_502 -> m1_503  [key=0, style=solid];
m1_501 -> m1_502  [key=0, style=solid];
m1_503 -> m1_501  [color=blue, key=0, style=bold];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_168  [key=2, style=dotted];
m1_156 -> m1_150  [key=0, style=solid];
m1_156 -> m1_302  [key=2, style=dotted];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_169  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_170  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_171  [key=2, style=dotted];
m1_160 -> m1_172  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_257  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_173  [key=2, style=dotted];
m1_161 -> m1_240  [key=0, style=solid];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_165  [key=0, style=solid];
m1_163 -> m1_167  [key=0, style=solid];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_181  [key=2, style=dotted];
m1_179 -> m1_182  [key=2, style=dotted];
m1_179 -> m1_183  [key=2, style=dotted];
m1_179 -> m1_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_165  [key=0, style=solid];
m1_162 -> m1_167  [key=0, style=solid];
m1_162 -> m1_173  [key=0, style=solid];
m1_162 -> m1_164  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_162 -> m1_166  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_301  [key=2, style=dotted];
m1_164 -> m1_163  [key=0, style=solid];
m1_164 -> m1_164  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m1_164 -> m1_174  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_162  [key=0, style=solid];
m1_164 -> m1_303  [key=2, style=dotted];
m1_164 -> m1_167  [color=darkseagreen4, key=1, label=methodInvoker, style=dashed];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_168  [key=0, style=solid];
m1_165 -> m1_162  [key=0, style=solid];
m1_165 -> m1_167  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m1_167 -> m1_155  [color=blue, key=0, style=bold];
m1_167 -> m1_165  [key=0, style=solid];
m1_167 -> m1_305  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_177  [key=0, style=solid];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_184  [key=0, style=solid];
m1_178 -> m1_270  [key=2, style=dotted];
m1_180 -> m1_178  [color=blue, key=0, style=bold];
m1_180 -> m1_181  [key=0, style=solid];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_306  [key=2, style=dotted];
m1_152 -> m1_122  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_154  [key=2, style=dotted];
m1_152 -> m1_295  [key=2, style=dotted];
m1_152 -> m1_296  [key=2, style=dotted];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_122  [key=2, style=dotted];
m1_166 -> m1_165  [key=0, style=solid];
m1_166 -> m1_304  [key=2, style=dotted];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_153  [key=0, style=solid];
m1_151 -> m1_155  [key=0, style=solid];
m1_151 -> m1_154  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_270  [key=2, style=dotted];
m1_177 -> m1_175  [color=blue, key=0, style=bold];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_179  [key=0, style=solid];
m1_177 -> m1_184  [key=0, style=solid];
m1_186 -> m1_184  [color=blue, key=0, style=bold];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_188  [key=0, style=solid];
m1_186 -> m1_247  [key=2, style=dotted];
m1_186 -> m1_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_185  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m1_185 -> m1_188  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_150 -> m1_152  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_147  [key=0, style=solid];
m1_150 -> m1_154  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m1_150 -> m1_156  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m1_153 -> m1_150  [color=blue, key=0, style=bold];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_151  [key=0, style=solid];
m1_153 -> m1_297  [key=2, style=dotted];
m1_153 -> m1_298  [key=2, style=dotted];
m1_153 -> m1_299  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_22 -> m1_25  [key=0, style=solid];
m1_22 -> m1_26  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_28  [key=2, style=dotted];
m1_24 -> m1_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_24 -> m1_244  [key=2, style=dotted];
m1_24 -> m1_190  [color=darkseagreen4, key=1, label=hasOnDataQuoteBars, style=dashed];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [key=2, style=dotted];
m1_46 -> m1_44  [color=blue, key=0, style=bold];
m1_46 -> m1_211  [key=0, style=solid];
m1_46 -> m1_256  [key=2, style=dotted];
m1_46 -> m1_257  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m1_20 -> m1_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_27  [key=2, style=dotted];
m1_23 -> m1_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m1_23 -> m1_244  [key=2, style=dotted];
m1_23 -> m1_188  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
m1_25 -> m1_20  [color=blue, key=0, style=bold];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_244  [key=2, style=dotted];
m1_25 -> m1_192  [color=darkseagreen4, key=1, label=hasOnDataOptionChains, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=2, style=dotted];
m1_30 -> m1_244  [key=2, style=dotted];
m1_30 -> m1_73  [color=darkseagreen4, key=1, label=hasOnDataSymbolChangedEvents, style=dashed];
m1_31 -> m1_29  [color=blue, key=0, style=bold];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_245  [key=2, style=dotted];
m1_31 -> m1_246  [key=2, style=dotted];
m1_31 -> m1_247  [key=2, style=dotted];
m1_31 -> m1_248  [key=2, style=dotted];
m1_31 -> m1_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_36  [color=darkseagreen4, key=1, label=hasOnDataSlice, style=dashed];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_126  [key=0, style=solid];
m1_33 -> m1_38  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_32  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_42  [key=2, style=dotted];
m1_37 -> m1_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_37 -> m1_251  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_43  [key=2, style=dotted];
m1_34 -> m1_37  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_34 -> m1_38  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_45  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_34 -> m1_245  [key=2, style=dotted];
m1_34 -> m1_249  [key=2, style=dotted];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m1_34 -> m1_40  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m1_34 -> m1_41  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
m1_35 -> m1_37  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_32  [key=0, style=solid];
m1_35 -> m1_250  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_240  [key=0, style=solid];
m1_36 -> m1_40  [key=0, style=solid];
m1_36 -> m1_41  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_40 -> m1_33  [color=blue, key=0, style=bold];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_32  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_133  [key=0, style=solid];
m1_127 -> m1_288  [key=2, style=dotted];
m1_142 -> m1_143  [key=0, style=solid];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_257  [key=2, style=dotted];
m1_265 -> m1_529  [key=0, style=solid];
m1_265 -> m1_531  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_529 -> m1_530  [key=0, style=solid];
m1_529 -> m1_534  [key=0, style=solid];
m1_529 -> m1_535  [key=2, style=dotted];
m1_529 -> m1_536  [key=2, style=dotted];
m1_529 -> m1_537  [key=2, style=dotted];
m1_531 -> m1_532  [key=0, style=solid];
m1_530 -> m1_531  [key=0, style=solid];
m1_532 -> m1_533  [key=0, style=solid];
m1_533 -> m1_534  [key=0, style=solid];
m1_533 -> m1_261  [key=2, style=dotted];
m1_534 -> m1_265  [color=blue, key=0, style=bold];
m1_130 -> m1_131  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_50  [key=0, style=solid];
m1_47 -> m1_47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_287  [key=2, style=dotted];
m1_181 -> m1_182  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_244  [key=2, style=dotted];
m1_27 -> m1_173  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_42  [key=0, style=solid];
m1_32 -> m1_34  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_32 -> m1_35  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_32 -> m1_37  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_32 -> m1_41  [color=darkseagreen4, key=1, label=config, style=dashed];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_254  [key=2, style=dotted];
m1_280 -> m1_504  [key=0, style=solid];
m1_280 -> m1_506  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_280 -> m1_508  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m1_280 -> m1_514  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_280 -> m1_517  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_280 -> m1_518  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_280 -> m1_519  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_280 -> m1_520  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_280 -> m1_521  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m1_504 -> m1_505  [key=0, style=solid];
m1_504 -> m1_506  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_504 -> m1_508  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_504 -> m1_521  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_504 -> m1_522  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_506 -> m1_507  [key=0, style=solid];
m1_506 -> m1_509  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_506 -> m1_510  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_506 -> m1_511  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_506 -> m1_513  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_506 -> m1_514  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_506 -> m1_515  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_506 -> m1_516  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_506 -> m1_517  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_506 -> m1_518  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_506 -> m1_519  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_508 -> m1_509  [key=0, style=solid];
m1_514 -> m1_515  [key=0, style=solid];
m1_517 -> m1_520  [key=0, style=solid];
m1_517 -> m1_526  [key=2, style=dotted];
m1_518 -> m1_520  [key=0, style=solid];
m1_518 -> m1_526  [key=2, style=dotted];
m1_519 -> m1_520  [key=0, style=solid];
m1_519 -> m1_526  [key=2, style=dotted];
m1_520 -> m1_521  [key=0, style=solid];
m1_520 -> m1_527  [key=2, style=dotted];
m1_521 -> m1_522  [key=0, style=solid];
m1_521 -> m1_528  [key=2, style=dotted];
m1_505 -> m1_506  [key=0, style=solid];
m1_505 -> m1_523  [key=0, style=solid];
m1_522 -> m1_505  [key=0, style=solid];
m1_522 -> m1_522  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_507 -> m1_508  [key=0, style=solid];
m1_507 -> m1_505  [key=0, style=solid];
m1_509 -> m1_510  [key=0, style=solid];
m1_509 -> m1_524  [key=2, style=dotted];
m1_510 -> m1_511  [key=0, style=solid];
m1_510 -> m1_525  [key=2, style=dotted];
m1_511 -> m1_512  [key=0, style=solid];
m1_511 -> m1_505  [key=0, style=solid];
m1_513 -> m1_514  [key=0, style=solid];
m1_513 -> m1_519  [key=0, style=solid];
m1_515 -> m1_516  [key=0, style=solid];
m1_516 -> m1_517  [key=0, style=solid];
m1_516 -> m1_518  [key=0, style=solid];
m1_512 -> m1_513  [key=0, style=solid];
m1_523 -> m1_280  [color=blue, key=0, style=bold];
m1_144 -> m1_145  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_244  [key=2, style=dotted];
m1_26 -> m1_194  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_244  [key=2, style=dotted];
m1_28 -> m1_175  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
m1_28 -> m1_28  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.BrokerageMessageEvent> brokerageOnMessage", style=bold];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_60  [key=0, style=solid];
m1_50 -> m1_258  [key=2, style=dotted];
m1_50 -> m1_52  [color=darkseagreen4, key=1, label=command, style=dashed];
m1_50 -> m1_54  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_50 -> m1_57  [color=darkseagreen4, key=1, label=command, style=dashed];
m1_50 -> m1_58  [color=darkseagreen4, key=1, label=command, style=dashed];
m1_50 -> m1_62  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_50 -> m1_162  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_59  [key=0, style=solid];
m1_54 -> m1_260  [key=2, style=dotted];
m1_54 -> m1_57  [key=0, style=solid];
m1_54 -> m1_123  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_245  [key=2, style=dotted];
m1_57 -> m1_256  [key=2, style=dotted];
m1_57 -> m1_262  [key=2, style=dotted];
m1_57 -> m1_67  [color=darkseagreen4, key=1, label=brokerageOnMessage, style=dashed];
m1_57 -> m1_57  [color=darkorchid, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.BrokerageMessageEvent> brokerageOnMessage", style=bold];
m1_57 -> m1_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m1_57 -> m1_152  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m1_59 -> m1_50  [key=0, style=solid];
m1_59 -> m1_264  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_125  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_265  [key=2, style=dotted];
m1_64 -> m1_122  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_266  [key=2, style=dotted];
m1_65 -> m1_267  [key=2, style=dotted];
m1_65 -> m1_121  [key=0, style=solid];
m1_65 -> m1_120  [key=0, style=solid];
m1_67 -> m1_69  [key=0, style=solid];
m1_67 -> m1_268  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_266  [key=2, style=dotted];
m1_68 -> m1_268  [key=2, style=dotted];
m1_68 -> m1_128  [key=2, style=dotted];
m1_69 -> m1_71  [key=0, style=solid];
m1_69 -> m1_237  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_69 -> m1_239  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_129  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_265  [key=2, style=dotted];
m1_70 -> m1_124  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_269  [key=2, style=dotted];
m1_71 -> m1_76  [key=0, style=solid];
m1_71 -> m1_130  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_270  [key=2, style=dotted];
m1_74 -> m1_122  [key=2, style=dotted];
m1_74 -> m1_132  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_75  [key=0, style=solid];
m1_76 -> m1_271  [key=2, style=dotted];
m1_76 -> m1_325  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_76 -> m1_79  [key=0, style=solid];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_79  [key=0, style=solid];
m1_80 -> m1_273  [key=2, style=dotted];
m1_80 -> m1_133  [key=2, style=dotted];
m1_81 -> m1_79  [key=0, style=solid];
m1_81 -> m1_274  [key=2, style=dotted];
m1_81 -> m1_83  [color=darkseagreen4, key=1, label=cash, style=dashed];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_84  [key=0, style=solid];
m1_81 -> m1_88  [key=0, style=solid];
m1_90 -> m1_86  [key=0, style=solid];
m1_90 -> m1_277  [key=2, style=dotted];
m1_90 -> m1_92  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_90 -> m1_93  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_94  [key=0, style=solid];
m1_90 -> m1_98  [key=0, style=solid];
m1_90 -> m1_176  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_278  [key=2, style=dotted];
m1_91 -> m1_136  [key=2, style=dotted];
m1_91 -> m1_124  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_279  [key=2, style=dotted];
m1_92 -> m1_137  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_280  [key=2, style=dotted];
m1_93 -> m1_90  [key=0, style=solid];
m1_93 -> m1_138  [key=2, style=dotted];
m1_93 -> m1_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_96  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_99  [key=0, style=solid];
m1_96 -> m1_122  [key=2, style=dotted];
m1_98 -> m1_211  [key=0, style=solid];
m1_98 -> m1_256  [key=2, style=dotted];
m1_98 -> m1_254  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_124  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_281  [key=2, style=dotted];
m1_101 -> m1_104  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m1_101 -> m1_106  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m1_101 -> m1_115  [color=darkseagreen4, key=1, label=issueMarginCallWarning, style=dashed];
m1_101 -> m1_109  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m1_101 -> m1_141  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_282  [key=2, style=dotted];
m1_104 -> m1_107  [key=0, style=solid];
m1_104 -> m1_142  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_283  [key=2, style=dotted];
m1_106 -> m1_102  [key=0, style=solid];
m1_106 -> m1_144  [key=2, style=dotted];
m1_106 -> m1_122  [key=2, style=dotted];
m1_108 -> m1_107  [key=0, style=solid];
m1_108 -> m1_284  [key=2, style=dotted];
m1_108 -> m1_262  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_136  [key=2, style=dotted];
m1_108 -> m1_124  [key=2, style=dotted];
m1_110 -> m1_111  [color=green, key=0, style=solid];
m1_110 -> m1_147  [color=green, key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_122  [key=0, style=solid];
m1_116 -> m1_286  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_289  [key=2, style=dotted];
m1_134 -> m1_259  [key=2, style=dotted];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_289  [key=2, style=dotted];
m1_137 -> m1_259  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_291  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_271  [key=2, style=dotted];
m1_140 -> m1_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_143 -> m1_144  [key=0, style=solid];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_270  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_201  [key=0, style=solid];
m1_195 -> m1_270  [key=2, style=dotted];
m1_195 -> m1_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_156  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_116  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_106  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_120  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_152  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_166  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_96  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_114  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_117  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_119  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_187  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_191  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_195 -> m1_192  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", style=dashed];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_45  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_208  [key=0, style=solid];
m1_202 -> m1_308  [key=2, style=dotted];
m1_202 -> m1_176  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_204 -> m1_205  [key=0, style=solid];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_279  [key=2, style=dotted];
m1_210 -> m1_43  [key=0, style=solid];
m1_210 -> m1_309  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_219  [key=0, style=solid];
m1_213 -> m1_310  [key=2, style=dotted];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_311  [key=2, style=dotted];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_309  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_312  [key=2, style=dotted];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_313  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_314  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_313  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_314  [key=2, style=dotted];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_315  [key=2, style=dotted];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_314  [key=2, style=dotted];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_314  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_316  [key=2, style=dotted];
m1_234 -> m1_317  [key=2, style=dotted];
m1_235 -> m1_236  [key=0, style=solid];
m1_235 -> m1_266  [key=2, style=dotted];
m1_235 -> m1_267  [key=2, style=dotted];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_265  [key=2, style=dotted];
m1_238 -> m1_240  [key=0, style=solid];
m1_238 -> m1_268  [key=2, style=dotted];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_266  [key=2, style=dotted];
m1_239 -> m1_268  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=0, style=solid];
m1_66 -> m1_125  [key=2, style=dotted];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_239  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_70  [key=0, style=solid];
m1_62 -> m1_17  [key=2, style=dotted];
m1_62 -> m1_127  [key=2, style=dotted];
m1_62 -> m1_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_41 -> m1_32  [key=0, style=solid];
m1_41 -> m1_252  [key=2, style=dotted];
m1_41 -> m1_253  [key=2, style=dotted];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_77  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m1_122 -> m1_52  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m1_122 -> m1_187  [key=0, style=solid];
m1_122 -> m1_55  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m1_122 -> m1_64  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_242  [key=2, style=dotted];
m1_17 -> m1_125  [color=darkseagreen4, key=1, label=settlementScanFrequency, style=dashed];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_123  [key=0, style=solid];
m1_99 -> m1_102  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m1_99 -> m1_139  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_123  [color=darkseagreen4, key=1, label=nextSettlementScanTime, style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_243  [key=2, style=dotted];
m1_19 -> m1_93  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m1_19 -> m1_184  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_190  [key=0, style=solid];
m1_188 -> m1_122  [color=blue, key=0, style=bold];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_196  [key=0, style=solid];
m1_194 -> m1_201  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_75  [key=0, style=solid];
m1_73 -> m1_261  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_257  [key=2, style=dotted];
m1_48 -> m1_110  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_50  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_48 -> m1_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_48 -> m1_60  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_48 -> m1_62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_156  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_157  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_158  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_159  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_161  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_163  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_48 -> m1_67  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_48 -> m1_68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_69  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_71  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_48 -> m1_76  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_48 -> m1_80  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_48 -> m1_83  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_89  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_48 -> m1_92  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_93  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
m1_48 -> m1_99  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_48 -> m1_101  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_179  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_107  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_109  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_111  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_116  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_48 -> m1_53  [color=darkorchid, key=3, label="method methodReturn bool Setup", style=bold];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_63  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_60 -> m1_70  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_60 -> m1_71  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_60 -> m1_99  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_60 -> m1_122  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_60 -> m1_123  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_60 -> m1_125  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_60 -> m1_155  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_60 -> m1_209  [color=darkseagreen4, key=1, label=time, style=dashed];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_126  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_78  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_78  [key=0, style=solid];
m1_75 -> m1_326  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_75 -> m1_121  [key=0, style=solid];
m1_75 -> m1_120  [key=0, style=solid];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_82  [key=0, style=solid];
m1_78 -> m1_121  [key=0, style=solid];
m1_78 -> m1_120  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_82  [key=0, style=solid];
m1_79 -> m1_81  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_79 -> m1_124  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_86  [key=0, style=solid];
m1_82 -> m1_84  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_82 -> m1_124  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_91  [key=0, style=solid];
m1_86 -> m1_88  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_86 -> m1_122  [key=2, style=dotted];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_136  [key=0, style=solid];
m1_133 -> m1_135  [color=darkseagreen4, key=1, label=dividend, style=dashed];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_147  [key=0, style=solid];
m1_136 -> m1_138  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_136 -> m1_139  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_136 -> m1_140  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_136 -> m1_330  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_136 -> m1_141  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_157  [key=0, style=solid];
m1_147 -> m1_162  [key=0, style=solid];
m1_147 -> m1_149  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_147 -> m1_151  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_147 -> m1_153  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_147 -> m1_155  [color=darkseagreen4, key=1, label=update, style=dashed];
m1_187 -> m1_186  [key=0, style=solid];
m1_187 -> m1_307  [key=2, style=dotted];
m1_187 -> m1_253  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_189  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_203  [key=0, style=solid];
m1_201 -> m1_208  [key=0, style=solid];
m1_201 -> m1_162  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m1_49 -> m1_240  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_50  [key=0, style=solid];
m1_51 -> m1_54  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_259  [key=2, style=dotted];
m1_52 -> m1_122  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_263  [key=2, style=dotted];
m1_58 -> m1_124  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_121  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_122  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_261  [key=2, style=dotted];
m1_56 -> m1_121  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_71  [key=0, style=solid];
m1_63 -> m1_66  [key=0, style=solid];
m1_209 -> m1_210  [key=0, style=solid];
m1_77 -> m1_76  [key=0, style=solid];
m1_77 -> m1_272  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_122  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_85  [color=darkseagreen4, key=1, label=cash, style=dashed];
m1_83 -> m1_81  [key=0, style=solid];
m1_83 -> m1_134  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_82  [key=0, style=solid];
m1_85 -> m1_84  [key=0, style=solid];
m1_85 -> m1_275  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_261  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_89  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_87 -> m1_90  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_87 -> m1_121  [key=0, style=solid];
m1_87 -> m1_120  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_90  [key=0, style=solid];
m1_88 -> m1_124  [key=2, style=dotted];
m1_89 -> m1_88  [key=0, style=solid];
m1_89 -> m1_276  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_135  [key=2, style=dotted];
m1_95 -> m1_211  [key=0, style=solid];
m1_95 -> m1_254  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_261  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_121  [key=0, style=solid];
m1_97 -> m1_120  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_21  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m1_100 -> m1_24  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m1_100 -> m1_47  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m1_100 -> m1_104  [color=darkseagreen4, key=1, label=supportedSecurityTypes, style=dashed];
m1_100 -> m1_106  [color=darkseagreen4, key=1, label=supportedSecurityTypes, style=dashed];
m1_100 -> m1_140  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_115  [key=0, style=solid];
m1_102 -> m1_110  [color=green, key=1, label=holding, style=dashed];
m1_102 -> m1_107  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_102 -> m1_109  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_102 -> m1_112  [key=0, style=solid];
m1_102 -> m1_116  [key=0, style=solid];
m1_102 -> m1_104  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_102 -> m1_105  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_102 -> m1_106  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_102 -> m1_108  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_102 -> m1_111  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_122  [key=0, style=solid];
m1_115 -> m1_121  [key=0, style=solid];
m1_115 -> m1_120  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_124  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_112  [color=darkseagreen4, key=1, label=executingMarginCall, style=dashed];
m1_105 -> m1_143  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_109  [key=0, style=solid];
m1_107 -> m1_122  [key=0, style=solid];
m1_107 -> m1_110  [color=green, key=0, style=solid];
m1_107 -> m1_145  [key=2, style=dotted];
m1_109 -> m1_110  [color=green, key=0, style=solid];
m1_109 -> m1_146  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_102  [key=0, style=solid];
m1_111 -> m1_148  [key=2, style=dotted];
m1_111 -> n527  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_285  [key=2, style=dotted];
m1_113 -> m1_257  [key=2, style=dotted];
m1_113 -> m1_261  [key=2, style=dotted];
m1_114 -> m1_240  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_122  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_120  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_122  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_257  [key=2, style=dotted];
m1_121 -> m1_240  [key=0, style=solid];
m1_121 -> m1_48  [color=blue, key=0, style=bold];
m1_128 -> m1_129  [key=0, style=solid];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_257  [key=2, style=dotted];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_257  [key=2, style=dotted];
m1_146 -> m1_240  [key=0, style=solid];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_294  [key=2, style=dotted];
m1_148 -> m1_152  [color=darkseagreen4, key=1, label=resolutionTimeSpan, style=dashed];
m1_148 -> m1_153  [color=darkseagreen4, key=1, label=resolutionTimeSpan, style=dashed];
m1_149 -> m1_150  [key=0, style=solid];
m1_154 -> m1_151  [key=0, style=solid];
m1_154 -> m1_300  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_257  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_30  [color=darkseagreen4, key=1, label=algorithmName, style=dashed];
m1_198 -> m1_199  [key=0, style=solid];
m1_198 -> m1_156  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_198 -> m1_157  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_198 -> m1_158  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_198 -> m1_159  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_198 -> m1_160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_198 -> m1_161  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_198 -> m1_163  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_198 -> m1_179  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_257  [key=2, style=dotted];
m1_199 -> m1_157  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_200 -> m1_240  [key=0, style=solid];
m1_200 -> m1_160  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m1_203 -> m1_204  [key=0, style=solid];
m1_205 -> m1_206  [key=0, style=solid];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_257  [key=2, style=dotted];
m1_207 -> m1_240  [key=0, style=solid];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_254  [key=2, style=dotted];
m1_214 -> m1_215  [key=0, style=solid];
m1_215 -> m1_216  [key=0, style=solid];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_257  [key=2, style=dotted];
m1_218 -> m1_240  [key=0, style=solid];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_225  [key=0, style=solid];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_254  [key=2, style=dotted];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_229  [key=0, style=solid];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_254  [key=2, style=dotted];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_233  [key=0, style=solid];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_254  [key=2, style=dotted];
m1_240 -> m1_9  [color=blue, key=0, style=bold];
m1_244 -> m1_484  [key=0, style=solid];
m1_244 -> m1_486  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
m1_484 -> m1_485  [key=0, style=solid];
m1_484 -> m1_245  [key=2, style=dotted];
m1_484 -> m1_249  [key=2, style=dotted];
m1_484 -> m1_486  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
m1_486 -> m1_487  [key=0, style=solid];
m1_486 -> m1_252  [key=2, style=dotted];
m1_486 -> m1_253  [key=2, style=dotted];
m1_485 -> m1_486  [key=0, style=solid];
m1_485 -> m1_488  [key=0, style=solid];
m1_488 -> m1_489  [key=0, style=solid];
m1_487 -> m1_489  [key=0, style=solid];
m1_489 -> m1_244  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_0  [color=blue, key=0, style=bold];
m1_255 -> m1_340  [key=0, style=solid];
m1_255 -> m1_383  [color=crimson, key=0, style=bold];
m1_255 -> m1_393  [color=crimson, key=0, style=bold];
m1_255 -> m1_422  [color=crimson, key=0, style=bold];
m1_255 -> m1_341  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_342  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_343  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_344  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_346  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_349  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_352  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_356  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_371  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_379  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_382  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_388  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_392  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_255 -> m1_395  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_396  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_397  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_255 -> m1_399  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_401  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m1_255 -> m1_405  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_409  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_414  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_415  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_255 -> m1_416  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_255 -> m1_421  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m1_340 -> m1_341  [key=0, style=solid];
m1_340 -> m1_385  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m1_340 -> m1_402  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m1_383 -> m1_384  [key=0, style=solid];
m1_393 -> m1_394  [key=0, style=solid];
m1_422 -> m1_401  [key=0, style=solid];
m1_341 -> m1_342  [key=0, style=solid];
m1_341 -> m1_367  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m1_341 -> m1_379  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_367  [color=darkseagreen4, key=1, label=history, style=dashed];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_345  [key=0, style=solid];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_424  [key=2, style=dotted];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_425  [key=2, style=dotted];
m1_346 -> m1_292  [key=2, style=dotted];
m1_346 -> m1_351  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_346 -> m1_354  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_346 -> m1_360  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_346 -> m1_361  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_346 -> m1_362  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_346 -> m1_364  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_346 -> m1_367  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_346 -> m1_395  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_346 -> m1_398  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_427  [key=2, style=dotted];
m1_349 -> m1_428  [key=2, style=dotted];
m1_349 -> m1_429  [key=2, style=dotted];
m1_349 -> m1_446  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_247  [key=2, style=dotted];
m1_352 -> m1_430  [key=2, style=dotted];
m1_352 -> m1_449  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_356 -> m1_357  [key=0, style=solid];
m1_356 -> m1_354  [key=0, style=solid];
m1_356 -> m1_431  [key=2, style=dotted];
m1_356 -> m1_432  [key=2, style=dotted];
m1_356 -> m1_356  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_371 -> m1_372  [key=0, style=solid];
m1_371 -> m1_378  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_379 -> m1_380  [key=0, style=solid];
m1_379 -> m1_384  [key=0, style=solid];
m1_379 -> m1_299  [key=2, style=dotted];
m1_379 -> m1_440  [key=2, style=dotted];
m1_379 -> m1_387  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_379 -> m1_391  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_379 -> m1_393  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_379 -> m1_394  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_382 -> m1_383  [key=0, style=solid];
m1_388 -> m1_389  [key=0, style=solid];
m1_388 -> m1_441  [key=2, style=dotted];
m1_392 -> m1_393  [key=0, style=solid];
m1_392 -> m1_285  [key=2, style=dotted];
m1_392 -> m1_314  [key=2, style=dotted];
m1_395 -> m1_396  [key=0, style=solid];
m1_395 -> m1_401  [key=0, style=solid];
m1_396 -> m1_397  [key=0, style=solid];
m1_396 -> m1_442  [key=2, style=dotted];
m1_397 -> m1_398  [key=0, style=solid];
m1_397 -> m1_314  [key=2, style=dotted];
m1_399 -> m1_400  [key=0, style=solid];
m1_399 -> m1_441  [key=2, style=dotted];
m1_401 -> m1_402  [key=0, style=solid];
m1_401 -> m1_423  [key=0, style=solid];
m1_401 -> m1_404  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_401 -> m1_408  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_401 -> m1_413  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_401 -> m1_420  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_401 -> m1_422  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
m1_405 -> m1_406  [key=0, style=solid];
m1_405 -> m1_422  [key=0, style=solid];
m1_409 -> m1_410  [key=0, style=solid];
m1_409 -> m1_408  [key=0, style=solid];
m1_409 -> m1_299  [key=2, style=dotted];
m1_414 -> m1_415  [key=0, style=solid];
m1_414 -> m1_442  [key=2, style=dotted];
m1_415 -> m1_416  [key=0, style=solid];
m1_415 -> m1_314  [key=2, style=dotted];
m1_416 -> m1_417  [key=0, style=solid];
m1_416 -> m1_441  [key=2, style=dotted];
m1_421 -> m1_422  [key=0, style=solid];
m1_421 -> m1_285  [key=2, style=dotted];
m1_421 -> m1_314  [key=2, style=dotted];
m1_385 -> m1_386  [key=0, style=solid];
m1_385 -> m1_389  [key=0, style=solid];
m1_402 -> m1_403  [key=0, style=solid];
m1_402 -> m1_405  [key=0, style=solid];
m1_367 -> m1_368  [key=0, style=solid];
m1_367 -> m1_395  [key=0, style=solid];
m1_367 -> m1_435  [key=2, style=dotted];
m1_367 -> m1_370  [color=darkseagreen4, key=1, label=slice, style=dashed];
m1_367 -> m1_372  [color=darkseagreen4, key=1, label=slice, style=dashed];
m1_367 -> m1_379  [color=darkseagreen4, key=1, label=slice, style=dashed];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_406  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m1_345 -> m1_409  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_413  [key=0, style=solid];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_365  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_347 -> m1_391  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_347 -> m1_420  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_395  [key=0, style=solid];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_360  [key=0, style=solid];
m1_354 -> m1_356  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_354 -> m1_357  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_354 -> m1_358  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_354 -> m1_359  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_364  [key=0, style=solid];
m1_360 -> m1_433  [key=2, style=dotted];
m1_360 -> m1_455  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_247  [key=2, style=dotted];
m1_361 -> m1_429  [key=2, style=dotted];
m1_361 -> m1_458  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_361 -> m1_461  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_361 -> m1_363  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_364  [key=0, style=solid];
m1_362 -> m1_247  [key=2, style=dotted];
m1_362 -> m1_464  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_364 -> m1_365  [key=0, style=solid];
m1_364 -> m1_367  [key=0, style=solid];
m1_364 -> m1_366  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_398 -> m1_399  [key=0, style=solid];
m1_398 -> m1_401  [key=0, style=solid];
m1_348 -> m1_349  [key=0, style=solid];
m1_348 -> m1_426  [key=2, style=dotted];
m1_348 -> m1_389  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m1_348 -> m1_418  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_434  [key=2, style=dotted];
m1_365 -> m1_365  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_365 -> m1_391  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_365 -> m1_420  [color=darkseagreen4, key=1, label=start, style=dashed];
m1_391 -> m1_392  [key=0, style=solid];
m1_420 -> m1_421  [key=0, style=solid];
m1_389 -> m1_390  [key=0, style=solid];
m1_389 -> m1_393  [key=0, style=solid];
m1_418 -> m1_419  [key=0, style=solid];
m1_418 -> m1_422  [key=0, style=solid];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_350  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
m1_350 -> m1_413  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
m1_413 -> m1_414  [key=0, style=solid];
m1_413 -> m1_418  [key=0, style=solid];
m1_413 -> m1_445  [key=2, style=dotted];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_429  [key=2, style=dotted];
m1_353 -> m1_452  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_353 -> m1_357  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m1_353 -> m1_358  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m1_353 -> m1_359  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_354  [key=0, style=solid];
m1_358 -> m1_359  [key=0, style=solid];
m1_359 -> m1_354  [key=0, style=solid];
m1_355 -> m1_356  [key=0, style=solid];
m1_363 -> m1_362  [key=0, style=solid];
m1_363 -> m1_363  [color=darkseagreen4, key=1, label=request, style=dashed];
m1_366 -> m1_364  [key=0, style=solid];
m1_366 -> m1_284  [key=2, style=dotted];
m1_366 -> m1_254  [key=2, style=dotted];
m1_368 -> m1_369  [key=0, style=solid];
m1_370 -> m1_371  [key=0, style=solid];
m1_370 -> m1_379  [key=0, style=solid];
m1_370 -> m1_372  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_372 -> m1_373  [key=0, style=solid];
m1_372 -> m1_374  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_372 -> m1_377  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_369 -> m1_370  [key=0, style=solid];
m1_369 -> m1_243  [key=2, style=dotted];
m1_369 -> m1_378  [color=darkseagreen4, key=1, label=paired, style=dashed];
m1_369 -> m1_379  [color=darkseagreen4, key=1, label=paired, style=dashed];
m1_378 -> m1_370  [key=0, style=solid];
m1_378 -> m1_438  [key=2, style=dotted];
m1_378 -> m1_439  [key=2, style=dotted];
m1_378 -> m1_437  [key=2, style=dotted];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_243  [key=2, style=dotted];
m1_373 -> m1_376  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_373 -> m1_377  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_373 -> m1_378  [color=darkseagreen4, key=1, label=list, style=dashed];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_376  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m1_377 -> m1_378  [key=0, style=solid];
m1_377 -> m1_437  [key=2, style=dotted];
m1_376 -> m1_378  [key=0, style=solid];
m1_376 -> m1_436  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_377  [key=0, style=solid];
m1_380 -> m1_381  [key=0, style=solid];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_367  [key=0, style=solid];
m1_387 -> m1_388  [key=0, style=solid];
m1_394 -> m1_367  [key=0, style=solid];
m1_394 -> m1_406  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m1_394 -> m1_409  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
m1_381 -> m1_382  [key=0, style=solid];
m1_381 -> m1_261  [key=2, style=dotted];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_402  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
m1_390 -> m1_391  [key=0, style=solid];
m1_390 -> m1_426  [key=2, style=dotted];
m1_390 -> m1_418  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
m1_400 -> m1_401  [key=0, style=solid];
m1_400 -> m1_254  [key=2, style=dotted];
m1_404 -> m1_405  [key=0, style=solid];
m1_408 -> m1_409  [key=0, style=solid];
m1_408 -> m1_411  [key=0, style=solid];
m1_408 -> m1_443  [key=2, style=dotted];
m1_408 -> m1_444  [key=2, style=dotted];
m1_408 -> m1_467  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_403 -> m1_404  [key=0, style=solid];
m1_407 -> m1_408  [key=0, style=solid];
m1_407 -> m1_411  [color=darkseagreen4, key=1, label=hasHistoricalData, style=dashed];
m1_411 -> m1_412  [key=0, style=solid];
m1_411 -> m1_401  [key=0, style=solid];
m1_410 -> m1_411  [key=0, style=solid];
m1_412 -> m1_413  [key=0, style=solid];
m1_417 -> m1_422  [key=0, style=solid];
m1_417 -> m1_254  [key=2, style=dotted];
m1_419 -> m1_420  [key=0, style=solid];
m1_419 -> m1_426  [key=2, style=dotted];
m1_423 -> m1_255  [color=blue, key=0, style=bold];
m1_424 -> m1_470  [key=0, style=solid];
m1_424 -> m1_471  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_424 -> m1_473  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_424 -> m1_474  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_424 -> m1_475  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_470 -> m1_471  [key=0, style=solid];
m1_470 -> m1_254  [key=2, style=dotted];
m1_471 -> m1_472  [key=0, style=solid];
m1_471 -> m1_480  [key=0, style=solid];
m1_471 -> m1_473  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_471 -> m1_478  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_471 -> m1_479  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_473 -> m1_474  [key=0, style=solid];
m1_473 -> m1_481  [key=2, style=dotted];
m1_473 -> m1_475  [color=darkseagreen4, key=1, label=historyReq, style=dashed];
m1_474 -> m1_475  [key=0, style=solid];
m1_474 -> m1_471  [key=0, style=solid];
m1_475 -> m1_476  [key=0, style=solid];
m1_475 -> m1_435  [key=2, style=dotted];
m1_475 -> m1_477  [color=darkseagreen4, key=1, label=history, style=dashed];
m1_472 -> m1_473  [key=0, style=solid];
m1_472 -> m1_471  [key=0, style=solid];
m1_478 -> m1_479  [key=0, style=solid];
m1_478 -> m1_477  [key=0, style=solid];
m1_478 -> m1_482  [key=2, style=dotted];
m1_479 -> m1_477  [key=0, style=solid];
m1_479 -> m1_483  [key=2, style=dotted];
m1_476 -> m1_477  [key=0, style=solid];
m1_476 -> m1_471  [key=0, style=solid];
m1_477 -> m1_478  [key=0, style=solid];
m1_477 -> m1_471  [key=0, style=solid];
m1_477 -> m1_479  [color=darkseagreen4, key=1, label=slice, style=dashed];
m1_480 -> m1_424  [color=blue, key=0, style=bold];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_337  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
m1_335 -> m1_338  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
m1_336 -> m1_337  [key=0, style=solid];
m1_337 -> m1_338  [key=0, style=solid];
m1_337 -> m1_339  [key=0, style=solid];
m1_338 -> m1_339  [key=0, style=solid];
m1_339 -> m1_335  [color=blue, key=0, style=bold];
m1_306 -> m1_490  [key=0, style=solid];
m1_306 -> m1_492  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m1_306 -> m1_493  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
m1_306 -> m1_496  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_490 -> m1_491  [key=0, style=solid];
m1_490 -> m1_499  [key=0, style=solid];
m1_490 -> m1_492  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_490 -> m1_502  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_490 -> m1_493  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_490 -> m1_494  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_490 -> m1_495  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_490 -> m1_496  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m1_492 -> m1_493  [key=0, style=solid];
m1_492 -> m1_490  [key=0, style=solid];
m1_492 -> m1_433  [key=2, style=dotted];
m1_492 -> m1_501  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_493 -> m1_494  [key=0, style=solid];
m1_493 -> m1_437  [key=2, style=dotted];
m1_496 -> m1_497  [key=0, style=solid];
m1_496 -> m1_500  [key=2, style=dotted];
m1_491 -> m1_492  [key=0, style=solid];
m1_491 -> m1_495  [key=0, style=solid];
m1_494 -> m1_490  [key=0, style=solid];
m1_494 -> m1_254  [key=2, style=dotted];
m1_495 -> m1_496  [key=0, style=solid];
m1_495 -> m1_254  [key=2, style=dotted];
m1_497 -> m1_498  [key=0, style=solid];
m1_497 -> m1_490  [key=0, style=solid];
m1_498 -> m1_497  [key=0, style=solid];
m1_498 -> m1_254  [key=2, style=dotted];
m1_499 -> m1_306  [color=blue, key=0, style=bold];
m1_538 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_97  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_111  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_119  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_130  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_139  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_144  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_159  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_170  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_181  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_198  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_205  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_209  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_211  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_215  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_220  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_225  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_236  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_238  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_239  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_336  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_338  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_344  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_387  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_404  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_538 -> m1_532  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
m1_539 -> m1_323  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_540 -> m1_326  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m1_541 -> m1_330  [color=darkseagreen4, key=1, label=split, style=dashed];
m1_542 -> m1_502  [color=darkseagreen4, key=1, label=delisting, style=dashed];
m2_29 -> m2_8  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.AccountEvent account", style=bold];
m2_29 -> m2_445  [key=0, style=solid];
m2_29 -> m2_449  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m2_29 -> m2_447  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m2_445 -> m2_446  [key=0, style=solid];
m2_445 -> m2_447  [color=darkseagreen4, key=1, label=delta, style=dashed];
m2_448 -> m2_449  [key=0, style=solid];
m2_448 -> m2_450  [key=0, style=solid];
m2_449 -> m2_450  [key=0, style=solid];
m2_449 -> m2_451  [key=2, style=dotted];
m2_446 -> m2_448  [key=0, style=solid];
m2_446 -> m2_447  [key=0, style=solid];
m2_447 -> m2_448  [key=0, style=solid];
m2_447 -> m2_343  [key=2, style=dotted];
m2_447 -> m2_24  [key=2, style=dotted];
m2_450 -> m2_29  [color=blue, key=0, style=bold];
m2_22 -> m2_143  [key=0, style=solid];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_92  [key=2, style=dotted];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_146  [key=2, style=dotted];
m2_145 -> m2_22  [color=blue, key=0, style=bold];
m2_204 -> m2_293  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_204 -> m2_185  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m2_204 -> m2_292  [key=0, style=solid];
m2_204 -> m2_299  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_204 -> m2_302  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_204 -> m2_310  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_204 -> m2_313  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_204 -> m2_322  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_204 -> m2_334  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_204 -> m2_339  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_296 -> m2_341  [key=2, style=dotted];
m2_296 -> m2_297  [key=0, style=solid];
m2_293 -> m2_296  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_294  [key=0, style=solid];
m2_293 -> m2_67  [key=2, style=dotted];
m2_293 -> m2_295  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_297  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_300  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_303  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_305  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_308  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_309  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_312  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_313  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_315  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_318  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_319  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_321  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_322  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_324  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_327  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_332  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_333  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_336  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_293 -> m2_338  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_294 -> m2_296  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_313  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_294 -> m2_318  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_300  [key=0, style=solid];
m2_297 -> m2_65  [key=2, style=dotted];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_303  [key=0, style=solid];
m2_300 -> m2_89  [key=2, style=dotted];
m2_305 -> m2_306  [key=0, style=solid];
m2_305 -> m2_311  [key=0, style=solid];
m2_305 -> m2_342  [key=2, style=dotted];
m2_308 -> m2_344  [key=2, style=dotted];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_343  [key=2, style=dotted];
m2_309 -> m2_310  [key=0, style=solid];
m2_309 -> m2_345  [key=2, style=dotted];
m2_309 -> m2_25  [key=2, style=dotted];
m2_314 -> m2_344  [key=2, style=dotted];
m2_314 -> m2_315  [key=0, style=solid];
m2_315 -> m2_316  [key=0, style=solid];
m2_315 -> m2_345  [key=2, style=dotted];
m2_315 -> m2_25  [key=2, style=dotted];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_326  [key=0, style=solid];
m2_318 -> m2_348  [key=2, style=dotted];
m2_318 -> m2_320  [color=darkseagreen4, key=1, label=message, style=dashed];
m2_318 -> m2_322  [color=darkseagreen4, key=1, label=message, style=dashed];
m2_323 -> m2_344  [key=2, style=dotted];
m2_323 -> m2_324  [key=0, style=solid];
m2_324 -> m2_325  [key=0, style=solid];
m2_324 -> m2_345  [key=2, style=dotted];
m2_324 -> m2_25  [key=2, style=dotted];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_331  [key=0, style=solid];
m2_327 -> m2_350  [key=2, style=dotted];
m2_335 -> m2_344  [key=2, style=dotted];
m2_335 -> m2_336  [key=0, style=solid];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_345  [key=2, style=dotted];
m2_336 -> m2_25  [key=2, style=dotted];
m2_295 -> m2_296  [key=0, style=solid];
m2_292 -> m2_293  [key=0, style=solid];
m2_303 -> m2_304  [key=0, style=solid];
m2_303 -> m2_68  [key=2, style=dotted];
m2_312 -> m2_313  [key=0, style=solid];
m2_313 -> m2_314  [key=0, style=solid];
m2_313 -> m2_346  [key=2, style=dotted];
m2_313 -> m2_347  [key=2, style=dotted];
m2_313 -> m2_343  [key=2, style=dotted];
m2_313 -> m2_98  [key=2, style=dotted];
m2_313 -> m2_316  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_319 -> m2_320  [key=0, style=solid];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_349  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_322 -> m2_98  [key=2, style=dotted];
m2_322 -> m2_325  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_332 -> m2_333  [key=0, style=solid];
m2_333 -> m2_334  [key=0, style=solid];
m2_338 -> m2_339  [key=0, style=solid];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_124  [key=2, style=dotted];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_124  [key=2, style=dotted];
m2_304 -> m2_305  [key=0, style=solid];
m2_306 -> m2_307  [key=0, style=solid];
m2_311 -> m2_312  [key=0, style=solid];
m2_311 -> m2_317  [key=0, style=solid];
m2_307 -> m2_308  [key=0, style=solid];
m2_307 -> m2_97  [key=2, style=dotted];
m2_310 -> m2_340  [key=0, style=solid];
m2_310 -> m2_98  [key=2, style=dotted];
m2_316 -> m2_340  [key=0, style=solid];
m2_317 -> m2_318  [key=0, style=solid];
m2_326 -> m2_327  [key=0, style=solid];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_322  [key=0, style=solid];
m2_325 -> m2_340  [key=0, style=solid];
m2_328 -> m2_329  [key=0, style=solid];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_338  [key=0, style=solid];
m2_334 -> m2_335  [key=0, style=solid];
m2_334 -> m2_98  [key=2, style=dotted];
m2_334 -> m2_337  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_337 -> m2_340  [key=0, style=solid];
m2_299 -> m2_340  [key=0, style=solid];
m2_299 -> m2_98  [key=2, style=dotted];
m2_302 -> m2_340  [key=0, style=solid];
m2_302 -> m2_93  [key=2, style=dotted];
m2_339 -> m2_61  [key=2, style=dotted];
m2_339 -> m2_340  [key=0, style=solid];
m2_329 -> m2_97  [key=2, style=dotted];
m2_329 -> m2_330  [key=0, style=solid];
m2_330 -> m2_331  [key=0, style=solid];
m2_340 -> m2_204  [color=blue, key=0, style=bold];
m2_127 -> m2_128  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_130  [key=2, style=dotted];
m2_128 -> m2_131  [key=2, style=dotted];
m2_128 -> m2_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_129 -> m2_127  [color=blue, key=0, style=bold];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_0 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_14  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_16  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_7 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_7 -> m2_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_7 -> m2_22  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.Order order", style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_11  [key=0, style=solid];
m2_2 -> m2_12  [key=2, style=dotted];
m2_11 -> m2_0  [color=blue, key=0, style=bold];
m2_383 -> m2_351  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m2_383 -> m2_387  [key=0, style=solid];
m2_387 -> m2_388  [key=0, style=solid];
m2_388 -> m2_383  [color=blue, key=0, style=bold];
m2_42 -> m2_46  [key=0, style=solid];
m2_42 -> m2_48  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_42 -> m2_51  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_42 -> m2_58  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_42 -> m2_30  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.SubmitOrderRequest request", style=bold];
m2_42 -> m2_47  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_42 -> m2_52  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_61  [key=2, style=dotted];
m2_46 -> m2_62  [key=2, style=dotted];
m2_46 -> m2_50  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_64  [key=2, style=dotted];
m2_48 -> m2_57  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_48 -> m2_59  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_65  [key=2, style=dotted];
m2_51 -> m2_59  [key=0, style=solid];
m2_51 -> m2_66  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_65  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_63  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_52  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_68  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_58  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_52 -> m2_67  [key=2, style=dotted];
m2_52 -> m2_57  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_52 -> m2_54  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_52 -> m2_55  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_52 -> m2_56  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_54 -> m2_55  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_60 -> m2_42  [color=blue, key=0, style=bold];
m2_277 -> m2_278  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_22  [key=2, style=dotted];
m2_16 -> m2_18  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_25  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=2, style=dotted];
m2_278 -> m2_279  [key=0, style=solid];
m2_278 -> m2_281  [key=0, style=solid];
m2_278 -> m2_237  [key=2, style=dotted];
m2_279 -> m2_280  [key=0, style=solid];
m2_281 -> m2_282  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_24  [key=2, style=dotted];
m2_13 -> m2_16  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_13 -> m2_20  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_13 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_13 -> m2_14  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_19  [color=darkseagreen4, key=1, label=brokerIds, style=dashed];
m2_17 -> m2_19  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_23  [key=2, style=dotted];
m2_14 -> m2_20  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_21 -> m2_13  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_28 -> m2_26  [color=blue, key=0, style=bold];
m2_132 -> m2_133  [key=0, style=solid];
m2_160 -> m2_161  [key=0, style=solid];
m2_172 -> m2_173  [key=0, style=solid];
m2_175 -> m2_176  [key=0, style=solid];
m2_178 -> m2_179  [key=0, style=solid];
m2_181 -> m2_182  [key=0, style=solid];
m2_241 -> m2_242  [key=0, style=solid];
m2_244 -> m2_245  [key=0, style=solid];
m2_280 -> m2_283  [key=0, style=solid];
m2_280 -> m2_24  [key=2, style=dotted];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_24  [key=2, style=dotted];
m2_134 -> m2_132  [color=blue, key=0, style=bold];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_133  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.OrderTicket>", style=dashed];
m2_161 -> m2_161  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_163  [key=2, style=dotted];
m2_162 -> m2_160  [color=blue, key=0, style=bold];
m2_174 -> m2_172  [color=blue, key=0, style=bold];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_173  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m2_177 -> m2_175  [color=blue, key=0, style=bold];
m2_176 -> m2_159  [key=2, style=dotted];
m2_176 -> m2_177  [key=0, style=solid];
m2_180 -> m2_178  [color=blue, key=0, style=bold];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_179  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m2_183 -> m2_181  [color=blue, key=0, style=bold];
m2_182 -> m2_159  [key=2, style=dotted];
m2_182 -> m2_183  [key=0, style=solid];
m2_245 -> m2_245  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m2_245 -> m2_246  [key=0, style=solid];
m2_243 -> m2_241  [color=blue, key=0, style=bold];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_242  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m2_246 -> m2_244  [color=blue, key=0, style=bold];
m2_283 -> m2_277  [color=blue, key=0, style=bold];
m2_184 -> m2_185  [key=0, style=solid];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_197  [key=0, style=solid];
m2_185 -> m2_200  [key=0, style=solid];
m2_185 -> m2_203  [key=2, style=dotted];
m2_185 -> m2_187  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_185 -> m2_189  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_185 -> m2_191  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_185 -> m2_193  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_185 -> m2_195  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_189 -> m2_195  [key=0, style=solid];
m2_189 -> m2_204  [key=2, style=dotted];
m2_191 -> m2_195  [key=0, style=solid];
m2_191 -> m2_205  [key=2, style=dotted];
m2_193 -> m2_195  [key=0, style=solid];
m2_193 -> m2_206  [key=2, style=dotted];
m2_196 -> m2_185  [key=0, style=solid];
m2_196 -> m2_207  [key=2, style=dotted];
m2_199 -> m2_200  [key=0, style=solid];
m2_201 -> m2_202  [key=0, style=solid];
m2_186 -> m2_204  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.OrderResponse response", style=bold];
m2_186 -> m2_205  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.OrderResponse response", style=bold];
m2_186 -> m2_206  [color=darkorchid, key=3, label="Local variable QuantConnect.Orders.OrderResponse response", style=bold];
m2_186 -> m2_187  [key=0, style=solid];
m2_197 -> m2_198  [key=0, style=solid];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_24  [key=2, style=dotted];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_190  [key=0, style=solid];
m2_187 -> m2_192  [key=0, style=solid];
m2_187 -> m2_194  [key=0, style=solid];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_63  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_190 -> m2_191  [key=0, style=solid];
m2_192 -> m2_193  [key=0, style=solid];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_97  [key=2, style=dotted];
m2_194 -> m2_200  [key=0, style=solid];
m2_194 -> m2_45  [key=2, style=dotted];
m2_202 -> m2_184  [color=blue, key=0, style=bold];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_35  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_30 -> m2_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_30 -> m2_39  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_30 -> m2_32  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_30 -> m2_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderRequest", style=dashed];
m2_30 -> m2_42  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Process", style=bold];
m2_30 -> m2_43  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Process", style=bold];
m2_30 -> m2_44  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.OrderTicket Process", style=bold];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=0, style=solid];
m2_35 -> m2_41  [key=0, style=solid];
m2_35 -> m2_42  [key=2, style=dotted];
m2_37 -> m2_41  [key=0, style=solid];
m2_37 -> m2_43  [key=2, style=dotted];
m2_39 -> m2_41  [key=0, style=solid];
m2_39 -> m2_44  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_24  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_36  [key=0, style=solid];
m2_33 -> m2_38  [key=0, style=solid];
m2_33 -> m2_40  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_45  [key=2, style=dotted];
m2_41 -> m2_30  [color=blue, key=0, style=bold];
m2_209 -> m2_210  [key=0, style=solid];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_214  [key=0, style=solid];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_213  [key=0, style=solid];
m2_211 -> m2_235  [key=2, style=dotted];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_217  [key=0, style=solid];
m2_216 -> m2_217  [key=0, style=solid];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_222  [key=0, style=solid];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_220  [key=0, style=solid];
m2_218 -> m2_222  [key=0, style=solid];
m2_218 -> m2_237  [key=2, style=dotted];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_222  [key=0, style=solid];
m2_219 -> m2_238  [key=2, style=dotted];
m2_223 -> m2_224  [key=0, style=solid];
m2_223 -> m2_226  [key=0, style=solid];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_239  [key=2, style=dotted];
m2_226 -> m2_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_228 -> m2_229  [key=0, style=solid];
m2_228 -> m2_233  [key=0, style=solid];
m2_228 -> m2_131  [key=2, style=dotted];
m2_228 -> m2_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_228 -> m2_231  [color=darkseagreen4, key=1, label=item, style=dashed];
m2_228 -> m2_232  [color=darkseagreen4, key=1, label=item, style=dashed];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_240  [key=2, style=dotted];
m2_232 -> m2_228  [key=0, style=solid];
m2_232 -> m2_240  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_236  [key=2, style=dotted];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_124  [key=2, style=dotted];
m2_213 -> m2_234  [key=0, style=solid];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_222  [color=darkorchid, key=3, label="Local variable int maxOrdersToKeep", style=bold];
m2_222 -> m2_227  [color=darkseagreen4, key=1, label=maxOrdersToKeep, style=dashed];
m2_220 -> m2_221  [key=0, style=solid];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_236  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_245  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
m2_229 -> m2_230  [key=0, style=solid];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_236  [key=2, style=dotted];
m2_230 -> m2_231  [key=0, style=solid];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_97  [key=2, style=dotted];
m2_225 -> m2_234  [key=0, style=solid];
m2_234 -> m2_209  [color=blue, key=0, style=bold];
m2_207 -> m2_208  [key=0, style=solid];
m2_208 -> m2_207  [color=blue, key=0, style=bold];
m2_206 -> m2_185  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.CancelOrderRequest request", style=bold];
m2_206 -> m2_391  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_206 -> m2_389  [key=0, style=solid];
m2_206 -> m2_392  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_206 -> m2_393  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_206 -> m2_395  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_206 -> m2_406  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_206 -> m2_408  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_206 -> m2_409  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_206 -> m2_410  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_391 -> m2_392  [key=0, style=solid];
m2_391 -> m2_394  [key=0, style=solid];
m2_391 -> m2_89  [key=2, style=dotted];
m2_391 -> m2_395  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_391 -> m2_396  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_391 -> m2_398  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_391 -> m2_403  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_391 -> m2_405  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_391 -> m2_407  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_391 -> m2_409  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_398 -> m2_399  [key=0, style=solid];
m2_398 -> m2_402  [key=0, style=solid];
m2_398 -> m2_412  [key=2, style=dotted];
m2_404 -> m2_344  [key=2, style=dotted];
m2_404 -> m2_405  [key=0, style=solid];
m2_405 -> m2_406  [key=0, style=solid];
m2_405 -> m2_345  [key=2, style=dotted];
m2_405 -> m2_25  [key=2, style=dotted];
m2_390 -> m2_391  [key=0, style=solid];
m2_392 -> m2_393  [key=0, style=solid];
m2_392 -> m2_124  [key=2, style=dotted];
m2_394 -> m2_395  [key=0, style=solid];
m2_394 -> m2_396  [key=0, style=solid];
m2_394 -> m2_94  [key=2, style=dotted];
m2_395 -> m2_411  [key=0, style=solid];
m2_395 -> m2_95  [key=2, style=dotted];
m2_396 -> m2_397  [key=0, style=solid];
m2_396 -> m2_68  [key=2, style=dotted];
m2_403 -> m2_404  [key=0, style=solid];
m2_403 -> m2_406  [color=darkseagreen4, key=1, label=message, style=dashed];
m2_407 -> m2_408  [key=0, style=solid];
m2_409 -> m2_410  [key=0, style=solid];
m2_397 -> m2_398  [key=0, style=solid];
m2_399 -> m2_400  [key=0, style=solid];
m2_402 -> m2_403  [key=0, style=solid];
m2_402 -> m2_407  [key=0, style=solid];
m2_406 -> m2_411  [key=0, style=solid];
m2_406 -> m2_98  [key=2, style=dotted];
m2_410 -> m2_61  [key=2, style=dotted];
m2_410 -> m2_411  [key=0, style=solid];
m2_389 -> m2_390  [key=0, style=solid];
m2_393 -> m2_411  [key=0, style=solid];
m2_393 -> m2_93  [key=2, style=dotted];
m2_408 -> m2_409  [key=0, style=solid];
m2_408 -> m2_410  [key=0, style=solid];
m2_400 -> m2_97  [key=2, style=dotted];
m2_400 -> m2_401  [key=0, style=solid];
m2_401 -> m2_402  [key=0, style=solid];
m2_411 -> m2_206  [color=blue, key=0, style=bold];
m2_92 -> m2_147  [key=0, style=solid];
m2_92 -> m2_150  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_92 -> m2_22  [color=darkorchid, key=3, label="Parameter variable int orderId", style=bold];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_149  [key=0, style=solid];
m2_150 -> m2_150  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_89  [key=2, style=dotted];
m2_148 -> m2_151  [key=0, style=solid];
m2_149 -> m2_150  [key=0, style=solid];
m2_151 -> m2_92  [color=blue, key=0, style=bold];
m2_238 -> m2_247  [key=0, style=solid];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_249  [key=0, style=solid];
m2_247 -> m2_266  [key=2, style=dotted];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_254  [key=0, style=solid];
m2_251 -> m2_268  [key=2, style=dotted];
m2_251 -> m2_256  [color=darkseagreen4, key=1, label=balances, style=dashed];
m2_258 -> m2_259  [key=0, style=solid];
m2_258 -> m2_262  [key=0, style=solid];
m2_258 -> m2_269  [key=2, style=dotted];
m2_258 -> m2_260  [color=darkseagreen4, key=1, label=cash, style=dashed];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_262  [key=0, style=solid];
m2_260 -> m2_270  [key=2, style=dotted];
m2_260 -> m2_271  [key=2, style=dotted];
m2_262 -> m2_256  [key=0, style=solid];
m2_262 -> m2_274  [key=2, style=dotted];
m2_263 -> m2_264  [key=0, style=solid];
m2_264 -> m2_265  [key=0, style=solid];
m2_264 -> m2_237  [key=2, style=dotted];
m2_264 -> m2_275  [key=2, style=dotted];
m2_264 -> m2_276  [key=2, style=dotted];
m2_264 -> m2_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_248 -> m2_264  [key=0, style=solid];
m2_248 -> m2_265  [key=0, style=solid];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_24  [key=2, style=dotted];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> m2_267  [key=2, style=dotted];
m2_252 -> m2_253  [key=0, style=solid];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_256  [key=0, style=solid];
m2_256 -> m2_258  [color=darkseagreen4, key=1, label=balance, style=dashed];
m2_256 -> m2_262  [color=darkseagreen4, key=1, label=balance, style=dashed];
m2_256 -> m2_263  [key=0, style=solid];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_259  [color=darkseagreen4, key=1, label=balance, style=dashed];
m2_256 -> m2_261  [color=darkseagreen4, key=1, label=balance, style=dashed];
m2_257 -> m2_258  [key=0, style=solid];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_261  [color=darkseagreen4, key=1, label=delta, style=dashed];
m2_261 -> m2_262  [key=0, style=solid];
m2_261 -> m2_272  [key=2, style=dotted];
m2_261 -> m2_273  [key=2, style=dotted];
m2_255 -> m2_264  [key=0, style=solid];
m2_255 -> m2_265  [key=0, style=solid];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_97  [key=2, style=dotted];
m2_265 -> m2_238  [color=blue, key=0, style=bold];
m2_284 -> m2_285  [key=0, style=solid];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_288  [key=0, style=solid];
m2_286 -> m2_290  [key=2, style=dotted];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_291  [key=2, style=dotted];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_237  [key=2, style=dotted];
m2_285 -> m2_287  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_287  [color=darkseagreen4, key=1, label=timeout, style=dashed];
m2_287 -> m2_124  [key=2, style=dotted];
m2_289 -> m2_284  [color=blue, key=0, style=bold];
m2_25 -> m2_7  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderEvent fill", style=bold];
m2_25 -> m2_413  [key=0, style=solid];
m2_25 -> m2_420  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_25 -> m2_421  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_25 -> m2_423  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_25 -> m2_428  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_25 -> m2_433  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_25 -> m2_434  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_25 -> m2_415  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_25 -> m2_417  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_25 -> m2_418  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_25 -> m2_429  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_25 -> m2_431  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_25 -> m2_432  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m2_413 -> m2_414  [key=0, style=solid];
m2_413 -> m2_92  [key=2, style=dotted];
m2_413 -> m2_417  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_413 -> m2_426  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_413 -> m2_430  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_419 -> m2_420  [key=0, style=solid];
m2_419 -> m2_439  [key=2, style=dotted];
m2_420 -> m2_421  [key=0, style=solid];
m2_420 -> m2_422  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_421 -> m2_422  [key=0, style=solid];
m2_421 -> m2_440  [key=2, style=dotted];
m2_423 -> m2_424  [key=0, style=solid];
m2_423 -> m2_427  [key=0, style=solid];
m2_423 -> m2_441  [key=2, style=dotted];
m2_426 -> m2_344  [key=2, style=dotted];
m2_426 -> m2_427  [key=0, style=solid];
m2_426 -> m2_343  [key=2, style=dotted];
m2_428 -> m2_429  [key=0, style=solid];
m2_428 -> m2_431  [key=0, style=solid];
m2_428 -> m2_89  [key=2, style=dotted];
m2_428 -> m2_430  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_443  [key=2, style=dotted];
m2_434 -> m2_435  [key=0, style=solid];
m2_434 -> m2_438  [key=0, style=solid];
m2_434 -> m2_444  [key=2, style=dotted];
m2_436 -> m2_344  [key=2, style=dotted];
m2_436 -> m2_437  [key=0, style=solid];
m2_437 -> m2_438  [key=0, style=solid];
m2_414 -> m2_415  [key=0, style=solid];
m2_414 -> m2_417  [key=0, style=solid];
m2_417 -> m2_418  [key=0, style=solid];
m2_430 -> m2_432  [key=0, style=solid];
m2_418 -> m2_419  [key=0, style=solid];
m2_418 -> m2_427  [key=0, style=solid];
m2_422 -> m2_423  [key=0, style=solid];
m2_424 -> m2_425  [key=0, style=solid];
m2_427 -> m2_428  [key=0, style=solid];
m2_425 -> m2_426  [key=0, style=solid];
m2_425 -> m2_97  [key=2, style=dotted];
m2_429 -> m2_430  [key=0, style=solid];
m2_429 -> m2_442  [key=2, style=dotted];
m2_431 -> m2_432  [key=0, style=solid];
m2_431 -> m2_124  [key=2, style=dotted];
m2_432 -> m2_433  [key=0, style=solid];
m2_432 -> m2_438  [key=0, style=solid];
m2_435 -> m2_436  [key=0, style=solid];
m2_415 -> m2_416  [key=0, style=solid];
m2_415 -> m2_124  [key=2, style=dotted];
m2_416 -> m2_438  [key=0, style=solid];
m2_438 -> m2_25  [color=blue, key=0, style=bold];
m2_43 -> m2_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_43 -> m2_71  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_43 -> m2_73  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_43 -> m2_83  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_43 -> m2_30  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.UpdateOrderRequest request", style=bold];
m2_43 -> m2_69  [key=0, style=solid];
m2_43 -> m2_72  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_43 -> m2_75  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_43 -> m2_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_43 -> m2_78  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_43 -> m2_79  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_43 -> m2_81  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_43 -> m2_82  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_43 -> m2_86  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_72  [key=0, style=solid];
m2_70 -> m2_89  [key=2, style=dotted];
m2_70 -> m2_87  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_71 -> m2_88  [key=0, style=solid];
m2_71 -> m2_90  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_92  [key=2, style=dotted];
m2_73 -> m2_76  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_73 -> m2_77  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_82  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_87  [key=0, style=solid];
m2_83 -> m2_66  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_91  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_76  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_78  [key=0, style=solid];
m2_76 -> m2_94  [key=2, style=dotted];
m2_77 -> m2_87  [key=0, style=solid];
m2_77 -> m2_84  [key=0, style=solid];
m2_77 -> m2_95  [key=2, style=dotted];
m2_77 -> m2_63  [key=2, style=dotted];
m2_78 -> m2_80  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_81 -> m2_62  [key=2, style=dotted];
m2_81 -> m2_87  [key=0, style=solid];
m2_81 -> m2_84  [key=0, style=solid];
m2_81 -> m2_63  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_61  [key=2, style=dotted];
m2_82 -> m2_63  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_75 -> m2_87  [key=0, style=solid];
m2_75 -> m2_84  [key=0, style=solid];
m2_75 -> m2_93  [key=2, style=dotted];
m2_75 -> m2_63  [key=2, style=dotted];
m2_79 -> m2_87  [key=0, style=solid];
m2_79 -> m2_84  [key=0, style=solid];
m2_79 -> m2_96  [key=2, style=dotted];
m2_79 -> m2_63  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_98  [key=2, style=dotted];
m2_86 -> m2_63  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_97  [key=2, style=dotted];
m2_88 -> m2_43  [color=blue, key=0, style=bold];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_168  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Orders.Order, bool>", style=dashed];
m2_164 -> m2_167  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Orders.Order, bool>", style=dashed];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_167  [key=0, style=solid];
m2_168 -> m2_170  [key=0, style=solid];
m2_168 -> m2_130  [key=2, style=dotted];
m2_168 -> m2_131  [key=2, style=dotted];
m2_168 -> m2_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_168 -> m2_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_130  [key=2, style=dotted];
m2_169 -> m2_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_169 -> m2_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_166 -> m2_170  [key=0, style=solid];
m2_166 -> m2_171  [key=2, style=dotted];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_169  [key=0, style=solid];
m2_170 -> m2_164  [color=blue, key=0, style=bold];
m2_205 -> m2_351  [key=0, style=solid];
m2_205 -> m2_185  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.UpdateOrderRequest request", style=bold];
m2_205 -> m2_353  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_205 -> m2_361  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_205 -> m2_354  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_205 -> m2_355  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_205 -> m2_357  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_205 -> m2_365  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_205 -> m2_369  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_205 -> m2_377  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_205 -> m2_380  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_205 -> m2_381  [color=darkseagreen4, key=1, label="QuantConnect.Orders.UpdateOrderRequest", style=dashed];
m2_359 -> m2_341  [key=2, style=dotted];
m2_359 -> m2_360  [key=0, style=solid];
m2_351 -> m2_352  [key=0, style=solid];
m2_358 -> m2_359  [key=0, style=solid];
m2_353 -> m2_359  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_353 -> m2_358  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_353 -> m2_354  [key=0, style=solid];
m2_353 -> m2_356  [key=0, style=solid];
m2_353 -> m2_89  [key=2, style=dotted];
m2_353 -> m2_357  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_353 -> m2_361  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_353 -> m2_362  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_353 -> m2_364  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_353 -> m2_365  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_353 -> m2_367  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_353 -> m2_369  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_353 -> m2_370  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_353 -> m2_372  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_353 -> m2_379  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_356 -> m2_358  [key=0, style=solid];
m2_356 -> m2_357  [key=0, style=solid];
m2_356 -> m2_383  [key=2, style=dotted];
m2_361 -> m2_362  [key=0, style=solid];
m2_361 -> m2_369  [key=0, style=solid];
m2_361 -> m2_384  [key=2, style=dotted];
m2_361 -> m2_363  [color=darkseagreen4, key=1, label=message, style=dashed];
m2_361 -> m2_365  [color=darkseagreen4, key=1, label=message, style=dashed];
m2_366 -> m2_344  [key=2, style=dotted];
m2_366 -> m2_367  [key=0, style=solid];
m2_367 -> m2_368  [key=0, style=solid];
m2_367 -> m2_345  [key=2, style=dotted];
m2_367 -> m2_25  [key=2, style=dotted];
m2_372 -> m2_373  [key=0, style=solid];
m2_372 -> m2_376  [key=0, style=solid];
m2_372 -> m2_386  [key=2, style=dotted];
m2_378 -> m2_344  [key=2, style=dotted];
m2_378 -> m2_379  [key=0, style=solid];
m2_379 -> m2_380  [key=0, style=solid];
m2_379 -> m2_345  [key=2, style=dotted];
m2_379 -> m2_25  [key=2, style=dotted];
m2_360 -> m2_361  [key=0, style=solid];
m2_352 -> m2_353  [key=0, style=solid];
m2_354 -> m2_355  [key=0, style=solid];
m2_354 -> m2_124  [key=2, style=dotted];
m2_357 -> m2_382  [key=0, style=solid];
m2_357 -> m2_95  [key=2, style=dotted];
m2_362 -> m2_363  [key=0, style=solid];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_349  [key=2, style=dotted];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_98  [key=2, style=dotted];
m2_365 -> m2_368  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_369 -> m2_370  [key=0, style=solid];
m2_369 -> m2_385  [key=2, style=dotted];
m2_370 -> m2_371  [key=0, style=solid];
m2_370 -> m2_68  [key=2, style=dotted];
m2_363 -> m2_364  [key=0, style=solid];
m2_363 -> m2_365  [key=0, style=solid];
m2_368 -> m2_382  [key=0, style=solid];
m2_371 -> m2_372  [key=0, style=solid];
m2_373 -> m2_374  [key=0, style=solid];
m2_376 -> m2_377  [key=0, style=solid];
m2_376 -> m2_381  [key=0, style=solid];
m2_377 -> m2_378  [key=0, style=solid];
m2_377 -> m2_380  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m2_380 -> m2_382  [key=0, style=solid];
m2_380 -> m2_98  [key=2, style=dotted];
m2_355 -> m2_382  [key=0, style=solid];
m2_355 -> m2_93  [key=2, style=dotted];
m2_381 -> m2_61  [key=2, style=dotted];
m2_381 -> m2_382  [key=0, style=solid];
m2_374 -> m2_97  [key=2, style=dotted];
m2_374 -> m2_375  [key=0, style=solid];
m2_375 -> m2_376  [key=0, style=solid];
m2_382 -> m2_205  [color=blue, key=0, style=bold];
m2_341 -> m2_452  [color=green, key=0, style=solid];
m2_341 -> m2_456  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m2_341 -> m2_454  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_341 -> m2_458  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_341 -> m2_459  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m2_341 -> m2_293  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m2_341 -> m2_351  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m2_341 -> m2_294  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m2_341 -> m2_358  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m2_452 -> m2_453  [color=green, key=0, style=solid];
m2_452 -> m2_454  [color=green, key=1, label=orderLotMod, style=dashed];
m2_453 -> m2_454  [key=0, style=solid];
m2_453 -> m2_459  [key=0, style=solid];
m2_454 -> m2_455  [key=0, style=solid];
m2_456 -> m2_457  [color=green, key=0, style=solid];
m2_456 -> m2_461  [color=green, key=2, style=dotted];
m2_456 -> m2_344  [color=green, key=2, style=dotted];
m2_455 -> m2_456  [color=green, key=0, style=solid];
m2_455 -> m2_458  [key=0, style=solid];
m2_457 -> m2_458  [key=0, style=solid];
m2_458 -> m2_460  [key=0, style=solid];
m2_459 -> m2_460  [key=0, style=solid];
m2_460 -> m2_341  [color=blue, key=0, style=bold];
m2_152 -> m2_147  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.Order GetOrderByBrokerageId", style=bold];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_155  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_152 -> m2_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_155  [key=0, style=solid];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_158  [key=2, style=dotted];
m2_155 -> m2_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_154 -> m2_157  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_159  [key=2, style=dotted];
m2_157 -> m2_152  [color=blue, key=0, style=bold];
m2_138 -> m2_140  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_138 -> m2_139  [key=0, style=solid];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_89  [key=2, style=dotted];
m2_139 -> m2_140  [key=0, style=solid];
m2_141 -> m2_142  [key=0, style=solid];
m2_142 -> m2_138  [color=blue, key=0, style=bold];
m2_44 -> m2_100  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_102  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_106  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_118  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_30  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.CancelOrderRequest request", style=bold];
m2_44 -> m2_99  [key=0, style=solid];
m2_44 -> m2_103  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_104  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_107  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_108  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_111  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_114  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_116  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_117  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_44 -> m2_121  [color=darkseagreen4, key=1, label="QuantConnect.Orders.CancelOrderRequest", style=dashed];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_103  [key=0, style=solid];
m2_100 -> m2_89  [key=2, style=dotted];
m2_100 -> m2_105  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_100 -> m2_122  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m2_102 -> m2_123  [key=0, style=solid];
m2_102 -> m2_125  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_92  [key=2, style=dotted];
m2_106 -> m2_108  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_106 -> m2_109  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_106 -> m2_112  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_106 -> m2_113  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_106 -> m2_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_117  [key=0, style=solid];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_122  [key=0, style=solid];
m2_118 -> m2_66  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_124  [key=2, style=dotted];
m2_103 -> m2_106  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_126  [key=2, style=dotted];
m2_105 -> m2_123  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_109  [key=0, style=solid];
m2_108 -> m2_109  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_112  [key=0, style=solid];
m2_112 -> m2_115  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_94  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_124  [key=2, style=dotted];
m2_114 -> m2_122  [key=0, style=solid];
m2_114 -> m2_119  [key=0, style=solid];
m2_114 -> m2_95  [key=2, style=dotted];
m2_114 -> m2_63  [key=2, style=dotted];
m2_116 -> m2_62  [key=2, style=dotted];
m2_116 -> m2_122  [key=0, style=solid];
m2_116 -> m2_119  [key=0, style=solid];
m2_116 -> m2_63  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_61  [key=2, style=dotted];
m2_117 -> m2_63  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_98  [key=2, style=dotted];
m2_104 -> m2_63  [key=2, style=dotted];
m2_111 -> m2_122  [key=0, style=solid];
m2_111 -> m2_119  [key=0, style=solid];
m2_111 -> m2_93  [key=2, style=dotted];
m2_111 -> m2_63  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_98  [key=2, style=dotted];
m2_121 -> m2_63  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_124  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_97  [key=2, style=dotted];
m2_123 -> m2_44  [color=blue, key=0, style=bold];
m2_462 -> m2_456  [color=green, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_51  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_53  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_100  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_102  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_106  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_115  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_128  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_140  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_143  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_147  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_150  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_153  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_155  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_165  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_168  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_169  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_185  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_189  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_191  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_193  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_196  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_199  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_201  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_210  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_211  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_215  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_217  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_218  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_219  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_223  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_228  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_231  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_232  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_247  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_251  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_258  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_260  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_262  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_263  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_264  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_278  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_279  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_281  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_286  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_288  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_294  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_296  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_297  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_300  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_305  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_308  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_309  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_314  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_315  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_318  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_323  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_324  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_327  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_335  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_336  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_353  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_356  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_358  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_359  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_361  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_366  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_367  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_372  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_378  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_379  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_391  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_398  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_404  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_405  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_413  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_419  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_420  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_421  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_423  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_426  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_428  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_433  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_434  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_436  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_437  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_445  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_448  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_449  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_455  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_462 -> m2_457  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m2_463 -> m2_14  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_464 -> m2_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_465 -> m2_245  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_2  [color=blue, key=0, style=bold];
m4_12 -> m4_104  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_14  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_12 -> m4_16  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_12 -> m4_18  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_12 -> m4_24  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_12 -> m4_26  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_12 -> m4_28  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_12 -> m4_30  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_12 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_12 -> m4_35  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_12 -> m4_37  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_12 -> m4_39  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_106  [key=2, style=dotted];
m4_104 -> m4_99  [color=blue, key=0, style=bold];
m4_105 -> m4_12  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_3 -> m4_13  [key=2, style=dotted];
m4_3 -> m4_14  [key=2, style=dotted];
m4_3 -> m4_15  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_3 -> m4_6  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_3 -> m4_7  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_3 -> m4_8  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_3 -> m4_9  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_1 -> m4_11  [key=2, style=dotted];
m4_1 -> m4_3  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_9  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_12  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_4  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_2 -> m4_5  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_2 -> m4_6  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_2 -> m4_7  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_2 -> m4_8  [color=darkseagreen4, key=1, label=config, style=dashed];
m4_9 -> m4_16  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_4 -> m4_16  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_16  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_16  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_8  [key=2, style=dotted];
m4_7 -> m4_16  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_5  [color=blue, key=0, style=bold];
m4_8 -> m4_16  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid];
m4_10 -> m4_0  [color=blue, key=0, style=bold];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_65  [key=2, style=dotted];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_16  [key=2, style=dotted];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_80  [key=2, style=dotted];
m4_78 -> m4_16  [key=2, style=dotted];
m4_79 -> m4_77  [color=blue, key=0, style=bold];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_16  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_16  [key=2, style=dotted];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_76  [key=2, style=dotted];
m4_74 -> m4_16  [key=2, style=dotted];
m4_75 -> m4_73  [color=blue, key=0, style=bold];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_16  [key=2, style=dotted];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_67  [key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_48  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_41  [key=2, style=dotted];
m4_13 -> m4_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_13 -> m4_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_13 -> m4_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_13 -> m4_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_13 -> m4_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_13 -> m4_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_13 -> m4_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_13 -> m4_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=0, style=solid];
m4_14 -> m4_42  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_18  [key=0, style=solid];
m4_16 -> m4_42  [key=2, style=dotted];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_20  [key=0, style=solid];
m4_18 -> m4_42  [key=2, style=dotted];
m4_18 -> m4_23  [color=green, key=1, label=security, style=dashed];
m4_18 -> m4_38  [key=2, style=dotted];
m4_18 -> m4_21  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_22  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_24  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_25  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_26  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_27  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_28  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_29  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_30  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_31  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_32  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_33  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_34  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_35  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_18 -> m4_36  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_27  [key=0, style=solid];
m4_24 -> m4_29  [key=0, style=solid];
m4_24 -> m4_31  [key=0, style=solid];
m4_24 -> m4_40  [key=2, style=dotted];
m4_26 -> m4_40  [key=0, style=solid];
m4_26 -> m4_46  [key=2, style=dotted];
m4_26 -> m4_5  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_28 -> m4_40  [key=0, style=solid];
m4_28 -> m4_47  [key=2, style=dotted];
m4_28 -> m4_5  [key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid];
m4_30 -> m4_40  [key=0, style=solid];
m4_30 -> m4_48  [key=2, style=dotted];
m4_30 -> m4_5  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_36  [key=0, style=solid];
m4_33 -> m4_38  [key=0, style=solid];
m4_33 -> m4_39  [key=2, style=dotted];
m4_35 -> m4_40  [key=0, style=solid];
m4_35 -> m4_46  [key=2, style=dotted];
m4_35 -> m4_39  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_37 -> m4_40  [key=0, style=solid];
m4_37 -> m4_47  [key=2, style=dotted];
m4_37 -> m4_17  [color=blue, key=0, style=bold];
m4_23 -> m4_24  [color=green, key=0, style=solid];
m4_23 -> m4_32  [key=0, style=solid];
m4_23 -> m4_45  [key=2, style=dotted];
m4_23 -> m4_39  [color=green, key=2, style=dotted];
m4_15 -> m4_40  [key=0, style=solid];
m4_15 -> m4_43  [key=2, style=dotted];
m4_17 -> m4_40  [key=0, style=solid];
m4_17 -> m4_43  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_19 -> m4_40  [key=0, style=solid];
m4_19 -> m4_43  [key=2, style=dotted];
m4_19 -> m4_39  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_42  [key=2, style=dotted];
m4_20 -> m4_44  [key=2, style=dotted];
m4_20 -> m4_22  [color=darkseagreen4, key=1, label=currentEstimatedRam, style=dashed];
m4_20 -> m4_40  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=0, style=solid];
m4_21 -> m4_39  [key=2, style=dotted];
m4_22 -> m4_40  [key=0, style=solid];
m4_22 -> m4_43  [key=2, style=dotted];
m4_22 -> m4_23  [color=green, key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_49  [key=2, style=dotted];
m4_32 -> m4_40  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_39  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_39  [key=2, style=dotted];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_39  [key=2, style=dotted];
m4_31 -> m4_40  [key=0, style=solid];
m4_31 -> m4_43  [key=2, style=dotted];
m4_31 -> m4_39  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_40  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_40  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_102  [key=0, style=solid];
m4_40 -> m4_12  [color=blue, key=0, style=bold];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_38  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_44  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_45  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_46  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_47  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_48  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_49  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_50  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_51  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_52  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_53  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_54  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_55  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_56  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_57  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_58  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_59  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_60  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_61  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_62  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_63  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_42 -> m4_91  [key=0, style=solid];
m4_42 -> m4_92  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_65  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_16  [key=2, style=dotted];
m4_44 -> m4_106  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_16  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_66  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_66  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_66  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_67  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_65  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_16  [key=2, style=dotted];
m4_51 -> m4_8  [key=2, style=dotted];
m4_51 -> m4_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>", style=dashed];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_16  [key=2, style=dotted];
m4_52 -> m4_8  [key=2, style=dotted];
m4_52 -> m4_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>", style=dashed];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_66  [key=2, style=dotted];
m4_53 -> m4_50  [color=blue, key=0, style=bold];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_66  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_67  [key=2, style=dotted];
m4_55 -> m4_57  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_66  [key=2, style=dotted];
m4_56 -> m4_54  [color=blue, key=0, style=bold];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_16  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_16  [key=2, style=dotted];
m4_59 -> m4_61  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_67  [key=2, style=dotted];
m4_60 -> m4_58  [color=blue, key=0, style=bold];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_67  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_67  [key=2, style=dotted];
m4_63 -> m4_45  [key=2, style=dotted];
m4_64 -> m4_41  [color=blue, key=0, style=bold];
m4_64 -> m4_62  [color=blue, key=0, style=bold];
m4_68 -> m4_69  [key=0, style=solid];
m4_69 -> m4_38  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_71  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_72  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_73  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_74  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_75  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_76  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_77  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_78  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_79  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_80  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_81  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_82  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_69 -> m4_83  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_85  [key=2, style=dotted];
m4_70 -> n527  [key=2, style=dotted];
m4_70 -> m4_72  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_16  [key=2, style=dotted];
m4_71 -> m4_69  [color=blue, key=0, style=bold];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_16  [key=2, style=dotted];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_87  [key=2, style=dotted];
m4_76 -> n527  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_87  [key=2, style=dotted];
m4_80 -> n527  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_16  [key=2, style=dotted];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_16  [key=2, style=dotted];
m4_82 -> m4_84  [key=2, style=dotted];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_16  [key=2, style=dotted];
m4_83 -> m4_81  [color=blue, key=0, style=bold];
m4_84 -> m4_68  [color=blue, key=0, style=bold];
m4_87 -> m4_85  [color=blue, key=0, style=bold];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_101  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_99 -> m4_102  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_96  [key=2, style=dotted];
m4_101 -> m4_99  [color=blue, key=0, style=bold];
m4_101 -> m4_102  [key=0, style=solid];
m4_67 -> m4_65  [color=blue, key=0, style=bold];
m4_65 -> m4_66  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_68  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_86 -> m4_87  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_16  [key=2, style=dotted];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_95  [key=0, style=solid];
m4_92 -> m4_97  [key=2, style=dotted];
m4_92 -> m4_92  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_92 -> m4_96  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_16  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_88  [color=blue, key=0, style=bold];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_98  [key=2, style=dotted];
m4_94 -> m4_40  [key=2, style=dotted];
m4_94 -> m4_97  [key=2, style=dotted];
m4_94 -> m4_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_96 -> m4_42  [color=blue, key=0, style=bold];
m4_106 -> m4_107  [key=0, style=solid];
m4_107 -> m4_44  [color=blue, key=0, style=bold];
m4_107 -> m4_18  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityTests", style=dashed];
m4_107 -> m4_42  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityTests", style=dashed];
m4_107 -> m4_69  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityTests", style=dashed];
m4_107 -> m4_89  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityTests", style=dashed];
m4_11 -> m4_9  [color=blue, key=0, style=bold];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_13  [key=2, style=dotted];
m4_102 -> m4_11  [key=2, style=dotted];
m4_102 -> m4_12  [key=2, style=dotted];
m4_102 -> m4_14  [key=2, style=dotted];
m4_102 -> m4_15  [key=2, style=dotted];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_105  [key=2, style=dotted];
m4_103 -> m4_38  [color=blue, key=0, style=bold];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_110  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m4_108 -> m4_111  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_108 -> m4_112  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m4_108 -> m4_100  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_113  [key=0, style=solid];
m4_109 -> m4_115  [key=0, style=solid];
m4_109 -> m4_111  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_109 -> m4_112  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [key=0, style=solid];
m4_111 -> m4_109  [key=0, style=solid];
m4_111 -> m4_116  [key=2, style=dotted];
m4_112 -> m4_109  [key=0, style=solid];
m4_112 -> m4_116  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_98  [key=2, style=dotted];
m4_115 -> m4_108  [color=blue, key=0, style=bold];
m4_88 -> m4_89  [key=0, style=solid];
m4_89 -> m4_38  [key=2, style=dotted];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_91  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_89 -> m4_92  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_89 -> m4_93  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_89 -> m4_94  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_89 -> m4_100  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_89 -> m4_84  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_96  [key=2, style=dotted];
m4_90 -> m4_88  [color=blue, key=0, style=bold];
m4_117 -> m4_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_14  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_37  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_39  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_51  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_52  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_55  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_63  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_66  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_70  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_74  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_78  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_82  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_86  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_89  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_92  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_100  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_101  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_102  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_103  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_106  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m4_117 -> m4_109  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m5_19 -> m5_20  [color=green, key=0, style=solid];
m5_20 -> m5_21  [color=green, key=0, style=solid];
m5_20 -> m5_35  [color=green, key=2, style=dotted];
m5_20 -> m5_36  [color=green, key=2, style=dotted];
m5_20 -> m5_22  [color=green, key=1, label=quantity, style=dashed];
m5_20 -> m5_23  [color=green, key=1, label=quantity, style=dashed];
m5_20 -> m5_25  [color=green, key=1, label=quantity, style=dashed];
m5_20 -> m5_27  [color=green, key=1, label=quantity, style=dashed];
m5_20 -> m5_29  [color=green, key=1, label=quantity, style=dashed];
m5_21 -> m5_22  [color=green, key=0, style=solid];
m5_21 -> m5_23  [color=green, key=0, style=solid];
m5_22 -> m5_34  [color=green, key=0, style=solid];
m5_22 -> m5_37  [color=green, key=2, style=dotted];
m5_23 -> m5_24  [color=green, key=0, style=solid];
m5_23 -> m5_25  [color=green, key=0, style=solid];
m5_25 -> m5_26  [color=green, key=0, style=solid];
m5_25 -> m5_27  [color=green, key=0, style=solid];
m5_27 -> m5_28  [color=green, key=0, style=solid];
m5_27 -> m5_29  [color=green, key=0, style=solid];
m5_29 -> m5_30  [color=green, key=0, style=solid];
m5_29 -> m5_34  [color=green, key=0, style=solid];
m5_24 -> m5_34  [color=green, key=0, style=solid];
m5_24 -> m5_38  [color=green, key=2, style=dotted];
m5_26 -> m5_34  [color=green, key=0, style=solid];
m5_26 -> m5_38  [color=green, key=2, style=dotted];
m5_28 -> m5_34  [color=green, key=0, style=solid];
m5_28 -> m5_38  [color=green, key=2, style=dotted];
m5_30 -> m5_31  [color=green, key=0, style=solid];
m5_30 -> m5_38  [color=green, key=2, style=dotted];
m5_31 -> m5_32  [color=green, key=0, style=solid];
m5_31 -> m5_39  [color=green, key=2, style=dotted];
m5_32 -> m5_33  [color=green, key=0, style=solid];
m5_32 -> m5_39  [color=green, key=2, style=dotted];
m5_33 -> m5_34  [color=green, key=0, style=solid];
m5_33 -> m5_40  [color=green, key=2, style=dotted];
m5_34 -> m5_19  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_1 -> m5_11  [color=green, key=2, style=dotted];
m5_2 -> m5_3  [color=green, key=0, style=solid];
m5_2 -> m5_12  [color=green, key=2, style=dotted];
m5_3 -> m5_4  [color=green, key=0, style=solid];
m5_3 -> n481  [color=green, key=2, style=dotted];
m5_4 -> m5_5  [color=green, key=0, style=solid];
m5_4 -> m5_14  [color=green, key=2, style=dotted];
m5_5 -> m5_6  [color=green, key=0, style=solid];
m5_5 -> m5_15  [color=green, key=2, style=dotted];
m5_5 -> m5_9  [color=green, key=1, label=security, style=dashed];
m5_6 -> m5_7  [color=green, key=0, style=solid];
m5_6 -> m5_16  [color=green, key=2, style=dotted];
m5_6 -> m5_8  [color=green, key=1, label=con, style=dashed];
m5_9 -> m5_10  [color=green, key=0, style=solid];
m5_9 -> m5_18  [color=green, key=2, style=dotted];
m5_7 -> m5_8  [color=green, key=0, style=solid];
m5_7 -> m5_17  [color=green, key=2, style=dotted];
m5_8 -> m5_9  [color=green, key=0, style=solid];
m5_10 -> m5_0  [color=blue, key=0, style=bold];
m5_41 -> m5_1  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_2  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_3  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_4  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_5  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_9  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_7  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_8  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_20  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_21  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_22  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_23  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_25  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_27  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_29  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_24  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_26  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_28  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_30  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_31  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_32  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m5_41 -> m5_33  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m7_43 -> m7_44  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_10  [key=2, style=dotted];
m7_44 -> m7_11  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_12  [key=2, style=dotted];
m7_45 -> m7_47  [color=darkseagreen4, key=1, label=manager, style=dashed];
m7_45 -> m7_48  [color=darkseagreen4, key=1, label=manager, style=dashed];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_26  [key=2, style=dotted];
m7_46 -> m7_27  [key=2, style=dotted];
m7_46 -> m7_28  [key=2, style=dotted];
m7_46 -> m7_29  [key=2, style=dotted];
m7_46 -> m7_30  [key=2, style=dotted];
m7_46 -> m7_51  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_46 -> m7_48  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_51  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m7_47 -> m7_53  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m7_48 -> m7_49  [key=0, style=solid];
m7_49 -> m7_43  [color=blue, key=0, style=bold];
m7_28 -> m7_218  [key=0, style=solid];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_220  [key=2, style=dotted];
m7_219 -> m7_28  [color=blue, key=0, style=bold];
m7_190 -> m7_191  [key=0, style=solid];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> m7_134  [key=2, style=dotted];
m7_191 -> m7_152  [key=2, style=dotted];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> m7_199  [key=2, style=dotted];
m7_192 -> m7_203  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_192 -> m7_194  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_192 -> m7_207  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_192 -> m7_195  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_192 -> m7_210  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_192 -> m7_196  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_192 -> m7_213  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_192 -> m7_197  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_192 -> m7_216  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_193 -> m7_194  [key=0, style=solid];
m7_193 -> m7_200  [key=2, style=dotted];
m7_193 -> m7_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_194 -> m7_195  [key=0, style=solid];
m7_194 -> m7_201  [key=2, style=dotted];
m7_194 -> m7_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_195 -> m7_196  [key=0, style=solid];
m7_195 -> m7_201  [key=2, style=dotted];
m7_195 -> m7_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> m7_201  [key=2, style=dotted];
m7_196 -> m7_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_197 -> m7_198  [key=0, style=solid];
m7_197 -> m7_201  [key=2, style=dotted];
m7_197 -> m7_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_198 -> m7_190  [color=blue, key=0, style=bold];
m7_215 -> m7_216  [key=0, style=solid];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_35  [key=0, style=solid];
m7_33 -> m7_38  [key=2, style=dotted];
m7_33 -> m7_39  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_41  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_35  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m7_34 -> m7_37  [key=0, style=solid];
m7_34 -> m7_40  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_42  [key=2, style=dotted];
m7_37 -> m7_32  [color=blue, key=0, style=bold];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_53  [key=0, style=solid];
m7_51 -> m7_38  [key=2, style=dotted];
m7_51 -> m7_39  [key=2, style=dotted];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_41  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_53  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m7_52 -> m7_55  [key=0, style=solid];
m7_52 -> m7_40  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_42  [key=2, style=dotted];
m7_55 -> m7_50  [color=blue, key=0, style=bold];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_68  [key=0, style=solid];
m7_66 -> m7_38  [key=2, style=dotted];
m7_66 -> m7_39  [key=2, style=dotted];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_41  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_68  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m7_67 -> m7_70  [key=0, style=solid];
m7_67 -> m7_40  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_42  [key=2, style=dotted];
m7_70 -> m7_65  [color=blue, key=0, style=bold];
m7_158 -> m7_159  [key=0, style=solid];
m7_161 -> m7_162  [key=0, style=solid];
m7_164 -> m7_165  [key=0, style=solid];
m7_159 -> m7_160  [key=0, style=solid];
m7_160 -> m7_158  [color=blue, key=0, style=bold];
m7_162 -> m7_163  [key=0, style=solid];
m7_163 -> m7_161  [color=blue, key=0, style=bold];
m7_165 -> m7_166  [key=0, style=solid];
m7_166 -> m7_164  [color=blue, key=0, style=bold];
m7_181 -> m7_182  [key=0, style=solid];
m7_184 -> m7_185  [key=0, style=solid];
m7_187 -> m7_188  [key=0, style=solid];
m7_182 -> m7_183  [key=0, style=solid];
m7_183 -> m7_181  [color=blue, key=0, style=bold];
m7_185 -> m7_186  [key=0, style=solid];
m7_186 -> m7_184  [color=blue, key=0, style=bold];
m7_188 -> m7_189  [key=0, style=solid];
m7_189 -> m7_187  [color=blue, key=0, style=bold];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_205  [key=2, style=dotted];
m7_207 -> m7_208  [key=0, style=solid];
m7_207 -> m7_205  [key=2, style=dotted];
m7_210 -> m7_211  [key=0, style=solid];
m7_210 -> m7_205  [key=2, style=dotted];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_205  [key=2, style=dotted];
m7_216 -> m7_217  [key=0, style=solid];
m7_216 -> m7_205  [key=2, style=dotted];
m7_202 -> m7_203  [key=0, style=solid];
m7_206 -> m7_207  [key=0, style=solid];
m7_209 -> m7_210  [key=0, style=solid];
m7_212 -> m7_213  [key=0, style=solid];
m7_204 -> m7_202  [color=blue, key=0, style=bold];
m7_208 -> m7_206  [color=blue, key=0, style=bold];
m7_211 -> m7_209  [color=blue, key=0, style=bold];
m7_214 -> m7_212  [color=blue, key=0, style=bold];
m7_217 -> m7_215  [color=blue, key=0, style=bold];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_87  [key=2, style=dotted];
m7_173 -> m7_175  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m7_173 -> m7_176  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m7_173 -> m7_177  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m7_173 -> m7_178  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m7_167 -> m7_168  [key=0, style=solid];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_11  [key=2, style=dotted];
m7_168 -> m7_180  [key=2, style=dotted];
m7_169 -> m7_170  [key=0, style=solid];
m7_169 -> m7_153  [key=2, style=dotted];
m7_169 -> m7_171  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m7_169 -> m7_173  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m7_169 -> m7_174  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> m7_136  [key=2, style=dotted];
m7_170 -> m7_173  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_154  [key=2, style=dotted];
m7_171 -> m7_173  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_155  [key=2, style=dotted];
m7_174 -> m7_156  [key=2, style=dotted];
m7_172 -> m7_173  [key=0, style=solid];
m7_172 -> m7_86  [key=2, style=dotted];
m7_175 -> m7_176  [key=0, style=solid];
m7_175 -> m7_88  [key=2, style=dotted];
m7_175 -> n10  [key=2, style=dotted];
m7_176 -> m7_177  [key=0, style=solid];
m7_176 -> m7_157  [key=2, style=dotted];
m7_176 -> m7_41  [key=2, style=dotted];
m7_176 -> m7_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_177 -> m7_178  [key=0, style=solid];
m7_177 -> m7_157  [key=2, style=dotted];
m7_177 -> m7_41  [key=2, style=dotted];
m7_177 -> m7_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> m7_157  [key=2, style=dotted];
m7_178 -> m7_41  [key=2, style=dotted];
m7_178 -> m7_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_179 -> m7_167  [color=blue, key=0, style=bold];
m7_19 -> m7_20  [key=0, style=solid];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_10  [key=2, style=dotted];
m7_20 -> m7_11  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_12  [key=2, style=dotted];
m7_21 -> m7_23  [color=darkseagreen4, key=1, label=manager, style=dashed];
m7_21 -> m7_24  [color=darkseagreen4, key=1, label=manager, style=dashed];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_26  [key=2, style=dotted];
m7_22 -> m7_27  [key=2, style=dotted];
m7_22 -> m7_28  [key=2, style=dotted];
m7_22 -> m7_29  [key=2, style=dotted];
m7_22 -> m7_30  [key=2, style=dotted];
m7_22 -> m7_33  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_22 -> m7_24  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_33  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m7_23 -> m7_35  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_31  [key=2, style=dotted];
m7_25 -> m7_19  [color=blue, key=0, style=bold];
m7_119 -> m7_120  [key=0, style=solid];
m7_119 -> m7_87  [key=2, style=dotted];
m7_119 -> m7_121  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m7_119 -> m7_122  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m7_113 -> m7_114  [key=0, style=solid];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_82  [key=2, style=dotted];
m7_114 -> m7_117  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m7_114 -> m7_119  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_83  [key=2, style=dotted];
m7_115 -> m7_119  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_85  [key=2, style=dotted];
m7_117 -> m7_119  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m7_116 -> m7_117  [key=0, style=solid];
m7_118 -> m7_119  [key=0, style=solid];
m7_118 -> m7_86  [key=2, style=dotted];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_88  [key=2, style=dotted];
m7_120 -> n10  [key=2, style=dotted];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_90  [key=2, style=dotted];
m7_121 -> n10  [key=2, style=dotted];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_90  [key=2, style=dotted];
m7_122 -> n10  [key=2, style=dotted];
m7_123 -> m7_113  [color=blue, key=0, style=bold];
m7_129 -> m7_130  [key=0, style=solid];
m7_129 -> m7_87  [key=2, style=dotted];
m7_129 -> m7_131  [color=darkseagreen4, key=1, label=equity, style=dashed];
m7_129 -> m7_132  [color=darkseagreen4, key=1, label=equity, style=dashed];
m7_124 -> m7_125  [key=0, style=solid];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_134  [key=2, style=dotted];
m7_125 -> m7_135  [key=2, style=dotted];
m7_125 -> m7_127  [color=darkseagreen4, key=1, label=equitySymbol, style=dashed];
m7_125 -> m7_129  [color=darkseagreen4, key=1, label=equitySymbol, style=dashed];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_136  [key=2, style=dotted];
m7_126 -> m7_129  [color=darkseagreen4, key=1, label=equityMarketHoursDbEntry, style=dashed];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_85  [key=2, style=dotted];
m7_127 -> m7_129  [color=darkseagreen4, key=1, label=equitySymbolProperties, style=dashed];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_86  [key=2, style=dotted];
m7_130 -> m7_131  [key=0, style=solid];
m7_130 -> m7_88  [key=2, style=dotted];
m7_130 -> n10  [key=2, style=dotted];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_90  [key=2, style=dotted];
m7_131 -> n10  [key=2, style=dotted];
m7_132 -> m7_133  [key=0, style=solid];
m7_132 -> m7_90  [key=2, style=dotted];
m7_132 -> n10  [key=2, style=dotted];
m7_133 -> m7_124  [color=blue, key=0, style=bold];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_90  [key=2, style=dotted];
m7_99 -> n10  [key=2, style=dotted];
m7_91 -> m7_92  [key=0, style=solid];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_82  [key=2, style=dotted];
m7_92 -> m7_95  [color=darkseagreen4, key=1, label=optionSymbol, style=dashed];
m7_92 -> m7_97  [color=darkseagreen4, key=1, label=optionSymbol, style=dashed];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_83  [key=2, style=dotted];
m7_93 -> m7_97  [color=darkseagreen4, key=1, label=optionMarketHoursDbEntry, style=dashed];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_85  [key=2, style=dotted];
m7_95 -> m7_97  [color=darkseagreen4, key=1, label=optionSymbolProperties, style=dashed];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_87  [key=2, style=dotted];
m7_97 -> m7_99  [color=darkseagreen4, key=1, label=option, style=dashed];
m7_97 -> m7_100  [color=darkseagreen4, key=1, label=option, style=dashed];
m7_94 -> m7_95  [key=0, style=solid];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_86  [key=2, style=dotted];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_88  [key=2, style=dotted];
m7_98 -> n10  [key=2, style=dotted];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_90  [key=2, style=dotted];
m7_100 -> n10  [key=2, style=dotted];
m7_101 -> m7_91  [color=blue, key=0, style=bold];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_87  [key=2, style=dotted];
m7_108 -> m7_110  [color=darkseagreen4, key=1, label=equity, style=dashed];
m7_108 -> m7_111  [color=darkseagreen4, key=1, label=equity, style=dashed];
m7_102 -> m7_103  [key=0, style=solid];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_82  [key=2, style=dotted];
m7_103 -> m7_106  [color=darkseagreen4, key=1, label=equitySymbol, style=dashed];
m7_103 -> m7_108  [color=darkseagreen4, key=1, label=equitySymbol, style=dashed];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_83  [key=2, style=dotted];
m7_104 -> m7_108  [color=darkseagreen4, key=1, label=equityMarketHoursDbEntry, style=dashed];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_85  [key=2, style=dotted];
m7_106 -> m7_108  [color=darkseagreen4, key=1, label=equitySymbolProperties, style=dashed];
m7_105 -> m7_106  [key=0, style=solid];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_86  [key=2, style=dotted];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_88  [key=2, style=dotted];
m7_109 -> n10  [key=2, style=dotted];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_90  [key=2, style=dotted];
m7_110 -> n10  [key=2, style=dotted];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> m7_90  [key=2, style=dotted];
m7_111 -> n10  [key=2, style=dotted];
m7_112 -> m7_102  [color=blue, key=0, style=bold];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_87  [key=2, style=dotted];
m7_144 -> m7_146  [color=darkseagreen4, key=1, label=optionSubscriptions, style=dashed];
m7_144 -> m7_147  [color=darkseagreen4, key=1, label=optionSubscriptions, style=dashed];
m7_144 -> m7_148  [color=darkseagreen4, key=1, label=optionSubscriptions, style=dashed];
m7_144 -> m7_149  [color=darkseagreen4, key=1, label=optionSubscriptions, style=dashed];
m7_137 -> m7_138  [key=0, style=solid];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_11  [key=2, style=dotted];
m7_138 -> m7_151  [key=2, style=dotted];
m7_139 -> m7_140  [key=0, style=solid];
m7_139 -> m7_11  [key=2, style=dotted];
m7_139 -> m7_152  [key=2, style=dotted];
m7_140 -> m7_141  [key=0, style=solid];
m7_140 -> m7_153  [key=2, style=dotted];
m7_140 -> m7_142  [color=darkseagreen4, key=1, label=optionSymbol, style=dashed];
m7_140 -> m7_144  [color=darkseagreen4, key=1, label=optionSymbol, style=dashed];
m7_140 -> m7_145  [color=darkseagreen4, key=1, label=optionSymbol, style=dashed];
m7_141 -> m7_142  [key=0, style=solid];
m7_141 -> m7_136  [key=2, style=dotted];
m7_141 -> m7_144  [color=darkseagreen4, key=1, label=optionMarketHoursDbEntry, style=dashed];
m7_142 -> m7_143  [key=0, style=solid];
m7_142 -> m7_154  [key=2, style=dotted];
m7_142 -> m7_144  [color=darkseagreen4, key=1, label=optionSymbolProperties, style=dashed];
m7_145 -> m7_146  [key=0, style=solid];
m7_145 -> m7_155  [key=2, style=dotted];
m7_145 -> m7_156  [key=2, style=dotted];
m7_143 -> m7_144  [key=0, style=solid];
m7_143 -> m7_86  [key=2, style=dotted];
m7_146 -> m7_147  [key=0, style=solid];
m7_146 -> m7_88  [key=2, style=dotted];
m7_146 -> n10  [key=2, style=dotted];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_157  [key=2, style=dotted];
m7_147 -> m7_41  [key=2, style=dotted];
m7_147 -> m7_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_157  [key=2, style=dotted];
m7_148 -> m7_41  [key=2, style=dotted];
m7_148 -> m7_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_149 -> m7_150  [key=0, style=solid];
m7_149 -> m7_157  [key=2, style=dotted];
m7_149 -> m7_41  [key=2, style=dotted];
m7_149 -> m7_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_150 -> m7_137  [color=blue, key=0, style=bold];
m7_56 -> m7_57  [key=0, style=solid];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_10  [key=2, style=dotted];
m7_57 -> m7_11  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_12  [key=2, style=dotted];
m7_58 -> m7_60  [color=darkseagreen4, key=1, label=manager, style=dashed];
m7_58 -> m7_61  [color=darkseagreen4, key=1, label=manager, style=dashed];
m7_58 -> m7_62  [color=darkseagreen4, key=1, label=manager, style=dashed];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_26  [key=2, style=dotted];
m7_59 -> m7_27  [key=2, style=dotted];
m7_59 -> m7_28  [key=2, style=dotted];
m7_59 -> m7_29  [key=2, style=dotted];
m7_59 -> m7_30  [key=2, style=dotted];
m7_59 -> m7_61  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_59 -> m7_66  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_59 -> m7_62  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_31  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_66  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m7_61 -> m7_68  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_64  [key=2, style=dotted];
m7_63 -> m7_56  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_10  [key=2, style=dotted];
m7_1 -> m7_11  [key=2, style=dotted];
m7_1 -> m7_5  [color=darkseagreen4, key=1, label=timeKeeper, style=dashed];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_12  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_15  [key=2, style=dotted];
m7_5 -> m7_16  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_13  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_14  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_17  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_18  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_0  [color=blue, key=0, style=bold];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_87  [key=2, style=dotted];
m7_77 -> m7_79  [color=darkseagreen4, key=1, label=forex, style=dashed];
m7_77 -> m7_80  [color=darkseagreen4, key=1, label=forex, style=dashed];
m7_71 -> m7_72  [key=0, style=solid];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_82  [key=2, style=dotted];
m7_72 -> m7_74  [color=darkseagreen4, key=1, label=forexSymbol, style=dashed];
m7_72 -> m7_75  [color=darkseagreen4, key=1, label=forexSymbol, style=dashed];
m7_72 -> m7_77  [color=darkseagreen4, key=1, label=forexSymbol, style=dashed];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_83  [key=2, style=dotted];
m7_73 -> m7_77  [color=darkseagreen4, key=1, label=forexMarketHoursDbEntry, style=dashed];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_84  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_85  [key=2, style=dotted];
m7_75 -> m7_77  [color=darkseagreen4, key=1, label=forexSymbolProperties, style=dashed];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_86  [key=2, style=dotted];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_88  [key=2, style=dotted];
m7_78 -> n10  [key=2, style=dotted];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_90  [key=2, style=dotted];
m7_79 -> n10  [key=2, style=dotted];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_90  [key=2, style=dotted];
m7_80 -> n10  [key=2, style=dotted];
m7_81 -> m7_71  [color=blue, key=0, style=bold];
m7_221 -> m7_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_4  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_22  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_46  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_59  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_73  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_75  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_77  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_93  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_95  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_97  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_104  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_106  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_108  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_115  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_117  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_119  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_126  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_127  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_129  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_141  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_142  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_144  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_170  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_171  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_221 -> m7_173  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityManagerTests", style=dashed];
m7_222 -> m7_33  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_223 -> m7_51  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_224 -> m7_66  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_225 -> m7_203  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_225 -> m7_207  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_225 -> m7_210  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_225 -> m7_213  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m7_225 -> m7_216  [color=darkseagreen4, key=1, label=subscriptionDataConfigList, style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m9_0 -> m9_4  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m9_0 -> m9_5  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_7  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_2  [key=0, style=solid];
m9_3 -> m9_8  [key=2, style=dotted];
m9_4 -> m9_6  [key=0, style=solid];
m9_4 -> m9_9  [key=2, style=dotted];
m9_4 -> m9_10  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_5  [key=0, style=solid];
m9_2 -> m9_4  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m9_6 -> m9_0  [color=blue, key=0, style=bold];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_15  [color=crimson, key=0, style=bold];
m9_11 -> m9_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_7  [key=2, style=dotted];
m9_15 -> m9_14  [key=0, style=solid];
m9_15 -> m9_18  [key=2, style=dotted];
m9_15 -> m9_15  [color=darkorchid, key=3, label="Field variable bool EnableOrderUpdateLogging", style=bold];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_17  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [key=0, style=solid];
m9_16 -> m9_11  [color=blue, key=0, style=bold];
m9_19 -> m9_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper", style=dashed];
m9_19 -> m9_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper", style=dashed];
m10_356 -> m10_357  [key=0, style=solid];
m10_356 -> m10_361  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_358 -> m10_359  [key=0, style=solid];
m10_358 -> m10_227  [key=2, style=dotted];
m10_360 -> m10_361  [key=0, style=solid];
m10_363 -> m10_364  [key=0, style=solid];
m10_363 -> m10_227  [key=2, style=dotted];
m10_357 -> m10_358  [key=0, style=solid];
m10_357 -> m10_360  [key=0, style=solid];
m10_361 -> m10_362  [key=0, style=solid];
m10_361 -> m10_366  [key=2, style=dotted];
m10_361 -> m10_363  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_361 -> m10_364  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_359 -> m10_365  [key=0, style=solid];
m10_362 -> m10_363  [key=0, style=solid];
m10_362 -> m10_364  [key=0, style=solid];
m10_364 -> m10_365  [key=0, style=solid];
m10_365 -> n9  [color=blue, key=0, style=bold];
m10_122 -> m10_126  [key=0, style=solid];
m10_122 -> m10_127  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m10_126 -> m10_127  [key=0, style=solid];
m10_127 -> m10_128  [key=0, style=solid];
m10_127 -> m10_68  [key=2, style=dotted];
m10_127 -> m10_69  [key=2, style=dotted];
m10_127 -> m10_130  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_127 -> m10_131  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_71  [key=2, style=dotted];
m10_128 -> m10_130  [color=darkseagreen4, key=1, label=response, style=dashed];
m10_130 -> m10_132  [key=0, style=solid];
m10_130 -> m10_72  [key=2, style=dotted];
m10_131 -> m10_132  [key=0, style=solid];
m10_131 -> m10_73  [key=2, style=dotted];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_131  [key=0, style=solid];
m10_132 -> m10_122  [color=blue, key=0, style=bold];
m10_164 -> m10_165  [key=0, style=solid];
m10_165 -> m10_166  [key=0, style=solid];
m10_165 -> m10_3  [key=2, style=dotted];
m10_165 -> m10_163  [key=2, style=dotted];
m10_166 -> m10_164  [color=blue, key=0, style=bold];
m10_17 -> m10_18  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_3  [key=2, style=dotted];
m10_18 -> m10_4  [key=2, style=dotted];
m10_19 -> m10_17  [color=blue, key=0, style=bold];
m10_19 -> m10_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m10_19 -> m10_20  [key=0, style=solid];
m10_324 -> m10_325  [key=0, style=solid];
m10_325 -> m10_326  [key=0, style=solid];
m10_325 -> m10_323  [key=2, style=dotted];
m10_326 -> m10_324  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [color=green, key=0, style=solid];
m10_1 -> m10_2  [color=green, key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_1 -> m10_4  [key=2, style=dotted];
m10_1 -> m10_11  [color=green, key=2, style=dotted];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_2 -> m10_3  [color=green, key=0, style=solid];
m10_2 -> m10_12  [color=green, key=2, style=dotted];
m10_169 -> m10_170  [key=0, style=solid];
m10_169 -> m10_171  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_169 -> m10_172  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_169 -> m10_173  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_169 -> m10_174  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_169 -> m10_219  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_169 -> m10_176  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_169 -> m10_181  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_169 -> m10_184  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_169 -> m10_187  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_169 -> m10_188  [color=red, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_169 -> m10_189  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_169 -> m10_190  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_169 -> m10_194  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_169 -> m10_197  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_170 -> m10_171  [key=0, style=solid];
m10_170 -> m10_202  [key=2, style=dotted];
m10_170 -> m10_182  [color=darkseagreen4, key=1, label=orders, style=dashed];
m10_170 -> m10_185  [color=darkseagreen4, key=1, label=orders, style=dashed];
m10_170 -> m10_195  [color=darkseagreen4, key=1, label=orders, style=dashed];
m10_170 -> m10_198  [color=darkseagreen4, key=1, label=orders, style=dashed];
m10_170 -> m10_200  [color=darkseagreen4, key=1, label=orders, style=dashed];
m10_171 -> m10_172  [key=0, style=solid];
m10_171 -> m10_203  [key=2, style=dotted];
m10_171 -> m10_181  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m10_171 -> m10_184  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m10_171 -> m10_194  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m10_171 -> m10_197  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m10_172 -> m10_173  [key=0, style=solid];
m10_172 -> m10_187  [key=0, style=solid];
m10_173 -> m10_174  [key=0, style=solid];
m10_173 -> m10_187  [key=0, style=solid];
m10_173 -> m10_219  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m10_173 -> m10_176  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m10_173 -> m10_179  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m10_173 -> m10_181  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m10_173 -> m10_184  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m10_173 -> m10_186  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m10_174 -> m10_175  [key=0, style=solid];
m10_174 -> m10_204  [key=2, style=dotted];
m10_174 -> m10_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_174 -> m10_178  [color=darkseagreen4, key=1, label=optionSeq, style=dashed];
m10_176 -> m10_177  [key=0, style=solid];
m10_176 -> m10_206  [key=2, style=dotted];
m10_176 -> m10_207  [key=2, style=dotted];
m10_176 -> m10_208  [key=2, style=dotted];
m10_176 -> m10_209  [key=2, style=dotted];
m10_176 -> m10_210  [key=2, style=dotted];
m10_181 -> m10_182  [key=0, style=solid];
m10_181 -> m10_213  [key=2, style=dotted];
m10_184 -> m10_185  [key=0, style=solid];
m10_184 -> m10_215  [key=2, style=dotted];
m10_187 -> m10_188  [color=red, key=0, style=solid];
m10_187 -> m10_200  [key=0, style=solid];
m10_188 -> m10_189  [color=red, key=0, style=solid];
m10_188 -> m10_200  [color=red, key=0, style=solid];
m10_188 -> m10_192  [color=red, key=1, label=underlyingLeg, style=dashed];
m10_188 -> m10_194  [color=red, key=1, label=underlyingLeg, style=dashed];
m10_188 -> m10_197  [color=red, key=1, label=underlyingLeg, style=dashed];
m10_188 -> m10_199  [color=red, key=1, label=underlyingLeg, style=dashed];
m10_189 -> m10_190  [key=0, style=solid];
m10_189 -> m10_192  [key=0, style=solid];
m10_189 -> m10_216  [key=2, style=dotted];
m10_190 -> m10_191  [key=0, style=solid];
m10_190 -> m10_206  [key=2, style=dotted];
m10_190 -> m10_217  [key=2, style=dotted];
m10_194 -> m10_195  [key=0, style=solid];
m10_194 -> m10_41  [key=2, style=dotted];
m10_197 -> m10_198  [key=0, style=solid];
m10_197 -> m10_105  [key=2, style=dotted];
m10_182 -> m10_173  [key=0, style=solid];
m10_182 -> m10_214  [key=2, style=dotted];
m10_185 -> m10_173  [key=0, style=solid];
m10_185 -> m10_214  [key=2, style=dotted];
m10_195 -> m10_188  [color=red, key=0, style=solid];
m10_195 -> m10_214  [key=2, style=dotted];
m10_198 -> m10_188  [color=red, key=0, style=solid];
m10_198 -> m10_214  [key=2, style=dotted];
m10_200 -> m10_201  [key=0, style=solid];
m10_179 -> m10_180  [key=0, style=solid];
m10_179 -> m10_183  [key=0, style=solid];
m10_179 -> m10_186  [key=0, style=solid];
m10_186 -> m10_201  [key=0, style=solid];
m10_186 -> m10_211  [key=2, style=dotted];
m10_186 -> m10_207  [key=2, style=dotted];
m10_175 -> m10_176  [key=0, style=solid];
m10_175 -> m10_178  [key=0, style=solid];
m10_175 -> m10_205  [key=2, style=dotted];
m10_178 -> m10_179  [key=0, style=solid];
m10_178 -> m10_212  [key=2, style=dotted];
m10_178 -> m10_181  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_178 -> m10_184  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_177 -> m10_201  [key=0, style=solid];
m10_177 -> m10_211  [key=2, style=dotted];
m10_180 -> m10_181  [key=0, style=solid];
m10_183 -> m10_184  [key=0, style=solid];
m10_192 -> m10_193  [key=0, style=solid];
m10_192 -> m10_196  [key=0, style=solid];
m10_192 -> m10_199  [key=0, style=solid];
m10_199 -> m10_201  [key=0, style=solid];
m10_199 -> m10_211  [key=2, style=dotted];
m10_199 -> m10_207  [key=2, style=dotted];
m10_191 -> m10_201  [key=0, style=solid];
m10_191 -> m10_211  [key=2, style=dotted];
m10_193 -> m10_194  [key=0, style=solid];
m10_196 -> m10_197  [key=0, style=solid];
m10_201 -> m10_169  [color=blue, key=0, style=bold];
m10_123 -> m10_124  [key=0, style=solid];
m10_124 -> m10_125  [key=0, style=solid];
m10_124 -> m10_122  [key=2, style=dotted];
m10_125 -> m10_123  [color=blue, key=0, style=bold];
m10_13 -> m10_14  [key=0, style=solid];
m10_320 -> m10_321  [key=0, style=solid];
m10_321 -> m10_322  [key=0, style=solid];
m10_321 -> m10_323  [key=2, style=dotted];
m10_322 -> m10_320  [color=blue, key=0, style=bold];
m10_91 -> m10_92  [key=0, style=solid];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_94  [key=2, style=dotted];
m10_93 -> m10_91  [color=blue, key=0, style=bold];
m10_3 -> m10_4  [color=green, key=0, style=solid];
m10_3 -> m10_13  [color=green, key=2, style=dotted];
m10_327 -> m10_328  [key=0, style=solid];
m10_328 -> m10_329  [key=0, style=solid];
m10_328 -> m10_323  [key=2, style=dotted];
m10_329 -> m10_327  [color=blue, key=0, style=bold];
m10_95 -> m10_96  [key=0, style=solid];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_94  [key=2, style=dotted];
m10_97 -> m10_95  [color=blue, key=0, style=bold];
m10_4 -> m10_5  [color=green, key=0, style=solid];
m10_4 -> m10_14  [color=green, key=2, style=dotted];
m10_4 -> m10_6  [color=green, key=1, label=futureSP500, style=dashed];
m10_4 -> m10_36  [key=0, style=solid];
m10_5 -> m10_6  [color=green, key=0, style=solid];
m10_5 -> m10_14  [color=green, key=2, style=dotted];
m10_5 -> m10_7  [color=green, key=1, label=futureGold, style=dashed];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_15  [key=2, style=dotted];
m10_6 -> m10_16  [key=2, style=dotted];
m10_6 -> m10_8  [key=2, style=dotted];
m10_6 -> m10_4  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_15  [key=2, style=dotted];
m10_7 -> m10_16  [key=2, style=dotted];
m10_7 -> m10_5  [color=blue, key=0, style=bold];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_17  [key=2, style=dotted];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_18  [key=2, style=dotted];
m10_10 -> m10_0  [color=blue, key=0, style=bold];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_12  [key=2, style=dotted];
m10_10 -> m10_4  [key=2, style=dotted];
m10_163 -> m10_167  [key=0, style=solid];
m10_167 -> m10_168  [key=0, style=solid];
m10_167 -> m10_169  [key=2, style=dotted];
m10_168 -> m10_163  [color=blue, key=0, style=bold];
m10_65 -> m10_84  [key=0, style=solid];
m10_65 -> m10_85  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m10_84 -> m10_85  [key=0, style=solid];
m10_85 -> m10_86  [key=0, style=solid];
m10_85 -> m10_68  [key=2, style=dotted];
m10_85 -> m10_69  [key=2, style=dotted];
m10_85 -> m10_88  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_85 -> m10_89  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_71  [key=2, style=dotted];
m10_86 -> m10_88  [color=darkseagreen4, key=1, label=response, style=dashed];
m10_88 -> m10_90  [key=0, style=solid];
m10_88 -> m10_72  [key=2, style=dotted];
m10_89 -> m10_90  [key=0, style=solid];
m10_89 -> m10_73  [key=2, style=dotted];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_89  [key=0, style=solid];
m10_90 -> m10_65  [color=blue, key=0, style=bold];
m10_32 -> m10_33  [key=0, style=solid];
m10_75 -> m10_76  [key=0, style=solid];
m10_76 -> m10_77  [key=0, style=solid];
m10_77 -> m10_75  [color=blue, key=0, style=bold];
m10_219 -> m10_220  [key=0, style=solid];
m10_219 -> m10_219  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m10_218 -> m10_219  [key=0, style=solid];
m10_220 -> m10_218  [color=blue, key=0, style=bold];
m10_313 -> m10_314  [key=0, style=solid];
m10_314 -> m10_315  [key=0, style=solid];
m10_315 -> m10_313  [color=blue, key=0, style=bold];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_35  [key=2, style=dotted];
m10_34 -> m10_32  [color=blue, key=0, style=bold];
m10_323 -> m10_330  [key=0, style=solid];
m10_323 -> m10_331  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_323 -> m10_332  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_323 -> m10_334  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_323 -> m10_338  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_323 -> m10_340  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_323 -> m10_341  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_323 -> m10_342  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_323 -> m10_345  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_323 -> m10_346  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_330 -> m10_331  [key=0, style=solid];
m10_331 -> m10_332  [key=0, style=solid];
m10_331 -> m10_334  [key=0, style=solid];
m10_331 -> m10_281  [key=2, style=dotted];
m10_331 -> m10_344  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_332 -> m10_333  [key=0, style=solid];
m10_332 -> m10_206  [key=2, style=dotted];
m10_332 -> m10_227  [key=2, style=dotted];
m10_334 -> m10_335  [key=0, style=solid];
m10_334 -> m10_341  [key=0, style=solid];
m10_338 -> m10_339  [key=0, style=solid];
m10_338 -> m10_335  [key=0, style=solid];
m10_340 -> m10_335  [key=0, style=solid];
m10_340 -> m10_38  [key=2, style=dotted];
m10_341 -> m10_342  [key=0, style=solid];
m10_341 -> m10_310  [key=2, style=dotted];
m10_341 -> m10_349  [key=2, style=dotted];
m10_341 -> m10_350  [key=2, style=dotted];
m10_341 -> m10_341  [color=darkseagreen4, key=1, label=order, style=dashed];
m10_342 -> m10_343  [key=0, style=solid];
m10_342 -> n9  [key=2, style=dotted];
m10_342 -> m10_345  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m10_342 -> m10_346  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m10_345 -> m10_347  [key=0, style=solid];
m10_345 -> m10_213  [key=2, style=dotted];
m10_346 -> m10_347  [key=0, style=solid];
m10_346 -> m10_352  [key=2, style=dotted];
m10_344 -> m10_345  [key=0, style=solid];
m10_344 -> m10_346  [key=0, style=solid];
m10_333 -> m10_347  [key=0, style=solid];
m10_335 -> m10_336  [key=0, style=solid];
m10_335 -> m10_341  [key=0, style=solid];
m10_336 -> m10_337  [key=0, style=solid];
m10_336 -> m10_336  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m10_336 -> m10_338  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m10_336 -> m10_339  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m10_336 -> m10_340  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m10_337 -> m10_338  [key=0, style=solid];
m10_337 -> m10_337  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m10_339 -> m10_340  [key=0, style=solid];
m10_339 -> n9  [key=2, style=dotted];
m10_343 -> m10_344  [key=0, style=solid];
m10_343 -> m10_347  [key=0, style=solid];
m10_343 -> m10_351  [key=2, style=dotted];
m10_347 -> m10_323  [color=blue, key=0, style=bold];
m10_109 -> m10_110  [key=0, style=solid];
m10_110 -> m10_111  [key=0, style=solid];
m10_110 -> m10_108  [key=2, style=dotted];
m10_111 -> m10_109  [color=blue, key=0, style=bold];
m10_373 -> m10_374  [key=0, style=solid];
m10_374 -> m10_375  [key=0, style=solid];
m10_374 -> m10_4  [key=2, style=dotted];
m10_375 -> m10_373  [color=blue, key=0, style=bold];
m10_38 -> m10_39  [key=0, style=solid];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_35  [key=2, style=dotted];
m10_40 -> m10_38  [color=blue, key=0, style=bold];
m10_40 -> m10_1  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_40 -> m10_2  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_40 -> m10_3  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_40 -> m10_4  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_40 -> m10_5  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_40 -> m10_22  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_40 -> m10_24  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_40 -> m10_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_40 -> m10_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_40 -> m10_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_40 -> m10_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_40 -> m10_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFuturesAlgorithm", style=dashed];
m10_108 -> m10_112  [key=0, style=solid];
m10_108 -> m10_113  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m10_112 -> m10_113  [key=0, style=solid];
m10_113 -> m10_114  [key=0, style=solid];
m10_113 -> m10_68  [key=2, style=dotted];
m10_113 -> m10_69  [key=2, style=dotted];
m10_113 -> m10_116  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_113 -> m10_117  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_114 -> m10_115  [key=0, style=solid];
m10_114 -> m10_71  [key=2, style=dotted];
m10_114 -> m10_116  [color=darkseagreen4, key=1, label=response, style=dashed];
m10_116 -> m10_118  [key=0, style=solid];
m10_116 -> m10_72  [key=2, style=dotted];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_73  [key=2, style=dotted];
m10_115 -> m10_116  [key=0, style=solid];
m10_115 -> m10_117  [key=0, style=solid];
m10_118 -> m10_108  [color=blue, key=0, style=bold];
m10_133 -> m10_134  [key=0, style=solid];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_136  [key=2, style=dotted];
m10_135 -> m10_133  [color=blue, key=0, style=bold];
m10_226 -> m10_228  [key=0, style=solid];
m10_226 -> m10_229  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_231  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_232  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_233  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_234  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_235  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_236  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_238  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_240  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_241  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_242  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_243  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_245  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_249  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_251  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_256  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_260  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_263  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_264  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_266  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_268  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_269  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_270  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_271  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_272  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_273  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_277  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_226 -> m10_278  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m10_228 -> m10_229  [key=0, style=solid];
m10_228 -> m10_230  [key=0, style=solid];
m10_229 -> m10_279  [key=0, style=solid];
m10_229 -> m10_280  [key=2, style=dotted];
m10_231 -> m10_232  [key=0, style=solid];
m10_231 -> m10_233  [key=0, style=solid];
m10_231 -> m10_281  [key=2, style=dotted];
m10_231 -> m10_235  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_236  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_237  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_239  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_240  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_242  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_247  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_250  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_252  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_254  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_259  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_265  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_267  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_269  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_274  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_231 -> m10_276  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_232 -> m10_279  [key=0, style=solid];
m10_232 -> m10_206  [key=2, style=dotted];
m10_232 -> m10_282  [key=2, style=dotted];
m10_233 -> m10_234  [key=0, style=solid];
m10_233 -> m10_235  [key=0, style=solid];
m10_234 -> m10_279  [key=0, style=solid];
m10_234 -> m10_283  [key=2, style=dotted];
m10_235 -> m10_236  [key=0, style=solid];
m10_235 -> m10_237  [key=0, style=solid];
m10_235 -> m10_12  [key=2, style=dotted];
m10_236 -> m10_279  [key=0, style=solid];
m10_236 -> m10_207  [key=2, style=dotted];
m10_236 -> m10_284  [key=2, style=dotted];
m10_236 -> m10_12  [key=2, style=dotted];
m10_236 -> m10_282  [key=2, style=dotted];
m10_238 -> m10_279  [key=0, style=solid];
m10_238 -> m10_206  [key=2, style=dotted];
m10_238 -> m10_282  [key=2, style=dotted];
m10_240 -> m10_241  [key=0, style=solid];
m10_240 -> m10_242  [key=0, style=solid];
m10_241 -> m10_279  [key=0, style=solid];
m10_241 -> m10_282  [key=2, style=dotted];
m10_242 -> m10_243  [key=0, style=solid];
m10_242 -> m10_244  [key=0, style=solid];
m10_243 -> m10_279  [key=0, style=solid];
m10_243 -> m10_282  [key=2, style=dotted];
m10_245 -> m10_279  [key=0, style=solid];
m10_245 -> m10_206  [key=2, style=dotted];
m10_245 -> m10_282  [key=2, style=dotted];
m10_249 -> m10_279  [key=0, style=solid];
m10_249 -> m10_282  [key=2, style=dotted];
m10_251 -> m10_279  [key=0, style=solid];
m10_251 -> m10_282  [key=2, style=dotted];
m10_256 -> m10_279  [key=0, style=solid];
m10_256 -> m10_282  [key=2, style=dotted];
m10_258 -> m10_279  [key=0, style=solid];
m10_258 -> m10_282  [key=2, style=dotted];
m10_260 -> m10_279  [key=0, style=solid];
m10_260 -> m10_282  [key=2, style=dotted];
m10_263 -> m10_279  [key=0, style=solid];
m10_263 -> m10_217  [key=2, style=dotted];
m10_263 -> m10_282  [key=2, style=dotted];
m10_264 -> m10_265  [key=0, style=solid];
m10_264 -> m10_273  [key=0, style=solid];
m10_266 -> m10_279  [key=0, style=solid];
m10_266 -> m10_206  [key=2, style=dotted];
m10_266 -> m10_282  [key=2, style=dotted];
m10_268 -> m10_279  [key=0, style=solid];
m10_268 -> m10_206  [key=2, style=dotted];
m10_268 -> m10_282  [key=2, style=dotted];
m10_269 -> m10_270  [key=0, style=solid];
m10_269 -> m10_271  [key=0, style=solid];
m10_270 -> m10_279  [key=0, style=solid];
m10_270 -> m10_206  [key=2, style=dotted];
m10_270 -> m10_282  [key=2, style=dotted];
m10_271 -> m10_272  [key=0, style=solid];
m10_271 -> m10_273  [key=0, style=solid];
m10_272 -> m10_273  [key=0, style=solid];
m10_272 -> m10_283  [key=2, style=dotted];
m10_273 -> m10_274  [key=0, style=solid];
m10_273 -> m10_278  [key=0, style=solid];
m10_277 -> m10_279  [key=0, style=solid];
m10_277 -> m10_282  [key=2, style=dotted];
m10_278 -> m10_279  [key=0, style=solid];
m10_278 -> m10_288  [key=2, style=dotted];
m10_230 -> m10_231  [key=0, style=solid];
m10_237 -> m10_238  [key=0, style=solid];
m10_237 -> m10_239  [key=0, style=solid];
m10_239 -> m10_240  [key=0, style=solid];
m10_239 -> m10_244  [color=darkseagreen4, key=1, label=price, style=dashed];
m10_247 -> m10_248  [key=0, style=solid];
m10_247 -> m10_249  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m10_247 -> m10_251  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m10_247 -> m10_256  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m10_247 -> m10_258  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m10_250 -> m10_251  [key=0, style=solid];
m10_250 -> m10_252  [key=0, style=solid];
m10_252 -> m10_253  [key=0, style=solid];
m10_252 -> m10_259  [key=0, style=solid];
m10_254 -> m10_255  [key=0, style=solid];
m10_254 -> m10_256  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m10_254 -> m10_258  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m10_259 -> m10_260  [key=0, style=solid];
m10_259 -> m10_261  [key=0, style=solid];
m10_265 -> m10_266  [key=0, style=solid];
m10_265 -> m10_267  [key=0, style=solid];
m10_267 -> m10_268  [key=0, style=solid];
m10_267 -> m10_269  [key=0, style=solid];
m10_274 -> m10_275  [key=0, style=solid];
m10_274 -> m10_286  [key=2, style=dotted];
m10_276 -> m10_277  [key=0, style=solid];
m10_276 -> m10_278  [key=0, style=solid];
m10_244 -> m10_245  [key=0, style=solid];
m10_244 -> m10_246  [key=0, style=solid];
m10_246 -> m10_247  [key=0, style=solid];
m10_248 -> m10_249  [key=0, style=solid];
m10_248 -> m10_250  [key=0, style=solid];
m10_248 -> m10_285  [key=2, style=dotted];
m10_253 -> m10_254  [key=0, style=solid];
m10_255 -> m10_256  [key=0, style=solid];
m10_255 -> m10_257  [key=0, style=solid];
m10_255 -> m10_285  [key=2, style=dotted];
m10_257 -> m10_258  [key=0, style=solid];
m10_257 -> m10_259  [key=0, style=solid];
m10_261 -> m10_262  [key=0, style=solid];
m10_261 -> m10_264  [key=0, style=solid];
m10_262 -> m10_263  [key=0, style=solid];
m10_275 -> m10_276  [key=0, style=solid];
m10_275 -> m10_287  [key=2, style=dotted];
m10_279 -> m10_226  [color=blue, key=0, style=bold];
m10_376 -> m10_377  [key=0, style=solid];
m10_377 -> m10_378  [key=0, style=solid];
m10_377 -> m10_381  [key=2, style=dotted];
m10_377 -> m10_382  [key=2, style=dotted];
m10_377 -> m10_379  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m10_378 -> m10_379  [key=0, style=solid];
m10_378 -> m10_383  [key=2, style=dotted];
m10_379 -> m10_380  [key=0, style=solid];
m10_379 -> m10_384  [key=2, style=dotted];
m10_380 -> m10_376  [color=blue, key=0, style=bold];
m10_29 -> m10_30  [key=0, style=solid];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_4  [key=2, style=dotted];
m10_31 -> m10_29  [color=blue, key=0, style=bold];
m10_78 -> m10_79  [key=0, style=solid];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_65  [key=2, style=dotted];
m10_80 -> m10_78  [color=blue, key=0, style=bold];
m10_367 -> m10_368  [key=0, style=solid];
m10_368 -> m10_369  [key=0, style=solid];
m10_368 -> m10_38  [key=2, style=dotted];
m10_369 -> m10_367  [color=blue, key=0, style=bold];
m10_22 -> m10_22  [color=green, key=1, label=chain, style=dashed];
m10_22 -> m10_23  [color=green, key=0, style=solid];
m10_22 -> m10_309  [color=green, key=2, style=dotted];
m10_22 -> m10_28  [color=green, key=2, style=dotted];
m10_22 -> m10_29  [color=green, key=2, style=dotted];
m10_22 -> m10_32  [color=green, key=1, label="lambda expression", style=dashed];
m10_22 -> m10_24  [color=green, key=1, label=contract, style=dashed];
m10_22 -> m10_20  [color=blue, key=0, style=bold];
m10_21 -> m10_22  [color=green, key=0, style=solid];
m10_21 -> m10_26  [key=0, style=solid];
m10_21 -> m10_8  [key=2, style=dotted];
m10_21 -> m10_4  [key=2, style=dotted];
m10_23 -> m10_24  [color=green, key=0, style=solid];
m10_23 -> m10_21  [key=0, style=solid];
m10_24 -> m10_21  [color=green, key=0, style=solid];
m10_24 -> m10_213  [color=green, key=2, style=dotted];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_16  [key=2, style=dotted];
m10_24 -> m10_4  [key=2, style=dotted];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_25  [key=0, style=solid];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_31  [key=2, style=dotted];
m10_25 -> m10_23  [color=blue, key=0, style=bold];
m10_26 -> m10_19  [color=blue, key=0, style=bold];
m10_26 -> m10_27  [key=0, style=solid];
m10_71 -> m10_221  [key=0, style=solid];
m10_221 -> m10_222  [key=0, style=solid];
m10_221 -> m10_226  [key=2, style=dotted];
m10_221 -> m10_223  [color=darkseagreen4, key=1, label=response, style=dashed];
m10_221 -> m10_224  [color=darkseagreen4, key=1, label=response, style=dashed];
m10_222 -> m10_223  [key=0, style=solid];
m10_222 -> m10_224  [key=0, style=solid];
m10_223 -> m10_224  [key=0, style=solid];
m10_223 -> m10_227  [key=2, style=dotted];
m10_224 -> m10_225  [key=0, style=solid];
m10_225 -> m10_71  [color=blue, key=0, style=bold];
m10_28 -> m10_26  [color=blue, key=0, style=bold];
m10_119 -> m10_120  [key=0, style=solid];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_122  [key=2, style=dotted];
m10_121 -> m10_119  [color=blue, key=0, style=bold];
m10_160 -> m10_161  [key=0, style=solid];
m10_161 -> m10_162  [key=0, style=solid];
m10_161 -> m10_3  [key=2, style=dotted];
m10_161 -> m10_163  [key=2, style=dotted];
m10_162 -> m10_160  [color=blue, key=0, style=bold];
m10_44 -> m10_45  [key=0, style=solid];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_35  [key=2, style=dotted];
m10_46 -> m10_44  [color=blue, key=0, style=bold];
m10_11 -> m10_9  [color=blue, key=0, style=bold];
m10_370 -> m10_371  [key=0, style=solid];
m10_371 -> m10_372  [key=0, style=solid];
m10_371 -> m10_4  [key=2, style=dotted];
m10_372 -> m10_370  [color=blue, key=0, style=bold];
m10_81 -> m10_82  [key=0, style=solid];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_65  [key=2, style=dotted];
m10_83 -> m10_81  [color=blue, key=0, style=bold];
m10_136 -> m10_140  [key=0, style=solid];
m10_136 -> m10_141  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m10_140 -> m10_141  [key=0, style=solid];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_68  [key=2, style=dotted];
m10_141 -> m10_69  [key=2, style=dotted];
m10_141 -> m10_144  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_141 -> m10_145  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_142 -> m10_143  [key=0, style=solid];
m10_142 -> m10_71  [key=2, style=dotted];
m10_142 -> m10_144  [color=darkseagreen4, key=1, label=response, style=dashed];
m10_144 -> m10_146  [key=0, style=solid];
m10_144 -> m10_72  [key=2, style=dotted];
m10_145 -> m10_146  [key=0, style=solid];
m10_145 -> m10_73  [key=2, style=dotted];
m10_143 -> m10_144  [key=0, style=solid];
m10_143 -> m10_145  [key=0, style=solid];
m10_146 -> m10_136  [color=blue, key=0, style=bold];
m10_15 -> m10_13  [color=blue, key=0, style=bold];
m10_105 -> m10_106  [key=0, style=solid];
m10_106 -> m10_107  [key=0, style=solid];
m10_106 -> m10_108  [key=2, style=dotted];
m10_107 -> m10_105  [color=blue, key=0, style=bold];
m10_147 -> m10_148  [key=0, style=solid];
m10_147 -> m10_149  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_147 -> m10_156  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_148 -> m10_149  [key=0, style=solid];
m10_149 -> m10_150  [key=0, style=solid];
m10_149 -> m10_68  [key=2, style=dotted];
m10_149 -> m10_69  [key=2, style=dotted];
m10_149 -> m10_151  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_149 -> m10_152  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_149 -> m10_154  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_149 -> m10_155  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_156 -> m10_157  [key=0, style=solid];
m10_156 -> m10_158  [key=0, style=solid];
m10_150 -> m10_151  [key=0, style=solid];
m10_150 -> m10_152  [key=0, style=solid];
m10_151 -> m10_159  [key=0, style=solid];
m10_151 -> m10_70  [key=2, style=dotted];
m10_152 -> m10_153  [key=0, style=solid];
m10_152 -> m10_71  [key=2, style=dotted];
m10_152 -> m10_154  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m10_154 -> m10_159  [key=0, style=solid];
m10_154 -> m10_72  [key=2, style=dotted];
m10_155 -> m10_156  [key=0, style=solid];
m10_155 -> m10_73  [key=2, style=dotted];
m10_155 -> m10_157  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m10_155 -> m10_158  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m10_153 -> m10_154  [key=0, style=solid];
m10_153 -> m10_155  [key=0, style=solid];
m10_157 -> m10_158  [key=0, style=solid];
m10_157 -> m10_74  [key=2, style=dotted];
m10_158 -> m10_159  [key=0, style=solid];
m10_159 -> m10_147  [color=blue, key=0, style=bold];
m10_316 -> m10_317  [key=0, style=solid];
m10_316 -> m10_318  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_317 -> m10_318  [key=0, style=solid];
m10_317 -> m10_319  [key=0, style=solid];
m10_318 -> m10_319  [key=0, style=solid];
m10_319 -> m10_316  [color=blue, key=0, style=bold];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_35  [key=2, style=dotted];
m10_36 -> m10_38  [key=2, style=dotted];
m10_36 -> m10_39  [key=2, style=dotted];
m10_37 -> m10_4  [color=blue, key=0, style=bold];
m10_37 -> m10_35  [color=blue, key=0, style=bold];
m10_41 -> m10_42  [key=0, style=solid];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_35  [key=2, style=dotted];
m10_43 -> m10_41  [color=blue, key=0, style=bold];
m10_94 -> m10_98  [key=0, style=solid];
m10_94 -> m10_99  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m10_98 -> m10_99  [key=0, style=solid];
m10_99 -> m10_100  [key=0, style=solid];
m10_99 -> m10_68  [key=2, style=dotted];
m10_99 -> m10_69  [key=2, style=dotted];
m10_99 -> m10_102  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_99 -> m10_103  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_100 -> m10_101  [key=0, style=solid];
m10_100 -> m10_71  [key=2, style=dotted];
m10_100 -> m10_102  [color=darkseagreen4, key=1, label=response, style=dashed];
m10_102 -> m10_104  [key=0, style=solid];
m10_102 -> m10_72  [key=2, style=dotted];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_73  [key=2, style=dotted];
m10_101 -> m10_102  [key=0, style=solid];
m10_101 -> m10_103  [key=0, style=solid];
m10_104 -> m10_94  [color=blue, key=0, style=bold];
m10_353 -> m10_354  [key=0, style=solid];
m10_354 -> m10_355  [key=0, style=solid];
m10_354 -> n9  [key=2, style=dotted];
m10_355 -> m10_353  [color=blue, key=0, style=bold];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_16  [key=2, style=dotted];
m10_14 -> m10_4  [key=2, style=dotted];
m10_35 -> m10_47  [key=0, style=solid];
m10_35 -> m10_49  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m10_35 -> m10_54  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m10_35 -> m10_61  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_35 -> m10_36  [key=0, style=solid];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_49  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_47 -> m10_50  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_47 -> m10_54  [color=darkseagreen4, key=1, label=security, style=dashed];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_65  [key=2, style=dotted];
m10_49 -> m10_51  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m10_49 -> m10_52  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m10_49 -> m10_53  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_68  [key=2, style=dotted];
m10_54 -> m10_69  [key=2, style=dotted];
m10_54 -> m10_56  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_54 -> m10_57  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_54 -> m10_59  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_54 -> m10_60  [color=darkseagreen4, key=1, label=request, style=dashed];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_63  [key=0, style=solid];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_54  [key=0, style=solid];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_66  [key=2, style=dotted];
m10_50 -> m10_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_53  [key=0, style=solid];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_67  [key=2, style=dotted];
m10_53 -> m10_64  [key=0, style=solid];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_57  [key=0, style=solid];
m10_56 -> m10_64  [key=0, style=solid];
m10_56 -> m10_70  [key=2, style=dotted];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_71  [key=2, style=dotted];
m10_57 -> m10_59  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m10_59 -> m10_64  [key=0, style=solid];
m10_59 -> m10_72  [key=2, style=dotted];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_73  [key=2, style=dotted];
m10_60 -> m10_62  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m10_60 -> m10_63  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_60  [key=0, style=solid];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_74  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_64 -> m10_35  [color=blue, key=0, style=bold];
m10_289 -> m10_290  [key=0, style=solid];
m10_289 -> m10_292  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_289 -> m10_302  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_289 -> m10_304  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_290 -> m10_291  [key=0, style=solid];
m10_290 -> m10_202  [key=2, style=dotted];
m10_290 -> m10_306  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m10_290 -> m10_307  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m10_292 -> m10_293  [key=0, style=solid];
m10_292 -> m10_291  [key=0, style=solid];
m10_302 -> m10_297  [key=0, style=solid];
m10_302 -> m10_312  [key=2, style=dotted];
m10_304 -> m10_305  [key=0, style=solid];
m10_304 -> m10_38  [key=2, style=dotted];
m10_304 -> m10_306  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m10_291 -> m10_292  [key=0, style=solid];
m10_291 -> m10_307  [key=0, style=solid];
m10_291 -> m10_309  [key=2, style=dotted];
m10_291 -> m10_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_291 -> m10_293  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m10_291 -> m10_294  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m10_291 -> m10_304  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m10_306 -> m10_291  [key=0, style=solid];
m10_306 -> m10_214  [key=2, style=dotted];
m10_307 -> m10_308  [key=0, style=solid];
m10_293 -> m10_294  [key=0, style=solid];
m10_293 -> m10_310  [key=2, style=dotted];
m10_293 -> m10_295  [color=darkseagreen4, key=1, label=orders, style=dashed];
m10_293 -> m10_297  [color=darkseagreen4, key=1, label=orders, style=dashed];
m10_294 -> m10_295  [key=0, style=solid];
m10_294 -> m10_303  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m10_294 -> m10_304  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m10_295 -> m10_296  [key=0, style=solid];
m10_295 -> m10_291  [key=0, style=solid];
m10_297 -> m10_298  [key=0, style=solid];
m10_297 -> m10_303  [key=0, style=solid];
m10_297 -> m10_299  [color=darkseagreen4, key=1, label=order, style=dashed];
m10_297 -> m10_302  [color=darkseagreen4, key=1, label=order, style=dashed];
m10_303 -> m10_304  [key=0, style=solid];
m10_303 -> m10_291  [key=0, style=solid];
m10_296 -> m10_297  [key=0, style=solid];
m10_296 -> m10_301  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m10_296 -> m10_304  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m10_301 -> m10_297  [key=0, style=solid];
m10_301 -> m10_301  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m10_301 -> m10_304  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m10_298 -> m10_299  [key=0, style=solid];
m10_298 -> m10_302  [key=0, style=solid];
m10_299 -> m10_300  [key=0, style=solid];
m10_299 -> m10_311  [key=2, style=dotted];
m10_299 -> m10_301  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m10_300 -> m10_301  [key=0, style=solid];
m10_300 -> m10_297  [key=0, style=solid];
m10_305 -> m10_306  [key=0, style=solid];
m10_305 -> m10_291  [key=0, style=solid];
m10_308 -> m10_289  [color=blue, key=0, style=bold];
m10_69 -> m10_385  [key=0, style=solid];
m10_385 -> m10_386  [key=0, style=solid];
m10_385 -> m10_387  [key=2, style=dotted];
m10_386 -> m10_69  [color=blue, key=0, style=bold];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_12  [key=2, style=dotted];
m10_27 -> m10_4  [key=2, style=dotted];
m10_137 -> m10_138  [key=0, style=solid];
m10_138 -> m10_139  [key=0, style=solid];
m10_138 -> m10_136  [key=2, style=dotted];
m10_139 -> m10_137  [color=blue, key=0, style=bold];
m10_388 -> m10_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_54  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_56  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_96  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_112  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_114  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_116  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_120  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_124  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_126  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_131  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_134  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_138  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_140  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_145  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_148  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_151  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_152  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_154  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_155  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_157  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_161  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_165  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_174  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_184  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_189  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_194  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_197  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_221  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_223  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_228  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_231  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_248  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_255  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_261  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_263  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_276  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_291  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_293  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_294  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_299  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_302  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_304  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_317  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_318  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_321  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_328  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_331  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_332  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_335  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_339  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_341  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_342  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_345  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_346  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_354  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_356  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_358  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_360  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_361  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_363  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_368  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_371  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_374  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_378  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_388 -> m10_385  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m10_389 -> m10_219  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m10_390 -> m10_219  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m11_5 -> m11_19  [color=green, key=1, label=basicTemplateStatistics, style=dashed];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_21  [key=2, style=dotted];
m11_36 -> m11_37  [key=0, style=solid];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_39  [key=2, style=dotted];
m11_38 -> m11_36  [color=blue, key=0, style=bold];
m11_43 -> m11_44  [key=0, style=solid];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_46  [key=2, style=dotted];
m11_44 -> m11_47  [key=2, style=dotted];
m11_44 -> m11_48  [key=2, style=dotted];
m11_44 -> m11_49  [key=2, style=dotted];
m11_44 -> m11_50  [key=2, style=dotted];
m11_44 -> m11_44  [color=darkseagreen4, key=1, label=file, style=dashed];
m11_45 -> m11_43  [color=blue, key=0, style=bold];
m11_26 -> m11_27  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_19  [color=green, key=1, label=updateOrderRegressionStatistics, style=dashed];
m11_8 -> m11_21  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_19  [color=green, key=1, label=regressionStatistics, style=dashed];
m11_9 -> m11_21  [key=2, style=dotted];
m11_10 -> m11_8  [color=blue, key=0, style=bold];
m11_10 -> m11_19  [color=green, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m11_10 -> m11_11  [color=green, key=0, style=solid];
m11_10 -> m11_21  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_29  [key=2, style=dotted];
m11_27 -> m11_30  [key=2, style=dotted];
m11_28 -> m11_26  [color=blue, key=0, style=bold];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_0  [key=2, style=dotted];
m11_28 -> m11_30  [key=2, style=dotted];
m11_18 -> m11_19  [color=green, key=0, style=solid];
m11_18 -> m11_21  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_19 -> m11_20  [color=green, key=0, style=solid];
m11_19 -> m11_21  [key=0, style=solid];
m11_19 -> m11_60  [color=green, key=2, style=dotted];
m11_19 -> m11_23  [color=green, key=2, style=dotted];
m11_19 -> m11_24  [color=green, key=2, style=dotted];
m11_19 -> m11_25  [color=green, key=2, style=dotted];
m11_19 -> m11_26  [color=green, key=1, label="lambda expression", style=dashed];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_23  [key=0, style=solid];
m11_21 -> m11_25  [key=2, style=dotted];
m11_21 -> m11_26  [key=2, style=dotted];
m11_20 -> m11_24  [key=0, style=solid];
m11_20 -> m11_4  [color=blue, key=0, style=bold];
m11_22 -> m11_24  [key=0, style=solid];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_31  [key=0, style=solid];
m11_23 -> m11_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m11_23 -> m11_33  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m11_24 -> m11_18  [color=blue, key=0, style=bold];
m11_31 -> m11_32  [key=0, style=solid];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_34  [key=2, style=dotted];
m11_32 -> m11_35  [key=2, style=dotted];
m11_33 -> m11_31  [color=blue, key=0, style=bold];
m11_33 -> m11_34  [key=0, style=solid];
m11_35 -> m11_31  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m11_35 -> m11_32  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m11_35 -> m11_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>", style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_4  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_5  [key=2, style=dotted];
m11_2 -> m11_6  [key=2, style=dotted];
m11_2 -> m11_7  [key=2, style=dotted];
m11_2 -> m11_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_3 -> m11_0  [color=blue, key=0, style=bold];
m11_34 -> m11_23  [color=blue, key=0, style=bold];
m11_29 -> m11_27  [color=blue, key=0, style=bold];
m11_11 -> m11_12  [color=green, key=0, style=solid];
m11_11 -> m11_14  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_11 -> m11_19  [color=green, key=1, label=customDataRegressionStatistics, style=dashed];
m11_11 -> m11_21  [color=green, key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_16  [color=darkseagreen4, key=1, label=mappedSymbol, style=dashed];
m11_12 -> m11_19  [color=green, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m11_12 -> m11_21  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_13  [key=0, style=solid];
m11_14 -> m11_19  [color=green, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m11_14 -> m11_21  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_16  [key=0, style=solid];
m11_13 -> m11_15  [color=darkseagreen4, key=1, label=splitDate, style=dashed];
m11_13 -> m11_19  [color=green, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m11_13 -> m11_21  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_19  [color=green, key=1, label=historyAlgorithmStatistics, style=dashed];
m11_16 -> m11_21  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_19  [color=green, key=1, label=parameterizedStatistics, style=dashed];
m11_15 -> m11_21  [key=2, style=dotted];
m11_17 -> m11_11  [color=blue, key=0, style=bold];
m11_17 -> m11_19  [color=green, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m11_17 -> m11_18  [color=green, key=0, style=solid];
m11_17 -> m11_21  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_40 -> m11_41  [key=0, style=solid];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_36  [key=2, style=dotted];
m11_42 -> m11_40  [color=blue, key=0, style=bold];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_52 -> m11_56  [key=0, style=solid];
m11_52 -> m11_57  [key=2, style=dotted];
m11_52 -> m11_58  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_59  [key=2, style=dotted];
m11_53 -> m11_54  [key=0, style=solid];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_60  [key=2, style=dotted];
m11_56 -> m11_51  [color=blue, key=0, style=bold];
m11_6 -> m11_19  [color=green, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_21  [key=2, style=dotted];
m11_7 -> m11_19  [color=green, key=1, label=limitFillRegressionStatistics, style=dashed];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_21  [key=2, style=dotted];
m11_61 -> m11_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m11_61 -> m11_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m11_61 -> m11_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m11_61 -> m11_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m11_61 -> m11_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m11_61 -> m11_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m11_61 -> m11_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m11_61 -> m11_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFile", style=dashed];
m12_154 -> m12_231  [key=0, style=solid];
m12_154 -> m12_233  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_237  [color=darkseagreen4, key=1, label=newSource, style=dashed];
m12_233 -> m12_234  [key=0, style=solid];
m12_233 -> m12_237  [key=0, style=solid];
m12_233 -> m12_239  [key=2, style=dotted];
m12_232 -> m12_233  [key=0, style=solid];
m12_232 -> m12_237  [key=0, style=solid];
m12_237 -> m12_238  [key=0, style=solid];
m12_234 -> m12_235  [key=0, style=solid];
m12_235 -> m12_236  [key=0, style=solid];
m12_235 -> m12_40  [key=2, style=dotted];
m12_236 -> m12_237  [key=0, style=solid];
m12_236 -> m12_31  [key=2, style=dotted];
m12_238 -> m12_154  [color=blue, key=0, style=bold];
m12_155 -> m12_222  [key=0, style=solid];
m12_222 -> m12_223  [key=0, style=solid];
m12_222 -> m12_225  [key=0, style=solid];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_228  [key=2, style=dotted];
m12_225 -> m12_226  [key=0, style=solid];
m12_225 -> m12_227  [key=0, style=solid];
m12_224 -> m12_225  [key=0, style=solid];
m12_224 -> m12_229  [key=2, style=dotted];
m12_226 -> m12_227  [key=0, style=solid];
m12_226 -> m12_230  [key=2, style=dotted];
m12_227 -> m12_155  [color=blue, key=0, style=bold];
m12_42 -> m12_43  [key=0, style=solid];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_51  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_43 -> m12_77  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_43 -> m12_80  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_43 -> m12_81  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_44 -> m12_45  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_75  [key=0, style=solid];
m12_77 -> m12_78  [key=0, style=solid];
m12_80 -> m12_81  [key=0, style=solid];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_88  [key=0, style=solid];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_51  [key=0, style=solid];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_48  [key=0, style=solid];
m12_47 -> m12_49  [key=0, style=solid];
m12_48 -> m12_49  [key=0, style=solid];
m12_49 -> m12_50  [key=0, style=solid];
m12_50 -> m12_89  [key=0, style=solid];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_90  [key=2, style=dotted];
m12_52 -> m12_55  [color=darkseagreen4, key=1, label=line, style=dashed];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_79  [key=0, style=solid];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_57  [key=0, style=solid];
m12_53 -> m12_91  [key=2, style=dotted];
m12_53 -> m12_58  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_53 -> m12_59  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_53 -> m12_64  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_53 -> m12_66  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_53 -> m12_67  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_53 -> m12_69  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_53 -> m12_72  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_53 -> m12_77  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_53 -> m12_80  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_53 -> m12_81  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_92  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_46  [key=0, style=solid];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_93  [key=2, style=dotted];
m12_58 -> m12_71  [color=darkseagreen4, key=1, label=instanceMarketOpen, style=dashed];
m12_58 -> m12_73  [color=darkseagreen4, key=1, label=instanceMarketOpen, style=dashed];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_61  [key=0, style=solid];
m12_59 -> m12_64  [key=0, style=solid];
m12_59 -> m12_94  [key=2, style=dotted];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_66  [key=0, style=solid];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_69  [key=0, style=solid];
m12_67 -> m12_68  [key=0, style=solid];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_71  [key=0, style=solid];
m12_72 -> m12_73  [key=0, style=solid];
m12_56 -> m12_46  [key=0, style=solid];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_73  [key=0, style=solid];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_46  [key=0, style=solid];
m12_60 -> m12_46  [key=0, style=solid];
m12_60 -> m12_64  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_60 -> m12_66  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_60 -> m12_67  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_60 -> m12_69  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_60 -> m12_72  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_60 -> m12_77  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_60 -> m12_80  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_60 -> m12_81  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_61 -> m12_62  [key=0, style=solid];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_40  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_92  [key=2, style=dotted];
m12_65 -> m12_46  [key=0, style=solid];
m12_65 -> m12_95  [key=2, style=dotted];
m12_68 -> m12_46  [key=0, style=solid];
m12_68 -> m12_69  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_68 -> m12_72  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_68 -> m12_77  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_68 -> m12_80  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_68 -> m12_81  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_70 -> m12_46  [key=0, style=solid];
m12_70 -> m12_72  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_70 -> m12_77  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_70 -> m12_80  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_70 -> m12_81  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_74 -> m12_46  [key=0, style=solid];
m12_74 -> m12_77  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_74 -> m12_80  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_74 -> m12_81  [color=darkseagreen4, key=1, label=instance, style=dashed];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_78  [key=0, style=solid];
m12_79 -> m12_80  [key=0, style=solid];
m12_78 -> m12_80  [key=0, style=solid];
m12_82 -> m12_83  [key=0, style=solid];
m12_88 -> m12_89  [key=0, style=solid];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_87  [key=0, style=solid];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_96  [key=2, style=dotted];
m12_87 -> m12_89  [key=0, style=solid];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_97  [key=2, style=dotted];
m12_86 -> m12_87  [key=0, style=solid];
m12_89 -> m12_42  [color=blue, key=0, style=bold];
m12_121 -> m12_122  [key=0, style=solid];
m12_121 -> m12_125  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_121 -> m12_126  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_121 -> m12_129  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_121 -> m12_142  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_122 -> m12_123  [key=0, style=solid];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_98  [key=2, style=dotted];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_129  [key=0, style=solid];
m12_126 -> m12_153  [key=2, style=dotted];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_154  [key=2, style=dotted];
m12_129 -> m12_133  [color=darkseagreen4, key=1, label=newSource, style=dashed];
m12_129 -> m12_135  [color=darkseagreen4, key=1, label=newSource, style=dashed];
m12_142 -> m12_143  [key=0, style=solid];
m12_142 -> m12_157  [key=2, style=dotted];
m12_142 -> m12_40  [key=2, style=dotted];
m12_123 -> m12_124  [key=0, style=solid];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_126  [key=0, style=solid];
m12_127 -> m12_128  [key=0, style=solid];
m12_128 -> m12_152  [key=0, style=solid];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_133  [key=0, style=solid];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_151  [key=0, style=solid];
m12_135 -> m12_136  [key=0, style=solid];
m12_131 -> m12_132  [key=0, style=solid];
m12_132 -> m12_152  [key=0, style=solid];
m12_134 -> m12_135  [key=0, style=solid];
m12_151 -> m12_152  [key=0, style=solid];
m12_136 -> m12_137  [key=0, style=solid];
m12_136 -> m12_155  [key=2, style=dotted];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_141  [key=0, style=solid];
m12_137 -> m12_156  [key=2, style=dotted];
m12_138 -> m12_139  [key=0, style=solid];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_146  [key=0, style=solid];
m12_139 -> m12_140  [key=0, style=solid];
m12_139 -> m12_40  [key=2, style=dotted];
m12_140 -> m12_152  [key=0, style=solid];
m12_146 -> m12_147  [key=0, style=solid];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_145  [key=0, style=solid];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_31  [key=2, style=dotted];
m12_145 -> m12_152  [key=0, style=solid];
m12_147 -> m12_148  [key=0, style=solid];
m12_148 -> m12_149  [key=0, style=solid];
m12_148 -> m12_151  [key=0, style=solid];
m12_148 -> m12_42  [key=2, style=dotted];
m12_149 -> m12_150  [key=0, style=solid];
m12_150 -> m12_152  [key=0, style=solid];
m12_150 -> m12_158  [key=2, style=dotted];
m12_152 -> m12_121  [color=blue, key=0, style=bold];
m12_209 -> m12_210  [key=0, style=solid];
m12_209 -> m12_213  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_209 -> m12_214  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_210 -> m12_211  [key=0, style=solid];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_219  [key=2, style=dotted];
m12_213 -> m12_215  [color=darkseagreen4, key=1, label=stream, style=dashed];
m12_213 -> m12_216  [color=darkseagreen4, key=1, label=stream, style=dashed];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_216  [key=0, style=solid];
m12_214 -> m12_199  [key=2, style=dotted];
m12_211 -> m12_212  [key=0, style=solid];
m12_211 -> m12_201  [key=2, style=dotted];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_202  [key=2, style=dotted];
m12_215 -> m12_217  [key=0, style=solid];
m12_215 -> m12_220  [key=2, style=dotted];
m12_216 -> m12_217  [key=0, style=solid];
m12_216 -> m12_221  [key=2, style=dotted];
m12_217 -> m12_218  [key=0, style=solid];
m12_218 -> m12_209  [color=blue, key=0, style=bold];
m12_113 -> m12_114  [key=0, style=solid];
m12_114 -> m12_115  [key=0, style=solid];
m12_114 -> m12_116  [key=2, style=dotted];
m12_115 -> m12_113  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m12_0 -> m12_3  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_0 -> m12_4  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_0 -> m12_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m12_0 -> m12_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m12_0 -> m12_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m12_0 -> m12_8  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m12_0 -> m12_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m12_0 -> m12_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m12_0 -> m12_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m12_0 -> m12_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_29  [key=2, style=dotted];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_30  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_31  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_38  [key=2, style=dotted];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_28  [key=0, style=solid];
m12_23 -> m12_39  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_14  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_32  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_13 -> m12_28  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_33  [key=2, style=dotted];
m12_16 -> m12_34  [key=2, style=dotted];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_35  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_33  [key=2, style=dotted];
m12_18 -> m12_34  [key=2, style=dotted];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_21  [key=0, style=solid];
m12_19 -> m12_33  [key=2, style=dotted];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_36  [key=2, style=dotted];
m12_20 -> m12_37  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_24  [key=0, style=solid];
m12_21 -> m12_28  [key=0, style=solid];
m12_24 -> m12_25  [key=0, style=solid];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_40  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_41  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_41  [key=2, style=dotted];
m12_28 -> m12_0  [color=blue, key=0, style=bold];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_100  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_106  [key=2, style=dotted];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_103  [key=0, style=solid];
m12_100 -> m12_107  [key=2, style=dotted];
m12_101 -> m12_102  [key=0, style=solid];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_108  [key=2, style=dotted];
m12_102 -> m12_103  [key=0, style=solid];
m12_102 -> m12_40  [key=2, style=dotted];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_109  [key=2, style=dotted];
m12_105 -> m12_98  [color=blue, key=0, style=bold];
m12_110 -> m12_111  [key=0, style=solid];
m12_111 -> m12_112  [key=0, style=solid];
m12_111 -> m12_93  [key=2, style=dotted];
m12_112 -> m12_110  [color=blue, key=0, style=bold];
m12_156 -> m12_159  [key=0, style=solid];
m12_156 -> m12_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_156 -> m12_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_156 -> m12_174  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_156 -> m12_180  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_156 -> m12_181  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_156 -> m12_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_156 -> m12_186  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_156 -> m12_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_156 -> m12_191  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_159 -> m12_160  [key=0, style=solid];
m12_159 -> m12_161  [color=darkseagreen4, key=1, label=cache, style=dashed];
m12_159 -> m12_162  [color=darkseagreen4, key=1, label=cache, style=dashed];
m12_159 -> m12_163  [color=darkseagreen4, key=1, label=cache, style=dashed];
m12_159 -> m12_166  [color=darkseagreen4, key=1, label=cache, style=dashed];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_198  [key=2, style=dotted];
m12_165 -> m12_199  [key=2, style=dotted];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_200  [key=2, style=dotted];
m12_174 -> m12_175  [key=0, style=solid];
m12_174 -> m12_203  [key=2, style=dotted];
m12_180 -> m12_181  [key=0, style=solid];
m12_180 -> m12_187  [key=0, style=solid];
m12_180 -> m12_205  [key=2, style=dotted];
m12_181 -> m12_182  [key=0, style=solid];
m12_181 -> m12_186  [key=0, style=solid];
m12_181 -> m12_199  [key=2, style=dotted];
m12_182 -> m12_183  [key=0, style=solid];
m12_182 -> m12_206  [key=2, style=dotted];
m12_182 -> m12_185  [color=darkseagreen4, key=1, label=sr, style=dashed];
m12_186 -> m12_192  [key=0, style=solid];
m12_186 -> m12_208  [key=2, style=dotted];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_95  [key=2, style=dotted];
m12_191 -> m12_192  [key=0, style=solid];
m12_191 -> m12_208  [key=2, style=dotted];
m12_160 -> m12_161  [key=0, style=solid];
m12_161 -> m12_162  [key=0, style=solid];
m12_161 -> m12_163  [key=0, style=solid];
m12_161 -> m12_194  [key=2, style=dotted];
m12_162 -> m12_163  [key=0, style=solid];
m12_162 -> m12_195  [key=2, style=dotted];
m12_163 -> m12_164  [key=0, style=solid];
m12_163 -> m12_165  [key=0, style=solid];
m12_163 -> m12_196  [key=2, style=dotted];
m12_166 -> m12_167  [key=0, style=solid];
m12_166 -> m12_174  [color=darkseagreen4, key=1, label=location, style=dashed];
m12_166 -> m12_175  [color=darkseagreen4, key=1, label=location, style=dashed];
m12_164 -> m12_163  [key=0, style=solid];
m12_164 -> m12_197  [key=2, style=dotted];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_190  [key=0, style=solid];
m12_175 -> m12_176  [key=0, style=solid];
m12_175 -> m12_180  [key=0, style=solid];
m12_175 -> m12_177  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_175 -> m12_181  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_175 -> m12_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_175 -> m12_186  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_175 -> m12_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_175 -> m12_191  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_168 -> m12_169  [key=0, style=solid];
m12_190 -> m12_191  [key=0, style=solid];
m12_169 -> m12_170  [key=0, style=solid];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_180  [key=0, style=solid];
m12_172 -> m12_173  [key=0, style=solid];
m12_172 -> m12_201  [key=2, style=dotted];
m12_172 -> m12_174  [color=darkseagreen4, key=1, label=client, style=dashed];
m12_173 -> m12_174  [key=0, style=solid];
m12_173 -> m12_202  [key=2, style=dotted];
m12_176 -> m12_177  [key=0, style=solid];
m12_177 -> m12_178  [key=0, style=solid];
m12_177 -> m12_31  [key=2, style=dotted];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_204  [key=2, style=dotted];
m12_179 -> m12_193  [key=0, style=solid];
m12_183 -> m12_184  [key=0, style=solid];
m12_183 -> m12_185  [key=0, style=solid];
m12_185 -> m12_192  [key=0, style=solid];
m12_185 -> m12_207  [key=2, style=dotted];
m12_184 -> m12_193  [key=0, style=solid];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_204  [key=2, style=dotted];
m12_189 -> m12_193  [key=0, style=solid];
m12_192 -> m12_193  [key=0, style=solid];
m12_193 -> m12_156  [color=blue, key=0, style=bold];
m12_117 -> m12_118  [key=0, style=solid];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_120  [key=2, style=dotted];
m12_119 -> m12_117  [color=blue, key=0, style=bold];
m12_240 -> m12_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_15  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_18  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_20  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_51  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_53  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_81  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_82  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_83  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_100  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_103  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_104  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_111  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_114  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_122  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_124  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_125  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_126  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_127  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_129  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_131  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_133  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_134  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_135  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_136  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_137  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_141  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_142  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_143  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_144  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_146  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_147  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_148  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_150  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_167  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_178  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_185  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_186  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_188  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_191  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_211  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_212  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_213  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_222  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_223  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_225  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_232  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m12_240 -> m12_233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.SubscriptionDataReader", style=dashed];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_5  [color=darkseagreen4, key=1, label=maxFailures, style=dashed];
m13_1 -> m13_6  [color=darkseagreen4, key=1, label=maxFailures, style=dashed];
m13_1 -> m13_7  [color=darkseagreen4, key=1, label=maxFailures, style=dashed];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_4  [color=red, key=1, label=totalFailures, style=dashed];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [key=0, style=solid];
m13_6 -> m13_8  [key=0, style=solid];
m13_6 -> m13_11  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_12  [key=2, style=dotted];
m13_3 -> m13_4  [color=red, key=0, style=solid];
m13_3 -> m13_9  [key=2, style=dotted];
m13_3 -> m13_14  [color=darkseagreen4, key=1, label=aroon, style=dashed];
m13_4 -> m13_5  [color=red, key=0, style=solid];
m13_4 -> m13_10  [color=red, key=2, style=dotted];
m13_4 -> m13_13  [color=red, key=1, label="lambda expression", style=dashed];
m13_4 -> m13_15  [color=red, key=1, label=totalFailures, style=dashed];
m13_4 -> m13_6  [color=red, key=1, label=totalFailures, style=dashed];
m13_4 -> m13_7  [color=red, key=1, label=totalFailures, style=dashed];
m13_8 -> m13_0  [color=blue, key=0, style=bold];
m13_13 -> m13_14  [key=0, style=solid];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_16  [key=0, style=solid];
m13_14 -> n10  [key=2, style=dotted];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_15  [color=darkseagreen4, key=1, label=totalFailures, style=dashed];
m13_16 -> m13_13  [color=blue, key=0, style=bold];
m13_18 -> m13_14  [color=darkseagreen4, key=1, label=aroon, style=dashed];
m13_19 -> m13_15  [color=darkseagreen4, key=1, label=totalFailures, style=dashed];
}
