digraph  {
n188 [label="QuantConnect.Algorithm.QCAlgorithm", span=""];
n0 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="65-65"];
n1 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="SubscriptionManager = new SubscriptionManager()", span="72-72"];
n2 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="Securities = new SecurityManager()", span="74-74"];
n11 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager()", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager()", span="51-51"];
n3 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="Transactions = new SecurityTransactionManager(Securities)", span="75-75"];
n12 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager()", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager()", span="60-60"];
n4 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="Portfolio = new SecurityPortfolioManager(Securities, Transactions, new CashBook(SubscriptionManager))", span="76-76"];
n13 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="57-57"];
n5 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="Notify = new NotificationManager(false)", span="77-77"];
n14 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Securities.CashBook)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Securities.CashBook)", span="62-62"];
n15 [cluster="QuantConnect.Securities.CashBook.CashBook(QuantConnect.Data.SubscriptionManager)", label="Entry QuantConnect.Securities.CashBook.CashBook(QuantConnect.Data.SubscriptionManager)", span="49-49"];
n6 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="_runMode = RunMode.Series", span="80-80"];
n16 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="56-56"];
n7 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="_locked = false", span="83-83"];
n8 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="_startDate = new DateTime(1998, 01, 01)", span="86-86"];
n9 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="_endDate = DateTime.Now.AddDays(-1)", span="87-87"];
n17 [cluster="System.DateTime.DateTime(int, int, int)", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
n10 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="Exit QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="65-65"];
n18 [cluster="System.DateTime.AddDays(double)", label="Entry System.DateTime.AddDays(double)", span="0-0"];
n19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="289-289"];
n20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", label="throw new NotImplementedException(''Please override the Intitialize() method'');", span="292-292"];
n21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", label="Exit QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="289-289"];
n22 [cluster="System.NotImplementedException.NotImplementedException(string)", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
n23 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", span="301-301"];
n24 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnTradeBar(System.Collections.Generic.Dictionary<string, QuantConnect.Data.Market.TradeBar>)", span="301-301"];
n25 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnTick(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>>)", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnTick(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>>)", span="313-313"];
n26 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnTick(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>>)", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnTick(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>>)", span="313-313"];
n27 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="341-341"];
n28 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="341-341"];
n29 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="350-350"];
n30 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="350-350"];
n31 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="358-358"];
n32 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="358-358"];
n33 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="368-368"];
n34 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="368-368"];
n35 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="378-378"];
n36 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", label="_time = frontier", span="380-380"];
n37 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="378-378"];
n38 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="390-390"];
n39 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", label="mode != RunMode.Parallel", span="392-392"];
n40 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", label="return;", span="392-392"];
n41 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", label="Debug(''Algorithm.SetRunMode(): RunMode-Parallel Type has been deprecated. Series analysis selected instead'')", span="393-393"];
n42 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", label="mode = RunMode.Series", span="394-394"];
n44 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="735-735"];
n43 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="390-390"];
n45 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="404-404"];
n46 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", label="SetCash((decimal)startingCash)", span="406-406"];
n47 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="404-404"];
n48 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="425-425"];
n49 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="415-415"];
n50 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", label="SetCash((decimal)startingCash)", span="417-417"];
n51 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="415-415"];
n52 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", label="!_locked", span="427-427"];
n53 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", label="Portfolio.SetCash(startingCash)", span="429-429"];
n54 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="433-433"];
n55 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="425-425"];
n57 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n56 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="408-408"];
n58 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="448-448"];
n59 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", label="var start = new DateTime(year, month, day)", span="452-452"];
n60 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", label="start = start.Date", span="455-455"];
n61 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", label="SetStartDate(start)", span="457-457"];
n62 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", label=Exception, span="459-459"];
n64 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="448-448"];
n65 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="506-506"];
n63 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", label="throw new Exception(''Date Invalid: '' + err.Message);", span="461-461"];
n66 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="473-473"];
n67 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", label="var end = new DateTime(year, month, day)", span="477-477"];
n68 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", label="end = end.Date.AddDays(1).Subtract(TimeSpan.FromTicks(1))", span="480-480"];
n69 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", label="SetEndDate(end)", span="482-482"];
n73 [cluster="System.TimeSpan.FromTicks(long)", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
n74 [cluster="System.DateTime.Subtract(System.TimeSpan)", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
n70 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", label=Exception, span="484-484"];
n72 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="473-473"];
n75 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="544-544"];
n71 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", label="throw new Exception(''Date Invalid: '' + err.Message);", span="486-486"];
n76 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="495-495"];
n77 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", label="_algorithmId = algorithmId", span="497-497"];
n78 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="495-495"];
n79 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", label="start < (new DateTime(1900, 01, 01))", span="510-510"];
n82 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", label="start > _endDate", span="518-518"];
n84 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", label="start = start.RoundDown(TimeSpan.FromDays(1))", span="525-525"];
n80 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="512-512"];
n81 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", label="_endDate != new DateTime()", span="516-516"];
n89 [cluster="System.DateTime.DateTime()", label="Entry System.DateTime.DateTime()", span="0-0"];
n83 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", label="throw new Exception(''Please select start date less than end date.'');", span="520-520"];
n85 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", label="!_locked", span="528-528"];
n90 [cluster="System.TimeSpan.FromDays(double)", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
n91 [cluster="System.DateTime.RoundDown(System.TimeSpan)", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="277-277"];
n86 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", label="_startDate = start", span="530-530"];
n87 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="534-534"];
n88 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="506-506"];
n92 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", label="end > DateTime.Now.Date.AddDays(-1)", span="548-548"];
n95 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", label="end < _startDate", span="556-556"];
n97 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="563-563"];
n93 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", label="end = DateTime.Now.Date.AddDays(-1)", span="550-550"];
n94 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", label="_startDate != new DateTime()", span="554-554"];
n96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", label="throw new Exception(''Please select end date greater than start date.'');", span="558-558"];
n98 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", label="!_locked", span="566-566"];
n102 [cluster="System.DateTime.AddTicks(long)", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
n99 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", label="_endDate = end", span="568-568"];
n100 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="572-572"];
n101 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="544-544"];
n103 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="580-580"];
n104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", label="_locked = true", span="582-582"];
n105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="580-580"];
n106 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="588-588"];
n107 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", label="!_locked", span="590-590"];
n108 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", label="_liveMode = live", span="592-592"];
n109 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", label="Notify = new NotificationManager(live)", span="593-593"];
n110 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="588-588"];
n111 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", span="604-604"];
n112 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", label="!_locked", span="606-606"];
n113 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", label="Securities.SetLimits(minuteLimit, secondLimit, tickLimit)", span="608-608"];
n114 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAssetLimits(int, int, int)", span="604-604"];
n115 [cluster="QuantConnect.Securities.SecurityManager.SetLimits(int, int, int)", label="Entry QuantConnect.Securities.SecurityManager.SetLimits(int, int, int)", span="391-391"];
n116 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="620-620"];
n117 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", label="AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours)", span="622-622"];
n118 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="620-620"];
n119 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="635-635"];
n120 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="!_locked", span="639-639"];
n121 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="symbol = symbol.ToUpper()", span="641-641"];
n122 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="leverage <= 0", span="643-643"];
n123 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label=securityType, span="645-645"];
n128 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="Securities.Add(symbol, securityType, resolution, fillDataForward, leverage, extendedMarketHours, isDynamicallyLoadedData: false)", span="657-657"];
n129 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="SubscriptionManager.Add(securityType, symbol, resolution, fillDataForward, extendedMarketHours)", span="660-660"];
n130 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="throw new Exception(''Algorithm.AddSecurity(): Cannot add another security after algorithm running.'');", span="665-665"];
n134 [cluster="string.ToUpper()", label="Entry string.ToUpper()", span="0-0"];
n124 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="SecurityType.Equity", span="647-647"];
n126 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="SecurityType.Forex", span="650-650"];
n125 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="leverage = 2", span="648-648"];
n127 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="leverage = 50", span="651-651"];
n135 [cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.SecurityType, QuantConnect.Resolution, bool, decimal, bool, bool)", label="Entry QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.SecurityType, QuantConnect.Resolution, bool, decimal, bool, bool)", span="109-109"];
n131 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label=Exception, span="668-668"];
n133 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="635-635"];
n136 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="82-82"];
n132 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", label="Error(''Algorithm.AddSecurity(): '' + err.Message)", span="670-670"];
n137 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="760-760"];
n138 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="681-681"];
n139 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", label=_locked, span="683-683"];
n141 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m, isTradeBar: false, hasVolume: false)", span="689-689"];
n140 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", label="return;", span="683-683"];
n142 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="681-681"];
n143 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", span="718-718"];
n144 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", span="700-700"];
n145 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", label=_locked, span="702-702"];
n147 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m, isTradeBar: isTradeBar, hasVolume: hasVolume)", span="704-704"];
n146 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", label="return;", span="702-702"];
n148 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", span="700-700"];
n149 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", label=_locked, span="720-720"];
n151 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", label="SubscriptionManager.Add(typeof(T), SecurityType.Base, symbol, resolution, fillDataForward, extendedMarketHours: true, isTradeBar: isTradeBar, hasVolume: hasVolume)", span="723-723"];
n152 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", label="Securities.Add(symbol, SecurityType.Base, resolution, fillDataForward, leverage, extendedMarketHours: true, isDynamicallyLoadedData: true)", span="726-726"];
n150 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", label="return;", span="720-720"];
n154 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool)", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool)", span="105-105"];
n153 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal, bool, bool)", span="718-718"];
n155 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="737-737"];
n157 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", label="_debugMessages.Add(message)", span="738-738"];
n158 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", label="_previousDebugMessage = message", span="739-739"];
n156 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", label="return;", span="737-737"];
n160 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n159 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="735-735"];
n161 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="748-748"];
n162 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", label="message == ''''", span="750-750"];
n164 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", label="_logMessages.Add(message)", span="751-751"];
n163 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", label="return;", span="750-750"];
n165 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="748-748"];
n166 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", label="message == '''' || _previousErrorMessage == message", span="762-762"];
n168 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", label="_errorMessages.Add(message)", span="763-763"];
n169 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", label="_previousErrorMessage = message", span="764-764"];
n167 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", label="return;", span="762-762"];
n170 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="760-760"];
n171 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="773-773"];
n172 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", label="var message = error.Message", span="775-775"];
n173 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", label="message == '''' || _previousErrorMessage == message", span="776-776"];
n175 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", label="_errorMessages.Add(message)", span="777-777"];
n176 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", label="_previousErrorMessage = message", span="778-778"];
n174 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", label="return;", span="776-776"];
n177 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="773-773"];
n178 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="785-785"];
n179 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", label="Debug(''Quit(): '' + message)", span="787-787"];
n180 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", label="_quit = true", span="788-788"];
n181 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="785-785"];
n182 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="798-798"];
n183 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", label="_quit = quit", span="800-800"];
n184 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="798-798"];
n185 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetQuit()", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetQuit()", span="810-810"];
n186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetQuit()", label="return _quit;", span="812-812"];
n187 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetQuit()", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetQuit()", span="810-810"];
m1_164 [cluster="Unk.GetBrokerageSymbol", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.GetBrokerageSymbol", span=""];
m1_50 [cluster="Unk.login", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.login", span=""];
m1_178 [cluster="QuantConnect.Holding.Holding()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m1_401 [cluster="QuantConnect.Brokerages.Fxcm.FxcmSymbolMapper.IsKnownLeanSymbol(QuantConnect.Symbol)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmSymbolMapper.IsKnownLeanSymbol(QuantConnect.Symbol)", span="237-237"];
m1_67 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m1_321 [cluster="Unk.getSide", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getSide", span=""];
m1_52 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m1_109 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(string)", span="78-78"];
m1_56 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.LoadOpenOrders()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.LoadOpenOrders()", span="100-100"];
m1_422 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m1_231 [cluster="Unk.getCurrency", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getCurrency", span=""];
m1_53 [cluster="QuantConnect.Brokerages.BrokerageException.BrokerageException(string, System.Exception)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.BrokerageException.BrokerageException(string, System.Exception)", span="38-38"];
m1_404 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_47 [cluster="Unk.registerGenericMessageListener", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.registerGenericMessageListener", span=""];
m1_424 [cluster="System.DateTime.ToString(string)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m1_238 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="459-459"];
m1_239 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.PlaceOrder(): {0}'', order)", span="461-461"];
m1_242 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="order.Direction != OrderDirection.Buy && order.Direction != OrderDirection.Sell", span="466-466"];
m1_244 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="var fxcmSymbol = _symbolMapper.GetBrokerageSymbol(order.Symbol)", span="469-469"];
m1_245 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="var orderSide = order.Direction == OrderDirection.Buy ? SideFactory.BUY : SideFactory.SELL", span="470-470"];
m1_246 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="var quantity = (double)order.AbsoluteQuantity", span="471-471"];
m1_248 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="order.Type", span="474-474"];
m1_252 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="var limitPrice = (double)((LimitOrder)order).LimitPrice", span="481-481"];
m1_257 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="var stopPrice = (double)((StopMarketOrder)order).StopPrice", span="488-488"];
m1_261 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new NotSupportedException(''FxcmBrokerage.PlaceOrder(): Order type '' + order.Type + '' is not supported.'');", span="495-495"];
m1_266 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="_mapRequestsToOrders[_currentRequest] = order", span="503-503"];
m1_240 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="!IsConnected", span="463-463"];
m1_241 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new InvalidOperationException(''FxcmBrokerage.PlaceOrder(): Unable to place order while not connected.'');", span="464-464"];
m1_243 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new ArgumentException(''FxcmBrokerage.PlaceOrder(): Invalid Order Direction'');", span="467-467"];
m1_250 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="orderRequest = MessageGenerator.generateMarketOrder(_accountId, quantity, orderSide, fxcmSymbol, '''')", span="477-477"];
m1_253 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="orderRequest = MessageGenerator.generateOpenOrder(limitPrice, _accountId, quantity, orderSide, fxcmSymbol, '''')", span="482-482"];
m1_258 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="orderRequest = MessageGenerator.generateOpenOrder(stopPrice, _accountId, quantity, orderSide, fxcmSymbol, '''')", span="489-489"];
m1_247 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="OrderSingle orderRequest", span="473-473"];
m1_249 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="OrderType.Market", span="476-476"];
m1_251 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="OrderType.Limit", span="480-480"];
m1_256 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="OrderType.StopMarket", span="487-487"];
m1_254 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="orderRequest.setOrdType(OrdTypeFactory.LIMIT)", span="483-483"];
m1_255 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="orderRequest.setTimeInForce(TimeInForceFactory.GOOD_TILL_CANCEL)", span="484-484"];
m1_259 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="orderRequest.setOrdType(OrdTypeFactory.STOP)", span="490-490"];
m1_260 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="orderRequest.setTimeInForce(TimeInForceFactory.GOOD_TILL_CANCEL)", span="491-491"];
m1_265 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="_currentRequest = _gateway.sendMessage(orderRequest)", span="502-502"];
m1_262 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="_isOrderSubmitRejected = false", span="498-498"];
m1_263 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="AutoResetEvent autoResetEvent", span="499-499"];
m1_264 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label=_locker, span="500-500"];
m1_267 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="autoResetEvent = new AutoResetEvent(false)", span="504-504"];
m1_268 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="_mapRequestsToAutoResetEvents[_currentRequest] = autoResetEvent", span="505-505"];
m1_269 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="!autoResetEvent.WaitOne(ResponseTimeout)", span="507-507"];
m1_270 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new TimeoutException(string.Format(''FxcmBrokerage.PlaceOrder(): Operation took longer than {0} seconds.'', (decimal)ResponseTimeout / 1000));", span="508-508"];
m1_271 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="return !_isOrderSubmitRejected;", span="510-510"];
m1_272 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="459-459"];
m1_142 [cluster="Unk.ToList", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.ToList", span=""];
m1_198 [cluster="Unk.getSymbol", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getSymbol", span=""];
m1_43 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m1_349 [cluster="Unk.generateOrderCancelRequest", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.generateOrderCancelRequest", span=""];
m1_228 [cluster="Unk.getPositionQty", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getPositionQty", span=""];
m1_405 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToFxcmInterval(QuantConnect.Resolution)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToFxcmInterval(QuantConnect.Resolution)", span="192-192"];
m1_138 [cluster="string.Format(string, object)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_139 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_103 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(string)", span="68-68"];
m1_417 [cluster="UTCTimeOnly.cstr", file="CreateStreamReaderErrorEventArgs.cs", label="Entry UTCTimeOnly.cstr", span=""];
m1_46 [cluster="Unk.createGateway", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.createGateway", span=""];
m1_49 [cluster="FXCMLoginProperties.cstr", file="CreateStreamReaderErrorEventArgs.cs", label="Entry FXCMLoginProperties.cstr", span=""];
m1_317 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_106 [cluster="Unk.logout", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.logout", span=""];
m1_324 [cluster="Unk.generateOrderReplaceRequest", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.generateOrderReplaceRequest", span=""];
m1_161 [cluster="Unk.GroupBy", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.GroupBy", span=""];
m1_193 [cluster="QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Symbol.implicit operator QuantConnect.Symbol(string)", span="419-419"];
m1_237 [cluster="Unk.GetUsdConversion", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.GetUsdConversion", span=""];
m1_133 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetOpenOrders()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetOpenOrders()", span="339-339"];
m1_134 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetOpenOrders()", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(string.Format(''FxcmBrokerage.GetOpenOrders(): Located {0} orders'', _openOrders.Count))", span="341-341"];
m1_135 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetOpenOrders()", file="CreateStreamReaderErrorEventArgs.cs", label="var orders = _openOrders.Values.ToList()\r\n                .Where(x => OrderIsOpen(x.getFXCMOrdStatus().getCode()))\r\n                .Select(ConvertOrder)\r\n                .ToList()", span="342-345"];
m1_136 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetOpenOrders()", file="CreateStreamReaderErrorEventArgs.cs", label="return orders;", span="346-346"];
m1_137 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetOpenOrders()", file="CreateStreamReaderErrorEventArgs.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetOpenOrders()", span="339-339"];
m1_281 [cluster="System.NotSupportedException.NotSupportedException(string)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m1_284 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m1_69 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m1_54 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.LoadInstruments()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.LoadInstruments()", span="62-62"];
m1_57 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.LoadOpenPositions()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.LoadOpenPositions()", span="113-113"];
m1_140 [cluster="Unk.Where", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.Where", span=""];
m1_418 [cluster="Unk.setFXCMStartTime", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setFXCMStartTime", span=""];
m1_68 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="105-105"];
m1_411 [cluster="Unk.setResponseFormat", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setResponseFormat", span=""];
m1_222 [cluster="System.Collections.Generic.List<T>.List()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_412 [cluster="Unk.setFXCMTimingInterval", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setFXCMTimingInterval", span=""];
m1_325 [cluster="Unk.setInstrument", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setInstrument", span=""];
m1_187 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Entry lambda expression", span="370-370"];
m1_65 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Error(exception)", span="148-148"];
m1_87 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.login(loginProperties)", span="235-235"];
m1_97 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Error(exception)", span="253-253"];
m1_100 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Error(exception)", span="262-262"];
m1_58 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Entry lambda expression", span="131-151"];
m1_59 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="!_cancellationTokenSource.IsCancellationRequested", span="133-133"];
m1_60 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="OrderEvent orderEvent", span="137-137"];
m1_66 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Exit lambda expression", span="131-151"];
m1_61 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="!_orderEventQueue.TryDequeue(out orderEvent)", span="138-138"];
m1_62 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Thread.Sleep(1)", span="140-140"];
m1_63 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="OnOrderEvent(orderEvent)", span="144-144"];
m1_64 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label=Exception, span="146-146"];
m1_70 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Entry lambda expression", span="189-264"];
m1_71 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="_lastReadyMessageTime = DateTime.UtcNow", span="191-191"];
m1_72 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="!_cancellationTokenSource.IsCancellationRequested", span="195-195"];
m1_73 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="TimeSpan elapsed", span="197-197"];
m1_99 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label=Exception, span="260-260"];
m1_101 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Exit lambda expression", span="189-264"];
m1_74 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label=_lockerConnectionMonitor, span="198-198"];
m1_75 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="elapsed = DateTime.UtcNow - _lastReadyMessageTime", span="200-200"];
m1_76 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="!_connectionLost && elapsed > TimeSpan.FromSeconds(10)", span="203-203"];
m1_77 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="_connectionLost = true", span="205-205"];
m1_79 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="_connectionLost && IsWithinTradingHours()", span="210-210"];
m1_78 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="OnMessage(BrokerageMessageEvent.Disconnected(''Connection with FXCM server lost. '' +\r\n                                                                             ''This could be because of internet connectivity issues. ''))", span="207-208"];
m1_80 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.ConnectionMonitorThread(): Attempting reconnection...'')", span="212-212"];
m1_98 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Thread.Sleep(5000)", span="257-257"];
m1_81 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.logout()", span="219-219"];
m1_82 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label=Exception, span="221-221"];
m1_83 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.removeGenericMessageListener(this)", span="227-227"];
m1_84 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.removeStatusMessageListener(this)", span="228-228"];
m1_85 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.registerGenericMessageListener(this)", span="231-231"];
m1_86 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.registerStatusMessageListener(this)", span="232-232"];
m1_88 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="LoadInstruments()", span="238-238"];
m1_89 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="!EnableOnlyHistoryRequests", span="239-239"];
m1_90 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="LoadAccounts()", span="241-241"];
m1_93 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="_connectionLost = false", span="246-246"];
m1_91 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="LoadOpenOrders()", span="242-242"];
m1_92 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="LoadOpenPositions()", span="243-243"];
m1_94 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="OnMessage(BrokerageMessageEvent.Reconnected(''Connection with FXCM server restored.''))", span="248-248"];
m1_95 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label=Exception, span="250-250"];
m1_96 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.ConnectionMonitorThread(): reconnect failed.'')", span="252-252"];
m1_143 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Entry lambda expression", span="343-343"];
m1_144 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="OrderIsOpen(x.getFXCMOrdStatus().getCode())", span="343-343"];
m1_145 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Exit lambda expression", span="343-343"];
m1_169 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Entry lambda expression", span="361-361"];
m1_172 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Entry lambda expression", span="362-362"];
m1_175 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Entry lambda expression", span="363-371"];
m1_190 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Entry lambda expression", span="376-376"];
m1_194 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Entry lambda expression", span="381-381"];
m1_170 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="x.Quantity != 0", span="361-361"];
m1_171 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Exit lambda expression", span="361-361"];
m1_173 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="x.Symbol", span="362-362"];
m1_174 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Exit lambda expression", span="362-362"];
m1_176 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="new Holding\r\n                {\r\n                    Symbol = group.Key,\r\n                    Type = group.First().Type,\r\n                    AveragePrice = group.Sum(x => x.AveragePrice * x.Quantity) / group.Sum(x => x.Quantity),\r\n                    ConversionRate = group.First().ConversionRate,\r\n                    CurrencySymbol = group.First().CurrencySymbol,\r\n                    Quantity = group.Sum(x => x.Quantity)\r\n                }", span="363-371"];
m1_177 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Exit lambda expression", span="363-371"];
m1_181 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Entry lambda expression", span="367-367"];
m1_184 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Entry lambda expression", span="367-367"];
m1_182 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="x.AveragePrice * x.Quantity", span="367-367"];
m1_183 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Exit lambda expression", span="367-367"];
m1_185 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="x.Quantity", span="367-367"];
m1_186 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Exit lambda expression", span="367-367"];
m1_188 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="x.Quantity", span="370-370"];
m1_189 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Exit lambda expression", span="370-370"];
m1_191 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="_symbolMapper.GetBrokerageSymbol(x.Symbol)", span="376-376"];
m1_192 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Exit lambda expression", span="376-376"];
m1_195 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="x.getInstrument().getSymbol()", span="381-381"];
m1_196 [cluster="lambda expression", file="CreateStreamReaderErrorEventArgs.cs", label="Exit lambda expression", span="381-381"];
m1_230 [cluster="Unk.getQty", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getQty", span=""];
m1_108 [cluster="Unk.removeStatusMessageListener", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.removeStatusMessageListener", span=""];
m1_224 [cluster="Unk.getCashOutstanding", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getCashOutstanding", span=""];
m1_409 [cluster="MarketDataRequest.cstr", file="CreateStreamReaderErrorEventArgs.cs", label="Entry MarketDataRequest.cstr", span=""];
m1_419 [cluster="Unk.setFXCMEndDate", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setFXCMEndDate", span=""];
m1_410 [cluster="Unk.setSubscriptionRequestType", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setSubscriptionRequestType", span=""];
m1_199 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", span="399-399"];
m1_200 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.GetCashBalance()'')", span="401-401"];
m1_201 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="var cashBook = new List<Cash>()", span="402-402"];
m1_202 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="cashBook.Add(new Cash(_fxcmAccountCurrency,\r\n                        Convert.ToDecimal(_accounts[_accountId].getCashOutstanding()),\r\n                        GetUsdConversion(_fxcmAccountCurrency)))", span="405-407"];
m1_212 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="var baseCurrencyObject = (from cash in cashBook where cash.Symbol == baseCurrency select cash).FirstOrDefault()", span="427-427"];
m1_215 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="cashBook.Add(new Cash(baseCurrency, baseQuantity, GetUsdConversion(baseCurrency)))", span="436-436"];
m1_216 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="var quoteCurrencyObject = (from cash in cashBook where cash.Symbol == quoteCurrency select cash).FirstOrDefault()", span="439-439"];
m1_219 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="cashBook.Add(new Cash(quoteCurrency, quoteQuantity, GetUsdConversion(quoteCurrency)))", span="448-448"];
m1_220 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="return cashBook;", span="451-451"];
m1_203 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="_openPositions.Values", span="409-409"];
m1_204 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="var settlementPrice = Convert.ToDecimal(trade.getSettlPrice())", span="412-412"];
m1_205 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="var direction = trade.getPositionQty().getLongQty() > 0 ? 1 : -1", span="414-414"];
m1_206 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="var quantity = Convert.ToDecimal(trade.getPositionQty().getQty())", span="416-416"];
m1_209 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="var baseCurrency = trade.getCurrency()", span="422-422"];
m1_210 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="var quoteCurrency = FxcmSymbolMapper.ConvertFxcmSymbolToLeanSymbol(trade.getInstrument().getSymbol())", span="424-424"];
m1_208 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="var quoteQuantity = -direction * quantity * settlementPrice", span="420-420"];
m1_207 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="var baseQuantity = direction * quantity", span="418-418"];
m1_214 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="baseCurrencyObject.AddAmount(baseQuantity)", span="431-431"];
m1_218 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="quoteCurrencyObject.AddAmount(quoteQuantity)", span="443-443"];
m1_211 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="quoteCurrency = quoteCurrency.Substring(quoteCurrency.Length - 3)", span="425-425"];
m1_213 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="baseCurrencyObject != null", span="429-429"];
m1_217 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="quoteCurrencyObject != null", span="441-441"];
m1_221 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", file="CreateStreamReaderErrorEventArgs.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetCashBalance()", span="399-399"];
m1_42 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m1_11 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", span="120-120"];
m1_12 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label=IsConnected, span="122-122"];
m1_13 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="return;", span="122-122"];
m1_14 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.Connect()'')", span="124-124"];
m1_15 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="_cancellationTokenSource = new CancellationTokenSource()", span="126-126"];
m1_16 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="!EnableOnlyHistoryRequests", span="129-129"];
m1_17 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="_orderEventThread = new Thread(() =>\r\n                {\r\n                    while (!_cancellationTokenSource.IsCancellationRequested)\r\n                    {\r\n                        try\r\n                        {\r\n                            OrderEvent orderEvent;\r\n                            if (!_orderEventQueue.TryDequeue(out orderEvent))\r\n                            {\r\n                                Thread.Sleep(1);\r\n                                continue;\r\n                            }\r\n\r\n                            OnOrderEvent(orderEvent);\r\n                        }\r\n                        catch (Exception exception)\r\n                        {\r\n                            Log.Error(exception);\r\n                        }\r\n                    }\r\n                })", span="131-151"];
m1_21 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway = GatewayFactory.createGateway()", span="160-160"];
m1_18 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="_orderEventThread.Start()", span="152-152"];
m1_19 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="!_orderEventThread.IsAlive", span="153-153"];
m1_20 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="Thread.Sleep(1)", span="155-155"];
m1_22 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.registerGenericMessageListener(this)", span="163-163"];
m1_23 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.registerStatusMessageListener(this)", span="164-164"];
m1_24 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="var loginProperties = new FXCMLoginProperties(_userName, _password, _terminal, _server)", span="167-167"];
m1_25 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.login(loginProperties)", span="172-172"];
m1_31 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="_connectionMonitorThread = new Thread(() =>\r\n                {\r\n                    _lastReadyMessageTime = DateTime.UtcNow;\r\n\r\n                    try\r\n                    {\r\n                        while (!_cancellationTokenSource.IsCancellationRequested)\r\n                        {\r\n                            TimeSpan elapsed;\r\n                            lock (_lockerConnectionMonitor)\r\n                            {\r\n                                elapsed = DateTime.UtcNow - _lastReadyMessageTime;\r\n                            }\r\n\r\n                            if (!_connectionLost && elapsed > TimeSpan.FromSeconds(10))\r\n                            {\r\n                                _connectionLost = true;\r\n\r\n                                OnMessage(BrokerageMessageEvent.Disconnected(''Connection with FXCM server lost. '' +\r\n                                                                             ''This could be because of internet connectivity issues. ''));\r\n                            }\r\n                            else if (_connectionLost && IsWithinTradingHours())\r\n                            {\r\n                                Log.Trace(''FxcmBrokerage.ConnectionMonitorThread(): Attempting reconnection...'');\r\n\r\n                                try\r\n                                {\r\n                                    // log out\r\n                                    try\r\n                                    {\r\n                                        _gateway.logout();\r\n                                    }\r\n                                    catch (Exception)\r\n                                    {\r\n                                        // ignored\r\n                                    }\r\n\r\n                                    // remove the message listeners\r\n                                    _gateway.removeGenericMessageListener(this);\r\n                                    _gateway.removeStatusMessageListener(this);\r\n\r\n                                    // register the message listeners with the gateway\r\n                                    _gateway.registerGenericMessageListener(this);\r\n                                    _gateway.registerStatusMessageListener(this);\r\n\r\n                                    // log in\r\n                                    _gateway.login(loginProperties);\r\n\r\n                                    // load instruments, accounts, orders, positions\r\n                                    LoadInstruments();\r\n                                    if (!EnableOnlyHistoryRequests)\r\n                                    {\r\n                                        LoadAccounts();\r\n                                        LoadOpenOrders();\r\n                                        LoadOpenPositions();\r\n                                    }\r\n\r\n                                    _connectionLost = false;\r\n\r\n                                    OnMessage(BrokerageMessageEvent.Reconnected(''Connection with FXCM server restored.''));\r\n                                }\r\n                                catch (Exception exception)\r\n                                {\r\n                                    Log.Trace(''FxcmBrokerage.ConnectionMonitorThread(): reconnect failed.'');\r\n                                    Log.Error(exception);\r\n                                }\r\n                            }\r\n\r\n                            Thread.Sleep(5000);\r\n                        }\r\n                    }\r\n                    catch (Exception exception)\r\n                    {\r\n                        Log.Error(exception);\r\n                    }\r\n                })", span="189-264"];
m1_26 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label=Exception, span="174-174"];
m1_30 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="!EnableOnlyHistoryRequests", span="187-187"];
m1_27 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="var message =\r\n                    err.Message.Contains(''ORA-20101'') ? ''Incorrect login credentials'' :\r\n                    err.Message.Contains(''ORA-20003'') ? ''API connections are not available on Mini accounts. If you have a standard account contact api@fxcm.com to enable API access'' :\r\n                    err.Message", span="176-179"];
m1_28 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="_cancellationTokenSource.Cancel()", span="181-181"];
m1_29 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="throw new BrokerageException(message, err.InnerException);", span="183-183"];
m1_35 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="LoadInstruments()", span="273-273"];
m1_32 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="_connectionMonitorThread.Start()", span="265-265"];
m1_33 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="!_connectionMonitorThread.IsAlive", span="266-266"];
m1_34 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="Thread.Sleep(1)", span="268-268"];
m1_36 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="!EnableOnlyHistoryRequests", span="274-274"];
m1_37 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="LoadAccounts()", span="276-276"];
m1_38 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="LoadOpenOrders()", span="277-277"];
m1_39 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="LoadOpenPositions()", span="278-278"];
m1_40 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", file="CreateStreamReaderErrorEventArgs.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Connect()", span="120-120"];
m1_320 [cluster="Unk.getOrderID", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getOrderID", span=""];
m1_115 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", span="302-302"];
m1_116 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.Disconnect()'')", span="304-304"];
m1_117 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway != null", span="306-306"];
m1_118 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.isConnected()", span="311-311"];
m1_123 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="_cancellationTokenSource != null", span="325-325"];
m1_119 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.logout()", span="312-312"];
m1_120 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label=Exception, span="314-314"];
m1_121 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.removeGenericMessageListener(this)", span="320-320"];
m1_122 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="_gateway.removeStatusMessageListener(this)", span="321-321"];
m1_124 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="_cancellationTokenSource.Cancel()", span="325-325"];
m1_125 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="!EnableOnlyHistoryRequests", span="327-327"];
m1_126 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="_orderEventThread != null", span="329-329"];
m1_127 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="_orderEventThread.Join()", span="329-329"];
m1_128 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="_connectionMonitorThread != null", span="330-330"];
m1_129 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="_connectionMonitorThread.Join()", span="330-330"];
m1_130 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", file="CreateStreamReaderErrorEventArgs.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.Disconnect()", span="302-302"];
m1_426 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="571-571"];
m1_197 [cluster="Unk.getInstrument", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getInstrument", span=""];
m1_286 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="518-518"];
m1_287 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.UpdateOrder(): {0}'', order)", span="520-520"];
m1_290 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="!order.BrokerId.Any()", span="525-525"];
m1_293 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="var fxcmOrderId = order.BrokerId[0].ToString()", span="532-532"];
m1_298 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="order.Type", span="539-539"];
m1_300 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="price = (double)((LimitOrder)order).LimitPrice", span="542-542"];
m1_302 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="price = (double)((StopMarketOrder)order).StopPrice", span="546-546"];
m1_307 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="orderReplaceRequest.setOrderQty((double)order.AbsoluteQuantity)", span="556-556"];
m1_288 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="!IsConnected", span="522-522"];
m1_289 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new InvalidOperationException(''FxcmBrokerage.UpdateOrder(): Unable to update order while not connected.'');", span="523-523"];
m1_291 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.UpdateOrder(): Unable to update order without BrokerId.'')", span="528-528"];
m1_292 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="return false;", span="529-529"];
m1_294 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="ExecutionReport fxcmOrder", span="534-534"];
m1_295 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="!_openOrders.TryGetValue(fxcmOrderId, out fxcmOrder)", span="535-535"];
m1_296 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new ArgumentException(''FxcmBrokerage.UpdateOrder(): FXCM order id not found: '' + fxcmOrderId);", span="536-536"];
m1_297 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="double price", span="538-538"];
m1_305 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="var orderReplaceRequest = MessageGenerator.generateOrderReplaceRequest('''', fxcmOrder.getOrderID(), fxcmOrder.getSide(), fxcmOrder.getOrdType(), price, fxcmOrder.getAccount())", span="554-554"];
m1_306 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="orderReplaceRequest.setInstrument(fxcmOrder.getInstrument())", span="555-555"];
m1_299 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="OrderType.Limit", span="541-541"];
m1_301 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="OrderType.StopMarket", span="545-545"];
m1_303 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new NotSupportedException(''FxcmBrokerage.UpdateOrder(): Invalid order type.'');", span="550-550"];
m1_304 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="_isOrderUpdateOrCancelRejected = false", span="553-553"];
m1_310 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="_currentRequest = _gateway.sendMessage(orderReplaceRequest)", span="561-561"];
m1_308 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="AutoResetEvent autoResetEvent", span="558-558"];
m1_309 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label=_locker, span="559-559"];
m1_311 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="autoResetEvent = new AutoResetEvent(false)", span="562-562"];
m1_312 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="_mapRequestsToAutoResetEvents[_currentRequest] = autoResetEvent", span="563-563"];
m1_313 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="!autoResetEvent.WaitOne(ResponseTimeout)", span="565-565"];
m1_314 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new TimeoutException(string.Format(''FxcmBrokerage.UpdateOrder(): Operation took longer than {0} seconds.'', (decimal)ResponseTimeout / 1000));", span="566-566"];
m1_315 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="return !_isOrderUpdateOrCancelRejected;", span="568-568"];
m1_316 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="518-518"];
m1_276 [cluster="QuantConnect.Brokerages.Fxcm.FxcmSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="152-152"];
m1_223 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m1_370 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="mdr.setMDEntryTypeSet(MarketDataRequest.MDENTRYTYPESET_ALL)", span="650-650"];
m1_350 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="616-616"];
m1_351 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="!_symbolMapper.IsKnownLeanSymbol(request.Symbol)", span="618-618"];
m1_353 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="yield break;", span="621-621"];
m1_399 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="yield return data;", span="726-726"];
m1_352 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.GetHistory(): Invalid symbol: {0}, no history returned'', request.Symbol.Value)", span="620-620"];
m1_355 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="!_symbolExchangeTimeZones.TryGetValue(request.Symbol, out exchangeTimeZone)", span="626-626"];
m1_356 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(Market.FXCM, request.Symbol, request.Symbol.SecurityType).TimeZone", span="628-628"];
m1_357 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="_symbolExchangeTimeZones.Add(request.Symbol, exchangeTimeZone)", span="629-629"];
m1_358 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="var interval = ToFxcmInterval(request.Resolution)", span="632-632"];
m1_361 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="var end = request.EndTimeUtc", span="638-638"];
m1_363 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="end > request.StartTimeUtc", span="641-641"];
m1_364 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Debug(string.Format(''FxcmBrokerage.GetHistory(): Requesting {0:O} to {1:O}'', end, request.StartTimeUtc))", span="643-643"];
m1_371 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="mdr.setFXCMStartDate(new UTCDate(ToJavaDateUtc(request.StartTimeUtc)))", span="652-652"];
m1_372 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="mdr.setFXCMStartTime(new UTCTimeOnly(ToJavaDateUtc(request.StartTimeUtc)))", span="653-653"];
m1_375 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="mdr.addRelatedSymbol(_fxcmInstruments[_symbolMapper.GetBrokerageSymbol(request.Symbol)])", span="656-656"];
m1_383 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="request.StartTimeUtc.AddSeconds(300) >= end", span="672-672"];
m1_385 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.GetHistory(): Request for {0} ended at {1:O}'', request.Symbol.Value, end)", span="680-680"];
m1_389 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.GetHistory(): Maximum attempts reached for: '' + request.Symbol.Value)", span="693-693"];
m1_391 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.GetHistory(): Attempt '' + attempt + '' for: '' + request.Symbol.Value + '' ended at '' + lastEndTime.ToString(''O''))", span="699-699"];
m1_396 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="end = request.Resolution == Resolution.Tick ? firstDateUtc.AddMilliseconds(-1) : firstDateUtc.AddSeconds(-1)", span="713-713"];
m1_397 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="request.StartTimeUtc.AddSeconds(10) >= end", span="715-715"];
m1_354 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="DateTimeZone exchangeTimeZone", span="625-625"];
m1_394 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="var firstDateUtc = _lastHistoryChunk[0].Time.ConvertToUtc(exchangeTimeZone)", span="709-709"];
m1_359 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="var history = new List<BaseData>()", span="635-635"];
m1_369 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="mdr.setFXCMTimingInterval(interval)", span="649-649"];
m1_360 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="var lastEndTime = DateTime.MinValue", span="636-636"];
m1_393 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="history.InsertRange(0, _lastHistoryChunk)", span="706-706"];
m1_398 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label=history, span="724-724"];
m1_384 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="end == lastEndTime", span="678-678"];
m1_386 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="EnableOnlyHistoryRequests && lastEndTime != DateTime.MinValue", span="685-685"];
m1_362 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="var attempt = 1", span="640-640"];
m1_373 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="mdr.setFXCMEndDate(new UTCDate(ToJavaDateUtc(end)))", span="654-654"];
m1_374 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="mdr.setFXCMEndTime(new UTCTimeOnly(ToJavaDateUtc(end)))", span="655-655"];
m1_387 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new TimeoutException(string.Format(''FxcmBrokerage.GetHistory(): History operation ending in {0:O} took longer than {1} seconds. This may be because there is no data, retrying...'', end, (decimal)HistoryResponseTimeout / 1000));", span="687-687"];
m1_390 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="lastEndTime = end", span="698-698"];
m1_395 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="end != firstDateUtc", span="710-710"];
m1_388 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="++attempt > MaximumHistoryRetryAttempts", span="691-691"];
m1_365 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="_lastHistoryChunk.Clear()", span="644-644"];
m1_366 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="var mdr = new MarketDataRequest()", span="646-646"];
m1_367 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="mdr.setSubscriptionRequestType(SubscriptionRequestTypeFactory.SNAPSHOT)", span="647-647"];
m1_368 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="mdr.setResponseFormat(IFixMsgTypeDefs.__Fields.MSGTYPE_FXCMRESPONSE)", span="648-648"];
m1_378 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="_currentRequest = _gateway.sendMessage(mdr)", span="661-661"];
m1_376 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="AutoResetEvent autoResetEvent", span="658-658"];
m1_377 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label=_locker, span="659-659"];
m1_379 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="autoResetEvent = new AutoResetEvent(false)", span="662-662"];
m1_380 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="_mapRequestsToAutoResetEvents[_currentRequest] = autoResetEvent", span="663-663"];
m1_382 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="!autoResetEvent.WaitOne(HistoryResponseTimeout)", span="667-667"];
m1_381 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="_pendingHistoryRequests.Add(_currentRequest)", span="664-664"];
m1_392 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label=_locker, span="704-704"];
m1_400 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", file="CreateStreamReaderErrorEventArgs.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetHistory(QuantConnect.Data.HistoryRequest)", span="616-616"];
m1_41 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m1_141 [cluster="Unk.Select", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.Select", span=""];
m1_163 [cluster="Unk.ToDictionary", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.ToDictionary", span=""];
m1_285 [cluster="System.TimeoutException.TimeoutException(string)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m1_282 [cluster="Unk.sendMessage", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.sendMessage", span=""];
m1_236 [cluster="Cash.cstr", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Cash.cstr", span=""];
m1_283 [cluster="System.Threading.AutoResetEvent.AutoResetEvent(bool)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Threading.AutoResetEvent.AutoResetEvent(bool)", span="0-0"];
m1_416 [cluster="Unk.setFXCMStartDate", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setFXCMStartDate", span=""];
m1_113 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="559-559"];
m1_146 [cluster="Unk.getFXCMOrdStatus", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getFXCMOrdStatus", span=""];
m1_51 [cluster="string.Contains(string)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry string.Contains(string)", span="0-0"];
m1_319 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_402 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m1_165 [cluster="Unk.TryGetValue", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.TryGetValue", span=""];
m1_55 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.LoadAccounts()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.LoadAccounts()", span="77-77"];
m1_147 [cluster="Unk.getCode", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getCode", span=""];
m1_229 [cluster="Unk.getLongQty", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getLongQty", span=""];
m1_278 [cluster="Unk.generateOpenOrder", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.generateOpenOrder", span=""];
m1_105 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.IsWithinTradingHours()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.IsWithinTradingHours()", span="286-286"];
m1_110 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.IsWithinTradingHours()", file="CreateStreamReaderErrorEventArgs.cs", label="var time = DateTime.UtcNow.ConvertFromUtc(TimeZones.EasternStandard)", span="288-288"];
m1_111 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.IsWithinTradingHours()", file="CreateStreamReaderErrorEventArgs.cs", label="return !(time.DayOfWeek == DayOfWeek.Friday && time.TimeOfDay > new TimeSpan(16, 55, 0) ||\r\n                     time.DayOfWeek == DayOfWeek.Saturday ||\r\n                     time.DayOfWeek == DayOfWeek.Sunday && time.TimeOfDay < new TimeSpan(17, 0, 0) ||\r\n                     time.Month == 12 && time.Day == 25 ||\r\n                     time.Month == 1 && time.Day == 1);", span="292-296"];
m1_112 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.IsWithinTradingHours()", file="CreateStreamReaderErrorEventArgs.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.IsWithinTradingHours()", span="286-286"];
m1_48 [cluster="Unk.registerStatusMessageListener", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.registerStatusMessageListener", span=""];
m1_235 [cluster="Unk.AddAmount", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.AddAmount", span=""];
m1_275 [cluster="System.ArgumentException.ArgumentException(string)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_414 [cluster="UTCDate.cstr", file="CreateStreamReaderErrorEventArgs.cs", label="Entry UTCDate.cstr", span=""];
m1_148 [cluster="Unk.OrderIsOpen", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.OrderIsOpen", span=""];
m1_149 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", span="353-353"];
m1_150 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.GetAccountHoldings()'')", span="355-355"];
m1_151 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label="var holdings = _openPositions.Values\r\n                .Select(ConvertHolding)\r\n                .Where(x => x.Quantity != 0)\r\n                .GroupBy(x => x.Symbol)\r\n                .Select(group => new Holding\r\n                {\r\n                    Symbol = group.Key,\r\n                    Type = group.First().Type,\r\n                    AveragePrice = group.Sum(x => x.AveragePrice * x.Quantity) / group.Sum(x => x.Quantity),\r\n                    ConversionRate = group.First().ConversionRate,\r\n                    CurrencySymbol = group.First().CurrencySymbol,\r\n                    Quantity = group.Sum(x => x.Quantity)\r\n                })\r\n                .ToList()", span="359-372"];
m1_152 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label="var fxcmSymbols = holdings\r\n                .Select(x => _symbolMapper.GetBrokerageSymbol(x.Symbol))\r\n                .ToList()", span="375-377"];
m1_155 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label=holdings, span="382-382"];
m1_159 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label="return holdings;", span="392-392"];
m1_153 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label="fxcmSymbols.Count > 0", span="379-379"];
m1_154 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label="var quotes = GetQuotes(fxcmSymbols).ToDictionary(x => x.getInstrument().getSymbol())", span="381-381"];
m1_157 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label="quotes.TryGetValue(_symbolMapper.GetBrokerageSymbol(holding.Symbol), out quote)", span="385-385"];
m1_156 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label="MarketDataSnapshot quote", span="384-384"];
m1_158 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label="holding.MarketPrice = Convert.ToDecimal((quote.getBidClose() + quote.getAskClose()) / 2)", span="387-387"];
m1_160 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", file="CreateStreamReaderErrorEventArgs.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetAccountHoldings()", span="353-353"];
m1_234 [cluster="Unk.FirstOrDefault", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.FirstOrDefault", span=""];
m1_273 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
m1_403 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m1_104 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="162-162"];
m1_233 [cluster="string.Substring(int)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry string.Substring(int)", span="0-0"];
m1_131 [cluster="Unk.isConnected", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.isConnected", span=""];
m1_421 [cluster="Unk.addRelatedSymbol", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.addRelatedSymbol", span=""];
m1_167 [cluster="Unk.getAskClose", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getAskClose", span=""];
m1_225 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetUsdConversion(string)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.GetUsdConversion(string)", span="176-176"];
m1_406 [cluster="string.Format(string, object, object)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_179 [cluster="Unk.First", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.First", span=""];
m1_318 [cluster="string.ToString()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry string.ToString()", span="0-0"];
m1_279 [cluster="Unk.setOrdType", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setOrdType", span=""];
m1_0 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", span="89-89"];
m1_1 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", file="CreateStreamReaderErrorEventArgs.cs", label="_orderProvider = orderProvider", span="92-92"];
m1_2 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", file="CreateStreamReaderErrorEventArgs.cs", label="_securityProvider = securityProvider", span="93-93"];
m1_3 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", file="CreateStreamReaderErrorEventArgs.cs", label="_server = server", span="94-94"];
m1_4 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", file="CreateStreamReaderErrorEventArgs.cs", label="_terminal = terminal", span="95-95"];
m1_5 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", file="CreateStreamReaderErrorEventArgs.cs", label="_userName = userName", span="96-96"];
m1_6 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", file="CreateStreamReaderErrorEventArgs.cs", label="_password = password", span="97-97"];
m1_7 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", file="CreateStreamReaderErrorEventArgs.cs", label="_accountId = accountId", span="98-98"];
m1_8 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", file="CreateStreamReaderErrorEventArgs.cs", label="HistoryResponseTimeout = 5000", span="100-100"];
m1_9 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", file="CreateStreamReaderErrorEventArgs.cs", label="MaximumHistoryRetryAttempts = 1", span="101-101"];
m1_10 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", file="CreateStreamReaderErrorEventArgs.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.FxcmBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, string, string, string)", span="89-89"];
m1_102 [cluster="System.TimeSpan.FromSeconds(double)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m1_327 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="576-576"];
m1_328 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.CancelOrder(): {0}'', order)", span="578-578"];
m1_331 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="!order.BrokerId.Any()", span="583-583"];
m1_334 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="var fxcmOrderId = order.BrokerId[0].ToString()", span="590-590"];
m1_329 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="!IsConnected", span="580-580"];
m1_330 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new InvalidOperationException(''FxcmBrokerage.UpdateOrder(): Unable to cancel order while not connected.'');", span="581-581"];
m1_332 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="Log.Trace(''FxcmBrokerage.CancelOrder(): Unable to cancel order without BrokerId.'')", span="586-586"];
m1_333 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="return false;", span="587-587"];
m1_335 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="ExecutionReport fxcmOrder", span="592-592"];
m1_336 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="!_openOrders.TryGetValue(fxcmOrderId, out fxcmOrder)", span="593-593"];
m1_337 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new ArgumentException(''FxcmBrokerage.CancelOrder(): FXCM order id not found: '' + fxcmOrderId);", span="594-594"];
m1_338 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="_isOrderUpdateOrCancelRejected = false", span="596-596"];
m1_339 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="var orderCancelRequest = MessageGenerator.generateOrderCancelRequest('''', fxcmOrder.getOrderID(), fxcmOrder.getSide(), fxcmOrder.getAccount())", span="597-597"];
m1_340 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="AutoResetEvent autoResetEvent", span="598-598"];
m1_342 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="_currentRequest = _gateway.sendMessage(orderCancelRequest)", span="601-601"];
m1_341 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label=_locker, span="599-599"];
m1_343 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="autoResetEvent = new AutoResetEvent(false)", span="602-602"];
m1_344 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="_mapRequestsToAutoResetEvents[_currentRequest] = autoResetEvent", span="603-603"];
m1_345 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="!autoResetEvent.WaitOne(ResponseTimeout)", span="605-605"];
m1_346 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="throw new TimeoutException(string.Format(''FxcmBrokerage.CancelOrder(): Operation took longer than {0} seconds.'', (decimal)ResponseTimeout / 1000));", span="606-606"];
m1_347 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="return !_isOrderUpdateOrCancelRejected;", span="608-608"];
m1_348 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="CreateStreamReaderErrorEventArgs.cs", label="Exit QuantConnect.Brokerages.Fxcm.FxcmBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="576-576"];
m1_408 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m1_280 [cluster="Unk.setTimeInForce", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setTimeInForce", span=""];
m1_420 [cluster="Unk.setFXCMEndTime", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setFXCMEndTime", span=""];
m1_162 [cluster="Unk.GetQuotes", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.GetQuotes", span=""];
m1_425 [cluster="System.Collections.Generic.List<T>.InsertRange(int, System.Collections.Generic.IEnumerable<T>)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Collections.Generic.List<T>.InsertRange(int, System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m1_427 [cluster="System.DateTime.AddMilliseconds(double)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m1_227 [cluster="Unk.getSettlPrice", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getSettlPrice", span=""];
m1_232 [cluster="Unk.ConvertFxcmSymbolToLeanSymbol", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.ConvertFxcmSymbolToLeanSymbol", span=""];
m1_413 [cluster="Unk.setMDEntryTypeSet", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setMDEntryTypeSet", span=""];
m1_168 [cluster="Unk.ToDecimal", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.ToDecimal", span=""];
m1_166 [cluster="Unk.getBidClose", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getBidClose", span=""];
m1_44 [cluster="System.Threading.Thread.Start()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m1_107 [cluster="Unk.removeGenericMessageListener", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.removeGenericMessageListener", span=""];
m1_415 [cluster="QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToJavaDateUtc(System.DateTime)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Brokerages.Fxcm.FxcmBrokerage.ToJavaDateUtc(System.DateTime)", span="228-228"];
m1_274 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_407 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m1_45 [cluster="System.Threading.Thread.Sleep(int)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_423 [cluster="System.DateTime.AddSeconds(double)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m1_114 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m1_180 [cluster="Unk.Sum", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.Sum", span=""];
m1_322 [cluster="Unk.getOrdType", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getOrdType", span=""];
m1_277 [cluster="Unk.generateMarketOrder", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.generateMarketOrder", span=""];
m1_323 [cluster="Unk.getAccount", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.getAccount", span=""];
m1_132 [cluster="System.Threading.Thread.Join()", file="CreateStreamReaderErrorEventArgs.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m1_326 [cluster="Unk.setOrderQty", file="CreateStreamReaderErrorEventArgs.cs", label="Entry Unk.setOrderQty", span=""];
m1_428 [file="CreateStreamReaderErrorEventArgs.cs", label="QuantConnect.Brokerages.Fxcm.FxcmBrokerage", span=""];
m1_429 [file="CreateStreamReaderErrorEventArgs.cs", label=loginProperties, span=""];
m4_13 [cluster="System.Math.Abs(decimal)", file="DefaultBrokerageModel.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m4_8 [cluster="System.Math.Abs(double)", file="DefaultBrokerageModel.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m4_164 [cluster="Unk.Where", file="DefaultBrokerageModel.cs", label="Entry Unk.Where", span=""];
m4_169 [cluster="System.DateTime.ToString()", file="DefaultBrokerageModel.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m4_242 [cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120"];
m4_265 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="252-252"];
m4_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="95-95"];
m4_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="97-97"];
m4_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="95-95"];
m4_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="137-137"];
m4_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="return Order(symbol, (int) quantity);", span="139-139"];
m4_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="137-137"];
m4_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="163-163"];
m4_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="var security = Securities[symbol]", span="165-165"];
m4_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="171-171"];
m4_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag)", span="180-180"];
m4_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="!asynchronous", span="199-199"];
m4_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="!security.Exchange.ExchangeOpen", span="169-169"];
m4_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="var anyNonDailySubscriptions = security.Subscriptions.Any(x => x.Resolution != Resolution.Daily)", span="172-172"];
m4_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="mooTicket.SubmitRequest.Response.IsSuccess && !anyNonDailySubscriptions", span="173-173"];
m4_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="175-175"];
m4_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="return mooTicket;", span="177-177"];
m4_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label=IsWarmingUp, span="183-183"];
m4_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="185-185"];
m4_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="189-189"];
m4_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="192-192"];
m4_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="var ticket = Transactions.AddOrder(request)", span="196-196"];
m4_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="preOrderCheckResponse.IsError", span="190-190"];
m4_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="201-201"];
m4_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="return ticket;", span="204-204"];
m4_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="163-163"];
m4_64 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="220-220"];
m4_163 [cluster="int.ToString()", file="DefaultBrokerageModel.cs", label="Entry int.ToString()", span="0-0"];
m4_162 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultBrokerageModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="380-380"];
m4_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="return GenerateOrders(strategy, quantity);", span="382-382"];
m4_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="380-380"];
m4_173 [cluster="Unk.MarketOrder", file="DefaultBrokerageModel.cs", label="Entry Unk.MarketOrder", span=""];
m4_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="752-752"];
m4_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="return CalculateOrderQuantity(symbol, (decimal)target);", span="754-754"];
m4_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="752-752"];
m4_239 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m4_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="276-276"];
m4_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="var security = Securities[symbol]", span="278-278"];
m4_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopMarket, security, quantity, tag, stopPrice: stopPrice)", span="279-279"];
m4_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="var response = PreOrderChecks(request)", span="280-280"];
m4_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="283-283"];
m4_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="return Transactions.AddOrder(request);", span="286-286"];
m4_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="response.IsError", span="281-281"];
m4_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="276-276"];
m4_268 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="Entry lambda expression", span="602-602"];
m4_65 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="Entry lambda expression", span="172-172"];
m4_66 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="x.Resolution != Resolution.Daily", span="172-172"];
m4_67 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="Exit lambda expression", span="172-172"];
m4_179 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike", span="397-400"];
m4_178 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="Entry lambda expression", span="397-400"];
m4_180 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="Exit lambda expression", span="397-400"];
m4_269 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="x.Value", span="602-602"];
m4_270 [cluster="lambda expression", file="DefaultBrokerageModel.cs", label="Exit lambda expression", span="602-602"];
m4_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="369-369"];
m4_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="return Order(strategy, Math.Abs(quantity) * -1);", span="371-371"];
m4_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="369-369"];
m4_166 [cluster="QuantConnect.Symbol.ToString()", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m4_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="84-84"];
m4_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="DefaultBrokerageModel.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="86-86"];
m4_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="84-84"];
m4_267 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int)", span="163-163"];
m4_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="713-713"];
m4_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="Security security", span="716-716"];
m4_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="!Securities.TryGetValue(symbol, out security)", span="717-717"];
m4_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="719-719"];
m4_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label=liquidateExistingHoldings, span="724-724"];
m4_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="730-730"];
m4_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="Order(holdingSymbol, -holdings.Quantity, false, tag)", span="733-733"];
m4_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="var quantity = CalculateOrderQuantity(symbol, percentage)", span="739-739"];
m4_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="MarketOrder(symbol, quantity, false, tag)", span="742-742"];
m4_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="return;", span="720-720"];
m4_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label=Portfolio, span="726-726"];
m4_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="var holdingSymbol = kvp.Key", span="728-728"];
m4_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="var holdings = kvp.Value", span="729-729"];
m4_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="Math.Abs(quantity) > 0", span="740-740"];
m4_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="713-713"];
m4_344 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m4_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="872-872"];
m4_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="DefaultBrokerageModel.cs", label="return Order(symbol, quantity);", span="874-874"];
m4_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="872-872"];
m4_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="685-685"];
m4_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="DefaultBrokerageModel.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="687-687"];
m4_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="685-685"];
m4_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="298-298"];
m4_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="DefaultBrokerageModel.cs", label="var security = Securities[symbol]", span="300-300"];
m4_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="DefaultBrokerageModel.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice)", span="301-301"];
m4_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="DefaultBrokerageModel.cs", label="var response = PreOrderChecks(request)", span="302-302"];
m4_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="DefaultBrokerageModel.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="305-305"];
m4_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="DefaultBrokerageModel.cs", label="return Transactions.AddOrder(request);", span="309-309"];
m4_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="DefaultBrokerageModel.cs", label="response.IsError", span="303-303"];
m4_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="298-298"];
m4_240 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m4_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m4_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="DefaultBrokerageModel.cs", label="return Order(symbol, Math.Abs(quantity));", span="75-75"];
m4_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m4_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m4_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="DefaultBrokerageModel.cs", label="return Order(symbol, Math.Abs(quantity));", span="42-42"];
m4_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m4_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="358-358"];
m4_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="return Order(strategy, Math.Abs(quantity));", span="360-360"];
m4_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="358-358"];
m4_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="478-478"];
m4_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Security security", span="482-482"];
m4_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="!Securities.TryGetValue(request.Symbol, out security)", span="483-483"];
m4_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MissingSecurity, ''You haven't requested '' + request.Symbol.ToString() + '' data. Add this with AddSecurity() in the Initialize() Method.'');", span="485-485"];
m4_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="request.Quantity == 0 || request.Symbol == null || request.Symbol == QuantConnect.Symbol.Empty || Math.Abs(request.Quantity) < security.SymbolProperties.LotSize", span="489-489"];
m4_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.ZeroQuantity(request);", span="491-491"];
m4_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="496-496"];
m4_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="502-502"];
m4_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="504-504"];
m4_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="request.OrderType == OrderType.OptionExercise && !security.Exchange.ExchangeOpen", span="508-508"];
m4_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="510-510"];
m4_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="515-515"];
m4_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.QuoteCurrencyRequired, request.Symbol.Value + '': requires '' + quoteCurrency + '' in the cashbook to trade.'');", span="523-523"];
m4_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ConversionRateZero, request.Symbol.Value + '': requires '' + quoteCurrency + '' to have a non-zero conversion rate. This can be caused by lack of data.'');", span="527-527"];
m4_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' in the cashbook to trade.'');", span="537-537"];
m4_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexConversionRateZero, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' to have non-zero conversion rates. This can be caused by lack of data.'');", span="541-541"];
m4_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityHasNoData, ''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'');", span="548-548"];
m4_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="555-555"];
m4_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="request.OrderType == OrderType.OptionExercise", span="558-558"];
m4_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonExercisableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is not exercisable.'');", span="561-561"];
m4_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''The security with symbol ''' + request.Symbol.ToString() + ''' has a short option position. Only long option positions are exercisable.'');", span="564-564"];
m4_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="request.Quantity > security.Holdings.Quantity", span="566-566"];
m4_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''Cannot exercise more contracts of ''' + request.Symbol.ToString() + ''' than is currently available in the portfolio. '');", span="567-567"];
m4_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="request.Quantity <= 0.0m", span="569-569"];
m4_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="OrderResponse.ZeroQuantity(request)", span="570-570"];
m4_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="request.OrderType == OrderType.MarketOnClose", span="573-573"];
m4_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="583-583"];
m4_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return OrderResponse.Success(request);", span="588-588"];
m4_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="!security.IsTradable", span="494-494"];
m4_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="var price = security.Price", span="499-499"];
m4_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="var quoteCurrency = security.QuoteCurrency.Symbol", span="520-520"];
m4_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="security.QuoteCurrency.ConversionRate == 0m", span="525-525"];
m4_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="security.Type == SecurityType.Forex", span="531-531"];
m4_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="var baseCurrency = ((Forex) security).BaseCurrencySymbol", span="534-534"];
m4_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="!security.HasData", span="546-546"];
m4_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="security.Type != SecurityType.Option", span="560-560"];
m4_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="security.Holdings.IsShort", span="563-563"];
m4_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="575-575"];
m4_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="578-578"];
m4_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="price == 0", span="513-513"];
m4_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Cash quoteCash", span="519-519"];
m4_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="!Portfolio.CashBook.TryGetValue(quoteCurrency, out quoteCash)", span="521-521"];
m4_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Cash baseCash", span="533-533"];
m4_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="535-535"];
m4_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="baseCash.ConversionRate == 0m", span="539-539"];
m4_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Transactions.OrdersCount > _maxOrders", span="552-552"];
m4_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Status = AlgorithmStatus.Stopped", span="554-554"];
m4_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="var latestSubmissionTime = nextMarketClose.AddMinutes(-15.50)", span="577-577"];
m4_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="478-478"];
m4_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="698-698"];
m4_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="700-700"];
m4_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="698-698"];
m4_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m4_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="DefaultBrokerageModel.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="109-109"];
m4_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m4_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m4_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="return Order(symbol, Math.Abs(quantity));", span="53-53"];
m4_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m4_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="385-385"];
m4_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="var orders = new List<OrderTicket>()", span="387-387"];
m4_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="var strategyTag = strategy.Name + '' ('' + strategyQuantity.ToString() + '')''", span="390-390"];
m4_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="strategy.OptionLegs != null", span="393-393"];
m4_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="strategy.OptionLegs", span="395-395"];
m4_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="var optionSeq = Securities.Where(kv => kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike)", span="397-400"];
m4_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="var error = string.Format(''Couldn't find the option contract in algorithm securities list. Underlying: {0}, option {1}, strike {2}, expiration: {3}'',\r\n                                strategy.Underlying.ToString(), optionLeg.Right.ToString(), optionLeg.Strike.ToString(), optionLeg.Expiration.ToString())", span="404-405"];
m4_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="var marketOrder = MarketOrder(option, optionLeg.Quantity * strategyQuantity, tag: strategyTag)", span="414-414"];
m4_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="var limitOrder = LimitOrder(option, optionLeg.Quantity * strategyQuantity, optionLeg.OrderPrice, tag: strategyTag)", span="418-418"];
m4_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="strategy.UnderlyingLegs != null", span="428-428"];
m4_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="strategy.UnderlyingLegs", span="430-430"];
m4_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="!Securities.ContainsKey(strategy.Underlying)", span="432-432"];
m4_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="var error = string.Format(''Couldn't find the option contract underlying in algorithm securities list. Underlying: {0}'', strategy.Underlying.ToString())", span="434-434"];
m4_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="var marketOrder = MarketOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, tag: strategyTag)", span="441-441"];
m4_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="var limitOrder = LimitOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, underlyingLeg.OrderPrice, tag: strategyTag)", span="445-445"];
m4_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="orders.Add(marketOrder)", span="415-415"];
m4_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="orders.Add(limitOrder)", span="419-419"];
m4_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="orders.Add(marketOrder)", span="442-442"];
m4_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="orders.Add(limitOrder)", span="446-446"];
m4_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="return orders;", span="453-453"];
m4_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="optionLeg.OrderType", span="411-411"];
m4_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + optionLeg.OrderType.ToString());", span="422-422"];
m4_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="optionSeq.Count() != 1", span="402-402"];
m4_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="var option = optionSeq.First().Key", span="409-409"];
m4_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="throw new InvalidOperationException(error);", span="406-406"];
m4_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="OrderType.Market", span="413-413"];
m4_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="OrderType.Limit", span="417-417"];
m4_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="underlyingLeg.OrderType", span="438-438"];
m4_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + underlyingLeg.OrderType.ToString());", span="449-449"];
m4_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="throw new InvalidOperationException(error);", span="435-435"];
m4_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="OrderType.Market", span="440-440"];
m4_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="OrderType.Limit", span="444-444"];
m4_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="385-385"];
m4_342 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m4_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="860-860"];
m4_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="DefaultBrokerageModel.cs", label="return Order(symbol, (int)quantity);", span="862-862"];
m4_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="860-860"];
m4_18 [cluster="System.Math.Abs(float)", file="DefaultBrokerageModel.cs", label="Entry System.Math.Abs(float)", span="0-0"];
m4_165 [cluster="Unk.Count", file="DefaultBrokerageModel.cs", label="Entry Unk.Count", span=""];
m4_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1538-1538"];
m4_237 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
m4_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="214-214"];
m4_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="var security = Securities[symbol]", span="216-216"];
m4_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnOpen, security, quantity, tag)", span="217-217"];
m4_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="var response = PreOrderChecks(request)", span="218-218"];
m4_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="221-221"];
m4_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="return Transactions.AddOrder(request);", span="224-224"];
m4_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="response.IsError", span="219-219"];
m4_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="214-214"];
m4_341 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m4_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m4_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="return Order(symbol, (int) quantity);", span="129-129"];
m4_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m4_171 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DefaultBrokerageModel.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m4_357 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", span="92-92"];
m4_177 [cluster="string.Format(string, object)", file="DefaultBrokerageModel.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="255-255"];
m4_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="var security = Securities[symbol]", span="257-257"];
m4_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="var request = CreateSubmitOrderRequest(OrderType.Limit, security, quantity, tag, limitPrice: limitPrice)", span="258-258"];
m4_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="var response = PreOrderChecks(request)", span="259-259"];
m4_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="262-262"];
m4_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="return Transactions.AddOrder(request);", span="265-265"];
m4_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="response.IsError", span="260-260"];
m4_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="255-255"];
m4_167 [cluster="System.Enum.ToString()", file="DefaultBrokerageModel.cs", label="Entry System.Enum.ToString()", span="0-0"];
m4_236 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="200-200"];
m4_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m4_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="return Order(symbol, Math.Abs(quantity));", span="64-64"];
m4_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m4_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="765-765"];
m4_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var security = Securities[symbol]", span="767-767"];
m4_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="target == 0", span="774-774"];
m4_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var targetPortfolioValue = target*Portfolio.TotalPortfolioValue", span="777-777"];
m4_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var unitPrice = new MarketOrder(symbol, 1, UtcTime).GetValue(security)", span="785-785"];
m4_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var marginRemaining = Portfolio.GetMarginRemaining(symbol, direction)", span="789-789"];
m4_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var price = security.Price", span="768-768"];
m4_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="return -security.Holdings.Quantity;", span="774-774"];
m4_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var currentHoldingsValue = security.Holdings.HoldingsValue", span="778-778"];
m4_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var order = new MarketOrder(security.Symbol, orderQuantity, UtcTime)", span="815-815"];
m4_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="orderValue = order.GetValue(security)", span="816-816"];
m4_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="817-817"];
m4_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="marginRequired = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="821-821"];
m4_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="orderQuantity % Convert.ToInt32(security.SymbolProperties.LotSize) != 0", span="828-828"];
m4_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="orderQuantity = orderQuantity - (orderQuantity % Convert.ToInt32(security.SymbolProperties.LotSize))", span="830-830"];
m4_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="price == 0", span="771-771"];
m4_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="return 0;", span="771-771"];
m4_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var targetOrderValue = Math.Abs(targetPortfolioValue - currentHoldingsValue)", span="781-781"];
m4_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var direction = targetPortfolioValue > currentHoldingsValue ? OrderDirection.Buy : OrderDirection.Sell", span="782-782"];
m4_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var orderQuantity = (int)(targetOrderValue / unitPrice)", span="799-799"];
m4_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="orderQuantity > 0 && (marginRequired > marginRemaining || orderValue + orderFees > targetOrderValue)", span="825-825"];
m4_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="return (direction == OrderDirection.Sell ? -1 : 1) * orderQuantity;", span="834-834"];
m4_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="unitPrice == 0", span="786-786"];
m4_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="feeToPriceRatio = (int)(orderFees / unitPrice)", span="818-818"];
m4_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="return 0;", span="786-786"];
m4_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="marginRemaining <= 0", span="790-790"];
m4_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="return 0;", span="790-790"];
m4_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="decimal marginRequired", span="793-793"];
m4_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="decimal orderValue", span="794-794"];
m4_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="decimal orderFees", span="795-795"];
m4_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var feeToPriceRatio = 0", span="796-796"];
m4_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="feeToPriceRatio > 0", span="808-808"];
m4_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="orderQuantity -= feeToPriceRatio", span="809-809"];
m4_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="var iterations = 0", span="800-800"];
m4_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="orderQuantity--", span="811-811"];
m4_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="iterations > 0", span="805-805"];
m4_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="iterations++", span="823-823"];
m4_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="765-765"];
m4_176 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="123-123"];
m4_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="848-848"];
m4_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="DefaultBrokerageModel.cs", label="return Order(symbol, quantity, asynchronous, tag);", span="850-850"];
m4_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="848-848"];
m4_57 [cluster="Unk.Any", file="DefaultBrokerageModel.cs", label="Entry Unk.Any", span=""];
m4_264 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="DefaultBrokerageModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m4_63 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144"];
m4_343 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m4_62 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="405-405"];
m4_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="319-319"];
m4_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="var option = (Option)Securities[optionSymbol]", span="321-321"];
m4_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="var request = CreateSubmitOrderRequest(OrderType.OptionExercise, option, quantity, tag)", span="323-323"];
m4_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="!asynchronous", span="342-342"];
m4_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label=IsWarmingUp, span="326-326"];
m4_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="328-328"];
m4_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="332-332"];
m4_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="335-335"];
m4_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="var ticket = Transactions.AddOrder(request)", span="339-339"];
m4_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="preOrderCheckResponse.IsError", span="333-333"];
m4_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="344-344"];
m4_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="return ticket;", span="347-347"];
m4_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="319-319"];
m4_340 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="47-47"];
m4_60 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="414-414"];
m4_345 [cluster="System.Convert.ToInt32(decimal)", file="DefaultBrokerageModel.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m4_170 [cluster="string.Format(string, params object[])", file="DefaultBrokerageModel.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m4_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="657-657"];
m4_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="DefaultBrokerageModel.cs", label="!_locked", span="659-659"];
m4_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="DefaultBrokerageModel.cs", label="_maxOrders = max", span="661-661"];
m4_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="657-657"];
m4_174 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultBrokerageModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="672-672"];
m4_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="DefaultBrokerageModel.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="674-674"];
m4_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="672-672"];
m4_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", span="877-877"];
m4_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="DefaultBrokerageModel.cs", label="return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag);", span="879-879"];
m4_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", span="877-877"];
m4_168 [cluster="decimal.ToString()", file="DefaultBrokerageModel.cs", label="Entry decimal.ToString()", span="0-0"];
m4_241 [cluster="System.DateTime.AddMinutes(double)", file="DefaultBrokerageModel.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m4_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m4_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="120-120"];
m4_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m4_238 [cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154"];
m4_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", span="150-150"];
m4_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="152-152"];
m4_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", span="150-150"];
m4_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="234-234"];
m4_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="var security = Securities[symbol]", span="236-236"];
m4_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag)", span="237-237"];
m4_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="var response = PreOrderChecks(request)", span="238-238"];
m4_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="241-241"];
m4_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="return Transactions.AddOrder(request);", span="244-244"];
m4_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="response.IsError", span="239-239"];
m4_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="234-234"];
m4_172 [cluster="Unk.First", file="DefaultBrokerageModel.cs", label="Entry Unk.First", span=""];
m4_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="463-463"];
m4_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="var response = PreOrderChecksImpl(request)", span="465-465"];
m4_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="response.IsError", span="466-466"];
m4_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Error(response.ErrorMessage)", span="468-468"];
m4_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="return response;", span="470-470"];
m4_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="463-463"];
m4_266 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="208-208"];
m4_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", span="597-597"];
m4_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="var orderIdList = new List<int>()", span="599-599"];
m4_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="symbolToLiquidate = symbolToLiquidate ?? QuantConnect.Symbol.Empty", span="600-600"];
m4_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="orderIdList.Add(ticket.OrderId)", span="645-645"];
m4_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="return orderIdList;", span="650-650"];
m4_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="Securities.Keys.OrderBy(x => x.Value)", span="602-602"];
m4_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="symbol != symbolToLiquidate && symbolToLiquidate != QuantConnect.Symbol.Empty", span="605-605"];
m4_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="var orders = Transactions.GetOpenOrders(symbol)", span="609-609"];
m4_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="var quantity = Portfolio[symbol].Quantity", span="612-612"];
m4_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="var ticket = Order(symbol, -quantity - marketOrdersQuantity)", span="642-642"];
m4_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="615-615"];
m4_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label=orders, span="620-620"];
m4_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="quantity != 0", span="639-639"];
m4_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="var marketOrdersQuantity = 0m", span="619-619"];
m4_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="629-629"];
m4_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="order.Type == OrderType.Market", span="622-622"];
m4_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="var ticket = Transactions.GetOrderTicket(order.Id)", span="625-625"];
m4_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="Transactions.CancelOrder(order.Id)", span="634-634"];
m4_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="ticket != null", span="626-626"];
m4_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="ticket.Status == OrderStatus.Filled", span="643-643"];
m4_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="DefaultBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", span="597-597"];
m4_175 [cluster="Unk.LimitOrder", file="DefaultBrokerageModel.cs", label="Entry Unk.LimitOrder", span=""];
m4_3 [cluster="System.Math.Abs(int)", file="DefaultBrokerageModel.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m4_358 [file="DefaultBrokerageModel.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m4_359 [file="DefaultBrokerageModel.cs", label="QuantConnect.Securities.Option.OptionStrategy", span=""];
m4_360 [file="DefaultBrokerageModel.cs", label=optionLeg, span=""];
m7_113 [cluster="System.Math.Abs(decimal)", file="IBrokerageModel.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m7_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", span="347-347"];
m7_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="!Portfolio.ContainsKey(symbol)", span="350-350"];
m7_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="Debug(symbol.ToUpper() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="352-352"];
m7_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="percentage > 1", span="357-357"];
m7_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="percentage < -1", span="358-358"];
m7_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label=liquidateExistingHoldings, span="361-361"];
m7_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="holdingSymbol != symbol && Portfolio[holdingSymbol].AbsoluteQuantity > 0", span="365-365"];
m7_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="var total = Portfolio.TotalHoldingsValue + Portfolio.Cash * Securities[symbol].Leverage", span="374-374"];
m7_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="var deltaValue = (total * percentage) - Portfolio[symbol].HoldingsValue", span="377-377"];
m7_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="Math.Abs(Securities[symbol].Price) > 0", span="382-382"];
m7_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="deltaQuantity = Math.Round(deltaValue / Securities[symbol].Price)", span="385-385"];
m7_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="Order(symbol, (int)deltaQuantity, OrderType.Market, false, tag)", span="391-391"];
m7_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="return;", span="353-353"];
m7_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="percentage = 1", span="357-357"];
m7_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="percentage = -1", span="358-358"];
m7_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="Portfolio.Keys", span="363-363"];
m7_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="Order(holdingSymbol, -Portfolio[holdingSymbol].Quantity)", span="368-368"];
m7_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="var deltaQuantity = 0m", span="379-379"];
m7_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="Math.Abs(deltaQuantity) > 0", span="389-389"];
m7_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", span="347-347"];
m7_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", span="319-319"];
m7_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", file="IBrokerageModel.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="321-321"];
m7_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", span="319-319"];
m7_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="!Transactions.Orders.ContainsKey(orderId) ||\r\n                       (Transactions.Orders[orderId].Status != OrderStatus.Filled &&\r\n                        Transactions.Orders[orderId].Status != OrderStatus.Invalid &&\r\n                        Transactions.Orders[orderId].Status != OrderStatus.Canceled) || _processingOrder", span="255-258"];
m7_63 [cluster="QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", file="IBrokerageModel.cs", label="Entry QuantConnect.Orders.Order.Order(string, QuantConnect.SecurityType, int, QuantConnect.Orders.OrderType, System.DateTime, decimal, string)", span="186-186"];
m7_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="IBrokerageModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m7_25 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="IBrokerageModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m7_26 [cluster="Unk.Select", file="IBrokerageModel.cs", label="Entry Unk.Select", span=""];
m7_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="return -3;", span="236-236"];
m7_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", color=green, community=0, file="IBrokerageModel.cs", label="0: Orders.Count > (_endDate - _startDate).TotalDays * 100", span="240-240"];
m7_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", color=green, community=0, file="IBrokerageModel.cs", label="1: Error(''You have exceeded 100 orders per day'')", span="242-242"];
m7_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="return -5;", span="243-243"];
m7_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="orderId = Transactions.AddOrder(new Order(symbol, security.Type, quantity, type, Time, price, tag))", span="247-247"];
m7_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="!asynchronous && type == OrderType.Market", span="251-251"];
m7_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", span="127-127"];
m7_79 [cluster="lambda expression", file="IBrokerageModel.cs", label="Entry lambda expression", span="144-144"];
m7_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", span="105-105"];
m7_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", file="IBrokerageModel.cs", label="return Order(symbol, quantity);", span="140-140"];
m7_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", file="IBrokerageModel.cs", label="return Order(symbol, quantity);", span="152-152"];
m7_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", span="150-150"];
m7_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", span="138-138"];
m7_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", span="150-150"];
m7_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, double, QuantConnect.Orders.OrderType)", file="IBrokerageModel.cs", label="return Order(symbol, (int)quantity, type);", span="172-172"];
m7_60 [cluster="string.ToUpper()", file="IBrokerageModel.cs", label="Entry string.ToUpper()", span="0-0"];
m7_64 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", file="IBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", span="174-174"];
m7_65 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", color=green, community=0, file="IBrokerageModel.cs", label="1: Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m7_66 [cluster="System.Threading.Thread.Sleep(int)", file="IBrokerageModel.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m7_61 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(string)", color=green, community=0, file="IBrokerageModel.cs", label="0: Entry QuantConnect.Securities.SecurityManager.ContainsKey(string)", span="212-212"];
m7_62 [cluster="lambda expression", file="IBrokerageModel.cs", label="Exit lambda expression", span="122-122"];
m7_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="orderIdList.Add(Order(symbol, quantity, OrderType.Market))", span="293-293"];
m7_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", span="273-273"];
m7_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="return orderIdList;", span="295-295"];
m7_81 [cluster="System.Collections.Generic.List<T>.Add(T)", file="IBrokerageModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m7_80 [cluster="System.Math.Abs(int)", file="IBrokerageModel.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m7_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", span="180-180"];
m7_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="decimal price = 0", span="198-198"];
m7_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="var orderId = -1", span="197-197"];
m7_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, double, QuantConnect.Orders.OrderType)", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, double, QuantConnect.Orders.OrderType)", span="170-170"];
m7_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", file="IBrokerageModel.cs", label="return Order(symbol, (int)quantity, type);", span="182-182"];
m7_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="Error(''Market order and exchange not open'')", span="235-235"];
m7_12 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="IBrokerageModel.cs", label="Time.Date < new DateTime(2014, 4, 1)", span="58-58"];
m7_13 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="IBrokerageModel.cs", label="return new List<Symbol>\r\n                {\r\n                    QuantConnect.Symbol.Create(''AAPL'', SecurityType.Equity, Market.USA),\r\n                    QuantConnect.Symbol.Create(''AIG'', SecurityType.Equity, Market.USA),\r\n                    QuantConnect.Symbol.Create(''IBM'', SecurityType.Equity, Market.USA)\r\n                };", span="60-65"];
m7_14 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="IBrokerageModel.cs", label="return new List<Symbol>\r\n            {\r\n                QuantConnect.Symbol.Create(''BAC'', SecurityType.Equity, Market.USA),\r\n                QuantConnect.Symbol.Create(''GOOG'', SecurityType.Equity, Market.USA),\r\n                QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)\r\n            };", span="68-73"];
m7_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", file="IBrokerageModel.cs", label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", span=""];
m7_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", file="IBrokerageModel.cs", label="QuantConnect.Data.Slice", span=""];
m7_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", span="306-306"];
m7_59 [cluster="string.IsNullOrEmpty(string)", file="IBrokerageModel.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m7_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", span="273-273"];
m7_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", file="IBrokerageModel.cs", label="return Order(symbol, quantity);", span="129-129"];
m7_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", span="180-180"];
m7_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", span="127-127"];
m7_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="Thread.Sleep(1)", span="260-260"];
m7_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", span="138-138"];
m7_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, double, QuantConnect.Orders.OrderType)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, double, QuantConnect.Orders.OrderType)", span="170-170"];
m7_111 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="IBrokerageModel.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="110-110"];
m7_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="type == OrderType.Market && !security.Exchange.ExchangeOpen", span="233-233"];
m7_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="710-710"];
m7_0 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", span="41-41"];
m7_1 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="IBrokerageModel.cs", label="UniverseSettings.Resolution = Resolution.Daily", span="43-43"];
m7_2 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="IBrokerageModel.cs", label="SetStartDate(2014, 03, 24)", span="45-45"];
m7_4 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="IBrokerageModel.cs", label="SetCash(50000)", span="47-47"];
m7_5 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="IBrokerageModel.cs", label="AddUniverse(CoarseSelectionFunction, FineSelectionFunction)", span="52-52"];
m7_6 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", span="41-41"];
m7_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1197-1197"];
m7_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1121-1121"];
m7_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="quantity == 0 || string.IsNullOrEmpty(symbol)", span="201-201"];
m7_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="return -1;", span="203-203"];
m7_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="!Securities.ContainsKey(symbol) && !_sentNoDataError", span="210-210"];
m7_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="Error(''You haven't requested '' + symbol + '' data. Add this with AddSecurity() in the Initialize() Method.'')", span="213-213"];
m7_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="var security = Securities[symbol]", span="217-217"];
m7_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="price = security.Price", span="218-218"];
m7_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="Error(''Asset price is $0. If using custom data make sure you've set the 'Value' property.'')", span="221-221"];
m7_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="return -1;", span="222-222"];
m7_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="!security.HasData", span="226-226"];
m7_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="symbol = symbol.ToUpper()", span="207-207"];
m7_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="_sentNoDataError = true", span="212-212"];
m7_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="price == 0", span="219-219"];
m7_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="Error(''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'')", span="228-228"];
m7_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="var orderIdList = new List<int>()", span="275-275"];
m7_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="symbolToLiquidate = symbolToLiquidate.ToUpper()", span="276-276"];
m7_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="!Portfolio[symbol].HoldStock || (symbol != symbolToLiquidate && symbolToLiquidate != '''')", span="281-281"];
m7_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="Portfolio[symbol].IsLong", span="284-284"];
m7_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="Securities.Keys", span="278-278"];
m7_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="var quantity = 0", span="283-283"];
m7_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="quantity = -Portfolio[symbol].Quantity", span="286-286"];
m7_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", span="194-194"];
m7_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="IBrokerageModel.cs", label="quantity = Math.Abs(Portfolio[symbol].Quantity)", span="290-290"];
m7_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="IBrokerageModel.cs", label="return orderId;", span="264-264"];
m7_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770"];
m7_58 [cluster="Unk.Join", file="IBrokerageModel.cs", label="Entry Unk.Join", span=""];
m7_114 [cluster="System.Math.Round(decimal)", file="IBrokerageModel.cs", label="Entry System.Math.Round(decimal)", span="0-0"];
m7_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", file="IBrokerageModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", span="333-333"];
m7_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", file="IBrokerageModel.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="335-335"];
m7_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", file="IBrokerageModel.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", span="333-333"];
m7_115 [file="IBrokerageModel.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m8_10 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", span="82-82"];
m8_11 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", span="82-82"];
m8_6 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="65-65"];
m8_7 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="65-65"];
m8_2 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="49-49"];
m8_3 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="49-49"];
m8_8 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="73-73"];
m8_9 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Securities.Interfaces.ISecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="73-73"];
m8_0 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.Fill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.Fill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="43-43"];
m8_1 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.Fill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Securities.Interfaces.ISecurityTransactionModel.Fill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="43-43"];
m8_4 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57"];
m8_5 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57"];
m9_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="InvalidSourceEventArgs.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="46-46"];
m9_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="InvalidSourceEventArgs.cs", label="Source = source", span="48-48"];
m9_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="InvalidSourceEventArgs.cs", label="Exception = exception", span="49-49"];
m9_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", file="InvalidSourceEventArgs.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs.InvalidSourceEventArgs(QuantConnect.Data.SubscriptionDataSource, System.Exception)", span="46-46"];
m9_4 [file="InvalidSourceEventArgs.cs", label="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs", span=""];
m11_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.ZipEntryNameSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ISubscriptionFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.ZipEntryNameSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="45-45"];
m11_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionFactory.TextSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ISubscriptionFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionFactory.TextSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="61-61"];
m11_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="ISubscriptionFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", span="39-39"];
m11_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="ISubscriptionFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", span="39-39"];
m11_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ISubscriptionFactory.cs", label="FileFormat.ZipEntryName", span="62-62"];
m11_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ISubscriptionFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="55-55"];
m11_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ISubscriptionFactory.cs", label="source.Format", span="57-57"];
m11_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=red, community=0, file="ISubscriptionFactory.cs", label="1: return new TextSubscriptionFactory(config, date, isLiveMode);", span="60-60"];
m11_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=red, community=0, file="ISubscriptionFactory.cs", label="1: return new ZipEntryNameSubscriptionFactory(config, date, isLiveMode);", span="63-63"];
m11_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ISubscriptionFactory.cs", label="throw new NotImplementedException(''SubscriptionFactory.ForSource('' + source + '') has not been implemented yet.'');", span="66-66"];
m11_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ISubscriptionFactory.cs", label="FileFormat.Csv", span="59-59"];
m11_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ISubscriptionFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="55-55"];
m13_16 [cluster="System.TimeSpan.FromDays(double)", file="LeanWinForm.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m13_72 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="double maxRunTime = 0", span="241-241"];
m13_12 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="LeanWinForm.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", span="129-129"];
m13_33 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="var initializeComplete = Isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(10), () =>\r\n            {\r\n                try\r\n                {\r\n                    //Algorithm is backtesting, not live:\r\n                    algorithm.SetLiveMode(false);\r\n                    //Set the backtest level asset ram allocation limits\r\n                    algorithm.SetAssetLimits(500, 100, 30);\r\n                    //Set the algorithm time before we even initialize:\r\n                    algorithm.SetDateTime(job.PeriodStart);\r\n                    //Initialise the algorithm, get the required data:\r\n                    algorithm.Initialize();\r\n                }\r\n                catch (Exception err)\r\n                {\r\n                    Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err.Message);\r\n                }\r\n            })", span="176-193"];
m13_34 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="!initializeComplete", span="196-196"];
m13_35 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="return false;", span="196-196"];
m13_37 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="_startingCaptial = algorithm.Portfolio.Cash", span="202-202"];
m13_38 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="job.UserPlan == UserPlan.Free", span="205-205"];
m13_39 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="_maxOrders = 10000", span="207-207"];
m13_40 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="_maxOrders = int.MaxValue", span="211-211"];
m13_42 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="_startingDate = job.PeriodStart", span="218-218"];
m13_43 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="Log.Trace(''SetUp Backtesting: User: '' + job.UserId + '' ProjectId: '' + job.ProjectId + '' AlgoId: '' + job.AlgorithmId)", span="221-221"];
m13_44 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="Log.Trace(''Dates: Start: '' + job.PeriodStart.ToShortDateString() + '' End: '' + job.PeriodFinish.ToShortDateString() + '' Cash: '' + _startingCaptial.ToString(''C''))", span="222-222"];
m13_45 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="Errors.Count > 0", span="224-224"];
m13_47 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="return initializeComplete;", span="228-228"];
m13_48 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="149-149"];
m13_50 [cluster="object.GetType()", file="LeanWinForm.cs", label="Entry object.GetType()", span="0-0"];
m13_51 [cluster="string.Format(string, params object[])", file="LeanWinForm.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m13_53 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="LeanWinForm.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="39-39"];
m13_54 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LeanWinForm.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m13_36 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="_maxRuntime = GetMaximumRuntime(job.PeriodStart, job.PeriodFinish, algorithm.SubscriptionManager.Count)", span="199-199"];
m13_41 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="algorithm.SetMaximumOrders(_maxOrders)", span="215-215"];
m13_46 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="initializeComplete = false", span="226-226"];
m13_49 [cluster="System.ArgumentException.ArgumentException(string)", file="LeanWinForm.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m13_52 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="LeanWinForm.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m13_55 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="LeanWinForm.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="83-83"];
m13_17 [cluster="lambda expression", file="LeanWinForm.cs", label="Entry lambda expression", span="135-135"];
m13_85 [cluster="lambda expression", file="LeanWinForm.cs", label="s.Symbol.Value != ticker", span="172-172"];
m13_86 [cluster="lambda expression", file="LeanWinForm.cs", label="Exit lambda expression", span="172-172"];
m13_87 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="LeanWinForm.cs", label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", span=""];
m13_3 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.Initialize()", file="LeanWinForm.cs", label="SetEndDate(2017, 02, 01)", span="38-38"];
m13_11 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="LeanWinForm.cs", label="return algorithm;", span="139-139"];
m13_68 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.ExpectAdditions(QuantConnect.Data.UniverseSelection.SecurityChanges, params string[])", file="LeanWinForm.cs", label="changes.AddedSecurities.All(s => s.Symbol.Value != ticker)", span="151-151"];
m13_58 [cluster="System.DateTime.ToShortDateString()", file="LeanWinForm.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m13_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="LeanWinForm.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m13_21 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="149-149"];
m13_22 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="var job = baseJob as BacktestNodePacket", span="151-151"];
m13_24 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="throw new ArgumentException(''Expected BacktestNodePacket but received '' + baseJob.GetType().Name);", span="154-154"];
m13_26 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="brokerage = new BacktestingBrokerage(algorithm)", span="160-160"];
m13_27 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="algorithm == null", span="162-162"];
m13_23 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="job == null", span="152-152"];
m13_25 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="Log.Trace(string.Format(''BacktestingSetupHandler.Setup(): Setting up job: Plan: {0}, UID: {1}, PID: {2}, Version: {3}, Source: {4}'', job.UserPlan, job.UserId, job.ProjectId, job.Version, job.RequestSource))", span="157-157"];
m13_30 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="job.PeriodStart == default(DateTime)", span="169-169"];
m13_28 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="Errors.Add(''Could not create instance of algorithm'')", span="164-164"];
m13_29 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="return false;", span="165-165"];
m13_31 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="Errors.Add(''Algorithm start date was never set'')", span="171-171"];
m13_32 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="LeanWinForm.cs", label="return false;", span="172-172"];
m13_84 [cluster="System.Math.Round(double)", file="LeanWinForm.cs", label="Entry System.Math.Round(double)", span="0-0"];
m13_18 [cluster="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.EqualWeightingPortfolioConstructionModel()", file="LeanWinForm.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.EqualWeightingPortfolioConstructionModel()", span="29-29"];
m13_19 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="LeanWinForm.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="270-270"];
m13_61 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="LeanWinForm.cs", label="Console.WriteLine($''{Time}: {orderEvent}'')", span="135-135"];
m13_62 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="LeanWinForm.cs", label="Exit QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="133-133"];
m13_63 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.ExpectAdditions(QuantConnect.Data.UniverseSelection.SecurityChanges, params string[])", file="LeanWinForm.cs", label="tickers == null && changes.AddedSecurities.Count > 0", span="140-140"];
m13_64 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.ExpectAdditions(QuantConnect.Data.UniverseSelection.SecurityChanges, params string[])", file="LeanWinForm.cs", label="throw new Exception($''{Time}: Expected no additions: {Time.DayOfWeek}'');", span="142-142"];
m13_60 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="LeanWinForm.cs", label="Entry QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="133-133"];
m13_65 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.ExpectAdditions(QuantConnect.Data.UniverseSelection.SecurityChanges, params string[])", file="LeanWinForm.cs", label="tickers == null", span="144-144"];
m13_67 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.ExpectAdditions(QuantConnect.Data.UniverseSelection.SecurityChanges, params string[])", file="LeanWinForm.cs", label=tickers, span="149-149"];
m13_66 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.ExpectAdditions(QuantConnect.Data.UniverseSelection.SecurityChanges, params string[])", file="LeanWinForm.cs", label="return;", span="146-146"];
m13_74 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="maxRunTime = 10 * subscriptionCount * jobDays", span="244-244"];
m13_73 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="var jobDays = (finish - start).TotalDays", span="242-242"];
m13_75 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="(maxRunTime / 3600) > 12", span="247-247"];
m13_59 [cluster="decimal.ToString(string)", file="LeanWinForm.cs", label="Entry decimal.ToString(string)", span="0-0"];
m13_77 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="maxRunTime < 60", span="252-252"];
m13_82 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="return TimeSpan.FromSeconds(maxRunTime);", span="266-266"];
m13_76 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="maxRunTime = 3600 * 12", span="250-250"];
m13_80 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="OS.IsWindows", span="261-261"];
m13_81 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="maxRunTime = 24 * 60 * 60", span="263-263"];
m13_78 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="maxRunTime = 60", span="255-255"];
m13_79 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="Log.Trace(''BacktestingSetupHandler.GetMaxRunTime(): Job Days: '' + jobDays + '' Max Runtime: '' + Math.Round(maxRunTime / 60) + '' min'')", span="258-258"];
m13_83 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", span="239-239"];
m13_56 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="LeanWinForm.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", span="239-239"];
m13_4 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.Initialize()", color=green, community=0, file="LeanWinForm.cs", label="0: SetUniverseSelection(new ScheduledUniverseSelectionModel(\r\n                DateRules.Every(DayOfWeek.Monday, DayOfWeek.Tuesday, DayOfWeek.Thursday),\r\n                TimeRules.Every(TimeSpan.FromHours(12)),\r\n                SelectSymbols\r\n            ))", span="41-45"];
m13_5 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.Initialize()", file="LeanWinForm.cs", label="SetAlpha(new ConstantAlphaModel(InsightType.Price, InsightDirection.Up, TimeSpan.FromDays(1)))", span="47-47"];
m13_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="LeanWinForm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1172-1172"];
m13_6 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.Initialize()", file="LeanWinForm.cs", label="SetPortfolioConstruction(new EqualWeightingPortfolioConstructionModel())", span="48-48"];
m13_7 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.Initialize()", file="LeanWinForm.cs", label="Exit QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.Initialize()", span="33-33"];
m13_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="LeanWinForm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1197-1197"];
m13_10 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="LeanWinForm.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="46-46"];
m13_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="LeanWinForm.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="42-42"];
m13_71 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="LeanWinForm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="219-219"];
m13_57 [cluster="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.ExpectAdditions(QuantConnect.Data.UniverseSelection.SecurityChanges, params string[])", file="LeanWinForm.cs", label="Entry QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm.ExpectAdditions(QuantConnect.Data.UniverseSelection.SecurityChanges, params string[])", span="138-138"];
m13_69 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="LeanWinForm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="413-413"];
m13_70 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="LeanWinForm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="283-283"];
m13_0 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="LeanWinForm.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="115-115"];
m13_1 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="LeanWinForm.cs", label="Errors = new List<string>()", span="117-117"];
m13_2 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="LeanWinForm.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="115-115"];
m13_14 [cluster="System.TimeSpan.FromSeconds(double)", file="LeanWinForm.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m13_13 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="LeanWinForm.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="85-85"];
m13_88 [file="LeanWinForm.cs", label=ticker, span=""];
m13_89 [file="LeanWinForm.cs", label=ticker, span=""];
m13_90 [file="LeanWinForm.cs", label=job, span=""];
m15_4 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="65-65"];
m15_5 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LiveTradingResultHandler.cs", label="Holdings = new EquityHolding(this)", span="83-83"];
m15_6 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="65-65"];
m15_3 [cluster="QuantConnect.Securities.Equity.EquityHolding.EquityHolding(QuantConnect.Securities.Security)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Securities.Equity.EquityHolding.EquityHolding(QuantConnect.Securities.Security)", span="27-27"];
m15_0 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m15_1 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LiveTradingResultHandler.cs", label="Holdings = new EquityHolding(this)", span="59-59"];
m15_2 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m15_7 [file="LiveTradingResultHandler.cs", label="QuantConnect.Securities.Equity.Equity", span=""];
m16_6 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m16_32 [cluster="QuantConnect.Data.Auxiliary.FactorFile.Read(string, string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.FactorFile.Read(string, string)", span="48-48"];
m16_23 [cluster="QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", span="124-124"];
m16_0 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", span="35-35"];
m16_1 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider()", span="35-35"];
m16_7 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", span="56-56"];
m16_8 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="FactorFile factorFile", span="58-58"];
m16_9 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="_cache.TryGetValue(symbol, out factorFile)", span="59-59"];
m16_11 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="var market = symbol.ID.Market", span="64-64"];
m16_14 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return GetFactorFile(symbol, symbol.Value, market);", span="70-70"];
m16_15 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="var mapFile = mapFileResolver.ResolveMapFile(symbol.ID.Symbol, symbol.ID.Date)", span="73-73"];
m16_17 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return GetFactorFile(symbol, symbol.Value, market);", span="76-76"];
m16_18 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return GetFactorFile(symbol, mapFile.Permtick, market);", span="79-79"];
m16_10 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="return factorFile;", span="61-61"];
m16_12 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="var mapFileResolver = _mapFileProvider.Get(market)", span="67-67"];
m16_13 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="mapFileResolver == null", span="68-68"];
m16_16 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="mapFile.IsNullOrEmpty()", span="74-74"];
m16_19 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)", span="56-56"];
m16_33 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0"];
m16_21 [cluster="QuantConnect.Interfaces.IMapFileProvider.Get(string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Interfaces.IMapFileProvider.Get(string)", span="33-33"];
m16_31 [cluster="QuantConnect.Data.Auxiliary.FactorFile.HasScalingFactors(string, string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.FactorFile.HasScalingFactors(string, string)", span="86-86"];
m16_2 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", span="45-45"];
m16_3 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="_mapFileProvider = mapFileProvider", span="47-47"];
m16_4 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="_cache = new ConcurrentDictionary<Symbol, FactorFile>()", span="48-48"];
m16_5 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.LocalDiskFactorFileProvider(QuantConnect.Interfaces.IMapFileProvider)", span="45-45"];
m16_22 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="Entry QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", span="85-85"];
m16_25 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="FactorFile.HasScalingFactors(permtick, market)", span="87-87"];
m16_26 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="var factorFile = FactorFile.Read(permtick, market)", span="89-89"];
m16_27 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="_cache.AddOrUpdate(symbol, factorFile, (s, c) => factorFile)", span="90-90"];
m16_29 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="return null;", span="94-94"];
m16_28 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="return factorFile;", span="91-91"];
m16_30 [cluster="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", file="LocalDiskFactorFileProvider.cs", label="Exit QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol, string, string)", span="85-85"];
m16_24 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m16_20 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="LocalDiskFactorFileProvider.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m16_34 [cluster="lambda expression", file="LocalDiskFactorFileProvider.cs", label="Entry lambda expression", span="90-90"];
m16_35 [cluster="lambda expression", file="LocalDiskFactorFileProvider.cs", label=factorFile, span="90-90"];
m16_36 [cluster="lambda expression", file="LocalDiskFactorFileProvider.cs", label="Exit lambda expression", span="90-90"];
m16_37 [file="LocalDiskFactorFileProvider.cs", label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", span=""];
m16_38 [file="LocalDiskFactorFileProvider.cs", label=factorFile, span=""];
m17_16 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesOldSymbolRemapped()", file="MapFileResolverTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesOldSymbolRemapped()", span="47-47"];
m17_17 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesOldSymbolRemapped()", file="MapFileResolverTests.cs", label="var april2 = new DateTime(2014, 04, 02)", span="50-50"];
m17_18 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesOldSymbolRemapped()", file="MapFileResolverTests.cs", label="var googMapFile = _resolver.ResolveMapFile(''GOOG'', april2)", span="51-51"];
m17_20 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesOldSymbolRemapped()", file="MapFileResolverTests.cs", label="Assert.AreEqual(''GOOG'', googMapFile.GetMappedSymbol(april2))", span="53-53"];
m17_21 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesOldSymbolRemapped()", file="MapFileResolverTests.cs", label="Assert.AreEqual(''GOOGL'', googMapFile.GetMappedSymbol(april2.AddDays(1)))", span="54-54"];
m17_19 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesOldSymbolRemapped()", file="MapFileResolverTests.cs", label="Assert.IsNotNull(googMapFile)", span="52-52"];
m17_22 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesOldSymbolRemapped()", file="MapFileResolverTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesOldSymbolRemapped()", span="47-47"];
m17_6 [cluster="QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", span="124-124"];
m17_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesMapFilesOnNonSpecifiedDates()", file="MapFileResolverTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesMapFilesOnNonSpecifiedDates()", span="37-37"];
m17_11 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesMapFilesOnNonSpecifiedDates()", file="MapFileResolverTests.cs", label="var mapFile = _resolver.ResolveMapFile(''GOOG'', new DateTime(2014, 04, 01))", span="39-39"];
m17_12 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesMapFilesOnNonSpecifiedDates()", file="MapFileResolverTests.cs", label="Assert.AreEqual(''GOOGL'', mapFile.Permtick)", span="40-40"];
m17_13 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesMapFilesOnNonSpecifiedDates()", file="MapFileResolverTests.cs", label="mapFile = _resolver.ResolveMapFile(''GOOG'', new DateTime(2014, 04, 03))", span="42-42"];
m17_14 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesMapFilesOnNonSpecifiedDates()", file="MapFileResolverTests.cs", label="Assert.AreEqual(''GOOG'', mapFile.Permtick)", span="43-43"];
m17_15 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesMapFilesOnNonSpecifiedDates()", file="MapFileResolverTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesMapFilesOnNonSpecifiedDates()", span="37-37"];
m17_9 [cluster="Unk.AreEqual", file="MapFileResolverTests.cs", label="Entry Unk.AreEqual", span=""];
m17_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesExactMapping()", file="MapFileResolverTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesExactMapping()", span="58-58"];
m17_25 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesExactMapping()", file="MapFileResolverTests.cs", label="var oih1 = _resolver.ResolveMapFile(''OIH.1'', new DateTime(2011, 12, 20))", span="60-60"];
m17_26 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesExactMapping()", file="MapFileResolverTests.cs", label="Assert.IsNotNull(oih1)", span="61-61"];
m17_27 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesExactMapping()", file="MapFileResolverTests.cs", label="Assert.AreEqual(''OIH'', oih1.GetMappedSymbol(new DateTime(2010, 02, 06)))", span="62-62"];
m17_28 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesExactMapping()", file="MapFileResolverTests.cs", label="Assert.AreEqual(''OIH'', oih1.GetMappedSymbol(new DateTime(2010, 02, 07)))", span="63-63"];
m17_29 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesExactMapping()", file="MapFileResolverTests.cs", label="Assert.AreEqual(''OIH'', oih1.GetMappedSymbol(new DateTime(2011, 12, 20)))", span="64-64"];
m17_30 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesExactMapping()", file="MapFileResolverTests.cs", label="Assert.AreEqual(string.Empty, oih1.GetMappedSymbol(new DateTime(2011, 12, 21)))", span="65-65"];
m17_31 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesExactMapping()", file="MapFileResolverTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesExactMapping()", span="58-58"];
m17_38 [cluster="QuantConnect.Data.Auxiliary.MapFileRow.MapFileRow(System.DateTime, string)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileRow.MapFileRow(System.DateTime, string)", span="41-41"];
m17_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesStraightMapping()", file="MapFileResolverTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesStraightMapping()", span="29-29"];
m17_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesStraightMapping()", file="MapFileResolverTests.cs", label="var spyMapFile = _resolver.ResolveMapFile(''SPY'', new DateTime(2015, 08, 23))", span="31-31"];
m17_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesStraightMapping()", file="MapFileResolverTests.cs", label="Assert.IsNotNull(spyMapFile)", span="32-32"];
m17_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesStraightMapping()", file="MapFileResolverTests.cs", label="Assert.AreEqual(''SPY'', spyMapFile.GetMappedSymbol(new DateTime(2015, 08, 23)))", span="33-33"];
m17_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesStraightMapping()", file="MapFileResolverTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.ResolvesStraightMapping()", span="29-29"];
m17_37 [cluster="QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.MapFile(string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFileRow>)", span="56-56"];
m17_7 [cluster="Unk.IsNotNull", file="MapFileResolverTests.cs", label="Entry Unk.IsNotNull", span=""];
m17_32 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.CreateMapFileResolver()", file="MapFileResolverTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.CreateMapFileResolver()", span="68-68"];
m17_33 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.CreateMapFileResolver()", file="MapFileResolverTests.cs", label="return new MapFileResolver(new List<MapFile>\r\n            {\r\n                // remapped\r\n                new MapFile(''goog'', new List<MapFileRow>\r\n                {\r\n                    new MapFileRow(new DateTime(2014, 03, 27), ''goocv''),\r\n                    new MapFileRow(new DateTime(2014, 04, 02), ''goocv''),\r\n                    new MapFileRow(new DateTime(2050, 12, 31), ''goog'')\r\n                }),\r\n                new MapFile(''googl'', new List<MapFileRow>\r\n                {\r\n                    new MapFileRow(new DateTime(2004, 08, 19), ''goog''),\r\n                    new MapFileRow(new DateTime(2014, 04, 02), ''goog''),\r\n                    new MapFileRow(new DateTime(2050, 12, 31), ''googl'')\r\n                }),\r\n                // straight mapping\r\n                new MapFile(''spy'', new List<MapFileRow>\r\n                {\r\n                    new MapFileRow(new DateTime(1998, 01, 02), ''spy''),\r\n                    new MapFileRow(new DateTime(2050, 12, 31), ''spy'')\r\n                }),\r\n                // new share class overtakes old share class same symbol\r\n                new MapFile(''oih.1'', new List<MapFileRow>\r\n                {\r\n                    new MapFileRow(new DateTime(2010, 02, 07), ''oih''),\r\n                    new MapFileRow(new DateTime(2011, 12, 20), ''oih'')\r\n                }),\r\n                new MapFile(''oih'', new List<MapFileRow>\r\n                {\r\n                    new MapFileRow(new DateTime(2011, 12, 21), ''oih''),\r\n                    new MapFileRow(new DateTime(2050, 12, 31), ''oih'')\r\n                }),\r\n            });", span="70-102"];
m17_34 [cluster="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.CreateMapFileResolver()", file="MapFileResolverTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests.CreateMapFileResolver()", span="68-68"];
m17_36 [cluster="System.Collections.Generic.List<T>.List()", file="MapFileResolverTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m17_8 [cluster="QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)", span="67-67"];
m17_23 [cluster="System.DateTime.AddDays(double)", file="MapFileResolverTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m17_35 [cluster="QuantConnect.Data.Auxiliary.MapFileResolver.MapFileResolver(System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFile>)", file="MapFileResolverTests.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileResolver.MapFileResolver(System.Collections.Generic.IEnumerable<QuantConnect.Data.Auxiliary.MapFile>)", span="46-46"];
m17_39 [file="MapFileResolverTests.cs", label="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests", span=""];
m18_45 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="Program.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101"];
m18_51 [cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.Initialize()", file="Program.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.Initialize()", span="101-101"];
m18_50 [cluster="Unk.Error", file="Program.cs", label="Entry Unk.Error", span=""];
m18_49 [cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="Program.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="89-89"];
m18_46 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="Program.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m18_48 [cluster="System.DateTime.ToShortTimeString()", file="Program.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m18_55 [cluster="object.GetType()", file="Program.cs", label="Entry object.GetType()", span="0-0"];
m18_59 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", file="Program.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44"];
m18_57 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Program.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m18_54 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="Program.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="191-191"];
m18_58 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="Program.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="59-59"];
m18_64 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Program.cs", label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", span="77-77"];
m18_61 [cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="Program.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50"];
m18_56 [cluster="QuantConnect.Util.VersionHelper.IsNotEqualVersion(string)", file="Program.cs", label="Entry QuantConnect.Util.VersionHelper.IsNotEqualVersion(string)", span="62-62"];
m18_52 [cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="Program.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="36-36"];
m18_63 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="Program.cs", label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="65-65"];
m18_60 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)", file="Program.cs", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)", span="54-54"];
m18_0 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Entry QuantConnect.Lean.Launcher.Program.Main(string[])", span="31-31"];
m18_1 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.LogHandler = Composer.Instance.GetExportedValueByTypeName<ILogHandler>(Config.Get(''log-handler'', ''CompositeLogHandler''))", span="33-33"];
m18_2 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="string mode = ''RELEASE''", span="36-36"];
m18_3 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="var liveMode = Config.GetBool(''live-mode'')", span="37-37"];
m18_6 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Trace(''Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v'' + Globals.Version + '' Mode: '' + mode)", span="46-46"];
m18_4 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.DebuggingEnabled = Config.GetBool(''debug-mode'')", span="38-38"];
m18_41 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="var engine = new Engine.Engine(leanEngineSystemHandlers, leanEngineAlgorithmHandlers, liveMode)", span="112-112"];
m18_5 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Thread.CurrentThread.Name = ''Algorithm Analysis Thread''", span="45-45"];
m18_7 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Trace(''Engine.Main(): Started '' + DateTime.Now.ToShortTimeString())", span="47-47"];
m18_8 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Trace(''Engine.Main(): Memory '' + OS.ApplicationMemoryUsed + ''Mb-App  '' + +OS.TotalPhysicalMemoryUsed + ''Mb-Used  '' + OS.TotalPhysicalMemory + ''Mb-Total'')", span="48-48"];
m18_9 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="LeanEngineSystemHandlers leanEngineSystemHandlers", span="51-51"];
m18_10 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="leanEngineSystemHandlers = LeanEngineSystemHandlers.FromConfiguration(Composer.Instance)", span="54-54"];
m18_11 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label=CompositionException, span="56-56"];
m18_14 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="leanEngineSystemHandlers.Initialize()", span="63-63"];
m18_16 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="var job = leanEngineSystemHandlers.JobQueue.NextJob(out assemblyPath)", span="67-67"];
m18_36 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="leanEngineSystemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, _collapseMessage)", span="103-103"];
m18_37 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="leanEngineSystemHandlers.Notify.SetAuthentication(job)", span="104-104"];
m18_38 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="leanEngineSystemHandlers.Notify.Send(new RuntimeErrorPacket(job.AlgorithmId, _collapseMessage))", span="105-105"];
m18_39 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="leanEngineSystemHandlers.JobQueue.AcknowledgeJob(job)", span="106-106"];
m18_12 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="58-58"];
m18_13 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="throw;", span="59-59"];
m18_15 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="string assemblyPath", span="66-66"];
m18_17 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="job == null", span="69-69"];
m18_32 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="job is LiveNodePacket", span="94-94"];
m18_33 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Trace(''         Brokerage:    '' + ((LiveNodePacket)job).Brokerage)", span="94-94"];
m18_34 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="VersionHelper.IsNotEqualVersion(job.Version) || job.Redelivered", span="98-98"];
m18_35 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Error(''Engine.Run(): Job Version: '' + job.Version + ''  Deployed Version: '' + Globals.Version + '' Redelivered: '' + job.Redelivered)", span="100-100"];
m18_42 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="engine.Run(job, assemblyPath)", span="113-113"];
m18_18 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="throw new Exception(''Engine.Main(): Job was null.'');", span="71-71"];
m18_19 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="LeanEngineAlgorithmHandlers leanEngineAlgorithmHandlers", span="74-74"];
m18_20 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="leanEngineAlgorithmHandlers = LeanEngineAlgorithmHandlers.FromConfiguration(Composer.Instance)", span="77-77"];
m18_21 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label=CompositionException, span="79-79"];
m18_24 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Trace(''JOB HANDLERS: '')", span="86-86"];
m18_25 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", color=red, community=0, file="Program.cs", label="0: Log.Trace(''         DataFeed:     '' + leanEngineAlgorithmHandlers.DataFeed.GetType().FullName)", span="87-87"];
m18_26 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Trace(''         Setup:        '' + leanEngineAlgorithmHandlers.Setup.GetType().FullName)", span="88-88"];
m18_27 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Trace(''         RealTime:     '' + leanEngineAlgorithmHandlers.RealTime.GetType().FullName)", span="89-89"];
m18_28 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Trace(''         Results:      '' + leanEngineAlgorithmHandlers.Results.GetType().FullName)", span="90-90"];
m18_29 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Trace(''         Transactions: '' + leanEngineAlgorithmHandlers.Transactions.GetType().FullName)", span="91-91"];
m18_30 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Trace(''         History:      '' + leanEngineAlgorithmHandlers.HistoryProvider.GetType().FullName)", span="92-92"];
m18_31 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Trace(''         Commands:     '' + leanEngineAlgorithmHandlers.CommandQueue.GetType().FullName)", span="93-93"];
m18_22 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="81-81"];
m18_23 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="throw;", span="82-82"];
m18_40 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="return;", span="107-107"];
m18_43 [cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="Program.cs", label="Exit QuantConnect.Lean.Launcher.Program.Main(string[])", span="31-31"];
m18_47 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Program.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m18_44 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Program.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m18_62 [cluster="QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Program.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="42-42"];
m19_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="232-232"];
m19_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return AROON(symbol, period, period, resolution, selector);", span="234-234"];
m19_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="232-232"];
m19_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1086-1086"];
m19_440 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="selector = selector ?? (x => x.Value)", span="1089-1089"];
m19_441 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="1092-1092"];
m19_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value));\r\n            }", span="1095-1099"];
m19_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1086-1086"];
m19_12 [cluster="QuantConnect.Indicators.Identity.Identity(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27"];
m19_128 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="67-67"];
m19_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="453-453"];
m19_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''OBV'', resolution)", span="455-455"];
m19_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, onBalanceVolume, resolution, selector)", span="457-457"];
m19_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var onBalanceVolume = new OnBalanceVolume(name)", span="456-456"];
m19_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return onBalanceVolume;", span="458-458"];
m19_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="453-453"];
m19_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="384-384"];
m19_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''ROC'' + period, resolution)", span="386-386"];
m19_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var rateofchange = new RateOfChange(name, period)", span="387-387"];
m19_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, rateofchange, resolution, selector)", span="388-388"];
m19_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return rateofchange;", span="389-389"];
m19_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="384-384"];
m19_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="401-401"];
m19_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''ROCP'' + period, resolution)", span="403-403"];
m19_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var rateofchangepercent = new RateOfChangePercent(name, period)", span="404-404"];
m19_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, rateofchangepercent, resolution, selector)", span="405-405"];
m19_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return rateofchangepercent;", span="406-406"];
m19_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="401-401"];
m19_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="49-49"];
m19_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="51-51"];
m19_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, identity, resolution, selector)", span="53-53"];
m19_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="var identity = new Identity(name)", span="52-52"];
m19_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="return identity;", span="54-54"];
m19_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="49-49"];
m19_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="840-840"];
m19_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''NATR'' + period, resolution)", span="842-842"];
m19_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var natr = new NormalizedAverageTrueRange(name, period)", span="843-843"];
m19_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, natr, resolution, selector)", span="844-844"];
m19_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return natr;", span="845-845"];
m19_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="840-840"];
m19_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="631-631"];
m19_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''VAR'' + period, resolution)", span="633-633"];
m19_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var variance = new Variance(name, period)", span="634-634"];
m19_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, variance, resolution, selector)", span="635-635"];
m19_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return variance;", span="636-636"];
m19_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="631-631"];
m19_215 [cluster="QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", span="54-54"];
m19_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="489-489"];
m19_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''KCH'', resolution)", span="491-491"];
m19_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var keltnerChannels = new KeltnerChannels(name, period, k, movingAverageType)", span="492-492"];
m19_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, keltnerChannels, resolution, selector)", span="493-493"];
m19_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return keltnerChannels;", span="494-494"];
m19_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="489-489"];
m19_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="553-553"];
m19_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return STO(symbol, period, period, 3, resolution);", span="555-555"];
m19_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="553-553"];
m19_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="774-774"];
m19_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MAD'' + period, resolution)", span="776-776"];
m19_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var mad = new MeanAbsoluteDeviation(name, period)", span="777-777"];
m19_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, mad, resolution, selector)", span="778-778"];
m19_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return mad;", span="779-779"];
m19_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="774-774"];
m19_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="824-824"];
m19_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''T3({0},{1})'', period, volumeFactor), resolution)", span="826-826"];
m19_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var t3 = new T3MovingAverage(name, period, volumeFactor)", span="827-827"];
m19_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, t3, resolution, selector)", span="828-828"];
m19_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return t3;", span="829-829"];
m19_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="824-824"];
m19_351 [cluster="QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", span="62-62"];
m19_379 [cluster="QuantConnect.Indicators.UltimateOscillator.UltimateOscillator(string, int, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.UltimateOscillator.UltimateOscillator(string, int, int, int)", span="55-55"];
m19_72 [cluster="System.Type.IsAssignableFrom(System.Type)", file="QCAlgorithm.Indicators.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m19_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="678-678"];
m19_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''TR'', resolution)", span="680-680"];
m19_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, tr, resolution, selector)", span="682-682"];
m19_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var tr = new TrueRange(name)", span="681-681"];
m19_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return tr;", span="683-683"];
m19_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="678-678"];
m19_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="34-34"];
m19_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="var resolution = GetSubscription(symbol).Resolution", span="36-36"];
m19_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="return Identity(symbol, resolution, selector, fieldName);", span="37-37"];
m19_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="34-34"];
m19_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="298-298"];
m19_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''RSI'' + period, resolution)", span="300-300"];
m19_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var rsi = new RelativeStrengthIndex(name, period, movingAverageType)", span="301-301"];
m19_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, rsi, resolution, selector)", span="302-302"];
m19_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return rsi;", span="303-303"];
m19_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="298-298"];
m19_330 [cluster="QuantConnect.Indicators.Sum.Sum(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Sum.Sum(string, int)", span="44-44"];
m19_444 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="121-121"];
m19_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1044-1044"];
m19_423 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''SWISS'' + period, resolution)", span="1046-1046"];
m19_424 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", color=red, community=0, file="QCAlgorithm.Indicators.cs", label="0: var swiss = new SwissArmyKnife(name, period, n, delta, tool)", span="1047-1047"];
m19_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, swiss, resolution, selector)", span="1048-1048"];
m19_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return swiss;", span="1049-1049"];
m19_427 [cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1044-1044"];
m19_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="507-507"];
m19_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''DCH'', resolution)", span="509-509"];
m19_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var donchianChannel = new DonchianChannel(name, upperPeriod, lowerPeriod)", span="510-510"];
m19_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, donchianChannel, resolution, selector)", span="511-511"];
m19_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return donchianChannel;", span="512-512"];
m19_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="507-507"];
m19_452 [cluster="System.Func<T, TResult>.Invoke(T)", file="QCAlgorithm.Indicators.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m19_487 [cluster="System.Type.MakeGenericType(params System.Type[])", file="QCAlgorithm.Indicators.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m19_539 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m19_507 [cluster="QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", span="39-39"];
m19_100 [cluster="QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", span="61-61"];
m19_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="710-710"];
m19_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''DEMA'' + period, resolution)", span="712-712"];
m19_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var dema = new DoubleExponentialMovingAverage(name, period)", span="713-713"];
m19_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, dema, resolution, selector)", span="714-714"];
m19_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return dema;", span="715-715"];
m19_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="710-710"];
m19_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="367-367"];
m19_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''BB({0},{1})'', period, k), resolution)", span="369-369"];
m19_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var bb = new BollingerBands(name, period, k, movingAverageType)", span="370-370"];
m19_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, bb, resolution, selector)", span="371-371"];
m19_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return bb;", span="372-372"];
m19_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="367-367"];
m19_393 [cluster="QuantConnect.Indicators.MidPrice.MidPrice(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MidPrice.MidPrice(string, int)", span="35-35"];
m19_505 [cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", span="30-30"];
m19_460 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", span="1137-1137"];
m19_461 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="1140-1140"];
m19_462 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", span="1137-1137"];
m19_267 [cluster="QuantConnect.Indicators.AccumulationDistributionOscillator.AccumulationDistributionOscillator(string, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AccumulationDistributionOscillator.AccumulationDistributionOscillator(string, int, int)", span="48-48"];
m19_421 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", span="40-40"];
m19_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1217-1217"];
m19_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="var subscription = GetSubscription(symbol)", span="1219-1219"];
m19_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="!timeSpan.HasValue || subscription.Resolution.ToTimeSpan() == timeSpan.Value", span="1222-1222"];
m19_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="timeSpan.Value < subscription.Resolution.ToTimeSpan()", span="1231-1231"];
m19_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentException(string.Format(''Unable to create {0} consolidator because {0} is registered for {1} data. '' +\r\n                    ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, subscription.Resolution)\r\n                    );", span="1233-1236"];
m19_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="return new TradeBarConsolidator(timeSpan.Value);", span="1243-1243"];
m19_499 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="return new TickConsolidator(timeSpan.Value);", span="1250-1250"];
m19_501 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="return new DynamicDataConsolidator(timeSpan.Value);", span="1256-1256"];
m19_502 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="return new BaseDataConsolidator(timeSpan.Value);", span="1260-1260"];
m19_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="var identityConsolidatorType = typeof(IdentityDataConsolidator<>).MakeGenericType(subscription.Type)", span="1225-1225"];
m19_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="1241-1241"];
m19_498 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="typeof(Tick).IsAssignableFrom(subscription.Type)", span="1248-1248"];
m19_500 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="typeof(DynamicData).IsAssignableFrom(subscription.Type)", span="1254-1254"];
m19_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="return (IDataConsolidator)Activator.CreateInstance(identityConsolidatorType);", span="1226-1226"];
m19_503 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1217-1217"];
m19_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="316-316"];
m19_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''CCI'' + period, resolution)", span="318-318"];
m19_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var cci = new CommodityChannelIndex(name, period, movingAverageType)", span="319-319"];
m19_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, cci, resolution, selector)", span="320-320"];
m19_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return cci;", span="321-321"];
m19_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="316-316"];
m19_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="419-419"];
m19_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''WILR'' + period, resolution)", span="421-421"];
m19_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var williamspercentr = new WilliamsPercentR(name, period)", span="422-422"];
m19_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, williamspercentr, resolution, selector)", span="423-423"];
m19_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return williamspercentr;", span="424-424"];
m19_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="419-419"];
m19_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="122-122"];
m19_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''EMA'' + period, resolution)", span="124-124"];
m19_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var ema = new ExponentialMovingAverage(name, period)", span="125-125"];
m19_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ema, resolution, selector)", span="126-126"];
m19_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return ema;", span="127-127"];
m19_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="122-122"];
m19_504 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", span="44-44"];
m19_114 [cluster="QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", span="38-38"];
m19_517 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1275-1275"];
m19_75 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="((TradeBar)x).High", span="187-187"];
m19_74 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="187-187"];
m19_76 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="187-187"];
m19_89 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="((TradeBar) x).Low", span="216-216"];
m19_88 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="216-216"];
m19_90 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="216-216"];
m19_432 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Value", span="1062-1062"];
m19_431 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1062-1062"];
m19_433 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1062-1062"];
m19_438 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Value", span="1075-1075"];
m19_437 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1075-1075"];
m19_439 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1075-1075"];
m19_450 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value))", span="1098-1098"];
m19_446 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Value", span="1089-1089"];
m19_449 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="var value = selector(consolidated)", span="1097-1097"];
m19_445 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1089-1089"];
m19_447 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1089-1089"];
m19_448 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1095-1099"];
m19_451 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1095-1099"];
m19_476 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="indicator.Update(value)", span="1174-1174"];
m19_472 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="(T) x", span="1155-1155"];
m19_475 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="var value = selector(consolidated)", span="1173-1173"];
m19_471 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1155-1155"];
m19_473 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1155-1155"];
m19_474 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Entry lambda expression", span="1171-1175"];
m19_477 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1171-1175"];
m19_518 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="x.Symbol == symbol", span="1275-1275"];
m19_519 [cluster="lambda expression", file="QCAlgorithm.Indicators.cs", label="Exit lambda expression", span="1275-1275"];
m19_365 [cluster="QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", span="39-39"];
m19_135 [cluster="QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", span="78-78"];
m19_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="646-646"];
m19_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''AD'', resolution)", span="648-648"];
m19_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ad, resolution, selector)", span="650-650"];
m19_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var ad = new AccumulationDistribution(name)", span="649-649"];
m19_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return ad;", span="651-651"];
m19_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="646-646"];
m19_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="742-742"];
m19_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''TRIMA'' + period, resolution)", span="744-744"];
m19_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var trima = new TriangularMovingAverage(name, period)", span="745-745"];
m19_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, trima, resolution, selector)", span="746-746"];
m19_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return trima;", span="747-747"];
m19_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="742-742"];
m19_401 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="989-989"];
m19_402 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''PPO({0},{1})'', fastPeriod, slowPeriod), resolution)", span="991-991"];
m19_403 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var ppo = new PercentagePriceOscillator(name, fastPeriod, slowPeriod, movingAverageType)", span="992-992"];
m19_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ppo, resolution, selector)", span="993-993"];
m19_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return ppo;", span="994-994"];
m19_406 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="989-989"];
m19_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="538-538"];
m19_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''STO'', resolution)", span="540-540"];
m19_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var stoch = new Stochastic(name, period, kPeriod, dPeriod)", span="541-541"];
m19_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, stoch, resolution)", span="542-542"];
m19_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return stoch;", span="543-543"];
m19_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="538-538"];
m19_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="158-158"];
m19_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''MACD({0},{1})'', fastPeriod, slowPeriod), resolution)", span="160-160"];
m19_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var macd = new MovingAverageConvergenceDivergence(name, fastPeriod, slowPeriod, signalPeriod, type)", span="161-161"];
m19_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, macd, resolution, selector)", span="162-162"];
m19_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return macd;", span="163-163"];
m19_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="158-158"];
m19_142 [cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="44-44"];
m19_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="436-436"];
m19_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''LWMA'' + period, resolution)", span="438-438"];
m19_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var lwma = new LinearWeightedMovingAverage(name, period)", span="439-439"];
m19_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, lwma, resolution, selector)", span="440-440"];
m19_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return lwma;", span="441-441"];
m19_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="436-436"];
m19_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="921-921"];
m19_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ULTOSC({0},{1},{2})'', period1, period2, period3), resolution)", span="923-923"];
m19_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var ultosc = new UltimateOscillator(name, period1, period2, period3)", span="924-924"];
m19_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ultosc, resolution, selector)", span="925-925"];
m19_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return ultosc;", span="926-926"];
m19_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="921-921"];
m19_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1073-1073"];
m19_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="1075-1075"];
m19_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1073-1073"];
m19_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="204-204"];
m19_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MIN'' + period, resolution)", span="206-206"];
m19_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var min = new Minimum(name, period)", span="207-207"];
m19_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="selector == null", span="210-210"];
m19_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var subscription = GetSubscription(symbol)", span="212-212"];
m19_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, min, ResolveConsolidator(symbol, resolution), selector)", span="220-220"];
m19_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return min;", span="221-221"];
m19_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="typeof (TradeBar).IsAssignableFrom(subscription.Type)", span="213-213"];
m19_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="selector = x => ((TradeBar) x).Low", span="216-216"];
m19_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="204-204"];
m19_260 [cluster="QuantConnect.Indicators.AccumulationDistribution.AccumulationDistribution(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AccumulationDistribution.AccumulationDistribution(string)", span="30-30"];
m19_232 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", span="40-40"];
m19_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1269-1269"];
m19_508 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="SubscriptionDataConfig subscription", span="1271-1271"];
m19_509 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="subscription = SubscriptionManager.Subscriptions.First(x => x.Symbol == symbol)", span="1275-1275"];
m19_511 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="throw new Exception(''Please register to receive data for symbol ''' + symbol.ToString() + ''' using the AddSecurity() function.'');", span="1280-1280"];
m19_510 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label=InvalidOperationException, span="1277-1277"];
m19_512 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="return subscription;", span="1282-1282"];
m19_513 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1269-1269"];
m19_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="524-524"];
m19_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return DCH(symbol, period, period, resolution, selector);", span="526-526"];
m19_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="524-524"];
m19_400 [cluster="QuantConnect.Indicators.AbsolutePriceOscillator.AbsolutePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AbsolutePriceOscillator.AbsolutePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", span="34-34"];
m19_316 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", span="48-48"];
m19_38 [cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="56-56"];
m19_20 [cluster="string.Format(string, object, object, object)", file="QCAlgorithm.Indicators.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m19_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="694-694"];
m19_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''CMO'' + period, resolution)", span="696-696"];
m19_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var cmo = new ChandeMomentumOscillator(name, period)", span="697-697"];
m19_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, cmo, resolution, selector)", span="698-698"];
m19_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return cmo;", span="699-699"];
m19_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="694-694"];
m19_60 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", span="66-66"];
m19_288 [cluster="QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", span="38-38"];
m19_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="66-66"];
m19_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="string name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="68-68"];
m19_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, identity, ResolveConsolidator(symbol, resolution), selector)", span="70-70"];
m19_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="var identity = new Identity(name)", span="69-69"];
m19_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="return identity;", span="71-71"];
m19_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="66-66"];
m19_372 [cluster="QuantConnect.Indicators.MidPoint.MidPoint(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MidPoint.MidPoint(string, int)", span="33-33"];
m19_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="470-470"];
m19_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''ADX'', resolution)", span="472-472"];
m19_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var averageDirectionalIndex = new AverageDirectionalIndex(name, period)", span="473-473"];
m19_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, averageDirectionalIndex, resolution, selector)", span="474-474"];
m19_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return averageDirectionalIndex;", span="475-475"];
m19_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="470-470"];
m19_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="581-581"];
m19_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''LSMA'' + period, resolution)", span="583-583"];
m19_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var lsma = new LeastSquaresMovingAverage(name, period)", span="584-584"];
m19_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, lsma, resolution, selector)", span="585-585"];
m19_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return lsma;", span="586-586"];
m19_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="581-581"];
m19_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="887-887"];
m19_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''KAMA'' + period, resolution)", span="889-889"];
m19_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var kama = new KaufmanAdaptiveMovingAverage(name, period)", span="890-890"];
m19_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, kama, resolution, selector)", span="891-891"];
m19_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return kama;", span="892-892"];
m19_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="887-887"];
m19_198 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="80-80"];
m19_87 [cluster="QuantConnect.Indicators.Minimum.Minimum(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Minimum.Minimum(string, int)", span="51-51"];
m19_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="726-726"];
m19_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''TEMA'' + period, resolution)", span="728-728"];
m19_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var tema = new TripleExponentialMovingAverage(name, period)", span="729-729"];
m19_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, tema, resolution, selector)", span="730-730"];
m19_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return tema;", span="731-731"];
m19_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="726-726"];
m19_309 [cluster="QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", span="29-29"];
m19_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", span="1024-1024"];
m19_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''FRAMA'' + period, resolution)", span="1026-1026"];
m19_417 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var frama = new FractalAdaptiveMovingAverage(name, period, longPeriod)", span="1027-1027"];
m19_418 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, frama, resolution)", span="1028-1028"];
m19_419 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return frama;", span="1029-1029"];
m19_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", span="1024-1024"];
m19_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="615-615"];
m19_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''BOP'', resolution)", span="617-617"];
m19_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, bop, resolution, selector)", span="619-619"];
m19_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var bop = new BalanceOfPower(name)", span="618-618"];
m19_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return bop;", span="620-620"];
m19_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="615-615"];
m19_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="791-791"];
m19_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''MOMERSION({0},{1})'', minPeriod, fullPeriod), resolution)", span="793-793"];
m19_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var momersion = new MomersionIndicator(name, minPeriod, fullPeriod)", span="794-794"];
m19_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, momersion, resolution, selector)", span="795-795"];
m19_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return momersion;", span="796-796"];
m19_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="791-791"];
m19_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="971-971"];
m19_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''APO({0},{1})'', fastPeriod, slowPeriod), resolution)", span="973-973"];
m19_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var apo = new AbsolutePriceOscillator(name, fastPeriod, slowPeriod, movingAverageType)", span="974-974"];
m19_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, apo, resolution, selector)", span="975-975"];
m19_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return apo;", span="976-976"];
m19_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="971-971"];
m19_302 [cluster="QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", span="34-34"];
m19_488 [cluster="System.Activator.CreateInstance(System.Type)", file="QCAlgorithm.Indicators.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m19_253 [cluster="QuantConnect.Indicators.Variance.Variance(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Variance.Variance(string, int)", span="39-39"];
m19_407 [cluster="QuantConnect.Indicators.PercentagePriceOscillator.PercentagePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.PercentagePriceOscillator.PercentagePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", span="31-31"];
m19_516 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Symbol.ToString()", span="208-208"];
m19_246 [cluster="QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", span="30-30"];
m19_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="139-139"];
m19_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''SMA'' + period, resolution)", span="141-141"];
m19_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var sma = new SimpleMovingAverage(name, period)", span="142-142"];
m19_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, sma, resolution, selector)", span="143-143"];
m19_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return sma;", span="144-144"];
m19_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="139-139"];
m19_225 [cluster="QuantConnect.Indicators.LogReturn.LogReturn(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.LogReturn.LogReturn(string, int)", span="31-31"];
m19_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="871-871"];
m19_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''ADXR'' + period, resolution)", span="873-873"];
m19_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var adxr = new AverageDirectionalMovementIndexRating(name, period)", span="874-874"];
m19_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, adxr, resolution, selector)", span="875-875"];
m19_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return adxr;", span="876-876"];
m19_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="871-871"];
m19_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="246-246"];
m19_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''AROON({0},{1})'', upPeriod, downPeriod), resolution)", span="248-248"];
m19_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var aroon = new AroonOscillator(name, upPeriod, downPeriod)", span="249-249"];
m19_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, aroon, resolution, selector)", span="250-250"];
m19_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return aroon;", span="251-251"];
m19_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="246-246"];
m19_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="1006-1006"];
m19_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''VWAP'' + period, resolution)", span="1008-1008"];
m19_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var vwap = new VolumeWeightedAveragePriceIndicator(name, period)", span="1009-1009"];
m19_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, vwap, resolution, selector)", span="1010-1010"];
m19_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return vwap;", span="1011-1011"];
m19_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="1006-1006"];
m19_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="953-953"];
m19_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MIDPRICE'' + period, resolution)", span="955-955"];
m19_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var midprice = new MidPrice(name, period)", span="956-956"];
m19_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, midprice, resolution, selector)", span="957-957"];
m19_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return midprice;", span="958-958"];
m19_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="953-953"];
m19_205 [cluster="QuantConnect.Indicators.DonchianChannel.DonchianChannel(string, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.DonchianChannel.DonchianChannel(string, int, int)", span="55-55"];
m19_149 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="53-53"];
m19_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1109-1109"];
m19_455 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution))", span="1112-1112"];
m19_456 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1109-1109"];
m19_470 [cluster="System.ArgumentException.ArgumentException(string)", file="QCAlgorithm.Indicators.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m19_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1292-1292"];
m19_520 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="!resolution.HasValue", span="1294-1294"];
m19_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="resolution = GetSubscription(symbol).Resolution", span="1296-1296"];
m19_523 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label=resolution, span="1299-1299"];
m19_537 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return string.Format(''{0}({1}{2})'', type, symbol.ToString(), res);", span="1323-1323"];
m19_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string res", span="1298-1298"];
m19_524 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Tick", span="1301-1301"];
m19_526 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Second", span="1304-1304"];
m19_528 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Minute", span="1307-1307"];
m19_530 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Hour", span="1310-1310"];
m19_532 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Resolution.Daily", span="1313-1313"];
m19_534 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label=null, span="1316-1316"];
m19_536 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentOutOfRangeException(''resolution'');", span="1320-1320"];
m19_525 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_tick''", span="1302-1302"];
m19_527 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_sec''", span="1305-1305"];
m19_529 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_min''", span="1308-1308"];
m19_531 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_hr''", span="1311-1311"];
m19_533 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = ''_day''", span="1314-1314"];
m19_535 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="res = string.Empty", span="1317-1317"];
m19_538 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1292-1292"];
m19_428 [cluster="SwissArmyKnife.cstr", file="QCAlgorithm.Indicators.cs", label="Entry SwissArmyKnife.cstr", span=""];
m19_454 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m19_53 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m19_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="263-263"];
m19_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''MOM'' + period, resolution)", span="265-265"];
m19_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var momentum = new Momentum(name, period)", span="266-266"];
m19_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, momentum, resolution, selector)", span="267-267"];
m19_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return momentum;", span="268-268"];
m19_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="263-263"];
m19_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="349-349"];
m19_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''STD'' + period, resolution)", span="351-351"];
m19_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var std = new StandardDeviation(name, period)", span="352-352"];
m19_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, std, resolution, selector)", span="353-353"];
m19_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return std;", span="354-354"];
m19_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="349-349"];
m19_239 [cluster="QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", span="43-43"];
m19_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="105-105"];
m19_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''ATR'' + period, resolution)", span="107-107"];
m19_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var atr = new AverageTrueRange(name, period, type)", span="108-108"];
m19_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, atr, resolution, selector)", span="109-109"];
m19_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return atr;", span="110-110"];
m19_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="105-105"];
m19_414 [cluster="QuantConnect.Indicators.VolumeWeightedAveragePriceIndicator.VolumeWeightedAveragePriceIndicator(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.VolumeWeightedAveragePriceIndicator.VolumeWeightedAveragePriceIndicator(string, int)", span="48-48"];
m19_184 [cluster="QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", span="34-34"];
m19_156 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", span="37-37"];
m19_107 [cluster="QuantConnect.Indicators.Momentum.Momentum(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Momentum.Momentum(string, int)", span="37-37"];
m19_29 [cluster="string.Format(string, object, object)", file="QCAlgorithm.Indicators.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m19_46 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", span="30-30"];
m19_170 [cluster="QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", span="59-59"];
m19_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="903-903"];
m19_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MIDPOINT'' + period, resolution)", span="905-905"];
m19_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var midpoint = new MidPoint(name, period)", span="906-906"];
m19_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, midpoint, resolution, selector)", span="907-907"];
m19_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return midpoint;", span="908-908"];
m19_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="903-903"];
m19_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="280-280"];
m19_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''MOMP'' + period, resolution)", span="282-282"];
m19_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var momentum = new MomentumPercent(name, period)", span="283-283"];
m19_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, momentum, resolution, selector)", span="284-284"];
m19_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return momentum;", span="285-285"];
m19_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="280-280"];
m19_514 [cluster="Unk.First", file="QCAlgorithm.Indicators.cs", label="Entry Unk.First", span=""];
m19_489 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="581-581"];
m19_163 [cluster="QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", span="37-37"];
m19_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="599-599"];
m19_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''PSAR({0},{1},{2})'', afStart, afIncrement, afMax), resolution)", span="601-601"];
m19_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var psar = new ParabolicStopAndReverse(name, afStart, afIncrement, afMax)", span="602-602"];
m19_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, psar, resolution, selector)", span="603-603"];
m19_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return psar;", span="604-604"];
m19_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="599-599"];
m19_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="175-175"];
m19_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MAX'' + period, resolution)", span="177-177"];
m19_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var max = new Maximum(name, period)", span="178-178"];
m19_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="selector == null", span="181-181"];
m19_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var subscription = GetSubscription(symbol)", span="183-183"];
m19_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, max, ResolveConsolidator(symbol, resolution), selector)", span="191-191"];
m19_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return max;", span="192-192"];
m19_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="184-184"];
m19_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="selector = x => ((TradeBar)x).High", span="187-187"];
m19_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="175-175"];
m19_281 [cluster="QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", span="44-44"];
m19_337 [cluster="QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", span="38-38"];
m19_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1060-1060"];
m19_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="1062-1062"];
m19_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1060-1060"];
m19_274 [cluster="QuantConnect.Indicators.TrueRange.TrueRange(string)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.TrueRange.TrueRange(string)", span="35-35"];
m19_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="807-807"];
m19_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''SUM'' + period, resolution)", span="809-809"];
m19_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var sum = new Sum(name, period)", span="810-810"];
m19_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, sum, resolution, selector)", span="811-811"];
m19_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return sum;", span="812-812"];
m19_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="807-807"];
m19_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="565-565"];
m19_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="string name = CreateIndicatorName(symbol, ''LOGR'', resolution)", span="567-567"];
m19_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var logr = new LogReturn(name, period)", span="568-568"];
m19_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, logr, resolution)", span="569-569"];
m19_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return logr;", span="570-570"];
m19_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="565-565"];
m19_506 [cluster="QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", span="30-30"];
m19_121 [cluster="QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55"];
m19_71 [cluster="QuantConnect.Indicators.Maximum.Maximum(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Maximum.Maximum(string, int)", span="51-51"];
m19_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="758-758"];
m19_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''ROCR'' + period, resolution)", span="760-760"];
m19_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var rocr = new RateOfChangeRatio(name, period)", span="761-761"];
m19_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, rocr, resolution, selector)", span="762-762"];
m19_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return rocr;", span="763-763"];
m19_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="758-758"];
m19_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="663-663"];
m19_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ADOSC({0},{1})'', fastPeriod, slowPeriod), resolution)", span="665-665"];
m19_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var adOsc = new AccumulationDistributionOscillator(name, fastPeriod, slowPeriod)", span="666-666"];
m19_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, adOsc, resolution, selector)", span="667-667"];
m19_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return adOsc;", span="668-668"];
m19_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="663-663"];
m19_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="333-333"];
m19_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''MFI'' + period, resolution)", span="335-335"];
m19_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var mfi = new MoneyFlowIndex(name, period)", span="336-336"];
m19_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, mfi, resolution, selector)", span="337-337"];
m19_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return mfi;", span="338-338"];
m19_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="333-333"];
m19_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="87-87"];
m19_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ICHIMOKU({0},{1})'', tenkanPeriod, kijunPeriod), resolution)", span="89-89"];
m19_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var ichimoku = new IchimokuKinkoHyo(name, tenkanPeriod, kijunPeriod, senkouAPeriod, senkouBPeriod, senkouADelayPeriod, senkouBDelayPeriod)", span="90-90"];
m19_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ichimoku, resolution)", span="91-91"];
m19_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return ichimoku;", span="92-92"];
m19_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="87-87"];
m19_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="855-855"];
m19_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''HA'', resolution)", span="857-857"];
m19_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, ha, resolution, selector)", span="859-859"];
m19_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="var ha = new HeikinAshi(name)", span="858-858"];
m19_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="return ha;", span="860-860"];
m19_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="855-855"];
m19_386 [cluster="QuantConnect.Indicators.Trix.Trix(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.Trix.Trix(string, int)", span="35-35"];
m19_453 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52"];
m19_191 [cluster="QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", span="66-66"];
m19_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="937-937"];
m19_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var name = CreateIndicatorName(symbol, ''TRIX'' + period, resolution)", span="939-939"];
m19_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="var trix = new Trix(name, period)", span="940-940"];
m19_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, trix, resolution, selector)", span="941-941"];
m19_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="return trix;", span="942-942"];
m19_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="937-937"];
m19_295 [cluster="QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", span="37-37"];
m19_457 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", span="1151-1151"];
m19_463 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="selector = selector ?? (x => (T) x)", span="1155-1155"];
m19_464 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="1158-1158"];
m19_466 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="!type.IsAssignableFrom(consolidator.OutputType)", span="1162-1162"];
m19_467 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentException(string.Format(''Type mismatch found between consolidator and indicator for symbol: {0}.'' +\r\n                    ''Consolidator outputs type {1} but indicator expects input type {2}'',\r\n                    symbol, consolidator.OutputType.Name, type.Name)\r\n                    );", span="1164-1167"];
m19_468 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(value);\r\n            }", span="1171-1175"];
m19_465 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="var type = typeof(T)", span="1161-1161"];
m19_469 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", span="1151-1151"];
m19_177 [cluster="QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", span="41-41"];
m19_344 [cluster="QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", span="36-36"];
m19_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", span="1123-1123"];
m19_458 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="1126-1126"];
m19_459 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", span="1123-1123"];
m19_30 [cluster="QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", span="99-99"];
m19_358 [cluster="QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", span="36-36"];
m19_323 [cluster="QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", span="52-52"];
m19_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1184-1184"];
m19_478 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var subscription = GetSubscription(symbol)", span="1186-1186"];
m19_479 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="!resolution.HasValue || subscription.Resolution == resolution.Value", span="1189-1189"];
m19_482 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var timeSpan = resolution.Value.ToTimeSpan()", span="1196-1196"];
m19_484 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="throw new ArgumentException(string.Format(''Unable to create {0} {1} consolidator because {0} is registered for {2} data. '' +\r\n                    ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, resolution.Value, subscription.Resolution)\r\n                    );", span="1202-1205"];
m19_485 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return ResolveConsolidator(symbol, timeSpan);", span="1208-1208"];
m19_480 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="var identityConsolidatorType = typeof(IdentityDataConsolidator<>).MakeGenericType(subscription.Type)", span="1192-1192"];
m19_483 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="timeSpan < subscription.Resolution.ToTimeSpan()", span="1200-1200"];
m19_481 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="return (IDataConsolidator)Activator.CreateInstance(identityConsolidatorType);", span="1193-1193"];
m19_486 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.Indicators.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1184-1184"];
m19_540 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m19_541 [file="QCAlgorithm.Indicators.cs", label="System.Func<QuantConnect.Data.BaseData, decimal>", span=""];
m19_542 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", span=""];
m19_543 [file="QCAlgorithm.Indicators.cs", label="System.Func<QuantConnect.Data.BaseData, T>", span=""];
m19_544 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Indicators.IndicatorBase<T>", span=""];
m19_545 [file="QCAlgorithm.Indicators.cs", label="QuantConnect.Symbol", span=""];
m20_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="ReaderErrorEventArgs.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", span="45-45"];
m20_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="ReaderErrorEventArgs.cs", label="Line = line", span="47-47"];
m20_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="ReaderErrorEventArgs.cs", label="Exception = exception", span="48-48"];
m20_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="ReaderErrorEventArgs.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", span="45-45"];
m20_4 [file="ReaderErrorEventArgs.cs", label="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs", span=""];
m23_1 [cluster="QuantConnect.Data.Market.Split.Split()", color=green, community=0, file="Split.cs", label="1: DataType = MarketDataType.Auxiliary", span="30-30"];
m23_2 [cluster="QuantConnect.Data.Market.Split.Split()", file="Split.cs", label="Exit QuantConnect.Data.Market.Split.Split()", span="28-28"];
m23_10 [cluster="QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Split.cs", label="throw new NotImplementedException(''This method is not supposed to be called on the Split type.'');", span="78-78"];
m23_13 [cluster="QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Split.cs", label="Entry QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="88-88"];
m23_12 [cluster="System.NotImplementedException.NotImplementedException(string)", file="Split.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m23_11 [cluster="QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="Split.cs", label="Exit QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="75-75"];
m23_14 [cluster="QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Split.cs", label="throw new NotImplementedException(''This method is not supposed to be called on the Split type.'');", span="91-91"];
m23_3 [cluster="System.Collections.Generic.List<T>.List()", file="Split.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m23_4 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="Split.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="82-82"];
m23_5 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="Split.cs", label="var dataType = typeof(TradeBar)", span="85-85"];
m23_6 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="Split.cs", label="resolution == Resolution.Tick", span="86-86"];
m23_7 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="Split.cs", label="dataType = typeof(Tick)", span="88-88"];
m23_8 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="Split.cs", label="Add(dataType, security, symbol, resolution, fillDataForward, extendedMarketHours, true, true)", span="90-90"];
m23_36 [cluster="Unk.SingleOrDefault", file="Split.cs", label="Entry Unk.SingleOrDefault", span=""];
m23_16 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool)", file="Split.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool)", span="75-75"];
m23_17 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Split.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m23_18 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", span="120-120"];
m23_15 [cluster="string.ToUpper()", file="Split.cs", label="Entry string.ToUpper()", span="0-0"];
m23_31 [cluster="System.ArgumentException.ArgumentException(string)", file="Split.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m23_30 [cluster="System.Type.IsAssignableFrom(System.Type)", file="Split.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m23_0 [cluster="QuantConnect.Data.Market.Split.Split()", file="Split.cs", label="Entry QuantConnect.Data.Market.Split.Split()", span="28-28"];
m23_20 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="var i = 0", span="125-125"];
m23_21 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="i < Subscriptions.Count", span="125-125"];
m23_22 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="Subscriptions[i].Symbol == symbol", span="127-127"];
m23_32 [cluster="string.Format(string, object, object, object)", file="Split.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m23_9 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="Split.cs", label="Exit QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="82-82"];
m23_33 [cluster="QuantConnect.Data.SubscriptionManager.GetSetting(string)", file="Split.cs", label="Entry QuantConnect.Data.SubscriptionManager.GetSetting(string)", span="152-152"];
m23_34 [cluster="QuantConnect.Data.SubscriptionManager.GetSetting(string)", file="Split.cs", label="return (from config in Subscriptions \r\n                    where config.Symbol == symbol.ToUpper() \r\n                    select config).SingleOrDefault();", span="154-156"];
m23_35 [cluster="QuantConnect.Data.SubscriptionManager.GetSetting(string)", file="Split.cs", label="Exit QuantConnect.Data.SubscriptionManager.GetSetting(string)", span="152-152"];
m23_19 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="symbol = symbol.ToUpper()", span="122-122"];
m23_23 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="QuantConnect.Data.Market.Split", span=""];
m23_24 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="throw new ArgumentException(string.Format(''Type mismatch found between consolidator and symbol. '' +\r\n                            ''Symbol: {0} expects type {1} but tried to register consolidator with input type {2}'', \r\n                            symbol, Subscriptions[i].Type.Name, consolidator.InputType.Name)\r\n                            );", span="132-135"];
m23_25 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="Subscriptions[i].Consolidators.Add(consolidator)", span="137-137"];
m23_27 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="i++", span="125-125"];
m23_28 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="throw new ArgumentException(''Please subscribe to this symbol before adding a consolidator for it. Symbol: '' + symbol);", span="143-143"];
m23_26 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="return;", span="138-138"];
m23_29 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="Split.cs", label="Exit QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", span="120-120"];
m23_37 [file="Split.cs", label="QuantConnect.Data.SubscriptionManager", span=""];
m24_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m24_27 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="117-117"];
m24_28 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="var initializeComplete = false", span="119-119"];
m24_29 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="var liveJob = job as LiveNodePacket", span="120-120"];
m24_30 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="brokerage = new PaperBrokerage(algorithm)", span="121-121"];
m24_31 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="algorithm.SetLiveMode(true)", span="126-126"];
m24_32 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="job.ServerType", span="130-130"];
m24_34 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="algorithm.SetAssetLimits(100, 20, 10)", span="133-133"];
m24_36 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="algorithm.SetAssetLimits(400, 50, 30)", span="137-137"];
m24_37 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="algorithm.SetAssetLimits(50, 10, 5)", span="141-141"];
m24_38 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="algorithm.Initialize()", span="146-146"];
m24_39 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(algorithm.SubscriptionManager, algorithm.Securities)", span="148-148"];
m24_42 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="algorithm.SetCash(consistentCash)", span="154-154"];
m24_46 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="StartingCapital = algorithm.Portfolio.Cash", span="164-164"];
m24_49 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="return initializeComplete;", span="170-170"];
m24_40 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="liveJob != null && liveJob.BrokerageData.ContainsKey(''project-paper-equity'')", span="151-151"];
m24_41 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="var consistentCash = Convert.ToDecimal(liveJob.BrokerageData[''project-paper-equity''])", span="153-153"];
m24_33 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="ServerType.Server1024", span="132-132"];
m24_35 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="ServerType.Server2048", span="136-136"];
m24_43 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label=Exception, span="157-157"];
m24_44 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="Log.Error(''PaperTradingSetupHandler.Setup(): '' + err.Message)", span="159-159"];
m24_45 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="Errors.Add(''Error setting up the paper trading algorithm; '' + err.Message)", span="160-160"];
m24_47 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="Errors.Count == 0", span="166-166"];
m24_48 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="initializeComplete = true", span="168-168"];
m24_50 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="117-117"];
m24_0 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", span="81-81"];
m24_1 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", file="SubscriptionDataReader.cs", label="MaxOrders = int.MaxValue", span="83-83"];
m24_2 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", file="SubscriptionDataReader.cs", label="StartingDate = new DateTime(1998, 01, 01)", span="84-84"];
m24_3 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", file="SubscriptionDataReader.cs", label="StartingCapital = 0", span="85-85"];
m24_4 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", file="SubscriptionDataReader.cs", label="MaximumRuntime = TimeSpan.FromDays(10 * 365)", span="86-86"];
m24_5 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", file="SubscriptionDataReader.cs", label="Errors = new List<string>()", span="87-87"];
m24_6 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", span="81-81"];
m24_9 [cluster="System.Collections.Generic.List<T>.List()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m24_52 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="406-406"];
m24_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m24_23 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Entry lambda expression", span="103-103"];
m24_24 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="names.SingleOrDefault()", span="103-103"];
m24_25 [cluster="lambda expression", file="SubscriptionDataReader.cs", label="Exit lambda expression", span="103-103"];
m24_59 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m24_7 [cluster="System.DateTime.DateTime(int, int, int)", file="SubscriptionDataReader.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m24_21 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="254-254"];
m24_10 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.CreateAlgorithmInstance(string)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.CreateAlgorithmInstance(string)", span="97-97"];
m24_11 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.CreateAlgorithmInstance(string)", file="SubscriptionDataReader.cs", label="string error", span="99-99"];
m24_14 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.CreateAlgorithmInstance(string)", file="SubscriptionDataReader.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, out algorithm, out error)", span="104-104"];
m24_12 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.CreateAlgorithmInstance(string)", file="SubscriptionDataReader.cs", label="IAlgorithm algorithm", span="100-100"];
m24_13 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.CreateAlgorithmInstance(string)", file="SubscriptionDataReader.cs", label="var loader = new Loader(TimeSpan.FromSeconds(10), names => names.SingleOrDefault())", span="103-103"];
m24_15 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.CreateAlgorithmInstance(string)", file="SubscriptionDataReader.cs", label="!complete", span="105-105"];
m24_16 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.CreateAlgorithmInstance(string)", file="SubscriptionDataReader.cs", label="throw new Exception(error + '' Try re-building algorithm.'');", span="105-105"];
m24_17 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.CreateAlgorithmInstance(string)", file="SubscriptionDataReader.cs", label="return algorithm;", span="107-107"];
m24_18 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.CreateAlgorithmInstance(string)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.CreateAlgorithmInstance(string)", span="97-97"];
m24_51 [cluster="QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="37-37"];
m24_8 [cluster="System.TimeSpan.FromDays(double)", file="SubscriptionDataReader.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m24_55 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", span="83-83"];
m24_53 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="421-421"];
m24_60 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SubscriptionDataReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m24_57 [cluster="System.Convert.ToDecimal(string)", file="SubscriptionDataReader.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m24_61 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="179-179"];
m24_62 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="SubscriptionDataReader.cs", label="return true;", span="181-181"];
m24_63 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="SubscriptionDataReader.cs", label="Exit QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="179-179"];
m24_20 [cluster="System.TimeSpan.FromSeconds(double)", file="SubscriptionDataReader.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m24_54 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="219-219"];
m24_19 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="85-85"];
m24_58 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="SubscriptionDataReader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="361-361"];
m24_64 [file="SubscriptionDataReader.cs", label="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler", span=""];
m26_11 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", file="SwissArmyKnifeTests.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", span="40-40"];
m26_16 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="SwissArmyKnifeTests.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", span="281-281"];
m26_26 [cluster="lambda expression", file="SwissArmyKnifeTests.cs", label="Entry lambda expression", span="52-52"];
m26_27 [cluster="lambda expression", color=green, community=0, file="SwissArmyKnifeTests.cs", label="0: AssertResult(expected, actual.Current.Value)", span="52-52"];
m26_28 [cluster="lambda expression", file="SwissArmyKnifeTests.cs", label="Exit lambda expression", span="52-52"];
m26_33 [cluster="System.Math.Abs(decimal)", file="SwissArmyKnifeTests.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m26_15 [cluster="QuantConnect.Indicators.SwissArmyKnife.Reset()", file="SwissArmyKnifeTests.cs", label="Entry QuantConnect.Indicators.SwissArmyKnife.Reset()", span="194-194"];
m26_21 [cluster="QuantConnect.Indicators.SwissArmyKnife.SwissArmyKnife(string, int, double, QuantConnect.Indicators.SwissArmyKnifeTool)", file="SwissArmyKnifeTests.cs", label="Entry QuantConnect.Indicators.SwissArmyKnife.SwissArmyKnife(string, int, double, QuantConnect.Indicators.SwissArmyKnifeTool)", span="86-86"];
m26_34 [cluster="System.Diagnostics.Debug.WriteLine(string)", file="SwissArmyKnifeTests.cs", label="Entry System.Diagnostics.Debug.WriteLine(string)", span="0-0"];
m26_14 [cluster="Unk.AreNotEqual", file="SwissArmyKnifeTests.cs", label="Entry Unk.AreNotEqual", span=""];
m26_12 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="SwissArmyKnifeTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m26_13 [cluster="Unk.IsTrue", file="SwissArmyKnifeTests.cs", label="Entry Unk.IsTrue", span=""];
m26_25 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, double>)", file="SwissArmyKnifeTests.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, double>)", span="70-70"];
m26_17 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ComparesBandPassAgainstExternalData()", file="SwissArmyKnifeTests.cs", label="Entry QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ComparesBandPassAgainstExternalData()", span="44-44"];
m26_18 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ComparesBandPassAgainstExternalData()", file="SwissArmyKnifeTests.cs", label="var indicator = new SwissArmyKnife('''', 20, 0.1, SwissArmyKnifeTool.BandPass)", span="46-46"];
m26_19 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ComparesBandPassAgainstExternalData()", color=green, community=0, file="SwissArmyKnifeTests.cs", label="0: RunTestIndicator(indicator, ''BP'')", span="47-47"];
m26_20 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ComparesBandPassAgainstExternalData()", file="SwissArmyKnifeTests.cs", label="Exit QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ComparesBandPassAgainstExternalData()", span="44-44"];
m26_29 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.AssertResult(double, decimal)", file="SwissArmyKnifeTests.cs", label="Entry QuantConnect.Tests.Indicators.SwissArmyKnifeTests.AssertResult(double, decimal)", span="55-55"];
m26_30 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.AssertResult(double, decimal)", color=green, community=0, file="SwissArmyKnifeTests.cs", label="0: System.Diagnostics.Debug.WriteLine(expected + '','' + actual + '','' + Math.Abs((decimal)expected - actual))", span="57-57"];
m26_31 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.AssertResult(double, decimal)", color=green, community=0, file="SwissArmyKnifeTests.cs", label="0: Assert.IsTrue(Math.Abs((decimal)expected - actual) < 0.05m)", span="58-58"];
m26_32 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.AssertResult(double, decimal)", file="SwissArmyKnifeTests.cs", label="Exit QuantConnect.Tests.Indicators.SwissArmyKnifeTests.AssertResult(double, decimal)", span="55-55"];
m26_22 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.RunTestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="SwissArmyKnifeTests.cs", label="Entry QuantConnect.Tests.Indicators.SwissArmyKnifeTests.RunTestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="50-50"];
m26_23 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.RunTestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", color=green, community=0, file="SwissArmyKnifeTests.cs", label="1: TestHelper.TestIndicator(indicator, ''spy_swiss.txt'', field, (actual, expected) => { AssertResult(expected, actual.Current.Value); })", span="52-52"];
m26_24 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.RunTestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="SwissArmyKnifeTests.cs", label="Exit QuantConnect.Tests.Indicators.SwissArmyKnifeTests.RunTestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="50-50"];
m26_0 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", file="SwissArmyKnifeTests.cs", label="Entry QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", span="26-26"];
m26_1 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", file="SwissArmyKnifeTests.cs", label="var sak = new SwissArmyKnife(4, 0.1, SwissArmyKnifeTool.BandPass)", span="28-28"];
m26_2 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", file="SwissArmyKnifeTests.cs", label="TestHelper.GetDataStream(5)", span="30-30"];
m26_3 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", file="SwissArmyKnifeTests.cs", label="sak.Update(data)", span="32-32"];
m26_4 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", file="SwissArmyKnifeTests.cs", label="Assert.IsTrue(sak.IsReady)", span="34-34"];
m26_5 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", file="SwissArmyKnifeTests.cs", label="Assert.AreNotEqual(0m, sak.Current.Value)", span="35-35"];
m26_6 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", file="SwissArmyKnifeTests.cs", label="Assert.AreNotEqual(0, sak.Samples)", span="36-36"];
m26_7 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", file="SwissArmyKnifeTests.cs", label="sak.Reset()", span="38-38"];
m26_8 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", file="SwissArmyKnifeTests.cs", label="TestHelper.AssertIndicatorIsInDefaultState(sak)", span="40-40"];
m26_9 [cluster="QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", file="SwissArmyKnifeTests.cs", label="Exit QuantConnect.Tests.Indicators.SwissArmyKnifeTests.ResetsProperly()", span="26-26"];
m26_10 [cluster="QuantConnect.Indicators.SwissArmyKnife.SwissArmyKnife(int, double, QuantConnect.Indicators.SwissArmyKnifeTool)", file="SwissArmyKnifeTests.cs", label="Entry QuantConnect.Indicators.SwissArmyKnife.SwissArmyKnife(int, double, QuantConnect.Indicators.SwissArmyKnifeTool)", span="74-74"];
m27_7 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="TextSubscriptionFactory.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="75-75"];
m27_8 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="TextSubscriptionFactory.cs", label="currencyPair == null || currencyPair.Length != 6", span="77-77"];
m27_9 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="TextSubscriptionFactory.cs", label="throw new ArgumentException(''Currency pairs must be exactly 6 characters: '' + currencyPair);", span="79-79"];
m27_10 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="TextSubscriptionFactory.cs", label="baseCurrency = currencyPair.Substring(0, 3)", span="81-81"];
m27_11 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="TextSubscriptionFactory.cs", label="quoteCurrency = currencyPair.Substring(3)", span="82-82"];
m27_12 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="TextSubscriptionFactory.cs", label="Exit QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="75-75"];
m27_15 [cluster="string.Substring(int)", file="TextSubscriptionFactory.cs", label="Entry string.Substring(int)", span="0-0"];
m27_0 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="TextSubscriptionFactory.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m27_1 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="TextSubscriptionFactory.cs", label="Holdings = new ForexHolding(this)", span="52-52"];
m27_3 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", color=red, community=0, file="TextSubscriptionFactory.cs", label="1: DecomposeCurrencyPair(config.Symbol.Value, out baseCurrencySymbol, out quoteCurrencySymbol)", span="56-56"];
m27_2 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="TextSubscriptionFactory.cs", label="string baseCurrencySymbol, quoteCurrencySymbol", span="55-55"];
m27_4 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="TextSubscriptionFactory.cs", label="BaseCurrencySymbol = baseCurrencySymbol", span="57-57"];
m27_5 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="TextSubscriptionFactory.cs", label="Exit QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m27_6 [cluster="QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex)", file="TextSubscriptionFactory.cs", label="Entry QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex)", span="27-27"];
m27_13 [cluster="System.ArgumentException.ArgumentException(string)", file="TextSubscriptionFactory.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m27_14 [cluster="string.Substring(int, int)", file="TextSubscriptionFactory.cs", label="Entry string.Substring(int, int)", span="0-0"];
m27_16 [file="TextSubscriptionFactory.cs", label="QuantConnect.Securities.Forex.Forex", span=""];
m28_96 [cluster="QuantConnect.Data.Market.OptionChains.OptionChains(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.OptionChains.OptionChains(System.DateTime)", span="34-34"];
m28_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="0: var securityUpdate = new List<BaseData>(list.Count)", span="169-169"];
m28_84 [cluster="System.Collections.Generic.List<T>.List()", file="TimeSlice.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m28_85 [cluster="System.Collections.Generic.List<T>.List(int)", file="TimeSlice.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m28_93 [cluster="QuantConnect.Data.Market.Splits.Splits(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Splits.Splits(System.DateTime)", span="36-36"];
m28_97 [cluster="QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents(System.DateTime)", span="36-36"];
m28_104 [cluster="lambda expression", file="TimeSlice.cs", label="Entry lambda expression", span="135-135"];
m28_166 [cluster="lambda expression", file="TimeSlice.cs", label="option.PriceModel.Evaluate(option, sliceFuture.Value, contract)", span="334-334"];
m28_165 [cluster="lambda expression", file="TimeSlice.cs", label="Entry lambda expression", span="334-334"];
m28_167 [cluster="lambda expression", file="TimeSlice.cs", label="Exit lambda expression", span="334-334"];
m28_105 [cluster="lambda expression", file="TimeSlice.cs", label=slice, span="135-135"];
m28_106 [cluster="lambda expression", file="TimeSlice.cs", label="Exit lambda expression", span="135-135"];
m28_87 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m28_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Slice slice = null", span="134-134"];
m28_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var sliceFuture = new Lazy<Slice>(() => slice)", span="135-135"];
m28_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var algorithmTime = utcDateTime.ConvertFromUtc(algorithmTimeZone)", span="137-137"];
m28_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var tradeBars = new TradeBars(algorithmTime)", span="138-138"];
m28_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var quoteBars = new QuoteBars(algorithmTime)", span="139-139"];
m28_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var ticks = new Ticks(algorithmTime)", span="140-140"];
m28_118 [cluster="System.Collections.Generic.IDictionary<TKey, TCollection>.Add<TKey, TElement, TCollection>(TKey, TElement)", file="TimeSlice.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TCollection>.Add<TKey, TElement, TCollection>(TKey, TElement)", span="131-131"];
m28_90 [cluster="QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", span="35-35"];
m28_86 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m28_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="count += list.Count", span="166-166"];
m28_11 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="SecurityType.Equity", span="69-69"];
m28_43 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="122-122"];
m28_37 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="decimal max", span="155-155"];
m28_46 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", color=green, community=0, file="TimeSlice.cs", label="1: Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m28_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="securityUpdate.Add(baseData)", span="209-209"];
m28_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="securityUpdate.Count > 0", span="231-231"];
m28_76 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var cashUpdates = new List<BaseData> {securityUpdate[securityUpdate.Count - 1]}", span="243-243"];
m28_78 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="security.Add(new UpdateData<Security>(packet.Security, packet.Configuration.Type, securityUpdate))", span="249-249"];
m28_47 [cluster="string.Format(string, object, object)", color=green, community=0, file="TimeSlice.cs", label="1: Entry string.Format(string, object, object)", span="0-0"];
m28_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="consolidatorUpdate.Add(baseData)", span="205-205"];
m28_79 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="consolidatorUpdate.Count > 0", span="251-251"];
m28_80 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="consolidator.Add(new UpdateData<SubscriptionDataConfig>(packet.Configuration, packet.Configuration.Type, consolidatorUpdate))", span="253-253"];
m28_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="1: QuantConnect.Brokerages.InteractiveBrokersBrokerageModel", span=""];
m28_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!HandleOptionData(algorithmTime, baseData, optionChains, packet.Security, sliceFuture)", span="198-198"];
m28_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="1: i++", span="171-171"];
m28_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="1: var baseData = list[i]", span="173-173"];
m28_12 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="return true;", span="70-70"];
m28_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!packet.Configuration.IsInternalFeed", span="174-174"];
m28_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="allDataForAlgorithm.Add(baseData)", span="177-177"];
m28_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="baseData.DataType != MarketDataType.Auxiliary", span="185-185"];
m28_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="PopulateDataDictionaries(baseData, ticks, tradeBars, quoteBars, optionChains)", span="189-189"];
m28_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="baseData.DataType == MarketDataType.OptionChain", span="194-194"];
m28_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="optionChains[baseData.Symbol] = (OptionChain) baseData", span="196-196"];
m28_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(delisting = baseData as Delisting) != null", span="212-212"];
m28_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(dividend = baseData as Dividend) != null", span="216-216"];
m28_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(split = baseData as Split) != null", span="220-220"];
m28_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(symbolChange = baseData as SymbolChangedEvent) != null", span="224-224"];
m28_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="splits[symbol] = split", span="222-222"];
m28_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="dividends[symbol] = dividend", span="218-218"];
m28_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="delistings[symbol] = delisting", span="214-214"];
m28_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="symbolChanges[packet.Configuration.Symbol] = symbolChange", span="227-227"];
m28_41 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=red, community=0, file="TimeSlice.cs", label="1: message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''OrderSizeLimit'',\r\n                    string.Format(''The maximum allowable order size is {0}{1}.'', max, baseCurrency)\r\n                    )", span="161-163"];
m28_42 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="return orderIsWithinForexSizeLimits;", span="165-165"];
m28_82 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="return new TimeSlice(utcDateTime, count, slice, data, cash, security, consolidator, custom, changes);", span="259-259"];
m28_40 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="!orderIsWithinForexSizeLimits", span="159-159"];
m28_36 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="Forex.DecomposeCurrencyPair(currencyPair, out baseCurrency, out quoteCurrency)", span="152-152"];
m28_38 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="ForexCurrencyLimits.TryGetValue(baseCurrency, out max)", span="156-156"];
m28_39 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="var orderIsWithinForexSizeLimits = quantity < max", span="158-158"];
m28_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="custom.Add(new UpdateData<Security>(packet.Security, packet.Configuration.Type, list))", span="181-181"];
m28_16 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="return true;", span="74-74"];
m28_17 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="SecurityType.Forex", span="75-75"];
m28_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!packet.Configuration.IsInternalFeed", span="187-187"];
m28_73 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cashSecurities.Contains(packet.Security.Symbol)", span="237-237"];
m28_75 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cashKvp.Value.SecuritySymbol == packet.Security.Symbol", span="241-241"];
m28_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cash.Add(new UpdateData<Cash>(cashKvp.Value, packet.Configuration.Type, cashUpdates))", span="244-244"];
m28_74 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label=cashBook, span="239-239"];
m28_13 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="SecurityType.Option", span="71-71"];
m28_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="packet.Security.Type == SecurityType.Option", span="192-192"];
m28_15 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="SecurityType.Commodity", span="73-73"];
m28_34 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="message = null", span="148-148"];
m28_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="packet.Configuration.IsCustomData", span="178-178"];
m28_31 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="TimeSlice.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="114-114"];
m28_32 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="TimeSlice.cs", label="return order.SecurityType != SecurityType.Base;", span="116-116"];
m28_33 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="TimeSlice.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="114-114"];
m28_35 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="string baseCurrency, quoteCurrency", span="151-151"];
m28_14 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="return true;", span="72-72"];
m28_81 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="slice = new Slice(algorithmTime, allDataForAlgorithm, tradeBars, quoteBars, ticks, optionChains, splits, dividends, delistings, symbolChanges, allDataForAlgorithm.Count > 0)", span="257-257"];
m28_18 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="return IsForexWithinOrderSizeLimits(order.Symbol.Value, order.Quantity, out message);", span="76-76"];
m28_19 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="SecurityType.Future", span="77-77"];
m28_20 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="return true;", span="78-78"];
m28_24 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="TimeSlice.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m28_21 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="throw new ArgumentOutOfRangeException();", span="80-80"];
m28_23 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="122-122"];
m28_22 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="60-60"];
m28_83 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="111-111"];
m28_92 [cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="37-37"];
m28_157 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="TimeSlice.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m28_88 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="TimeSlice.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m28_102 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m28_100 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", span="265-265"];
m28_107 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="var symbol = baseData.Symbol", span="267-267"];
m28_108 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="baseData.DataType", span="270-270"];
m28_110 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="ticks.Add(symbol, (Tick)baseData)", span="273-273"];
m28_112 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="tradeBars[symbol] = (TradeBar) baseData", span="277-277"];
m28_114 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="quoteBars[symbol] = (QuoteBar) baseData", span="281-281"];
m28_116 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="optionChains[symbol] = (OptionChain) baseData", span="285-285"];
m28_109 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="MarketDataType.Tick", span="272-272"];
m28_111 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="MarketDataType.TradeBar", span="276-276"];
m28_113 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="MarketDataType.QuoteBar", span="280-280"];
m28_115 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="MarketDataType.OptionChain", span="284-284"];
m28_117 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.OptionChains)", span="265-265"];
m28_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="DataPointCount = dataPointCount", span="95-95"];
m28_0 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", file="TimeSlice.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", span="34-34"];
m28_1 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", file="TimeSlice.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", span="34-34"];
m28_2 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="TimeSlice.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="44-44"];
m28_3 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="TimeSlice.cs", label="return new InteractiveBrokersFeeModel();", span="46-46"];
m28_4 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="TimeSlice.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="44-44"];
m28_6 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="60-60"];
m28_7 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="message = null", span="62-62"];
m28_8 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="order.SecurityType", span="65-65"];
m28_9 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="SecurityType.Base", span="67-67"];
m28_10 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TimeSlice.cs", label="return false;", span="68-68"];
m28_103 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", span="176-176"];
m28_168 [cluster="QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="TimeSlice.cs", label="Entry QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", span="34-34"];
m28_163 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", span="366-366"];
m28_169 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="quote.Ask != null && quote.Ask.Close != 0m", span="368-368"];
m28_170 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.AskPrice = quote.Ask.Close", span="370-370"];
m28_171 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.AskSize = quote.LastAskSize", span="371-371"];
m28_172 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="quote.Bid != null && quote.Bid.Close != 0m", span="373-373"];
m28_173 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.BidPrice = quote.Bid.Close", span="375-375"];
m28_174 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="contract.BidSize = quote.LastBidSize", span="376-376"];
m28_175 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.QuoteBar)", span="366-366"];
m28_95 [cluster="QuantConnect.Data.Market.Delistings.Delistings(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Delistings.Delistings(System.DateTime)", span="36-36"];
m28_99 [cluster="QuantConnect.Lean.Engine.DataFeeds.UpdateData<T>.UpdateData(T, System.Type, System.Collections.Generic.IReadOnlyList<QuantConnect.Data.BaseData>)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.UpdateData<T>.UpdateData(T, System.Type, System.Collections.Generic.IReadOnlyList<QuantConnect.Data.BaseData>)", span="49-49"];
m28_158 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m28_164 [cluster="QuantConnect.Data.Market.OptionChain.AddAuxData(QuantConnect.Data.BaseData)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.OptionChain.AddAuxData(QuantConnect.Data.BaseData)", span="295-295"];
m28_161 [cluster="QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func<QuantConnect.Securities.Option.OptionPriceModelResult>)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func<QuantConnect.Securities.Option.OptionPriceModelResult>)", span="166-166"];
m28_101 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", span="290-290"];
m28_119 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="var symbol = baseData.Symbol", span="292-292"];
m28_122 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="!optionChains.TryGetValue(canonical, out chain)", span="296-296"];
m28_123 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="chain = new OptionChain(canonical, algorithmTime)", span="298-298"];
m28_124 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="optionChains[canonical] = chain", span="299-299"];
m28_125 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="var universeData = baseData as OptionChainUniverseDataCollection", span="302-302"];
m28_133 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="!chain.Contracts.TryGetValue(baseData.Symbol, out contract)", span="317-317"];
m28_134 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="var underlyingSymbol = Symbol.Create(baseData.Symbol.ID.Symbol, SecurityType.Equity, baseData.Symbol.ID.Market)", span="319-319"];
m28_135 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="contract = new OptionContract(baseData.Symbol, underlyingSymbol)\r\n                {\r\n                    Time = baseData.EndTime,\r\n                    LastPrice = security.Close,\r\n                    BidPrice = security.BidPrice,\r\n                    BidSize = security.BidSize,\r\n                    AskPrice = security.AskPrice,\r\n                    AskSize = security.AskSize,\r\n                    UnderlyingLastPrice = chain.Underlying != null ? chain.Underlying.Price : 0m\r\n                }", span="320-329"];
m28_136 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="chain.Contracts[baseData.Symbol] = contract", span="330-330"];
m28_137 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="var option = security as Option", span="331-331"];
m28_139 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="contract.SetOptionPriceModel(() => option.PriceModel.Evaluate(option, sliceFuture.Value, contract))", span="334-334"];
m28_140 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="baseData.DataType", span="339-339"];
m28_142 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="var tick = (Tick)baseData", span="342-342"];
m28_146 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="var tradeBar = (TradeBar)baseData", span="348-348"];
m28_150 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="var quote = (QuoteBar)baseData", span="354-354"];
m28_154 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="chain.AddAuxData(baseData)", span="360-360"];
m28_131 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="return false;", span="313-313"];
m28_155 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="return true;", span="363-363"];
m28_120 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="OptionChain chain", span="294-294"];
m28_121 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="var canonical = Symbol.Create(symbol.ID.Symbol, SecurityType.Option, symbol.ID.Market)", span="295-295"];
m28_147 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="chain.TradeBars[symbol] = tradeBar", span="349-349"];
m28_151 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="chain.QuoteBars[symbol] = quote", span="355-355"];
m28_128 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="chain.Underlying = universeData.Underlying", span="307-307"];
m28_130 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="chain.FilteredContracts.Add(contractSymbol)", span="311-311"];
m28_143 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="chain.Ticks.Add(tick.Symbol, tick)", span="343-343"];
m28_126 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="universeData != null", span="303-303"];
m28_127 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="universeData.Underlying != null", span="305-305"];
m28_129 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="universeData.FilteredContracts", span="309-309"];
m28_132 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="OptionContract contract", span="316-316"];
m28_144 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="UpdateContract(contract, tick)", span="344-344"];
m28_148 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="contract.LastPrice = tradeBar.Close", span="350-350"];
m28_152 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="UpdateContract(contract, quote)", span="356-356"];
m28_138 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="option != null", span="332-332"];
m28_141 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="MarketDataType.Tick", span="341-341"];
m28_145 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="MarketDataType.TradeBar", span="347-347"];
m28_149 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="MarketDataType.QuoteBar", span="353-353"];
m28_153 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="MarketDataType.Base", span="359-359"];
m28_156 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.HandleOptionData(System.DateTime, QuantConnect.Data.BaseData, QuantConnect.Data.Market.OptionChains, QuantConnect.Securities.Security, System.Lazy<QuantConnect.Data.Slice>)", span="290-290"];
m28_160 [cluster="QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.OptionContract.OptionContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="156-156"];
m28_159 [cluster="QuantConnect.Data.Market.OptionChain.OptionChain(QuantConnect.Symbol, System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.OptionChain.OptionChain(QuantConnect.Symbol, System.DateTime)", span="93-93"];
m28_91 [cluster="QuantConnect.Data.Market.QuoteBars.QuoteBars(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.QuoteBars.QuoteBars(System.DateTime)", span="34-34"];
m28_162 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", span="380-380"];
m28_176 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.TickType == TickType.Trade", span="382-382"];
m28_177 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.LastPrice = tick.Price", span="384-384"];
m28_178 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.TickType == TickType.Quote", span="386-386"];
m28_179 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.AskPrice != 0m", span="388-388"];
m28_180 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.AskPrice = tick.AskPrice", span="390-390"];
m28_181 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.AskSize = tick.AskSize", span="391-391"];
m28_182 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="tick.BidPrice != 0m", span="393-393"];
m28_183 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.BidPrice = tick.BidPrice", span="395-395"];
m28_184 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="contract.BidSize = tick.BidSize", span="396-396"];
m28_185 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.UpdateContract(QuantConnect.Data.Market.OptionContract, QuantConnect.Data.Market.Tick)", span="380-380"];
m28_94 [cluster="QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", span="36-36"];
m28_89 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="TimeSlice.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="473-473"];
m28_188 [file="TimeSlice.cs", label="System.Lazy<QuantConnect.Data.Slice>", span=""];
m28_189 [file="TimeSlice.cs", label=contract, span=""];
m28_190 [file="TimeSlice.cs", label=option, span=""];
m28_186 [file="TimeSlice.cs", label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", span=""];
m28_187 [file="TimeSlice.cs", label=slice, span=""];
m29_51 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="TimeSliceTests.cs", label=security, span=""];
m29_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", span="32-32"];
m29_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", color=green, community=0, file="TimeSliceTests.cs", label="1: var security = new Security(\r\n                SecurityExchangeHours.AlwaysOpen(TimeZones.Utc), \r\n                subscriptionDataConfig, \r\n                new Cash(CashBook.AccountCurrency, 0, 1m), \r\n                SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="44-48"];
m29_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="var subscriptionDataConfig = new SubscriptionDataConfig(\r\n                typeof(Tick), \r\n                Symbols.EURUSD, \r\n                Resolution.Tick, \r\n                TimeZones.Utc, \r\n                TimeZones.Utc, \r\n                true, \r\n                true, \r\n                false)", span="34-42"];
m29_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="DateTime refTime = DateTime.UtcNow", span="50-50"];
m29_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="Tick[] rawTicks = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new Tick(refTime.AddSeconds(i), Symbols.EURUSD, 1.3465m, 1.34652m))\r\n                .ToArray()", span="52-55"];
m29_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="IEnumerable<TimeSlice> timeSlices = rawTicks.Select(t => TimeSlice.Create(\r\n                t.Time,\r\n                TimeZones.Utc,\r\n                new CashBook(),\r\n                new List<DataFeedPacket> {new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() {t})},\r\n                new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>())))", span="57-62"];
m29_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="Tick[] timeSliceTicks = timeSlices.SelectMany(ts => ts.Slice.Ticks.Values.SelectMany(x => x)).ToArray()", span="64-64"];
m29_53 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", file="TimeSliceTests.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="57-57"];
m29_36 [cluster="QuantConnect.Data.Market.OpenInterest.OpenInterest(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TimeSliceTests.cs", label="Exit QuantConnect.Data.Market.OpenInterest.OpenInterest(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="78-78"];
m29_37 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="TimeSliceTests.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58"];
m29_38 [cluster="System.Linq.Enumerable.Empty<TResult>()", color=green, community=0, file="TimeSliceTests.cs", label="0: Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m29_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSliceTests.cs", label="1: Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="111-111"];
m29_40 [cluster="lambda expression", color=green, community=0, file="TimeSliceTests.cs", label="1: Entry lambda expression", span="64-64"];
m29_41 [cluster="lambda expression", file="TimeSliceTests.cs", label="ts.Slice.Ticks.Values.SelectMany(x => x)", span="64-64"];
m29_35 [cluster="QuantConnect.Data.Market.OpenInterest.OpenInterest(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="TimeSliceTests.cs", label="Entry QuantConnect.Data.Market.OpenInterest.OpenInterest(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="78-78"];
m29_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="TimeSliceTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m29_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", file="TimeSliceTests.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", span="73-73"];
m29_25 [cluster="Unk.IsTrue", file="TimeSliceTests.cs", label="Entry Unk.IsTrue", span=""];
m29_26 [cluster="lambda expression", file="TimeSliceTests.cs", label="Entry lambda expression", span="54-54"];
m29_27 [cluster="lambda expression", file="TimeSliceTests.cs", label="new Tick(refTime.AddSeconds(i), Symbols.EURUSD, 1.3465m, 1.34652m)", span="54-54"];
m29_28 [cluster="lambda expression", file="TimeSliceTests.cs", label="Exit lambda expression", span="54-54"];
m29_23 [cluster="Unk.AreEqual", file="TimeSliceTests.cs", label="Entry Unk.AreEqual", span=""];
m29_29 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="TimeSliceTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="143-143"];
m29_30 [cluster="System.DateTime.AddSeconds(double)", file="TimeSliceTests.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m29_20 [cluster="QuantConnect.Data.Market.OpenInterest.OpenInterest(System.DateTime, QuantConnect.Symbol, decimal)", file="TimeSliceTests.cs", label="Value = openInterest", span="52-52"];
m29_43 [cluster="QuantConnect.Data.Market.OpenInterest.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="TimeSliceTests.cs", label="0: isLiveMode", span="111-111"];
m29_32 [cluster="System.DateTime.AddMilliseconds(double)", file="TimeSliceTests.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m29_31 [cluster="string.ToInt32()", file="TimeSliceTests.cs", label="Entry string.ToInt32()", span="291-291"];
m29_33 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="TimeSliceTests.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="540-540"];
m29_42 [cluster="QuantConnect.Data.Market.OpenInterest.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TimeSliceTests.cs", label="Entry QuantConnect.Data.Market.OpenInterest.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="109-109"];
m29_44 [cluster="QuantConnect.Data.Market.OpenInterest.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="TimeSliceTests.cs", label="0: return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="114-114"];
m29_45 [cluster="QuantConnect.Data.Market.OpenInterest.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="TimeSliceTests.cs", label="0: var source = LeanData.GenerateZipFilePath(Globals.DataFolder, config.Symbol, date, config.Resolution, config.TickType)", span="117-117"];
m29_15 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="TimeSliceTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="73-73"];
m29_16 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="TimeSliceTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m29_17 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="TimeSliceTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="74-74"];
m29_18 [cluster="System.Linq.Enumerable.Range(int, int)", file="TimeSliceTests.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m29_19 [cluster="Unk.Select", file="TimeSliceTests.cs", label="Entry Unk.Select", span=""];
m29_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="TimeSliceTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m29_34 [cluster="string.ToDecimal()", file="TimeSliceTests.cs", label="Entry string.ToDecimal()", span="248-248"];
m29_8 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="int i = 0", span="67-67"];
m29_9 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="i < rawTicks.Length", span="67-67"];
m29_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="Assert.IsTrue(Compare(rawTicks[i], timeSliceTicks[i]))", span="69-69"];
m29_11 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="i++", span="67-67"];
m29_12 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", span="32-32"];
m29_13 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="TimeSliceTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", span="156-156"];
m29_14 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="TimeSliceTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="301-301"];
m29_54 [cluster="QuantConnect.Data.Market.OpenInterest.Clone()", file="TimeSliceTests.cs", label="Entry QuantConnect.Data.Market.OpenInterest.Clone()", span="130-130"];
m29_55 [cluster="QuantConnect.Data.Market.OpenInterest.Clone()", color=green, community=0, file="TimeSliceTests.cs", label="1: return new OpenInterest(this);", span="132-132"];
m29_56 [cluster="QuantConnect.Data.Market.OpenInterest.Clone()", file="TimeSliceTests.cs", label="Exit QuantConnect.Data.Market.OpenInterest.Clone()", span="130-130"];
m29_50 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="TimeSliceTests.cs", label=subscriptionDataConfig, span=""];
m29_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs", label="Assert.AreEqual(rawTicks.Length, timeSliceTicks.Length)", span="66-66"];
m29_46 [cluster="QuantConnect.Data.Market.OpenInterest.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="TimeSliceTests.cs", label="0: config.SecurityType == SecurityType.Option ||\r\n                config.SecurityType == SecurityType.Future", span="118-119"];
m29_47 [cluster="QuantConnect.Data.Market.OpenInterest.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="TimeSliceTests.cs", label="0: source += ''#'' + LeanData.GenerateZipEntryName(config.Symbol, date, config.Resolution, config.TickType)", span="121-121"];
m29_52 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="TimeSliceTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="364-364"];
m29_48 [cluster="QuantConnect.Data.Market.OpenInterest.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", color=green, community=0, file="TimeSliceTests.cs", label="0: QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests", span=""];
m29_49 [cluster="QuantConnect.Data.Market.OpenInterest.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TimeSliceTests.cs", label=refTime, span=""];
m29_57 [file="TimeSliceTests.cs", label="QuantConnect.Data.Market.OpenInterest", span=""];
m31_13 [cluster="System.Math.Abs(decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m31_8 [cluster="System.Math.Abs(double)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m31_164 [cluster="Unk.Where", file="ZipEntryNameSubscriptionFactory.cs", label="Entry Unk.Where", span=""];
m31_169 [cluster="System.DateTime.ToString()", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m31_242 [cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120"];
m31_265 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254"];
m31_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="95-95"];
m31_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="97-97"];
m31_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="95-95"];
m31_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="137-137"];
m31_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, (int) quantity);", span="139-139"];
m31_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="137-137"];
m31_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="163-163"];
m31_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var security = Securities[symbol]", span="165-165"];
m31_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="171-171"];
m31_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag)", span="180-180"];
m31_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="!asynchronous", span="199-199"];
m31_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="!security.Exchange.ExchangeOpen", span="169-169"];
m31_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var anyNonDailySubscriptions = security.Subscriptions.Any(x => x.Resolution != Resolution.Daily)", span="172-172"];
m31_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="mooTicket.SubmitRequest.Response.IsSuccess && !anyNonDailySubscriptions", span="173-173"];
m31_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="175-175"];
m31_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return mooTicket;", span="177-177"];
m31_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label=IsWarmingUp, span="183-183"];
m31_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="185-185"];
m31_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="189-189"];
m31_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="192-192"];
m31_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var ticket = Transactions.AddOrder(request)", span="196-196"];
m31_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="preOrderCheckResponse.IsError", span="190-190"];
m31_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="201-201"];
m31_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return ticket;", span="204-204"];
m31_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="163-163"];
m31_64 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="222-222"];
m31_163 [cluster="int.ToString()", file="ZipEntryNameSubscriptionFactory.cs", label="Entry int.ToString()", span="0-0"];
m31_162 [cluster="System.Collections.Generic.List<T>.List()", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m31_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="380-380"];
m31_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="return GenerateOrders(strategy, quantity);", span="382-382"];
m31_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="380-380"];
m31_173 [cluster="Unk.MarketOrder", file="ZipEntryNameSubscriptionFactory.cs", label="Entry Unk.MarketOrder", span=""];
m31_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="752-752"];
m31_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="return CalculateOrderQuantity(symbol, (decimal)target);", span="754-754"];
m31_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="752-752"];
m31_239 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m31_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="276-276"];
m31_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var security = Securities[symbol]", span="278-278"];
m31_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopMarket, security, quantity, tag, stopPrice: stopPrice)", span="279-279"];
m31_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var response = PreOrderChecks(request)", span="280-280"];
m31_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="283-283"];
m31_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return Transactions.AddOrder(request);", span="286-286"];
m31_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="response.IsError", span="281-281"];
m31_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="276-276"];
m31_268 [cluster="lambda expression", file="ZipEntryNameSubscriptionFactory.cs", label="Entry lambda expression", span="602-602"];
m31_65 [cluster="lambda expression", file="ZipEntryNameSubscriptionFactory.cs", label="Entry lambda expression", span="172-172"];
m31_66 [cluster="lambda expression", file="ZipEntryNameSubscriptionFactory.cs", label="x.Resolution != Resolution.Daily", span="172-172"];
m31_67 [cluster="lambda expression", file="ZipEntryNameSubscriptionFactory.cs", label="Exit lambda expression", span="172-172"];
m31_179 [cluster="lambda expression", file="ZipEntryNameSubscriptionFactory.cs", label="kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike", span="397-400"];
m31_178 [cluster="lambda expression", file="ZipEntryNameSubscriptionFactory.cs", label="Entry lambda expression", span="397-400"];
m31_180 [cluster="lambda expression", file="ZipEntryNameSubscriptionFactory.cs", label="Exit lambda expression", span="397-400"];
m31_269 [cluster="lambda expression", file="ZipEntryNameSubscriptionFactory.cs", label="x.Value", span="602-602"];
m31_270 [cluster="lambda expression", file="ZipEntryNameSubscriptionFactory.cs", label="Exit lambda expression", span="602-602"];
m31_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="369-369"];
m31_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(strategy, Math.Abs(quantity) * -1);", span="371-371"];
m31_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="369-369"];
m31_166 [cluster="QuantConnect.Symbol.ToString()", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m31_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="84-84"];
m31_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="86-86"];
m31_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="84-84"];
m31_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="713-713"];
m31_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Security security", span="716-716"];
m31_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="!Securities.TryGetValue(symbol, out security)", span="717-717"];
m31_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="719-719"];
m31_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label=liquidateExistingHoldings, span="724-724"];
m31_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="730-730"];
m31_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Order(holdingSymbol, -holdings.Quantity, false, tag)", span="733-733"];
m31_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var quantity = CalculateOrderQuantity(symbol, percentage)", span="739-739"];
m31_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="MarketOrder(symbol, quantity, false, tag)", span="742-742"];
m31_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return;", span="720-720"];
m31_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label=Portfolio, span="726-726"];
m31_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var holdingSymbol = kvp.Key", span="728-728"];
m31_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var holdings = kvp.Value", span="729-729"];
m31_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Math.Abs(quantity) > 0", span="740-740"];
m31_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="713-713"];
m31_344 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m31_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="872-872"];
m31_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, quantity);", span="874-874"];
m31_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="872-872"];
m31_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="685-685"];
m31_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="687-687"];
m31_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="685-685"];
m31_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="298-298"];
m31_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var security = Securities[symbol]", span="300-300"];
m31_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice)", span="301-301"];
m31_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var response = PreOrderChecks(request)", span="302-302"];
m31_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="305-305"];
m31_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return Transactions.AddOrder(request);", span="309-309"];
m31_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="response.IsError", span="303-303"];
m31_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="298-298"];
m31_240 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m31_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m31_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, Math.Abs(quantity));", span="75-75"];
m31_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m31_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m31_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, Math.Abs(quantity));", span="42-42"];
m31_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m31_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="358-358"];
m31_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(strategy, Math.Abs(quantity));", span="360-360"];
m31_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="358-358"];
m31_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="478-478"];
m31_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Security security", span="482-482"];
m31_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="!Securities.TryGetValue(request.Symbol, out security)", span="483-483"];
m31_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MissingSecurity, ''You haven't requested '' + request.Symbol.ToString() + '' data. Add this with AddSecurity() in the Initialize() Method.'');", span="485-485"];
m31_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="request.Quantity == 0 || request.Symbol == null || request.Symbol == QuantConnect.Symbol.Empty || Math.Abs(request.Quantity) < security.SymbolProperties.LotSize", span="489-489"];
m31_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.ZeroQuantity(request);", span="491-491"];
m31_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="496-496"];
m31_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="502-502"];
m31_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="504-504"];
m31_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="request.OrderType == OrderType.OptionExercise && !security.Exchange.ExchangeOpen", span="508-508"];
m31_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="510-510"];
m31_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="515-515"];
m31_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.QuoteCurrencyRequired, request.Symbol.Value + '': requires '' + quoteCurrency + '' in the cashbook to trade.'');", span="523-523"];
m31_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ConversionRateZero, request.Symbol.Value + '': requires '' + quoteCurrency + '' to have a non-zero conversion rate. This can be caused by lack of data.'');", span="527-527"];
m31_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' in the cashbook to trade.'');", span="537-537"];
m31_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexConversionRateZero, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' to have non-zero conversion rates. This can be caused by lack of data.'');", span="541-541"];
m31_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityHasNoData, ''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'');", span="548-548"];
m31_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="555-555"];
m31_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="request.OrderType == OrderType.OptionExercise", span="558-558"];
m31_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonExercisableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is not exercisable.'');", span="561-561"];
m31_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''The security with symbol ''' + request.Symbol.ToString() + ''' has a short option position. Only long option positions are exercisable.'');", span="564-564"];
m31_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="request.Quantity > security.Holdings.Quantity", span="566-566"];
m31_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''Cannot exercise more contracts of ''' + request.Symbol.ToString() + ''' than is currently available in the portfolio. '');", span="567-567"];
m31_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="request.Quantity <= 0.0m", span="569-569"];
m31_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="OrderResponse.ZeroQuantity(request)", span="570-570"];
m31_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="request.OrderType == OrderType.MarketOnClose", span="573-573"];
m31_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="583-583"];
m31_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderResponse.Success(request);", span="588-588"];
m31_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="!security.IsTradable", span="494-494"];
m31_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="var price = security.Price", span="499-499"];
m31_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="var quoteCurrency = security.QuoteCurrency.Symbol", span="520-520"];
m31_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="security.QuoteCurrency.ConversionRate == 0m", span="525-525"];
m31_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="security.Type == SecurityType.Forex", span="531-531"];
m31_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="var baseCurrency = ((Forex) security).BaseCurrencySymbol", span="534-534"];
m31_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="!security.HasData", span="546-546"];
m31_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="security.Type != SecurityType.Option", span="560-560"];
m31_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="security.Holdings.IsShort", span="563-563"];
m31_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="575-575"];
m31_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="578-578"];
m31_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="price == 0", span="513-513"];
m31_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Cash quoteCash", span="519-519"];
m31_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="!Portfolio.CashBook.TryGetValue(quoteCurrency, out quoteCash)", span="521-521"];
m31_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Cash baseCash", span="533-533"];
m31_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="535-535"];
m31_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="baseCash.ConversionRate == 0m", span="539-539"];
m31_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Transactions.OrdersCount > _maxOrders", span="552-552"];
m31_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Status = AlgorithmStatus.Stopped", span="554-554"];
m31_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="var latestSubmissionTime = nextMarketClose.AddMinutes(-15.50)", span="577-577"];
m31_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="478-478"];
m31_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="698-698"];
m31_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="700-700"];
m31_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="698-698"];
m31_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m31_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="109-109"];
m31_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m31_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m31_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, Math.Abs(quantity));", span="53-53"];
m31_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m31_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="385-385"];
m31_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="var orders = new List<OrderTicket>()", span="387-387"];
m31_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="var strategyTag = strategy.Name + '' ('' + strategyQuantity.ToString() + '')''", span="390-390"];
m31_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="strategy.OptionLegs != null", span="393-393"];
m31_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="strategy.OptionLegs", span="395-395"];
m31_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="var optionSeq = Securities.Where(kv => kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike)", span="397-400"];
m31_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="var error = string.Format(''Couldn't find the option contract in algorithm securities list. Underlying: {0}, option {1}, strike {2}, expiration: {3}'',\r\n                                strategy.Underlying.ToString(), optionLeg.Right.ToString(), optionLeg.Strike.ToString(), optionLeg.Expiration.ToString())", span="404-405"];
m31_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="var marketOrder = MarketOrder(option, optionLeg.Quantity * strategyQuantity, tag: strategyTag)", span="414-414"];
m31_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="var limitOrder = LimitOrder(option, optionLeg.Quantity * strategyQuantity, optionLeg.OrderPrice, tag: strategyTag)", span="418-418"];
m31_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="strategy.UnderlyingLegs != null", span="428-428"];
m31_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="strategy.UnderlyingLegs", span="430-430"];
m31_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="!Securities.ContainsKey(strategy.Underlying)", span="432-432"];
m31_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="var error = string.Format(''Couldn't find the option contract underlying in algorithm securities list. Underlying: {0}'', strategy.Underlying.ToString())", span="434-434"];
m31_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="var marketOrder = MarketOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, tag: strategyTag)", span="441-441"];
m31_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="var limitOrder = LimitOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, underlyingLeg.OrderPrice, tag: strategyTag)", span="445-445"];
m31_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="orders.Add(marketOrder)", span="415-415"];
m31_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="orders.Add(limitOrder)", span="419-419"];
m31_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="orders.Add(marketOrder)", span="442-442"];
m31_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="orders.Add(limitOrder)", span="446-446"];
m31_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="return orders;", span="453-453"];
m31_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="optionLeg.OrderType", span="411-411"];
m31_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + optionLeg.OrderType.ToString());", span="422-422"];
m31_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="optionSeq.Count() != 1", span="402-402"];
m31_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="var option = optionSeq.First().Key", span="409-409"];
m31_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="throw new InvalidOperationException(error);", span="406-406"];
m31_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="OrderType.Market", span="413-413"];
m31_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="OrderType.Limit", span="417-417"];
m31_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="underlyingLeg.OrderType", span="438-438"];
m31_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + underlyingLeg.OrderType.ToString());", span="449-449"];
m31_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="throw new InvalidOperationException(error);", span="435-435"];
m31_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="OrderType.Market", span="440-440"];
m31_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="OrderType.Limit", span="444-444"];
m31_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="385-385"];
m31_342 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m31_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="860-860"];
m31_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, (int)quantity);", span="862-862"];
m31_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="860-860"];
m31_18 [cluster="System.Math.Abs(float)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.Math.Abs(float)", span="0-0"];
m31_165 [cluster="Unk.Count", file="ZipEntryNameSubscriptionFactory.cs", label="Entry Unk.Count", span=""];
m31_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1538-1538"];
m31_237 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
m31_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="214-214"];
m31_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var security = Securities[symbol]", span="216-216"];
m31_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnOpen, security, quantity, tag)", span="217-217"];
m31_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var response = PreOrderChecks(request)", span="218-218"];
m31_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="221-221"];
m31_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return Transactions.AddOrder(request);", span="224-224"];
m31_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="response.IsError", span="219-219"];
m31_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="214-214"];
m31_341 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m31_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m31_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, (int) quantity);", span="129-129"];
m31_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m31_171 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m31_357 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", span="92-92"];
m31_177 [cluster="string.Format(string, object)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry string.Format(string, object)", span="0-0"];
m31_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="255-255"];
m31_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var security = Securities[symbol]", span="257-257"];
m31_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var request = CreateSubmitOrderRequest(OrderType.Limit, security, quantity, tag, limitPrice: limitPrice)", span="258-258"];
m31_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var response = PreOrderChecks(request)", span="259-259"];
m31_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="262-262"];
m31_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return Transactions.AddOrder(request);", span="265-265"];
m31_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="response.IsError", span="260-260"];
m31_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="255-255"];
m31_167 [cluster="System.Enum.ToString()", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.Enum.ToString()", span="0-0"];
m31_236 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="200-200"];
m31_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m31_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, Math.Abs(quantity));", span="64-64"];
m31_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m31_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="765-765"];
m31_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var security = Securities[symbol]", span="767-767"];
m31_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="target == 0", span="774-774"];
m31_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var targetPortfolioValue = target*Portfolio.TotalPortfolioValue", span="777-777"];
m31_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var unitPrice = new MarketOrder(symbol, 1, UtcTime).GetValue(security)", span="785-785"];
m31_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var marginRemaining = Portfolio.GetMarginRemaining(symbol, direction)", span="789-789"];
m31_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var price = security.Price", span="768-768"];
m31_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="return -security.Holdings.Quantity;", span="774-774"];
m31_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var currentHoldingsValue = security.Holdings.HoldingsValue", span="778-778"];
m31_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var order = new MarketOrder(security.Symbol, orderQuantity, UtcTime)", span="815-815"];
m31_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="orderValue = order.GetValue(security)", span="816-816"];
m31_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="817-817"];
m31_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="marginRequired = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="821-821"];
m31_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="orderQuantity % Convert.ToInt32(security.SymbolProperties.LotSize) != 0", span="828-828"];
m31_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="orderQuantity = orderQuantity - (orderQuantity % Convert.ToInt32(security.SymbolProperties.LotSize))", span="830-830"];
m31_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="price == 0", span="771-771"];
m31_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="return 0;", span="771-771"];
m31_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var targetOrderValue = Math.Abs(targetPortfolioValue - currentHoldingsValue)", span="781-781"];
m31_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var direction = targetPortfolioValue > currentHoldingsValue ? OrderDirection.Buy : OrderDirection.Sell", span="782-782"];
m31_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var orderQuantity = (int)(targetOrderValue / unitPrice)", span="799-799"];
m31_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="orderQuantity > 0 && (marginRequired > marginRemaining || orderValue + orderFees > targetOrderValue)", span="825-825"];
m31_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="return (direction == OrderDirection.Sell ? -1 : 1) * orderQuantity;", span="834-834"];
m31_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="unitPrice == 0", span="786-786"];
m31_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="feeToPriceRatio = (int)(orderFees / unitPrice)", span="818-818"];
m31_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="return 0;", span="786-786"];
m31_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="marginRemaining <= 0", span="790-790"];
m31_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="return 0;", span="790-790"];
m31_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="decimal marginRequired", span="793-793"];
m31_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="decimal orderValue", span="794-794"];
m31_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="decimal orderFees", span="795-795"];
m31_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var feeToPriceRatio = 0", span="796-796"];
m31_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="feeToPriceRatio > 0", span="808-808"];
m31_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="orderQuantity -= feeToPriceRatio", span="809-809"];
m31_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="var iterations = 0", span="800-800"];
m31_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="orderQuantity--", span="811-811"];
m31_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="iterations > 0", span="805-805"];
m31_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="iterations++", span="823-823"];
m31_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="765-765"];
m31_176 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="123-123"];
m31_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="848-848"];
m31_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, quantity, asynchronous, tag);", span="850-850"];
m31_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="848-848"];
m31_57 [cluster="Unk.Any", file="ZipEntryNameSubscriptionFactory.cs", label="Entry Unk.Any", span=""];
m31_264 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m31_63 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144"];
m31_343 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m31_62 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="405-405"];
m31_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="319-319"];
m31_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var option = (Option)Securities[optionSymbol]", span="321-321"];
m31_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var request = CreateSubmitOrderRequest(OrderType.OptionExercise, option, quantity, tag)", span="323-323"];
m31_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="!asynchronous", span="342-342"];
m31_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label=IsWarmingUp, span="326-326"];
m31_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="328-328"];
m31_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="332-332"];
m31_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="335-335"];
m31_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var ticket = Transactions.AddOrder(request)", span="339-339"];
m31_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="preOrderCheckResponse.IsError", span="333-333"];
m31_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="344-344"];
m31_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return ticket;", span="347-347"];
m31_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="319-319"];
m31_340 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="47-47"];
m31_60 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="414-414"];
m31_345 [cluster="System.Convert.ToInt32(decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m31_170 [cluster="string.Format(string, params object[])", file="ZipEntryNameSubscriptionFactory.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m31_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="657-657"];
m31_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="ZipEntryNameSubscriptionFactory.cs", label="!_locked", span="659-659"];
m31_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="ZipEntryNameSubscriptionFactory.cs", label="_maxOrders = max", span="661-661"];
m31_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="657-657"];
m31_174 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m31_267 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164"];
m31_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", span="877-877"];
m31_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag);", span="879-879"];
m31_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", span="877-877"];
m31_168 [cluster="decimal.ToString()", file="ZipEntryNameSubscriptionFactory.cs", label="Entry decimal.ToString()", span="0-0"];
m31_241 [cluster="System.DateTime.AddMinutes(double)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m31_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="672-672"];
m31_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="ZipEntryNameSubscriptionFactory.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="674-674"];
m31_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="672-672"];
m31_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m31_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="120-120"];
m31_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m31_238 [cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154"];
m31_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", span="150-150"];
m31_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="152-152"];
m31_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", span="150-150"];
m31_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="234-234"];
m31_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var security = Securities[symbol]", span="236-236"];
m31_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag)", span="237-237"];
m31_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="var response = PreOrderChecks(request)", span="238-238"];
m31_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="241-241"];
m31_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="return Transactions.AddOrder(request);", span="244-244"];
m31_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="response.IsError", span="239-239"];
m31_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="234-234"];
m31_172 [cluster="Unk.First", file="ZipEntryNameSubscriptionFactory.cs", label="Entry Unk.First", span=""];
m31_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="463-463"];
m31_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="var response = PreOrderChecksImpl(request)", span="465-465"];
m31_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="response.IsError", span="466-466"];
m31_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Error(response.ErrorMessage)", span="468-468"];
m31_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="return response;", span="470-470"];
m31_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="463-463"];
m31_266 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="210-210"];
m31_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", span="597-597"];
m31_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="var orderIdList = new List<int>()", span="599-599"];
m31_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="symbolToLiquidate = symbolToLiquidate ?? QuantConnect.Symbol.Empty", span="600-600"];
m31_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="orderIdList.Add(ticket.OrderId)", span="645-645"];
m31_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="return orderIdList;", span="650-650"];
m31_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="Securities.Keys.OrderBy(x => x.Value)", span="602-602"];
m31_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="symbol != symbolToLiquidate && symbolToLiquidate != QuantConnect.Symbol.Empty", span="605-605"];
m31_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="var orders = Transactions.GetOpenOrders(symbol)", span="609-609"];
m31_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="var quantity = Portfolio[symbol].Quantity", span="612-612"];
m31_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="var ticket = Order(symbol, -quantity - marketOrdersQuantity)", span="642-642"];
m31_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="615-615"];
m31_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label=orders, span="620-620"];
m31_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="quantity != 0", span="639-639"];
m31_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="var marketOrdersQuantity = 0m", span="619-619"];
m31_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="629-629"];
m31_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="order.Type == OrderType.Market", span="622-622"];
m31_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="var ticket = Transactions.GetOrderTicket(order.Id)", span="625-625"];
m31_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="Transactions.CancelOrder(order.Id,''Liquidated'')", span="634-634"];
m31_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="ticket != null", span="626-626"];
m31_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="ticket.Status == OrderStatus.Filled", span="643-643"];
m31_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", file="ZipEntryNameSubscriptionFactory.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol)", span="597-597"];
m31_175 [cluster="Unk.LimitOrder", file="ZipEntryNameSubscriptionFactory.cs", label="Entry Unk.LimitOrder", span=""];
m31_3 [cluster="System.Math.Abs(int)", file="ZipEntryNameSubscriptionFactory.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m31_358 [file="ZipEntryNameSubscriptionFactory.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m31_359 [file="ZipEntryNameSubscriptionFactory.cs", label="QuantConnect.Securities.Option.OptionStrategy", span=""];
m31_360 [file="ZipEntryNameSubscriptionFactory.cs", label=optionLeg, span=""];
n188 -> n1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n52  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n69  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n107  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n108  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n112  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n120  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n129  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n139  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n145  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n147  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n151  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n152  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n155  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n157  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n158  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n164  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n166  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n168  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n169  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n173  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n175  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n176  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n179  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n180  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n183  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n188 -> n186  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n11  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n12  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n13  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n14  [key=2, style=dotted];
n4 -> n15  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n16  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n17  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n18  [key=2, style=dotted];
n10 -> n0  [color=blue, key=0, style=bold];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=2, style=dotted];
n21 -> n19  [color=blue, key=0, style=bold];
n23 -> n24  [key=0, style=solid];
n24 -> n23  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n26 -> n25  [color=blue, key=0, style=bold];
n27 -> n28  [key=0, style=solid];
n28 -> n27  [color=blue, key=0, style=bold];
n29 -> n30  [key=0, style=solid];
n30 -> n29  [color=blue, key=0, style=bold];
n31 -> n32  [key=0, style=solid];
n32 -> n31  [color=blue, key=0, style=bold];
n33 -> n34  [key=0, style=solid];
n34 -> n33  [color=blue, key=0, style=bold];
n35 -> n36  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n37 -> n35  [color=blue, key=0, style=bold];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=0, style=solid];
n40 -> n43  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n44  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n44 -> n155  [key=0, style=solid];
n44 -> n157  [color=darkseagreen4, key=1, label=string, style=dashed];
n44 -> n158  [color=darkseagreen4, key=1, label=string, style=dashed];
n43 -> n38  [color=blue, key=0, style=bold];
n45 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=2, style=dotted];
n47 -> n45  [color=blue, key=0, style=bold];
n48 -> n52  [key=0, style=solid];
n48 -> n53  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n49 -> n50  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n50 -> n48  [key=2, style=dotted];
n51 -> n49  [color=blue, key=0, style=bold];
n52 -> n53  [key=0, style=solid];
n52 -> n54  [key=0, style=solid];
n53 -> n55  [key=0, style=solid];
n53 -> n56  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n57  [key=2, style=dotted];
n55 -> n48  [color=blue, key=0, style=bold];
n58 -> n59  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n17  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n60  [color=darkseagreen4, key=1, label=start, style=dashed];
n61 -> n62  [key=0, style=solid];
n61 -> n64  [key=0, style=solid];
n61 -> n65  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n64 -> n58  [color=blue, key=0, style=bold];
n65 -> n79  [key=0, style=solid];
n65 -> n82  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n65 -> n84  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n63 -> n64  [key=0, style=solid];
n63 -> n57  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n17  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n18  [key=2, style=dotted];
n68 -> n73  [key=2, style=dotted];
n68 -> n74  [key=2, style=dotted];
n68 -> n68  [color=darkseagreen4, key=1, label=end, style=dashed];
n69 -> n70  [key=0, style=solid];
n69 -> n72  [key=0, style=solid];
n69 -> n75  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n72 -> n66  [color=blue, key=0, style=bold];
n75 -> n92  [key=0, style=solid];
n75 -> n95  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n75 -> n97  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n71 -> n72  [key=0, style=solid];
n71 -> n57  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n78 -> n76  [color=blue, key=0, style=bold];
n79 -> n80  [key=0, style=solid];
n79 -> n81  [key=0, style=solid];
n79 -> n17  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n82 -> n84  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n84 -> n90  [key=2, style=dotted];
n84 -> n91  [key=2, style=dotted];
n84 -> n84  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n84 -> n86  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n80 -> n88  [key=0, style=solid];
n80 -> n57  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid];
n81 -> n84  [key=0, style=solid];
n81 -> n89  [key=2, style=dotted];
n83 -> n88  [key=0, style=solid];
n83 -> n57  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n85 -> n87  [key=0, style=solid];
n86 -> n88  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n87 -> n57  [key=2, style=dotted];
n88 -> n65  [color=blue, key=0, style=bold];
n92 -> n93  [key=0, style=solid];
n92 -> n94  [key=0, style=solid];
n92 -> n18  [key=2, style=dotted];
n95 -> n96  [key=0, style=solid];
n95 -> n97  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n90  [key=2, style=dotted];
n97 -> n91  [key=2, style=dotted];
n97 -> n18  [key=2, style=dotted];
n97 -> n102  [key=2, style=dotted];
n97 -> n97  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n97 -> n99  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n93 -> n94  [key=0, style=solid];
n93 -> n18  [key=2, style=dotted];
n93 -> n95  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n93 -> n97  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n94 -> n95  [key=0, style=solid];
n94 -> n97  [key=0, style=solid];
n94 -> n89  [key=2, style=dotted];
n96 -> n101  [key=0, style=solid];
n96 -> n57  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n100  [key=0, style=solid];
n99 -> n101  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n57  [key=2, style=dotted];
n101 -> n75  [color=blue, key=0, style=bold];
n103 -> n104  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n105 -> n103  [color=blue, key=0, style=bold];
n106 -> n107  [key=0, style=solid];
n106 -> n108  [color=darkseagreen4, key=1, label=bool, style=dashed];
n106 -> n109  [color=darkseagreen4, key=1, label=bool, style=dashed];
n107 -> n108  [key=0, style=solid];
n107 -> n110  [key=0, style=solid];
n108 -> n109  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n16  [key=2, style=dotted];
n110 -> n106  [color=blue, key=0, style=bold];
n111 -> n112  [key=0, style=solid];
n111 -> n113  [color=darkseagreen4, key=1, label=int, style=dashed];
n112 -> n113  [key=0, style=solid];
n112 -> n114  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n113 -> n115  [key=2, style=dotted];
n114 -> n111  [color=blue, key=0, style=bold];
n116 -> n117  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n117 -> n119  [key=2, style=dotted];
n118 -> n116  [color=blue, key=0, style=bold];
n119 -> n120  [key=0, style=solid];
n119 -> n121  [color=darkseagreen4, key=1, label=string, style=dashed];
n119 -> n122  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n119 -> n123  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
n119 -> n128  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
n119 -> n129  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
n120 -> n121  [key=0, style=solid];
n120 -> n130  [key=0, style=solid];
n121 -> n122  [key=0, style=solid];
n121 -> n134  [key=2, style=dotted];
n121 -> n121  [color=darkseagreen4, key=1, label=string, style=dashed];
n121 -> n128  [color=darkseagreen4, key=1, label=string, style=dashed];
n121 -> n129  [color=darkseagreen4, key=1, label=string, style=dashed];
n122 -> n123  [key=0, style=solid];
n122 -> n128  [key=0, style=solid];
n123 -> n124  [key=0, style=solid];
n123 -> n126  [key=0, style=solid];
n128 -> n129  [key=0, style=solid];
n128 -> n135  [key=2, style=dotted];
n129 -> n131  [key=0, style=solid];
n129 -> n133  [key=0, style=solid];
n129 -> n136  [key=2, style=dotted];
n130 -> n133  [key=0, style=solid];
n130 -> n57  [key=2, style=dotted];
n124 -> n125  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n125 -> n128  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n133 -> n119  [color=blue, key=0, style=bold];
n132 -> n133  [key=0, style=solid];
n132 -> n137  [key=2, style=dotted];
n137 -> n166  [key=0, style=solid];
n137 -> n168  [color=darkseagreen4, key=1, label=string, style=dashed];
n137 -> n169  [color=darkseagreen4, key=1, label=string, style=dashed];
n138 -> n139  [key=0, style=solid];
n138 -> n141  [color=darkseagreen4, key=1, label=string, style=dashed];
n139 -> n140  [key=0, style=solid];
n139 -> n141  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n141 -> n143  [key=2, style=dotted];
n140 -> n142  [key=0, style=solid];
n142 -> n138  [color=blue, key=0, style=bold];
n143 -> n149  [key=0, style=solid];
n143 -> n151  [color=darkseagreen4, key=1, label=string, style=dashed];
n143 -> n152  [color=darkseagreen4, key=1, label=string, style=dashed];
n144 -> n145  [key=0, style=solid];
n144 -> n147  [color=darkseagreen4, key=1, label=string, style=dashed];
n145 -> n146  [key=0, style=solid];
n145 -> n147  [key=0, style=solid];
n147 -> n148  [key=0, style=solid];
n147 -> n143  [key=2, style=dotted];
n146 -> n148  [key=0, style=solid];
n148 -> n144  [color=blue, key=0, style=bold];
n149 -> n150  [key=0, style=solid];
n149 -> n151  [key=0, style=solid];
n151 -> n152  [key=0, style=solid];
n151 -> n154  [key=2, style=dotted];
n152 -> n153  [key=0, style=solid];
n152 -> n135  [key=2, style=dotted];
n150 -> n153  [key=0, style=solid];
n153 -> n143  [color=blue, key=0, style=bold];
n155 -> n156  [key=0, style=solid];
n155 -> n157  [key=0, style=solid];
n157 -> n158  [key=0, style=solid];
n157 -> n160  [key=2, style=dotted];
n158 -> n159  [key=0, style=solid];
n156 -> n159  [key=0, style=solid];
n159 -> n44  [color=blue, key=0, style=bold];
n161 -> n162  [key=0, style=solid];
n161 -> n164  [color=darkseagreen4, key=1, label=string, style=dashed];
n162 -> n163  [key=0, style=solid];
n162 -> n164  [key=0, style=solid];
n164 -> n165  [key=0, style=solid];
n164 -> n160  [key=2, style=dotted];
n163 -> n165  [key=0, style=solid];
n165 -> n161  [color=blue, key=0, style=bold];
n166 -> n167  [key=0, style=solid];
n166 -> n168  [key=0, style=solid];
n168 -> n169  [key=0, style=solid];
n168 -> n160  [key=2, style=dotted];
n169 -> n170  [key=0, style=solid];
n167 -> n170  [key=0, style=solid];
n170 -> n137  [color=blue, key=0, style=bold];
n171 -> n172  [key=0, style=solid];
n172 -> n173  [key=0, style=solid];
n172 -> n175  [color=darkseagreen4, key=1, label=message, style=dashed];
n172 -> n176  [color=darkseagreen4, key=1, label=message, style=dashed];
n173 -> n174  [key=0, style=solid];
n173 -> n175  [key=0, style=solid];
n175 -> n176  [key=0, style=solid];
n175 -> n160  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n174 -> n177  [key=0, style=solid];
n177 -> n171  [color=blue, key=0, style=bold];
n178 -> n179  [key=0, style=solid];
n179 -> n180  [key=0, style=solid];
n179 -> n44  [key=2, style=dotted];
n180 -> n181  [key=0, style=solid];
n181 -> n178  [color=blue, key=0, style=bold];
n182 -> n183  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n184 -> n182  [color=blue, key=0, style=bold];
n185 -> n186  [key=0, style=solid];
n186 -> n187  [key=0, style=solid];
n187 -> n185  [color=blue, key=0, style=bold];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_242  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_238 -> m1_244  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_238 -> m1_245  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_238 -> m1_246  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_238 -> m1_248  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_238 -> m1_252  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_238 -> m1_257  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_238 -> m1_261  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_238 -> m1_266  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_273  [key=2, style=dotted];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_244  [key=0, style=solid];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_276  [key=2, style=dotted];
m1_244 -> m1_250  [color=darkseagreen4, key=1, label=fxcmSymbol, style=dashed];
m1_244 -> m1_253  [color=darkseagreen4, key=1, label=fxcmSymbol, style=dashed];
m1_244 -> m1_258  [color=darkseagreen4, key=1, label=fxcmSymbol, style=dashed];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_250  [color=darkseagreen4, key=1, label=orderSide, style=dashed];
m1_245 -> m1_253  [color=darkseagreen4, key=1, label=orderSide, style=dashed];
m1_245 -> m1_258  [color=darkseagreen4, key=1, label=orderSide, style=dashed];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_250  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_246 -> m1_253  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_246 -> m1_258  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_251  [key=0, style=solid];
m1_248 -> m1_256  [key=0, style=solid];
m1_248 -> m1_261  [key=0, style=solid];
m1_252 -> m1_253  [key=0, style=solid];
m1_257 -> m1_258  [key=0, style=solid];
m1_261 -> m1_272  [key=0, style=solid];
m1_261 -> m1_281  [key=2, style=dotted];
m1_266 -> m1_267  [key=0, style=solid];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_242  [key=0, style=solid];
m1_241 -> m1_272  [key=0, style=solid];
m1_241 -> m1_274  [key=2, style=dotted];
m1_243 -> m1_272  [key=0, style=solid];
m1_243 -> m1_275  [key=2, style=dotted];
m1_250 -> m1_262  [key=0, style=solid];
m1_250 -> m1_277  [key=2, style=dotted];
m1_253 -> m1_254  [key=0, style=solid];
m1_253 -> m1_278  [key=2, style=dotted];
m1_253 -> m1_255  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m1_258 -> m1_259  [key=0, style=solid];
m1_258 -> m1_278  [key=2, style=dotted];
m1_258 -> m1_260  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m1_258 -> m1_265  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m1_247 -> m1_248  [key=0, style=solid];
m1_249 -> m1_250  [key=0, style=solid];
m1_251 -> m1_252  [key=0, style=solid];
m1_256 -> m1_257  [key=0, style=solid];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_279  [key=2, style=dotted];
m1_255 -> m1_262  [key=0, style=solid];
m1_255 -> m1_280  [key=2, style=dotted];
m1_259 -> m1_260  [key=0, style=solid];
m1_259 -> m1_279  [key=2, style=dotted];
m1_260 -> m1_262  [key=0, style=solid];
m1_260 -> m1_280  [key=2, style=dotted];
m1_265 -> m1_266  [key=0, style=solid];
m1_265 -> m1_282  [key=2, style=dotted];
m1_262 -> m1_263  [key=0, style=solid];
m1_263 -> m1_264  [key=0, style=solid];
m1_264 -> m1_265  [key=0, style=solid];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_283  [key=2, style=dotted];
m1_267 -> m1_269  [color=darkseagreen4, key=1, label=autoResetEvent, style=dashed];
m1_268 -> m1_269  [key=0, style=solid];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_271  [key=0, style=solid];
m1_269 -> m1_284  [key=2, style=dotted];
m1_270 -> m1_272  [key=0, style=solid];
m1_270 -> m1_285  [key=2, style=dotted];
m1_270 -> m1_138  [key=2, style=dotted];
m1_271 -> m1_272  [key=0, style=solid];
m1_272 -> m1_238  [color=blue, key=0, style=bold];
m1_133 -> m1_134  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_138  [key=2, style=dotted];
m1_134 -> m1_41  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_139  [key=2, style=dotted];
m1_135 -> m1_140  [key=2, style=dotted];
m1_135 -> m1_141  [key=2, style=dotted];
m1_135 -> m1_142  [key=2, style=dotted];
m1_135 -> m1_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_136 -> m1_137  [key=0, style=solid];
m1_137 -> m1_133  [color=blue, key=0, style=bold];
m1_187 -> m1_188  [key=0, style=solid];
m1_65 -> m1_59  [key=0, style=solid];
m1_65 -> m1_69  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_50  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_69  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_69  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_66  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_66 -> m1_58  [color=blue, key=0, style=bold];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_63  [key=0, style=solid];
m1_61 -> m1_67  [key=2, style=dotted];
m1_62 -> m1_59  [key=0, style=solid];
m1_62 -> m1_45  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_59  [key=0, style=solid];
m1_63 -> m1_68  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_99  [key=0, style=solid];
m1_72 -> m1_101  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_101 -> m1_70  [color=blue, key=0, style=bold];
m1_74 -> m1_75  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_79  [key=0, style=solid];
m1_76 -> m1_102  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_98  [key=0, style=solid];
m1_79 -> m1_105  [key=2, style=dotted];
m1_78 -> m1_98  [key=0, style=solid];
m1_78 -> m1_103  [key=2, style=dotted];
m1_78 -> m1_104  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_41  [key=2, style=dotted];
m1_98 -> m1_72  [key=0, style=solid];
m1_98 -> m1_45  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_83  [key=0, style=solid];
m1_81 -> m1_106  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_107  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_108  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_47  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_48  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_54  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_93  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_55  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_56  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_57  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_98  [key=0, style=solid];
m1_94 -> m1_109  [key=2, style=dotted];
m1_94 -> m1_104  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_41  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_146  [key=2, style=dotted];
m1_144 -> m1_147  [key=2, style=dotted];
m1_144 -> m1_148  [key=2, style=dotted];
m1_145 -> m1_143  [color=blue, key=0, style=bold];
m1_169 -> m1_170  [key=0, style=solid];
m1_172 -> m1_173  [key=0, style=solid];
m1_175 -> m1_176  [key=0, style=solid];
m1_190 -> m1_191  [key=0, style=solid];
m1_194 -> m1_195  [key=0, style=solid];
m1_170 -> m1_171  [key=0, style=solid];
m1_171 -> m1_169  [color=blue, key=0, style=bold];
m1_173 -> m1_174  [key=0, style=solid];
m1_174 -> m1_172  [color=blue, key=0, style=bold];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_178  [key=2, style=dotted];
m1_176 -> m1_179  [key=2, style=dotted];
m1_176 -> m1_180  [key=2, style=dotted];
m1_176 -> m1_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_176 -> m1_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_176 -> m1_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_177 -> m1_175  [color=blue, key=0, style=bold];
m1_181 -> m1_182  [key=0, style=solid];
m1_184 -> m1_185  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_183 -> m1_181  [color=blue, key=0, style=bold];
m1_185 -> m1_186  [key=0, style=solid];
m1_186 -> m1_184  [color=blue, key=0, style=bold];
m1_188 -> m1_189  [key=0, style=solid];
m1_189 -> m1_187  [color=blue, key=0, style=bold];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_193  [key=2, style=dotted];
m1_192 -> m1_190  [color=blue, key=0, style=bold];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_197  [key=2, style=dotted];
m1_195 -> m1_198  [key=2, style=dotted];
m1_196 -> m1_194  [color=blue, key=0, style=bold];
m1_199 -> m1_200  [key=0, style=solid];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_41  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_222  [key=2, style=dotted];
m1_201 -> m1_212  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m1_201 -> m1_215  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m1_201 -> m1_216  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m1_201 -> m1_219  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m1_201 -> m1_220  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_223  [key=2, style=dotted];
m1_202 -> m1_224  [key=2, style=dotted];
m1_202 -> m1_168  [key=2, style=dotted];
m1_202 -> m1_225  [key=2, style=dotted];
m1_202 -> n160  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_234  [key=2, style=dotted];
m1_212 -> m1_212  [color=darkseagreen4, key=1, label=cash, style=dashed];
m1_212 -> m1_214  [color=darkseagreen4, key=1, label=baseCurrencyObject, style=dashed];
m1_215 -> m1_216  [key=0, style=solid];
m1_215 -> m1_236  [key=2, style=dotted];
m1_215 -> m1_237  [key=2, style=dotted];
m1_215 -> n160  [key=2, style=dotted];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_234  [key=2, style=dotted];
m1_216 -> m1_216  [color=darkseagreen4, key=1, label=cash, style=dashed];
m1_216 -> m1_218  [color=darkseagreen4, key=1, label=quoteCurrencyObject, style=dashed];
m1_219 -> m1_203  [key=0, style=solid];
m1_219 -> m1_223  [key=2, style=dotted];
m1_219 -> m1_225  [key=2, style=dotted];
m1_219 -> n160  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_220  [key=0, style=solid];
m1_203 -> m1_205  [color=darkseagreen4, key=1, label=trade, style=dashed];
m1_203 -> m1_206  [color=darkseagreen4, key=1, label=trade, style=dashed];
m1_203 -> m1_209  [color=darkseagreen4, key=1, label=trade, style=dashed];
m1_203 -> m1_210  [color=darkseagreen4, key=1, label=trade, style=dashed];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_227  [key=2, style=dotted];
m1_204 -> m1_168  [key=2, style=dotted];
m1_204 -> m1_208  [color=darkseagreen4, key=1, label=settlementPrice, style=dashed];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_228  [key=2, style=dotted];
m1_205 -> m1_229  [key=2, style=dotted];
m1_205 -> m1_207  [color=darkseagreen4, key=1, label=direction, style=dashed];
m1_205 -> m1_208  [color=darkseagreen4, key=1, label=direction, style=dashed];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_228  [key=2, style=dotted];
m1_206 -> m1_230  [key=2, style=dotted];
m1_206 -> m1_168  [key=2, style=dotted];
m1_206 -> m1_208  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_231  [key=2, style=dotted];
m1_209 -> m1_212  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_209 -> m1_215  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_197  [key=2, style=dotted];
m1_210 -> m1_198  [key=2, style=dotted];
m1_210 -> m1_232  [key=2, style=dotted];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_218  [color=darkseagreen4, key=1, label=quoteQuantity, style=dashed];
m1_208 -> m1_219  [color=darkseagreen4, key=1, label=quoteQuantity, style=dashed];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_214  [color=darkseagreen4, key=1, label=baseQuantity, style=dashed];
m1_207 -> m1_215  [color=darkseagreen4, key=1, label=baseQuantity, style=dashed];
m1_214 -> m1_216  [key=0, style=solid];
m1_214 -> m1_235  [key=2, style=dotted];
m1_218 -> m1_203  [key=0, style=solid];
m1_218 -> m1_235  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_233  [key=2, style=dotted];
m1_211 -> m1_211  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m1_211 -> m1_216  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m1_211 -> m1_219  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_215  [key=0, style=solid];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_219  [key=0, style=solid];
m1_221 -> m1_199  [color=blue, key=0, style=bold];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=0, style=solid];
m1_13 -> m1_40  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_41  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_42  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_21  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_43  [key=2, style=dotted];
m1_17 -> m1_65  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_46  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_44  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=0, style=solid];
m1_20 -> m1_19  [key=0, style=solid];
m1_20 -> m1_45  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_47  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_48  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_49  [key=2, style=dotted];
m1_24 -> m1_31  [color=darkseagreen4, key=1, label=loginProperties, style=dashed];
m1_24 -> m1_87  [color=darkseagreen4, key=1, label=loginProperties, style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_30  [key=0, style=solid];
m1_25 -> m1_50  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_43  [key=2, style=dotted];
m1_31 -> m1_97  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_31 -> m1_100  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_26 -> m1_27  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_35  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_51  [key=2, style=dotted];
m1_27 -> m1_29  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_52  [key=2, style=dotted];
m1_29 -> m1_40  [key=0, style=solid];
m1_29 -> m1_53  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_54  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_44  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [key=0, style=solid];
m1_34 -> m1_33  [key=0, style=solid];
m1_34 -> m1_45  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_40  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_55  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_56  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_57  [key=2, style=dotted];
m1_40 -> m1_11  [color=blue, key=0, style=bold];
m1_115 -> m1_116  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_41  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_123  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_120  [key=0, style=solid];
m1_118 -> m1_121  [key=0, style=solid];
m1_118 -> m1_131  [key=2, style=dotted];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_125  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_121  [key=0, style=solid];
m1_119 -> m1_106  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_107  [key=2, style=dotted];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_108  [key=2, style=dotted];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_52  [key=2, style=dotted];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_130  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_128  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_132  [key=2, style=dotted];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_130  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_132  [key=2, style=dotted];
m1_130 -> m1_115  [color=blue, key=0, style=bold];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_290  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_286 -> m1_293  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_286 -> m1_298  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_286 -> m1_300  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_286 -> m1_302  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_286 -> m1_307  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_273  [key=2, style=dotted];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_293  [key=0, style=solid];
m1_290 -> m1_317  [key=2, style=dotted];
m1_293 -> m1_294  [key=0, style=solid];
m1_293 -> m1_318  [key=2, style=dotted];
m1_293 -> m1_295  [color=darkseagreen4, key=1, label=fxcmOrderId, style=dashed];
m1_293 -> m1_296  [color=darkseagreen4, key=1, label=fxcmOrderId, style=dashed];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_301  [key=0, style=solid];
m1_298 -> m1_303  [key=0, style=solid];
m1_300 -> m1_304  [key=0, style=solid];
m1_302 -> m1_304  [key=0, style=solid];
m1_302 -> m1_305  [color=darkseagreen4, key=1, label=price, style=dashed];
m1_307 -> m1_308  [key=0, style=solid];
m1_307 -> m1_326  [key=2, style=dotted];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_290  [key=0, style=solid];
m1_289 -> m1_316  [key=0, style=solid];
m1_289 -> m1_274  [key=2, style=dotted];
m1_291 -> m1_292  [key=0, style=solid];
m1_291 -> m1_41  [key=2, style=dotted];
m1_292 -> m1_316  [key=0, style=solid];
m1_294 -> m1_295  [key=0, style=solid];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_297  [key=0, style=solid];
m1_295 -> m1_319  [key=2, style=dotted];
m1_295 -> m1_305  [color=darkseagreen4, key=1, label=fxcmOrder, style=dashed];
m1_295 -> m1_306  [color=darkseagreen4, key=1, label=fxcmOrder, style=dashed];
m1_296 -> m1_316  [key=0, style=solid];
m1_296 -> m1_275  [key=2, style=dotted];
m1_297 -> m1_298  [key=0, style=solid];
m1_305 -> m1_306  [key=0, style=solid];
m1_305 -> m1_320  [key=2, style=dotted];
m1_305 -> m1_321  [key=2, style=dotted];
m1_305 -> m1_322  [key=2, style=dotted];
m1_305 -> m1_323  [key=2, style=dotted];
m1_305 -> m1_324  [key=2, style=dotted];
m1_305 -> m1_307  [color=darkseagreen4, key=1, label=orderReplaceRequest, style=dashed];
m1_305 -> m1_310  [color=darkseagreen4, key=1, label=orderReplaceRequest, style=dashed];
m1_306 -> m1_307  [key=0, style=solid];
m1_306 -> m1_197  [key=2, style=dotted];
m1_306 -> m1_325  [key=2, style=dotted];
m1_299 -> m1_300  [key=0, style=solid];
m1_301 -> m1_302  [key=0, style=solid];
m1_303 -> m1_316  [key=0, style=solid];
m1_303 -> m1_281  [key=2, style=dotted];
m1_304 -> m1_305  [key=0, style=solid];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_282  [key=2, style=dotted];
m1_308 -> m1_309  [key=0, style=solid];
m1_309 -> m1_310  [key=0, style=solid];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_283  [key=2, style=dotted];
m1_311 -> m1_313  [color=darkseagreen4, key=1, label=autoResetEvent, style=dashed];
m1_312 -> m1_313  [key=0, style=solid];
m1_313 -> m1_314  [key=0, style=solid];
m1_313 -> m1_315  [key=0, style=solid];
m1_313 -> m1_284  [key=2, style=dotted];
m1_314 -> m1_316  [key=0, style=solid];
m1_314 -> m1_285  [key=2, style=dotted];
m1_314 -> m1_138  [key=2, style=dotted];
m1_315 -> m1_316  [key=0, style=solid];
m1_316 -> m1_286  [color=blue, key=0, style=bold];
m1_370 -> m1_371  [key=0, style=solid];
m1_370 -> m1_413  [key=2, style=dotted];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_353  [color=crimson, key=0, style=bold];
m1_350 -> m1_399  [color=crimson, key=0, style=bold];
m1_350 -> m1_352  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_355  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_356  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_357  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_358  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_361  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_363  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_364  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_371  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_372  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_375  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_383  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_385  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_389  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_391  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_396  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_350 -> m1_397  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_354  [key=0, style=solid];
m1_351 -> m1_401  [key=2, style=dotted];
m1_353 -> m1_354  [key=0, style=solid];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_273  [key=2, style=dotted];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_358  [key=0, style=solid];
m1_355 -> m1_319  [key=2, style=dotted];
m1_355 -> m1_394  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m1_356 -> m1_357  [key=0, style=solid];
m1_356 -> m1_402  [key=2, style=dotted];
m1_356 -> m1_403  [key=2, style=dotted];
m1_356 -> m1_394  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_404  [key=2, style=dotted];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_405  [key=2, style=dotted];
m1_358 -> m1_369  [color=darkseagreen4, key=1, label=interval, style=dashed];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_363  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_361 -> m1_364  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_361 -> m1_373  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_361 -> m1_374  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_361 -> m1_383  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_361 -> m1_384  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_361 -> m1_385  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_361 -> m1_387  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_361 -> m1_390  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_361 -> m1_395  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_363 -> m1_364  [key=0, style=solid];
m1_363 -> m1_398  [key=0, style=solid];
m1_364 -> m1_365  [key=0, style=solid];
m1_364 -> m1_406  [key=2, style=dotted];
m1_364 -> m1_407  [key=2, style=dotted];
m1_371 -> m1_372  [key=0, style=solid];
m1_371 -> m1_414  [key=2, style=dotted];
m1_371 -> m1_415  [key=2, style=dotted];
m1_371 -> m1_416  [key=2, style=dotted];
m1_372 -> m1_373  [key=0, style=solid];
m1_372 -> m1_417  [key=2, style=dotted];
m1_372 -> m1_415  [key=2, style=dotted];
m1_372 -> m1_418  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_276  [key=2, style=dotted];
m1_375 -> m1_421  [key=2, style=dotted];
m1_383 -> m1_384  [key=0, style=solid];
m1_383 -> m1_398  [key=0, style=solid];
m1_383 -> m1_423  [key=2, style=dotted];
m1_385 -> m1_398  [key=0, style=solid];
m1_385 -> m1_273  [key=2, style=dotted];
m1_389 -> m1_398  [key=0, style=solid];
m1_389 -> m1_41  [key=2, style=dotted];
m1_391 -> m1_363  [key=0, style=solid];
m1_391 -> m1_424  [key=2, style=dotted];
m1_391 -> m1_41  [key=2, style=dotted];
m1_396 -> m1_397  [key=0, style=solid];
m1_396 -> m1_427  [key=2, style=dotted];
m1_396 -> m1_423  [key=2, style=dotted];
m1_397 -> m1_363  [key=0, style=solid];
m1_397 -> m1_398  [key=0, style=solid];
m1_397 -> m1_423  [key=2, style=dotted];
m1_354 -> m1_355  [key=0, style=solid];
m1_394 -> m1_395  [key=0, style=solid];
m1_394 -> m1_426  [key=2, style=dotted];
m1_394 -> m1_396  [color=darkseagreen4, key=1, label=firstDateUtc, style=dashed];
m1_359 -> m1_360  [key=0, style=solid];
m1_359 -> m1_222  [key=2, style=dotted];
m1_359 -> m1_393  [color=darkseagreen4, key=1, label=history, style=dashed];
m1_359 -> m1_398  [color=darkseagreen4, key=1, label=history, style=dashed];
m1_369 -> m1_370  [key=0, style=solid];
m1_369 -> m1_412  [key=2, style=dotted];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_384  [color=darkseagreen4, key=1, label=lastEndTime, style=dashed];
m1_360 -> m1_386  [color=darkseagreen4, key=1, label=lastEndTime, style=dashed];
m1_393 -> m1_394  [key=0, style=solid];
m1_393 -> m1_425  [key=2, style=dotted];
m1_398 -> m1_399  [key=0, style=solid];
m1_398 -> m1_400  [key=0, style=solid];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_386  [key=0, style=solid];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_388  [key=0, style=solid];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_388  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_414  [key=2, style=dotted];
m1_373 -> m1_415  [key=2, style=dotted];
m1_373 -> m1_419  [key=2, style=dotted];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_417  [key=2, style=dotted];
m1_374 -> m1_415  [key=2, style=dotted];
m1_374 -> m1_420  [key=2, style=dotted];
m1_390 -> m1_391  [key=0, style=solid];
m1_395 -> m1_396  [key=0, style=solid];
m1_395 -> m1_398  [key=0, style=solid];
m1_388 -> m1_389  [key=0, style=solid];
m1_388 -> m1_390  [key=0, style=solid];
m1_388 -> m1_388  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m1_388 -> m1_391  [color=darkseagreen4, key=1, label=attempt, style=dashed];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_408  [key=2, style=dotted];
m1_366 -> m1_367  [key=0, style=solid];
m1_366 -> m1_409  [key=2, style=dotted];
m1_366 -> m1_368  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m1_366 -> m1_369  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m1_366 -> m1_370  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m1_366 -> m1_371  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m1_366 -> m1_372  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m1_366 -> m1_373  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m1_366 -> m1_374  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m1_366 -> m1_375  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m1_366 -> m1_378  [color=darkseagreen4, key=1, label=mdr, style=dashed];
m1_367 -> m1_368  [key=0, style=solid];
m1_367 -> m1_410  [key=2, style=dotted];
m1_368 -> m1_369  [key=0, style=solid];
m1_368 -> m1_411  [key=2, style=dotted];
m1_378 -> m1_379  [key=0, style=solid];
m1_378 -> m1_282  [key=2, style=dotted];
m1_376 -> m1_377  [key=0, style=solid];
m1_377 -> m1_378  [key=0, style=solid];
m1_379 -> m1_380  [key=0, style=solid];
m1_379 -> m1_283  [key=2, style=dotted];
m1_379 -> m1_382  [color=darkseagreen4, key=1, label=autoResetEvent, style=dashed];
m1_380 -> m1_381  [key=0, style=solid];
m1_382 -> m1_383  [key=0, style=solid];
m1_382 -> m1_392  [key=0, style=solid];
m1_382 -> m1_284  [key=2, style=dotted];
m1_381 -> m1_382  [key=0, style=solid];
m1_381 -> m1_422  [key=2, style=dotted];
m1_392 -> m1_393  [key=0, style=solid];
m1_105 -> m1_110  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_113  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_114  [key=2, style=dotted];
m1_112 -> m1_105  [color=blue, key=0, style=bold];
m1_149 -> m1_150  [key=0, style=solid];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_41  [key=2, style=dotted];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_141  [key=2, style=dotted];
m1_151 -> m1_140  [key=2, style=dotted];
m1_151 -> m1_161  [key=2, style=dotted];
m1_151 -> m1_142  [key=2, style=dotted];
m1_151 -> m1_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_151 -> m1_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_151 -> m1_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_151 -> m1_155  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m1_151 -> m1_159  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_141  [key=2, style=dotted];
m1_152 -> m1_142  [key=2, style=dotted];
m1_152 -> m1_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_152 -> m1_154  [color=darkseagreen4, key=1, label=fxcmSymbols, style=dashed];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_159  [key=0, style=solid];
m1_155 -> m1_157  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_155 -> m1_158  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_159 -> m1_160  [key=0, style=solid];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_159  [key=0, style=solid];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_162  [key=2, style=dotted];
m1_154 -> m1_163  [key=2, style=dotted];
m1_154 -> m1_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_154 -> m1_157  [color=darkseagreen4, key=1, label=quotes, style=dashed];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_155  [key=0, style=solid];
m1_157 -> m1_164  [key=2, style=dotted];
m1_157 -> m1_165  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_158 -> m1_155  [key=0, style=solid];
m1_158 -> m1_166  [key=2, style=dotted];
m1_158 -> m1_167  [key=2, style=dotted];
m1_158 -> m1_168  [key=2, style=dotted];
m1_158 -> m1_158  [color=darkseagreen4, key=1, label=holding, style=dashed];
m1_160 -> m1_149  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityProvider", style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_0  [color=blue, key=0, style=bold];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_331  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_327 -> m1_334  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_273  [key=2, style=dotted];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_334  [key=0, style=solid];
m1_331 -> m1_317  [key=2, style=dotted];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_318  [key=2, style=dotted];
m1_334 -> m1_336  [color=darkseagreen4, key=1, label=fxcmOrderId, style=dashed];
m1_334 -> m1_337  [color=darkseagreen4, key=1, label=fxcmOrderId, style=dashed];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_331  [key=0, style=solid];
m1_330 -> m1_348  [key=0, style=solid];
m1_330 -> m1_274  [key=2, style=dotted];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_41  [key=2, style=dotted];
m1_333 -> m1_348  [key=0, style=solid];
m1_335 -> m1_336  [key=0, style=solid];
m1_336 -> m1_337  [key=0, style=solid];
m1_336 -> m1_338  [key=0, style=solid];
m1_336 -> m1_319  [key=2, style=dotted];
m1_336 -> m1_339  [color=darkseagreen4, key=1, label=fxcmOrder, style=dashed];
m1_337 -> m1_348  [key=0, style=solid];
m1_337 -> m1_275  [key=2, style=dotted];
m1_338 -> m1_339  [key=0, style=solid];
m1_339 -> m1_340  [key=0, style=solid];
m1_339 -> m1_320  [key=2, style=dotted];
m1_339 -> m1_321  [key=2, style=dotted];
m1_339 -> m1_323  [key=2, style=dotted];
m1_339 -> m1_349  [key=2, style=dotted];
m1_339 -> m1_342  [color=darkseagreen4, key=1, label=orderCancelRequest, style=dashed];
m1_340 -> m1_341  [key=0, style=solid];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_282  [key=2, style=dotted];
m1_341 -> m1_342  [key=0, style=solid];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_283  [key=2, style=dotted];
m1_343 -> m1_345  [color=darkseagreen4, key=1, label=autoResetEvent, style=dashed];
m1_344 -> m1_345  [key=0, style=solid];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_347  [key=0, style=solid];
m1_345 -> m1_284  [key=2, style=dotted];
m1_346 -> m1_348  [key=0, style=solid];
m1_346 -> m1_285  [key=2, style=dotted];
m1_346 -> m1_138  [key=2, style=dotted];
m1_347 -> m1_348  [key=0, style=solid];
m1_348 -> m1_327  [color=blue, key=0, style=bold];
m4_22 -> m4_23  [key=0, style=solid];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_8  [key=2, style=dotted];
m4_23 -> m4_9  [key=2, style=dotted];
m4_24 -> m4_22  [color=blue, key=0, style=bold];
m4_14 -> m4_33  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_4  [key=2, style=dotted];
m4_34 -> m4_14  [color=blue, key=0, style=bold];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_40  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_37 -> m4_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_37 -> m4_52  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_40  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_38 -> m4_41  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_38 -> m4_45  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_56  [key=2, style=dotted];
m4_40 -> m4_42  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m4_40 -> m4_43  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m4_40 -> m4_44  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_59  [key=2, style=dotted];
m4_45 -> m4_47  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_45 -> m4_48  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_45 -> m4_50  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_45 -> m4_51  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_54  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_45  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_57  [key=2, style=dotted];
m4_41 -> m4_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_44  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_58  [key=2, style=dotted];
m4_44 -> m4_55  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_48  [key=0, style=solid];
m4_47 -> m4_55  [key=0, style=solid];
m4_47 -> m4_60  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_61  [key=2, style=dotted];
m4_48 -> m4_50  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m4_50 -> m4_55  [key=0, style=solid];
m4_50 -> m4_62  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_63  [key=2, style=dotted];
m4_51 -> m4_53  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m4_51 -> m4_54  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_51  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_64  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_55 -> m4_37  [color=blue, key=0, style=bold];
m4_123 -> m4_127  [key=0, style=solid];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_129  [key=2, style=dotted];
m4_128 -> m4_123  [color=blue, key=0, style=bold];
m4_300 -> m4_301  [key=0, style=solid];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_299  [key=2, style=dotted];
m4_302 -> m4_300  [color=blue, key=0, style=bold];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_93  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_92 -> m4_93  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_59  [key=2, style=dotted];
m4_93 -> m4_96  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_93 -> m4_97  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_61  [key=2, style=dotted];
m4_94 -> m4_96  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_96 -> m4_98  [key=0, style=solid];
m4_96 -> m4_62  [key=2, style=dotted];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_63  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_97  [key=0, style=solid];
m4_98 -> m4_91  [color=blue, key=0, style=bold];
m4_268 -> m4_269  [key=0, style=solid];
m4_65 -> m4_66  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_67 -> m4_65  [color=blue, key=0, style=bold];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_179  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m4_178 -> m4_179  [key=0, style=solid];
m4_180 -> m4_178  [color=blue, key=0, style=bold];
m4_269 -> m4_270  [key=0, style=solid];
m4_270 -> m4_268  [color=blue, key=0, style=bold];
m4_124 -> m4_125  [key=0, style=solid];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_3  [key=2, style=dotted];
m4_125 -> m4_123  [key=2, style=dotted];
m4_126 -> m4_124  [color=blue, key=0, style=bold];
m4_19 -> m4_20  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_3  [key=2, style=dotted];
m4_20 -> m4_4  [key=2, style=dotted];
m4_21 -> m4_19  [color=blue, key=0, style=bold];
m4_278 -> m4_285  [key=0, style=solid];
m4_278 -> m4_286  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_278 -> m4_287  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_278 -> m4_289  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_278 -> m4_293  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_278 -> m4_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_278 -> m4_295  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_278 -> m4_297  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_285 -> m4_286  [key=0, style=solid];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_289  [key=0, style=solid];
m4_286 -> m4_236  [key=2, style=dotted];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_166  [key=2, style=dotted];
m4_287 -> n137  [key=2, style=dotted];
m4_289 -> m4_290  [key=0, style=solid];
m4_289 -> m4_295  [key=0, style=solid];
m4_293 -> m4_294  [key=0, style=solid];
m4_293 -> m4_290  [key=0, style=solid];
m4_294 -> m4_290  [key=0, style=solid];
m4_294 -> m4_4  [key=2, style=dotted];
m4_295 -> m4_296  [key=0, style=solid];
m4_295 -> m4_299  [key=2, style=dotted];
m4_295 -> m4_297  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_37  [key=2, style=dotted];
m4_288 -> m4_298  [key=0, style=solid];
m4_290 -> m4_291  [key=0, style=solid];
m4_290 -> m4_295  [key=0, style=solid];
m4_291 -> m4_292  [key=0, style=solid];
m4_291 -> m4_291  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m4_291 -> m4_293  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m4_291 -> m4_294  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m4_292 -> m4_293  [key=0, style=solid];
m4_292 -> m4_292  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m4_292 -> m4_294  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_298  [key=0, style=solid];
m4_296 -> m4_3  [key=2, style=dotted];
m4_298 -> m4_278  [color=blue, key=0, style=bold];
m4_352 -> m4_353  [key=0, style=solid];
m4_353 -> m4_354  [key=0, style=solid];
m4_353 -> m4_4  [key=2, style=dotted];
m4_354 -> m4_352  [color=blue, key=0, style=bold];
m4_279 -> m4_280  [key=0, style=solid];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_278  [key=2, style=dotted];
m4_281 -> m4_279  [color=blue, key=0, style=bold];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_101  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_100 -> m4_101  [key=0, style=solid];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_59  [key=2, style=dotted];
m4_101 -> m4_104  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_101 -> m4_105  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_61  [key=2, style=dotted];
m4_102 -> m4_104  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_104 -> m4_106  [key=0, style=solid];
m4_104 -> m4_62  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_63  [key=2, style=dotted];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_105  [key=0, style=solid];
m4_106 -> m4_99  [color=blue, key=0, style=bold];
m4_15 -> m4_16  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_18  [key=2, style=dotted];
m4_16 -> m4_9  [key=2, style=dotted];
m4_17 -> m4_15  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_120 -> m4_121  [key=0, style=solid];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_3  [key=2, style=dotted];
m4_121 -> m4_123  [key=2, style=dotted];
m4_122 -> m4_120  [color=blue, key=0, style=bold];
m4_186 -> m4_188  [key=0, style=solid];
m4_186 -> m4_189  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_190  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_191  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_192  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_194  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_196  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_197  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_198  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_199  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_201  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_205  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_207  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_212  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_214  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_216  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_219  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_220  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_222  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_224  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_225  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_226  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_227  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_228  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_229  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_233  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_186 -> m4_234  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m4_188 -> m4_189  [key=0, style=solid];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_191  [key=0, style=solid];
m4_189 -> m4_236  [key=2, style=dotted];
m4_189 -> m4_193  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_195  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_196  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_198  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_203  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_206  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_208  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_210  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_215  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_221  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_223  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_225  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_230  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_189 -> m4_232  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_190 -> m4_235  [key=0, style=solid];
m4_190 -> m4_166  [key=2, style=dotted];
m4_190 -> m4_237  [key=2, style=dotted];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_193  [key=0, style=solid];
m4_191 -> m4_3  [key=2, style=dotted];
m4_192 -> m4_235  [key=0, style=solid];
m4_192 -> m4_238  [key=2, style=dotted];
m4_194 -> m4_235  [key=0, style=solid];
m4_194 -> m4_166  [key=2, style=dotted];
m4_194 -> m4_237  [key=2, style=dotted];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_198  [key=0, style=solid];
m4_197 -> m4_235  [key=0, style=solid];
m4_197 -> m4_237  [key=2, style=dotted];
m4_198 -> m4_199  [key=0, style=solid];
m4_198 -> m4_200  [key=0, style=solid];
m4_199 -> m4_235  [key=0, style=solid];
m4_199 -> m4_237  [key=2, style=dotted];
m4_201 -> m4_235  [key=0, style=solid];
m4_201 -> m4_166  [key=2, style=dotted];
m4_201 -> m4_237  [key=2, style=dotted];
m4_205 -> m4_235  [key=0, style=solid];
m4_205 -> m4_237  [key=2, style=dotted];
m4_207 -> m4_235  [key=0, style=solid];
m4_207 -> m4_237  [key=2, style=dotted];
m4_212 -> m4_235  [key=0, style=solid];
m4_212 -> m4_237  [key=2, style=dotted];
m4_214 -> m4_235  [key=0, style=solid];
m4_214 -> m4_237  [key=2, style=dotted];
m4_216 -> m4_235  [key=0, style=solid];
m4_216 -> m4_237  [key=2, style=dotted];
m4_219 -> m4_235  [key=0, style=solid];
m4_219 -> m4_177  [key=2, style=dotted];
m4_219 -> m4_237  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_229  [key=0, style=solid];
m4_222 -> m4_235  [key=0, style=solid];
m4_222 -> m4_166  [key=2, style=dotted];
m4_222 -> m4_237  [key=2, style=dotted];
m4_224 -> m4_235  [key=0, style=solid];
m4_224 -> m4_166  [key=2, style=dotted];
m4_224 -> m4_237  [key=2, style=dotted];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_227  [key=0, style=solid];
m4_226 -> m4_235  [key=0, style=solid];
m4_226 -> m4_166  [key=2, style=dotted];
m4_226 -> m4_237  [key=2, style=dotted];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_229  [key=0, style=solid];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> m4_238  [key=2, style=dotted];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_234  [key=0, style=solid];
m4_233 -> m4_235  [key=0, style=solid];
m4_233 -> m4_237  [key=2, style=dotted];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_242  [key=2, style=dotted];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_195  [key=0, style=solid];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_200  [color=darkseagreen4, key=1, label=price, style=dashed];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_205  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m4_203 -> m4_207  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m4_203 -> m4_212  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m4_203 -> m4_214  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m4_206 -> m4_207  [key=0, style=solid];
m4_206 -> m4_208  [key=0, style=solid];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_215  [key=0, style=solid];
m4_210 -> m4_211  [key=0, style=solid];
m4_210 -> m4_212  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m4_210 -> m4_214  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_217  [key=0, style=solid];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_223  [key=0, style=solid];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_225  [key=0, style=solid];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_240  [key=2, style=dotted];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_234  [key=0, style=solid];
m4_200 -> m4_201  [key=0, style=solid];
m4_200 -> m4_202  [key=0, style=solid];
m4_202 -> m4_203  [key=0, style=solid];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_206  [key=0, style=solid];
m4_204 -> m4_239  [key=2, style=dotted];
m4_209 -> m4_210  [key=0, style=solid];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_213  [key=0, style=solid];
m4_211 -> m4_239  [key=2, style=dotted];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_215  [key=0, style=solid];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_220  [key=0, style=solid];
m4_218 -> m4_219  [key=0, style=solid];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_241  [key=2, style=dotted];
m4_235 -> m4_186  [color=blue, key=0, style=bold];
m4_282 -> m4_283  [key=0, style=solid];
m4_283 -> m4_284  [key=0, style=solid];
m4_283 -> m4_278  [key=2, style=dotted];
m4_284 -> m4_282  [color=blue, key=0, style=bold];
m4_25 -> m4_26  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_18  [key=2, style=dotted];
m4_26 -> m4_9  [key=2, style=dotted];
m4_27 -> m4_25  [color=blue, key=0, style=bold];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_8  [key=2, style=dotted];
m4_6 -> m4_9  [key=2, style=dotted];
m4_7 -> m4_5  [color=blue, key=0, style=bold];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_131  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_129 -> m4_132  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_129 -> m4_133  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_129 -> m4_134  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_129 -> m4_179  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_129 -> m4_136  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_129 -> m4_141  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_129 -> m4_144  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_129 -> m4_147  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_129 -> m4_148  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_129 -> m4_149  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_129 -> m4_150  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_129 -> m4_154  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_129 -> m4_157  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_162  [key=2, style=dotted];
m4_130 -> m4_142  [color=darkseagreen4, key=1, label=orders, style=dashed];
m4_130 -> m4_145  [color=darkseagreen4, key=1, label=orders, style=dashed];
m4_130 -> m4_155  [color=darkseagreen4, key=1, label=orders, style=dashed];
m4_130 -> m4_158  [color=darkseagreen4, key=1, label=orders, style=dashed];
m4_130 -> m4_160  [color=darkseagreen4, key=1, label=orders, style=dashed];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_163  [key=2, style=dotted];
m4_131 -> m4_141  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m4_131 -> m4_144  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m4_131 -> m4_154  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m4_131 -> m4_157  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_147  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_147  [key=0, style=solid];
m4_133 -> m4_179  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m4_133 -> m4_136  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m4_133 -> m4_139  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m4_133 -> m4_141  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m4_133 -> m4_144  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m4_133 -> m4_146  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_164  [key=2, style=dotted];
m4_134 -> m4_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_134 -> m4_138  [color=darkseagreen4, key=1, label=optionSeq, style=dashed];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_166  [key=2, style=dotted];
m4_136 -> m4_167  [key=2, style=dotted];
m4_136 -> m4_168  [key=2, style=dotted];
m4_136 -> m4_169  [key=2, style=dotted];
m4_136 -> m4_170  [key=2, style=dotted];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_173  [key=2, style=dotted];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_175  [key=2, style=dotted];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_160  [key=0, style=solid];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_160  [key=0, style=solid];
m4_148 -> m4_152  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m4_148 -> m4_154  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m4_148 -> m4_157  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m4_148 -> m4_159  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_152  [key=0, style=solid];
m4_149 -> m4_176  [key=2, style=dotted];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_166  [key=2, style=dotted];
m4_150 -> m4_177  [key=2, style=dotted];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_37  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_83  [key=2, style=dotted];
m4_142 -> m4_133  [key=0, style=solid];
m4_142 -> m4_174  [key=2, style=dotted];
m4_145 -> m4_133  [key=0, style=solid];
m4_145 -> m4_174  [key=2, style=dotted];
m4_155 -> m4_148  [key=0, style=solid];
m4_155 -> m4_174  [key=2, style=dotted];
m4_158 -> m4_148  [key=0, style=solid];
m4_158 -> m4_174  [key=2, style=dotted];
m4_160 -> m4_161  [key=0, style=solid];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_143  [key=0, style=solid];
m4_139 -> m4_146  [key=0, style=solid];
m4_146 -> m4_161  [key=0, style=solid];
m4_146 -> m4_171  [key=2, style=dotted];
m4_146 -> m4_167  [key=2, style=dotted];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_138  [key=0, style=solid];
m4_135 -> m4_165  [key=2, style=dotted];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_172  [key=2, style=dotted];
m4_138 -> m4_141  [color=darkseagreen4, key=1, label=option, style=dashed];
m4_138 -> m4_144  [color=darkseagreen4, key=1, label=option, style=dashed];
m4_137 -> m4_161  [key=0, style=solid];
m4_137 -> m4_171  [key=2, style=dotted];
m4_140 -> m4_141  [key=0, style=solid];
m4_143 -> m4_144  [key=0, style=solid];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_156  [key=0, style=solid];
m4_152 -> m4_159  [key=0, style=solid];
m4_159 -> m4_161  [key=0, style=solid];
m4_159 -> m4_171  [key=2, style=dotted];
m4_159 -> m4_167  [key=2, style=dotted];
m4_151 -> m4_161  [key=0, style=solid];
m4_151 -> m4_171  [key=2, style=dotted];
m4_153 -> m4_154  [key=0, style=solid];
m4_156 -> m4_157  [key=0, style=solid];
m4_161 -> m4_129  [color=blue, key=0, style=bold];
m4_349 -> m4_350  [key=0, style=solid];
m4_350 -> m4_351  [key=0, style=solid];
m4_350 -> m4_4  [key=2, style=dotted];
m4_351 -> m4_349  [color=blue, key=0, style=bold];
m4_56 -> m4_68  [key=0, style=solid];
m4_56 -> m4_69  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_68 -> m4_69  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_59  [key=2, style=dotted];
m4_69 -> m4_72  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_69 -> m4_73  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_61  [key=2, style=dotted];
m4_70 -> m4_72  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_72 -> m4_74  [key=0, style=solid];
m4_72 -> m4_62  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_63  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_73  [key=0, style=solid];
m4_74 -> m4_56  [color=blue, key=0, style=bold];
m4_9 -> m4_31  [key=0, style=solid];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_4  [key=2, style=dotted];
m4_32 -> m4_9  [color=blue, key=0, style=bold];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_85  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_84 -> m4_85  [key=0, style=solid];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_59  [key=2, style=dotted];
m4_85 -> m4_88  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_85 -> m4_89  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_61  [key=2, style=dotted];
m4_86 -> m4_88  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_88 -> m4_90  [key=0, style=solid];
m4_88 -> m4_62  [key=2, style=dotted];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_63  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_89  [key=0, style=solid];
m4_90 -> m4_83  [color=blue, key=0, style=bold];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_14  [key=2, style=dotted];
m4_12 -> m4_10  [color=blue, key=0, style=bold];
m4_299 -> m4_303  [key=0, style=solid];
m4_299 -> m4_307  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_299 -> m4_309  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m4_299 -> m4_313  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_299 -> m4_316  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_308  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_303 -> m4_310  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_303 -> m4_313  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_303 -> m4_329  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_303 -> m4_330  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_303 -> m4_331  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_303 -> m4_333  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_303 -> m4_336  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_303 -> m4_337  [color=darkseagreen4, key=1, label=security, style=dashed];
m4_307 -> m4_308  [key=0, style=solid];
m4_307 -> m4_309  [key=0, style=solid];
m4_309 -> m4_310  [key=0, style=solid];
m4_309 -> m4_311  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m4_309 -> m4_312  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m4_313 -> m4_314  [key=0, style=solid];
m4_313 -> m4_340  [key=2, style=dotted];
m4_313 -> m4_341  [key=2, style=dotted];
m4_313 -> m4_323  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m4_313 -> m4_332  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m4_316 -> m4_317  [key=0, style=solid];
m4_316 -> m4_342  [key=2, style=dotted];
m4_316 -> m4_335  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m4_304 -> m4_305  [key=0, style=solid];
m4_308 -> m4_339  [key=0, style=solid];
m4_310 -> m4_311  [key=0, style=solid];
m4_310 -> m4_312  [color=darkseagreen4, key=1, label=currentHoldingsValue, style=dashed];
m4_329 -> m4_330  [key=0, style=solid];
m4_329 -> m4_340  [key=2, style=dotted];
m4_329 -> m4_331  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_329 -> m4_333  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_330 -> m4_331  [key=0, style=solid];
m4_330 -> m4_341  [key=2, style=dotted];
m4_330 -> m4_335  [color=darkseagreen4, key=1, label=orderValue, style=dashed];
m4_331 -> m4_332  [key=0, style=solid];
m4_331 -> m4_343  [key=2, style=dotted];
m4_331 -> m4_335  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
m4_333 -> m4_334  [key=0, style=solid];
m4_333 -> m4_344  [key=2, style=dotted];
m4_333 -> m4_335  [color=darkseagreen4, key=1, label=marginRequired, style=dashed];
m4_336 -> m4_337  [key=0, style=solid];
m4_336 -> m4_338  [key=0, style=solid];
m4_336 -> m4_345  [key=2, style=dotted];
m4_337 -> m4_338  [key=0, style=solid];
m4_337 -> m4_345  [key=2, style=dotted];
m4_337 -> m4_337  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_307  [key=0, style=solid];
m4_306 -> m4_339  [key=0, style=solid];
m4_311 -> m4_312  [key=0, style=solid];
m4_311 -> m4_13  [key=2, style=dotted];
m4_311 -> m4_323  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m4_311 -> m4_335  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m4_312 -> m4_313  [key=0, style=solid];
m4_312 -> m4_316  [color=darkseagreen4, key=1, label=direction, style=dashed];
m4_312 -> m4_338  [color=darkseagreen4, key=1, label=direction, style=dashed];
m4_323 -> m4_324  [key=0, style=solid];
m4_323 -> m4_327  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_323 -> m4_328  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_323 -> m4_329  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_323 -> m4_335  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_323 -> m4_336  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_323 -> m4_337  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_323 -> m4_338  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_335 -> m4_324  [key=0, style=solid];
m4_335 -> m4_336  [key=0, style=solid];
m4_338 -> m4_339  [key=0, style=solid];
m4_314 -> m4_315  [key=0, style=solid];
m4_314 -> m4_316  [key=0, style=solid];
m4_332 -> m4_333  [key=0, style=solid];
m4_315 -> m4_339  [key=0, style=solid];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_319  [key=0, style=solid];
m4_318 -> m4_339  [key=0, style=solid];
m4_319 -> m4_320  [key=0, style=solid];
m4_320 -> m4_321  [key=0, style=solid];
m4_321 -> m4_322  [key=0, style=solid];
m4_322 -> m4_323  [key=0, style=solid];
m4_322 -> m4_326  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m4_322 -> m4_327  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m4_326 -> m4_327  [key=0, style=solid];
m4_326 -> m4_328  [key=0, style=solid];
m4_327 -> m4_329  [key=0, style=solid];
m4_327 -> m4_327  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_327 -> m4_335  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_327 -> m4_336  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_327 -> m4_337  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_327 -> m4_338  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_324 -> m4_325  [key=0, style=solid];
m4_324 -> m4_334  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_328  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_328 -> m4_335  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_328 -> m4_336  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_328 -> m4_337  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_328 -> m4_338  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m4_325 -> m4_326  [key=0, style=solid];
m4_325 -> m4_329  [key=0, style=solid];
m4_334 -> m4_335  [key=0, style=solid];
m4_334 -> m4_334  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m4_339 -> m4_299  [color=blue, key=0, style=bold];
m4_346 -> m4_347  [key=0, style=solid];
m4_347 -> m4_348  [key=0, style=solid];
m4_347 -> m4_4  [key=2, style=dotted];
m4_348 -> m4_346  [color=blue, key=0, style=bold];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_107 -> m4_116  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_108 -> m4_109  [key=0, style=solid];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_59  [key=2, style=dotted];
m4_109 -> m4_111  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_109 -> m4_112  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_109 -> m4_114  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_109 -> m4_115  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_118  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [key=0, style=solid];
m4_111 -> m4_119  [key=0, style=solid];
m4_111 -> m4_60  [key=2, style=dotted];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_61  [key=2, style=dotted];
m4_112 -> m4_114  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m4_114 -> m4_119  [key=0, style=solid];
m4_114 -> m4_62  [key=2, style=dotted];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_63  [key=2, style=dotted];
m4_115 -> m4_117  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m4_115 -> m4_118  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_115  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_64  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_119 -> m4_107  [color=blue, key=0, style=bold];
m4_271 -> m4_272  [key=0, style=solid];
m4_271 -> m4_273  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_272 -> m4_273  [key=0, style=solid];
m4_272 -> m4_274  [key=0, style=solid];
m4_273 -> m4_274  [key=0, style=solid];
m4_274 -> m4_271  [color=blue, key=0, style=bold];
m4_275 -> m4_276  [key=0, style=solid];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_278  [key=2, style=dotted];
m4_277 -> m4_275  [color=blue, key=0, style=bold];
m4_59 -> m4_355  [key=0, style=solid];
m4_355 -> m4_356  [key=0, style=solid];
m4_355 -> m4_357  [key=2, style=dotted];
m4_356 -> m4_59  [color=blue, key=0, style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_13  [key=2, style=dotted];
m4_29 -> m4_14  [key=2, style=dotted];
m4_30 -> m4_28  [color=blue, key=0, style=bold];
m4_4 -> m4_35  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=2, style=dotted];
m4_36 -> m4_4  [color=blue, key=0, style=bold];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_77  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_76 -> m4_77  [key=0, style=solid];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_59  [key=2, style=dotted];
m4_77 -> m4_80  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_77 -> m4_81  [color=darkseagreen4, key=1, label=request, style=dashed];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_61  [key=2, style=dotted];
m4_78 -> m4_80  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_80 -> m4_82  [key=0, style=solid];
m4_80 -> m4_62  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_63  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_81  [key=0, style=solid];
m4_82 -> m4_75  [color=blue, key=0, style=bold];
m4_61 -> m4_181  [key=0, style=solid];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_186  [key=2, style=dotted];
m4_181 -> m4_183  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_181 -> m4_184  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_184  [key=0, style=solid];
m4_183 -> m4_184  [key=0, style=solid];
m4_183 -> n137  [key=2, style=dotted];
m4_184 -> m4_185  [key=0, style=solid];
m4_185 -> m4_61  [color=blue, key=0, style=bold];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_245  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_244 -> m4_245  [key=0, style=solid];
m4_244 -> m4_162  [key=2, style=dotted];
m4_244 -> m4_261  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m4_244 -> m4_262  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m4_245 -> m4_246  [key=0, style=solid];
m4_245 -> m4_245  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_245 -> m4_247  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_261 -> m4_246  [key=0, style=solid];
m4_261 -> m4_174  [key=2, style=dotted];
m4_262 -> m4_263  [key=0, style=solid];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_262  [key=0, style=solid];
m4_246 -> m4_264  [key=2, style=dotted];
m4_246 -> m4_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_246 -> m4_248  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_246 -> m4_249  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_246 -> m4_259  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_246  [key=0, style=solid];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_265  [key=2, style=dotted];
m4_248 -> m4_250  [color=darkseagreen4, key=1, label=orders, style=dashed];
m4_248 -> m4_252  [color=darkseagreen4, key=1, label=orders, style=dashed];
m4_249 -> m4_250  [key=0, style=solid];
m4_249 -> m4_258  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m4_249 -> m4_259  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_14  [key=2, style=dotted];
m4_259 -> m4_261  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_246  [key=0, style=solid];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_258  [key=0, style=solid];
m4_252 -> m4_254  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_252 -> m4_257  [color=darkseagreen4, key=1, label=order, style=dashed];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_246  [key=0, style=solid];
m4_251 -> m4_252  [key=0, style=solid];
m4_251 -> m4_256  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m4_251 -> m4_259  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m4_256 -> m4_252  [key=0, style=solid];
m4_256 -> m4_256  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m4_256 -> m4_259  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m4_253 -> m4_254  [key=0, style=solid];
m4_253 -> m4_257  [key=0, style=solid];
m4_254 -> m4_255  [key=0, style=solid];
m4_254 -> m4_266  [key=2, style=dotted];
m4_254 -> m4_256  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m4_257 -> m4_252  [key=0, style=solid];
m4_257 -> m4_267  [key=2, style=dotted];
m4_255 -> m4_256  [key=0, style=solid];
m4_255 -> m4_252  [key=0, style=solid];
m4_260 -> m4_261  [key=0, style=solid];
m4_260 -> m4_246  [key=0, style=solid];
m4_263 -> m4_243  [color=blue, key=0, style=bold];
m4_358 -> m4_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_68  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_69  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_78  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_96  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_101  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_108  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_112  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_114  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_115  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_121  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_134  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_154  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_157  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_183  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_189  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_204  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_211  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_217  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_218  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_219  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_232  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_246  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_248  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_249  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_254  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_259  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_272  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_273  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_276  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_280  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_283  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_286  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_287  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_294  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_295  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_297  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_301  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_303  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_309  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_313  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_316  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_329  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_347  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_350  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_353  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_358 -> m4_355  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m4_359 -> m4_179  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m4_360 -> m4_179  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m7_85 -> m7_92  [key=0, style=solid];
m7_85 -> m7_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_85 -> m7_95  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m7_85 -> m7_97  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m7_85 -> m7_99  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_85 -> m7_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_85 -> m7_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_85 -> m7_104  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_85 -> m7_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_85 -> m7_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_85 -> m7_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_95  [key=0, style=solid];
m7_92 -> m7_111  [key=2, style=dotted];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_60  [key=2, style=dotted];
m7_93 -> m7_112  [key=2, style=dotted];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_97  [key=0, style=solid];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_99  [key=0, style=solid];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_103  [key=0, style=solid];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_100  [key=0, style=solid];
m7_103 -> m7_104  [key=0, style=solid];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_107  [color=darkseagreen4, key=1, label=deltaValue, style=dashed];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_108  [key=0, style=solid];
m7_106 -> m7_113  [key=2, style=dotted];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_114  [key=2, style=dotted];
m7_107 -> m7_109  [color=darkseagreen4, key=1, label=deltaQuantity, style=dashed];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_3  [key=2, style=dotted];
m7_94 -> m7_110  [key=0, style=solid];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_104  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_104  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_103  [key=0, style=solid];
m7_100 -> m7_102  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m7_102 -> m7_100  [key=0, style=solid];
m7_102 -> m7_3  [key=2, style=dotted];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_108  [color=darkseagreen4, key=1, label=deltaQuantity, style=dashed];
m7_105 -> m7_109  [color=darkseagreen4, key=1, label=deltaQuantity, style=dashed];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_110  [key=0, style=solid];
m7_108 -> m7_113  [key=2, style=dotted];
m7_110 -> m7_85  [color=blue, key=0, style=bold];
m7_86 -> m7_87  [key=0, style=solid];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_85  [key=2, style=dotted];
m7_88 -> m7_86  [color=blue, key=0, style=bold];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_57  [key=0, style=solid];
m7_55 -> m7_65  [key=2, style=dotted];
m7_24 -> m7_25  [key=0, style=solid];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_11  [key=2, style=dotted];
m7_26 -> m7_24  [color=blue, key=0, style=bold];
m7_49 -> m7_50  [color=green, key=0, style=solid];
m7_49 -> m7_65  [color=green, key=1, label="QuantConnect.Data.Slice", style=dashed];
m7_49 -> m7_58  [key=0, style=solid];
m7_50 -> m7_51  [color=green, key=0, style=solid];
m7_50 -> m7_55  [color=green, key=2, style=dotted];
m7_50 -> m7_56  [color=green, key=2, style=dotted];
m7_50 -> m7_60  [color=green, key=1, label="lambda expression", style=dashed];
m7_50 -> m7_64  [color=green, key=1, label="lambda expression", style=dashed];
m7_50 -> m7_52  [color=green, key=1, label=inactiveSymbols, style=dashed];
m7_50 -> m7_53  [key=0, style=solid];
m7_51 -> m7_52  [color=green, key=0, style=solid];
m7_51 -> m7_54  [color=green, key=0, style=solid];
m7_51 -> m7_57  [color=green, key=2, style=dotted];
m7_51 -> n137  [key=2, style=dotted];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_58  [key=2, style=dotted];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_59  [key=2, style=dotted];
m7_53 -> m7_63  [key=2, style=dotted];
m7_53 -> m7_64  [key=2, style=dotted];
m7_53 -> m7_55  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m7_53 -> m7_57  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m7_54 -> m7_49  [color=blue, key=0, style=bold];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_57  [key=0, style=solid];
m7_17 -> m7_15  [color=blue, key=0, style=bold];
m7_79 -> m7_80  [key=0, style=solid];
m7_10 -> m7_8  [color=blue, key=0, style=bold];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_7  [key=2, style=dotted];
m7_22 -> m7_26  [key=2, style=dotted];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_22 -> m7_7  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_25  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_24  [key=2, style=dotted];
m7_20 -> m7_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_20 -> m7_18  [color=blue, key=0, style=bold];
m7_23 -> m7_19  [color=blue, key=0, style=bold];
m7_23 -> m7_21  [color=blue, key=0, style=bold];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_3  [key=2, style=dotted];
m7_60 -> m7_61  [color=green, key=0, style=solid];
m7_64 -> m7_65  [color=green, key=0, style=solid];
m7_65 -> m7_66  [color=green, key=0, style=solid];
m7_65 -> m7_67  [color=green, key=2, style=dotted];
m7_66 -> m7_64  [color=blue, key=0, style=bold];
m7_61 -> m7_62  [color=green, key=0, style=solid];
m7_61 -> m7_63  [color=green, key=2, style=dotted];
m7_62 -> m7_60  [color=blue, key=0, style=bold];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_70  [key=0, style=solid];
m7_76 -> m7_3  [key=2, style=dotted];
m7_76 -> m7_81  [key=2, style=dotted];
m7_78 -> m7_76  [color=blue, key=0, style=bold];
m7_78 -> m7_67  [color=blue, key=0, style=bold];
m7_77 -> m7_78  [key=0, style=solid];
m7_81 -> m7_79  [color=blue, key=0, style=bold];
m7_80 -> m7_81  [key=0, style=solid];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_11  [color=blue, key=0, style=bold];
m7_32 -> m7_30  [color=blue, key=0, style=bold];
m7_32 -> m7_33  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_7  [color=blue, key=0, style=bold];
m7_29 -> m7_27  [color=blue, key=0, style=bold];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_3  [key=2, style=dotted];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> n137  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_14  [key=0, style=solid];
m7_12 -> m7_16  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_7  [key=2, style=dotted];
m7_13 -> m7_15  [key=0, style=solid];
m7_13 -> m7_17  [key=2, style=dotted];
m7_13 -> m7_18  [key=2, style=dotted];
m7_14 -> m7_12  [color=blue, key=0, style=bold];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_17  [key=2, style=dotted];
m7_14 -> m7_18  [key=2, style=dotted];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_50  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_61  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_69  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_71  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_82 -> m7_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_85  [key=2, style=dotted];
m7_83 -> m7_65  [color=green, key=1, label="QuantConnect.Data.Slice", style=dashed];
m7_84 -> m7_82  [color=blue, key=0, style=bold];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_3  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_29  [key=0, style=solid];
m7_15 -> m7_11  [color=blue, key=0, style=bold];
m7_15 -> m7_16  [key=0, style=solid];
m7_56 -> m7_55  [key=0, style=solid];
m7_56 -> m7_66  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_7 -> m7_27  [key=0, style=solid];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_50  [key=0, style=solid];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_7  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_9  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=2, style=dotted];
m7_5 -> m7_10  [key=2, style=dotted];
m7_6 -> m7_4  [color=blue, key=0, style=bold];
m7_6 -> m7_0  [color=blue, key=0, style=bold];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_35  [key=0, style=solid];
m7_33 -> m7_59  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_36  [key=0, style=solid];
m7_34 -> m7_58  [key=0, style=solid];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_40  [key=0, style=solid];
m7_36 -> m7_38  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_36 -> m7_39  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_36 -> m7_61  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_46  [key=2, style=dotted];
m7_38 -> n137  [key=2, style=dotted];
m7_39 -> m7_36  [key=0, style=solid];
m7_39 -> m7_47  [key=2, style=dotted];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_44  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_39 -> m7_53  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_44  [key=0, style=solid];
m7_40 -> m7_42  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_40 -> m7_43  [color=darkseagreen4, key=1, label=security, style=dashed];
m7_40 -> m7_53  [color=darkseagreen4, key=1, label=price, style=dashed];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_48  [key=2, style=dotted];
m7_42 -> n137  [key=2, style=dotted];
m7_43 -> m7_40  [key=0, style=solid];
m7_43 -> m7_47  [key=2, style=dotted];
m7_43 -> m7_58  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_47  [key=0, style=solid];
m7_35 -> m7_45  [key=0, style=solid];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_60  [key=2, style=dotted];
m7_35 -> m7_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_35 -> m7_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_35 -> m7_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_35 -> m7_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_37 -> m7_36  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_41 -> m7_40  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_44  [key=0, style=solid];
m7_45 -> m7_33  [color=blue, key=0, style=bold];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> n137  [key=2, style=dotted];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_71  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m7_68 -> m7_73  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m7_68 -> m7_70  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m7_68 -> m7_72  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m7_68 -> m7_79  [key=2, style=dotted];
m7_68 -> m7_76  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m7_68 -> m7_77  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_60  [key=2, style=dotted];
m7_69 -> m7_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_69 -> m7_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_26  [key=2, style=dotted];
m7_71 -> m7_58  [key=2, style=dotted];
m7_71 -> m7_75  [key=2, style=dotted];
m7_71 -> m7_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_71 -> m7_70  [key=0, style=solid];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_26  [key=2, style=dotted];
m7_73 -> m7_58  [key=2, style=dotted];
m7_73 -> m7_75  [key=2, style=dotted];
m7_73 -> m7_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_72  [key=0, style=solid];
m7_70 -> m7_77  [key=0, style=solid];
m7_70 -> m7_73  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m7_70 -> m7_74  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m7_70 -> m7_75  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m7_70 -> m7_76  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_74  [key=0, style=solid];
m7_74 -> m7_68  [color=blue, key=0, style=bold];
m7_74 -> m7_76  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_8  [key=2, style=dotted];
m7_3 -> m7_31  [key=0, style=solid];
m7_3 -> m7_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_3 -> m7_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_3 -> m7_47  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m7_3 -> m7_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m7_3 -> m7_54  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_80  [key=2, style=dotted];
m7_57 -> m7_58  [key=0, style=solid];
m7_46 -> m7_58  [key=0, style=solid];
m7_58 -> m7_3  [color=blue, key=0, style=bold];
m7_89 -> m7_90  [key=0, style=solid];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_85  [key=2, style=dotted];
m7_91 -> m7_89  [color=blue, key=0, style=bold];
m7_115 -> m7_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_71  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_74  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_75  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_83  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_90  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_101  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_103  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_107  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m7_115 -> m7_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_10  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_6  [color=blue, key=0, style=bold];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_2  [color=darkorchid, key=3, label="Field variable bool _disconnected1100Fired", style=bold];
m8_3 -> m8_2  [color=blue, key=0, style=bold];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_8  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [color=blue, key=0, style=bold];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_4  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_0  [color=blue, key=0, style=bold];
m9_4 -> m9_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs", style=dashed];
m9_4 -> m9_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.InvalidSourceEventArgs", style=dashed];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m11_6 -> m11_7  [color=red, key=0, style=solid];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_5  [color=red, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m11_2 -> m11_7  [color=red, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m11_2 -> m11_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_6  [key=0, style=solid];
m11_3 -> m11_8  [key=0, style=solid];
m11_5 -> m11_9  [color=red, key=0, style=solid];
m11_5 -> m11_10  [color=red, key=2, style=dotted];
m11_7 -> m11_9  [color=red, key=0, style=solid];
m11_7 -> m11_11  [color=red, key=2, style=dotted];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> n22  [key=2, style=dotted];
m11_4 -> m11_5  [color=red, key=0, style=solid];
m11_9 -> m11_2  [color=blue, key=0, style=bold];
m13_72 -> m13_73  [key=0, style=solid];
m13_12 -> m13_4  [color=blue, key=0, style=bold];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_33 -> m13_39  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_33 -> m13_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_33 -> m13_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_33 -> m13_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_33 -> m13_45  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_33 -> m13_47  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m13_33 -> m13_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_33 -> m13_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_33 -> m13_51  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_33 -> m13_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_33 -> m13_54  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_33 -> m13_14  [key=2, style=dotted];
m13_33 -> m13_55  [key=2, style=dotted];
m13_33 -> m13_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_56  [key=2, style=dotted];
m13_34 -> m13_36  [key=0, style=solid];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_41  [key=0, style=solid];
m13_35 -> m13_46  [key=0, style=solid];
m13_35 -> m13_49  [key=0, style=solid];
m13_35 -> m13_52  [key=0, style=solid];
m13_35 -> m13_48  [key=0, style=solid];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_57  [key=2, style=dotted];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_40  [key=0, style=solid];
m13_38 -> m13_58  [key=2, style=dotted];
m13_39 -> m13_55  [key=0, style=solid];
m13_39 -> m13_59  [key=2, style=dotted];
m13_39 -> m13_41  [key=0, style=solid];
m13_40 -> m13_55  [key=0, style=solid];
m13_40 -> m13_59  [key=2, style=dotted];
m13_40 -> m13_41  [key=0, style=solid];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_57  [key=2, style=dotted];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_45  [key=0, style=solid];
m13_43 -> m13_58  [key=2, style=dotted];
m13_43 -> m13_52  [key=2, style=dotted];
m13_44 -> m13_55  [key=0, style=solid];
m13_44 -> m13_59  [key=2, style=dotted];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_58  [key=2, style=dotted];
m13_44 -> m13_52  [key=2, style=dotted];
m13_45 -> m13_55  [key=0, style=solid];
m13_45 -> m13_59  [key=2, style=dotted];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_47  [key=0, style=solid];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_57  [key=2, style=dotted];
m13_48 -> m13_55  [key=0, style=solid];
m13_48 -> m13_59  [key=2, style=dotted];
m13_48 -> m13_21  [color=blue, key=0, style=bold];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_57  [key=2, style=dotted];
m13_51 -> m13_55  [key=0, style=solid];
m13_51 -> m13_59  [key=2, style=dotted];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_57  [key=2, style=dotted];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_59  [key=2, style=dotted];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_56  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_57  [key=2, style=dotted];
m13_46 -> m13_47  [key=0, style=solid];
m13_49 -> m13_50  [key=0, style=solid];
m13_52 -> m13_53  [key=0, style=solid];
m13_55 -> m13_33  [color=blue, key=0, style=bold];
m13_17 -> m13_18  [key=0, style=solid];
m13_85 -> m13_86  [key=0, style=solid];
m13_86 -> m13_87  [key=0, style=solid];
m13_86 -> m13_84  [color=blue, key=0, style=bold];
m13_87 -> m13_85  [color=blue, key=0, style=bold];
m13_87 -> m13_4  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_54  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_64  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_69  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_87 -> m13_82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.ScheduledUniverseSelectionModelRegressionAlgorithm", style=dashed];
m13_3 -> m13_4  [color=green, key=0, style=solid];
m13_3 -> m13_9  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_67  [key=0, style=solid];
m13_68 -> m13_72  [key=2, style=dotted];
m13_68 -> m13_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_24  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m13_21 -> m13_26  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_21 -> m13_27  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_21 -> m13_33  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_21 -> m13_61  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_21 -> m13_62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_21 -> m13_63  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_21 -> m13_64  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_21 -> m13_36  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_21 -> m13_37  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_21 -> m13_41  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_22 -> m13_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_22 -> m13_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_22 -> m13_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_22 -> m13_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_22 -> m13_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_22 -> m13_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_22 -> m13_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_22 -> m13_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_24 -> m13_48  [key=0, style=solid];
m13_24 -> m13_49  [key=2, style=dotted];
m13_24 -> m13_50  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_53  [key=2, style=dotted];
m13_26 -> m13_48  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerage", style=dashed];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_30  [key=0, style=solid];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_25  [key=0, style=solid];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_51  [key=2, style=dotted];
m13_25 -> m13_52  [key=2, style=dotted];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_33  [key=0, style=solid];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_54  [key=2, style=dotted];
m13_29 -> m13_48  [key=0, style=solid];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_54  [key=2, style=dotted];
m13_32 -> m13_48  [key=0, style=solid];
m13_84 -> m13_85  [key=0, style=solid];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_20  [key=2, style=dotted];
m13_19 -> m13_17  [color=blue, key=0, style=bold];
m13_61 -> m13_62  [key=0, style=solid];
m13_61 -> m13_68  [key=2, style=dotted];
m13_61 -> m13_56  [key=2, style=dotted];
m13_62 -> m13_63  [key=0, style=solid];
m13_62 -> m13_69  [key=2, style=dotted];
m13_62 -> m13_60  [color=blue, key=0, style=bold];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_70  [key=2, style=dotted];
m13_63 -> m13_65  [key=0, style=solid];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_67  [key=0, style=solid];
m13_64 -> m13_71  [key=2, style=dotted];
m13_64 -> m13_70  [key=0, style=solid];
m13_64 -> n57  [key=2, style=dotted];
m13_60 -> m13_61  [key=0, style=solid];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_67  [key=0, style=solid];
m13_67 -> m13_60  [color=blue, key=0, style=bold];
m13_67 -> m13_69  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m13_67 -> m13_70  [key=0, style=solid];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_74  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m13_66 -> m13_67  [key=0, style=solid];
m13_66 -> m13_54  [key=2, style=dotted];
m13_66 -> m13_70  [key=0, style=solid];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_77  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m13_74 -> m13_79  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m13_74 -> m13_82  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_79  [color=darkseagreen4, key=1, label=jobDays, style=dashed];
m13_75 -> m13_73  [color=blue, key=0, style=bold];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_77  [key=0, style=solid];
m13_59 -> m13_76  [key=0, style=solid];
m13_59 -> m13_78  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m13_59 -> m13_80  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m13_59 -> m13_81  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_77 -> m13_83  [key=0, style=solid];
m13_77 -> n57  [key=2, style=dotted];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_79  [key=0, style=solid];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> n57  [key=2, style=dotted];
m13_82 -> m13_14  [key=2, style=dotted];
m13_76 -> m13_77  [key=0, style=solid];
m13_76 -> m13_78  [key=0, style=solid];
m13_76 -> m13_79  [key=0, style=solid];
m13_76 -> m13_82  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m13_80 -> m13_82  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m13_80 -> m13_83  [key=0, style=solid];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_85  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_80  [key=0, style=solid];
m13_81 -> m13_72  [key=2, style=dotted];
m13_81 -> m13_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_78 -> m13_80  [key=0, style=solid];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_82  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m13_79 -> m13_83  [key=0, style=solid];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_84  [key=2, style=dotted];
m13_79 -> m13_52  [key=2, style=dotted];
m13_83 -> m13_59  [color=blue, key=0, style=bold];
m13_83 -> m13_56  [color=blue, key=0, style=bold];
m13_56 -> m13_72  [key=0, style=solid];
m13_56 -> m13_73  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_56 -> m13_74  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_4 -> m13_5  [color=green, key=0, style=solid];
m13_4 -> m13_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_4 -> m13_10  [color=green, key=2, style=dotted];
m13_4 -> m13_11  [color=green, key=2, style=dotted];
m13_4 -> m13_12  [color=green, key=2, style=dotted];
m13_4 -> m13_13  [color=green, key=2, style=dotted];
m13_4 -> m13_14  [color=green, key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_15  [key=2, style=dotted];
m13_5 -> m13_16  [key=2, style=dotted];
m13_5 -> m13_17  [key=2, style=dotted];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_15  [key=2, style=dotted];
m13_8 -> m13_10  [color=darkseagreen4, key=1, label=error, style=dashed];
m13_8 -> m13_11  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_18  [key=2, style=dotted];
m13_6 -> m13_19  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_13  [key=2, style=dotted];
m13_7 -> m13_14  [key=2, style=dotted];
m13_7 -> m13_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m13_7 -> m13_0  [color=blue, key=0, style=bold];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_11  [key=0, style=solid];
m13_10 -> m13_12  [key=0, style=solid];
m13_10 -> m13_16  [key=2, style=dotted];
m13_57 -> m13_63  [key=0, style=solid];
m13_57 -> m13_65  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m13_57 -> m13_67  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m13_57 -> m13_68  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> n57  [key=2, style=dotted];
m13_70 -> m13_57  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_8  [key=2, style=dotted];
m13_2 -> m13_0  [color=blue, key=0, style=bold];
m13_88 -> m13_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m13_88 -> m13_74  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m13_89 -> m13_61  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_89 -> m13_62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_89 -> m13_63  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_89 -> m13_64  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_89 -> m13_85  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m13_90 -> m13_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_3  [key=2, style=dotted];
m15_6 -> m15_4  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=2, style=dotted];
m15_2 -> m15_0  [color=blue, key=0, style=bold];
m15_7 -> m15_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Equity.Equity", style=dashed];
m15_7 -> m15_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Equity.Equity", style=dashed];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [color=blue, key=0, style=bold];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_9  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_7 -> m16_11  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_7 -> m16_14  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_7 -> m16_15  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_7 -> m16_17  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_7 -> m16_18  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_7 -> m16_22  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.Auxiliary.FactorFile Get", style=bold];
m16_8 -> m16_9  [key=0, style=solid];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_11  [key=0, style=solid];
m16_9 -> m16_20  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_14  [color=darkseagreen4, key=1, label=market, style=dashed];
m16_11 -> m16_17  [color=darkseagreen4, key=1, label=market, style=dashed];
m16_11 -> m16_18  [color=darkseagreen4, key=1, label=market, style=dashed];
m16_14 -> m16_19  [key=0, style=solid];
m16_14 -> m16_22  [key=2, style=dotted];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_23  [key=2, style=dotted];
m16_15 -> m16_18  [color=darkseagreen4, key=1, label=mapFile, style=dashed];
m16_17 -> m16_19  [key=0, style=solid];
m16_17 -> m16_22  [key=2, style=dotted];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_22  [key=2, style=dotted];
m16_10 -> m16_19  [key=0, style=solid];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_21  [key=2, style=dotted];
m16_12 -> m16_15  [color=darkseagreen4, key=1, label=mapFileResolver, style=dashed];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_15  [key=0, style=solid];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_18  [key=0, style=solid];
m16_16 -> m16_24  [key=2, style=dotted];
m16_19 -> m16_7  [color=blue, key=0, style=bold];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_6  [key=2, style=dotted];
m16_5 -> m16_2  [color=blue, key=0, style=bold];
m16_22 -> m16_25  [key=0, style=solid];
m16_22 -> m16_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_22 -> m16_27  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_22 -> m16_7  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m16_22 -> m16_11  [color=darkorchid, key=3, label="Parameter variable string market", style=bold];
m16_22 -> m16_29  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.Auxiliary.FactorFile GetFactorFile", style=bold];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_29  [key=0, style=solid];
m16_25 -> m16_31  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_32  [key=2, style=dotted];
m16_26 -> m16_35  [color=darkseagreen4, key=1, label=factorFile, style=dashed];
m16_26 -> m16_28  [color=darkseagreen4, key=1, label=factorFile, style=dashed];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_33  [key=2, style=dotted];
m16_27 -> m16_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_29 -> m16_30  [key=0, style=solid];
m16_28 -> m16_30  [key=0, style=solid];
m16_30 -> m16_22  [color=blue, key=0, style=bold];
m16_34 -> m16_35  [key=0, style=solid];
m16_35 -> m16_36  [key=0, style=solid];
m16_36 -> m16_34  [color=blue, key=0, style=bold];
m16_37 -> m16_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m16_37 -> m16_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m16_37 -> m16_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m16_37 -> m16_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m16_37 -> m16_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m16_37 -> m16_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m16_37 -> m16_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m16_37 -> m16_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider", style=dashed];
m16_38 -> m16_35  [color=darkseagreen4, key=1, label=factorFile, style=dashed];
m17_16 -> m17_17  [key=0, style=solid];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> n17  [key=2, style=dotted];
m17_17 -> m17_20  [color=darkseagreen4, key=1, label=april2, style=dashed];
m17_17 -> m17_21  [color=darkseagreen4, key=1, label=april2, style=dashed];
m17_18 -> m17_19  [key=0, style=solid];
m17_18 -> m17_6  [key=2, style=dotted];
m17_18 -> m17_20  [color=darkseagreen4, key=1, label=googMapFile, style=dashed];
m17_18 -> m17_21  [color=darkseagreen4, key=1, label=googMapFile, style=dashed];
m17_20 -> m17_21  [key=0, style=solid];
m17_20 -> m17_8  [key=2, style=dotted];
m17_20 -> m17_9  [key=2, style=dotted];
m17_21 -> m17_22  [key=0, style=solid];
m17_21 -> m17_23  [key=2, style=dotted];
m17_21 -> m17_8  [key=2, style=dotted];
m17_21 -> m17_9  [key=2, style=dotted];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_7  [key=2, style=dotted];
m17_22 -> m17_16  [color=blue, key=0, style=bold];
m17_10 -> m17_11  [key=0, style=solid];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> n17  [key=2, style=dotted];
m17_11 -> m17_6  [key=2, style=dotted];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_9  [key=2, style=dotted];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> n17  [key=2, style=dotted];
m17_13 -> m17_6  [key=2, style=dotted];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_9  [key=2, style=dotted];
m17_15 -> m17_10  [color=blue, key=0, style=bold];
m17_24 -> m17_25  [key=0, style=solid];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> n17  [key=2, style=dotted];
m17_25 -> m17_6  [key=2, style=dotted];
m17_25 -> m17_27  [color=darkseagreen4, key=1, label=oih1, style=dashed];
m17_25 -> m17_28  [color=darkseagreen4, key=1, label=oih1, style=dashed];
m17_25 -> m17_29  [color=darkseagreen4, key=1, label=oih1, style=dashed];
m17_25 -> m17_30  [color=darkseagreen4, key=1, label=oih1, style=dashed];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_7  [key=2, style=dotted];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> n17  [key=2, style=dotted];
m17_27 -> m17_8  [key=2, style=dotted];
m17_27 -> m17_9  [key=2, style=dotted];
m17_28 -> m17_29  [key=0, style=solid];
m17_28 -> n17  [key=2, style=dotted];
m17_28 -> m17_8  [key=2, style=dotted];
m17_28 -> m17_9  [key=2, style=dotted];
m17_29 -> m17_30  [key=0, style=solid];
m17_29 -> n17  [key=2, style=dotted];
m17_29 -> m17_8  [key=2, style=dotted];
m17_29 -> m17_9  [key=2, style=dotted];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> n17  [key=2, style=dotted];
m17_30 -> m17_8  [key=2, style=dotted];
m17_30 -> m17_9  [key=2, style=dotted];
m17_31 -> m17_24  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> n17  [key=2, style=dotted];
m17_1 -> m17_6  [key=2, style=dotted];
m17_1 -> m17_3  [color=darkseagreen4, key=1, label=spyMapFile, style=dashed];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_7  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> n17  [key=2, style=dotted];
m17_3 -> m17_8  [key=2, style=dotted];
m17_3 -> m17_9  [key=2, style=dotted];
m17_4 -> m17_0  [color=blue, key=0, style=bold];
m17_32 -> m17_33  [key=0, style=solid];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_35  [key=2, style=dotted];
m17_33 -> m17_36  [key=2, style=dotted];
m17_33 -> m17_37  [key=2, style=dotted];
m17_33 -> m17_38  [key=2, style=dotted];
m17_33 -> n17  [key=2, style=dotted];
m17_34 -> m17_32  [color=blue, key=0, style=bold];
m17_39 -> m17_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests", style=dashed];
m17_39 -> m17_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests", style=dashed];
m17_39 -> m17_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests", style=dashed];
m17_39 -> m17_18  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests", style=dashed];
m17_39 -> m17_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.Auxiliary.MapFileResolverTests", style=dashed];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_44  [key=2, style=dotted];
m18_1 -> m18_45  [key=2, style=dotted];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_6  [color=darkseagreen4, key=1, label=mode, style=dashed];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_46  [key=2, style=dotted];
m18_3 -> m18_41  [color=darkseagreen4, key=1, label=liveMode, style=dashed];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_47  [key=2, style=dotted];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_46  [key=2, style=dotted];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_63  [key=2, style=dotted];
m18_5 -> m18_6  [key=0, style=solid];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_48  [key=2, style=dotted];
m18_7 -> m18_47  [key=2, style=dotted];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_47  [key=2, style=dotted];
m18_9 -> m18_10  [key=0, style=solid];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_14  [key=0, style=solid];
m18_10 -> m18_49  [key=2, style=dotted];
m18_10 -> m18_16  [color=darkseagreen4, key=1, label=leanEngineSystemHandlers, style=dashed];
m18_10 -> m18_36  [color=darkseagreen4, key=1, label=leanEngineSystemHandlers, style=dashed];
m18_10 -> m18_37  [color=darkseagreen4, key=1, label=leanEngineSystemHandlers, style=dashed];
m18_10 -> m18_38  [color=darkseagreen4, key=1, label=leanEngineSystemHandlers, style=dashed];
m18_10 -> m18_39  [color=darkseagreen4, key=1, label=leanEngineSystemHandlers, style=dashed];
m18_10 -> m18_41  [color=darkseagreen4, key=1, label=leanEngineSystemHandlers, style=dashed];
m18_11 -> m18_12  [key=0, style=solid];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_51  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_52  [key=2, style=dotted];
m18_16 -> m18_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_16 -> m18_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_16 -> m18_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_16 -> m18_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_16 -> m18_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_16 -> m18_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_16 -> m18_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_16 -> m18_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_16 -> m18_42  [color=darkseagreen4, key=1, label=assemblyPath, style=dashed];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_58  [key=2, style=dotted];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_59  [key=2, style=dotted];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_60  [key=2, style=dotted];
m18_38 -> m18_61  [key=2, style=dotted];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_62  [key=2, style=dotted];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_50  [key=2, style=dotted];
m18_13 -> m18_43  [key=0, style=solid];
m18_15 -> m18_16  [key=0, style=solid];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_19  [key=0, style=solid];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_34  [key=0, style=solid];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_47  [key=2, style=dotted];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_41  [key=0, style=solid];
m18_34 -> m18_56  [key=2, style=dotted];
m18_35 -> m18_36  [key=0, style=solid];
m18_35 -> m18_57  [key=2, style=dotted];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_64  [key=2, style=dotted];
m18_18 -> m18_43  [key=0, style=solid];
m18_18 -> n57  [key=2, style=dotted];
m18_19 -> m18_20  [key=0, style=solid];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_24  [key=0, style=solid];
m18_20 -> m18_54  [key=2, style=dotted];
m18_20 -> m18_25  [color=red, key=1, label=leanEngineAlgorithmHandlers, style=dashed];
m18_20 -> m18_26  [color=darkseagreen4, key=1, label=leanEngineAlgorithmHandlers, style=dashed];
m18_20 -> m18_27  [color=darkseagreen4, key=1, label=leanEngineAlgorithmHandlers, style=dashed];
m18_20 -> m18_28  [color=darkseagreen4, key=1, label=leanEngineAlgorithmHandlers, style=dashed];
m18_20 -> m18_29  [color=darkseagreen4, key=1, label=leanEngineAlgorithmHandlers, style=dashed];
m18_20 -> m18_30  [color=darkseagreen4, key=1, label=leanEngineAlgorithmHandlers, style=dashed];
m18_20 -> m18_31  [color=darkseagreen4, key=1, label=leanEngineAlgorithmHandlers, style=dashed];
m18_20 -> m18_41  [color=darkseagreen4, key=1, label=leanEngineAlgorithmHandlers, style=dashed];
m18_21 -> m18_22  [key=0, style=solid];
m18_24 -> m18_25  [color=red, key=0, style=solid];
m18_24 -> m18_47  [key=2, style=dotted];
m18_25 -> m18_26  [color=red, key=0, style=solid];
m18_25 -> m18_55  [color=red, key=2, style=dotted];
m18_25 -> m18_47  [color=red, key=2, style=dotted];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_55  [key=2, style=dotted];
m18_26 -> m18_47  [key=2, style=dotted];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_55  [key=2, style=dotted];
m18_27 -> m18_47  [key=2, style=dotted];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_55  [key=2, style=dotted];
m18_28 -> m18_47  [key=2, style=dotted];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_55  [key=2, style=dotted];
m18_29 -> m18_47  [key=2, style=dotted];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_55  [key=2, style=dotted];
m18_30 -> m18_47  [key=2, style=dotted];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_55  [key=2, style=dotted];
m18_31 -> m18_47  [key=2, style=dotted];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_50  [key=2, style=dotted];
m18_23 -> m18_43  [key=0, style=solid];
m18_40 -> m18_43  [key=0, style=solid];
m18_43 -> m18_0  [color=blue, key=0, style=bold];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_94  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.AroonOscillator AROON", style=bold];
m19_92 -> m19_93  [key=0, style=solid];
m19_92 -> m19_94  [key=2, style=dotted];
m19_93 -> m19_91  [color=blue, key=0, style=bold];
m19_22 -> m19_440  [key=0, style=solid];
m19_22 -> m19_441  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_22 -> m19_442  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m19_22 -> m19_450  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m19_22 -> m19_14  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_22 -> m19_61  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_22 -> m19_77  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_22 -> m19_13  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_22 -> m19_434  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_22 -> m19_16  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_22 -> m19_63  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_22 -> m19_79  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_22 -> m19_21  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Consolidators.IDataConsolidator consolidator", style=bold];
m19_22 -> m19_73  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Consolidators.IDataConsolidator consolidator", style=bold];
m19_440 -> m19_441  [key=0, style=solid];
m19_440 -> m19_440  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, decimal>", style=dashed];
m19_440 -> m19_446  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m19_440 -> m19_442  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, decimal>", style=dashed];
m19_440 -> m19_449  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, decimal>", style=dashed];
m19_441 -> m19_442  [key=0, style=solid];
m19_441 -> m19_444  [key=2, style=dotted];
m19_442 -> m19_443  [key=0, style=solid];
m19_442 -> m19_449  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m19_442 -> m19_450  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m19_443 -> m19_22  [color=blue, key=0, style=bold];
m19_178 -> m19_179  [key=0, style=solid];
m19_178 -> m19_181  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_178 -> m19_180  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.OnBalanceVolume OBV", style=bold];
m19_179 -> m19_180  [key=0, style=solid];
m19_179 -> m19_11  [key=2, style=dotted];
m19_181 -> m19_182  [key=0, style=solid];
m19_181 -> m19_39  [key=2, style=dotted];
m19_180 -> m19_181  [key=0, style=solid];
m19_180 -> m19_184  [key=2, style=dotted];
m19_180 -> m19_182  [color=darkseagreen4, key=1, label=onBalanceVolume, style=dashed];
m19_182 -> m19_183  [key=0, style=solid];
m19_183 -> m19_178  [color=blue, key=0, style=bold];
m19_150 -> m19_151  [key=0, style=solid];
m19_150 -> m19_152  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_150 -> m19_153  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_151 -> m19_152  [key=0, style=solid];
m19_151 -> m19_11  [key=2, style=dotted];
m19_152 -> m19_153  [key=0, style=solid];
m19_152 -> m19_156  [key=2, style=dotted];
m19_152 -> m19_154  [color=darkseagreen4, key=1, label=rateofchange, style=dashed];
m19_153 -> m19_154  [key=0, style=solid];
m19_153 -> m19_13  [key=2, style=dotted];
m19_154 -> m19_155  [key=0, style=solid];
m19_155 -> m19_150  [color=blue, key=0, style=bold];
m19_157 -> m19_158  [key=0, style=solid];
m19_157 -> m19_159  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_157 -> m19_160  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_158 -> m19_159  [key=0, style=solid];
m19_158 -> m19_11  [key=2, style=dotted];
m19_159 -> m19_160  [key=0, style=solid];
m19_159 -> m19_163  [key=2, style=dotted];
m19_159 -> m19_161  [color=darkseagreen4, key=1, label=rateofchangepercent, style=dashed];
m19_160 -> m19_161  [key=0, style=solid];
m19_160 -> m19_13  [key=2, style=dotted];
m19_161 -> m19_162  [key=0, style=solid];
m19_162 -> m19_157  [color=blue, key=0, style=bold];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_8  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_5 -> m19_0  [color=darkorchid, key=3, label="Parameter variable string fieldName", style=bold];
m19_5 -> m19_1  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m19_5 -> m19_7  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.Identity Identity", style=bold];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_11  [key=2, style=dotted];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_13  [key=2, style=dotted];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_12  [key=2, style=dotted];
m19_7 -> m19_9  [color=darkseagreen4, key=1, label=identity, style=dashed];
m19_9 -> m19_10  [key=0, style=solid];
m19_10 -> m19_5  [color=blue, key=0, style=bold];
m19_338 -> m19_339  [key=0, style=solid];
m19_338 -> m19_340  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_338 -> m19_341  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_339 -> m19_340  [key=0, style=solid];
m19_339 -> m19_11  [key=2, style=dotted];
m19_340 -> m19_341  [key=0, style=solid];
m19_340 -> m19_344  [key=2, style=dotted];
m19_340 -> m19_342  [color=darkseagreen4, key=1, label=natr, style=dashed];
m19_341 -> m19_342  [key=0, style=solid];
m19_341 -> m19_39  [key=2, style=dotted];
m19_342 -> m19_343  [key=0, style=solid];
m19_343 -> m19_338  [color=blue, key=0, style=bold];
m19_247 -> m19_248  [key=0, style=solid];
m19_247 -> m19_249  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_247 -> m19_250  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_248 -> m19_249  [key=0, style=solid];
m19_248 -> m19_11  [key=2, style=dotted];
m19_249 -> m19_250  [key=0, style=solid];
m19_249 -> m19_253  [key=2, style=dotted];
m19_249 -> m19_251  [color=darkseagreen4, key=1, label=variance, style=dashed];
m19_250 -> m19_251  [key=0, style=solid];
m19_250 -> m19_13  [key=2, style=dotted];
m19_251 -> m19_252  [key=0, style=solid];
m19_252 -> m19_247  [color=blue, key=0, style=bold];
m19_192 -> m19_193  [key=0, style=solid];
m19_192 -> m19_194  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_192 -> m19_195  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_193 -> m19_194  [key=0, style=solid];
m19_193 -> m19_11  [key=2, style=dotted];
m19_194 -> m19_195  [key=0, style=solid];
m19_194 -> m19_198  [key=2, style=dotted];
m19_194 -> m19_196  [color=darkseagreen4, key=1, label=keltnerChannels, style=dashed];
m19_195 -> m19_196  [key=0, style=solid];
m19_195 -> m19_39  [key=2, style=dotted];
m19_196 -> m19_197  [key=0, style=solid];
m19_197 -> m19_192  [color=blue, key=0, style=bold];
m19_216 -> m19_217  [key=0, style=solid];
m19_216 -> m19_209  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.Stochastic STO", style=bold];
m19_217 -> m19_218  [key=0, style=solid];
m19_217 -> m19_209  [key=2, style=dotted];
m19_218 -> m19_216  [color=blue, key=0, style=bold];
m19_310 -> m19_311  [key=0, style=solid];
m19_310 -> m19_312  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_310 -> m19_313  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_311 -> m19_312  [key=0, style=solid];
m19_311 -> m19_11  [key=2, style=dotted];
m19_312 -> m19_313  [key=0, style=solid];
m19_312 -> m19_316  [key=2, style=dotted];
m19_312 -> m19_314  [color=darkseagreen4, key=1, label=mad, style=dashed];
m19_313 -> m19_314  [key=0, style=solid];
m19_313 -> m19_13  [key=2, style=dotted];
m19_314 -> m19_315  [key=0, style=solid];
m19_315 -> m19_310  [color=blue, key=0, style=bold];
m19_331 -> m19_332  [key=0, style=solid];
m19_331 -> m19_333  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_331 -> m19_334  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_332 -> m19_333  [key=0, style=solid];
m19_332 -> m19_29  [key=2, style=dotted];
m19_332 -> m19_11  [key=2, style=dotted];
m19_333 -> m19_334  [key=0, style=solid];
m19_333 -> m19_337  [key=2, style=dotted];
m19_333 -> m19_335  [color=darkseagreen4, key=1, label=t3, style=dashed];
m19_334 -> m19_335  [key=0, style=solid];
m19_334 -> m19_13  [key=2, style=dotted];
m19_335 -> m19_336  [key=0, style=solid];
m19_336 -> m19_331  [color=blue, key=0, style=bold];
m19_268 -> m19_269  [key=0, style=solid];
m19_268 -> m19_271  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_268 -> m19_270  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.TrueRange TR", style=bold];
m19_269 -> m19_270  [key=0, style=solid];
m19_269 -> m19_11  [key=2, style=dotted];
m19_271 -> m19_272  [key=0, style=solid];
m19_271 -> m19_39  [key=2, style=dotted];
m19_270 -> m19_271  [key=0, style=solid];
m19_270 -> m19_274  [key=2, style=dotted];
m19_270 -> m19_272  [color=darkseagreen4, key=1, label=tr, style=dashed];
m19_272 -> m19_273  [key=0, style=solid];
m19_273 -> m19_268  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_0 -> m19_5  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.Identity Identity", style=bold];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_4  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_5  [key=2, style=dotted];
m19_3 -> m19_0  [color=blue, key=0, style=bold];
m19_115 -> m19_116  [key=0, style=solid];
m19_115 -> m19_117  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_115 -> m19_118  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_116 -> m19_117  [key=0, style=solid];
m19_116 -> m19_11  [key=2, style=dotted];
m19_117 -> m19_118  [key=0, style=solid];
m19_117 -> m19_121  [key=2, style=dotted];
m19_117 -> m19_119  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m19_118 -> m19_119  [key=0, style=solid];
m19_118 -> m19_13  [key=2, style=dotted];
m19_119 -> m19_120  [key=0, style=solid];
m19_120 -> m19_115  [color=blue, key=0, style=bold];
m19_422 -> m19_423  [key=0, style=solid];
m19_422 -> m19_424  [color=red, key=1, label=int, style=dashed];
m19_422 -> m19_425  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_423 -> m19_424  [color=red, key=0, style=solid];
m19_423 -> m19_11  [key=2, style=dotted];
m19_424 -> m19_425  [color=red, key=0, style=solid];
m19_424 -> m19_428  [color=red, key=2, style=dotted];
m19_424 -> m19_426  [color=red, key=1, label=swiss, style=dashed];
m19_425 -> m19_426  [key=0, style=solid];
m19_425 -> m19_13  [key=2, style=dotted];
m19_426 -> m19_427  [key=0, style=solid];
m19_427 -> m19_422  [color=blue, key=0, style=bold];
m19_199 -> m19_200  [key=0, style=solid];
m19_199 -> m19_201  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_199 -> m19_202  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_199 -> m19_206  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar> selector", style=bold];
m19_200 -> m19_201  [key=0, style=solid];
m19_200 -> m19_11  [key=2, style=dotted];
m19_201 -> m19_202  [key=0, style=solid];
m19_201 -> m19_205  [key=2, style=dotted];
m19_201 -> m19_203  [color=darkseagreen4, key=1, label=donchianChannel, style=dashed];
m19_202 -> m19_203  [key=0, style=solid];
m19_202 -> m19_39  [key=2, style=dotted];
m19_203 -> m19_204  [key=0, style=solid];
m19_204 -> m19_199  [color=blue, key=0, style=bold];
m19_282 -> m19_283  [key=0, style=solid];
m19_282 -> m19_284  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_282 -> m19_285  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_283 -> m19_284  [key=0, style=solid];
m19_283 -> m19_11  [key=2, style=dotted];
m19_284 -> m19_285  [key=0, style=solid];
m19_284 -> m19_288  [key=2, style=dotted];
m19_284 -> m19_286  [color=darkseagreen4, key=1, label=dema, style=dashed];
m19_285 -> m19_286  [key=0, style=solid];
m19_285 -> m19_13  [key=2, style=dotted];
m19_286 -> m19_287  [key=0, style=solid];
m19_287 -> m19_282  [color=blue, key=0, style=bold];
m19_143 -> m19_144  [key=0, style=solid];
m19_143 -> m19_145  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_143 -> m19_146  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_144 -> m19_145  [key=0, style=solid];
m19_144 -> m19_29  [key=2, style=dotted];
m19_144 -> m19_11  [key=2, style=dotted];
m19_145 -> m19_146  [key=0, style=solid];
m19_145 -> m19_149  [key=2, style=dotted];
m19_145 -> m19_147  [color=darkseagreen4, key=1, label=bb, style=dashed];
m19_146 -> m19_147  [key=0, style=solid];
m19_146 -> m19_13  [key=2, style=dotted];
m19_147 -> m19_148  [key=0, style=solid];
m19_148 -> m19_143  [color=blue, key=0, style=bold];
m19_460 -> m19_461  [key=0, style=solid];
m19_461 -> m19_462  [key=0, style=solid];
m19_461 -> m19_21  [key=2, style=dotted];
m19_461 -> m19_457  [key=2, style=dotted];
m19_462 -> m19_460  [color=blue, key=0, style=bold];
m19_21 -> m19_490  [key=0, style=solid];
m19_21 -> m19_491  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m19_21 -> m19_494  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m19_21 -> m19_495  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_21 -> m19_497  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m19_21 -> m19_499  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m19_21 -> m19_501  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m19_21 -> m19_502  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m19_21 -> m19_14  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan? timeSpan", style=bold];
m19_21 -> m19_434  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan? timeSpan", style=bold];
m19_21 -> m19_460  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan? timeSpan", style=bold];
m19_21 -> m19_73  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m19_21 -> m19_482  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan? timeSpan", style=bold];
m19_490 -> m19_491  [key=0, style=solid];
m19_490 -> m19_4  [key=2, style=dotted];
m19_490 -> m19_492  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m19_490 -> m19_494  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m19_490 -> m19_495  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m19_490 -> m19_496  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m19_490 -> m19_498  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m19_490 -> m19_500  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m19_491 -> m19_492  [key=0, style=solid];
m19_491 -> m19_494  [key=0, style=solid];
m19_491 -> m19_489  [key=2, style=dotted];
m19_494 -> m19_495  [key=0, style=solid];
m19_494 -> m19_496  [key=0, style=solid];
m19_494 -> m19_489  [key=2, style=dotted];
m19_495 -> m19_503  [key=0, style=solid];
m19_495 -> m19_470  [key=2, style=dotted];
m19_495 -> m19_29  [key=2, style=dotted];
m19_497 -> m19_503  [key=0, style=solid];
m19_497 -> m19_504  [key=2, style=dotted];
m19_499 -> m19_503  [key=0, style=solid];
m19_499 -> m19_505  [key=2, style=dotted];
m19_501 -> m19_503  [key=0, style=solid];
m19_501 -> m19_506  [key=2, style=dotted];
m19_502 -> m19_503  [key=0, style=solid];
m19_502 -> m19_507  [key=2, style=dotted];
m19_492 -> m19_493  [key=0, style=solid];
m19_492 -> m19_487  [key=2, style=dotted];
m19_496 -> m19_497  [key=0, style=solid];
m19_496 -> m19_498  [key=0, style=solid];
m19_496 -> m19_72  [key=2, style=dotted];
m19_498 -> m19_499  [key=0, style=solid];
m19_498 -> m19_500  [key=0, style=solid];
m19_498 -> m19_72  [key=2, style=dotted];
m19_500 -> m19_501  [key=0, style=solid];
m19_500 -> m19_502  [key=0, style=solid];
m19_500 -> m19_72  [key=2, style=dotted];
m19_493 -> m19_503  [key=0, style=solid];
m19_493 -> m19_488  [key=2, style=dotted];
m19_503 -> m19_21  [color=blue, key=0, style=bold];
m19_122 -> m19_123  [key=0, style=solid];
m19_122 -> m19_124  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_122 -> m19_125  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_123 -> m19_124  [key=0, style=solid];
m19_123 -> m19_11  [key=2, style=dotted];
m19_124 -> m19_125  [key=0, style=solid];
m19_124 -> m19_128  [key=2, style=dotted];
m19_124 -> m19_126  [color=darkseagreen4, key=1, label=cci, style=dashed];
m19_125 -> m19_126  [key=0, style=solid];
m19_125 -> m19_39  [key=2, style=dotted];
m19_126 -> m19_127  [key=0, style=solid];
m19_127 -> m19_122  [color=blue, key=0, style=bold];
m19_164 -> m19_165  [key=0, style=solid];
m19_164 -> m19_166  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_164 -> m19_167  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_165 -> m19_166  [key=0, style=solid];
m19_165 -> m19_11  [key=2, style=dotted];
m19_166 -> m19_167  [key=0, style=solid];
m19_166 -> m19_170  [key=2, style=dotted];
m19_166 -> m19_168  [color=darkseagreen4, key=1, label=williamspercentr, style=dashed];
m19_167 -> m19_168  [key=0, style=solid];
m19_167 -> m19_39  [key=2, style=dotted];
m19_168 -> m19_169  [key=0, style=solid];
m19_169 -> m19_164  [color=blue, key=0, style=bold];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_42  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_40 -> m19_43  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_11  [key=2, style=dotted];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_46  [key=2, style=dotted];
m19_42 -> m19_44  [color=darkseagreen4, key=1, label=ema, style=dashed];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_13  [key=2, style=dotted];
m19_44 -> m19_45  [key=0, style=solid];
m19_45 -> m19_40  [color=blue, key=0, style=bold];
m19_517 -> m19_518  [key=0, style=solid];
m19_75 -> m19_76  [key=0, style=solid];
m19_74 -> m19_75  [key=0, style=solid];
m19_76 -> m19_74  [color=blue, key=0, style=bold];
m19_89 -> m19_90  [key=0, style=solid];
m19_88 -> m19_89  [key=0, style=solid];
m19_90 -> m19_88  [color=blue, key=0, style=bold];
m19_432 -> m19_433  [key=0, style=solid];
m19_431 -> m19_432  [key=0, style=solid];
m19_433 -> m19_431  [color=blue, key=0, style=bold];
m19_438 -> m19_439  [key=0, style=solid];
m19_437 -> m19_438  [key=0, style=solid];
m19_439 -> m19_437  [color=blue, key=0, style=bold];
m19_450 -> m19_451  [key=0, style=solid];
m19_450 -> m19_453  [key=2, style=dotted];
m19_450 -> m19_454  [key=2, style=dotted];
m19_446 -> m19_447  [key=0, style=solid];
m19_449 -> m19_450  [key=0, style=solid];
m19_449 -> m19_452  [key=2, style=dotted];
m19_445 -> m19_446  [key=0, style=solid];
m19_447 -> m19_445  [color=blue, key=0, style=bold];
m19_448 -> m19_449  [key=0, style=solid];
m19_448 -> m19_450  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m19_451 -> m19_448  [color=blue, key=0, style=bold];
m19_476 -> m19_477  [key=0, style=solid];
m19_476 -> m19_454  [key=2, style=dotted];
m19_472 -> m19_473  [key=0, style=solid];
m19_475 -> m19_476  [key=0, style=solid];
m19_475 -> m19_452  [key=2, style=dotted];
m19_471 -> m19_472  [key=0, style=solid];
m19_473 -> m19_471  [color=blue, key=0, style=bold];
m19_474 -> m19_475  [key=0, style=solid];
m19_477 -> m19_474  [color=blue, key=0, style=bold];
m19_518 -> m19_519  [key=0, style=solid];
m19_519 -> m19_517  [color=blue, key=0, style=bold];
m19_254 -> m19_255  [key=0, style=solid];
m19_254 -> m19_257  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_254 -> m19_256  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.AccumulationDistribution AD", style=bold];
m19_255 -> m19_256  [key=0, style=solid];
m19_255 -> m19_11  [key=2, style=dotted];
m19_257 -> m19_258  [key=0, style=solid];
m19_257 -> m19_39  [key=2, style=dotted];
m19_256 -> m19_257  [key=0, style=solid];
m19_256 -> m19_260  [key=2, style=dotted];
m19_256 -> m19_258  [color=darkseagreen4, key=1, label=ad, style=dashed];
m19_258 -> m19_259  [key=0, style=solid];
m19_259 -> m19_254  [color=blue, key=0, style=bold];
m19_296 -> m19_297  [key=0, style=solid];
m19_296 -> m19_298  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_296 -> m19_299  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_297 -> m19_298  [key=0, style=solid];
m19_297 -> m19_11  [key=2, style=dotted];
m19_298 -> m19_299  [key=0, style=solid];
m19_298 -> m19_302  [key=2, style=dotted];
m19_298 -> m19_300  [color=darkseagreen4, key=1, label=trima, style=dashed];
m19_299 -> m19_300  [key=0, style=solid];
m19_299 -> m19_13  [key=2, style=dotted];
m19_300 -> m19_301  [key=0, style=solid];
m19_301 -> m19_296  [color=blue, key=0, style=bold];
m19_401 -> m19_402  [key=0, style=solid];
m19_401 -> m19_403  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_401 -> m19_404  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_402 -> m19_403  [key=0, style=solid];
m19_402 -> m19_29  [key=2, style=dotted];
m19_402 -> m19_11  [key=2, style=dotted];
m19_403 -> m19_404  [key=0, style=solid];
m19_403 -> m19_407  [key=2, style=dotted];
m19_403 -> m19_405  [color=darkseagreen4, key=1, label=ppo, style=dashed];
m19_404 -> m19_405  [key=0, style=solid];
m19_404 -> m19_13  [key=2, style=dotted];
m19_405 -> m19_406  [key=0, style=solid];
m19_406 -> m19_401  [color=blue, key=0, style=bold];
m19_209 -> m19_210  [key=0, style=solid];
m19_209 -> m19_211  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_209 -> m19_212  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_209 -> m19_216  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_209 -> m19_217  [color=darkorchid, key=3, label="Parameter variable int dPeriod", style=bold];
m19_210 -> m19_211  [key=0, style=solid];
m19_210 -> m19_11  [key=2, style=dotted];
m19_211 -> m19_212  [key=0, style=solid];
m19_211 -> m19_215  [key=2, style=dotted];
m19_211 -> m19_213  [color=darkseagreen4, key=1, label=stoch, style=dashed];
m19_212 -> m19_213  [key=0, style=solid];
m19_212 -> m19_31  [key=2, style=dotted];
m19_213 -> m19_214  [key=0, style=solid];
m19_214 -> m19_209  [color=blue, key=0, style=bold];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_54 -> m19_57  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_29  [key=2, style=dotted];
m19_55 -> m19_11  [key=2, style=dotted];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_60  [key=2, style=dotted];
m19_56 -> m19_58  [color=darkseagreen4, key=1, label=macd, style=dashed];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_13  [key=2, style=dotted];
m19_58 -> m19_59  [key=0, style=solid];
m19_59 -> m19_54  [color=blue, key=0, style=bold];
m19_171 -> m19_172  [key=0, style=solid];
m19_171 -> m19_173  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_171 -> m19_174  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_172 -> m19_173  [key=0, style=solid];
m19_172 -> m19_11  [key=2, style=dotted];
m19_173 -> m19_174  [key=0, style=solid];
m19_173 -> m19_177  [key=2, style=dotted];
m19_173 -> m19_175  [color=darkseagreen4, key=1, label=lwma, style=dashed];
m19_174 -> m19_175  [key=0, style=solid];
m19_174 -> m19_13  [key=2, style=dotted];
m19_175 -> m19_176  [key=0, style=solid];
m19_176 -> m19_171  [color=blue, key=0, style=bold];
m19_373 -> m19_374  [key=0, style=solid];
m19_373 -> m19_375  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_373 -> m19_376  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_374 -> m19_375  [key=0, style=solid];
m19_374 -> m19_20  [key=2, style=dotted];
m19_374 -> m19_11  [key=2, style=dotted];
m19_375 -> m19_376  [key=0, style=solid];
m19_375 -> m19_379  [key=2, style=dotted];
m19_375 -> m19_377  [color=darkseagreen4, key=1, label=ultosc, style=dashed];
m19_376 -> m19_377  [key=0, style=solid];
m19_376 -> m19_39  [key=2, style=dotted];
m19_377 -> m19_378  [key=0, style=solid];
m19_378 -> m19_373  [color=blue, key=0, style=bold];
m19_434 -> m19_435  [key=0, style=solid];
m19_435 -> m19_436  [key=0, style=solid];
m19_435 -> m19_21  [key=2, style=dotted];
m19_435 -> m19_22  [key=2, style=dotted];
m19_435 -> m19_438  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m19_436 -> m19_434  [color=blue, key=0, style=bold];
m19_77 -> m19_78  [key=0, style=solid];
m19_77 -> m19_79  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_77 -> m19_80  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, decimal>", style=dashed];
m19_77 -> m19_81  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_77 -> m19_84  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_77 -> m19_83  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_78 -> m19_79  [key=0, style=solid];
m19_78 -> m19_11  [key=2, style=dotted];
m19_79 -> m19_80  [key=0, style=solid];
m19_79 -> m19_87  [key=2, style=dotted];
m19_79 -> m19_84  [color=darkseagreen4, key=1, label=min, style=dashed];
m19_79 -> m19_85  [color=darkseagreen4, key=1, label=min, style=dashed];
m19_80 -> m19_81  [key=0, style=solid];
m19_80 -> m19_84  [key=0, style=solid];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_4  [key=2, style=dotted];
m19_84 -> m19_85  [key=0, style=solid];
m19_84 -> m19_73  [key=2, style=dotted];
m19_84 -> m19_22  [key=2, style=dotted];
m19_85 -> m19_86  [key=0, style=solid];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_84  [key=0, style=solid];
m19_82 -> m19_72  [key=2, style=dotted];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_89  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m19_86 -> m19_77  [color=blue, key=0, style=bold];
m19_4 -> m19_508  [key=0, style=solid];
m19_4 -> m19_509  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_4 -> m19_518  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_4 -> m19_511  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_4 -> m19_0  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m19_4 -> m19_61  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m19_4 -> m19_77  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m19_4 -> m19_73  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m19_4 -> m19_21  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m19_4 -> m19_11  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m19_508 -> m19_509  [key=0, style=solid];
m19_509 -> m19_510  [key=0, style=solid];
m19_509 -> m19_512  [key=0, style=solid];
m19_509 -> m19_514  [key=2, style=dotted];
m19_509 -> m19_517  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_511 -> m19_513  [key=0, style=solid];
m19_511 -> n57  [key=2, style=dotted];
m19_511 -> m19_516  [key=2, style=dotted];
m19_510 -> m19_511  [key=0, style=solid];
m19_512 -> m19_513  [key=0, style=solid];
m19_513 -> m19_4  [color=blue, key=0, style=bold];
m19_206 -> m19_207  [key=0, style=solid];
m19_206 -> m19_199  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.DonchianChannel DCH", style=bold];
m19_207 -> m19_208  [key=0, style=solid];
m19_207 -> m19_199  [key=2, style=dotted];
m19_208 -> m19_206  [color=blue, key=0, style=bold];
m19_275 -> m19_276  [key=0, style=solid];
m19_275 -> m19_277  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_275 -> m19_278  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_276 -> m19_277  [key=0, style=solid];
m19_276 -> m19_11  [key=2, style=dotted];
m19_277 -> m19_278  [key=0, style=solid];
m19_277 -> m19_281  [key=2, style=dotted];
m19_277 -> m19_279  [color=darkseagreen4, key=1, label=cmo, style=dashed];
m19_278 -> m19_279  [key=0, style=solid];
m19_278 -> m19_13  [key=2, style=dotted];
m19_279 -> m19_280  [key=0, style=solid];
m19_280 -> m19_275  [color=blue, key=0, style=bold];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_17  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_14 -> m19_16  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.Identity Identity", style=bold];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_20  [key=2, style=dotted];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_21  [key=2, style=dotted];
m19_17 -> m19_22  [key=2, style=dotted];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_12  [key=2, style=dotted];
m19_16 -> m19_18  [color=darkseagreen4, key=1, label=identity, style=dashed];
m19_18 -> m19_19  [key=0, style=solid];
m19_19 -> m19_14  [color=blue, key=0, style=bold];
m19_185 -> m19_186  [key=0, style=solid];
m19_185 -> m19_187  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_185 -> m19_188  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_186 -> m19_187  [key=0, style=solid];
m19_186 -> m19_11  [key=2, style=dotted];
m19_187 -> m19_188  [key=0, style=solid];
m19_187 -> m19_191  [key=2, style=dotted];
m19_187 -> m19_189  [color=darkseagreen4, key=1, label=averageDirectionalIndex, style=dashed];
m19_188 -> m19_189  [key=0, style=solid];
m19_188 -> m19_39  [key=2, style=dotted];
m19_189 -> m19_190  [key=0, style=solid];
m19_190 -> m19_185  [color=blue, key=0, style=bold];
m19_226 -> m19_227  [key=0, style=solid];
m19_226 -> m19_228  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_226 -> m19_229  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_227 -> m19_228  [key=0, style=solid];
m19_227 -> m19_11  [key=2, style=dotted];
m19_228 -> m19_229  [key=0, style=solid];
m19_228 -> m19_232  [key=2, style=dotted];
m19_228 -> m19_230  [color=darkseagreen4, key=1, label=lsma, style=dashed];
m19_229 -> m19_230  [key=0, style=solid];
m19_229 -> m19_13  [key=2, style=dotted];
m19_230 -> m19_231  [key=0, style=solid];
m19_231 -> m19_226  [color=blue, key=0, style=bold];
m19_359 -> m19_360  [key=0, style=solid];
m19_359 -> m19_361  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_359 -> m19_362  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_360 -> m19_361  [key=0, style=solid];
m19_360 -> m19_11  [key=2, style=dotted];
m19_361 -> m19_362  [key=0, style=solid];
m19_361 -> m19_365  [key=2, style=dotted];
m19_361 -> m19_363  [color=darkseagreen4, key=1, label=kama, style=dashed];
m19_362 -> m19_363  [key=0, style=solid];
m19_362 -> m19_13  [key=2, style=dotted];
m19_363 -> m19_364  [key=0, style=solid];
m19_364 -> m19_359  [color=blue, key=0, style=bold];
m19_289 -> m19_290  [key=0, style=solid];
m19_289 -> m19_291  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_289 -> m19_292  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_290 -> m19_291  [key=0, style=solid];
m19_290 -> m19_11  [key=2, style=dotted];
m19_291 -> m19_292  [key=0, style=solid];
m19_291 -> m19_295  [key=2, style=dotted];
m19_291 -> m19_293  [color=darkseagreen4, key=1, label=tema, style=dashed];
m19_292 -> m19_293  [key=0, style=solid];
m19_292 -> m19_13  [key=2, style=dotted];
m19_293 -> m19_294  [key=0, style=solid];
m19_294 -> m19_289  [color=blue, key=0, style=bold];
m19_415 -> m19_416  [key=0, style=solid];
m19_415 -> m19_417  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_415 -> m19_418  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_416 -> m19_417  [key=0, style=solid];
m19_416 -> m19_11  [key=2, style=dotted];
m19_417 -> m19_418  [key=0, style=solid];
m19_417 -> m19_421  [key=2, style=dotted];
m19_417 -> m19_419  [color=darkseagreen4, key=1, label=frama, style=dashed];
m19_418 -> m19_419  [key=0, style=solid];
m19_418 -> m19_31  [key=2, style=dotted];
m19_419 -> m19_420  [key=0, style=solid];
m19_420 -> m19_415  [color=blue, key=0, style=bold];
m19_240 -> m19_241  [key=0, style=solid];
m19_240 -> m19_243  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_240 -> m19_242  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.BalanceOfPower BOP", style=bold];
m19_241 -> m19_242  [key=0, style=solid];
m19_241 -> m19_11  [key=2, style=dotted];
m19_243 -> m19_244  [key=0, style=solid];
m19_243 -> m19_39  [key=2, style=dotted];
m19_242 -> m19_243  [key=0, style=solid];
m19_242 -> m19_246  [key=2, style=dotted];
m19_242 -> m19_244  [color=darkseagreen4, key=1, label=bop, style=dashed];
m19_244 -> m19_245  [key=0, style=solid];
m19_245 -> m19_240  [color=blue, key=0, style=bold];
m19_317 -> m19_318  [key=0, style=solid];
m19_317 -> m19_319  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_317 -> m19_320  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_318 -> m19_319  [key=0, style=solid];
m19_318 -> m19_29  [key=2, style=dotted];
m19_318 -> m19_11  [key=2, style=dotted];
m19_319 -> m19_320  [key=0, style=solid];
m19_319 -> m19_323  [key=2, style=dotted];
m19_319 -> m19_321  [color=darkseagreen4, key=1, label=momersion, style=dashed];
m19_320 -> m19_321  [key=0, style=solid];
m19_320 -> m19_13  [key=2, style=dotted];
m19_321 -> m19_322  [key=0, style=solid];
m19_322 -> m19_317  [color=blue, key=0, style=bold];
m19_394 -> m19_395  [key=0, style=solid];
m19_394 -> m19_396  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_394 -> m19_397  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_395 -> m19_396  [key=0, style=solid];
m19_395 -> m19_29  [key=2, style=dotted];
m19_395 -> m19_11  [key=2, style=dotted];
m19_396 -> m19_397  [key=0, style=solid];
m19_396 -> m19_400  [key=2, style=dotted];
m19_396 -> m19_398  [color=darkseagreen4, key=1, label=apo, style=dashed];
m19_397 -> m19_398  [key=0, style=solid];
m19_397 -> m19_13  [key=2, style=dotted];
m19_398 -> m19_399  [key=0, style=solid];
m19_399 -> m19_394  [color=blue, key=0, style=bold];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_49  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_47 -> m19_50  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_11  [key=2, style=dotted];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_53  [key=2, style=dotted];
m19_49 -> m19_51  [color=darkseagreen4, key=1, label=sma, style=dashed];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_13  [key=2, style=dotted];
m19_51 -> m19_52  [key=0, style=solid];
m19_52 -> m19_47  [color=blue, key=0, style=bold];
m19_352 -> m19_353  [key=0, style=solid];
m19_352 -> m19_354  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_352 -> m19_355  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_353 -> m19_354  [key=0, style=solid];
m19_353 -> m19_11  [key=2, style=dotted];
m19_354 -> m19_355  [key=0, style=solid];
m19_354 -> m19_358  [key=2, style=dotted];
m19_354 -> m19_356  [color=darkseagreen4, key=1, label=adxr, style=dashed];
m19_355 -> m19_356  [key=0, style=solid];
m19_355 -> m19_39  [key=2, style=dotted];
m19_356 -> m19_357  [key=0, style=solid];
m19_357 -> m19_352  [color=blue, key=0, style=bold];
m19_94 -> m19_95  [key=0, style=solid];
m19_94 -> m19_96  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_94 -> m19_97  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_94 -> m19_91  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar> selector", style=bold];
m19_95 -> m19_96  [key=0, style=solid];
m19_95 -> m19_29  [key=2, style=dotted];
m19_95 -> m19_11  [key=2, style=dotted];
m19_96 -> m19_97  [key=0, style=solid];
m19_96 -> m19_100  [key=2, style=dotted];
m19_96 -> m19_98  [color=darkseagreen4, key=1, label=aroon, style=dashed];
m19_97 -> m19_98  [key=0, style=solid];
m19_97 -> m19_39  [key=2, style=dotted];
m19_98 -> m19_99  [key=0, style=solid];
m19_99 -> m19_94  [color=blue, key=0, style=bold];
m19_408 -> m19_409  [key=0, style=solid];
m19_408 -> m19_410  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_408 -> m19_411  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_409 -> m19_410  [key=0, style=solid];
m19_409 -> m19_11  [key=2, style=dotted];
m19_410 -> m19_411  [key=0, style=solid];
m19_410 -> m19_414  [key=2, style=dotted];
m19_410 -> m19_412  [color=darkseagreen4, key=1, label=vwap, style=dashed];
m19_411 -> m19_412  [key=0, style=solid];
m19_411 -> m19_39  [key=2, style=dotted];
m19_412 -> m19_413  [key=0, style=solid];
m19_413 -> m19_408  [color=blue, key=0, style=bold];
m19_387 -> m19_388  [key=0, style=solid];
m19_387 -> m19_389  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_387 -> m19_390  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_388 -> m19_389  [key=0, style=solid];
m19_388 -> m19_11  [key=2, style=dotted];
m19_389 -> m19_390  [key=0, style=solid];
m19_389 -> m19_393  [key=2, style=dotted];
m19_389 -> m19_391  [color=darkseagreen4, key=1, label=midprice, style=dashed];
m19_390 -> m19_391  [key=0, style=solid];
m19_390 -> m19_39  [key=2, style=dotted];
m19_391 -> m19_392  [key=0, style=solid];
m19_392 -> m19_387  [color=blue, key=0, style=bold];
m19_31 -> m19_455  [key=0, style=solid];
m19_31 -> m19_23  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_31 -> m19_209  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_31 -> m19_219  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_31 -> m19_415  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_31 -> m19_25  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_31 -> m19_211  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_31 -> m19_221  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_31 -> m19_417  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_455 -> m19_456  [key=0, style=solid];
m19_455 -> m19_73  [key=2, style=dotted];
m19_455 -> m19_457  [key=2, style=dotted];
m19_456 -> m19_31  [color=blue, key=0, style=bold];
m19_11 -> m19_520  [key=0, style=solid];
m19_11 -> m19_521  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_11 -> m19_523  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m19_11 -> m19_537  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_11 -> m19_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_23  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_32  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_40  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_47  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_54  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_61  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_77  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_94  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_101  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_108  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_115  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_122  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_129  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_136  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_143  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_150  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_157  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_164  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_171  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_178  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_185  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_192  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_199  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_209  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_219  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_226  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_233  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_240  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_247  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_254  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_261  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_268  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_275  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_282  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_289  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_296  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_303  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_310  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_317  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_324  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_331  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_338  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_345  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_352  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_359  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_366  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_373  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_380  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_387  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_394  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_401  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_408  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_415  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_422  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_11 -> m19_179  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_11 -> m19_186  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_11 -> m19_193  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_11 -> m19_200  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_11 -> m19_210  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_11 -> m19_220  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_11 -> m19_241  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_11 -> m19_255  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_11 -> m19_269  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_11 -> m19_346  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_520 -> m19_521  [key=0, style=solid];
m19_520 -> m19_522  [key=0, style=solid];
m19_521 -> m19_522  [key=0, style=solid];
m19_521 -> m19_4  [key=2, style=dotted];
m19_521 -> m19_523  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m19_523 -> m19_524  [key=0, style=solid];
m19_523 -> m19_526  [key=0, style=solid];
m19_523 -> m19_528  [key=0, style=solid];
m19_523 -> m19_530  [key=0, style=solid];
m19_523 -> m19_532  [key=0, style=solid];
m19_523 -> m19_534  [key=0, style=solid];
m19_523 -> m19_536  [key=0, style=solid];
m19_537 -> m19_538  [key=0, style=solid];
m19_537 -> m19_516  [key=2, style=dotted];
m19_537 -> m19_20  [key=2, style=dotted];
m19_522 -> m19_523  [key=0, style=solid];
m19_524 -> m19_525  [key=0, style=solid];
m19_526 -> m19_527  [key=0, style=solid];
m19_528 -> m19_529  [key=0, style=solid];
m19_530 -> m19_531  [key=0, style=solid];
m19_532 -> m19_533  [key=0, style=solid];
m19_534 -> m19_535  [key=0, style=solid];
m19_536 -> m19_538  [key=0, style=solid];
m19_536 -> m19_539  [key=2, style=dotted];
m19_525 -> m19_537  [key=0, style=solid];
m19_527 -> m19_537  [key=0, style=solid];
m19_529 -> m19_537  [key=0, style=solid];
m19_531 -> m19_537  [key=0, style=solid];
m19_533 -> m19_537  [key=0, style=solid];
m19_535 -> m19_537  [key=0, style=solid];
m19_538 -> m19_11  [color=blue, key=0, style=bold];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_103  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_101 -> m19_104  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_11  [key=2, style=dotted];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_107  [key=2, style=dotted];
m19_103 -> m19_105  [color=darkseagreen4, key=1, label=momentum, style=dashed];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_13  [key=2, style=dotted];
m19_105 -> m19_106  [key=0, style=solid];
m19_106 -> m19_101  [color=blue, key=0, style=bold];
m19_136 -> m19_137  [key=0, style=solid];
m19_136 -> m19_138  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_136 -> m19_139  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_137 -> m19_138  [key=0, style=solid];
m19_137 -> m19_11  [key=2, style=dotted];
m19_138 -> m19_139  [key=0, style=solid];
m19_138 -> m19_142  [key=2, style=dotted];
m19_138 -> m19_140  [color=darkseagreen4, key=1, label=std, style=dashed];
m19_139 -> m19_140  [key=0, style=solid];
m19_139 -> m19_13  [key=2, style=dotted];
m19_140 -> m19_141  [key=0, style=solid];
m19_141 -> m19_136  [color=blue, key=0, style=bold];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_34  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_32 -> m19_35  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_11  [key=2, style=dotted];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_38  [key=2, style=dotted];
m19_34 -> m19_36  [color=darkseagreen4, key=1, label=atr, style=dashed];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_39  [key=2, style=dotted];
m19_36 -> m19_37  [key=0, style=solid];
m19_37 -> m19_32  [color=blue, key=0, style=bold];
m19_366 -> m19_367  [key=0, style=solid];
m19_366 -> m19_368  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_366 -> m19_369  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_367 -> m19_368  [key=0, style=solid];
m19_367 -> m19_11  [key=2, style=dotted];
m19_368 -> m19_369  [key=0, style=solid];
m19_368 -> m19_372  [key=2, style=dotted];
m19_368 -> m19_370  [color=darkseagreen4, key=1, label=midpoint, style=dashed];
m19_369 -> m19_370  [key=0, style=solid];
m19_369 -> m19_13  [key=2, style=dotted];
m19_370 -> m19_371  [key=0, style=solid];
m19_371 -> m19_366  [color=blue, key=0, style=bold];
m19_108 -> m19_109  [key=0, style=solid];
m19_108 -> m19_110  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_108 -> m19_111  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_109 -> m19_110  [key=0, style=solid];
m19_109 -> m19_11  [key=2, style=dotted];
m19_110 -> m19_111  [key=0, style=solid];
m19_110 -> m19_114  [key=2, style=dotted];
m19_110 -> m19_112  [color=darkseagreen4, key=1, label=momentum, style=dashed];
m19_111 -> m19_112  [key=0, style=solid];
m19_111 -> m19_13  [key=2, style=dotted];
m19_112 -> m19_113  [key=0, style=solid];
m19_113 -> m19_108  [color=blue, key=0, style=bold];
m19_233 -> m19_234  [key=0, style=solid];
m19_233 -> m19_235  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m19_233 -> m19_236  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_234 -> m19_235  [key=0, style=solid];
m19_234 -> m19_20  [key=2, style=dotted];
m19_234 -> m19_11  [key=2, style=dotted];
m19_235 -> m19_236  [key=0, style=solid];
m19_235 -> m19_239  [key=2, style=dotted];
m19_235 -> m19_237  [color=darkseagreen4, key=1, label=psar, style=dashed];
m19_236 -> m19_237  [key=0, style=solid];
m19_236 -> m19_39  [key=2, style=dotted];
m19_237 -> m19_238  [key=0, style=solid];
m19_238 -> m19_233  [color=blue, key=0, style=bold];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_63  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_61 -> m19_64  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, decimal>", style=dashed];
m19_61 -> m19_65  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_61 -> m19_68  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_61 -> m19_67  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_11  [key=2, style=dotted];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_71  [key=2, style=dotted];
m19_63 -> m19_68  [color=darkseagreen4, key=1, label=max, style=dashed];
m19_63 -> m19_69  [color=darkseagreen4, key=1, label=max, style=dashed];
m19_64 -> m19_65  [key=0, style=solid];
m19_64 -> m19_68  [key=0, style=solid];
m19_65 -> m19_66  [key=0, style=solid];
m19_65 -> m19_4  [key=2, style=dotted];
m19_68 -> m19_69  [key=0, style=solid];
m19_68 -> m19_73  [key=2, style=dotted];
m19_68 -> m19_22  [key=2, style=dotted];
m19_69 -> m19_70  [key=0, style=solid];
m19_66 -> m19_67  [key=0, style=solid];
m19_66 -> m19_68  [key=0, style=solid];
m19_66 -> m19_72  [key=2, style=dotted];
m19_67 -> m19_68  [key=0, style=solid];
m19_67 -> m19_75  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m19_70 -> m19_61  [color=blue, key=0, style=bold];
m19_13 -> m19_429  [key=0, style=solid];
m19_13 -> m19_5  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_40  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_47  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_54  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_101  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_108  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_115  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_136  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_143  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_150  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_157  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_171  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_226  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_247  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_275  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_282  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_289  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_296  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_303  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_310  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_317  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_324  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_331  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_359  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_366  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_380  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_394  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_401  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_422  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, decimal> selector", style=bold];
m19_13 -> m19_7  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_42  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_49  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_56  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_103  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_110  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_117  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_138  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_145  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_152  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_159  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_173  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_228  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_249  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_277  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_284  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_291  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_298  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_305  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_312  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_319  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_326  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_333  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_361  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_368  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_382  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_396  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_403  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_13 -> m19_424  [color=red, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m19_429 -> m19_430  [key=0, style=solid];
m19_429 -> m19_73  [key=2, style=dotted];
m19_429 -> m19_22  [key=2, style=dotted];
m19_429 -> m19_432  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m19_430 -> m19_13  [color=blue, key=0, style=bold];
m19_324 -> m19_325  [key=0, style=solid];
m19_324 -> m19_326  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_324 -> m19_327  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_325 -> m19_326  [key=0, style=solid];
m19_325 -> m19_11  [key=2, style=dotted];
m19_326 -> m19_327  [key=0, style=solid];
m19_326 -> m19_330  [key=2, style=dotted];
m19_326 -> m19_328  [color=darkseagreen4, key=1, label=sum, style=dashed];
m19_327 -> m19_328  [key=0, style=solid];
m19_327 -> m19_13  [key=2, style=dotted];
m19_328 -> m19_329  [key=0, style=solid];
m19_329 -> m19_324  [color=blue, key=0, style=bold];
m19_219 -> m19_220  [key=0, style=solid];
m19_219 -> m19_221  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_219 -> m19_222  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_220 -> m19_221  [key=0, style=solid];
m19_220 -> m19_11  [key=2, style=dotted];
m19_221 -> m19_222  [key=0, style=solid];
m19_221 -> m19_225  [key=2, style=dotted];
m19_221 -> m19_223  [color=darkseagreen4, key=1, label=logr, style=dashed];
m19_222 -> m19_223  [key=0, style=solid];
m19_222 -> m19_31  [key=2, style=dotted];
m19_223 -> m19_224  [key=0, style=solid];
m19_224 -> m19_219  [color=blue, key=0, style=bold];
m19_303 -> m19_304  [key=0, style=solid];
m19_303 -> m19_305  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_303 -> m19_306  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_304 -> m19_305  [key=0, style=solid];
m19_304 -> m19_11  [key=2, style=dotted];
m19_305 -> m19_306  [key=0, style=solid];
m19_305 -> m19_309  [key=2, style=dotted];
m19_305 -> m19_307  [color=darkseagreen4, key=1, label=rocr, style=dashed];
m19_306 -> m19_307  [key=0, style=solid];
m19_306 -> m19_13  [key=2, style=dotted];
m19_307 -> m19_308  [key=0, style=solid];
m19_308 -> m19_303  [color=blue, key=0, style=bold];
m19_261 -> m19_262  [key=0, style=solid];
m19_261 -> m19_263  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_261 -> m19_264  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_262 -> m19_263  [key=0, style=solid];
m19_262 -> m19_29  [key=2, style=dotted];
m19_262 -> m19_11  [key=2, style=dotted];
m19_263 -> m19_264  [key=0, style=solid];
m19_263 -> m19_267  [key=2, style=dotted];
m19_263 -> m19_265  [color=darkseagreen4, key=1, label=adOsc, style=dashed];
m19_264 -> m19_265  [key=0, style=solid];
m19_264 -> m19_39  [key=2, style=dotted];
m19_265 -> m19_266  [key=0, style=solid];
m19_266 -> m19_261  [color=blue, key=0, style=bold];
m19_129 -> m19_130  [key=0, style=solid];
m19_129 -> m19_131  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_129 -> m19_132  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_130 -> m19_131  [key=0, style=solid];
m19_130 -> m19_11  [key=2, style=dotted];
m19_131 -> m19_132  [key=0, style=solid];
m19_131 -> m19_135  [key=2, style=dotted];
m19_131 -> m19_133  [color=darkseagreen4, key=1, label=mfi, style=dashed];
m19_132 -> m19_133  [key=0, style=solid];
m19_132 -> m19_39  [key=2, style=dotted];
m19_133 -> m19_134  [key=0, style=solid];
m19_134 -> m19_129  [color=blue, key=0, style=bold];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_23 -> m19_26  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_29  [key=2, style=dotted];
m19_24 -> m19_11  [key=2, style=dotted];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_30  [key=2, style=dotted];
m19_25 -> m19_27  [color=darkseagreen4, key=1, label=ichimoku, style=dashed];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_31  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_28 -> m19_23  [color=blue, key=0, style=bold];
m19_345 -> m19_346  [key=0, style=solid];
m19_345 -> m19_348  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_345 -> m19_347  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Indicators.HeikinAshi HeikinAshi", style=bold];
m19_346 -> m19_347  [key=0, style=solid];
m19_346 -> m19_11  [key=2, style=dotted];
m19_348 -> m19_349  [key=0, style=solid];
m19_348 -> m19_39  [key=2, style=dotted];
m19_347 -> m19_348  [key=0, style=solid];
m19_347 -> m19_351  [key=2, style=dotted];
m19_347 -> m19_349  [color=darkseagreen4, key=1, label=ha, style=dashed];
m19_349 -> m19_350  [key=0, style=solid];
m19_350 -> m19_345  [color=blue, key=0, style=bold];
m19_380 -> m19_381  [key=0, style=solid];
m19_380 -> m19_382  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_380 -> m19_383  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_381 -> m19_382  [key=0, style=solid];
m19_381 -> m19_11  [key=2, style=dotted];
m19_382 -> m19_383  [key=0, style=solid];
m19_382 -> m19_386  [key=2, style=dotted];
m19_382 -> m19_384  [color=darkseagreen4, key=1, label=trix, style=dashed];
m19_383 -> m19_384  [key=0, style=solid];
m19_383 -> m19_13  [key=2, style=dotted];
m19_384 -> m19_385  [key=0, style=solid];
m19_385 -> m19_380  [color=blue, key=0, style=bold];
m19_457 -> m19_463  [key=0, style=solid];
m19_457 -> m19_464  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_457 -> m19_466  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m19_457 -> m19_467  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_457 -> m19_468  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m19_457 -> m19_476  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m19_457 -> m19_31  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_457 -> m19_39  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_457 -> m19_460  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_457 -> m19_73  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Consolidators.IDataConsolidator consolidator", style=bold];
m19_457 -> m19_21  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Consolidators.IDataConsolidator consolidator", style=bold];
m19_463 -> m19_464  [key=0, style=solid];
m19_463 -> m19_463  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, T>", style=dashed];
m19_463 -> m19_472  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m19_463 -> m19_468  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, T>", style=dashed];
m19_463 -> m19_475  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, T>", style=dashed];
m19_464 -> m19_465  [key=0, style=solid];
m19_464 -> m19_444  [key=2, style=dotted];
m19_466 -> m19_467  [key=0, style=solid];
m19_466 -> m19_468  [key=0, style=solid];
m19_466 -> m19_72  [key=2, style=dotted];
m19_467 -> m19_469  [key=0, style=solid];
m19_467 -> m19_470  [key=2, style=dotted];
m19_467 -> m19_20  [key=2, style=dotted];
m19_468 -> m19_469  [key=0, style=solid];
m19_468 -> m19_475  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m19_465 -> m19_466  [key=0, style=solid];
m19_465 -> m19_467  [color=darkseagreen4, key=1, label=type, style=dashed];
m19_469 -> m19_457  [color=blue, key=0, style=bold];
m19_39 -> m19_458  [key=0, style=solid];
m19_39 -> m19_32  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_94  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_122  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_129  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_164  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_178  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_185  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_192  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_199  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_233  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_240  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_254  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_261  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_268  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_338  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_345  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_352  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_373  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_387  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_408  [color=darkorchid, key=3, label="Parameter variable System.Func<QuantConnect.Data.BaseData, T> selector", style=bold];
m19_39 -> m19_34  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_96  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_124  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_131  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_166  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_180  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_187  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_194  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_201  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_235  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_242  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_256  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_263  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_270  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_340  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_347  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_354  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_375  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_389  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_39 -> m19_410  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<T> indicator", style=bold];
m19_458 -> m19_459  [key=0, style=solid];
m19_458 -> m19_73  [key=2, style=dotted];
m19_458 -> m19_457  [key=2, style=dotted];
m19_459 -> m19_39  [color=blue, key=0, style=bold];
m19_73 -> m19_478  [key=0, style=solid];
m19_73 -> m19_479  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m19_73 -> m19_482  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m19_73 -> m19_484  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_73 -> m19_485  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_73 -> m19_61  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_73 -> m19_77  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_73 -> m19_13  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_73 -> m19_31  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_73 -> m19_39  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m19_73 -> m19_21  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.Consolidators.IDataConsolidator ResolveConsolidator", style=bold];
m19_478 -> m19_479  [key=0, style=solid];
m19_478 -> m19_4  [key=2, style=dotted];
m19_478 -> m19_480  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m19_478 -> m19_483  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m19_478 -> m19_484  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m19_479 -> m19_480  [key=0, style=solid];
m19_479 -> m19_482  [key=0, style=solid];
m19_482 -> m19_483  [key=0, style=solid];
m19_482 -> m19_489  [key=2, style=dotted];
m19_482 -> m19_485  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m19_484 -> m19_486  [key=0, style=solid];
m19_484 -> m19_470  [key=2, style=dotted];
m19_484 -> m19_20  [key=2, style=dotted];
m19_485 -> m19_486  [key=0, style=solid];
m19_485 -> m19_21  [key=2, style=dotted];
m19_480 -> m19_481  [key=0, style=solid];
m19_480 -> m19_487  [key=2, style=dotted];
m19_483 -> m19_484  [key=0, style=solid];
m19_483 -> m19_485  [key=0, style=solid];
m19_483 -> m19_489  [key=2, style=dotted];
m19_481 -> m19_486  [key=0, style=solid];
m19_481 -> m19_488  [key=2, style=dotted];
m19_486 -> m19_73  [color=blue, key=0, style=bold];
m19_540 -> m19_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_68  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_78  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_116  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_118  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_123  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_137  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_139  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_146  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_151  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_158  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_165  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_172  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_174  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_179  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_186  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_193  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_195  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_200  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_202  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_207  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_210  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_212  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_217  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_222  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_227  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_234  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_236  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_241  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_243  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_248  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_250  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_255  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_264  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_269  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_271  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_276  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_278  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_283  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_285  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_292  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_297  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_299  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_304  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_306  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_311  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_313  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_318  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_320  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_325  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_327  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_332  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_339  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_341  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_346  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_353  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_355  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_360  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_362  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_367  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_369  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_374  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_376  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_381  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_383  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_388  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_390  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_395  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_397  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_402  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_404  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_409  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_411  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_416  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_418  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_423  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_425  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_429  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_435  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_441  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_455  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_458  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_461  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_464  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_478  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_485  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_490  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_509  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_540 -> m19_521  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_541 -> m19_449  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, decimal>", style=dashed];
m19_542 -> m19_450  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m19_543 -> m19_475  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, T>", style=dashed];
m19_544 -> m19_476  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m19_545 -> m19_518  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_2  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m20_1 -> m20_2  [key=0, style=solid];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_0  [color=blue, key=0, style=bold];
m20_4 -> m20_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs", style=dashed];
m20_4 -> m20_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs", style=dashed];
m23_1 -> m23_2  [color=green, key=0, style=solid];
m23_1 -> m23_3  [color=green, key=2, style=dotted];
m23_2 -> n11  [color=blue, key=0, style=bold];
m23_2 -> m23_0  [color=blue, key=0, style=bold];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_12  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_17  [key=2, style=dotted];
m23_12 -> m23_13  [key=0, style=solid];
m23_12 -> m23_16  [key=2, style=dotted];
m23_11 -> m23_12  [key=0, style=solid];
m23_11 -> m23_15  [key=2, style=dotted];
m23_11 -> m23_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_11 -> m23_9  [color=blue, key=0, style=bold];
m23_14 -> m23_10  [color=blue, key=0, style=bold];
m23_14 -> m23_15  [key=0, style=solid];
m23_14 -> m23_12  [key=2, style=dotted];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_5  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m23_3 -> m23_6  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m23_3 -> m23_7  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_8  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m23_4 -> m23_6  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m23_5 -> m23_6  [key=0, style=solid];
m23_5 -> m23_8  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_8  [key=0, style=solid];
m23_7 -> m23_8  [key=0, style=solid];
m23_8 -> m23_3  [color=blue, key=0, style=bold];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_10  [key=2, style=dotted];
m23_16 -> m23_17  [key=0, style=solid];
m23_17 -> m23_18  [key=0, style=solid];
m23_17 -> m23_19  [key=2, style=dotted];
m23_18 -> m23_16  [color=blue, key=0, style=bold];
m23_18 -> m23_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m23_18 -> m23_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m23_18 -> m23_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m23_18 -> m23_19  [key=0, style=solid];
m23_15 -> m23_13  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_20 -> m23_21  [key=0, style=solid];
m23_20 -> m23_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_20 -> m23_23  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_20 -> m23_24  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_20 -> m23_25  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_20 -> m23_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_3  [key=2, style=dotted];
m23_21 -> m23_28  [key=0, style=solid];
m23_22 -> m23_20  [color=blue, key=0, style=bold];
m23_22 -> m23_23  [key=0, style=solid];
m23_22 -> m23_27  [key=0, style=solid];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_4  [color=blue, key=0, style=bold];
m23_33 -> m23_34  [key=0, style=solid];
m23_34 -> m23_34  [color=darkseagreen4, key=1, label=config, style=dashed];
m23_34 -> m23_35  [key=0, style=solid];
m23_34 -> m23_15  [key=2, style=dotted];
m23_34 -> m23_36  [key=2, style=dotted];
m23_35 -> m23_33  [color=blue, key=0, style=bold];
m23_19 -> m23_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_19 -> m23_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_19 -> m23_20  [key=0, style=solid];
m23_19 -> m23_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_19 -> m23_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_19 -> m23_15  [key=2, style=dotted];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_25  [key=0, style=solid];
m23_23 -> m23_30  [key=2, style=dotted];
m23_23 -> m23_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m23_23 -> m23_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m23_23 -> m23_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m23_23 -> m23_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m23_23 -> m23_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m23_23 -> m23_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m23_23 -> m23_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m23_24 -> m23_29  [key=0, style=solid];
m23_24 -> m23_31  [key=2, style=dotted];
m23_24 -> m23_32  [key=2, style=dotted];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_17  [key=2, style=dotted];
m23_27 -> m23_21  [key=0, style=solid];
m23_27 -> m23_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_28 -> m23_29  [key=0, style=solid];
m23_28 -> m23_31  [key=2, style=dotted];
m23_26 -> m23_29  [key=0, style=solid];
m23_29 -> m23_18  [color=blue, key=0, style=bold];
m23_37 -> m23_1  [color=green, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m23_37 -> m23_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m23_37 -> m23_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m23_37 -> m23_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m23_37 -> m23_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m23_37 -> m23_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m23_37 -> m23_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m23_37 -> m23_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m23_37 -> m23_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m24_27 -> m24_28  [key=0, style=solid];
m24_27 -> m24_29  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m24_27 -> m24_30  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m24_27 -> m24_31  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m24_27 -> m24_32  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m24_27 -> m24_34  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m24_27 -> m24_36  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m24_27 -> m24_37  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m24_27 -> m24_38  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m24_27 -> m24_39  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m24_27 -> m24_42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m24_27 -> m24_46  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m24_28 -> m24_29  [key=0, style=solid];
m24_28 -> m24_49  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m24_29 -> m24_30  [key=0, style=solid];
m24_29 -> m24_40  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m24_29 -> m24_41  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m24_30 -> m24_31  [key=0, style=solid];
m24_30 -> m24_51  [key=2, style=dotted];
m24_30 -> m24_50  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerage", style=dashed];
m24_31 -> m24_32  [key=0, style=solid];
m24_31 -> m24_52  [key=2, style=dotted];
m24_32 -> m24_33  [key=0, style=solid];
m24_32 -> m24_35  [key=0, style=solid];
m24_32 -> m24_37  [key=0, style=solid];
m24_34 -> m24_38  [key=0, style=solid];
m24_34 -> m24_53  [key=2, style=dotted];
m24_36 -> m24_38  [key=0, style=solid];
m24_36 -> m24_53  [key=2, style=dotted];
m24_37 -> m24_38  [key=0, style=solid];
m24_37 -> m24_53  [key=2, style=dotted];
m24_38 -> m24_39  [key=0, style=solid];
m24_38 -> m24_54  [key=2, style=dotted];
m24_39 -> m24_40  [key=0, style=solid];
m24_39 -> m24_55  [key=2, style=dotted];
m24_42 -> m24_43  [key=0, style=solid];
m24_42 -> m24_46  [key=0, style=solid];
m24_42 -> m24_58  [key=2, style=dotted];
m24_46 -> m24_47  [key=0, style=solid];
m24_49 -> m24_50  [key=0, style=solid];
m24_40 -> m24_41  [key=0, style=solid];
m24_40 -> m24_43  [key=0, style=solid];
m24_40 -> m24_46  [key=0, style=solid];
m24_40 -> m24_56  [key=2, style=dotted];
m24_41 -> m24_42  [key=0, style=solid];
m24_41 -> m24_57  [key=2, style=dotted];
m24_33 -> m24_34  [key=0, style=solid];
m24_35 -> m24_36  [key=0, style=solid];
m24_43 -> m24_44  [key=0, style=solid];
m24_44 -> m24_45  [key=0, style=solid];
m24_44 -> m24_59  [key=2, style=dotted];
m24_45 -> m24_46  [key=0, style=solid];
m24_45 -> m24_60  [key=2, style=dotted];
m24_47 -> m24_48  [key=0, style=solid];
m24_47 -> m24_49  [key=0, style=solid];
m24_48 -> m24_49  [key=0, style=solid];
m24_50 -> m24_27  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_7  [key=2, style=dotted];
m24_3 -> m24_4  [key=0, style=solid];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_8  [key=2, style=dotted];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_9  [key=2, style=dotted];
m24_6 -> m24_0  [color=blue, key=0, style=bold];
m24_23 -> m24_24  [key=0, style=solid];
m24_24 -> m24_25  [key=0, style=solid];
m24_24 -> m24_26  [key=2, style=dotted];
m24_25 -> m24_23  [color=blue, key=0, style=bold];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_11 -> m24_12  [key=0, style=solid];
m24_14 -> m24_15  [key=0, style=solid];
m24_14 -> m24_21  [key=2, style=dotted];
m24_14 -> m24_16  [color=darkseagreen4, key=1, label=error, style=dashed];
m24_14 -> m24_17  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m24_12 -> m24_13  [key=0, style=solid];
m24_13 -> m24_14  [key=0, style=solid];
m24_13 -> m24_19  [key=2, style=dotted];
m24_13 -> m24_20  [key=2, style=dotted];
m24_13 -> m24_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_17  [key=0, style=solid];
m24_16 -> m24_18  [key=0, style=solid];
m24_16 -> n57  [key=2, style=dotted];
m24_17 -> m24_18  [key=0, style=solid];
m24_18 -> m24_10  [color=blue, key=0, style=bold];
m24_61 -> m24_62  [key=0, style=solid];
m24_62 -> m24_63  [key=0, style=solid];
m24_63 -> m24_61  [color=blue, key=0, style=bold];
m24_64 -> m24_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler", style=dashed];
m24_64 -> m24_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler", style=dashed];
m24_64 -> m24_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler", style=dashed];
m24_64 -> m24_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler", style=dashed];
m24_64 -> m24_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler", style=dashed];
m24_64 -> m24_45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler", style=dashed];
m24_64 -> m24_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler", style=dashed];
m24_64 -> m24_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler", style=dashed];
m26_26 -> m26_27  [color=green, key=0, style=solid];
m26_27 -> m26_28  [color=green, key=0, style=solid];
m26_27 -> m26_29  [color=green, key=2, style=dotted];
m26_28 -> m26_26  [color=blue, key=0, style=bold];
m26_17 -> m26_18  [key=0, style=solid];
m26_18 -> m26_19  [color=green, key=0, style=solid];
m26_18 -> m26_21  [key=2, style=dotted];
m26_19 -> m26_20  [color=green, key=0, style=solid];
m26_19 -> m26_22  [color=green, key=2, style=dotted];
m26_20 -> m26_17  [color=blue, key=0, style=bold];
m26_29 -> m26_30  [color=green, key=0, style=solid];
m26_29 -> m26_31  [color=green, key=1, label=double, style=dashed];
m26_29 -> m26_23  [color=green, key=3, label="Parameter variable double expected", style=bold];
m26_30 -> m26_31  [color=green, key=0, style=solid];
m26_30 -> m26_33  [color=green, key=2, style=dotted];
m26_30 -> m26_34  [color=green, key=2, style=dotted];
m26_31 -> m26_32  [color=green, key=0, style=solid];
m26_31 -> m26_33  [color=green, key=2, style=dotted];
m26_31 -> m26_13  [color=green, key=2, style=dotted];
m26_32 -> m26_29  [color=blue, key=0, style=bold];
m26_22 -> m26_23  [color=green, key=0, style=solid];
m26_22 -> m26_18  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint> indicator", style=bold];
m26_22 -> m26_19  [color=green, key=3, label="Parameter variable string field", style=bold];
m26_23 -> m26_24  [color=green, key=0, style=solid];
m26_23 -> m26_25  [color=green, key=2, style=dotted];
m26_23 -> m26_26  [color=green, key=1, label="lambda expression", style=dashed];
m26_24 -> m26_22  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_10  [key=2, style=dotted];
m26_1 -> m26_3  [color=darkseagreen4, key=1, label=sak, style=dashed];
m26_1 -> m26_4  [color=darkseagreen4, key=1, label=sak, style=dashed];
m26_1 -> m26_5  [color=darkseagreen4, key=1, label=sak, style=dashed];
m26_1 -> m26_6  [color=darkseagreen4, key=1, label=sak, style=dashed];
m26_1 -> m26_7  [color=darkseagreen4, key=1, label=sak, style=dashed];
m26_1 -> m26_8  [color=darkseagreen4, key=1, label=sak, style=dashed];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_4  [key=0, style=solid];
m26_2 -> m26_11  [key=2, style=dotted];
m26_3 -> m26_2  [key=0, style=solid];
m26_3 -> m26_12  [key=2, style=dotted];
m26_4 -> m26_5  [key=0, style=solid];
m26_4 -> m26_13  [key=2, style=dotted];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_14  [key=2, style=dotted];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_14  [key=2, style=dotted];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_15  [key=2, style=dotted];
m26_8 -> m26_9  [key=0, style=solid];
m26_8 -> m26_16  [key=2, style=dotted];
m26_9 -> m26_0  [color=blue, key=0, style=bold];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_7 -> m27_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_7 -> m27_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_7 -> m27_2  [color=darkorchid, key=3, label="Parameter variable string quoteCurrency", style=bold];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_10  [key=0, style=solid];
m27_9 -> m27_12  [key=0, style=solid];
m27_9 -> m27_13  [key=2, style=dotted];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_14  [key=2, style=dotted];
m27_10 -> m27_12  [color=darkseagreen4, key=1, label="out string", style=dashed];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_15  [key=2, style=dotted];
m27_12 -> m27_7  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_3  [color=red, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_6  [key=2, style=dotted];
m27_3 -> m27_4  [color=red, key=0, style=solid];
m27_3 -> m27_7  [color=red, key=2, style=dotted];
m27_2 -> m27_3  [color=red, key=0, style=solid];
m27_4 -> m27_5  [key=0, style=solid];
m27_5 -> m27_0  [color=blue, key=0, style=bold];
m27_16 -> m27_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m27_16 -> m27_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Forex.Forex", style=dashed];
m28_45 -> m28_46  [color=green, key=0, style=solid];
m28_45 -> m28_85  [color=green, key=2, style=dotted];
m28_45 -> m28_62  [color=green, key=1, label=securityUpdate, style=dashed];
m28_45 -> m28_72  [color=green, key=1, label=securityUpdate, style=dashed];
m28_45 -> m28_76  [color=green, key=1, label=securityUpdate, style=dashed];
m28_45 -> m28_78  [color=green, key=1, label=securityUpdate, style=dashed];
m28_104 -> m28_105  [key=0, style=solid];
m28_166 -> m28_167  [key=0, style=solid];
m28_166 -> m28_168  [key=2, style=dotted];
m28_165 -> m28_166  [key=0, style=solid];
m28_167 -> m28_165  [color=blue, key=0, style=bold];
m28_105 -> m28_106  [key=0, style=solid];
m28_106 -> m28_104  [color=blue, key=0, style=bold];
m28_25 -> m28_26  [key=0, style=solid];
m28_25 -> m28_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m28_25 -> m28_28  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m28_25 -> m28_25  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.Slice slice", style=bold];
m28_25 -> m28_105  [color=darkseagreen4, key=1, label=slice, style=dashed];
m28_26 -> m28_27  [key=0, style=solid];
m28_26 -> m28_30  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m28_26 -> m28_60  [color=darkseagreen4, key=1, label=sliceFuture, style=dashed];
m28_26 -> m28_88  [key=2, style=dotted];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_29  [key=0, style=solid];
m28_27 -> m28_60  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m28_27 -> m28_89  [key=2, style=dotted];
m28_27 -> m28_30  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m28_27 -> m28_31  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m28_27 -> m28_32  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m28_27 -> m28_33  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m28_27 -> m28_34  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m28_27 -> m28_35  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m28_27 -> m28_81  [color=darkseagreen4, key=1, label=algorithmTime, style=dashed];
m28_28 -> m28_30  [key=0, style=solid];
m28_28 -> m28_23  [key=2, style=dotted];
m28_28 -> m28_56  [color=darkseagreen4, key=1, label=tradeBars, style=dashed];
m28_28 -> m28_29  [key=0, style=solid];
m28_28 -> m28_90  [key=2, style=dotted];
m28_28 -> m28_81  [color=darkseagreen4, key=1, label=tradeBars, style=dashed];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_56  [color=darkseagreen4, key=1, label=quoteBars, style=dashed];
m28_29 -> m28_91  [key=2, style=dotted];
m28_29 -> m28_81  [color=darkseagreen4, key=1, label=quoteBars, style=dashed];
m28_30 -> m28_25  [color=blue, key=0, style=bold];
m28_30 -> m28_56  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m28_30 -> m28_31  [key=0, style=solid];
m28_30 -> m28_92  [key=2, style=dotted];
m28_30 -> m28_81  [color=darkseagreen4, key=1, label=ticks, style=dashed];
m28_44 -> m28_45  [color=green, key=0, style=solid];
m28_44 -> m28_44  [color=darkseagreen4, key=1, label=count, style=dashed];
m28_44 -> m28_82  [color=darkseagreen4, key=1, label=count, style=dashed];
m28_11 -> m28_12  [key=0, style=solid];
m28_11 -> m28_82  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m28_11 -> m28_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>", style=dashed];
m28_11 -> m28_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>", style=dashed];
m28_11 -> m28_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m28_11 -> m28_74  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m28_11 -> m28_27  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m28_11 -> m28_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m28_43 -> m28_45  [color=green, key=0, style=solid];
m28_43 -> m28_43  [color=darkseagreen4, key=1, label=count, style=dashed];
m28_43 -> m28_82  [color=darkseagreen4, key=1, label=count, style=dashed];
m28_43 -> m28_23  [color=blue, key=0, style=bold];
m28_37 -> m28_45  [color=green, key=1, label=list, style=dashed];
m28_37 -> m28_46  [color=green, key=1, label=list, style=dashed];
m28_37 -> m28_48  [color=green, key=1, label=list, style=dashed];
m28_37 -> m28_49  [color=green, key=1, label=list, style=dashed];
m28_37 -> m28_44  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_37 -> m28_38  [key=0, style=solid];
m28_37 -> m28_39  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_37 -> m28_40  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_37 -> m28_41  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_37 -> m28_53  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_46 -> m28_47  [color=green, key=0, style=solid];
m28_46 -> m28_85  [color=green, key=2, style=dotted];
m28_46 -> m28_61  [color=green, key=1, label=consolidatorUpdate, style=dashed];
m28_46 -> m28_79  [color=green, key=1, label=consolidatorUpdate, style=dashed];
m28_46 -> m28_80  [color=green, key=1, label=consolidatorUpdate, style=dashed];
m28_62 -> m28_71  [color=green, key=0, style=solid];
m28_62 -> n160  [key=2, style=dotted];
m28_72 -> m28_73  [key=0, style=solid];
m28_72 -> m28_79  [key=0, style=solid];
m28_76 -> m28_77  [key=0, style=solid];
m28_76 -> m28_84  [key=2, style=dotted];
m28_78 -> m28_79  [key=0, style=solid];
m28_78 -> m28_99  [key=2, style=dotted];
m28_78 -> n160  [key=2, style=dotted];
m28_47 -> m28_48  [color=green, key=0, style=solid];
m28_47 -> m28_49  [color=green, key=1, label=i, style=dashed];
m28_47 -> m28_71  [color=green, key=1, label=i, style=dashed];
m28_61 -> m28_62  [key=0, style=solid];
m28_61 -> n160  [key=2, style=dotted];
m28_79 -> m28_80  [key=0, style=solid];
m28_79 -> m28_36  [key=0, style=solid];
m28_80 -> m28_36  [key=0, style=solid];
m28_80 -> m28_99  [key=2, style=dotted];
m28_80 -> n160  [key=2, style=dotted];
m28_48 -> m28_49  [color=green, key=0, style=solid];
m28_48 -> m28_72  [color=green, key=0, style=solid];
m28_48 -> m28_12  [color=green, key=3, label="Local variable int i", style=bold];
m28_48 -> m28_18  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel", style=dashed];
m28_48 -> m28_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel", style=dashed];
m28_60 -> m28_48  [color=green, key=0, style=solid];
m28_60 -> m28_61  [key=0, style=solid];
m28_60 -> m28_101  [key=2, style=dotted];
m28_71 -> m28_48  [color=green, key=0, style=solid];
m28_71 -> m28_71  [color=green, key=1, label=i, style=dashed];
m28_49 -> m28_50  [color=green, key=0, style=solid];
m28_49 -> m28_51  [color=green, key=1, label=baseData, style=dashed];
m28_49 -> m28_54  [color=green, key=1, label=baseData, style=dashed];
m28_49 -> m28_56  [color=green, key=1, label=baseData, style=dashed];
m28_49 -> m28_58  [color=green, key=1, label=baseData, style=dashed];
m28_49 -> m28_59  [color=green, key=1, label=baseData, style=dashed];
m28_49 -> m28_60  [color=green, key=1, label=baseData, style=dashed];
m28_49 -> m28_61  [color=green, key=1, label=baseData, style=dashed];
m28_49 -> m28_62  [color=green, key=1, label=baseData, style=dashed];
m28_49 -> m28_63  [color=green, key=1, label=baseData, style=dashed];
m28_49 -> m28_65  [color=green, key=1, label=baseData, style=dashed];
m28_49 -> m28_67  [color=green, key=1, label=baseData, style=dashed];
m28_49 -> m28_69  [color=green, key=1, label=baseData, style=dashed];
m28_12 -> m28_43  [color=darkseagreen4, key=1, label=count, style=dashed];
m28_12 -> m28_44  [color=darkseagreen4, key=1, label=count, style=dashed];
m28_12 -> m28_12  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m28_12 -> m28_13  [key=0, style=solid];
m28_12 -> m28_82  [color=darkseagreen4, key=1, label=count, style=dashed];
m28_12 -> m28_41  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m28_12 -> m28_22  [key=0, style=solid];
m28_50 -> m28_51  [key=0, style=solid];
m28_50 -> m28_54  [key=0, style=solid];
m28_51 -> m28_52  [key=0, style=solid];
m28_51 -> n160  [key=2, style=dotted];
m28_54 -> m28_55  [key=0, style=solid];
m28_54 -> m28_63  [key=0, style=solid];
m28_56 -> m28_100  [key=2, style=dotted];
m28_56 -> m28_57  [key=0, style=solid];
m28_58 -> m28_60  [key=0, style=solid];
m28_58 -> m28_59  [key=0, style=solid];
m28_59 -> m28_61  [key=0, style=solid];
m28_63 -> m28_64  [key=0, style=solid];
m28_63 -> m28_65  [key=0, style=solid];
m28_65 -> m28_66  [key=0, style=solid];
m28_65 -> m28_67  [key=0, style=solid];
m28_67 -> m28_68  [key=0, style=solid];
m28_67 -> m28_69  [key=0, style=solid];
m28_69 -> m28_71  [color=green, key=0, style=solid];
m28_69 -> m28_70  [key=0, style=solid];
m28_68 -> m28_71  [color=green, key=0, style=solid];
m28_66 -> m28_71  [color=green, key=0, style=solid];
m28_64 -> m28_71  [color=green, key=0, style=solid];
m28_70 -> m28_71  [color=green, key=0, style=solid];
m28_41 -> m28_43  [color=red, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m28_41 -> m28_42  [color=red, key=0, style=solid];
m28_41 -> m28_46  [color=red, key=2, style=dotted];
m28_41 -> m28_47  [color=red, key=2, style=dotted];
m28_42 -> m28_43  [key=0, style=solid];
m28_42 -> m28_36  [key=0, style=solid];
m28_82 -> m28_83  [key=0, style=solid];
m28_82 -> m28_0  [key=2, style=dotted];
m28_40 -> m28_44  [key=0, style=solid];
m28_40 -> m28_41  [color=red, key=0, style=solid];
m28_40 -> m28_42  [key=0, style=solid];
m28_36 -> m28_37  [key=0, style=solid];
m28_36 -> m28_78  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_80  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_60  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_50  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_70  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_81  [key=0, style=solid];
m28_36 -> m28_38  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m28_36 -> m28_52  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_53  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_55  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_57  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_73  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_75  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_77  [color=darkseagreen4, key=1, label=packet, style=dashed];
m28_36 -> m28_44  [key=2, style=dotted];
m28_36 -> m28_41  [color=red, key=1, label=baseCurrency, style=dashed];
m28_38 -> m28_68  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m28_38 -> m28_66  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m28_38 -> m28_64  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m28_38 -> m28_39  [key=0, style=solid];
m28_38 -> m28_45  [key=2, style=dotted];
m28_38 -> m28_41  [color=red, key=1, label=max, style=dashed];
m28_39 -> m28_40  [key=0, style=solid];
m28_39 -> m28_36  [key=0, style=solid];
m28_39 -> m28_42  [color=darkseagreen4, key=1, label=orderIsWithinForexSizeLimits, style=dashed];
m28_53 -> m28_54  [key=0, style=solid];
m28_53 -> m28_99  [key=2, style=dotted];
m28_53 -> n160  [key=2, style=dotted];
m28_16 -> m28_85  [key=2, style=dotted];
m28_16 -> m28_51  [color=darkseagreen4, key=1, label=allDataForAlgorithm, style=dashed];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_81  [color=darkseagreen4, key=1, label=allDataForAlgorithm, style=dashed];
m28_16 -> m28_22  [key=0, style=solid];
m28_17 -> m28_85  [key=2, style=dotted];
m28_17 -> m28_82  [color=darkseagreen4, key=1, label=cash, style=dashed];
m28_17 -> m28_18  [key=0, style=solid];
m28_17 -> m28_77  [color=darkseagreen4, key=1, label=cash, style=dashed];
m28_55 -> m28_62  [key=0, style=solid];
m28_55 -> m28_56  [key=0, style=solid];
m28_73 -> m28_78  [key=0, style=solid];
m28_73 -> m28_74  [key=0, style=solid];
m28_73 -> m28_102  [key=2, style=dotted];
m28_75 -> m28_76  [key=0, style=solid];
m28_75 -> m28_75  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m28_75 -> m28_74  [key=0, style=solid];
m28_75 -> m28_77  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m28_77 -> n160  [key=2, style=dotted];
m28_77 -> m28_77  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m28_77 -> m28_74  [key=0, style=solid];
m28_77 -> m28_99  [key=2, style=dotted];
m28_74 -> m28_78  [key=0, style=solid];
m28_74 -> m28_75  [key=0, style=solid];
m28_13 -> m28_78  [color=darkseagreen4, key=1, label=security, style=dashed];
m28_13 -> m28_82  [color=darkseagreen4, key=1, label=security, style=dashed];
m28_13 -> m28_84  [key=2, style=dotted];
m28_13 -> m28_14  [key=0, style=solid];
m28_57 -> m28_61  [key=0, style=solid];
m28_57 -> m28_58  [key=0, style=solid];
m28_15 -> m28_80  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m28_15 -> m28_82  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m28_15 -> m28_16  [key=0, style=solid];
m28_15 -> m28_84  [key=2, style=dotted];
m28_34 -> m28_60  [color=darkseagreen4, key=1, label=optionChains, style=dashed];
m28_34 -> m28_56  [color=darkseagreen4, key=1, label=optionChains, style=dashed];
m28_34 -> m28_59  [color=darkseagreen4, key=1, label=optionChains, style=dashed];
m28_34 -> m28_35  [key=0, style=solid];
m28_34 -> m28_96  [key=2, style=dotted];
m28_34 -> m28_81  [color=darkseagreen4, key=1, label=optionChains, style=dashed];
m28_34 -> m28_43  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m28_52 -> m28_54  [key=0, style=solid];
m28_52 -> m28_53  [key=0, style=solid];
m28_31 -> m28_68  [color=darkseagreen4, key=1, label=splits, style=dashed];
m28_31 -> m28_32  [key=0, style=solid];
m28_31 -> m28_93  [key=2, style=dotted];
m28_31 -> m28_81  [color=darkseagreen4, key=1, label=splits, style=dashed];
m28_32 -> m28_66  [color=darkseagreen4, key=1, label=dividends, style=dashed];
m28_32 -> m28_33  [key=0, style=solid];
m28_32 -> m28_94  [key=2, style=dotted];
m28_32 -> m28_81  [color=darkseagreen4, key=1, label=dividends, style=dashed];
m28_33 -> m28_64  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m28_33 -> m28_34  [key=0, style=solid];
m28_33 -> m28_95  [key=2, style=dotted];
m28_33 -> m28_81  [color=darkseagreen4, key=1, label=delistings, style=dashed];
m28_33 -> m28_31  [color=blue, key=0, style=bold];
m28_35 -> m28_70  [color=darkseagreen4, key=1, label=symbolChanges, style=dashed];
m28_35 -> m28_36  [key=0, style=solid];
m28_35 -> m28_97  [key=2, style=dotted];
m28_35 -> m28_81  [color=darkseagreen4, key=1, label=symbolChanges, style=dashed];
m28_14 -> m28_82  [color=darkseagreen4, key=1, label=custom, style=dashed];
m28_14 -> m28_53  [color=darkseagreen4, key=1, label=custom, style=dashed];
m28_14 -> m28_84  [key=2, style=dotted];
m28_14 -> m28_15  [key=0, style=solid];
m28_14 -> m28_22  [key=0, style=solid];
m28_81 -> m28_82  [key=0, style=solid];
m28_81 -> m28_103  [key=2, style=dotted];
m28_18 -> m28_73  [color=darkseagreen4, key=1, label=cashSecurities, style=dashed];
m28_18 -> m28_19  [key=0, style=solid];
m28_18 -> m28_86  [key=2, style=dotted];
m28_18 -> m28_20  [color=darkseagreen4, key=1, label=cashSecurities, style=dashed];
m28_18 -> m28_22  [key=0, style=solid];
m28_18 -> m28_23  [key=2, style=dotted];
m28_19 -> m28_20  [key=0, style=solid];
m28_19 -> m28_21  [key=0, style=solid];
m28_20 -> m28_19  [key=0, style=solid];
m28_20 -> m28_87  [key=2, style=dotted];
m28_20 -> m28_22  [key=0, style=solid];
m28_24 -> m28_25  [key=0, style=solid];
m28_21 -> m28_22  [key=0, style=solid];
m28_21 -> m28_24  [key=2, style=dotted];
m28_23 -> m28_24  [key=0, style=solid];
m28_23 -> m28_34  [key=0, style=solid];
m28_23 -> m28_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_23 -> m28_39  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m28_22 -> m28_23  [key=0, style=solid];
m28_22 -> m28_6  [color=blue, key=0, style=bold];
m28_83 -> m28_11  [color=blue, key=0, style=bold];
m28_100 -> m28_49  [color=green, key=3, label="Parameter variable QuantConnect.Data.BaseData baseData", style=bold];
m28_100 -> m28_107  [key=0, style=solid];
m28_100 -> m28_108  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_100 -> m28_110  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_100 -> m28_112  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_100 -> m28_114  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_100 -> m28_116  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_100 -> m28_30  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.Ticks ticks", style=bold];
m28_100 -> m28_28  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.TradeBars tradeBars", style=bold];
m28_100 -> m28_29  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.QuoteBars quoteBars", style=bold];
m28_100 -> m28_34  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.OptionChains optionChains", style=bold];
m28_107 -> m28_108  [key=0, style=solid];
m28_107 -> m28_110  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m28_107 -> m28_112  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m28_107 -> m28_114  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m28_107 -> m28_116  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m28_108 -> m28_109  [key=0, style=solid];
m28_108 -> m28_111  [key=0, style=solid];
m28_108 -> m28_113  [key=0, style=solid];
m28_108 -> m28_115  [key=0, style=solid];
m28_110 -> m28_117  [key=0, style=solid];
m28_110 -> m28_118  [key=2, style=dotted];
m28_112 -> m28_117  [key=0, style=solid];
m28_114 -> m28_117  [key=0, style=solid];
m28_116 -> m28_117  [key=0, style=solid];
m28_109 -> m28_110  [key=0, style=solid];
m28_111 -> m28_112  [key=0, style=solid];
m28_113 -> m28_114  [key=0, style=solid];
m28_115 -> m28_116  [key=0, style=solid];
m28_117 -> m28_100  [color=blue, key=0, style=bold];
m28_5 -> m28_6  [key=0, style=solid];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>", style=dashed];
m28_0 -> m28_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m28_0 -> m28_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>", style=dashed];
m28_0 -> m28_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m28_0 -> m28_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Cash>>", style=dashed];
m28_0 -> m28_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Securities.Security>>", style=dashed];
m28_0 -> m28_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.UpdateData<QuantConnect.Data.SubscriptionDataConfig>>", style=dashed];
m28_0 -> m28_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_0  [color=blue, key=0, style=bold];
m28_2 -> m28_3  [key=0, style=solid];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_5  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_2  [color=blue, key=0, style=bold];
m28_6 -> m28_7  [key=0, style=solid];
m28_6 -> m28_8  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m28_6 -> m28_18  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m28_7 -> m28_8  [key=0, style=solid];
m28_8 -> m28_9  [key=0, style=solid];
m28_8 -> m28_11  [key=0, style=solid];
m28_8 -> m28_13  [key=0, style=solid];
m28_8 -> m28_15  [key=0, style=solid];
m28_8 -> m28_17  [key=0, style=solid];
m28_8 -> m28_19  [key=0, style=solid];
m28_8 -> m28_21  [key=0, style=solid];
m28_9 -> m28_10  [key=0, style=solid];
m28_10 -> m28_0  [color=blue, key=0, style=bold];
m28_10 -> m28_22  [key=0, style=solid];
m28_163 -> m28_150  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.QuoteBar quote", style=bold];
m28_163 -> m28_132  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.OptionContract contract", style=bold];
m28_163 -> m28_169  [key=0, style=solid];
m28_163 -> m28_170  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m28_163 -> m28_171  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m28_163 -> m28_172  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.QuoteBar", style=dashed];
m28_163 -> m28_173  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m28_163 -> m28_174  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m28_169 -> m28_170  [key=0, style=solid];
m28_169 -> m28_172  [key=0, style=solid];
m28_170 -> m28_171  [key=0, style=solid];
m28_171 -> m28_172  [key=0, style=solid];
m28_172 -> m28_175  [key=0, style=solid];
m28_172 -> m28_173  [key=0, style=solid];
m28_173 -> m28_174  [key=0, style=solid];
m28_174 -> m28_175  [key=0, style=solid];
m28_175 -> m28_163  [color=blue, key=0, style=bold];
m28_101 -> m28_49  [color=green, key=3, label="Parameter variable QuantConnect.Data.BaseData baseData", style=bold];
m28_101 -> m28_119  [key=0, style=solid];
m28_101 -> m28_122  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionChains", style=dashed];
m28_101 -> m28_123  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m28_101 -> m28_124  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionChains", style=dashed];
m28_101 -> m28_125  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_101 -> m28_133  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_101 -> m28_134  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_101 -> m28_135  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_101 -> m28_136  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_101 -> m28_137  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m28_101 -> m28_139  [color=darkseagreen4, key=1, label="System.Lazy<QuantConnect.Data.Slice>", style=dashed];
m28_101 -> m28_166  [color=darkseagreen4, key=1, label="System.Lazy<QuantConnect.Data.Slice>", style=dashed];
m28_101 -> m28_140  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_101 -> m28_142  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_101 -> m28_146  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_101 -> m28_150  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_101 -> m28_154  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m28_101 -> m28_27  [color=darkorchid, key=3, label="Parameter variable System.DateTime algorithmTime", style=bold];
m28_101 -> m28_34  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.OptionChains optionChains", style=bold];
m28_101 -> m28_26  [color=darkorchid, key=3, label="Parameter variable System.Lazy<QuantConnect.Data.Slice> sliceFuture", style=bold];
m28_101 -> m28_131  [color=darkorchid, key=3, label="method methodReturn bool HandleOptionData", style=bold];
m28_101 -> m28_155  [color=darkorchid, key=3, label="method methodReturn bool HandleOptionData", style=bold];
m28_119 -> m28_120  [key=0, style=solid];
m28_119 -> m28_121  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m28_119 -> m28_147  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m28_119 -> m28_151  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m28_122 -> m28_123  [key=0, style=solid];
m28_122 -> m28_125  [key=0, style=solid];
m28_122 -> m28_158  [key=2, style=dotted];
m28_122 -> m28_128  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_122 -> m28_130  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_122 -> m28_133  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_122 -> m28_135  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_122 -> m28_136  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_122 -> m28_143  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_122 -> m28_147  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_122 -> m28_151  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_122 -> m28_154  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_123 -> m28_124  [key=0, style=solid];
m28_123 -> m28_159  [key=2, style=dotted];
m28_123 -> m28_128  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_123 -> m28_130  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_123 -> m28_133  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_123 -> m28_135  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_123 -> m28_136  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_123 -> m28_143  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_123 -> m28_147  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_123 -> m28_151  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_123 -> m28_154  [color=darkseagreen4, key=1, label=chain, style=dashed];
m28_124 -> m28_125  [key=0, style=solid];
m28_125 -> m28_126  [key=0, style=solid];
m28_125 -> m28_127  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m28_125 -> m28_128  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m28_125 -> m28_129  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m28_133 -> m28_134  [key=0, style=solid];
m28_133 -> m28_140  [key=0, style=solid];
m28_133 -> m28_158  [key=2, style=dotted];
m28_133 -> m28_144  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_133 -> m28_148  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_133 -> m28_152  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_134 -> m28_135  [key=0, style=solid];
m28_134 -> m28_157  [key=2, style=dotted];
m28_135 -> m28_136  [key=0, style=solid];
m28_135 -> m28_160  [key=2, style=dotted];
m28_135 -> m28_139  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_135 -> m28_166  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_135 -> m28_144  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_135 -> m28_148  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_135 -> m28_152  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_136 -> m28_137  [key=0, style=solid];
m28_137 -> m28_138  [key=0, style=solid];
m28_137 -> m28_139  [color=darkseagreen4, key=1, label=option, style=dashed];
m28_137 -> m28_166  [color=darkseagreen4, key=1, label=option, style=dashed];
m28_139 -> m28_140  [key=0, style=solid];
m28_139 -> m28_161  [key=2, style=dotted];
m28_139 -> m28_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_140 -> m28_141  [key=0, style=solid];
m28_140 -> m28_145  [key=0, style=solid];
m28_140 -> m28_149  [key=0, style=solid];
m28_140 -> m28_153  [key=0, style=solid];
m28_142 -> m28_143  [key=0, style=solid];
m28_142 -> m28_144  [color=darkseagreen4, key=1, label=tick, style=dashed];
m28_146 -> m28_147  [key=0, style=solid];
m28_146 -> m28_148  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m28_150 -> m28_151  [key=0, style=solid];
m28_150 -> m28_152  [color=darkseagreen4, key=1, label=quote, style=dashed];
m28_154 -> m28_155  [key=0, style=solid];
m28_154 -> m28_164  [key=2, style=dotted];
m28_131 -> m28_156  [key=0, style=solid];
m28_155 -> m28_156  [key=0, style=solid];
m28_120 -> m28_121  [key=0, style=solid];
m28_121 -> m28_122  [key=0, style=solid];
m28_121 -> m28_123  [color=darkseagreen4, key=1, label=canonical, style=dashed];
m28_121 -> m28_124  [color=darkseagreen4, key=1, label=canonical, style=dashed];
m28_121 -> m28_157  [key=2, style=dotted];
m28_147 -> m28_148  [key=0, style=solid];
m28_151 -> m28_152  [key=0, style=solid];
m28_128 -> m28_129  [key=0, style=solid];
m28_130 -> m28_129  [key=0, style=solid];
m28_130 -> m28_87  [key=2, style=dotted];
m28_143 -> m28_118  [key=2, style=dotted];
m28_143 -> m28_144  [key=0, style=solid];
m28_126 -> m28_127  [key=0, style=solid];
m28_126 -> m28_132  [key=0, style=solid];
m28_127 -> m28_128  [key=0, style=solid];
m28_127 -> m28_129  [key=0, style=solid];
m28_129 -> m28_131  [key=0, style=solid];
m28_129 -> m28_130  [key=0, style=solid];
m28_132 -> m28_133  [key=0, style=solid];
m28_144 -> m28_155  [key=0, style=solid];
m28_144 -> m28_162  [key=2, style=dotted];
m28_148 -> m28_155  [key=0, style=solid];
m28_152 -> m28_155  [key=0, style=solid];
m28_152 -> m28_163  [key=2, style=dotted];
m28_138 -> m28_139  [key=0, style=solid];
m28_138 -> m28_140  [key=0, style=solid];
m28_141 -> m28_142  [key=0, style=solid];
m28_145 -> m28_146  [key=0, style=solid];
m28_149 -> m28_150  [key=0, style=solid];
m28_153 -> m28_154  [key=0, style=solid];
m28_156 -> m28_101  [color=blue, key=0, style=bold];
m28_162 -> m28_142  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.Tick tick", style=bold];
m28_162 -> m28_132  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.OptionContract contract", style=bold];
m28_162 -> m28_176  [key=0, style=solid];
m28_162 -> m28_177  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m28_162 -> m28_178  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m28_162 -> m28_179  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m28_162 -> m28_180  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m28_162 -> m28_181  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m28_162 -> m28_182  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m28_162 -> m28_183  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m28_162 -> m28_184  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionContract", style=dashed];
m28_176 -> m28_177  [key=0, style=solid];
m28_176 -> m28_178  [key=0, style=solid];
m28_177 -> m28_185  [key=0, style=solid];
m28_178 -> m28_185  [key=0, style=solid];
m28_178 -> m28_179  [key=0, style=solid];
m28_179 -> m28_180  [key=0, style=solid];
m28_179 -> m28_182  [key=0, style=solid];
m28_180 -> m28_181  [key=0, style=solid];
m28_181 -> m28_182  [key=0, style=solid];
m28_182 -> m28_185  [key=0, style=solid];
m28_182 -> m28_183  [key=0, style=solid];
m28_183 -> m28_184  [key=0, style=solid];
m28_184 -> m28_185  [key=0, style=solid];
m28_185 -> m28_162  [color=blue, key=0, style=bold];
m28_188 -> m28_166  [color=darkseagreen4, key=1, label="System.Lazy<QuantConnect.Data.Slice>", style=dashed];
m28_189 -> m28_166  [color=darkseagreen4, key=1, label=contract, style=dashed];
m28_190 -> m28_166  [color=darkseagreen4, key=1, label=option, style=dashed];
m28_186 -> m28_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", style=dashed];
m28_186 -> m28_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", style=dashed];
m28_186 -> m28_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", style=dashed];
m28_186 -> m28_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", style=dashed];
m28_186 -> m28_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", style=dashed];
m28_186 -> m28_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", style=dashed];
m28_186 -> m28_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", style=dashed];
m28_186 -> m28_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", style=dashed];
m28_186 -> m28_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", style=dashed];
m28_187 -> m28_105  [color=darkseagreen4, key=1, label=slice, style=dashed];
m29_51 -> m29_32  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_0 -> m29_1  [key=0, style=solid];
m29_2 -> m29_3  [color=green, key=0, style=solid];
m29_2 -> m29_14  [key=2, style=dotted];
m29_2 -> m29_15  [key=2, style=dotted];
m29_2 -> m29_16  [key=2, style=dotted];
m29_2 -> m29_17  [key=2, style=dotted];
m29_2 -> m29_5  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_2 -> m29_32  [color=darkseagreen4, key=1, label=security, style=dashed];
m29_1 -> m29_2  [color=green, key=0, style=solid];
m29_1 -> m29_13  [key=2, style=dotted];
m29_1 -> m29_5  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m29_1 -> m29_32  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_27  [color=darkseagreen4, key=1, label=refTime, style=dashed];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> n89  [key=2, style=dotted];
m29_4 -> m29_18  [key=2, style=dotted];
m29_4 -> m29_19  [key=2, style=dotted];
m29_4 -> m29_20  [key=2, style=dotted];
m29_4 -> m29_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_4 -> m29_7  [color=darkseagreen4, key=1, label=rawTicks, style=dashed];
m29_4 -> m29_9  [color=darkseagreen4, key=1, label=rawTicks, style=dashed];
m29_4 -> m29_10  [color=darkseagreen4, key=1, label=rawTicks, style=dashed];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_19  [key=2, style=dotted];
m29_5 -> m29_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_6 -> m29_0  [color=blue, key=0, style=bold];
m29_6 -> m29_7  [key=0, style=solid];
m29_6 -> m29_21  [key=2, style=dotted];
m29_6 -> m29_22  [key=2, style=dotted];
m29_6 -> m29_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_6 -> m29_10  [color=darkseagreen4, key=1, label=timeSliceTicks, style=dashed];
m29_36 -> m29_35  [color=blue, key=0, style=bold];
m29_37 -> m29_38  [color=green, key=0, style=solid];
m29_37 -> m29_40  [color=green, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m29_38 -> m29_39  [color=green, key=0, style=solid];
m29_38 -> m29_40  [color=green, key=0, style=solid];
m29_39 -> m29_41  [color=green, key=0, style=solid];
m29_39 -> m29_0  [color=green, key=2, style=dotted];
m29_40 -> m29_41  [color=green, key=0, style=solid];
m29_40 -> m29_35  [color=green, key=2, style=dotted];
m29_41 -> m29_37  [color=blue, key=0, style=bold];
m29_41 -> m29_42  [key=0, style=solid];
m29_41 -> m29_21  [key=2, style=dotted];
m29_41 -> m29_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_35 -> m29_36  [key=0, style=solid];
m29_22 -> m29_26  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_22 -> m29_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m29_22 -> m29_23  [key=0, style=solid];
m29_24 -> m29_25  [key=0, style=solid];
m29_24 -> m29_46  [key=0, style=solid];
m29_25 -> m29_26  [key=0, style=solid];
m29_26 -> m29_27  [key=0, style=solid];
m29_27 -> m29_28  [key=0, style=solid];
m29_27 -> m29_31  [key=2, style=dotted];
m29_27 -> m29_32  [key=2, style=dotted];
m29_27 -> m29_33  [key=2, style=dotted];
m29_27 -> m29_29  [key=2, style=dotted];
m29_27 -> m29_30  [key=2, style=dotted];
m29_28 -> m29_29  [key=0, style=solid];
m29_28 -> m29_34  [key=2, style=dotted];
m29_28 -> m29_26  [color=blue, key=0, style=bold];
m29_23 -> m29_24  [key=0, style=solid];
m29_23 -> m29_27  [color=darkseagreen4, key=1, label=csv, style=dashed];
m29_23 -> m29_28  [color=darkseagreen4, key=1, label=csv, style=dashed];
m29_23 -> m29_30  [key=2, style=dotted];
m29_29 -> m29_22  [color=blue, key=0, style=bold];
m29_20 -> m29_21  [key=0, style=solid];
m29_43 -> m29_44  [color=green, key=0, style=solid];
m29_43 -> m29_45  [color=green, key=0, style=solid];
m29_32 -> m29_33  [key=0, style=solid];
m29_32 -> m29_34  [key=2, style=dotted];
m29_32 -> m29_35  [key=2, style=dotted];
m29_32 -> m29_36  [key=2, style=dotted];
m29_32 -> m29_37  [key=2, style=dotted];
m29_32 -> m29_38  [key=2, style=dotted];
m29_32 -> m29_39  [key=2, style=dotted];
m29_31 -> m29_32  [key=0, style=solid];
m29_33 -> m29_31  [color=blue, key=0, style=bold];
m29_42 -> m29_40  [color=blue, key=0, style=bold];
m29_42 -> m29_43  [color=green, key=0, style=solid];
m29_42 -> m29_45  [color=green, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m29_42 -> m29_46  [color=green, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m29_42 -> m29_47  [color=green, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m29_44 -> m29_45  [key=0, style=solid];
m29_44 -> m29_49  [color=green, key=0, style=solid];
m29_44 -> m29_50  [color=green, key=2, style=dotted];
m29_45 -> m29_43  [color=blue, key=0, style=bold];
m29_45 -> m29_46  [color=green, key=0, style=solid];
m29_45 -> m29_51  [color=green, key=2, style=dotted];
m29_45 -> m29_47  [color=green, key=1, label=source, style=dashed];
m29_45 -> m29_48  [color=green, key=1, label=source, style=dashed];
m29_15 -> m29_16  [key=0, style=solid];
m29_15 -> m29_18  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m29_15 -> m29_19  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m29_15 -> m29_20  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m29_16 -> m29_17  [key=0, style=solid];
m29_17 -> m29_18  [key=0, style=solid];
m29_18 -> m29_19  [key=0, style=solid];
m29_19 -> m29_20  [key=0, style=solid];
m29_21 -> m29_15  [color=blue, key=0, style=bold];
m29_8 -> m29_9  [key=0, style=solid];
m29_8 -> m29_11  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_8 -> m29_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_8 -> m29_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_8 -> m29_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_9 -> m29_10  [key=0, style=solid];
m29_9 -> m29_12  [key=0, style=solid];
m29_9 -> m29_9  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m29_10 -> m29_11  [key=0, style=solid];
m29_10 -> m29_24  [key=2, style=dotted];
m29_10 -> m29_25  [key=2, style=dotted];
m29_11 -> m29_12  [key=0, style=solid];
m29_11 -> m29_9  [key=0, style=solid];
m29_11 -> m29_11  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_12 -> m29_13  [key=0, style=solid];
m29_12 -> m29_0  [color=blue, key=0, style=bold];
m29_13 -> m29_14  [key=0, style=solid];
m29_14 -> m29_8  [color=blue, key=0, style=bold];
m29_54 -> m29_55  [color=green, key=0, style=solid];
m29_55 -> m29_56  [color=green, key=0, style=solid];
m29_55 -> m29_8  [color=green, key=2, style=dotted];
m29_56 -> m29_54  [color=blue, key=0, style=bold];
m29_50 -> m29_32  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m29_7 -> m29_8  [key=0, style=solid];
m29_7 -> m29_23  [key=2, style=dotted];
m29_46 -> m29_47  [color=green, key=0, style=solid];
m29_46 -> m29_48  [color=green, key=0, style=solid];
m29_47 -> m29_24  [color=blue, key=0, style=bold];
m29_47 -> m29_47  [color=green, key=1, label=source, style=dashed];
m29_47 -> m29_48  [color=green, key=0, style=solid];
m29_47 -> m29_52  [color=green, key=2, style=dotted];
m29_48 -> m29_49  [color=green, key=0, style=solid];
m29_48 -> m29_53  [color=green, key=2, style=dotted];
m29_48 -> m29_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests", style=dashed];
m29_49 -> m29_42  [color=blue, key=0, style=bold];
m29_49 -> m29_27  [color=darkseagreen4, key=1, label=refTime, style=dashed];
m29_57 -> m29_2  [color=green, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_55  [color=green, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m29_57 -> m29_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OpenInterest", style=dashed];
m31_22 -> m31_23  [key=0, style=solid];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_8  [key=2, style=dotted];
m31_23 -> m31_9  [key=2, style=dotted];
m31_24 -> m31_22  [color=blue, key=0, style=bold];
m31_14 -> m31_33  [key=0, style=solid];
m31_33 -> m31_34  [key=0, style=solid];
m31_33 -> m31_4  [key=2, style=dotted];
m31_34 -> m31_14  [color=blue, key=0, style=bold];
m31_37 -> m31_38  [key=0, style=solid];
m31_37 -> m31_40  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_37 -> m31_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_37 -> m31_52  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_38 -> m31_39  [key=0, style=solid];
m31_38 -> m31_40  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_38 -> m31_41  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_38 -> m31_45  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_40 -> m31_41  [key=0, style=solid];
m31_40 -> m31_56  [key=2, style=dotted];
m31_40 -> m31_42  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m31_40 -> m31_43  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m31_40 -> m31_44  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m31_45 -> m31_46  [key=0, style=solid];
m31_45 -> m31_59  [key=2, style=dotted];
m31_45 -> m31_47  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_45 -> m31_48  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_45 -> m31_50  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_45 -> m31_51  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_52 -> m31_53  [key=0, style=solid];
m31_52 -> m31_54  [key=0, style=solid];
m31_39 -> m31_40  [key=0, style=solid];
m31_39 -> m31_45  [key=0, style=solid];
m31_41 -> m31_42  [key=0, style=solid];
m31_41 -> m31_57  [key=2, style=dotted];
m31_41 -> m31_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_42 -> m31_43  [key=0, style=solid];
m31_42 -> m31_44  [key=0, style=solid];
m31_43 -> m31_44  [key=0, style=solid];
m31_43 -> m31_58  [key=2, style=dotted];
m31_44 -> m31_55  [key=0, style=solid];
m31_46 -> m31_47  [key=0, style=solid];
m31_46 -> m31_48  [key=0, style=solid];
m31_47 -> m31_55  [key=0, style=solid];
m31_47 -> m31_60  [key=2, style=dotted];
m31_48 -> m31_49  [key=0, style=solid];
m31_48 -> m31_61  [key=2, style=dotted];
m31_48 -> m31_50  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m31_50 -> m31_55  [key=0, style=solid];
m31_50 -> m31_62  [key=2, style=dotted];
m31_51 -> m31_52  [key=0, style=solid];
m31_51 -> m31_63  [key=2, style=dotted];
m31_51 -> m31_53  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_51 -> m31_54  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_49 -> m31_50  [key=0, style=solid];
m31_49 -> m31_51  [key=0, style=solid];
m31_53 -> m31_54  [key=0, style=solid];
m31_53 -> m31_64  [key=2, style=dotted];
m31_54 -> m31_55  [key=0, style=solid];
m31_55 -> m31_37  [color=blue, key=0, style=bold];
m31_123 -> m31_127  [key=0, style=solid];
m31_127 -> m31_128  [key=0, style=solid];
m31_127 -> m31_129  [key=2, style=dotted];
m31_128 -> m31_123  [color=blue, key=0, style=bold];
m31_300 -> m31_301  [key=0, style=solid];
m31_301 -> m31_302  [key=0, style=solid];
m31_301 -> m31_299  [key=2, style=dotted];
m31_302 -> m31_300  [color=blue, key=0, style=bold];
m31_91 -> m31_92  [key=0, style=solid];
m31_91 -> m31_93  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_92 -> m31_93  [key=0, style=solid];
m31_93 -> m31_94  [key=0, style=solid];
m31_93 -> m31_59  [key=2, style=dotted];
m31_93 -> m31_96  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_93 -> m31_97  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_94 -> m31_95  [key=0, style=solid];
m31_94 -> m31_61  [key=2, style=dotted];
m31_94 -> m31_96  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_96 -> m31_98  [key=0, style=solid];
m31_96 -> m31_62  [key=2, style=dotted];
m31_97 -> m31_98  [key=0, style=solid];
m31_97 -> m31_63  [key=2, style=dotted];
m31_95 -> m31_96  [key=0, style=solid];
m31_95 -> m31_97  [key=0, style=solid];
m31_98 -> m31_91  [color=blue, key=0, style=bold];
m31_268 -> m31_269  [key=0, style=solid];
m31_65 -> m31_66  [key=0, style=solid];
m31_66 -> m31_67  [key=0, style=solid];
m31_67 -> m31_65  [color=blue, key=0, style=bold];
m31_179 -> m31_180  [key=0, style=solid];
m31_179 -> m31_179  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m31_178 -> m31_179  [key=0, style=solid];
m31_180 -> m31_178  [color=blue, key=0, style=bold];
m31_269 -> m31_270  [key=0, style=solid];
m31_270 -> m31_268  [color=blue, key=0, style=bold];
m31_124 -> m31_125  [key=0, style=solid];
m31_125 -> m31_126  [key=0, style=solid];
m31_125 -> m31_3  [key=2, style=dotted];
m31_125 -> m31_123  [key=2, style=dotted];
m31_126 -> m31_124  [color=blue, key=0, style=bold];
m31_19 -> m31_20  [key=0, style=solid];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_3  [key=2, style=dotted];
m31_20 -> m31_4  [key=2, style=dotted];
m31_21 -> m31_19  [color=blue, key=0, style=bold];
m31_278 -> m31_285  [key=0, style=solid];
m31_278 -> m31_286  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_278 -> m31_287  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_278 -> m31_289  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_278 -> m31_293  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_278 -> m31_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_278 -> m31_295  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_278 -> m31_297  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_285 -> m31_286  [key=0, style=solid];
m31_286 -> m31_287  [key=0, style=solid];
m31_286 -> m31_289  [key=0, style=solid];
m31_286 -> m31_236  [key=2, style=dotted];
m31_287 -> m31_288  [key=0, style=solid];
m31_287 -> m31_166  [key=2, style=dotted];
m31_287 -> n137  [key=2, style=dotted];
m31_289 -> m31_290  [key=0, style=solid];
m31_289 -> m31_295  [key=0, style=solid];
m31_293 -> m31_294  [key=0, style=solid];
m31_293 -> m31_290  [key=0, style=solid];
m31_294 -> m31_290  [key=0, style=solid];
m31_294 -> m31_4  [key=2, style=dotted];
m31_295 -> m31_296  [key=0, style=solid];
m31_295 -> m31_299  [key=2, style=dotted];
m31_295 -> m31_297  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m31_297 -> m31_298  [key=0, style=solid];
m31_297 -> m31_37  [key=2, style=dotted];
m31_288 -> m31_298  [key=0, style=solid];
m31_290 -> m31_291  [key=0, style=solid];
m31_290 -> m31_295  [key=0, style=solid];
m31_291 -> m31_292  [key=0, style=solid];
m31_291 -> m31_291  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m31_291 -> m31_293  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m31_291 -> m31_294  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m31_292 -> m31_293  [key=0, style=solid];
m31_292 -> m31_292  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m31_292 -> m31_294  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m31_296 -> m31_297  [key=0, style=solid];
m31_296 -> m31_298  [key=0, style=solid];
m31_296 -> m31_3  [key=2, style=dotted];
m31_298 -> m31_278  [color=blue, key=0, style=bold];
m31_352 -> m31_353  [key=0, style=solid];
m31_353 -> m31_354  [key=0, style=solid];
m31_353 -> m31_4  [key=2, style=dotted];
m31_354 -> m31_352  [color=blue, key=0, style=bold];
m31_279 -> m31_280  [key=0, style=solid];
m31_280 -> m31_281  [key=0, style=solid];
m31_280 -> m31_278  [key=2, style=dotted];
m31_281 -> m31_279  [color=blue, key=0, style=bold];
m31_99 -> m31_100  [key=0, style=solid];
m31_99 -> m31_101  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_100 -> m31_101  [key=0, style=solid];
m31_101 -> m31_102  [key=0, style=solid];
m31_101 -> m31_59  [key=2, style=dotted];
m31_101 -> m31_104  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_101 -> m31_105  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_102 -> m31_103  [key=0, style=solid];
m31_102 -> m31_61  [key=2, style=dotted];
m31_102 -> m31_104  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_104 -> m31_106  [key=0, style=solid];
m31_104 -> m31_62  [key=2, style=dotted];
m31_105 -> m31_106  [key=0, style=solid];
m31_105 -> m31_63  [key=2, style=dotted];
m31_103 -> m31_104  [key=0, style=solid];
m31_103 -> m31_105  [key=0, style=solid];
m31_106 -> m31_99  [color=blue, key=0, style=bold];
m31_15 -> m31_16  [key=0, style=solid];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_18  [key=2, style=dotted];
m31_16 -> m31_9  [key=2, style=dotted];
m31_17 -> m31_15  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_3  [key=2, style=dotted];
m31_1 -> m31_4  [key=2, style=dotted];
m31_2 -> m31_0  [color=blue, key=0, style=bold];
m31_120 -> m31_121  [key=0, style=solid];
m31_121 -> m31_122  [key=0, style=solid];
m31_121 -> m31_3  [key=2, style=dotted];
m31_121 -> m31_123  [key=2, style=dotted];
m31_122 -> m31_120  [color=blue, key=0, style=bold];
m31_186 -> m31_188  [key=0, style=solid];
m31_186 -> m31_189  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_190  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_191  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_192  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_194  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_196  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_197  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_198  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_199  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_201  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_205  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_207  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_212  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_214  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_216  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_219  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_220  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_222  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_224  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_225  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_226  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_227  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_228  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_229  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_233  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_186 -> m31_234  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m31_188 -> m31_189  [key=0, style=solid];
m31_189 -> m31_190  [key=0, style=solid];
m31_189 -> m31_191  [key=0, style=solid];
m31_189 -> m31_236  [key=2, style=dotted];
m31_189 -> m31_193  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_195  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_196  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_198  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_203  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_206  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_208  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_210  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_215  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_221  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_223  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_225  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_230  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_189 -> m31_232  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_190 -> m31_235  [key=0, style=solid];
m31_190 -> m31_166  [key=2, style=dotted];
m31_190 -> m31_237  [key=2, style=dotted];
m31_191 -> m31_192  [key=0, style=solid];
m31_191 -> m31_193  [key=0, style=solid];
m31_191 -> m31_3  [key=2, style=dotted];
m31_192 -> m31_235  [key=0, style=solid];
m31_192 -> m31_238  [key=2, style=dotted];
m31_194 -> m31_235  [key=0, style=solid];
m31_194 -> m31_166  [key=2, style=dotted];
m31_194 -> m31_237  [key=2, style=dotted];
m31_196 -> m31_197  [key=0, style=solid];
m31_196 -> m31_198  [key=0, style=solid];
m31_197 -> m31_235  [key=0, style=solid];
m31_197 -> m31_237  [key=2, style=dotted];
m31_198 -> m31_199  [key=0, style=solid];
m31_198 -> m31_200  [key=0, style=solid];
m31_199 -> m31_235  [key=0, style=solid];
m31_199 -> m31_237  [key=2, style=dotted];
m31_201 -> m31_235  [key=0, style=solid];
m31_201 -> m31_166  [key=2, style=dotted];
m31_201 -> m31_237  [key=2, style=dotted];
m31_205 -> m31_235  [key=0, style=solid];
m31_205 -> m31_237  [key=2, style=dotted];
m31_207 -> m31_235  [key=0, style=solid];
m31_207 -> m31_237  [key=2, style=dotted];
m31_212 -> m31_235  [key=0, style=solid];
m31_212 -> m31_237  [key=2, style=dotted];
m31_214 -> m31_235  [key=0, style=solid];
m31_214 -> m31_237  [key=2, style=dotted];
m31_216 -> m31_235  [key=0, style=solid];
m31_216 -> m31_237  [key=2, style=dotted];
m31_219 -> m31_235  [key=0, style=solid];
m31_219 -> m31_177  [key=2, style=dotted];
m31_219 -> m31_237  [key=2, style=dotted];
m31_220 -> m31_221  [key=0, style=solid];
m31_220 -> m31_229  [key=0, style=solid];
m31_222 -> m31_235  [key=0, style=solid];
m31_222 -> m31_166  [key=2, style=dotted];
m31_222 -> m31_237  [key=2, style=dotted];
m31_224 -> m31_235  [key=0, style=solid];
m31_224 -> m31_166  [key=2, style=dotted];
m31_224 -> m31_237  [key=2, style=dotted];
m31_225 -> m31_226  [key=0, style=solid];
m31_225 -> m31_227  [key=0, style=solid];
m31_226 -> m31_235  [key=0, style=solid];
m31_226 -> m31_166  [key=2, style=dotted];
m31_226 -> m31_237  [key=2, style=dotted];
m31_227 -> m31_228  [key=0, style=solid];
m31_227 -> m31_229  [key=0, style=solid];
m31_228 -> m31_229  [key=0, style=solid];
m31_228 -> m31_238  [key=2, style=dotted];
m31_229 -> m31_230  [key=0, style=solid];
m31_229 -> m31_234  [key=0, style=solid];
m31_233 -> m31_235  [key=0, style=solid];
m31_233 -> m31_237  [key=2, style=dotted];
m31_234 -> m31_235  [key=0, style=solid];
m31_234 -> m31_242  [key=2, style=dotted];
m31_193 -> m31_194  [key=0, style=solid];
m31_193 -> m31_195  [key=0, style=solid];
m31_195 -> m31_196  [key=0, style=solid];
m31_195 -> m31_200  [color=darkseagreen4, key=1, label=price, style=dashed];
m31_203 -> m31_204  [key=0, style=solid];
m31_203 -> m31_205  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m31_203 -> m31_207  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m31_203 -> m31_212  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m31_203 -> m31_214  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m31_206 -> m31_207  [key=0, style=solid];
m31_206 -> m31_208  [key=0, style=solid];
m31_208 -> m31_209  [key=0, style=solid];
m31_208 -> m31_215  [key=0, style=solid];
m31_210 -> m31_211  [key=0, style=solid];
m31_210 -> m31_212  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m31_210 -> m31_214  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m31_215 -> m31_216  [key=0, style=solid];
m31_215 -> m31_217  [key=0, style=solid];
m31_221 -> m31_222  [key=0, style=solid];
m31_221 -> m31_223  [key=0, style=solid];
m31_223 -> m31_224  [key=0, style=solid];
m31_223 -> m31_225  [key=0, style=solid];
m31_230 -> m31_231  [key=0, style=solid];
m31_230 -> m31_240  [key=2, style=dotted];
m31_232 -> m31_233  [key=0, style=solid];
m31_232 -> m31_234  [key=0, style=solid];
m31_200 -> m31_201  [key=0, style=solid];
m31_200 -> m31_202  [key=0, style=solid];
m31_202 -> m31_203  [key=0, style=solid];
m31_204 -> m31_205  [key=0, style=solid];
m31_204 -> m31_206  [key=0, style=solid];
m31_204 -> m31_239  [key=2, style=dotted];
m31_209 -> m31_210  [key=0, style=solid];
m31_211 -> m31_212  [key=0, style=solid];
m31_211 -> m31_213  [key=0, style=solid];
m31_211 -> m31_239  [key=2, style=dotted];
m31_213 -> m31_214  [key=0, style=solid];
m31_213 -> m31_215  [key=0, style=solid];
m31_217 -> m31_218  [key=0, style=solid];
m31_217 -> m31_220  [key=0, style=solid];
m31_218 -> m31_219  [key=0, style=solid];
m31_231 -> m31_232  [key=0, style=solid];
m31_231 -> m31_241  [key=2, style=dotted];
m31_235 -> m31_186  [color=blue, key=0, style=bold];
m31_282 -> m31_283  [key=0, style=solid];
m31_283 -> m31_284  [key=0, style=solid];
m31_283 -> m31_278  [key=2, style=dotted];
m31_284 -> m31_282  [color=blue, key=0, style=bold];
m31_25 -> m31_26  [key=0, style=solid];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_18  [key=2, style=dotted];
m31_26 -> m31_9  [key=2, style=dotted];
m31_27 -> m31_25  [color=blue, key=0, style=bold];
m31_5 -> m31_6  [key=0, style=solid];
m31_6 -> m31_7  [key=0, style=solid];
m31_6 -> m31_8  [key=2, style=dotted];
m31_6 -> m31_9  [key=2, style=dotted];
m31_7 -> m31_5  [color=blue, key=0, style=bold];
m31_129 -> m31_130  [key=0, style=solid];
m31_129 -> m31_131  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_129 -> m31_132  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_129 -> m31_133  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_129 -> m31_134  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_129 -> m31_179  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_129 -> m31_136  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_129 -> m31_141  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_129 -> m31_144  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_129 -> m31_147  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_129 -> m31_148  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_129 -> m31_149  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_129 -> m31_150  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_129 -> m31_154  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_129 -> m31_157  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_130 -> m31_131  [key=0, style=solid];
m31_130 -> m31_162  [key=2, style=dotted];
m31_130 -> m31_142  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_130 -> m31_145  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_130 -> m31_155  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_130 -> m31_158  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_130 -> m31_160  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_131 -> m31_132  [key=0, style=solid];
m31_131 -> m31_163  [key=2, style=dotted];
m31_131 -> m31_141  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m31_131 -> m31_144  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m31_131 -> m31_154  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m31_131 -> m31_157  [color=darkseagreen4, key=1, label=strategyTag, style=dashed];
m31_132 -> m31_133  [key=0, style=solid];
m31_132 -> m31_147  [key=0, style=solid];
m31_133 -> m31_134  [key=0, style=solid];
m31_133 -> m31_147  [key=0, style=solid];
m31_133 -> m31_179  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_133 -> m31_136  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_133 -> m31_139  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_133 -> m31_141  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_133 -> m31_144  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_133 -> m31_146  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m31_134 -> m31_135  [key=0, style=solid];
m31_134 -> m31_164  [key=2, style=dotted];
m31_134 -> m31_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_134 -> m31_138  [color=darkseagreen4, key=1, label=optionSeq, style=dashed];
m31_136 -> m31_137  [key=0, style=solid];
m31_136 -> m31_166  [key=2, style=dotted];
m31_136 -> m31_167  [key=2, style=dotted];
m31_136 -> m31_168  [key=2, style=dotted];
m31_136 -> m31_169  [key=2, style=dotted];
m31_136 -> m31_170  [key=2, style=dotted];
m31_141 -> m31_142  [key=0, style=solid];
m31_141 -> m31_173  [key=2, style=dotted];
m31_144 -> m31_145  [key=0, style=solid];
m31_144 -> m31_175  [key=2, style=dotted];
m31_147 -> m31_148  [key=0, style=solid];
m31_147 -> m31_160  [key=0, style=solid];
m31_148 -> m31_149  [key=0, style=solid];
m31_148 -> m31_160  [key=0, style=solid];
m31_148 -> m31_152  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m31_148 -> m31_154  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m31_148 -> m31_157  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m31_148 -> m31_159  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m31_149 -> m31_150  [key=0, style=solid];
m31_149 -> m31_152  [key=0, style=solid];
m31_149 -> m31_176  [key=2, style=dotted];
m31_150 -> m31_151  [key=0, style=solid];
m31_150 -> m31_166  [key=2, style=dotted];
m31_150 -> m31_177  [key=2, style=dotted];
m31_154 -> m31_155  [key=0, style=solid];
m31_154 -> m31_37  [key=2, style=dotted];
m31_157 -> m31_158  [key=0, style=solid];
m31_157 -> m31_83  [key=2, style=dotted];
m31_142 -> m31_133  [key=0, style=solid];
m31_142 -> m31_174  [key=2, style=dotted];
m31_145 -> m31_133  [key=0, style=solid];
m31_145 -> m31_174  [key=2, style=dotted];
m31_155 -> m31_148  [key=0, style=solid];
m31_155 -> m31_174  [key=2, style=dotted];
m31_158 -> m31_148  [key=0, style=solid];
m31_158 -> m31_174  [key=2, style=dotted];
m31_160 -> m31_161  [key=0, style=solid];
m31_139 -> m31_140  [key=0, style=solid];
m31_139 -> m31_143  [key=0, style=solid];
m31_139 -> m31_146  [key=0, style=solid];
m31_146 -> m31_161  [key=0, style=solid];
m31_146 -> m31_171  [key=2, style=dotted];
m31_146 -> m31_167  [key=2, style=dotted];
m31_135 -> m31_136  [key=0, style=solid];
m31_135 -> m31_138  [key=0, style=solid];
m31_135 -> m31_165  [key=2, style=dotted];
m31_138 -> m31_139  [key=0, style=solid];
m31_138 -> m31_172  [key=2, style=dotted];
m31_138 -> m31_141  [color=darkseagreen4, key=1, label=option, style=dashed];
m31_138 -> m31_144  [color=darkseagreen4, key=1, label=option, style=dashed];
m31_137 -> m31_161  [key=0, style=solid];
m31_137 -> m31_171  [key=2, style=dotted];
m31_140 -> m31_141  [key=0, style=solid];
m31_143 -> m31_144  [key=0, style=solid];
m31_152 -> m31_153  [key=0, style=solid];
m31_152 -> m31_156  [key=0, style=solid];
m31_152 -> m31_159  [key=0, style=solid];
m31_159 -> m31_161  [key=0, style=solid];
m31_159 -> m31_171  [key=2, style=dotted];
m31_159 -> m31_167  [key=2, style=dotted];
m31_151 -> m31_161  [key=0, style=solid];
m31_151 -> m31_171  [key=2, style=dotted];
m31_153 -> m31_154  [key=0, style=solid];
m31_156 -> m31_157  [key=0, style=solid];
m31_161 -> m31_129  [color=blue, key=0, style=bold];
m31_349 -> m31_350  [key=0, style=solid];
m31_350 -> m31_351  [key=0, style=solid];
m31_350 -> m31_4  [key=2, style=dotted];
m31_351 -> m31_349  [color=blue, key=0, style=bold];
m31_56 -> m31_68  [key=0, style=solid];
m31_56 -> m31_69  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_68 -> m31_69  [key=0, style=solid];
m31_69 -> m31_70  [key=0, style=solid];
m31_69 -> m31_59  [key=2, style=dotted];
m31_69 -> m31_72  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_69 -> m31_73  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_70 -> m31_71  [key=0, style=solid];
m31_70 -> m31_61  [key=2, style=dotted];
m31_70 -> m31_72  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_72 -> m31_74  [key=0, style=solid];
m31_72 -> m31_62  [key=2, style=dotted];
m31_73 -> m31_74  [key=0, style=solid];
m31_73 -> m31_63  [key=2, style=dotted];
m31_71 -> m31_72  [key=0, style=solid];
m31_71 -> m31_73  [key=0, style=solid];
m31_74 -> m31_56  [color=blue, key=0, style=bold];
m31_9 -> m31_31  [key=0, style=solid];
m31_31 -> m31_32  [key=0, style=solid];
m31_31 -> m31_4  [key=2, style=dotted];
m31_32 -> m31_9  [color=blue, key=0, style=bold];
m31_83 -> m31_84  [key=0, style=solid];
m31_83 -> m31_85  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_84 -> m31_85  [key=0, style=solid];
m31_85 -> m31_86  [key=0, style=solid];
m31_85 -> m31_59  [key=2, style=dotted];
m31_85 -> m31_88  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_85 -> m31_89  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_86 -> m31_87  [key=0, style=solid];
m31_86 -> m31_61  [key=2, style=dotted];
m31_86 -> m31_88  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_88 -> m31_90  [key=0, style=solid];
m31_88 -> m31_62  [key=2, style=dotted];
m31_89 -> m31_90  [key=0, style=solid];
m31_89 -> m31_63  [key=2, style=dotted];
m31_87 -> m31_88  [key=0, style=solid];
m31_87 -> m31_89  [key=0, style=solid];
m31_90 -> m31_83  [color=blue, key=0, style=bold];
m31_10 -> m31_11  [key=0, style=solid];
m31_11 -> m31_12  [key=0, style=solid];
m31_11 -> m31_13  [key=2, style=dotted];
m31_11 -> m31_14  [key=2, style=dotted];
m31_12 -> m31_10  [color=blue, key=0, style=bold];
m31_299 -> m31_303  [key=0, style=solid];
m31_299 -> m31_307  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_299 -> m31_309  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m31_299 -> m31_313  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_299 -> m31_316  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_303 -> m31_304  [key=0, style=solid];
m31_303 -> m31_308  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_303 -> m31_310  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_303 -> m31_313  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_303 -> m31_329  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_303 -> m31_330  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_303 -> m31_331  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_303 -> m31_333  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_303 -> m31_336  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_303 -> m31_337  [color=darkseagreen4, key=1, label=security, style=dashed];
m31_307 -> m31_308  [key=0, style=solid];
m31_307 -> m31_309  [key=0, style=solid];
m31_309 -> m31_310  [key=0, style=solid];
m31_309 -> m31_311  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m31_309 -> m31_312  [color=darkseagreen4, key=1, label=targetPortfolioValue, style=dashed];
m31_313 -> m31_314  [key=0, style=solid];
m31_313 -> m31_340  [key=2, style=dotted];
m31_313 -> m31_341  [key=2, style=dotted];
m31_313 -> m31_323  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m31_313 -> m31_332  [color=darkseagreen4, key=1, label=unitPrice, style=dashed];
m31_316 -> m31_317  [key=0, style=solid];
m31_316 -> m31_342  [key=2, style=dotted];
m31_316 -> m31_335  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m31_304 -> m31_305  [key=0, style=solid];
m31_308 -> m31_339  [key=0, style=solid];
m31_310 -> m31_311  [key=0, style=solid];
m31_310 -> m31_312  [color=darkseagreen4, key=1, label=currentHoldingsValue, style=dashed];
m31_329 -> m31_330  [key=0, style=solid];
m31_329 -> m31_340  [key=2, style=dotted];
m31_329 -> m31_331  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_329 -> m31_333  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_330 -> m31_331  [key=0, style=solid];
m31_330 -> m31_341  [key=2, style=dotted];
m31_330 -> m31_335  [color=darkseagreen4, key=1, label=orderValue, style=dashed];
m31_331 -> m31_332  [key=0, style=solid];
m31_331 -> m31_343  [key=2, style=dotted];
m31_331 -> m31_335  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
m31_333 -> m31_334  [key=0, style=solid];
m31_333 -> m31_344  [key=2, style=dotted];
m31_333 -> m31_335  [color=darkseagreen4, key=1, label=marginRequired, style=dashed];
m31_336 -> m31_337  [key=0, style=solid];
m31_336 -> m31_338  [key=0, style=solid];
m31_336 -> m31_345  [key=2, style=dotted];
m31_337 -> m31_338  [key=0, style=solid];
m31_337 -> m31_345  [key=2, style=dotted];
m31_337 -> m31_337  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_305 -> m31_306  [key=0, style=solid];
m31_305 -> m31_307  [key=0, style=solid];
m31_306 -> m31_339  [key=0, style=solid];
m31_311 -> m31_312  [key=0, style=solid];
m31_311 -> m31_13  [key=2, style=dotted];
m31_311 -> m31_323  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m31_311 -> m31_335  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m31_312 -> m31_313  [key=0, style=solid];
m31_312 -> m31_316  [color=darkseagreen4, key=1, label=direction, style=dashed];
m31_312 -> m31_338  [color=darkseagreen4, key=1, label=direction, style=dashed];
m31_323 -> m31_324  [key=0, style=solid];
m31_323 -> m31_327  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_323 -> m31_328  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_323 -> m31_329  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_323 -> m31_335  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_323 -> m31_336  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_323 -> m31_337  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_323 -> m31_338  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_335 -> m31_324  [key=0, style=solid];
m31_335 -> m31_336  [key=0, style=solid];
m31_338 -> m31_339  [key=0, style=solid];
m31_314 -> m31_315  [key=0, style=solid];
m31_314 -> m31_316  [key=0, style=solid];
m31_332 -> m31_333  [key=0, style=solid];
m31_315 -> m31_339  [key=0, style=solid];
m31_317 -> m31_318  [key=0, style=solid];
m31_317 -> m31_319  [key=0, style=solid];
m31_318 -> m31_339  [key=0, style=solid];
m31_319 -> m31_320  [key=0, style=solid];
m31_320 -> m31_321  [key=0, style=solid];
m31_321 -> m31_322  [key=0, style=solid];
m31_322 -> m31_323  [key=0, style=solid];
m31_322 -> m31_326  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m31_322 -> m31_327  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m31_326 -> m31_327  [key=0, style=solid];
m31_326 -> m31_328  [key=0, style=solid];
m31_327 -> m31_329  [key=0, style=solid];
m31_327 -> m31_327  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_327 -> m31_335  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_327 -> m31_336  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_327 -> m31_337  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_327 -> m31_338  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_324 -> m31_325  [key=0, style=solid];
m31_324 -> m31_334  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m31_328 -> m31_329  [key=0, style=solid];
m31_328 -> m31_328  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_328 -> m31_335  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_328 -> m31_336  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_328 -> m31_337  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_328 -> m31_338  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m31_325 -> m31_326  [key=0, style=solid];
m31_325 -> m31_329  [key=0, style=solid];
m31_334 -> m31_335  [key=0, style=solid];
m31_334 -> m31_334  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m31_339 -> m31_299  [color=blue, key=0, style=bold];
m31_346 -> m31_347  [key=0, style=solid];
m31_347 -> m31_348  [key=0, style=solid];
m31_347 -> m31_4  [key=2, style=dotted];
m31_348 -> m31_346  [color=blue, key=0, style=bold];
m31_107 -> m31_108  [key=0, style=solid];
m31_107 -> m31_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_107 -> m31_116  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_108 -> m31_109  [key=0, style=solid];
m31_109 -> m31_110  [key=0, style=solid];
m31_109 -> m31_59  [key=2, style=dotted];
m31_109 -> m31_111  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_109 -> m31_112  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_109 -> m31_114  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_109 -> m31_115  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_116 -> m31_117  [key=0, style=solid];
m31_116 -> m31_118  [key=0, style=solid];
m31_110 -> m31_111  [key=0, style=solid];
m31_110 -> m31_112  [key=0, style=solid];
m31_111 -> m31_119  [key=0, style=solid];
m31_111 -> m31_60  [key=2, style=dotted];
m31_112 -> m31_113  [key=0, style=solid];
m31_112 -> m31_61  [key=2, style=dotted];
m31_112 -> m31_114  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m31_114 -> m31_119  [key=0, style=solid];
m31_114 -> m31_62  [key=2, style=dotted];
m31_115 -> m31_116  [key=0, style=solid];
m31_115 -> m31_63  [key=2, style=dotted];
m31_115 -> m31_117  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_115 -> m31_118  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_113 -> m31_114  [key=0, style=solid];
m31_113 -> m31_115  [key=0, style=solid];
m31_117 -> m31_118  [key=0, style=solid];
m31_117 -> m31_64  [key=2, style=dotted];
m31_118 -> m31_119  [key=0, style=solid];
m31_119 -> m31_107  [color=blue, key=0, style=bold];
m31_271 -> m31_272  [key=0, style=solid];
m31_271 -> m31_273  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_272 -> m31_273  [key=0, style=solid];
m31_272 -> m31_274  [key=0, style=solid];
m31_273 -> m31_274  [key=0, style=solid];
m31_274 -> m31_271  [color=blue, key=0, style=bold];
m31_59 -> m31_355  [key=0, style=solid];
m31_355 -> m31_356  [key=0, style=solid];
m31_355 -> m31_357  [key=2, style=dotted];
m31_356 -> m31_59  [color=blue, key=0, style=bold];
m31_275 -> m31_276  [key=0, style=solid];
m31_276 -> m31_277  [key=0, style=solid];
m31_276 -> m31_278  [key=2, style=dotted];
m31_277 -> m31_275  [color=blue, key=0, style=bold];
m31_28 -> m31_29  [key=0, style=solid];
m31_29 -> m31_30  [key=0, style=solid];
m31_29 -> m31_13  [key=2, style=dotted];
m31_29 -> m31_14  [key=2, style=dotted];
m31_30 -> m31_28  [color=blue, key=0, style=bold];
m31_4 -> m31_35  [key=0, style=solid];
m31_35 -> m31_36  [key=0, style=solid];
m31_35 -> m31_37  [key=2, style=dotted];
m31_36 -> m31_4  [color=blue, key=0, style=bold];
m31_75 -> m31_76  [key=0, style=solid];
m31_75 -> m31_77  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_76 -> m31_77  [key=0, style=solid];
m31_77 -> m31_78  [key=0, style=solid];
m31_77 -> m31_59  [key=2, style=dotted];
m31_77 -> m31_80  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_77 -> m31_81  [color=darkseagreen4, key=1, label=request, style=dashed];
m31_78 -> m31_79  [key=0, style=solid];
m31_78 -> m31_61  [key=2, style=dotted];
m31_78 -> m31_80  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_80 -> m31_82  [key=0, style=solid];
m31_80 -> m31_62  [key=2, style=dotted];
m31_81 -> m31_82  [key=0, style=solid];
m31_81 -> m31_63  [key=2, style=dotted];
m31_79 -> m31_80  [key=0, style=solid];
m31_79 -> m31_81  [key=0, style=solid];
m31_82 -> m31_75  [color=blue, key=0, style=bold];
m31_61 -> m31_181  [key=0, style=solid];
m31_181 -> m31_182  [key=0, style=solid];
m31_181 -> m31_186  [key=2, style=dotted];
m31_181 -> m31_183  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_181 -> m31_184  [color=darkseagreen4, key=1, label=response, style=dashed];
m31_182 -> m31_183  [key=0, style=solid];
m31_182 -> m31_184  [key=0, style=solid];
m31_183 -> m31_184  [key=0, style=solid];
m31_183 -> n137  [key=2, style=dotted];
m31_184 -> m31_185  [key=0, style=solid];
m31_185 -> m31_61  [color=blue, key=0, style=bold];
m31_243 -> m31_244  [key=0, style=solid];
m31_243 -> m31_245  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_244 -> m31_245  [key=0, style=solid];
m31_244 -> m31_162  [key=2, style=dotted];
m31_244 -> m31_261  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m31_244 -> m31_262  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m31_245 -> m31_246  [key=0, style=solid];
m31_245 -> m31_245  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_245 -> m31_247  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m31_261 -> m31_246  [key=0, style=solid];
m31_261 -> m31_174  [key=2, style=dotted];
m31_262 -> m31_263  [key=0, style=solid];
m31_246 -> m31_247  [key=0, style=solid];
m31_246 -> m31_262  [key=0, style=solid];
m31_246 -> m31_264  [key=2, style=dotted];
m31_246 -> m31_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_246 -> m31_248  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m31_246 -> m31_249  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m31_246 -> m31_259  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m31_247 -> m31_248  [key=0, style=solid];
m31_247 -> m31_246  [key=0, style=solid];
m31_248 -> m31_249  [key=0, style=solid];
m31_248 -> m31_265  [key=2, style=dotted];
m31_248 -> m31_250  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_248 -> m31_252  [color=darkseagreen4, key=1, label=orders, style=dashed];
m31_249 -> m31_250  [key=0, style=solid];
m31_249 -> m31_258  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m31_249 -> m31_259  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m31_259 -> m31_260  [key=0, style=solid];
m31_259 -> m31_14  [key=2, style=dotted];
m31_259 -> m31_261  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_250 -> m31_251  [key=0, style=solid];
m31_250 -> m31_246  [key=0, style=solid];
m31_252 -> m31_253  [key=0, style=solid];
m31_252 -> m31_258  [key=0, style=solid];
m31_252 -> m31_254  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_252 -> m31_257  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_258 -> m31_259  [key=0, style=solid];
m31_258 -> m31_246  [key=0, style=solid];
m31_251 -> m31_252  [key=0, style=solid];
m31_251 -> m31_256  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m31_251 -> m31_259  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m31_256 -> m31_252  [key=0, style=solid];
m31_256 -> m31_256  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m31_256 -> m31_259  [color=darkseagreen4, key=1, label=marketOrdersQuantity, style=dashed];
m31_253 -> m31_254  [key=0, style=solid];
m31_253 -> m31_257  [key=0, style=solid];
m31_254 -> m31_255  [key=0, style=solid];
m31_254 -> m31_266  [key=2, style=dotted];
m31_254 -> m31_256  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m31_257 -> m31_252  [key=0, style=solid];
m31_257 -> m31_267  [key=2, style=dotted];
m31_255 -> m31_256  [key=0, style=solid];
m31_255 -> m31_252  [key=0, style=solid];
m31_260 -> m31_261  [key=0, style=solid];
m31_260 -> m31_246  [key=0, style=solid];
m31_263 -> m31_243  [color=blue, key=0, style=bold];
m31_358 -> m31_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_68  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_69  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_78  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_96  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_101  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_108  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_112  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_114  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_115  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_121  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_134  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_144  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_154  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_157  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_183  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_189  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_204  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_211  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_217  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_218  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_219  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_232  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_246  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_248  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_249  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_254  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_259  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_272  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_273  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_276  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_280  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_283  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_286  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_287  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_294  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_295  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_297  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_301  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_303  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_309  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_313  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_316  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_329  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_347  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_350  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_353  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_358 -> m31_355  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m31_359 -> m31_179  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m31_360 -> m31_179  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
}
