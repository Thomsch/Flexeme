digraph  {
n0 [cluster="QuantConnect.Algorithm.Framework.Signals.ISignal.Clone()", label="Entry QuantConnect.Algorithm.Framework.Signals.ISignal.Clone()", span="58-58"];
n1 [cluster="QuantConnect.Algorithm.Framework.Signals.ISignal.Clone()", label="Exit QuantConnect.Algorithm.Framework.Signals.ISignal.Clone()", span="58-58"];
m0_0 [cluster="QuantConnect.Packets.Packet.Packet(QuantConnect.Packets.PacketType)", file="Packet.cs", label="Entry QuantConnect.Packets.Packet.Packet(QuantConnect.Packets.PacketType)", span="42-42"];
m0_1 [cluster="QuantConnect.Packets.Packet.Packet(QuantConnect.Packets.PacketType)", file="Packet.cs", label="Channel = ''''", span="44-44"];
m0_2 [cluster="QuantConnect.Packets.Packet.Packet(QuantConnect.Packets.PacketType)", file="Packet.cs", label="Type = type", span="45-45"];
m0_3 [cluster="QuantConnect.Packets.Packet.Packet(QuantConnect.Packets.PacketType)", file="Packet.cs", label="Exit QuantConnect.Packets.Packet.Packet(QuantConnect.Packets.PacketType)", span="42-42"];
m0_4 [file="Packet.cs", label="QuantConnect.Packets.Packet", span=""];
m1_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", file="Signal.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, decimal, decimal, string)", span="410-410"];
m1_42 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="Signal.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272"];
m1_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="Signal.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="915-915"];
m1_0 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.Initialize()", file="Signal.cs", label="Entry QuantConnect.Algorithm.CSharp.DividendAlgorithm.Initialize()", span="30-30"];
m1_1 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.Initialize()", file="Signal.cs", label="SetStartDate(1998, 01, 01)", span="32-32"];
m1_2 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.Initialize()", file="Signal.cs", label="SetEndDate(2006, 01, 01)", span="33-33"];
m1_3 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.Initialize()", file="Signal.cs", label="SetCash(100000)", span="34-34"];
m1_4 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.Initialize()", file="Signal.cs", label="AddSecurity(SecurityType.Equity, ''MSFT'', Resolution.Daily)", span="36-36"];
m1_5 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.Initialize()", file="Signal.cs", label="Securities[''MSFT''].SetDataNormalizationMode(DataNormalizationMode.Raw)", span="37-37"];
m1_6 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.Initialize()", file="Signal.cs", label="SetBrokerageModel(BrokerageName.TradierBrokerage)", span="42-42"];
m1_7 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.Initialize()", file="Signal.cs", label="Exit QuantConnect.Algorithm.CSharp.DividendAlgorithm.Initialize()", span="30-30"];
m1_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", file="Signal.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, decimal, decimal, string)", span="363-363"];
m1_32 [cluster="System.Console.WriteLine(string, params object[])", file="Signal.cs", label="Entry System.Console.WriteLine(string, params object[])", span="0-0"];
m1_30 [cluster="System.DateTime.ToString(string)", file="Signal.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m1_33 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Splits)", file="Signal.cs", label="Entry QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Splits)", span="75-75"];
m1_34 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Splits)", file="Signal.cs", label="Debug(''MSFT: '' + Securities[''MSFT''].Price)", span="77-77"];
m1_35 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Splits)", file="Signal.cs", label="var split = data[''MSFT'']", span="78-78"];
m1_36 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Splits)", file="Signal.cs", label="Console.WriteLine(''{0} >> SPLIT >> {1} - {2} - {3} - {4}'', split.Time.ToString(''o''), split.Symbol, split.SplitFactor, Portfolio.Cash, Portfolio[''MSFT''].Quantity)", span="79-79"];
m1_37 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Splits)", file="Signal.cs", label="Exit QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Splits)", span="75-75"];
m1_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="Signal.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070"];
m1_43 [cluster="System.Console.WriteLine(string, object)", file="Signal.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m1_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="Signal.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623"];
m1_14 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="Signal.cs", label="Entry QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="49-49"];
m1_15 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="Signal.cs", label="Transactions.OrdersCount == 0", span="51-51"];
m1_18 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="Signal.cs", label="StopMarketOrder(''MSFT'', -CalculateOrderQuantity(''MSFT'', .25), data[''MSFT''].Low/2)", span="56-56"];
m1_19 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="Signal.cs", label="LimitOrder(''MSFT'', -CalculateOrderQuantity(''MSFT'', .25), data[''MSFT''].High*2)", span="57-57"];
m1_16 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="Signal.cs", label="SetHoldings(''MSFT'', .5)", span="53-53"];
m1_17 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="Signal.cs", label="11: Debug(''Purchased Stock: '' + Securities[''MSFT''].Price)", span="55-55"];
m1_20 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="Signal.cs", label="Exit QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="49-49"];
m1_26 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Dividends)", file="Signal.cs", label="Entry QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Dividends)", span="65-65"];
m1_27 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Dividends)", file="Signal.cs", label="var dividend = data[''MSFT'']", span="67-67"];
m1_28 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Dividends)", file="Signal.cs", label="Console.WriteLine(''{0} >> DIVIDEND >> {1} - {2} - {3} - {4}'', dividend.Time.ToString(''o''), dividend.Symbol, dividend.Distribution.ToString(''C''), Portfolio.Cash, Portfolio[''MSFT''].Price.ToString(''C''))", span="68-68"];
m1_29 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Dividends)", file="Signal.cs", label="Exit QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnData(QuantConnect.Data.Market.Dividends)", span="65-65"];
m1_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="Signal.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095"];
m1_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="Signal.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="884-884"];
m1_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="Signal.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019"];
m1_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="Signal.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835"];
m1_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="Signal.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262"];
m1_12 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="Signal.cs", label="Entry QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="664-664"];
m1_31 [cluster="decimal.ToString(string)", file="Signal.cs", label="Entry decimal.ToString(string)", span="0-0"];
m1_38 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Signal.cs", label="Entry QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="82-82"];
m1_39 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Signal.cs", label="var order = Transactions.GetOrderById(orderEvent.OrderId)", span="85-85"];
m1_40 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Signal.cs", label="Console.WriteLine(''{0} >> ORDER >> '' + order, Time)", span="86-86"];
m1_41 [cluster="QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Signal.cs", label="Exit QuantConnect.Algorithm.CSharp.DividendAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="82-82"];
m1_44 [file="Signal.cs", label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", span=""];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="QuantConnect.Packets.PacketType", style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_4 -> m0_1  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
m0_4 -> m0_2  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_10  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_11  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_12  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_13  [key=2, style=dotted];
m1_7 -> m1_0  [color=blue, key=0, style=bold];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Splits", style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_22  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_30  [key=2, style=dotted];
m1_36 -> m1_32  [key=2, style=dotted];
m1_37 -> m1_33  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m1_14 -> m1_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_20  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_23  [key=2, style=dotted];
m1_18 -> m1_24  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_23  [key=2, style=dotted];
m1_19 -> m1_25  [key=2, style=dotted];
m1_16 -> m1_17  [color=red, key=0, style=solid];
m1_16 -> m1_21  [key=2, style=dotted];
m1_17 -> m1_18  [color=red, key=0, style=solid];
m1_17 -> m1_22  [color=red, key=2, style=dotted];
m1_20 -> m1_14  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=2, style=dotted];
m1_28 -> m1_31  [key=2, style=dotted];
m1_28 -> m1_32  [key=2, style=dotted];
m1_29 -> m1_26  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_42  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_43  [key=2, style=dotted];
m1_41 -> m1_38  [color=blue, key=0, style=bold];
m1_44 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_17  [color=red, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
m1_44 -> m1_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DividendAlgorithm", style=dashed];
}
