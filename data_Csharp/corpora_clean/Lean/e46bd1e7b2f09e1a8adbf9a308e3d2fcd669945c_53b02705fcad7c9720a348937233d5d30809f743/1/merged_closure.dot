digraph  {
n24 [label="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper", span=""];
n0 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="34-34"];
n1 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="Py.GIL()", span="36-36"];
n3 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="!model.HasAttr(attributeName)", span="40-40"];
n4 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="throw new NotImplementedException($''IAlphaModel.{attributeName} must be implemented. Please implement this missing method on {model.GetPythonType()}'');", span="42-42"];
n5 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="_model = model", span="46-46"];
n2 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="new[] { ''Update'', ''OnSecuritiesChanged'' }", span="38-38"];
n7 [cluster="Unk.GIL", label="Entry Unk.GIL", span=""];
n8 [cluster="Unk.HasAttr", label="Entry Unk.HasAttr", span=""];
n6 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="34-34"];
n9 [cluster="System.NotImplementedException.NotImplementedException(string)", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
n10 [cluster="Unk.GetPythonType", label="Entry Unk.GetPythonType", span=""];
n11 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="56-56"];
n12 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="Py.GIL()", span="58-58"];
n15 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="yield return insight.AsManagedObject(typeof(Insight)) as Insight;", span="63-63"];
n13 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="var insights = _model.Update(algorithm, data) as PyObject", span="60-60"];
n14 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label=insights, span="61-61"];
n17 [cluster="Unk.Update", label="Entry Unk.Update", span=""];
n16 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="56-56"];
n18 [cluster="Unk.AsManagedObject", label="Entry Unk.AsManagedObject", span=""];
n19 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="73-73"];
n20 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Py.GIL()", span="75-75"];
n21 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="_model.OnSecuritiesChanged(algorithm, changes)", span="77-77"];
n22 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="73-73"];
n23 [cluster="Unk.OnSecuritiesChanged", label="Entry Unk.OnSecuritiesChanged", span=""];
d6 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", color=green, community=0, label="var crypt = new SHA256Managed()", prediction=0, span="30-30"];
d5 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", label="Entry QuantConnect.Util.ApiExtensions.SHA256(string)", span="28-28"];
d7 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", color=green, community=0, label="var hash = new StringBuilder()", prediction=1, span="31-31"];
d13 [cluster="System.Security.Cryptography.SHA256Managed.SHA256Managed()", label="Entry System.Security.Cryptography.SHA256Managed.SHA256Managed()", span="0-0"];
d8 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", color=green, community=0, label="var crypto = crypt.ComputeHash(Encoding.UTF8.GetBytes(data), 0, Encoding.UTF8.GetByteCount(data))", prediction=2, span="32-32"];
d9 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", color=green, community=0, label=crypto, prediction=3, span="33-33"];
d15 [cluster="System.Text.Encoding.GetBytes(string)", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
d16 [cluster="System.Text.Encoding.GetByteCount(string)", label="Entry System.Text.Encoding.GetByteCount(string)", span="0-0"];
d17 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", span="0-0"];
d14 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
d10 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", color=green, community=0, label="hash.Append(theByte.ToString(''x2''))", prediction=1, span="35-35"];
d11 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", color=green, community=0, label="return hash.ToString();", prediction=1, span="37-37"];
d18 [cluster="byte.ToString(string)", label="Entry byte.ToString(string)", span="0-0"];
d19 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
d12 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", label="Exit QuantConnect.Util.ApiExtensions.SHA256(string)", span="28-28"];
d20 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
d2 [cluster="QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", label="return SHA256(data);", span="20-20"];
d1 [cluster="QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", label="var data = string.Format(''{0}:{1}'', token, timestamp)", span="19-19"];
d3 [cluster="QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", label="Exit QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", span="15-15"];
d0 [cluster="QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", label="Entry QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", span="15-15"];
d4 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
m0_128 [cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124"];
m0_132 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
m0_51 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", span="216-216"];
m0_54 [cluster="System.Collections.Generic.List<T>.List()", file="CommonAlphaModelTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_49 [cluster="object.GetType()", file="CommonAlphaModelTests.cs", label="Entry object.GetType()", span="0-0"];
m0_12 [cluster="QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.NullPortfolioConstructionModel()", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.NullPortfolioConstructionModel.NullPortfolioConstructionModel()", span="25-25"];
m0_95 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreatePythonAlphaModel()", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreatePythonAlphaModel()", span="149-149"];
m0_96 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreatePythonAlphaModel()", file="CommonAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreatePythonAlphaModel()", span="149-149"];
m0_126 [cluster="System.Convert.ToDecimal(double)", file="CommonAlphaModelTests.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m0_52 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="63-63"];
m0_13 [cluster="QuantConnect.Lean.Engine.HistoricalData.SineHistoryProvider.SineHistoryProvider(QuantConnect.Securities.SecurityManager)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.SineHistoryProvider.SineHistoryProvider(QuantConnect.Securities.SecurityManager)", span="48-48"];
m0_10 [cluster="System.Environment.SetEnvironmentVariable(string, string)", file="CommonAlphaModelTests.cs", label="Entry System.Environment.SetEnvironmentVariable(string, string)", span="0-0"];
m0_90 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="Entry lambda expression", span="138-138"];
m0_65 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="actualInsights.AddRange(e.Insights)", span="72-72"];
m0_68 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="Entry lambda expression", span="76-76"];
m0_64 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="Entry lambda expression", span="72-72"];
m0_66 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="Exit lambda expression", span="72-72"];
m0_69 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="x.Consolidators", span="76-76"];
m0_70 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="Exit lambda expression", span="76-76"];
m0_80 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="model.OnSecuritiesChanged(_algorithm, changes)", span="122-122"];
m0_79 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="Entry lambda expression", span="122-122"];
m0_81 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="Exit lambda expression", span="122-122"];
m0_91 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="model.OnSecuritiesChanged(_algorithm, changes)", span="138-138"];
m0_92 [cluster="lambda expression", file="CommonAlphaModelTests.cs", label="Exit lambda expression", span="138-138"];
m0_60 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="540-540"];
m0_61 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
m0_123 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="51-51"];
m0_153 [cluster="System.DateTime.Add(System.TimeSpan)", file="CommonAlphaModelTests.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m0_78 [cluster="Unk.DoesNotThrow", file="CommonAlphaModelTests.cs", label="Entry Unk.DoesNotThrow", span=""];
m0_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1400-1400"];
m0_82 [cluster="QuantConnect.Algorithm.Framework.INotifiedSecurityChanges.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Algorithm.Framework.INotifiedSecurityChanges.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="29-29"];
m0_134 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="103-103"];
m0_57 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="CommonAlphaModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m0_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1126-1126"];
m0_9 [cluster="System.IO.DirectoryInfo.DirectoryInfo(string)", file="CommonAlphaModelTests.cs", label="Entry System.IO.DirectoryInfo.DirectoryInfo(string)", span="0-0"];
m0_0 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.Initialize()", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.Initialize()", span="42-42"];
m0_1 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.Initialize()", file="CommonAlphaModelTests.cs", label="var pythonPath = new DirectoryInfo(''../../../Algorithm.Framework/Alphas'')", span="44-44"];
m0_2 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.Initialize()", file="CommonAlphaModelTests.cs", label="Environment.SetEnvironmentVariable(''PYTHONPATH'', pythonPath.FullName)", span="45-45"];
m0_3 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.Initialize()", file="CommonAlphaModelTests.cs", label="_algorithm = new QCAlgorithmFramework()", span="47-47"];
m0_4 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.Initialize()", file="CommonAlphaModelTests.cs", label="_algorithm.PortfolioConstruction = new NullPortfolioConstructionModel()", span="48-48"];
m0_5 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.Initialize()", file="CommonAlphaModelTests.cs", label="_algorithm.HistoryProvider = new SineHistoryProvider(_algorithm.Securities)", span="49-49"];
m0_6 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.Initialize()", file="CommonAlphaModelTests.cs", label="_algorithm.SetStartDate(2018, 1, 4)", span="50-50"];
m0_7 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.Initialize()", file="CommonAlphaModelTests.cs", label="_security = _algorithm.AddEquity(Symbols.SPY.Value, Resolution.Daily)", span="51-51"];
m0_8 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.Initialize()", file="CommonAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.Initialize()", span="42-42"];
m0_129 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="CommonAlphaModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m0_53 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="190-190"];
m0_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", span="43-43"];
m0_124 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", span="208-208"];
m0_135 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="var i = 0", span="210-210"];
m0_138 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="sliceDateTimes.Count < maxCount", span="214-214"];
m0_136 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="var sliceDateTimes = new List<DateTime>()", span="211-211"];
m0_150 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="i++", span="233-233"];
m0_137 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="var utcDateTime = _algorithm.StartDate", span="212-212"];
m0_149 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="sliceDateTimes.Add(utcDateTime)", span="231-231"];
m0_151 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="return sliceDateTimes;", span="237-237"];
m0_141 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="utcDateTime = utcDateTime.Add(resolution)", span="219-219"];
m0_139 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="_algorithm.Securities", span="216-216"];
m0_140 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="var resolution = kvp.Value.Resolution.ToTimeSpan()", span="218-218"];
m0_142 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="resolution == Time.OneDay && utcDateTime.TimeOfDay == TimeSpan.Zero", span="220-220"];
m0_144 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="var security = kvp.Value", span="225-225"];
m0_143 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="utcDateTime = utcDateTime.AddHours(17)", span="222-222"];
m0_147 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="var localDateTime = utcDateTime.ConvertFromUtc(exchange.TimeZone)", span="228-228"];
m0_145 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="var exchange = security.Exchange.Hours", span="226-226"];
m0_146 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="var extendedMarket = security.IsExtendedMarketHours", span="227-227"];
m0_148 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="exchange.IsOpen(localDateTime, extendedMarket)", span="229-229"];
m0_152 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", file="CommonAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.GetSliceDateTimes(int)", span="208-208"];
m0_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="874-874"];
m0_154 [cluster="System.DateTime.AddHours(double)", file="CommonAlphaModelTests.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m0_93 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateCSharpAlphaModel()", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateCSharpAlphaModel()", span="144-144"];
m0_94 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateCSharpAlphaModel()", file="CommonAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateCSharpAlphaModel()", span="144-144"];
m0_63 [cluster="Unk.AreEqual", file="CommonAlphaModelTests.cs", label="Entry Unk.AreEqual", span=""];
m0_48 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", span="240-240"];
m0_155 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="model = default(IAlphaModel)", span="242-242"];
m0_156 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label=language, span="246-246"];
m0_157 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="Language.CSharp", span="248-248"];
m0_160 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="Language.Python", span="251-251"];
m0_164 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="return false;", span="256-256"];
m0_158 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="model = CreateCSharpAlphaModel()", span="249-249"];
m0_159 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="return true;", span="250-250"];
m0_161 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="_algorithm.SetPandasConverter()", span="252-252"];
m0_162 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="model = CreatePythonAlphaModel()", span="253-253"];
m0_163 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="return true;", span="254-254"];
m0_166 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="return false;", span="261-261"];
m0_165 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="CommonAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.TryCreateModel(QuantConnect.Language, out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", span="240-240"];
m0_56 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="CommonAlphaModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m0_11 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="77-77"];
m0_62 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkData(QuantConnect.Data.Slice)", span="119-119"];
m0_58 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", span="169-169"];
m0_98 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var cashBook = new CashBook()", span="171-171"];
m0_120 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="yield return TimeSlice.Create(utcDateTime, TimeZones.NewYork, cashBook, packets, changes).Slice;", span="203-203"];
m0_99 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var changes = SecurityChanges.None", span="172-172"];
m0_100 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var sliceDateTimes = GetSliceDateTimes(360)", span="173-173"];
m0_101 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var i = 0", span="175-175"];
m0_102 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="i < sliceDateTimes.Count", span="175-175"];
m0_103 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var utcDateTime = sliceDateTimes[i]", span="177-177"];
m0_104 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var last = Convert.ToDecimal(100 + 10 * Math.Sin(Math.PI * i / 180.0))", span="178-178"];
m0_121 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="i++", span="175-175"];
m0_112 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var localDateTime = utcDateTime.ConvertFromUtc(exchange.TimeZone)", span="189-189"];
m0_116 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var time = (utcDateTime - period).ConvertFromUtc(configuration.DataTimeZone)", span="196-196"];
m0_105 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var high = last * 1.005m", span="179-179"];
m0_106 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var low = last / 1.005m", span="180-180"];
m0_117 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var tradeBar = new TradeBar(time, security.Symbol, last, high, low, last, 1000, period)", span="197-197"];
m0_107 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var packets = new List<DataFeedPacket>()", span="182-182"];
m0_108 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="_algorithm.Securities", span="184-184"];
m0_118 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="packets.Add(new DataFeedPacket(security, configuration, new List<BaseData> { tradeBar }))", span="198-198"];
m0_119 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="packets.Count > 0", span="201-201"];
m0_109 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var security = kvp.Value", span="186-186"];
m0_110 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var exchange = security.Exchange.Hours", span="187-187"];
m0_111 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var extendedMarket = security.IsExtendedMarketHours", span="188-188"];
m0_114 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var configuration = security.Subscriptions.FirstOrDefault()", span="194-194"];
m0_115 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="var period = security.Resolution.ToTimeSpan()", span="195-195"];
m0_113 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="!exchange.IsOpen(localDateTime, extendedMarket)", span="190-190"];
m0_122 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", file="CommonAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.CreateSlices()", span="169-169"];
m0_133 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CommonAlphaModelTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_50 [cluster="Unk.Ignore", file="CommonAlphaModelTests.cs", label="Entry Unk.Ignore", span=""];
m0_16 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", span="57-57"];
m0_17 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="IAlphaModel model", span="59-59"];
m0_18 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="!TryCreateModel(language, out model)", span="60-60"];
m0_19 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.Ignore($''Ignore {GetType().Name}: Could not create {language} model.'')", span="62-62"];
m0_20 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="_algorithm.SetAlpha(model)", span="66-66"];
m0_21 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="var changes = new SecurityChanges(AddedSecurities, RemovedSecurities)", span="68-68"];
m0_22 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="_algorithm.OnFrameworkSecuritiesChanged(changes)", span="69-69"];
m0_23 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="var actualInsights = new List<Insight>()", span="71-71"];
m0_24 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="_algorithm.InsightsGenerated += (s, e) => actualInsights.AddRange(e.Insights)", span="72-72"];
m0_35 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.AreEqual(actualInsights.Count, expectedInsights.Count)", span="94-94"];
m0_37 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="i < actualInsights.Count", span="96-96"];
m0_38 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="var actual = actualInsights[i]", span="98-98"];
m0_25 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="var expectedInsights = ExpectedInsights().ToList()", span="74-74"];
m0_26 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="var consolidators = _security.Subscriptions.SelectMany(x => x.Consolidators)", span="76-76"];
m0_39 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="var expected = expectedInsights[i]", span="99-99"];
m0_27 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="var slices = CreateSlices()", span="77-77"];
m0_32 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label=consolidators, span="86-86"];
m0_28 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="slices.ToList()", span="79-79"];
m0_29 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="_algorithm.SetDateTime(slice.Time)", span="81-81"];
m0_30 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="var data = slice[_security.Symbol]", span="83-83"];
m0_34 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="_algorithm.OnFrameworkData(slice)", span="91-91"];
m0_31 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="_security.SetMarketPrice(data)", span="84-84"];
m0_33 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="consolidator.Update(data)", span="88-88"];
m0_36 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="var i = 0", span="96-96"];
m0_46 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="i++", span="96-96"];
m0_40 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.AreEqual(actual.Symbol, expected.Symbol)", span="100-100"];
m0_41 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.AreEqual(actual.Type, expected.Type)", span="101-101"];
m0_42 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.AreEqual(actual.Direction, expected.Direction)", span="102-102"];
m0_43 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.AreEqual(actual.Period, expected.Period)", span="103-103"];
m0_44 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.AreEqual(actual.Magnitude, expected.Magnitude)", span="104-104"];
m0_45 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.AreEqual(actual.Confidence, expected.Confidence)", span="105-105"];
m0_47 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.InsightsGenerationTest(QuantConnect.Language)", span="57-57"];
m0_71 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.AddedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.AddedSecuritiesTest(QuantConnect.Language)", span="112-112"];
m0_72 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.AddedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="IAlphaModel model", span="114-114"];
m0_73 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.AddedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="!TryCreateModel(language, out model)", span="115-115"];
m0_74 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.AddedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.Ignore($''Ignore {GetType().Name}: Could not create {language} model.'')", span="117-117"];
m0_75 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.AddedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="var changes = new SecurityChanges(AddedSecurities, RemovedSecurities)", span="120-120"];
m0_76 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.AddedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.DoesNotThrow(() => model.OnSecuritiesChanged(_algorithm, changes))", span="122-122"];
m0_77 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.AddedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.AddedSecuritiesTest(QuantConnect.Language)", span="112-112"];
m0_55 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.ExpectedInsights()", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.ExpectedInsights()", span="154-154"];
m0_97 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.ExpectedInsights()", file="CommonAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.ExpectedInsights()", span="154-154"];
m0_125 [cluster="System.Math.Sin(double)", file="CommonAlphaModelTests.cs", label="Entry System.Math.Sin(double)", span="0-0"];
m0_130 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
m0_131 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m0_83 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.RemovedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.RemovedSecuritiesTest(QuantConnect.Language)", span="128-128"];
m0_84 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.RemovedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="IAlphaModel model", span="130-130"];
m0_85 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.RemovedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="!TryCreateModel(language, out model)", span="131-131"];
m0_86 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.RemovedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.Ignore($''Ignore {GetType().Name}: Could not create {language} model.'')", span="133-133"];
m0_87 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.RemovedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="var changes = new SecurityChanges(RemovedSecurities, AddedSecurities)", span="136-136"];
m0_88 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.RemovedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Assert.DoesNotThrow(() => model.OnSecuritiesChanged(_algorithm, changes))", span="138-138"];
m0_89 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.RemovedSecuritiesTest(QuantConnect.Language)", file="CommonAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests.RemovedSecuritiesTest(QuantConnect.Language)", span="128-128"];
m0_67 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CommonAlphaModelTests.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m0_127 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="CommonAlphaModelTests.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="606-606"];
m0_168 [file="CommonAlphaModelTests.cs", label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", span=""];
m0_169 [file="CommonAlphaModelTests.cs", label=actualInsights, span=""];
m0_170 [file="CommonAlphaModelTests.cs", label=model, span=""];
m0_171 [file="CommonAlphaModelTests.cs", label=changes, span=""];
m0_172 [file="CommonAlphaModelTests.cs", label=model, span=""];
m0_173 [file="CommonAlphaModelTests.cs", label=changes, span=""];
m3_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="42-42"];
m3_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="42-42"];
m3_11 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m3_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", span="118-118"];
m3_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", span="102-102"];
m3_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="DateTime generatedTimeUtc", span="104-104"];
m3_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol.TryGetValue(symbol, out generatedTimeUtc)", span="105-105"];
m3_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="utcTime - generatedTimeUtc < _period", span="109-109"];
m3_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol[symbol] = utcTime", span="117-117"];
m3_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="return false;", span="111-111"];
m3_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="return true;", span="118-118"];
m3_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", span="102-102"];
m3_25 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="32-32"];
m3_26 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m3_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75"];
m3_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="ConstantAlphaModel.cs", label=_securities, prediction=6, span="77-77"];
m3_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="ConstantAlphaModel.cs", label="yield return new Insight(security.Symbol, _period, _type, _direction, _magnitude, _confidence);", prediction=6, span="81-81"];
m3_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="ConstantAlphaModel.cs", label="ShouldEmitInsight(algorithm.UtcTime, security.Symbol)", prediction=6, span="79-79"];
m3_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75"];
m3_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="55-55"];
m3_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_type = type", span="57-57"];
m3_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_direction = direction", span="58-58"];
m3_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_period = period", span="59-59"];
m3_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_magnitude = magnitude", span="62-62"];
m3_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_confidence = confidence", span="63-63"];
m3_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_securities = new HashSet<Security>()", span="65-65"];
m3_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol = new Dictionary<Symbol, DateTime>()", span="66-66"];
m3_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="55-55"];
m3_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91"];
m3_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="NotifiedSecurityChanges.UpdateCollection(_securities, changes)", span="93-93"];
m3_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="changes.RemovedSecurities", span="96-96"];
m3_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol.Remove(removed.Symbol)", span="98-98"];
m3_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91"];
m3_12 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_35 [file="ConstantAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", span=""];
m4_0 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreateCSharpAlphaModel()", file="ConstantAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreateCSharpAlphaModel()", span="33-33"];
m4_1 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreateCSharpAlphaModel()", file="ConstantAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreateCSharpAlphaModel()", span="33-33"];
m4_13 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.ExpectedInsights()", file="ConstantAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.ExpectedInsights()", span="45-45"];
m4_14 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.ExpectedInsights()", file="ConstantAlphaModelTests.cs", label="return Enumerable.Range(0, 360).Select(x => new Insight(Symbols.SPY, _period, _type, _direction, _magnitude, _confidence));", span="47-47"];
m4_15 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.ExpectedInsights()", file="ConstantAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.ExpectedInsights()", span="45-45"];
m4_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="ConstantAlphaModelTests.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", span="118-118"];
m4_2 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", span="35-35"];
m4_3 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs", label="Py.GIL()", span="37-37"];
m4_4 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs", label="dynamic model = Py.Import(''ConstantAlphaModel'').GetAttr(''ConstantAlphaModel'')", span="39-39"];
m4_5 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs", label="var instance = model(_type, _direction, _period, _magnitude, _confidence)", span="40-40"];
m4_6 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs", label="return new AlphaModelPythonWrapper(instance);", span="41-41"];
m4_7 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", file="ConstantAlphaModelTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests.CreatePythonAlphaModel()", span="35-35"];
m4_9 [cluster="Unk.Import", file="ConstantAlphaModelTests.cs", label="Entry Unk.Import", span=""];
m4_16 [cluster="System.Linq.Enumerable.Range(int, int)", file="ConstantAlphaModelTests.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m4_11 [cluster="Unk.model", file="ConstantAlphaModelTests.cs", label="Entry Unk.model", span=""];
m4_17 [cluster="Unk.Select", file="ConstantAlphaModelTests.cs", label="Entry Unk.Select", span=""];
m4_8 [cluster="Unk.GIL", file="ConstantAlphaModelTests.cs", label="Entry Unk.GIL", span=""];
m4_10 [cluster="Unk.GetAttr", file="ConstantAlphaModelTests.cs", label="Entry Unk.GetAttr", span=""];
m4_18 [cluster="lambda expression", file="ConstantAlphaModelTests.cs", label="Entry lambda expression", span="47-47"];
m4_19 [cluster="lambda expression", file="ConstantAlphaModelTests.cs", label="new Insight(Symbols.SPY, _period, _type, _direction, _magnitude, _confidence)", span="47-47"];
m4_20 [cluster="lambda expression", file="ConstantAlphaModelTests.cs", label="Exit lambda expression", span="47-47"];
m4_22 [file="ConstantAlphaModelTests.cs", label="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests", span=""];
m7_166 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m7_167 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, date, resolution, tickType));", span="345-345"];
m7_168 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m7_148 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="748-748"];
m7_349 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(bar.Open, bar.High, bar.Low, bar.Close);", span="755-755"];
m7_348 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="752-752"];
m7_347 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="EmaCrossAlphaModelTests.cs", label="bar == null", span="750-750"];
m7_350 [cluster="QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.ToNonScaledCsv(QuantConnect.Data.Market.IBar)", span="748-748"];
m7_144 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.Scale(decimal)", span="708-708"];
m7_331 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="EmaCrossAlphaModelTests.cs", label="return (long)(value*10000);", span="710-710"];
m7_332 [cluster="QuantConnect.Util.LeanData.Scale(decimal)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.Scale(decimal)", span="708-708"];
m7_7 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m7_8 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", color=green, community=0, file="EmaCrossAlphaModelTests.cs", label="var milliseconds = data.Time.TimeOfDay.TotalMilliseconds.ToString(CultureInfo.InvariantCulture)", prediction=9, span="52-52"];
m7_9 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var longTime = data.Time.ToString(DateFormat.TwelveCharacter)", span="53-53"];
m7_15 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds, Scale(tick.LastPrice), tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'' : ''0'');", span="62-62"];
m7_19 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds, Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close), bar.Volume);", span="67-67"];
m7_31 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds, tick.LastPrice, tick.Quantity);", span="85-85"];
m7_33 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds, tick.BidPrice, tick.BidSize, tick.AskPrice, tick.AskSize);", span="89-89"];
m7_39 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds,\r\n                                    ToNonScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="97-99"];
m7_42 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds, tradeBar.Open, tradeBar.High, tradeBar.Low, tradeBar.Close, tradeBar.Volume);", span="104-104"];
m7_60 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds, tick.BidPrice, tick.AskPrice);", span="137-137"];
m7_66 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds,\r\n                                ToNonScaledCsv(bar.Bid), bar.LastBidSize,\r\n                                ToNonScaledCsv(bar.Ask), bar.LastAskSize);", span="143-145"];
m7_78 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tick.LastPrice), tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'' : ''0'');", span="164-165"];
m7_80 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tick.BidPrice), tick.BidSize, Scale(tick.AskPrice), tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="169-170"];
m7_82 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds, tick.Value);", span="174-174"];
m7_87 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds,\r\n                                    ToScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="184-186"];
m7_90 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds,\r\n                                    Scale(tradeBar.Open), Scale(tradeBar.High), Scale(tradeBar.Low), Scale(tradeBar.Close), tradeBar.Volume);", span="191-192"];
m7_93 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds, openInterest.Value);", span="197-197"];
m7_104 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds, bigOpenInterest.Value);", span="219-219"];
m7_111 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds,\r\n                                             tick.LastPrice, tick.Quantity, tick.Exchange, tick.SaleCondition, tick.Suspicious ? ''1'': ''0'');", span="234-235"];
m7_113 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds,\r\n                                             tick.BidPrice, tick.BidSize, tick.AskPrice, tick.AskSize, tick.Exchange, tick.Suspicious ? ''1'' : ''0'');", span="239-240"];
m7_115 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds, tick.Value);", span="244-244"];
m7_120 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds,\r\n                                    ToNonScaledCsv(quoteBar.Bid), quoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(quoteBar.Ask), quoteBar.LastAskSize);", span="254-256"];
m7_123 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds,\r\n                                             tradeBar.Open, tradeBar.High, tradeBar.Low, tradeBar.Close, tradeBar.Volume);", span="261-262"];
m7_126 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(milliseconds, openInterest.Value);", span="267-267"];
m7_10 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label=securityType, span="55-55"];
m7_12 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label=resolution, span="58-58"];
m7_14 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var tick = (Tick) data", span="61-61"];
m7_18 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bar = (TradeBar) data", span="66-66"];
m7_22 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bigBar = (TradeBar) data", span="71-71"];
m7_25 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label=resolution, span="77-77"];
m7_27 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var tick = data as Tick", span="80-80"];
m7_37 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var quoteBar = data as QuoteBar", span="94-94"];
m7_40 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var tradeBar = data as TradeBar", span="101-101"];
m7_46 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bigQuoteBar = data as QuoteBar", span="110-110"];
m7_49 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bigTradeBar = data as TradeBar", span="117-117"];
m7_55 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label=resolution, span="132-132"];
m7_57 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var tick = data as Tick", span="135-135"];
m7_63 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bar = data as QuoteBar", span="141-141"];
m7_69 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bigBar = data as QuoteBar", span="149-149"];
m7_74 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label=resolution, span="158-158"];
m7_76 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var tick = (Tick)data", span="161-161"];
m7_85 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var quoteBar = data as QuoteBar", span="181-181"];
m7_88 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var tradeBar = data as TradeBar", span="188-188"];
m7_91 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var openInterest = data as OpenInterest", span="194-194"];
m7_96 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bigQuoteBar = data as QuoteBar", span="204-204"];
m7_99 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bigTradeBar = data as TradeBar", span="211-211"];
m7_102 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bigOpenInterest = data as OpenInterest", span="216-216"];
m7_105 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="224-224"];
m7_107 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label=resolution, span="228-228"];
m7_109 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var tick = (Tick)data", span="231-231"];
m7_118 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var quoteBar = data as QuoteBar", span="251-251"];
m7_121 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var tradeBar = data as TradeBar", span="258-258"];
m7_124 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var openInterest = data as OpenInterest", span="264-264"];
m7_129 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bigQuoteBar = data as QuoteBar", span="274-274"];
m7_132 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bigTradeBar = data as TradeBar", span="281-281"];
m7_135 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var bigOpenInterest = data as OpenInterest", span="286-286"];
m7_138 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="294-294"];
m7_139 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new ArgumentOutOfRangeException(''securityType'', securityType, null);", span="299-299"];
m7_140 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new NotImplementedException(''LeanData.GenerateLine has not yet been implemented for security type: '' + securityType + '' at resolution: '' + resolution);", span="302-302"];
m7_23 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(longTime, Scale(bigBar.Open), Scale(bigBar.High), Scale(bigBar.Low), Scale(bigBar.Close), bigBar.Volume);", span="72-72"];
m7_48 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(longTime,\r\n                                    ToNonScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="113-115"];
m7_51 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(longTime,\r\n                                             bigTradeBar.Open,\r\n                                             bigTradeBar.High,\r\n                                             bigTradeBar.Low,\r\n                                             bigTradeBar.Close,\r\n                                             bigTradeBar.Volume);", span="120-125"];
m7_72 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(longTime,\r\n                                ToNonScaledCsv(bigBar.Bid), bigBar.LastBidSize,\r\n                                ToNonScaledCsv(bigBar.Ask), bigBar.LastAskSize);", span="151-153"];
m7_98 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(longTime,\r\n                                    ToScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="207-209"];
m7_101 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(longTime, ToScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="214-214"];
m7_131 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(longTime,\r\n                                    ToNonScaledCsv(bigQuoteBar.Bid), bigQuoteBar.LastBidSize,\r\n                                    ToNonScaledCsv(bigQuoteBar.Ask), bigQuoteBar.LastAskSize);", span="277-279"];
m7_134 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(longTime, ToNonScaledCsv(bigTradeBar), bigTradeBar.Volume);", span="284-284"];
m7_137 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(longTime, bigOpenInterest.Value);", span="289-289"];
m7_30 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tick.TickType == TickType.Trade", span="83-83"];
m7_32 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tick.TickType == TickType.Quote", span="87-87"];
m7_38 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="quoteBar != null", span="95-95"];
m7_41 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tradeBar != null", span="102-102"];
m7_58 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tick == null", span="136-136"];
m7_64 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="bar == null", span="142-142"];
m7_77 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tick.TickType == TickType.Trade", span="162-162"];
m7_79 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tick.TickType == TickType.Quote", span="167-167"];
m7_81 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tick.TickType == TickType.OpenInterest", span="172-172"];
m7_86 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="quoteBar != null", span="182-182"];
m7_89 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tradeBar != null", span="189-189"];
m7_92 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="openInterest != null", span="195-195"];
m7_103 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="bigOpenInterest != null", span="217-217"];
m7_110 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tick.TickType == TickType.Trade", span="232-232"];
m7_112 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tick.TickType == TickType.Quote", span="237-237"];
m7_114 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tick.TickType == TickType.OpenInterest", span="242-242"];
m7_119 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="quoteBar != null", span="252-252"];
m7_122 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tradeBar != null", span="259-259"];
m7_125 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="openInterest != null", span="265-265"];
m7_29 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new NullReferenceException(''Cryto tick could not be created'');", span="81-81"];
m7_34 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new ArgumentException(''Cryto tick could not be created'');", span="91-91"];
m7_43 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new NullReferenceException(''Cryto minute/second bar could not be created'');", span="106-106"];
m7_52 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new NullReferenceException(''Cryto hour/daily bar could not be created'');", span="127-127"];
m7_59 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new NullReferenceException(''tick'');", span="136-136"];
m7_65 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new NullReferenceException(''bar'');", span="142-142"];
m7_71 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new NullReferenceException(''big bar'');", span="150-150"];
m7_11 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Equity", span="57-57"];
m7_24 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Crypto", span="76-76"];
m7_53 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Forex", span="130-130"];
m7_73 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Option", span="157-157"];
m7_106 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Future", span="227-227"];
m7_13 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Tick", span="60-60"];
m7_16 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Minute", span="64-64"];
m7_20 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Hour", span="69-69"];
m7_17 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Second", span="65-65"];
m7_21 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Daily", span="70-70"];
m7_26 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Tick", span="79-79"];
m7_35 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Second", span="92-92"];
m7_44 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Hour", span="108-108"];
m7_28 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="tick == null", span="81-81"];
m7_36 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Minute", span="93-93"];
m7_45 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Daily", span="109-109"];
m7_47 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="bigQuoteBar != null", span="111-111"];
m7_50 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="bigTradeBar != null", span="118-118"];
m7_54 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Cfd", span="131-131"];
m7_56 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Tick", span="134-134"];
m7_61 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Second", span="139-139"];
m7_67 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Hour", span="147-147"];
m7_62 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Minute", span="140-140"];
m7_68 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Daily", span="148-148"];
m7_70 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="bigBar == null", span="150-150"];
m7_75 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Tick", span="160-160"];
m7_83 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Second", span="178-178"];
m7_94 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Hour", span="201-201"];
m7_84 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Minute", span="179-179"];
m7_95 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Daily", span="202-202"];
m7_97 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="bigQuoteBar != null", span="205-205"];
m7_100 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="bigTradeBar != null", span="212-212"];
m7_108 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Tick", span="230-230"];
m7_116 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Second", span="248-248"];
m7_127 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Hour", span="271-271"];
m7_117 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Minute", span="249-249"];
m7_128 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Resolution.Daily", span="272-272"];
m7_130 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="bigQuoteBar != null", span="275-275"];
m7_133 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="bigTradeBar != null", span="282-282"];
m7_136 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="bigOpenInterest != null", span="287-287"];
m7_141 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m7_149 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="734-734"];
m7_345 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(Scale(bar.Open), Scale(bar.High), Scale(bar.Low), Scale(bar.Close));", span="741-741"];
m7_344 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="EmaCrossAlphaModelTests.cs", label="return ToCsv(string.Empty, string.Empty, string.Empty, string.Empty);", span="738-738"];
m7_343 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="EmaCrossAlphaModelTests.cs", label="bar == null", span="736-736"];
m7_346 [cluster="QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.ToScaledCsv(QuantConnect.Data.Market.IBar)", span="734-734"];
m7_393 [cluster="string.GetExtension()", file="EmaCrossAlphaModelTests.cs", label="Entry string.GetExtension()", span="410-410"];
m7_403 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m7_390 [cluster="System.Enum.GetNames(System.Type)", file="EmaCrossAlphaModelTests.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m7_145 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.ToCsv(params object[])", span="716-716"];
m7_333 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="EmaCrossAlphaModelTests.cs", label="var i = 0", span="719-719"];
m7_334 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="EmaCrossAlphaModelTests.cs", label="i < args.Length", span="719-719"];
m7_335 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="EmaCrossAlphaModelTests.cs", label="var value = args[i]", span="721-721"];
m7_337 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="EmaCrossAlphaModelTests.cs", label="args[i] = ((decimal) value).Normalize().ToString(CultureInfo.InvariantCulture)", span="724-724"];
m7_339 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="EmaCrossAlphaModelTests.cs", label="return string.Join('','', args);", span="728-728"];
m7_338 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="EmaCrossAlphaModelTests.cs", label="i++", span="719-719"];
m7_336 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="EmaCrossAlphaModelTests.cs", label="value is decimal", span="722-722"];
m7_340 [cluster="QuantConnect.Util.LeanData.ToCsv(params object[])", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.ToCsv(params object[])", span="716-716"];
m7_323 [cluster="string.Split(params char[])", file="EmaCrossAlphaModelTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m7_341 [cluster="decimal.Normalize()", file="EmaCrossAlphaModelTests.cs", label="Entry decimal.Normalize()", span="234-234"];
m7_205 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="552-552"];
m7_256 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="555-555"];
m7_255 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="var tickTypeString = tickType.ToLower()", span="554-554"];
m7_257 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="556-556"];
m7_265 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString\r\n                        );", span="571-574"];
m7_269 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString\r\n                    );", span="584-587"];
m7_273 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}_{2}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString,\r\n                        symbol.ID.OptionStyle.ToLower()\r\n                        );", span="598-602"];
m7_277 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                        formattedDate,\r\n                        tickTypeString);", span="612-614"];
m7_264 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}.zip'',\r\n                            symbol.Value.ToLower()\r\n                            );", span="566-568"];
m7_268 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                            symbol.Value.ToLower(),\r\n                            tickTypeString\r\n                        );", span="578-581"];
m7_272 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}_{2}.zip'',\r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickTypeString,\r\n                            symbol.ID.OptionStyle.ToLower()\r\n                            );", span="591-595"];
m7_276 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}.zip'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickTypeString);", span="607-609"];
m7_258 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="symbol.ID.SecurityType", span="558-558"];
m7_263 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label=isHourOrDaily, span="564-564"];
m7_267 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label=isHourOrDaily, span="576-576"];
m7_271 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label=isHourOrDaily, span="589-589"];
m7_275 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label=isHourOrDaily, span="605-605"];
m7_279 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="throw new ArgumentOutOfRangeException();", span="618-618"];
m7_259 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Base", span="560-560"];
m7_266 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Crypto", span="575-575"];
m7_270 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Option", span="588-588"];
m7_274 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Future", span="604-604"];
m7_278 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Commodity", span="616-616"];
m7_262 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Cfd", span="563-563"];
m7_260 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Equity", span="561-561"];
m7_261 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Forex", span="562-562"];
m7_280 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="552-552"];
m7_407 [cluster="lambda expression", file="EmaCrossAlphaModelTests.cs", label="Entry lambda expression", span="816-816"];
m7_411 [cluster="lambda expression", file="EmaCrossAlphaModelTests.cs", label="securityTypes.Contains(x.ToLower())", span="825-825"];
m7_405 [cluster="lambda expression", file="EmaCrossAlphaModelTests.cs", label="x.ToLower()", span="808-808"];
m7_410 [cluster="lambda expression", file="EmaCrossAlphaModelTests.cs", label="Entry lambda expression", span="825-825"];
m7_412 [cluster="lambda expression", file="EmaCrossAlphaModelTests.cs", label="Exit lambda expression", span="825-825"];
m7_404 [cluster="lambda expression", file="EmaCrossAlphaModelTests.cs", label="Entry lambda expression", span="808-808"];
m7_406 [cluster="lambda expression", file="EmaCrossAlphaModelTests.cs", label="Exit lambda expression", span="808-808"];
m7_408 [cluster="lambda expression", file="EmaCrossAlphaModelTests.cs", label="x == fileName.First()", span="816-816"];
m7_409 [cluster="lambda expression", file="EmaCrossAlphaModelTests.cs", label="Exit lambda expression", span="816-816"];
m7_150 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="EmaCrossAlphaModelTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m7_400 [cluster="string.Substring(int, int)", file="EmaCrossAlphaModelTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m7_328 [cluster="QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Securities.Future.FuturesExpiryFunctions.FuturesExpiryFunction(string)", span="29-29"];
m7_146 [cluster="System.NullReferenceException.NullReferenceException(string)", file="EmaCrossAlphaModelTests.cs", label="Entry System.NullReferenceException.NullReferenceException(string)", span="0-0"];
m7_202 [cluster="System.IO.Path.Combine(params string[])", file="EmaCrossAlphaModelTests.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m7_365 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="801-801"];
m7_381 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new ArgumentException(''LeanData.TryParsePath(): Options and futures are not supported by this method.'');", span="835-835"];
m7_380 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="securityType == SecurityType.Option || securityType == SecurityType.Future", span="833-833"];
m7_388 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return true;", span="852-852"];
m7_370 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var securityTypes = Enum.GetNames(typeof(SecurityType)).Select(x => x.ToLower()).ToList()", span="808-808"];
m7_379 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var securityType = (SecurityType)Enum.Parse(typeof(SecurityType), info[startIndex], true)", span="831-831"];
m7_382 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="resolution < Resolution.Hour", span="839-839"];
m7_384 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="symbol = Symbol.Create(ticker, securityType, market)", span="844-844"];
m7_369 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var pathSeparators = new[] { '/', '\\'}", span="807-807"];
m7_371 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="fileName = fileName.Replace(fileName.GetExtension(), '''')", span="813-813"];
m7_375 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var startIndex = info.FindIndex(x => securityTypes.Contains(x.ToLower()))", span="825-825"];
m7_374 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var info = fileName.Split(pathSeparators, StringSplitOptions.RemoveEmptyEntries).ToList()", span="822-822"];
m7_378 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="resolution = (Resolution)Enum.Parse(typeof(Resolution), info[startIndex + 2], true)", span="830-830"];
m7_383 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="date = DateTime.ParseExact(info[startIndex + 4].Substring(0, 8), DateFormat.EightCharacter, null)", span="841-841"];
m7_376 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var market = info[startIndex + 1]", span="828-828"];
m7_377 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var ticker = info[startIndex + 3]", span="829-829"];
m7_385 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label=Exception, span="846-846"];
m7_368 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="date = default(DateTime)", span="805-805"];
m7_387 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return false;", span="849-849"];
m7_372 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="fileName.First() == '.' || pathSeparators.Any(x => x == fileName.First())", span="816-816"];
m7_373 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="fileName = fileName.Remove(0, 1)", span="818-818"];
m7_386 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Log.Error(''LeanData.TryParsePath(): Error encountered while parsing the path {0}. Error: {1}'', fileName, ex.GetBaseException())", span="848-848"];
m7_367 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="resolution = Resolution.Daily", span="804-804"];
m7_366 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="symbol = null", span="803-803"];
m7_389 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="801-801"];
m7_143 [cluster="System.DateTime.ToString(string)", file="EmaCrossAlphaModelTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m7_254 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="526-526"];
m7_253 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'', date.ToString(DateFormat.EightCharacter), symbol, resolution.ToLower(), dataType.ToLower());", span="546-546"];
m7_247 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="throw new NotImplementedException(''This method only implements base, equity, forex, crypto and cfd security type.'');", span="530-530"];
m7_245 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="526-526"];
m7_248 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="symbol = symbol.ToLower()", span="533-533"];
m7_251 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="541-541"];
m7_252 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="dataType = TickType.Quote", span="543-543"];
m7_246 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="securityType != SecurityType.Base && securityType != SecurityType.Equity && securityType != SecurityType.Forex && securityType != SecurityType.Cfd && securityType != SecurityType.Crypto", span="528-528"];
m7_249 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="535-535"];
m7_250 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return symbol + ''.csv'';", span="537-537"];
m7_392 [cluster="Unk.ToList", file="EmaCrossAlphaModelTests.cs", label="Entry Unk.ToList", span=""];
m7_195 [cluster="System.Enum.ToLower()", file="EmaCrossAlphaModelTests.cs", label="Entry System.Enum.ToLower()", span="879-879"];
m7_401 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m7_196 [cluster="string.ToLower()", file="EmaCrossAlphaModelTests.cs", label="Entry string.ToLower()", span="0-0"];
m7_147 [cluster="System.ArgumentException.ArgumentException(string)", file="EmaCrossAlphaModelTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m7_5 [cluster="QuantConnect.Data.IBaseData.Clone()", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Data.IBaseData.Clone()", span="99-99"];
m7_171 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m7_172 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return Path.Combine(dataDirectory, GenerateRelativeZipFilePath(symbol, securityType, market, date, resolution));", span="353-353"];
m7_173 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFilePath(string, string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="351-351"];
m7_326 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="EmaCrossAlphaModelTests.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m7_342 [cluster="decimal.ToString(System.IFormatProvider)", file="EmaCrossAlphaModelTests.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m7_402 [cluster="System.Exception.GetBaseException()", file="EmaCrossAlphaModelTests.cs", label="Entry System.Exception.GetBaseException()", span="0-0"];
m7_211 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="625-625"];
m7_284 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="EmaCrossAlphaModelTests.cs", label="var zipFileName = date.ToString(DateFormat.EightCharacter)", span="632-632"];
m7_282 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="EmaCrossAlphaModelTests.cs", label="resolution == Resolution.Hour || resolution == Resolution.Daily", span="627-627"];
m7_285 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="EmaCrossAlphaModelTests.cs", label="tickType = tickType ?? (securityType == SecurityType.Forex || securityType == SecurityType.Cfd ? TickType.Quote : TickType.Trade)", span="633-633"];
m7_287 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="EmaCrossAlphaModelTests.cs", label="return zipFileName + suffix;", span="635-635"];
m7_283 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="EmaCrossAlphaModelTests.cs", label="return symbol.ToLower() + ''.zip'';", span="629-629"];
m7_286 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="EmaCrossAlphaModelTests.cs", label="var suffix = string.Format(''_{0}.zip'', tickType.Value.ToLower())", span="634-634"];
m7_288 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipFileName(string, QuantConnect.SecurityType, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType?)", span="625-625"];
m7_241 [cluster="string.Format(string, object)", file="EmaCrossAlphaModelTests.cs", label="Entry string.Format(string, object)", span="0-0"];
m7_325 [cluster="decimal.Parse(string)", file="EmaCrossAlphaModelTests.cs", label="Entry decimal.Parse(string)", span="0-0"];
m7_322 [cluster="string.Replace(string, string)", file="EmaCrossAlphaModelTests.cs", label="Entry string.Replace(string, string)", span="0-0"];
m7_330 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="147-147"];
m7_398 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="EmaCrossAlphaModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m7_296 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var parts = zipEntryName.Replace(''.csv'', string.Empty).Split('_')", span="662-662"];
m7_320 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="throw new NotImplementedException(''ReadSymbolFromZipEntry is not implemented for '' + symbol.ID.SecurityType + '' '' + resolution);", span="701-701"];
m7_294 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="659-659"];
m7_297 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="symbol.ID.SecurityType", span="663-663"];
m7_321 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="659-659"];
m7_295 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var isHourlyOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="661-661"];
m7_304 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="return Symbol.CreateOption(symbol.Underlying, Market.USA, style, right, strike, expiry);", span="672-672"];
m7_309 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="return Symbol.CreateOption(symbol.Underlying, Market.USA, style, right, strike, expiry);", span="680-680"];
m7_298 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Option", span="665-665"];
m7_310 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Future", span="684-684"];
m7_315 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="return Symbol.CreateFuture(parts[0], Market.USA, futureExpiry);", span="690-690"];
m7_319 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="return Symbol.CreateFuture(parts[1], Market.USA, futureExpiry);", span="697-697"];
m7_299 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label=isHourlyOrDaily, span="666-666"];
m7_311 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label=isHourlyOrDaily, span="685-685"];
m7_300 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[2], true)", span="668-668"];
m7_301 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[3], true)", span="669-669"];
m7_302 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var strike = decimal.Parse(parts[4]) / 10000m", span="670-670"];
m7_303 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var expiry = DateTime.ParseExact(parts[5], DateFormat.EightCharacter, null)", span="671-671"];
m7_305 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var style = (OptionStyle)Enum.Parse(typeof(OptionStyle), parts[4], true)", span="676-676"];
m7_306 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var right = (OptionRight)Enum.Parse(typeof(OptionRight), parts[5], true)", span="677-677"];
m7_307 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var strike = decimal.Parse(parts[6]) / 10000m", span="678-678"];
m7_308 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var expiry = DateTime.ParseExact(parts[7], DateFormat.EightCharacter, null)", span="679-679"];
m7_312 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var expiryYearMonth = DateTime.ParseExact(parts[2], DateFormat.YearMonth, null)", span="687-687"];
m7_313 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var futureExpiryFunc = FuturesExpiryFunctions.FuturesExpiryFunction(parts[1])", span="688-688"];
m7_316 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var expiryYearMonth = DateTime.ParseExact(parts[4], DateFormat.YearMonth, null)", span="694-694"];
m7_317 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var futureExpiryFunc = FuturesExpiryFunctions.FuturesExpiryFunction(parts[1])", span="695-695"];
m7_314 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var futureExpiry = futureExpiryFunc(expiryYearMonth)", span="689-689"];
m7_318 [cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", file="EmaCrossAlphaModelTests.cs", label="var futureExpiry = futureExpiryFunc(expiryYearMonth)", span="696-696"];
m7_6 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="EmaCrossAlphaModelTests.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m7_244 [cluster="string.Join(string, params string[])", file="EmaCrossAlphaModelTests.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m7_395 [cluster="Unk.Any", file="EmaCrossAlphaModelTests.cs", label="Entry Unk.Any", span=""];
m7_170 [cluster="System.IO.Path.Combine(string, string)", file="EmaCrossAlphaModelTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m7_199 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="391-391"];
m7_200 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="EmaCrossAlphaModelTests.cs", label="return Path.Combine(Globals.DataFolder,\r\n                                        ''equity'',\r\n                                        symbol.ID.Market,\r\n                                        ''factor_files'',\r\n                                        symbol.Value.ToLower() + ''.csv'');", span="393-397"];
m7_201 [cluster="QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)", span="391-391"];
m7_397 [cluster="string.Split(char[], System.StringSplitOptions)", file="EmaCrossAlphaModelTests.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m7_240 [cluster="string.Format(string, params object[])", file="EmaCrossAlphaModelTests.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m7_174 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="411-411"];
m7_206 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var directory = Path.Combine(securityType.ToLower(), market.ToLower(), resolution.ToLower())", span="413-413"];
m7_208 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="directory = Path.Combine(directory, symbol.ToLower())", span="416-416"];
m7_209 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return Path.Combine(directory, GenerateZipFileName(symbol, securityType, date, resolution));", span="419-419"];
m7_207 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="resolution != Resolution.Daily && resolution != Resolution.Hour", span="414-414"];
m7_210 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(string, QuantConnect.SecurityType, string, System.DateTime, QuantConnect.Resolution)", span="411-411"];
m7_281 [cluster="string.Format(string, object, object, object)", file="EmaCrossAlphaModelTests.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m7_0 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", span="40-40"];
m7_3 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="EmaCrossAlphaModelTests.cs", label="return GenerateLine(clone, clone.Symbol.ID.SecurityType, resolution);", span="44-44"];
m7_1 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="EmaCrossAlphaModelTests.cs", label="var clone = data.Clone()", span="42-42"];
m7_2 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="EmaCrossAlphaModelTests.cs", label="clone.Time = data.Time.ConvertTo(exchangeTimeZone, dataTimeZone)", span="43-43"];
m7_4 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.Resolution, DateTimeZone, DateTimeZone)", span="40-40"];
m7_329 [cluster="System.Func<T, TResult>.Invoke(T)", file="EmaCrossAlphaModelTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m7_198 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="EmaCrossAlphaModelTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m7_396 [cluster="string.Remove(int, int)", file="EmaCrossAlphaModelTests.cs", label="Entry string.Remove(int, int)", span="0-0"];
m7_169 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m7_203 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return Path.Combine(GenerateRelativeZipFileDirectory(symbol, resolution), GenerateZipFileName(symbol, date, resolution, tickType));", span="405-405"];
m7_204 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m7_242 [cluster="string.Format(string, object, object)", file="EmaCrossAlphaModelTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m7_239 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m7_213 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="var formattedDate = date.ToString(DateFormat.EightCharacter)", span="427-427"];
m7_231 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Join(''_'',\r\n                            symbol.Underlying.Value.ToLower(), // underlying\r\n                            tickType.ToLower(),\r\n                            symbol.ID.OptionStyle.ToLower(),\r\n                            symbol.ID.OptionRight.ToLower(),\r\n                            Scale(symbol.ID.StrikePrice),\r\n                            symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                            ) + ''.csv'';", span="478-485"];
m7_232 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.Underlying.Value.ToLower(), // underlying\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.OptionStyle.ToLower(),\r\n                        symbol.ID.OptionRight.ToLower(),\r\n                        Scale(symbol.ID.StrikePrice),\r\n                        symbol.ID.Date.ToString(DateFormat.EightCharacter)\r\n                        ) + ''.csv'';", span="488-497"];
m7_235 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Join(''_'',\r\n                            symbol.ID.Symbol.ToLower(),\r\n                            tickType.ToLower(),\r\n                            symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                            ) + ''.csv'';", span="502-506"];
m7_236 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Join(''_'',\r\n                        formattedDate,\r\n                        symbol.ID.Symbol.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower(),\r\n                        symbol.ID.Date.ToString(DateFormat.YearMonth)\r\n                        ) + ''.csv'';", span="509-515"];
m7_212 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m7_214 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="428-428"];
m7_221 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'',\r\n                            formattedDate,\r\n                            symbol.Value.ToLower(),\r\n                            tickType,\r\n                            resolution\r\n                        );", span="438-443"];
m7_224 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'',\r\n                        formattedDate,\r\n                        symbol.Value.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower()\r\n                        );", span="453-458"];
m7_228 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}_{2}_{3}.csv'',\r\n                        formattedDate,\r\n                        symbol.Value.ToLower(),\r\n                        resolution.ToLower(),\r\n                        tickType.ToLower()\r\n                    );", span="469-474"];
m7_230 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label=isHourOrDaily, span="476-476"];
m7_234 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label=isHourOrDaily, span="500-500"];
m7_215 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="symbol.ID.SecurityType", span="430-430"];
m7_220 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="resolution == Resolution.Tick && symbol.SecurityType == SecurityType.Equity", span="436-436"];
m7_223 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}.csv'',\r\n                            symbol.Value.ToLower()\r\n                            );", span="448-450"];
m7_227 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="return string.Format(''{0}_{1}.csv'',\r\n                            symbol.Value.ToLower(),\r\n                            tickType.ToLower()\r\n                        );", span="463-466"];
m7_222 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label=isHourOrDaily, span="446-446"];
m7_226 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label=isHourOrDaily, span="461-461"];
m7_229 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Option", span="475-475"];
m7_238 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="throw new ArgumentOutOfRangeException();", span="519-519"];
m7_233 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Future", span="499-499"];
m7_216 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Base", span="432-432"];
m7_225 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Crypto", span="460-460"];
m7_237 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Commodity", span="517-517"];
m7_219 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Cfd", span="435-435"];
m7_217 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Equity", span="433-433"];
m7_218 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Forex", span="434-434"];
m7_175 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="359-359"];
m7_178 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var market = symbol.ID.Market.ToLower()", span="363-363"];
m7_187 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.Value.ToLower()) : directory;", span="373-373"];
m7_189 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.Underlying.Value.ToLower()) : directory;", span="377-377"];
m7_191 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="return !isHourOrDaily ? Path.Combine(directory, symbol.ID.Symbol.ToLower()) : directory;", span="380-380"];
m7_177 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var securityType = symbol.ID.SecurityType.ToLower()", span="362-362"];
m7_179 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var res = resolution.ToLower()", span="364-364"];
m7_180 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var directory = Path.Combine(securityType, market, res)", span="365-365"];
m7_176 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="var isHourOrDaily = resolution == Resolution.Hour || resolution == Resolution.Daily", span="361-361"];
m7_186 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Crypto", span="372-372"];
m7_188 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Option", span="375-375"];
m7_190 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Future", span="379-379"];
m7_193 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="throw new ArgumentOutOfRangeException();", span="384-384"];
m7_181 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="symbol.ID.SecurityType", span="366-366"];
m7_185 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Cfd", span="371-371"];
m7_192 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Commodity", span="382-382"];
m7_182 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Base", span="368-368"];
m7_184 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Forex", span="370-370"];
m7_183 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="SecurityType.Equity", span="369-369"];
m7_194 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", file="EmaCrossAlphaModelTests.cs", label="Exit QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol, QuantConnect.Resolution)", span="359-359"];
m7_413 [cluster="Unk.Contains", file="EmaCrossAlphaModelTests.cs", label="Entry Unk.Contains", span=""];
m7_399 [cluster="System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", file="EmaCrossAlphaModelTests.cs", label="Entry System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", span="0-0"];
m7_324 [cluster="System.Enum.Parse(System.Type, string, bool)", file="EmaCrossAlphaModelTests.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m7_394 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="EmaCrossAlphaModelTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m7_142 [cluster="double.ToString(System.IFormatProvider)", file="EmaCrossAlphaModelTests.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m7_327 [cluster="QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", file="EmaCrossAlphaModelTests.cs", label="Entry QuantConnect.Symbol.CreateOption(QuantConnect.Symbol, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string)", span="119-119"];
m7_391 [cluster="Unk.Select", file="EmaCrossAlphaModelTests.cs", label="Entry Unk.Select", span=""];
m7_243 [cluster="string.Join(string, params object[])", file="EmaCrossAlphaModelTests.cs", label="Entry string.Join(string, params object[])", span="0-0"];
m7_197 [cluster="System.IO.Path.Combine(string, string, string)", file="EmaCrossAlphaModelTests.cs", label="Entry System.IO.Path.Combine(string, string, string)", span="0-0"];
m7_415 [file="EmaCrossAlphaModelTests.cs", label=securityTypes, span=""];
m7_414 [file="EmaCrossAlphaModelTests.cs", label=string, span=""];
m8_0 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="IAlphaModel.cs", label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="38-38"];
m8_1 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="IAlphaModel.cs", label="Exit QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="38-38"];
m11_68 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", span="113-113"];
m11_69 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var left = new Identity(''left'')", span="115-115"];
m11_70 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var right = new Identity(''right'')", span="116-116"];
m11_71 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var composite = left.Plus(right)", span="117-117"];
m11_72 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="left.Update(DateTime.Today, 1m)", span="119-119"];
m11_75 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="left.Update(DateTime.Today, 2m)", span="123-123"];
m11_77 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="left.Update(DateTime.Today, 3m)", span="126-126"];
m11_73 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="right.Update(DateTime.Today, 1m)", span="120-120"];
m11_79 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="right.Update(DateTime.Today, 4m)", span="129-129"];
m11_74 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(2m, composite.Current.Value)", span="121-121"];
m11_76 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(2m, composite.Current.Value)", span="124-124"];
m11_78 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(2m, composite.Current.Value)", span="127-127"];
m11_80 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(7m, composite.Current.Value)", span="130-130"];
m11_81 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PlusAddsLeftAndRightAfterBothUpdated()", span="113-113"];
m11_40 [cluster="QuantConnect.Indicators.Identity.Identity(string)", file="Insight.cs", label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27"];
m11_14 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="Insight.cs", label="Assert.AreEqual(1.5m, second.Current.Value)", span="47-47"];
m11_15 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="Insight.cs", label="first.Update(data3)", span="50-50"];
m11_16 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="Insight.cs", label="Assert.IsTrue(second.IsReady)", span="51-51"];
m11_17 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="Insight.cs", label="Assert.AreEqual(1.5m, second.Current.Value)", span="52-52"];
m11_41 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="Insight.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="34-34"];
m11_21 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", file="Insight.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", span="56-56"];
m11_22 [cluster="QuantConnect.Indicators.Delay.Delay(int)", file="Insight.cs", label="Entry QuantConnect.Indicators.Delay.Delay(int)", span="26-26"];
m11_23 [cluster="TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", file="Insight.cs", label="Entry TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", span="47-47"];
m11_113 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", span="176-176"];
m11_115 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="var right = new Identity(''right'')", span="179-179"];
m11_119 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="left.Update(DateTime.Today, 1m)", span="184-184"];
m11_125 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="left.Update(DateTime.Today, 1m)", span="192-192"];
m11_121 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="right.Update(DateTime.Today, 0m)", span="186-186"];
m11_123 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="right.Update(DateTime.Today, 1m)", span="190-190"];
m11_117 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="var updatedEventFired = false", span="181-181"];
m11_118 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="composite.Updated += delegate { updatedEventFired = true; }", span="182-182"];
m11_120 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="Assert.IsFalse(updatedEventFired)", span="185-185"];
m11_122 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="Assert.IsFalse(updatedEventFired)", span="187-187"];
m11_124 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="Assert.IsFalse(updatedEventFired)", span="191-191"];
m11_126 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="Assert.IsTrue(updatedEventFired)", span="193-193"];
m11_127 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", file="Insight.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverHandlesDivideByZero()", span="176-176"];
m11_13 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="Insight.cs", label="Assert.IsFalse(second.IsReady)", span="46-46"];
m11_0 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="Insight.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", span="25-25"];
m11_1 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.PipesDataUsingOfFromFirstToSecond()", file="Insight.cs", label="var first = new SimpleMovingAverage(2)", span="27-27"];
m11_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", span="118-118"];
m11_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs", label="Id = Guid.NewGuid()", span="120-120"];
m11_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs", label="Period = period", span="126-126"];
m11_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs", label="Magnitude = magnitude", span="129-129"];
m11_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", span="118-118"];
m11_12 [cluster="System.Guid.NewGuid()", file="Insight.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m11_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", span="156-156"];
m11_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs", label="Confidence = confidence", span="130-130"];
m11_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="Insight.cs", label="return new Insight(Symbol, Period, Type, Direction, Magnitude, Confidence)\r\n            {\r\n                GeneratedTimeUtc = GeneratedTimeUtc,\r\n                CloseTimeUtc = CloseTimeUtc,\r\n                Score = Score,\r\n                Id = Id,\r\n                EstimatedValue = EstimatedValue,\r\n                ReferenceValue = ReferenceValue\r\n            };", span="158-166"];
m11_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs", label="Score = new InsightScore()", span="121-121"];
m11_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", color=green, community=0, file="Insight.cs", label="Symbol = symbol", prediction=10, span="123-123"];
m11_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", color=green, community=0, file="Insight.cs", label="Type = type", prediction=11, span="124-124"];
m11_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?)", file="Insight.cs", label="Direction = direction", span="125-125"];
m11_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", span="156-156"];
m11_128 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="182-182"];
m11_43 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", span="232-232"];
m11_42 [cluster="QuantConnect.Algorithm.Framework.Alphas.InsightScore.Finalize(System.DateTime)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.InsightScore.Finalize(System.DateTime)", span="101-101"];
m11_44 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="var str = $''{Id}: {Symbol} {Type} {Direction} within {Period}''", span="234-234"];
m11_129 [cluster="lambda expression", file="Insight.cs", label="updatedEventFired = true", span="182-182"];
m11_130 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="182-182"];
m11_26 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", color=green, community=0, file="Insight.cs", label="serializedInsight.ScoreIsFinal", prediction=12, span="207-207"];
m11_131 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", span="197-197"];
m11_132 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var left = new Identity(''left'')", span="199-199"];
m11_133 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var right = new Identity(''right'')", span="200-200"];
m11_134 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var composite = left.Times(right)", span="201-201"];
m11_135 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="left.Update(DateTime.Today, 1m)", span="203-203"];
m11_138 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="left.Update(DateTime.Today, 2m)", span="207-207"];
m11_140 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="left.Update(DateTime.Today, 3m)", span="210-210"];
m11_136 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="right.Update(DateTime.Today, 1m)", span="204-204"];
m11_142 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="right.Update(DateTime.Today, 4m)", span="213-213"];
m11_137 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="205-205"];
m11_139 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="208-208"];
m11_141 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="211-211"];
m11_143 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(12m, composite.Current.Value)", span="214-214"];
m11_144 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.TimesMultipliesLeftAndRightAfterBothUpdated()", span="197-197"];
m11_36 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="Insight.cs", label="identity.Update(DateTime.UtcNow, 3m)", span="74-74"];
m11_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", span="188-188"];
m11_97 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="Insight.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Minus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="131-131"];
m11_45 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="Magnitude.HasValue", span="235-235"];
m11_46 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="str += $'' by {Magnitude.Value}%''", span="237-237"];
m11_47 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="Confidence.HasValue", span="239-239"];
m11_49 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="return str;", span="244-244"];
m11_50 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", span="232-232"];
m11_51 [cluster="System.Math.Round(double, int)", file="Insight.cs", label="Entry System.Math.Round(double, int)", span="0-0"];
m11_54 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="identity.Update(DateTime.UtcNow, 2m)", span="94-94"];
m11_55 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Assert.IsTrue(identity.IsReady)", span="95-95"];
m11_58 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="identity.Update(DateTime.UtcNow, 3m)", span="99-99"];
m11_59 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Assert.IsTrue(identity.IsReady)", span="100-100"];
m11_62 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="identity.Update(DateTime.UtcNow, 4m)", span="104-104"];
m11_63 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Assert.IsTrue(identity.IsReady)", span="105-105"];
m11_48 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="str += $'' with {Math.Round(100 * Confidence.Value, 1)}% confidence''", span="241-241"];
m11_53 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Assert.IsFalse(sma.IsReady)", span="92-92"];
m11_57 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Assert.IsFalse(sma.IsReady)", span="97-97"];
m11_61 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Assert.IsFalse(sma.IsReady)", span="102-102"];
m11_65 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Assert.IsTrue(sma.IsReady)", span="107-107"];
m11_66 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Assert.AreEqual(1.5m, sma)", span="109-109"];
m11_52 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="QuantConnect.Algorithm.Framework.Alphas.Insight", span=""];
m11_56 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Assert.IsFalse(delay.IsReady)", span="96-96"];
m11_60 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Assert.IsTrue(delay.IsReady)", span="101-101"];
m11_64 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Assert.IsTrue(delay.IsReady)", span="106-106"];
m11_67 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", file="Insight.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MultiChain()", span="80-80"];
m11_112 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="Insight.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Over(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="175-175"];
m11_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="insight.Score.SetScore(InsightScoreType.Direction, serializedInsight.ScoreDirection, insight.CloseTimeUtc)", span="210-210"];
m11_98 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", span="155-155"];
m11_99 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var left = new Identity(''left'')", span="157-157"];
m11_100 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var right = new Identity(''right'')", span="158-158"];
m11_101 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var composite = left.Over(right)", span="159-159"];
m11_102 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="left.Update(DateTime.Today, 1m)", span="161-161"];
m11_107 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="left.Update(DateTime.Today, 3m)", span="168-168"];
m11_103 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="right.Update(DateTime.Today, 1m)", span="162-162"];
m11_109 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="right.Update(DateTime.Today, 4m)", span="171-171"];
m11_104 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="163-163"];
m11_106 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="166-166"];
m11_108 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(1m, composite.Current.Value)", span="169-169"];
m11_110 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(3m / 4m, composite.Current.Value)", span="172-172"];
m11_111 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.OverDivdesLeftAndRightAfterBothUpdated()", span="155-155"];
m11_145 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="Insight.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="219-219"];
m11_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="insight.Score.SetScore(InsightScoreType.Magnitude, serializedInsight.ScoreMagnitude, insight.CloseTimeUtc)", span="209-209"];
m11_83 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", span="134-134"];
m11_84 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var left = new Identity(''left'')", span="136-136"];
m11_85 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var right = new Identity(''right'')", span="137-137"];
m11_86 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="var composite = left.Minus(right)", span="138-138"];
m11_87 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="left.Update(DateTime.Today, 1m)", span="140-140"];
m11_90 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="left.Update(DateTime.Today, 2m)", span="144-144"];
m11_92 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="left.Update(DateTime.Today, 3m)", span="147-147"];
m11_88 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="right.Update(DateTime.Today, 1m)", span="141-141"];
m11_94 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="right.Update(DateTime.Today, 4m)", span="150-150"];
m11_89 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(0m, composite.Current.Value)", span="142-142"];
m11_93 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(0m, composite.Current.Value)", span="148-148"];
m11_95 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Assert.AreEqual(-1m, composite.Current.Value)", span="151-151"];
m11_96 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", file="Insight.cs", label="Exit QuantConnect.Tests.Indicators.IndicatorExtensionsTests.MinusSubtractsLeftAndRightAfterBothUpdated()", span="134-134"];
m11_25 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", color=green, community=0, file="Insight.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", prediction=13, span="74-74"];
m11_29 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="Insight.cs", label="Entry QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", span="60-60"];
m11_31 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="Insight.cs", label="var sma = new SimpleMovingAverage(3)", span="63-63"];
m11_33 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="Insight.cs", label="identity.Update(DateTime.UtcNow, 1m)", span="70-70"];
m11_34 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="Insight.cs", label="identity.Update(DateTime.UtcNow, 2m)", span="71-71"];
m11_30 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="Insight.cs", label="var identity = new Identity(''identity'')", span="62-62"];
m11_32 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="Insight.cs", label="identity.Updated += (sender, consolidated) =>\r\n            {\r\n                sma.Update(consolidated);\r\n            }", span="65-68"];
m11_35 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="Insight.cs", label="Assert.IsFalse(sma.IsReady)", span="72-72"];
m11_38 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="Insight.cs", label="Assert.AreEqual(2m, sma)", span="76-76"];
m11_82 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", file="Insight.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Plus(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>)", span="87-87"];
m11_37 [cluster="QuantConnect.Tests.Indicators.IndicatorExtensionsTests.NewDataPushesToDerivedIndicators()", file="Insight.cs", label="Assert.IsTrue(sma.IsReady)", span="75-75"];
m11_39 [cluster="System.TimeSpan.FromSeconds(double)", file="Insight.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m11_146 [file="Insight.cs", label=sma, span=""];
m11_147 [file="Insight.cs", label=object, span=""];
m11_148 [file="Insight.cs", label="QuantConnect.Indicators.IndicatorDataPoint", span=""];
m12_27 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="InsightJsonConverterTests.cs", label="orderEvent.Status.IsFill()", span="63-63"];
m12_19 [cluster="System.Environment.Exit(int)", file="InsightJsonConverterTests.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m12_26 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="61-61"];
m12_14 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label=Exception, span="58-58"];
m12_28 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="InsightJsonConverterTests.cs", label="Debug($''Purchased Stock: {orderEvent.Symbol}'')", span="65-65"];
m12_29 [cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="61-61"];
m12_18 [cluster="System.TimeSpan.FromMinutes(double)", file="InsightJsonConverterTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m12_21 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="137-137"];
m12_23 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="279-279"];
m12_15 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label="Log.Error(err)", span="60-60"];
m12_11 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label="var data = downloader.Get(pairObject, castResolution, startDate, endDate)", span="51-51"];
m12_0 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", span="29-29"];
m12_1 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label="resolution.IsNullOrEmpty() || tickers.IsNullOrEmpty()", span="31-31"];
m12_2 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", color=green, community=0, file="InsightJsonConverterTests.cs", label="Console.WriteLine(''KrakenDownloader ERROR: '--tickers=' or '--resolution=' parameter is missing'')", prediction=14, span="33-33"];
m12_3 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label="Console.WriteLine(''--tickers=eg XXBTZUSD,XETHZUSD'')", span="34-34"];
m12_4 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label="Console.WriteLine(''--resolution=Minute/Hour/Daily/Tick'')", span="35-35"];
m12_5 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label="Environment.Exit(1)", span="36-36"];
m12_6 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label="var castResolution = (Resolution)Enum.Parse(typeof(Resolution), resolution)", span="41-41"];
m12_7 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label="var dataDirectory = Config.Get(''data-directory'', ''../../../Data'')", span="44-44"];
m12_8 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label="var downloader = new KrakenDataDownloader()", span="45-45"];
m12_9 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label=tickers, span="47-47"];
m12_10 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="InsightJsonConverterTests.cs", label="var pairObject = Symbol.Create(pair, SecurityType.Crypto, Market.Kraken)", span="50-50"];
m12_25 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="288-288"];
m12_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1791-1791"];
m12_20 [cluster="QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.EqualWeightingPortfolioConstructionModel()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.EqualWeightingPortfolioConstructionModel.EqualWeightingPortfolioConstructionModel()", span="29-29"];
m12_16 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetUniverseSelection(QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetUniverseSelection(QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel)", span="252-252"];
m12_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1197-1197"];
m12_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1121-1121"];
m12_24 [cluster="QuantConnect.Algorithm.Framework.Risk.MaximumDrawdownPercentPerSecurity.MaximumDrawdownPercentPerSecurity(decimal)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.MaximumDrawdownPercentPerSecurity.MaximumDrawdownPercentPerSecurity(decimal)", span="34-34"];
m12_30 [cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50"];
m12_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="55-55"];
m12_22 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.KrakenDataDownloader()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.KrakenDataDownloader()", span="28-28"];
m12_32 [file="InsightJsonConverterTests.cs", label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", span=""];
m14_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="Loader.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="710-710"];
m14_17 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Loader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m14_18 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label="Entry QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", span="39-39"];
m14_19 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label="Debug(''REALTIME: '' + DateTime.Now.ToString(''o'') + '' DATATIME: '' + data.Time.ToString(''o'') + '' REALTIME DELTA: '' + (DateTime.Now - data.Time).TotalSeconds.ToString(''0.000'') + ''sec  COUNT: '' + data.Count + '' FILLFORWARD: '' + data.Count(x => x.Value.IsFillForward))", span="41-41"];
m14_20 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label=AllSymbols, span="43-43"];
m14_21 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label="!Portfolio.ContainsKey(symbol)", span="45-45"];
m14_27 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label="Time.Second % 15 == 0", span="63-63"];
m14_22 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label="!Portfolio[symbol].Invested", span="47-47"];
m14_23 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label="Order(symbol, 10)", span="50-50"];
m14_25 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label="var holdings = Portfolio[symbol].Quantity", span="56-56"];
m14_26 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label="Order(symbol, holdings * -2)", span="57-57"];
m14_24 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label="Time.Second % 15 == 0", span="54-54"];
m14_28 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label="Log(''Time: '' + Time.ToShortTimeString())", span="63-63"];
m14_29 [cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="Loader.cs", label="Exit QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", span="39-39"];
m14_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="Loader.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", span="183-183"];
m14_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="Loader.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="723-723"];
m14_31 [cluster="double.ToString(string)", file="Loader.cs", label="Entry double.ToString(string)", span="0-0"];
m14_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="Loader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m14_30 [cluster="System.DateTime.ToString(string)", file="Loader.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m14_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="Loader.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="470-470"];
m14_12 [cluster="System.Collections.Generic.List<T>.List()", file="Loader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m14_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="Loader.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="612-612"];
m14_0 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label="Entry QuantConnect.Stress_Symbols.Initialize()", span="13-13"];
m14_1 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label="AllSymbols = new List<string>()", span="15-15"];
m14_2 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label="SetStartDate(2014, 01, 01)", span="18-18"];
m14_3 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label="SetEndDate(2015, 01, 01)", span="19-19"];
m14_4 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label="SetCash(250000)", span="22-22"];
m14_5 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label="int count = 0", span="24-24"];
m14_6 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label=StockSymbols, span="25-25"];
m14_7 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label="AddSecurity(SecurityType.Equity, symbol, Resolution.Second, true)", span="27-27"];
m14_8 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label=ForexSymbols, span="30-30"];
m14_9 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label="AddSecurity(SecurityType.Forex, symbol, Resolution.Second, true)", span="32-32"];
m14_10 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label="AllSymbols = StockSymbols.Concat(ForexSymbols)", span="35-35"];
m14_11 [cluster="QuantConnect.Stress_Symbols.Initialize()", file="Loader.cs", label="Exit QuantConnect.Stress_Symbols.Initialize()", span="13-13"];
m14_36 [cluster="System.DateTime.ToShortTimeString()", file="Loader.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m14_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="Loader.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="445-445"];
m14_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="Loader.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="412-412"];
m14_34 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="Loader.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="110-110"];
m14_38 [cluster="lambda expression", file="Loader.cs", label="Entry lambda expression", span="41-41"];
m14_39 [cluster="lambda expression", file="Loader.cs", label="x.Value.IsFillForward", span="41-41"];
m14_40 [cluster="lambda expression", file="Loader.cs", label="Exit lambda expression", span="41-41"];
m14_41 [file="Loader.cs", label="QuantConnect.Stress_Symbols", span=""];
m15_44 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="MacdAlphaModelTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m15_38 [cluster="QuantConnect.Logging.ILogHandler.Trace(string)", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string)", span="42-42"];
m15_37 [cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="89-89"];
m15_31 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m15_33 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="32-32"];
m15_46 [cluster="lambda expression", file="MacdAlphaModelTests.cs", label="Entry lambda expression", span="63-68"];
m15_48 [cluster="lambda expression", file="MacdAlphaModelTests.cs", label="var job = systemHandlers.JobQueue.NextJob(out algorithmPath)", span="66-66"];
m15_49 [cluster="lambda expression", file="MacdAlphaModelTests.cs", label="engine.Run(job, algorithmPath)", span="67-67"];
m15_47 [cluster="lambda expression", file="MacdAlphaModelTests.cs", label="string algorithmPath", span="65-65"];
m15_50 [cluster="lambda expression", file="MacdAlphaModelTests.cs", label="Exit lambda expression", span="63-68"];
m15_30 [cluster="QuantConnect.Util.Composer.Reset()", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Util.Composer.Reset()", span="189-189"];
m15_42 [cluster="System.Threading.Tasks.Task.Wait()", file="MacdAlphaModelTests.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m15_36 [cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="191-191"];
m15_52 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", span="77-77"];
m15_45 [cluster="Unk.AreEqual", file="MacdAlphaModelTests.cs", label="Entry Unk.AreEqual", span=""];
m15_32 [cluster="System.Enum.ToString()", file="MacdAlphaModelTests.cs", label="Entry System.Enum.ToString()", span="0-0"];
m15_39 [cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="62-62"];
m15_51 [cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="36-36"];
m15_34 [cluster="QuantConnect.Logging.FileLogHandler.FileLogHandler(string, bool)", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Logging.FileLogHandler.FileLogHandler(string, bool)", span="38-38"];
m15_43 [cluster="QuantConnect.Logging.ILogHandler.Error(string, params object[])", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Logging.ILogHandler.Error(string, params object[])", span="30-30"];
m15_29 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MacdAlphaModelTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m15_41 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="MacdAlphaModelTests.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0"];
m15_40 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="65-65"];
m15_0 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="32-32"];
m15_1 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="var statistics = new Dictionary<string, string>()", span="34-34"];
m15_3 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Config.Set(''algorithm-type-name'', algorithm)", span="41-41"];
m15_10 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Config.Set(''algorithm-language'', language.ToString())", span="48-48"];
m15_11 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Config.Set(''algorithm-location'', ''QuantConnect.Algorithm.'' + language + ''.dll'')", span="49-49"];
m15_17 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Log.LogHandler.Trace(''{0}: Running '' + algorithm + ''...'', DateTime.UtcNow)", span="57-57"];
m15_25 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label=expectedStatistics, span="79-79"];
m15_2 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Composer.Instance.Reset()", span="36-36"];
m15_4 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Config.Set(''live-mode'', ''false'')", span="42-42"];
m15_5 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Config.Set(''environment'', '''')", span="43-43"];
m15_6 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Config.Set(''messaging-handler'', ''QuantConnect.Messaging.Messaging'')", span="44-44"];
m15_7 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Config.Set(''job-queue-handler'', ''QuantConnect.Queues.JobQueue'')", span="45-45"];
m15_8 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Config.Set(''api-handler'', ''QuantConnect.Api.Api'')", span="46-46"];
m15_9 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Config.Set(''result-handler'', ''QuantConnect.Lean.Engine.Results.BacktestingResultHandler'')", span="47-47"];
m15_12 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="var logHandlers = new ILogHandler[] {new ConsoleLogHandler(), new FileLogHandler(''regression.log'', false)}", span="51-51"];
m15_13 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Log.LogHandler = new CompositeLogHandler(logHandlers)", span="52-52"];
m15_14 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="var algorithmHandlers = LeanEngineAlgorithmHandlers.FromConfiguration(Composer.Instance)", span="53-53"];
m15_15 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="var systemHandlers = LeanEngineSystemHandlers.FromConfiguration(Composer.Instance)", span="54-54"];
m15_19 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="var engine = new Lean.Engine.Engine(systemHandlers, algorithmHandlers, false)", span="62-62"];
m15_21 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="var backtestingResultHandler = (BacktestingResultHandler)algorithmHandlers.Results", span="70-70"];
m15_16 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Log.LogHandler.Trace('''')", span="56-56"];
m15_20 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Task.Factory.StartNew(() =>\r\n                    {\r\n                        string algorithmPath;\r\n                        var job = systemHandlers.JobQueue.NextJob(out algorithmPath);\r\n                        engine.Run(job, algorithmPath);\r\n                    }).Wait()", span="63-68"];
m15_18 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Log.LogHandler.Trace('''')", span="58-58"];
m15_22 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="statistics = backtestingResultHandler.FinalStatistics", span="71-71"];
m15_23 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label=Exception, span="74-74"];
m15_26 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Assert.AreEqual(true, statistics.ContainsKey(stat.Key), ''Missing key: '' + stat.Key)", span="81-81"];
m15_27 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Assert.AreEqual(stat.Value, statistics[stat.Key], ''Failed on '' + stat.Key)", span="82-82"];
m15_24 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Log.LogHandler.Error(''{0} {1}'', ex.Message, ex.StackTrace)", span="76-76"];
m15_28 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MacdAlphaModelTests.cs", label="Exit QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="32-32"];
m15_35 [cluster="QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(QuantConnect.Logging.ILogHandler[])", file="MacdAlphaModelTests.cs", label="Entry QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(QuantConnect.Logging.ILogHandler[])", span="38-38"];
m15_53 [file="MacdAlphaModelTests.cs", label=systemHandlers, span=""];
m15_54 [file="MacdAlphaModelTests.cs", label=engine, span=""];
m17_20 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343"];
m17_29 [cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50"];
m17_11 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="47-47"];
m17_12 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="var relativePath = LeanData.GenerateRelativeZipFilePath(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="49-49"];
m17_13 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(parameters.ExpectedRelativeZipFilePath, relativePath)", span="50-50"];
m17_14 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="47-47"];
m17_80 [cluster="string.LastIndexOf(string, System.StringComparison)", file="QCAlgorithmFramework.cs", label="Entry string.LastIndexOf(string, System.StringComparison)", span="0-0"];
m17_142 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218"];
m17_143 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="DateTime date", span="220-220"];
m17_144 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Symbol symbol", span="221-221"];
m17_145 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Resolution resolution", span="222-222"];
m17_146 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="var customPath = ''a/very/custom/path/forex/oanda/tick/eurusd/20170104_quote.zip''", span="224-224"];
m17_147 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.IsTrue(LeanData.TryParsePath(customPath, out symbol, out date, out resolution))", span="225-225"];
m17_148 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="226-226"];
m17_149 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="227-227"];
m17_150 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(resolution, Resolution.Tick)", span="228-228"];
m17_151 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="229-229"];
m17_152 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2017-01-04'').Date)", span="230-230"];
m17_153 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="var mixedPathSeperators = @''Data//forex/fxcm\/minute//eurusd\\20160101_quote.zip''", span="232-232"];
m17_154 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.IsTrue(LeanData.TryParsePath(mixedPathSeperators, out symbol, out date, out resolution))", span="233-233"];
m17_155 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="234-234"];
m17_156 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="235-235"];
m17_157 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="236-236"];
m17_158 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="237-237"];
m17_159 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="238-238"];
m17_160 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="var longRelativePath = ''../../../../../../../../../Data/forex/fxcm/hour/gbpusd.zip''", span="240-240"];
m17_161 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.IsTrue(LeanData.TryParsePath(longRelativePath, out symbol, out date, out resolution))", span="241-241"];
m17_162 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="242-242"];
m17_163 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="243-243"];
m17_164 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(resolution, Resolution.Hour)", span="244-244"];
m17_165 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''gbpusd'')", span="245-245"];
m17_166 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="246-246"];
m17_167 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="var shortRelativePath = ''Data/forex/fxcm/minute/eurusd/20160102_quote.zip''", span="248-248"];
m17_168 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.IsTrue(LeanData.TryParsePath(shortRelativePath, out symbol, out date, out resolution))", span="249-249"];
m17_169 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="250-250"];
m17_170 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="251-251"];
m17_171 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="252-252"];
m17_172 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="253-253"];
m17_173 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-02'').Date)", span="254-254"];
m17_174 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="var dailyEquitiesPath = ''Data/equity/usa/daily/aapl.zip''", span="256-256"];
m17_175 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.IsTrue(LeanData.TryParsePath(dailyEquitiesPath, out symbol, out date, out resolution))", span="257-257"];
m17_176 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="258-258"];
m17_177 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="259-259"];
m17_178 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(resolution, Resolution.Daily)", span="260-260"];
m17_179 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''aapl'')", span="261-261"];
m17_180 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="262-262"];
m17_181 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="var minuteEquitiesPath = ''Data/equity/usa/minute/googl/20070103_trade.zip''", span="264-264"];
m17_182 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.IsTrue(LeanData.TryParsePath(minuteEquitiesPath, out symbol, out date, out resolution))", span="265-265"];
m17_183 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="266-266"];
m17_184 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="267-267"];
m17_185 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="268-268"];
m17_186 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''goog'')", span="269-269"];
m17_187 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2007-01-03'').Date)", span="270-270"];
m17_188 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="var cfdPath = ''Data/cfd/oanda/minute/bcousd/20160101_trade.zip''", span="272-272"];
m17_189 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.IsTrue(LeanData.TryParsePath(cfdPath, out symbol, out date, out resolution))", span="273-273"];
m17_190 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.SecurityType, SecurityType.Cfd)", span="274-274"];
m17_191 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="275-275"];
m17_192 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(resolution, Resolution.Minute)", span="276-276"];
m17_193 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''bcousd'')", span="277-277"];
m17_194 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="278-278"];
m17_195 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="218-218"];
m17_66 [cluster="Unk.IsInstanceOf", file="QCAlgorithmFramework.cs", label="Entry Unk.IsInstanceOf", span=""];
m17_213 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithmFramework.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m17_30 [cluster="string.Split(params char[])", file="QCAlgorithmFramework.cs", label="Entry string.Split(params char[])", span="0-0"];
m17_63 [cluster="object.GetType()", file="QCAlgorithmFramework.cs", label="Entry object.GetType()", span="0-0"];
m17_104 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m17_119 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="765-765"];
m17_216 [cluster="Unk.ToArray", file="QCAlgorithmFramework.cs", label="Entry Unk.ToArray", span=""];
m17_64 [cluster="System.Activator.CreateInstance(System.Type)", file="QCAlgorithmFramework.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m17_4 [cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="552-552"];
m17_227 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="466-466"];
m17_256 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="Data = data", span="468-468"];
m17_257 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="SecurityType = securityType", span="469-469"];
m17_258 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="Resolution = resolution", span="470-470"];
m17_259 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="ExpectedLine = expectedLine", span="471-471"];
m17_260 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="data is Tick", span="472-472"];
m17_261 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="var tick = (Tick) data", span="474-474"];
m17_263 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="data is TradeBar", span="477-477"];
m17_265 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="data is QuoteBar", span="481-481"];
m17_268 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="data.Symbol.ID.SecurityType == SecurityType.Forex || data.Symbol.ID.SecurityType == SecurityType.Cfd", span="491-491"];
m17_271 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="Name = SecurityType + ''_'' + data.GetType().Name", span="498-498"];
m17_272 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="data.GetType() != typeof (Tick) || Resolution != Resolution.Tick", span="500-500"];
m17_274 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="data is Tick", span="505-505"];
m17_275 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="Name += ''_'' + ((Tick) data).TickType", span="507-507"];
m17_262 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="TickType = tick.TickType", span="475-475"];
m17_264 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="TickType = TickType.Trade", span="479-479"];
m17_266 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="TickType = TickType.Quote", span="483-483"];
m17_267 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="throw new NotImplementedException();", span="487-487"];
m17_269 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="TickType = TickType.Quote", span="493-493"];
m17_270 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="Config = new SubscriptionDataConfig(Data.GetType(), Data.Symbol, Resolution, TimeZones.Utc, TimeZones.Utc, false, true, false, false, TickType)", span="496-496"];
m17_273 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="Name += ''_'' + Resolution", span="502-502"];
m17_276 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="466-466"];
m17_243 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="ExpectedZipEntryName = expectedZipEntryName", span="441-441"];
m17_214 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="434-434"];
m17_238 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="Symbol = symbol", span="436-436"];
m17_239 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="Date = date", span="437-437"];
m17_240 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="Resolution = resolution", span="438-438"];
m17_241 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="TickType = tickType", span="439-439"];
m17_242 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="ExpectedZipFileName = expectedZipFileName", span="440-440"];
m17_244 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="ExpectedRelativeZipFilePath = Path.Combine(expectedRelativeZipFileDirectory, expectedZipFileName).Replace(''/'', Path.DirectorySeparatorChar.ToString())", span="442-442"];
m17_246 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="Name = SecurityType + ''_'' + resolution", span="445-445"];
m17_247 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="BaseDataType = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="447-447"];
m17_248 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="symbol.ID.SecurityType == SecurityType.Option && resolution != Resolution.Tick", span="448-448"];
m17_250 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="Config = new SubscriptionDataConfig(BaseDataType, symbol, resolution, TimeZones.NewYork, TimeZones.NewYork, true, false, false, false, tickType)", span="452-452"];
m17_245 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="ExpectedZipFilePath = Path.Combine(Globals.DataFolder, ExpectedRelativeZipFilePath)", span="443-443"];
m17_249 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="BaseDataType = typeof(QuoteBar)", span="450-450"];
m17_251 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="434-434"];
m17_81 [cluster="string.Substring(int, int)", file="QCAlgorithmFramework.cs", label="Entry string.Substring(int, int)", span="0-0"];
m17_235 [cluster="lambda expression", file="QCAlgorithmFramework.cs", label="Entry lambda expression", span="416-416"];
m17_217 [cluster="lambda expression", file="QCAlgorithmFramework.cs", label="Entry lambda expression", span="349-349"];
m17_218 [cluster="lambda expression", file="QCAlgorithmFramework.cs", label="new TestCaseData(x).SetName(x.Name)", span="349-349"];
m17_219 [cluster="lambda expression", file="QCAlgorithmFramework.cs", label="Exit lambda expression", span="349-349"];
m17_236 [cluster="lambda expression", file="QCAlgorithmFramework.cs", label="new TestCaseData(x).SetName(x.Name)", span="416-416"];
m17_237 [cluster="lambda expression", file="QCAlgorithmFramework.cs", label="Exit lambda expression", span="416-416"];
m17_87 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="expected += ''#'' + parameters.ExpectedZipEntryName", span="143-143"];
m17_82 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="136-136"];
m17_83 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="var factory = (BaseData)Activator.CreateInstance(parameters.BaseDataType)", span="138-138"];
m17_84 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="var source = factory.GetSource(parameters.Config, parameters.Date, false)", span="139-139"];
m17_85 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="var expected = parameters.ExpectedZipFilePath", span="140-140"];
m17_86 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="parameters.SecurityType == SecurityType.Option", span="141-141"];
m17_88 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected, source.Source)", span="145-145"];
m17_89 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="136-136"];
m17_114 [cluster="Unk.IsFalse", file="QCAlgorithmFramework.cs", label="Entry Unk.IsFalse", span=""];
m17_233 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m17_234 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161"];
m17_230 [cluster="System.TimeSpan.FromMinutes(double)", file="QCAlgorithmFramework.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m17_253 [cluster="char.ToString()", file="QCAlgorithmFramework.cs", label="Entry char.ToString()", span="0-0"];
m17_197 [cluster="System.DateTime.Parse(string)", file="QCAlgorithmFramework.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m17_31 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="78-78"];
m17_32 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var factory = (BaseData) Activator.CreateInstance(parameters.Data.GetType())", span="81-81"];
m17_33 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var parsed = factory.Reader(parameters.Config, parameters.ExpectedLine, parameters.Data.Time.Date, false)", span="82-82"];
m17_34 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.IsInstanceOf(parameters.Config.Type, parsed)", span="84-84"];
m17_35 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(parameters.Data.Time, parsed.Time)", span="85-85"];
m17_36 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(parameters.Data.EndTime, parsed.EndTime)", span="86-86"];
m17_37 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(parameters.Data.Symbol, parsed.Symbol)", span="87-87"];
m17_38 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(parameters.Data.Value, parsed.Value)", span="88-88"];
m17_40 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var expected = (Tick) parameters.Data", span="91-91"];
m17_51 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var expected = (TradeBar) parameters.Data", span="104-104"];
m17_56 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var expected = (QuoteBar) parameters.Data", span="111-111"];
m17_39 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="parsed is Tick", span="89-89"];
m17_41 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var actual = (Tick) parsed", span="92-92"];
m17_50 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="parsed is TradeBar", span="102-102"];
m17_52 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var actual = (TradeBar) parsed", span="105-105"];
m17_55 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="parsed is QuoteBar", span="109-109"];
m17_57 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var actual = (QuoteBar) parsed", span="112-112"];
m17_42 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.Quantity, actual.Quantity)", span="93-93"];
m17_43 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.BidPrice, actual.BidPrice)", span="94-94"];
m17_44 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.AskPrice, actual.AskPrice)", span="95-95"];
m17_45 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.BidSize, actual.BidSize)", span="96-96"];
m17_46 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.AskSize, actual.AskSize)", span="97-97"];
m17_47 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.Exchange, actual.Exchange)", span="98-98"];
m17_48 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.SaleCondition, actual.SaleCondition)", span="99-99"];
m17_49 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.Suspicious, actual.Suspicious)", span="100-100"];
m17_53 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="AssertBarsAreEqual(expected, actual)", span="106-106"];
m17_54 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.Volume, actual.Volume)", span="107-107"];
m17_58 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="AssertBarsAreEqual(expected.Bid, actual.Bid)", span="113-113"];
m17_59 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="AssertBarsAreEqual(expected.Ask, actual.Ask)", span="114-114"];
m17_60 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.LastBidSize, actual.LastBidSize)", span="115-115"];
m17_61 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.LastAskSize, actual.LastAskSize)", span="116-116"];
m17_62 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="78-78"];
m17_255 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m17_141 [cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="801-801"];
m17_212 [cluster="System.DateTime.DateTime(int, int, int)", file="QCAlgorithmFramework.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m17_232 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m17_113 [cluster="Unk.IsTrue", file="QCAlgorithmFramework.cs", label="Entry Unk.IsTrue", span=""];
m17_115 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179"];
m17_116 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Cfd), TickType.Quote)", span="181-181"];
m17_117 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Forex), TickType.Quote)", span="182-182"];
m17_118 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="179-179"];
m17_277 [cluster="System.NotImplementedException.NotImplementedException()", file="QCAlgorithmFramework.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m17_220 [cluster="TestCaseData.cstr", file="QCAlgorithmFramework.cs", label="Entry TestCaseData.cstr", span=""];
m17_120 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186"];
m17_121 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="DateTime date", span="188-188"];
m17_122 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Symbol symbol", span="189-189"];
m17_123 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Resolution resolution", span="190-190"];
m17_124 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="var invalidPath = ''forex/fxcm/eurusd/20160101_quote.zip''", span="192-192"];
m17_125 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Assert.IsFalse(LeanData.TryParsePath(invalidPath, out symbol, out date, out resolution))", span="193-193"];
m17_126 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="var nonExistantPath = ''Data/f/fxcm/eurusd/20160101_quote.zip''", span="195-195"];
m17_127 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Assert.IsFalse(LeanData.TryParsePath(nonExistantPath, out symbol, out date, out resolution))", span="196-196"];
m17_128 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="var notAPath = ''ooooooooooooooooooooooooooooooooooooooooooooooooooooooo''", span="198-198"];
m17_129 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Assert.IsFalse(LeanData.TryParsePath(notAPath, out symbol, out date, out resolution))", span="199-199"];
m17_130 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="var  emptyPath = ''''", span="201-201"];
m17_131 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Assert.IsFalse(LeanData.TryParsePath(emptyPath, out symbol, out date, out resolution))", span="202-202"];
m17_132 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="string nullPath = null", span="204-204"];
m17_133 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Assert.IsFalse(LeanData.TryParsePath(nullPath, out symbol, out date, out resolution))", span="205-205"];
m17_134 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="var optionsTradePath = ''Data/option/u sa/minute/aapl/20140606_trade_american.zip''", span="207-207"];
m17_135 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsTradePath, out symbol, out date, out resolution))", span="208-208"];
m17_136 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="var optionsOpenInterestPath = ''Data/option/usa/minute/aapl/20140609_openinterest_american.zip''", span="210-210"];
m17_137 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsOpenInterestPath, out symbol, out date, out resolution))", span="211-211"];
m17_138 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="var optionsQuotePath = ''Data/option/usa/minute/aapl/20140609_quote_american.zip''", span="213-213"];
m17_139 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Assert.IsFalse(LeanData.TryParsePath(optionsQuotePath, out symbol, out date, out resolution))", span="214-214"];
m17_140 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="186-186"];
m17_196 [cluster="string.ToLower()", file="QCAlgorithmFramework.cs", label="Entry string.ToLower()", span="0-0"];
m17_21 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="61-61"];
m17_22 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var line = LeanData.GenerateLine(parameters.Data, parameters.SecurityType, parameters.Resolution)", span="63-63"];
m17_23 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(parameters.ExpectedLine, line)", span="64-64"];
m17_24 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="parameters.Config.Type == typeof(QuoteBar)", span="66-66"];
m17_26 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="parameters.Config.Type == typeof(TradeBar)", span="71-71"];
m17_25 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(line.Split(',').Length, 11)", span="68-68"];
m17_27 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(line.Split(',').Length, 6)", span="73-73"];
m17_28 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="61-61"];
m17_68 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="121-121"];
m17_69 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var source = parameters.Data.GetSource(parameters.Config, parameters.Data.Time.Date, false)", span="123-123"];
m17_71 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var zipFilePath = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Data.Symbol, parameters.Data.Time.Date, parameters.Resolution, parameters.TickType)", span="125-125"];
m17_70 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var normalizedSourcePath = new FileInfo(source.Source).FullName", span="124-124"];
m17_73 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var indexOfHash = normalizedSourcePath.LastIndexOf(''#'', StringComparison.Ordinal)", span="127-127"];
m17_75 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="normalizedSourcePath = normalizedSourcePath.Substring(0, indexOfHash)", span="130-130"];
m17_76 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(normalizeZipFilePath, normalizedSourcePath)", span="132-132"];
m17_72 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="var normalizeZipFilePath = new FileInfo(zipFilePath).FullName", span="126-126"];
m17_74 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="indexOfHash > 0", span="128-128"];
m17_77 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="121-121"];
m17_0 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="33-33"];
m17_1 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="var zip = LeanData.GenerateZipFileName(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="35-35"];
m17_2 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(parameters.ExpectedZipFileName, zip)", span="36-36"];
m17_3 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="33-33"];
m17_5 [cluster="Unk.AreEqual", file="QCAlgorithmFramework.cs", label="Entry Unk.AreEqual", span=""];
m17_231 [cluster="System.TimeSpan.FromDays(double)", file="QCAlgorithmFramework.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m17_16 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="54-54"];
m17_17 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="var path = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="56-56"];
m17_18 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(parameters.ExpectedZipFilePath, path)", span="57-57"];
m17_19 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="54-54"];
m17_207 [cluster="Unk.Fail", file="QCAlgorithmFramework.cs", label="Entry Unk.Fail", span=""];
m17_254 [cluster="string.Replace(string, string)", file="QCAlgorithmFramework.cs", label="Entry string.Replace(string, string)", span="0-0"];
m17_90 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="149-149"];
m17_91 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="var tickType = typeof(Tick)", span="151-151"];
m17_92 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="var openInterestType = typeof(OpenInterest)", span="152-152"];
m17_95 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tickType)", span="156-156"];
m17_96 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Daily, TickType.OpenInterest), tickType)", span="157-157"];
m17_93 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="var quoteBarType = typeof(QuoteBar)", span="153-153"];
m17_97 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Second, TickType.OpenInterest), openInterestType)", span="159-159"];
m17_98 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), openInterestType)", span="160-160"];
m17_94 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="var tradeBarType = typeof(TradeBar)", span="154-154"];
m17_99 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Minute, TickType.Quote), quoteBarType)", span="162-162"];
m17_100 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Second, TickType.Trade), quoteBarType)", span="163-163"];
m17_101 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(LeanData.GetDataType(Resolution.Hour, TickType.Trade), tradeBarType)", span="165-165"];
m17_102 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tradeBarType)", span="166-166"];
m17_103 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="149-149"];
m17_222 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="352-352"];
m17_223 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="QCAlgorithmFramework.cs", label="var time = new DateTime(2016, 02, 18, 9, 30, 0)", span="354-354"];
m17_224 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="QCAlgorithmFramework.cs", label="return new List<LeanDataLineTestParameters>\r\n            {\r\n                //equity\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY, Value = 1, Quantity = 2, TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Equity, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Equity, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Equity, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // options\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, null, 0, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)) {Bid = null}, SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,,,,,0,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, null, 0, TimeSpan.FromDays(1)) {Ask = null}, SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,,,,,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new Tick(time, Symbols.SPY_P_192_Feb19_2016, 0, 1, 3) {Value = 2m, TickType = TickType.Quote, BidSize = 2, AskSize = 4, Exchange = ''EX'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,30000,4,EX,1''),\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY_P_192_Feb19_2016, Value = 1, Quantity = 2,TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // forex\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.EURUSD, BidPrice = 1, Value =1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Forex, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Forex, Resolution.Minute, ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Forex, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n\r\n                // cfd\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.DE10YBEUR, BidPrice = 1, Value = 1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Cfd, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Cfd, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Cfd, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n\r\n                // crypto - trades\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.BTCUSD, null, 0, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)) {Bid = null}, SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,,,,,0,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, null, 0, TimeSpan.FromDays(1)) {Ask = null}, SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5,,,,,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)), SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,5,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.BTCUSD, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromDays(1)), SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5,6,7,8,9,10''),\r\n                new LeanDataLineTestParameters(new Tick(time, Symbols.BTCUSD, 0, 1, 3) {Value = 2m, TickType = TickType.Quote, BidSize = 2, AskSize = 4, Exchange = ''gdax'', Suspicious = false}, SecurityType.Crypto, Resolution.Tick,\r\n                    ''34200000,1,2,3,4''),\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.BTCUSD, Value = 1, Quantity = 2,TickType = TickType.Trade, Exchange = ''gdax'', Suspicious = false}, SecurityType.Crypto, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.BTCUSD, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Crypto, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.BTCUSD, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Crypto, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,5''),\r\n\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="355-416"];
m17_225 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="352-352"];
m17_9 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="40-40"];
m17_6 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="40-40"];
m17_7 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="var entry = LeanData.GenerateZipEntryName(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="42-42"];
m17_8 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(parameters.ExpectedZipEntryName, entry)", span="43-43"];
m17_78 [cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="160-160"];
m17_252 [cluster="System.IO.Path.Combine(string, string)", file="QCAlgorithmFramework.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m17_112 [cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="327-327"];
m17_226 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="QCAlgorithmFramework.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m17_79 [cluster="System.IO.FileInfo.FileInfo(string)", file="QCAlgorithmFramework.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m17_15 [cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="403-403"];
m17_105 [cluster="Unk.AreNotEqual", file="QCAlgorithmFramework.cs", label="Entry Unk.AreNotEqual", span=""];
m17_10 [cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="425-425"];
m17_65 [cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144"];
m17_215 [cluster="Unk.Select", file="QCAlgorithmFramework.cs", label="Entry Unk.Select", span=""];
m17_221 [cluster="Unk.SetName", file="QCAlgorithmFramework.cs", label="Entry Unk.SetName", span=""];
m17_67 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", span="281-281"];
m17_198 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="QCAlgorithmFramework.cs", label="expected == null && actual == null", span="283-283"];
m17_200 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="QCAlgorithmFramework.cs", label="expected == null && actual != null", span="287-287"];
m17_202 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.Open, actual.Open)", span="291-291"];
m17_203 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.High, actual.High)", span="292-292"];
m17_204 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.Low, actual.Low)", span="293-293"];
m17_205 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="QCAlgorithmFramework.cs", label="Assert.AreEqual(expected.Close, actual.Close)", span="294-294"];
m17_199 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="QCAlgorithmFramework.cs", label="return;", span="285-285"];
m17_201 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="QCAlgorithmFramework.cs", label="Assert.Fail(''Expected null bar'')", span="289-289"];
m17_206 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", span="281-281"];
m17_208 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297"];
m17_209 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="QCAlgorithmFramework.cs", label="var date = new DateTime(2016, 02, 17)", span="299-299"];
m17_210 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="QCAlgorithmFramework.cs", label="return new List<LeanDataTestParameters>\r\n            {\r\n                // equity\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Tick, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_Trade_Tick.csv'', ''equity/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Second, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_second_trade.csv'', ''equity/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Minute, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_minute_trade.csv'', ''equity/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Hour, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Daily, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/daily''),\r\n\r\n                // equity option trades\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_tick_trade_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_tick_quote_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_second_trade_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_second_quote_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_minute_trade_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_minute_quote_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n\r\n                // forex\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_tick_quote.csv'', ''forex/fxcm/tick/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_second_quote.csv'', ''forex/fxcm/second/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_minute_quote.csv'', ''forex/fxcm/minute/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Hour, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Daily, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/daily''),\r\n\r\n                // cfd\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_tick_quote.csv'', ''cfd/fxcm/tick/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_second_quote.csv'', ''cfd/fxcm/second/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_minute_quote.csv'', ''cfd/fxcm/minute/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Hour, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Daily, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/daily''),\r\n\r\n                // Crypto - trades\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Tick, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_tick_trade.csv'', ''crypto/gdax/tick/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Second, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_second_trade.csv'', ''crypto/gdax/second/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Minute, TickType.Trade, ''20160217_trade.zip'', ''20160217_btcusd_minute_trade.csv'', ''crypto/gdax/minute/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Hour, TickType.Trade, ''btcusd_trade.zip'', ''btcusd_trade.csv'', ''crypto/gdax/hour''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Daily, TickType.Trade, ''btcusd_trade.zip'', ''btcusd_trade.csv'', ''crypto/gdax/daily''),\r\n\r\n                // Crypto -quotes\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_tick_quote.csv'', ''crypto/gdax/tick/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_second_quote.csv'', ''crypto/gdax/second/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_btcusd_minute_quote.csv'', ''crypto/gdax/minute/btcusd''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Hour, TickType.Quote, ''btcusd_quote.zip'', ''btcusd_quote.csv'', ''crypto/gdax/hour''),\r\n                new LeanDataTestParameters(Symbols.BTCUSD, date, Resolution.Daily, TickType.Quote, ''btcusd_quote.zip'', ''btcusd_quote.csv'', ''crypto/gdax/daily''),\r\n\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="300-349"];
m17_211 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="297-297"];
m17_228 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m17_106 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="170-170"];
m17_107 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="QCAlgorithmFramework.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(OpenInterest)))", span="172-172"];
m17_108 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="QCAlgorithmFramework.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(TradeBar)))", span="173-173"];
m17_109 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="QCAlgorithmFramework.cs", label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(QuoteBar)))", span="174-174"];
m17_110 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="QCAlgorithmFramework.cs", label="Assert.IsFalse(LeanData.IsCommonLeanDataType(typeof(Bitcoin)))", span="175-175"];
m17_111 [cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="170-170"];
m17_229 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m17_278 [file="QCAlgorithmFramework.cs", label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", span=""];
m17_279 [file="QCAlgorithmFramework.cs", label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", span=""];
m19_203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="127-127"];
m19_132 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="21-21"];
m19_192 [cluster="System.Threading.Thread.Sleep(int)", file="RenkoConsolidator.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m19_193 [cluster="System.Threading.Thread.Abort()", file="RenkoConsolidator.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m19_195 [cluster="System.Console.ReadKey()", file="RenkoConsolidator.cs", label="Entry System.Console.ReadKey()", span="0-0"];
m19_197 [cluster="lambda expression", file="RenkoConsolidator.cs", label="Entry lambda expression", span="330-348"];
m19_198 [cluster="lambda expression", file="RenkoConsolidator.cs", label="AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler)", span="338-338"];
m19_199 [cluster="lambda expression", file="RenkoConsolidator.cs", label=Exception, span="340-340"];
m19_194 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="87-87"];
m19_196 [cluster="System.IDisposable.Dispose()", file="RenkoConsolidator.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m19_200 [cluster="lambda expression", file="RenkoConsolidator.cs", label="Log.Error(''Engine.Run(): Error in Algo Manager: '' + err.Message + '' ST >> '' + err.StackTrace)", span="343-343"];
m19_0 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.Engine.Main(string[])", span="181-181"];
m19_1 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="RenkoConsolidator.cs", label="Log.LogHandler = IsLocal \r\n                ? (ILogHandler) new ConsoleLogHandler() \r\n                : new FileLogHandler(''log.txt'')", prediction=15, span="184-186"];
m19_2 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="RenkoConsolidator.cs", label="var algorithmPath = ''''", prediction=16, span="189-189"];
m19_3 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="AlgorithmNodePacket job = null", span="190-190"];
m19_4 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var timer = Stopwatch.StartNew()", span="191-191"];
m19_5 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var algorithm = default(IAlgorithm)", span="192-192"];
m19_6 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="_version = DateTime.ParseExact(Config.Get(''version'', DateTime.Now.ToString(DateFormat.UI)), DateFormat.UI, CultureInfo.InvariantCulture)", span="193-193"];
m19_7 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Thread.CurrentThread.Name = ''Algorithm Analysis Thread''", span="196-196"];
m19_8 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="RenkoConsolidator.cs", label="Log.Trace(''Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v'' + _version)", prediction=17, span="197-197"];
m19_9 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Log.Trace(''Engine.Main(): Started '' + DateTime.Now.ToShortTimeString())", span="198-198"];
m19_10 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Log.Trace(''Engine.Main(): Memory '' + OS.ApplicationMemoryUsed + ''Mb-App  '' + +OS.TotalPhysicalMemoryUsed + ''Mb-Used  '' + OS.TotalPhysicalMemory + ''Mb-Total'')", span="199-199"];
m19_11 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var catalog = new AggregateCatalog()", span="202-202"];
m19_12 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="catalog.Catalogs.Add(new DirectoryCatalog(AppDomain.CurrentDomain.BaseDirectory))", span="203-203"];
m19_13 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var container = new CompositionContainer(catalog)", span="204-204"];
m19_15 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Queue = container.GetExportedValueByTypeName<IQueueHandler>(Config.Get(''queue-handler''))", span="209-209"];
m19_16 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Api = container.GetExportedValueByTypeName<IApi>(Config.Get(''api-handler''))", span="210-210"];
m19_18 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="RenkoConsolidator.cs", label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", prediction=18, span="213-213"];
m19_20 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Notify.Initialize()", span="218-218"];
m19_23 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="statusPingThread.Start()", span="223-223"];
m19_25 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var initializeComplete = false", span="233-233"];
m19_419 [cluster="QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", span="48-48"];
m19_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="750-750"];
m19_131 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Exit QuantConnect.Lean.Engine.Engine.Main(string[])", span="181-181"];
m19_139 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="RenkoConsolidator.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m19_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1181-1181"];
m19_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="RenkoConsolidator.cs", label="return _locked;", span="1183-1183"];
m19_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1181-1181"];
m19_146 [cluster="lambda expression", file="RenkoConsolidator.cs", label="Entry lambda expression", span="597-597"];
m19_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="RenkoConsolidator.cs", label=DateTimeZoneNotFoundException, span="810-810"];
m19_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="711-711"];
m19_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="968-968"];
m19_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="RenkoConsolidator.cs", label="SetCash((decimal)startingCash)", span="981-981"];
m19_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="RenkoConsolidator.cs", label="Portfolio.SetCash(startingCash)", span="993-993"];
m19_259 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m19_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="968-968"];
m19_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="989-989"];
m19_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="979-979"];
m19_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="RenkoConsolidator.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="997-997"];
m19_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1007-1007"];
m19_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="RenkoConsolidator.cs", label="SetCash((decimal)startingCash)", span="970-970"];
m19_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="979-979"];
m19_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="RenkoConsolidator.cs", label="!_locked", span="991-991"];
m19_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="989-989"];
m19_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="RenkoConsolidator.cs", label="!_locked", span="1009-1009"];
m19_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="RenkoConsolidator.cs", label="Portfolio.SetCash(symbol, startingCash, conversionRate)", span="1011-1011"];
m19_183 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RenkoConsolidator.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m19_184 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", span="124-124"];
m19_185 [cluster="double.ToString(string)", file="RenkoConsolidator.cs", label="Entry double.ToString(string)", span="0-0"];
m19_187 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="185-185"];
m19_188 [cluster="System.Diagnostics.Stopwatch.Stop()", file="RenkoConsolidator.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m19_189 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="63-63"];
m19_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="760-760"];
m19_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="RenkoConsolidator.cs", label="throw new ArgumentNullException(''handler'');", span="894-894"];
m19_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="908-908"];
m19_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="908-908"];
m19_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="RenkoConsolidator.cs", label="BrokerageMessageHandler = handler", span="897-897"];
m19_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="RenkoConsolidator.cs", label="var market = securityType == SecurityType.Forex ? Market.FXCM : Market.USA", span="910-910"];
m19_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="922-922"];
m19_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="890-890"];
m19_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="RenkoConsolidator.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(symbol, securityType, market)", span="911-911"];
m19_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="RenkoConsolidator.cs", label="symbol = symbol.ToUpper()", span="925-925"];
m19_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="RenkoConsolidator.cs", label="var security = Securities.FirstOrDefault(x => x.Key.Value == symbol).Value", span="926-926"];
m19_135 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="RenkoConsolidator.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m19_74 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="throw new Exception(''Failed to complete algorithm within '' + SetupHandler.MaximumRuntime.ToString(''F'') + '' seconds. Please make it run faster.'');", span="353-353"];
m19_98 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var profitLoss =\r\n                                        new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="405-406"];
m19_99 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="statistics = Statistics.Statistics.Generate(equity, profitLoss, performance,\r\n                                        SetupHandler.StartingCapital, 252)", span="407-408"];
m19_100 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label=Exception, span="411-411"];
m19_101 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Log.Error(''Algorithm.Node.Engine(): Error generating statistics packet: '' + err.Message)", span="413-413"];
m19_149 [cluster="Unk.GetParameters", file="RenkoConsolidator.cs", label="Entry Unk.GetParameters", span=""];
m19_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="760-760"];
m19_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="936-936"];
m19_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="936-936"];
m19_237 [cluster="string.ToUpper()", file="RenkoConsolidator.cs", label="Entry string.ToUpper()", span="0-0"];
m19_238 [cluster="lambda expression", file="RenkoConsolidator.cs", label="Entry lambda expression", span="926-926"];
m19_240 [cluster="lambda expression", file="RenkoConsolidator.cs", label="Exit lambda expression", span="926-926"];
m19_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="_benchmarkSymbol = symbol", span="938-938"];
m19_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="946-946"];
m19_239 [cluster="lambda expression", file="RenkoConsolidator.cs", label="x.Key.Value == symbol", span="926-926"];
m19_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="RenkoConsolidator.cs", label="Benchmark = new FuncBenchmark(benchmark)", span="948-948"];
m19_204 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="var df = default(IDataFeed)", span="491-491"];
m19_474 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="RenkoConsolidator.cs", label="var security = SecurityManager.CreateSecurity(new List<Type>() { typeof(T) }, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone, \r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="1538-1539"];
m19_470 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1528-1528"];
m19_471 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="RenkoConsolidator.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="1531-1531"];
m19_472 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="RenkoConsolidator.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="1534-1534"];
m19_473 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="RenkoConsolidator.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="1535-1535"];
m19_475 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="RenkoConsolidator.cs", label="AddToUserDefinedUniverse(security)", span="1541-1541"];
m19_476 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1528-1528"];
m19_510 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1627-1627"];
m19_511 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="RenkoConsolidator.cs", label="return SymbolCache.GetSymbol(ticker);", span="1629-1629"];
m19_512 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1627-1627"];
m19_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="622-622"];
m19_418 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="200-200"];
m19_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1134-1134"];
m19_33 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, _collapseMessage)", span="249-249"];
m19_191 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="218-218"];
m19_133 [cluster="Unk.Where", file="RenkoConsolidator.cs", label="Entry Unk.Where", span=""];
m19_141 [cluster="lambda expression", file="RenkoConsolidator.cs", label="x.Name == ''OnData''", span="595-595"];
m19_513 [cluster="QuantConnect.SymbolCache.GetSymbol(string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.SymbolCache.GetSymbol(string)", span="47-47"];
m19_274 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="RenkoConsolidator.cs", label="SetupHandlerEndpoint.PaperTrading", span="628-628"];
m19_275 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="RenkoConsolidator.cs", label="sh = new PaperTradingSetupHandler()", span="629-629"];
m19_276 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="RenkoConsolidator.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected PaperTrading Algorithm Setup Handler.'')", span="630-630"];
m19_277 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="RenkoConsolidator.cs", label="SetupHandlerEndpoint.Brokerage", span="632-632"];
m19_278 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="RenkoConsolidator.cs", label="sh = new BrokerageSetupHandler()", span="633-633"];
m19_279 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="RenkoConsolidator.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected PaperTrading Algorithm Setup Handler.'')", span="634-634"];
m19_280 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="RenkoConsolidator.cs", label="return sh;", span="637-637"];
m19_157 [cluster="System.Diagnostics.Stopwatch.Restart()", file="RenkoConsolidator.cs", label="Entry System.Diagnostics.Stopwatch.Restart()", span="0-0"];
m19_158 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="612-612"];
m19_453 [cluster="Unk.Any", file="RenkoConsolidator.cs", label="Entry Unk.Any", span=""];
m19_215 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="DataFeedEndpoint.Test", span="513-513"];
m19_216 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="var feed = new TestLiveTradingDataFeed(algorithm, (LiveNodePacket)job)", span="514-514"];
m19_218 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Test Datafeed at '' + feed.FastForward + ''x'')", span="516-516"];
m19_217 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="df = feed", span="515-515"];
m19_219 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="return df;", span="519-519"];
m19_220 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="489-489"];
m19_221 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="50-50"];
m19_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="711-711"];
m19_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label=_liveMode, span="1137-1137"];
m19_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="end > DateTime.Now.Date.AddDays(-1)", span="1141-1141"];
m19_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="end < _startDate", span="1149-1149"];
m19_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="1156-1156"];
m19_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="return;", span="1137-1137"];
m19_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="end = DateTime.Now.Date.AddDays(-1)", span="1143-1143"];
m19_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="_startDate != new DateTime()", span="1147-1147"];
m19_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="throw new Exception(''Please select end date greater than start date.'');", span="1151-1151"];
m19_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="!_locked", span="1159-1159"];
m19_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="_endDate = end", span="1161-1161"];
m19_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="1165-1165"];
m19_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1134-1134"];
m19_452 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="173-173"];
m19_32 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Queue.AcknowledgeJob(job)", span="248-248"];
m19_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1208-1208"];
m19_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="RenkoConsolidator.cs", label="TradeBuilder = tradeBuilder", span="1210-1210"];
m19_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="RenkoConsolidator.cs", label="TradeBuilder.SetLiveMode(LiveMode)", span="1211-1211"];
m19_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1208-1208"];
m19_531 [cluster="Unk.CreateSymbol", file="RenkoConsolidator.cs", label="Entry Unk.CreateSymbol", span=""];
m19_392 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Type>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Type>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="309-309"];
m19_502 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1600-1600"];
m19_503 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="RenkoConsolidator.cs", label="Debug(''Quit(): '' + message)", span="1602-1602"];
m19_504 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="RenkoConsolidator.cs", label="Status = AlgorithmStatus.Stopped", span="1603-1603"];
m19_505 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1600-1600"];
m19_34 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Notify.SetChannel(job.Channel)", span="250-250"];
m19_431 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1454-1454"];
m19_432 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Security security", span="1456-1456"];
m19_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Securities.TryGetValue(symbol, out security)", span="1457-1457"];
m19_437 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="var universe = UniverseManager.Values.OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(symbol))", span="1465-1465"];
m19_439 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="var ret = universe.Remove(symbol)", span="1468-1468"];
m19_440 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="symbol == _benchmarkSymbol", span="1471-1471"];
m19_441 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Securities.Remove(symbol)", span="1473-1473"];
m19_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Transactions.CancelOpenOrders(security.Symbol)", span="1460-1460"];
m19_446 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="return false;", span="1484-1484"];
m19_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="security.Invested", span="1463-1463"];
m19_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Liquidate(security.Symbol)", span="1463-1463"];
m19_438 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="universe != null", span="1466-1466"];
m19_444 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="SubscriptionManager.HasCustomData = universe.Members.Any(x => x.Value.Subscriptions.Any(y => y.IsCustomData))", span="1479-1479"];
m19_445 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="return ret;", span="1481-1481"];
m19_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="security = CreateBenchmarkSecurity()", span="1475-1475"];
m19_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="AddToUserDefinedUniverse(security)", span="1476-1476"];
m19_447 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1454-1454"];
m19_147 [cluster="lambda expression", file="RenkoConsolidator.cs", label="x.GetParameters().Length == 1", span="597-597"];
m19_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1007-1007"];
m19_393 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="82-82"];
m19_79 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="DataFeed != null", span="366-366"];
m19_282 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="62-62"];
m19_37 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="job == null", span="254-254"];
m19_84 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="RenkoConsolidator.cs", label="ResultHandler.LogMessage(message)", prediction=19, span="371-371"];
m19_85 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="ResultHandler.RuntimeError(message, err.StackTrace)", span="372-372"];
m19_86 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err.StackTrace)", span="373-373"];
m19_87 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var charts = new Dictionary<string, Chart>(ResultHandler.Charts)", span="385-385"];
m19_263 [cluster="QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="130-130"];
m19_42 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="threadResults = new Thread(ResultHandler.Run, 0) {Name = ''Result Thread''}", span="268-268"];
m19_205 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="job.DataEndpoint", span="492-492"];
m19_206 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="DataFeedEndpoint.Backtesting", span="496-496"];
m19_207 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="df = new BacktestingDataFeed(algorithm, (BacktestNodePacket)job)", span="497-497"];
m19_208 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Backtesting Datafeed'')", span="498-498"];
m19_209 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="DataFeedEndpoint.FileSystem", span="502-502"];
m19_391 [cluster="System.Collections.Generic.List<T>.List()", file="RenkoConsolidator.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m19_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="768-768"];
m19_417 [cluster="QuantConnect.Symbol.IsCanonical()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="164-164"];
m19_332 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", span="30-30"];
m19_464 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1494-1494"];
m19_465 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="RenkoConsolidator.cs", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m)", span="1501-1501"];
m19_466 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1494-1494"];
m19_81 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="ResultHandler != null", span="367-367"];
m19_82 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="RenkoConsolidator.cs", label="var message = ''Runtime Error: '' + err.Message", prediction=19, span="369-369"];
m19_83 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="370-370"];
m19_114 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Log.Trace(''Waiting for threads to exit...'')", span="439-439"];
m19_113 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Thread.Sleep(100)", span="439-439"];
m19_115 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="threadFeed != null && threadFeed.IsAlive", span="441-441"];
m19_140 [cluster="AggregateCatalog.cstr", file="RenkoConsolidator.cs", label="Entry AggregateCatalog.cstr", span=""];
m19_143 [cluster="CompositionContainer.cstr", file="RenkoConsolidator.cs", label="Entry CompositionContainer.cstr", span=""];
m19_150 [cluster="System.Threading.Thread.Start()", file="RenkoConsolidator.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m19_142 [cluster="Unk.Add", file="RenkoConsolidator.cs", label="Entry Unk.Add", span=""];
m19_144 [cluster="CompositionContainer.GetExportedValueByTypeName<T>(string)", file="RenkoConsolidator.cs", label="Entry CompositionContainer.GetExportedValueByTypeName<T>(string)", span="338-338"];
m19_145 [cluster="Unk.Error", file="RenkoConsolidator.cs", label="Entry Unk.Error", span=""];
m19_148 [cluster="QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", span="35-35"];
m19_151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="439-439"];
m19_152 [cluster="QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", span="41-41"];
m19_455 [cluster="lambda expression", file="RenkoConsolidator.cs", label="x.Members.ContainsKey(symbol)", span="1465-1465"];
m19_454 [cluster="lambda expression", file="RenkoConsolidator.cs", label="Entry lambda expression", span="1465-1465"];
m19_458 [cluster="lambda expression", file="RenkoConsolidator.cs", label="Entry lambda expression", span="1479-1479"];
m19_456 [cluster="lambda expression", file="RenkoConsolidator.cs", label="Exit lambda expression", span="1465-1465"];
m19_459 [cluster="lambda expression", file="RenkoConsolidator.cs", label="x.Value.Subscriptions.Any(y => y.IsCustomData)", span="1479-1479"];
m19_460 [cluster="lambda expression", file="RenkoConsolidator.cs", label="Exit lambda expression", span="1479-1479"];
m19_461 [cluster="lambda expression", file="RenkoConsolidator.cs", label="Entry lambda expression", span="1479-1479"];
m19_462 [cluster="lambda expression", file="RenkoConsolidator.cs", label="y.IsCustomData", span="1479-1479"];
m19_463 [cluster="lambda expression", file="RenkoConsolidator.cs", label="Exit lambda expression", span="1479-1479"];
m19_201 [cluster="System.Exception.Exception(string)", file="RenkoConsolidator.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m19_202 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RenkoConsolidator.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m19_137 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="RenkoConsolidator.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m19_182 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RenkoConsolidator.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m19_177 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m19_178 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="123-123"];
m19_265 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m19_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="750-750"];
m19_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="856-856"];
m19_214 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m19_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1550-1550"];
m19_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="856-856"];
m19_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="RenkoConsolidator.cs", label="SetBrokerageModel(Brokerages.BrokerageModel.Create(brokerage, accountType))", span="858-858"];
m19_26 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Thread threadFeed = null", span="234-234"];
m19_109 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="RealTimeHandler.Exit()", span="429-429"];
m19_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="724-724"];
m19_450 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="RenkoConsolidator.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m19_532 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1688-1688"];
m19_533 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="RenkoConsolidator.cs", label="historyProvider == null", span="1690-1690"];
m19_535 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="RenkoConsolidator.cs", label="HistoryProvider = historyProvider", span="1694-1694"];
m19_534 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="RenkoConsolidator.cs", label="throw new ArgumentNullException(''Algorithm.SetHistoryProvider(): Historical data provider cannot be null.'');", span="1692-1692"];
m19_536 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1688-1688"];
m19_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="776-776"];
m19_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="696-696"];
m19_235 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="104-104"];
m19_236 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="106-106"];
m19_479 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="RenkoConsolidator.cs", label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="1552-1552"];
m19_481 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="RenkoConsolidator.cs", label="_debugMessages.Enqueue(message)", span="1553-1553"];
m19_482 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="RenkoConsolidator.cs", label="_previousDebugMessage = message", span="1554-1554"];
m19_480 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="RenkoConsolidator.cs", label="return;", span="1552-1552"];
m19_483 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1550-1550"];
m19_179 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="107-107"];
m19_180 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RenkoConsolidator.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m19_181 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RenkoConsolidator.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m19_365 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="436-436"];
m19_485 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1563-1563"];
m19_486 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="RenkoConsolidator.cs", label="!_liveMode && message == ''''", span="1565-1565"];
m19_488 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="RenkoConsolidator.cs", label="_logMessages.Enqueue(message)", span="1566-1566"];
m19_487 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="RenkoConsolidator.cs", label="return;", span="1565-1565"];
m19_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1563-1563"];
m19_47 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="initializeComplete = false", span="282-282"];
m19_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1030-1030"];
m19_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RenkoConsolidator.cs", label=Exception, span="1041-1041"];
m19_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1088-1088"];
m19_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RenkoConsolidator.cs", label="var start = new DateTime(year, month, day)", span="1034-1034"];
m19_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RenkoConsolidator.cs", label="SetStartDate(start)", span="1039-1039"];
m19_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1030-1030"];
m19_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RenkoConsolidator.cs", label="start = start.Date", span="1037-1037"];
m19_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RenkoConsolidator.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1043-1043"];
m19_281 [cluster="System.TimeSpan.FromTicks(long)", file="RenkoConsolidator.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m19_167 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="389-389"];
m19_168 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="314-314"];
m19_30 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="job = Queue.NextJob(out algorithmPath)", span="242-242"];
m19_246 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="60-60"];
m19_303 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="RenkoConsolidator.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="571-571"];
m19_166 [cluster="QuantConnect.Symbol.ToString()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m19_46 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || SetupHandler.Errors.Count > 0", span="280-280"];
m19_138 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="RenkoConsolidator.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m19_301 [cluster="System.DateTime.DateTime()", file="RenkoConsolidator.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m19_76 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="throw AlgorithmManager.RunTimeError;", span="359-359"];
m19_27 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="RenkoConsolidator.cs", label="Thread threadTransactions = null", prediction=21, span="235-235"];
m19_106 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="timer.Stop()", span="426-426"];
m19_107 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="TransactionHandler.Exit()", span="427-427"];
m19_108 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="DataFeed.Exit()", span="428-428"];
m19_136 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="RenkoConsolidator.cs", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0"];
m19_96 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="403-403"];
m19_222 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="28-28"];
m19_88 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var orders = new Dictionary<int, Order>(algorithm.Transactions.Orders)", span="386-386"];
m19_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="724-724"];
m19_156 [cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="77-77"];
m19_154 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="58-58"];
m19_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="732-732"];
m19_36 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="job = null", span="252-252"];
m19_97 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="404-404"];
m19_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="RenkoConsolidator.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1577-1577"];
m19_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="RenkoConsolidator.cs", label="_errorMessages.Enqueue(message)", span="1578-1578"];
m19_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="RenkoConsolidator.cs", label="_previousErrorMessage = message", span="1579-1579"];
m19_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="RenkoConsolidator.cs", label="return;", span="1577-1577"];
m19_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1575-1575"];
m19_174 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="193-193"];
m19_78 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Log.Error(''Engine.Run(): Breaking out of parent try-catch: '' + err.Message + '' '' + err.StackTrace)", span="365-365"];
m19_284 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", span="81-81"];
m19_285 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="60-60"];
m19_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="RenkoConsolidator.cs", label=job, span=""];
m19_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1237-1237"];
m19_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="RenkoConsolidator.cs", label="return AddSecurity(securityType, symbol, resolution, null, fillDataForward, leverage, extendedMarketHours);", span="1239-1239"];
m19_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1237-1237"];
m19_542 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1715-1715"];
m19_543 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="RenkoConsolidator.cs", label="Status = status", span="1717-1717"];
m19_544 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1715-1715"];
m19_44 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="algorithm = SetupHandler.CreateAlgorithmInstance(algorithmPath)", span="274-274"];
m19_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="OnEndOfDay(symbol.ToString())", span="734-734"];
m19_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1304-1304"];
m19_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="return AddSecurity<Equity>(SecurityType.Equity, ticker, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="1306-1306"];
m19_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1304-1304"];
m19_52 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="291-291"];
m19_53 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="ResultHandler.RuntimeError(runtimeMessage, err.StackTrace)", span="292-292"];
m19_54 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="293-293"];
m19_61 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="TransactionHandler  = GetTransactionHandler(algorithm, _brokerage, ResultHandler, job)", span="307-307"];
m19_55 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label=initializeComplete, span="297-297"];
m19_56 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="300-300"];
m19_57 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="algorithm.SetLiveMode(LiveMode)", span="301-301"];
m19_58 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="RenkoConsolidator.cs", label="algorithm.SetLocked()", prediction=17, span="302-302"];
m19_60 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="RenkoConsolidator.cs", label="DataFeed            = GetDataFeedHandler(algorithm, job)", prediction=23, span="306-306"];
m19_59 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="ResultHandler.SetAlgorithm(algorithm)", span="305-305"];
m19_62 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="RealTimeHandler     = GetRealTimeHandler(algorithm, _brokerage, DataFeed, ResultHandler, job)", span="308-308"];
m19_65 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="threadFeed = new Thread(DataFeed.Run, 0) {Name = ''DataFeed Thread''}", span="317-317"];
m19_66 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="threadTransactions = new Thread(TransactionHandler.Run, 0) {Name = ''Transaction Thread''}", span="318-318"];
m19_63 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="SetupHandler.SetupErrorHandler(ResultHandler, _brokerage)", span="311-311"];
m19_64 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="ResultHandler.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Running)", span="314-314"];
m19_67 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="threadRealTime = new Thread(RealTimeHandler.Run, 0) {Name = ''RealTime Thread''}", span="319-319"];
m19_69 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="threadTransactions.Start()", span="323-323"];
m19_68 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="threadFeed.Start()", span="322-322"];
m19_70 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="threadRealTime.Start()", span="324-324"];
m19_190 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="110-110"];
m19_80 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="DataFeed.Exit()", span="366-366"];
m19_163 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="RenkoConsolidator.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m19_41 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="ResultHandler = GetResultHandler(job)", span="267-267"];
m19_134 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="RenkoConsolidator.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m19_396 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m19_73 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="Log.Error(''Engine.Main(): Failed to complete in time: '' + SetupHandler.MaximumRuntime.ToString(''F''))", span="352-352"];
m19_524 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="RenkoConsolidator.cs", label="Resolution resolution", span="1664-1664"];
m19_525 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="RenkoConsolidator.cs", label=_liveMode, span="1665-1665"];
m19_526 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="RenkoConsolidator.cs", label="resolution = Resolution.Second", span="1667-1667"];
m19_527 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="RenkoConsolidator.cs", label="var hasNonAddSecurityUniverses = (\r\n                    from kvp in UniverseManager\r\n                    let config = kvp.Value.Configuration\r\n                    let symbol = UserDefinedUniverse.CreateSymbol(config.SecurityType, config.Market)\r\n                    where config.Symbol != symbol\r\n                    select kvp).Any()", span="1672-1677"];
m19_528 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="RenkoConsolidator.cs", label="resolution = hasNonAddSecurityUniverses ? UniverseSettings.Resolution : Resolution.Daily", span="1679-1679"];
m19_529 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="RenkoConsolidator.cs", label="return SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer, _benchmarkSymbol, resolution, true, 1m, false, true, false, LiveMode);", span="1681-1681"];
m19_530 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1661-1661"];
m19_75 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="AlgorithmManager.RunTimeError != null", span="357-357"];
m19_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1189-1189"];
m19_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="RenkoConsolidator.cs", label="!_locked", span="1191-1191"];
m19_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="RenkoConsolidator.cs", label="_liveMode = live", span="1193-1193"];
m19_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="RenkoConsolidator.cs", label="Notify = new NotificationManager(live)", span="1194-1194"];
m19_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="RenkoConsolidator.cs", label="TradeBuilder.SetLiveMode(live)", span="1195-1195"];
m19_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="RenkoConsolidator.cs", label=live, span="1197-1197"];
m19_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="RenkoConsolidator.cs", label="_startDate = DateTime.Today", span="1199-1199"];
m19_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="RenkoConsolidator.cs", label="_endDate = QuantConnect.Time.EndOfTime", span="1200-1200"];
m19_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1189-1189"];
m19_89 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var holdings = new Dictionary<string, Holding>()", span="387-387"];
m19_90 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var statistics = new Dictionary<string, string>()", span="388-388"];
m19_91 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="var banner = new Dictionary<string, string>()", span="389-389"];
m19_92 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="string strategyEquityKey = ''Strategy Equity''", span="394-394"];
m19_93 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="string equityKey = ''Equity''", span="395-395"];
m19_94 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label="string dailyPerformanceKey = ''Daily Performance''", span="396-396"];
m19_28 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="RenkoConsolidator.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m19_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="587-587"];
m19_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="!_checkedForOnDataSlice", span="590-590"];
m19_29 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", color=green, community=0, file="RenkoConsolidator.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", prediction=24, span="93-93"];
m19_45 [cluster="QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", color=green, community=0, file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", prediction=17, span="33-33"];
m19_71 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", color=green, community=0, file="RenkoConsolidator.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", prediction=17, span="45-45"];
m19_72 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="200-200"];
m19_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="method == null", span="600-600"];
m19_116 [cluster="System.Action<T>.Invoke(T)", file="RenkoConsolidator.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m19_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="_checkedForOnDataSlice = true", span="592-592"];
m19_31 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="56-56"];
m19_38 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m19_35 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="41-41"];
m19_40 [cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59"];
m19_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="548-548"];
m19_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="RenkoConsolidator.cs", label="_userSetSecurityInitializer = true", span="551-551"];
m19_43 [cluster="QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", span="61-61"];
m19_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="442-442"];
m19_51 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="RenkoConsolidator.cs", label=Exception, span="289-289"];
m19_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="442-442"];
m19_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="568-568"];
m19_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="_onDataSlice(slice)", span="614-614"];
m19_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="587-587"];
m19_39 [cluster="QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", span="45-45"];
m19_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="568-568"];
m19_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="var method = GetType().GetMethods()\r\n                    .Where(x => x.Name == ''OnData'')\r\n                    .Where(x => x.DeclaringType != typeof(QCAlgorithm))\r\n                    .Where(x => x.GetParameters().Length == 1)\r\n                    .FirstOrDefault(x => x.GetParameters()[0].ParameterType == typeof (Slice))", span="594-598"];
m19_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="return;", span="602-602"];
m19_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="var parameter = Expression.Parameter(typeof (Slice), ''data'')", span="606-606"];
m19_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="_onDataSlice != null", span="612-612"];
m19_95 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="RenkoConsolidator.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m19_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="RenkoConsolidator.cs", label="SecurityInitializer = securityInitializer", span="552-552"];
m19_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="RenkoConsolidator.cs", label="throw new NotImplementedException(''Please override the Initialize() method'');", span="445-445"];
m19_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="RenkoConsolidator.cs", label="SetSecurityInitializer(new FuncSecurityInitializer((security, seedSecurity) => securityInitializer(security)))", span="570-570"];
m19_77 [cluster="Unk.>", file="RenkoConsolidator.cs", label="Entry Unk.>", span=""];
m19_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="_onDataSlice = lambda.Compile()", span="609-609"];
m19_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="548-548"];
m19_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="var self = Expression.Constant(this)", span="605-605"];
m19_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="var call = Expression.Call(self, method, parameter)", span="607-607"];
m19_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="RenkoConsolidator.cs", label="var lambda = Expression.Lambda<Action<Slice>>(call, parameter)", span="608-608"];
m19_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1635-1635"];
m19_514 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="market == null", span="1638-1638"];
m19_515 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1640-1640"];
m19_516 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1642-1642"];
m19_518 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="!SymbolCache.TryGetSymbol(ticker, out symbol)", span="1647-1647"];
m19_519 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="symbol = QuantConnect.Symbol.Create(ticker, securityType, market)", span="1649-1649"];
m19_520 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1652-1653"];
m19_517 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="Symbol symbol", span="1646-1646"];
m19_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="AddToUserDefinedUniverse(security)", span="1654-1654"];
m19_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="return (T)security;", span="1655-1655"];
m19_523 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1635-1635"];
m19_477 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="217-217"];
m19_390 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m19_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1222-1222"];
m19_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="RenkoConsolidator.cs", label="return AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours);", span="1224-1224"];
m19_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1222-1222"];
m19_478 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="372-372"];
m19_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="776-776"];
m19_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="RenkoConsolidator.cs", label="handler == null", span="892-892"];
m19_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="var canonicalSecurity = (Option) SecurityManager.CreateSecurity(new List<Type>() { typeof(ZipEntryName) }, Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1337-1339"];
m19_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1318-1318"];
m19_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="market == null", span="1320-1320"];
m19_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="var alias = ''?'' + underlying", span="1329-1329"];
m19_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(underlying, SecurityType.Option, market, alias)", span="1332-1332"];
m19_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, underlying, SecurityType.Option)", span="1335-1335"];
m19_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, underlying, SecurityType.Option, CashBook.AccountCurrency)", span="1336-1336"];
m19_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1347-1347"];
m19_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Option, out market)", span="1322-1322"];
m19_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Symbol canonicalSymbol", span="1328-1328"];
m19_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Option);", span="1324-1324"];
m19_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1330-1330"];
m19_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1345-1345"];
m19_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1349-1349"];
m19_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="canonicalSecurity.IsTradable = false", span="1340-1340"];
m19_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Securities.Add(canonicalSecurity)", span="1341-1341"];
m19_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="universe = new OptionChainUniverse(canonicalSecurity, settings, SubscriptionManager, SecurityInitializer)", span="1348-1348"];
m19_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="return canonicalSecurity;", span="1352-1352"];
m19_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Universe universe", span="1344-1344"];
m19_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1318-1318"];
m19_394 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m19_457 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RenkoConsolidator.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m19_363 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="RenkoConsolidator.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m19_537 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1701-1701"];
m19_538 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="RenkoConsolidator.cs", label="exception == null", span="1703-1703"];
m19_540 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="RenkoConsolidator.cs", label="RunTimeError = exception", span="1708-1708"];
m19_539 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="RenkoConsolidator.cs", label="throw new ArgumentNullException(''Algorithm.SetRunTimeError(): Algorithm.RunTimeError cannot be set to null.'');", span="1705-1705"];
m19_541 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1701-1701"];
m19_364 [cluster="QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Entry QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", span="60-60"];
m19_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1411-1411"];
m19_421 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="RenkoConsolidator.cs", label="var future = (Future)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1413-1414"];
m19_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="RenkoConsolidator.cs", label="AddToUserDefinedUniverse(future)", span="1416-1416"];
m19_423 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="RenkoConsolidator.cs", label="return future;", span="1418-1418"];
m19_424 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1411-1411"];
m19_407 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="var canonicalSecurity = (Future)SecurityManager.CreateSecurity(types, Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1385-1387"];
m19_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1364-1364"];
m19_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="market == null", span="1366-1366"];
m19_401 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="var alias = ''/'' + symbol", span="1375-1375"];
m19_403 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(symbol, SecurityType.Future, market, alias)", span="1378-1378"];
m19_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, symbol, SecurityType.Future)", span="1381-1381"];
m19_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, symbol, SecurityType.Future, CashBook.AccountCurrency)", span="1382-1382"];
m19_406 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="var types = SubscriptionManager.LookupSubscriptionConfigDataTypes(SecurityType.Future, resolution, canonicalSymbol.IsCanonical())", span="1383-1383"];
m19_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1395-1395"];
m19_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Future, out market)", span="1368-1368"];
m19_400 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Symbol canonicalSymbol", span="1374-1374"];
m19_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Future);", span="1370-1370"];
m19_402 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1376-1376"];
m19_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1393-1393"];
m19_414 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1397-1397"];
m19_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="canonicalSecurity.IsTradable = false", span="1388-1388"];
m19_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Securities.Add(canonicalSecurity)", span="1389-1389"];
m19_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="universe = new FuturesChainUniverse(canonicalSecurity, settings, SubscriptionManager, SecurityInitializer)", span="1396-1396"];
m19_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="return canonicalSecurity;", span="1400-1400"];
m19_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Universe universe", span="1392-1392"];
m19_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1364-1364"];
m19_395 [cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", span="48-48"];
m19_247 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m19_389 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="152-152"];
m19_316 [cluster="System.DateTime.AddTicks(long)", file="RenkoConsolidator.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m19_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="890-890"];
m19_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1252-1252"];
m19_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="securityType == SecurityType.Option", span="1255-1255"];
m19_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="return AddOption(symbol, resolution, market, fillDataForward, leverage);", span="1257-1257"];
m19_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="securityType == SecurityType.Future", span="1260-1260"];
m19_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="return AddFuture(symbol, resolution, market, fillDataForward, leverage);", span="1262-1262"];
m19_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="market == null", span="1267-1267"];
m19_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1269-1269"];
m19_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1271-1271"];
m19_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="!SymbolCache.TryGetSymbol(symbol, out symbolObject)", span="1276-1276"];
m19_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="symbolObject = QuantConnect.Symbol.Create(symbol, securityType, market)", span="1278-1278"];
m19_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                    symbolObject, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1281-1282"];
m19_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="Symbol symbolObject", span="1275-1275"];
m19_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="AddToUserDefinedUniverse(security)", span="1284-1284"];
m19_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="return security;", span="1285-1285"];
m19_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label=Exception, span="1287-1287"];
m19_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="Error(''Algorithm.AddSecurity(): '' + err)", span="1289-1289"];
m19_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="return null;", span="1290-1290"];
m19_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1252-1252"];
m19_467 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1513-1513"];
m19_468 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="RenkoConsolidator.cs", label="AddData<T>(symbol, resolution, TimeZones.NewYork, fillDataForward, leverage)", span="1516-1516"];
m19_469 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1513-1513"];
m19_302 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="RenkoConsolidator.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="470-470"];
m19_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1430-1430"];
m19_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="return AddSecurity<Forex>(SecurityType.Forex, ticker, resolution, market, fillDataForward, leverage, false);", span="1432-1432"];
m19_427 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1430-1430"];
m19_506 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1612-1612"];
m19_507 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="RenkoConsolidator.cs", label=quit, span="1614-1614"];
m19_508 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="RenkoConsolidator.cs", label="Status = AlgorithmStatus.Stopped", span="1616-1616"];
m19_509 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1612-1612"];
m19_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1444-1444"];
m19_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="return AddSecurity<Cfd>(SecurityType.Cfd, ticker, resolution, market, fillDataForward, leverage, false);", span="1446-1446"];
m19_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1444-1444"];
m19_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label=algorithm, span=""];
m19_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="start < (new DateTime(1900, 01, 01))", span="1095-1095"];
m19_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="start > _endDate", span="1103-1103"];
m19_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="start = start.RoundDown(TimeSpan.FromDays(1))", span="1110-1110"];
m19_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="return;", span="1091-1091"];
m19_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="1097-1097"];
m19_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="_endDate != new DateTime()", span="1101-1101"];
m19_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="throw new Exception(''Please select start date less than end date.'');", span="1105-1105"];
m19_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="!_locked", span="1113-1113"];
m19_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="_startDate = start", span="1118-1118"];
m19_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="!LiveMode", span="1116-1116"];
m19_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="1124-1124"];
m19_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="SetDateTime(_startDate.ConvertToUtc(TimeZone))", span="1119-1119"];
m19_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1088-1088"];
m19_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="598-598"];
m19_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1588-1588"];
m19_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="RenkoConsolidator.cs", label="var message = error.Message", span="1590-1590"];
m19_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="RenkoConsolidator.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1591-1591"];
m19_499 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="RenkoConsolidator.cs", label="_errorMessages.Enqueue(message)", span="1592-1592"];
m19_500 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="RenkoConsolidator.cs", label="_previousErrorMessage = message", span="1593-1593"];
m19_498 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="RenkoConsolidator.cs", label="return;", span="1591-1591"];
m19_501 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1588-1588"];
m19_484 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="RenkoConsolidator.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m19_448 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m19_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1173-1173"];
m19_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="RenkoConsolidator.cs", label="_locked = true", span="1175-1175"];
m19_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1173-1173"];
m19_451 [cluster="Unk.Remove", file="RenkoConsolidator.cs", label="Entry Unk.Remove", span=""];
m19_545 [file="RenkoConsolidator.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m19_546 [file="RenkoConsolidator.cs", label="System.Action<QuantConnect.Securities.Security>", span=""];
m19_547 [file="RenkoConsolidator.cs", label=string, span=""];
m19_548 [file="RenkoConsolidator.cs", label="QuantConnect.Symbol", span=""];
m20_10 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", span="124-124"];
m20_11 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="RsiAlphaModel.cs", label="Message = message", span="126-126"];
m20_12 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="RsiAlphaModel.cs", label="Data = data", span="127-127"];
m20_13 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="RsiAlphaModel.cs", label="Subject = subject", span="128-128"];
m20_14 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="RsiAlphaModel.cs", label="Address = address", span="129-129"];
m20_15 [cluster="QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Notifications.NotificationEmail.NotificationEmail(string, string, string, string)", span="124-124"];
m20_6 [cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", span="84-84"];
m20_7 [cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="RsiAlphaModel.cs", label="PhoneNumber = number", span="86-86"];
m20_8 [cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="RsiAlphaModel.cs", label="Message = message", span="87-87"];
m20_9 [cluster="QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Notifications.NotificationSms.NotificationSms(string, string)", span="84-84"];
m20_0 [cluster="QuantConnect.Notifications.Notification.Send()", file="RsiAlphaModel.cs", label="Entry QuantConnect.Notifications.Notification.Send()", span="31-31"];
m20_1 [cluster="QuantConnect.Notifications.Notification.Send()", file="RsiAlphaModel.cs", label="Exit QuantConnect.Notifications.Notification.Send()", span="31-31"];
m20_2 [cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", span="57-57"];
m20_3 [cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="RsiAlphaModel.cs", label="Address = address", span="59-59"];
m20_4 [cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="RsiAlphaModel.cs", label="Data = data", span="60-60"];
m20_5 [cluster="QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Notifications.NotificationWeb.NotificationWeb(string, object)", span="57-57"];
m20_16 [file="RsiAlphaModel.cs", label="QuantConnect.Notifications.NotificationWeb", span=""];
m20_17 [file="RsiAlphaModel.cs", label="QuantConnect.Notifications.NotificationSms", span=""];
m20_18 [file="RsiAlphaModel.cs", label="QuantConnect.Notifications.NotificationEmail", span=""];
m22_0 [cluster="QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", file="SerializedInsight.cs", label="Entry QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", span="15-15"];
m22_1 [cluster="QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", file="SerializedInsight.cs", label="var data = string.Format(''{0}:{1}'', token, timestamp)", span="19-19"];
m22_2 [cluster="QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", file="SerializedInsight.cs", label="return SHA256(data);", span="20-20"];
m22_3 [cluster="QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", file="SerializedInsight.cs", label="Exit QuantConnect.Util.ApiExtensions.CreateSecureHash(int, string)", span="15-15"];
m22_15 [cluster="System.Text.Encoding.GetBytes(string)", file="SerializedInsight.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m22_17 [cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", file="SerializedInsight.cs", label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", span="0-0"];
m22_4 [cluster="string.Format(string, object, object)", file="SerializedInsight.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m22_19 [cluster="System.Text.StringBuilder.Append(string)", file="SerializedInsight.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m22_13 [cluster="System.Security.Cryptography.SHA256Managed.SHA256Managed()", file="SerializedInsight.cs", label="Entry System.Security.Cryptography.SHA256Managed.SHA256Managed()", span="0-0"];
m22_20 [cluster="System.Text.StringBuilder.ToString()", file="SerializedInsight.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m22_18 [cluster="byte.ToString(string)", file="SerializedInsight.cs", label="Entry byte.ToString(string)", span="0-0"];
m22_14 [cluster="System.Text.StringBuilder.StringBuilder()", file="SerializedInsight.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m22_5 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", file="SerializedInsight.cs", label="Entry QuantConnect.Util.ApiExtensions.SHA256(string)", span="28-28"];
m22_6 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", file="SerializedInsight.cs", label="var crypt = new SHA256Managed()", span="30-30"];
m22_8 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", file="SerializedInsight.cs", label="var crypto = crypt.ComputeHash(Encoding.UTF8.GetBytes(data), 0, Encoding.UTF8.GetByteCount(data))", span="32-32"];
m22_7 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", file="SerializedInsight.cs", label="var hash = new StringBuilder()", span="31-31"];
m22_10 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", file="SerializedInsight.cs", label="hash.Append(theByte.ToString(''x2''))", span="35-35"];
m22_11 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", file="SerializedInsight.cs", label="return hash.ToString();", span="37-37"];
m22_9 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", file="SerializedInsight.cs", label=crypto, span="33-33"];
m22_12 [cluster="QuantConnect.Util.ApiExtensions.SHA256(string)", file="SerializedInsight.cs", label="Exit QuantConnect.Util.ApiExtensions.SHA256(string)", span="28-28"];
n24 -> n21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
n2 -> n4  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
n19 -> n21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
d7 -> d10  [color=green, key=1, label=hash, style=dashed];
d7 -> d11  [color=green, key=1, label=hash, style=dashed];
m0_124 -> m0_138  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_135 -> m0_150  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_136 -> m0_138  [color=darkseagreen4, key=1, label=sliceDateTimes, style=dashed];
m0_136 -> m0_149  [color=darkseagreen4, key=1, label=sliceDateTimes, style=dashed];
m0_136 -> m0_151  [color=darkseagreen4, key=1, label=sliceDateTimes, style=dashed];
m0_150 -> m0_150  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_141 -> m0_149  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
m0_140 -> m0_142  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m0_143 -> m0_149  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
m0_145 -> m0_148  [color=darkseagreen4, key=1, label=exchange, style=dashed];
m0_146 -> m0_148  [color=darkseagreen4, key=1, label=extendedMarket, style=dashed];
m0_48 -> m0_156  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m0_162 -> m0_165  [color=darkseagreen4, key=1, label="out QuantConnect.Algorithm.Framework.Alphas.IAlphaModel", style=dashed];
m0_98 -> m0_120  [color=darkseagreen4, key=1, label=cashBook, style=dashed];
m0_99 -> m0_120  [color=darkseagreen4, key=1, label=changes, style=dashed];
m0_100 -> m0_102  [color=darkseagreen4, key=1, label=sliceDateTimes, style=dashed];
m0_101 -> m0_121  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_103 -> m0_120  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
m0_121 -> m0_121  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_107 -> m0_118  [color=darkseagreen4, key=1, label=packets, style=dashed];
m0_107 -> m0_119  [color=darkseagreen4, key=1, label=packets, style=dashed];
m0_107 -> m0_120  [color=darkseagreen4, key=1, label=packets, style=dashed];
m0_109 -> m0_118  [color=darkseagreen4, key=1, label=security, style=dashed];
m0_110 -> m0_113  [color=darkseagreen4, key=1, label=exchange, style=dashed];
m0_111 -> m0_113  [color=darkseagreen4, key=1, label=extendedMarket, style=dashed];
m0_114 -> m0_118  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m0_16 -> m0_18  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m0_16 -> m0_19  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m0_23 -> m0_65  [color=darkseagreen4, key=1, label=actualInsights, style=dashed];
m0_23 -> m0_35  [color=darkseagreen4, key=1, label=actualInsights, style=dashed];
m0_23 -> m0_37  [color=darkseagreen4, key=1, label=actualInsights, style=dashed];
m0_24 -> m0_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.GeneratedInsightsCollection", style=dashed];
m0_38 -> m0_40  [color=darkseagreen4, key=1, label=actual, style=dashed];
m0_38 -> m0_41  [color=darkseagreen4, key=1, label=actual, style=dashed];
m0_38 -> m0_42  [color=darkseagreen4, key=1, label=actual, style=dashed];
m0_38 -> m0_43  [color=darkseagreen4, key=1, label=actual, style=dashed];
m0_38 -> m0_44  [color=darkseagreen4, key=1, label=actual, style=dashed];
m0_38 -> m0_45  [color=darkseagreen4, key=1, label=actual, style=dashed];
m0_25 -> m0_35  [color=darkseagreen4, key=1, label=expectedInsights, style=dashed];
m0_26 -> m0_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_32  [color=darkseagreen4, key=1, label=consolidators, style=dashed];
m0_39 -> m0_41  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_39 -> m0_42  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_39 -> m0_43  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_39 -> m0_44  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_39 -> m0_45  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_28 -> m0_34  [color=darkseagreen4, key=1, label=slice, style=dashed];
m0_30 -> m0_33  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_36 -> m0_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_46 -> m0_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_71 -> m0_73  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m0_71 -> m0_74  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m0_73 -> m0_76  [color=darkseagreen4, key=1, label=model, style=dashed];
m0_73 -> m0_80  [color=darkseagreen4, key=1, label=model, style=dashed];
m0_75 -> m0_80  [color=darkseagreen4, key=1, label=changes, style=dashed];
m0_76 -> m0_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_83 -> m0_85  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m0_83 -> m0_86  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m0_85 -> m0_88  [color=darkseagreen4, key=1, label=model, style=dashed];
m0_85 -> m0_91  [color=darkseagreen4, key=1, label=model, style=dashed];
m0_87 -> m0_91  [color=darkseagreen4, key=1, label=changes, style=dashed];
m0_88 -> m0_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_168 -> m0_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_18  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_19  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_20  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_22  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_29  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_31  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_34  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_73  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_74  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_76  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_80  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_85  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_86  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_88  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_91  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_108  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_139  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_168 -> m0_161  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.CommonAlphaModelTests", style=dashed];
m0_169 -> m0_65  [color=darkseagreen4, key=1, label=actualInsights, style=dashed];
m0_170 -> m0_80  [color=darkseagreen4, key=1, label=model, style=dashed];
m0_171 -> m0_80  [color=darkseagreen4, key=1, label=changes, style=dashed];
m0_172 -> m0_91  [color=darkseagreen4, key=1, label=model, style=dashed];
m0_173 -> m0_91  [color=darkseagreen4, key=1, label=changes, style=dashed];
m3_18 -> m3_28  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_18 -> m3_29  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_13 -> m3_15  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m3_14 -> m3_16  [color=green, key=1, label=security, style=dashed];
m3_20 -> m3_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m3_35 -> m3_14  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m3_35 -> m3_15  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m3_35 -> m3_16  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m3_35 -> m3_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m3_35 -> m3_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m3_35 -> m3_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m3_35 -> m3_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m4_14 -> m4_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_22 -> m4_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests", style=dashed];
m4_22 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Algorithm.Framework.Alphas.ConstantAlphaModelTests", style=dashed];
m7_148 -> m7_349  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m7_7 -> m7_10  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m7_7 -> m7_12  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m7_7 -> m7_25  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m7_7 -> m7_55  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m7_7 -> m7_74  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m7_7 -> m7_105  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m7_7 -> m7_107  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m7_7 -> m7_138  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m7_7 -> m7_139  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m7_7 -> m7_140  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m7_8 -> m7_15  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_19  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_31  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_33  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_39  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_42  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_60  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_66  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_78  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_80  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_82  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_87  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_90  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_93  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_104  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_111  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_113  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_115  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_120  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_123  [color=green, key=1, label=milliseconds, style=dashed];
m7_8 -> m7_126  [color=green, key=1, label=milliseconds, style=dashed];
m7_9 -> m7_23  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m7_9 -> m7_48  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m7_9 -> m7_51  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m7_9 -> m7_72  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m7_9 -> m7_98  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m7_9 -> m7_101  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m7_9 -> m7_131  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m7_9 -> m7_134  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m7_9 -> m7_137  [color=darkseagreen4, key=1, label=longTime, style=dashed];
m7_27 -> m7_31  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_27 -> m7_33  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_27 -> m7_30  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_27 -> m7_32  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_37 -> m7_39  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m7_40 -> m7_42  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m7_46 -> m7_48  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m7_49 -> m7_51  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m7_57 -> m7_60  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_63 -> m7_66  [color=darkseagreen4, key=1, label=bar, style=dashed];
m7_69 -> m7_72  [color=darkseagreen4, key=1, label=bigBar, style=dashed];
m7_76 -> m7_78  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_76 -> m7_80  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_76 -> m7_82  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_76 -> m7_79  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_76 -> m7_81  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_85 -> m7_87  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m7_88 -> m7_90  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m7_91 -> m7_93  [color=darkseagreen4, key=1, label=openInterest, style=dashed];
m7_96 -> m7_98  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m7_99 -> m7_101  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m7_102 -> m7_104  [color=darkseagreen4, key=1, label=bigOpenInterest, style=dashed];
m7_109 -> m7_111  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_109 -> m7_113  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_109 -> m7_115  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_109 -> m7_112  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_109 -> m7_114  [color=darkseagreen4, key=1, label=tick, style=dashed];
m7_118 -> m7_120  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m7_121 -> m7_123  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m7_124 -> m7_126  [color=darkseagreen4, key=1, label=openInterest, style=dashed];
m7_129 -> m7_131  [color=darkseagreen4, key=1, label=bigQuoteBar, style=dashed];
m7_132 -> m7_134  [color=darkseagreen4, key=1, label=bigTradeBar, style=dashed];
m7_135 -> m7_137  [color=darkseagreen4, key=1, label=bigOpenInterest, style=dashed];
m7_149 -> m7_345  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m7_145 -> m7_334  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m7_145 -> m7_339  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m7_333 -> m7_338  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_338 -> m7_338  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_205 -> m7_258  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_205 -> m7_264  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_205 -> m7_268  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_205 -> m7_272  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_205 -> m7_273  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_205 -> m7_276  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_256 -> m7_265  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m7_256 -> m7_269  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m7_256 -> m7_273  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m7_256 -> m7_277  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m7_255 -> m7_265  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m7_255 -> m7_268  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m7_255 -> m7_269  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m7_255 -> m7_272  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m7_255 -> m7_273  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m7_255 -> m7_276  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m7_255 -> m7_277  [color=darkseagreen4, key=1, label=tickTypeString, style=dashed];
m7_257 -> m7_263  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m7_257 -> m7_267  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m7_257 -> m7_271  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m7_257 -> m7_275  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m7_370 -> m7_411  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m7_370 -> m7_404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_384 -> m7_389  [color=darkseagreen4, key=1, label="out QuantConnect.Symbol", style=dashed];
m7_369 -> m7_372  [color=darkseagreen4, key=1, label=pathSeparators, style=dashed];
m7_371 -> m7_408  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_371 -> m7_386  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_375 -> m7_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_378 -> m7_382  [color=darkseagreen4, key=1, label="out QuantConnect.Resolution", style=dashed];
m7_378 -> m7_389  [color=darkseagreen4, key=1, label="out QuantConnect.Resolution", style=dashed];
m7_383 -> m7_389  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m7_368 -> m7_389  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m7_372 -> m7_407  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_373 -> m7_386  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_245 -> m7_253  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m7_245 -> m7_249  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m7_245 -> m7_251  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m7_248 -> m7_253  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_248 -> m7_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_211 -> m7_283  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_284 -> m7_287  [color=darkseagreen4, key=1, label=zipFileName, style=dashed];
m7_296 -> m7_315  [color=darkseagreen4, key=1, label=parts, style=dashed];
m7_296 -> m7_319  [color=darkseagreen4, key=1, label=parts, style=dashed];
m7_294 -> m7_320  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_294 -> m7_297  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_294 -> m7_304  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_294 -> m7_309  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_295 -> m7_299  [color=darkseagreen4, key=1, label=isHourlyOrDaily, style=dashed];
m7_295 -> m7_311  [color=darkseagreen4, key=1, label=isHourlyOrDaily, style=dashed];
m7_300 -> m7_304  [color=darkseagreen4, key=1, label=style, style=dashed];
m7_301 -> m7_304  [color=darkseagreen4, key=1, label=right, style=dashed];
m7_302 -> m7_304  [color=darkseagreen4, key=1, label=strike, style=dashed];
m7_305 -> m7_309  [color=darkseagreen4, key=1, label=style, style=dashed];
m7_306 -> m7_309  [color=darkseagreen4, key=1, label=right, style=dashed];
m7_307 -> m7_309  [color=darkseagreen4, key=1, label=strike, style=dashed];
m7_174 -> m7_209  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_174 -> m7_207  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m7_206 -> m7_209  [color=darkseagreen4, key=1, label=directory, style=dashed];
m7_0 -> m7_3  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m7_1 -> m7_3  [color=darkseagreen4, key=1, label=clone, style=dashed];
m7_213 -> m7_221  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m7_213 -> m7_224  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m7_213 -> m7_228  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m7_213 -> m7_232  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m7_213 -> m7_236  [color=darkseagreen4, key=1, label=formattedDate, style=dashed];
m7_212 -> m7_231  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_212 -> m7_232  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_212 -> m7_235  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_212 -> m7_236  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_212 -> m7_215  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_212 -> m7_220  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_212 -> m7_221  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_212 -> m7_223  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_212 -> m7_224  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_212 -> m7_227  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_212 -> m7_228  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_214 -> m7_222  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m7_214 -> m7_226  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m7_214 -> m7_230  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m7_214 -> m7_234  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m7_175 -> m7_187  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_175 -> m7_189  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_175 -> m7_191  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_175 -> m7_181  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m7_180 -> m7_187  [color=darkseagreen4, key=1, label=directory, style=dashed];
m7_180 -> m7_189  [color=darkseagreen4, key=1, label=directory, style=dashed];
m7_180 -> m7_191  [color=darkseagreen4, key=1, label=directory, style=dashed];
m7_176 -> m7_187  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m7_176 -> m7_189  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m7_176 -> m7_191  [color=darkseagreen4, key=1, label=isHourOrDaily, style=dashed];
m7_415 -> m7_411  [color=darkseagreen4, key=1, label=securityTypes, style=dashed];
m7_414 -> m7_408  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_69 -> m11_72  [color=darkseagreen4, key=1, label=left, style=dashed];
m11_69 -> m11_75  [color=darkseagreen4, key=1, label=left, style=dashed];
m11_69 -> m11_77  [color=darkseagreen4, key=1, label=left, style=dashed];
m11_70 -> m11_73  [color=darkseagreen4, key=1, label=right, style=dashed];
m11_70 -> m11_79  [color=darkseagreen4, key=1, label=right, style=dashed];
m11_71 -> m11_74  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_71 -> m11_76  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_71 -> m11_78  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_71 -> m11_80  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_14 -> m11_16  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m11_115 -> m11_121  [color=darkseagreen4, key=1, label=right, style=dashed];
m11_115 -> m11_123  [color=darkseagreen4, key=1, label=right, style=dashed];
m11_118 -> m11_147  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Indicators.IndicatorExtensionsTests", style=dashed];
m11_118 -> m11_148  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Indicators.IndicatorExtensionsTests", style=dashed];
m11_1 -> m11_11  [color=darkseagreen4, key=1, label=first, style=dashed];
m11_1 -> m11_12  [color=darkseagreen4, key=1, label=first, style=dashed];
m11_1 -> m11_15  [color=darkseagreen4, key=1, label=first, style=dashed];
m11_1 -> m11_18  [color=darkseagreen4, key=1, label=first, style=dashed];
m11_2 -> m11_13  [color=darkseagreen4, key=1, label=second, style=dashed];
m11_2 -> m11_14  [color=darkseagreen4, key=1, label=second, style=dashed];
m11_2 -> m11_16  [color=darkseagreen4, key=1, label=second, style=dashed];
m11_2 -> m11_17  [color=darkseagreen4, key=1, label=second, style=dashed];
m11_5 -> m11_11  [color=darkseagreen4, key=1, label=data2, style=dashed];
m11_6 -> m11_15  [color=darkseagreen4, key=1, label=data3, style=dashed];
m11_7 -> m11_18  [color=darkseagreen4, key=1, label=data4, style=dashed];
m11_44 -> m11_49  [color=darkseagreen4, key=1, label=str, style=dashed];
m11_129 -> m11_120  [color=darkseagreen4, key=1, label=updatedEventFired, style=dashed];
m11_129 -> m11_122  [color=darkseagreen4, key=1, label=updatedEventFired, style=dashed];
m11_129 -> m11_124  [color=darkseagreen4, key=1, label=updatedEventFired, style=dashed];
m11_129 -> m11_126  [color=darkseagreen4, key=1, label=updatedEventFired, style=dashed];
m11_132 -> m11_135  [color=darkseagreen4, key=1, label=left, style=dashed];
m11_132 -> m11_138  [color=darkseagreen4, key=1, label=left, style=dashed];
m11_132 -> m11_140  [color=darkseagreen4, key=1, label=left, style=dashed];
m11_133 -> m11_136  [color=darkseagreen4, key=1, label=right, style=dashed];
m11_133 -> m11_142  [color=darkseagreen4, key=1, label=right, style=dashed];
m11_134 -> m11_137  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_134 -> m11_139  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_134 -> m11_141  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_134 -> m11_143  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_24 -> m11_26  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m11_24 -> m11_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m11_24 -> m11_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m11_24 -> m11_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m11_46 -> m11_49  [color=darkseagreen4, key=1, label=str, style=dashed];
m11_46 -> m11_50  [color=darkseagreen4, key=1, label=identity, style=dashed];
m11_46 -> m11_51  [color=darkseagreen4, key=1, label=identity, style=dashed];
m11_46 -> m11_54  [color=darkseagreen4, key=1, label=identity, style=dashed];
m11_46 -> m11_55  [color=darkseagreen4, key=1, label=identity, style=dashed];
m11_46 -> m11_58  [color=darkseagreen4, key=1, label=identity, style=dashed];
m11_46 -> m11_59  [color=darkseagreen4, key=1, label=identity, style=dashed];
m11_46 -> m11_62  [color=darkseagreen4, key=1, label=identity, style=dashed];
m11_46 -> m11_63  [color=darkseagreen4, key=1, label=identity, style=dashed];
m11_47 -> m11_49  [color=darkseagreen4, key=1, label=sma, style=dashed];
m11_47 -> m11_53  [color=darkseagreen4, key=1, label=sma, style=dashed];
m11_47 -> m11_57  [color=darkseagreen4, key=1, label=sma, style=dashed];
m11_47 -> m11_61  [color=darkseagreen4, key=1, label=sma, style=dashed];
m11_47 -> m11_65  [color=darkseagreen4, key=1, label=sma, style=dashed];
m11_47 -> m11_66  [color=darkseagreen4, key=1, label=sma, style=dashed];
m11_48 -> m11_52  [color=darkseagreen4, key=1, label=delay, style=dashed];
m11_48 -> m11_56  [color=darkseagreen4, key=1, label=delay, style=dashed];
m11_48 -> m11_60  [color=darkseagreen4, key=1, label=delay, style=dashed];
m11_48 -> m11_64  [color=darkseagreen4, key=1, label=delay, style=dashed];
m11_52 -> m11_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_52 -> m11_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_52 -> m11_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_52 -> m11_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_99 -> m11_102  [color=darkseagreen4, key=1, label=left, style=dashed];
m11_99 -> m11_107  [color=darkseagreen4, key=1, label=left, style=dashed];
m11_100 -> m11_103  [color=darkseagreen4, key=1, label=right, style=dashed];
m11_100 -> m11_109  [color=darkseagreen4, key=1, label=right, style=dashed];
m11_101 -> m11_104  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_101 -> m11_106  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_101 -> m11_108  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_101 -> m11_110  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_84 -> m11_87  [color=darkseagreen4, key=1, label=left, style=dashed];
m11_84 -> m11_90  [color=darkseagreen4, key=1, label=left, style=dashed];
m11_84 -> m11_92  [color=darkseagreen4, key=1, label=left, style=dashed];
m11_85 -> m11_88  [color=darkseagreen4, key=1, label=right, style=dashed];
m11_85 -> m11_94  [color=darkseagreen4, key=1, label=right, style=dashed];
m11_86 -> m11_89  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_86 -> m11_93  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_86 -> m11_95  [color=darkseagreen4, key=1, label=composite, style=dashed];
m11_25 -> m11_27  [color=green, key=1, label=insight, style=dashed];
m11_25 -> m11_28  [color=green, key=1, label=insight, style=dashed];
m11_25 -> m11_29  [color=green, key=1, label=insight, style=dashed];
m11_25 -> m11_33  [color=green, key=1, label=insight, style=dashed];
m11_25 -> m11_34  [color=green, key=1, label=insight, style=dashed];
m11_31 -> m11_43  [color=darkseagreen4, key=1, label=sma, style=dashed];
m11_31 -> m11_35  [color=darkseagreen4, key=1, label=sma, style=dashed];
m11_31 -> m11_37  [color=darkseagreen4, key=1, label=sma, style=dashed];
m11_31 -> m11_38  [color=darkseagreen4, key=1, label=sma, style=dashed];
m11_30 -> m11_33  [color=darkseagreen4, key=1, label=identity, style=dashed];
m11_30 -> m11_34  [color=darkseagreen4, key=1, label=identity, style=dashed];
m11_30 -> m11_36  [color=darkseagreen4, key=1, label=identity, style=dashed];
m11_32 -> m11_43  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m11_146 -> m11_43  [color=darkseagreen4, key=1, label=sma, style=dashed];
m12_26 -> m12_28  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m12_11 -> m12_13  [color=darkseagreen4, key=1, label=data, style=dashed];
m12_0 -> m12_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m12_6 -> m12_12  [color=darkseagreen4, key=1, label=castResolution, style=dashed];
m12_7 -> m12_12  [color=darkseagreen4, key=1, label=dataDirectory, style=dashed];
m12_10 -> m12_12  [color=darkseagreen4, key=1, label=pairObject, style=dashed];
m12_32 -> m12_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m12_32 -> m12_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m12_32 -> m12_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m12_32 -> m12_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m12_32 -> m12_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m12_32 -> m12_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m12_32 -> m12_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.BasicTemplateFrameworkAlgorithm", style=dashed];
m14_19 -> m14_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_20 -> m14_22  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m14_20 -> m14_23  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m14_20 -> m14_26  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m14_39 -> m14_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Data.Market.TradeBar>", style=dashed];
m14_41 -> m14_2  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_3  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_4  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_6  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_7  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_8  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_9  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_19  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_20  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_21  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_22  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_23  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_24  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_26  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_27  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m14_41 -> m14_28  [color=darkseagreen4, key=1, label="QuantConnect.Stress_Symbols", style=dashed];
m15_0 -> m15_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_0 -> m15_10  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m15_0 -> m15_11  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m15_0 -> m15_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_0 -> m15_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m15_19 -> m15_49  [color=darkseagreen4, key=1, label=engine, style=dashed];
m15_20 -> m15_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_22 -> m15_26  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m15_22 -> m15_27  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m15_26 -> m15_26  [color=darkseagreen4, key=1, label=stat, style=dashed];
m15_27 -> m15_27  [color=darkseagreen4, key=1, label=stat, style=dashed];
m15_54 -> m15_49  [color=darkseagreen4, key=1, label=engine, style=dashed];
m17_11 -> m17_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m17_147 -> m17_149  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_147 -> m17_150  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m17_147 -> m17_151  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_147 -> m17_152  [color=darkseagreen4, key=1, label=date, style=dashed];
m17_154 -> m17_156  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_154 -> m17_157  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m17_154 -> m17_158  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_154 -> m17_159  [color=darkseagreen4, key=1, label=date, style=dashed];
m17_161 -> m17_163  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_161 -> m17_164  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m17_161 -> m17_165  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_161 -> m17_166  [color=darkseagreen4, key=1, label=date, style=dashed];
m17_168 -> m17_170  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_168 -> m17_171  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m17_168 -> m17_172  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_168 -> m17_173  [color=darkseagreen4, key=1, label=date, style=dashed];
m17_175 -> m17_177  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_175 -> m17_178  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m17_175 -> m17_179  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_175 -> m17_180  [color=darkseagreen4, key=1, label=date, style=dashed];
m17_182 -> m17_184  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_182 -> m17_185  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m17_182 -> m17_186  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_182 -> m17_187  [color=darkseagreen4, key=1, label=date, style=dashed];
m17_189 -> m17_191  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_189 -> m17_192  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m17_189 -> m17_193  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m17_189 -> m17_194  [color=darkseagreen4, key=1, label=date, style=dashed];
m17_227 -> m17_260  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m17_227 -> m17_263  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m17_227 -> m17_265  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m17_227 -> m17_268  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m17_227 -> m17_272  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m17_227 -> m17_274  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m17_214 -> m17_248  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m17_82 -> m17_86  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m17_84 -> m17_88  [color=darkseagreen4, key=1, label=source, style=dashed];
m17_85 -> m17_88  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_31 -> m17_34  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m17_31 -> m17_35  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m17_31 -> m17_36  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m17_31 -> m17_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m17_31 -> m17_38  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m17_33 -> m17_35  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m17_33 -> m17_36  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m17_33 -> m17_37  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m17_33 -> m17_38  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m17_33 -> m17_39  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m17_33 -> m17_50  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m17_33 -> m17_55  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m17_40 -> m17_42  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_40 -> m17_43  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_40 -> m17_44  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_40 -> m17_45  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_40 -> m17_46  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_40 -> m17_47  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_40 -> m17_48  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_40 -> m17_49  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_51 -> m17_53  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_51 -> m17_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_56 -> m17_58  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_56 -> m17_59  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_56 -> m17_60  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_56 -> m17_61  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_41 -> m17_43  [color=darkseagreen4, key=1, label=actual, style=dashed];
m17_41 -> m17_44  [color=darkseagreen4, key=1, label=actual, style=dashed];
m17_41 -> m17_45  [color=darkseagreen4, key=1, label=actual, style=dashed];
m17_41 -> m17_46  [color=darkseagreen4, key=1, label=actual, style=dashed];
m17_41 -> m17_47  [color=darkseagreen4, key=1, label=actual, style=dashed];
m17_41 -> m17_48  [color=darkseagreen4, key=1, label=actual, style=dashed];
m17_41 -> m17_49  [color=darkseagreen4, key=1, label=actual, style=dashed];
m17_52 -> m17_54  [color=darkseagreen4, key=1, label=actual, style=dashed];
m17_57 -> m17_59  [color=darkseagreen4, key=1, label=actual, style=dashed];
m17_57 -> m17_60  [color=darkseagreen4, key=1, label=actual, style=dashed];
m17_57 -> m17_61  [color=darkseagreen4, key=1, label=actual, style=dashed];
m17_21 -> m17_23  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m17_21 -> m17_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m17_21 -> m17_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m17_22 -> m17_25  [color=darkseagreen4, key=1, label=line, style=dashed];
m17_22 -> m17_27  [color=darkseagreen4, key=1, label=line, style=dashed];
m17_70 -> m17_76  [color=darkseagreen4, key=1, label=normalizedSourcePath, style=dashed];
m17_72 -> m17_76  [color=darkseagreen4, key=1, label=normalizeZipFilePath, style=dashed];
m17_0 -> m17_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m17_16 -> m17_18  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m17_91 -> m17_95  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m17_91 -> m17_96  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m17_92 -> m17_97  [color=darkseagreen4, key=1, label=openInterestType, style=dashed];
m17_92 -> m17_98  [color=darkseagreen4, key=1, label=openInterestType, style=dashed];
m17_93 -> m17_99  [color=darkseagreen4, key=1, label=quoteBarType, style=dashed];
m17_93 -> m17_100  [color=darkseagreen4, key=1, label=quoteBarType, style=dashed];
m17_94 -> m17_101  [color=darkseagreen4, key=1, label=tradeBarType, style=dashed];
m17_94 -> m17_102  [color=darkseagreen4, key=1, label=tradeBarType, style=dashed];
m17_224 -> m17_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_6 -> m17_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", style=dashed];
m17_67 -> m17_200  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m17_67 -> m17_202  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m17_67 -> m17_203  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m17_67 -> m17_204  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m17_67 -> m17_205  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.IBar", style=dashed];
m17_210 -> m17_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_279 -> m17_272  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", style=dashed];
m19_192 -> m19_195  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m19_192 -> m19_197  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m19_192 -> m19_198  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m19_192 -> m19_199  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m19_4 -> m19_39  [color=darkseagreen4, key=1, label=timer, style=dashed];
m19_4 -> m19_102  [color=darkseagreen4, key=1, label=timer, style=dashed];
m19_4 -> m19_106  [color=darkseagreen4, key=1, label=timer, style=dashed];
m19_159 -> m19_250  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_159 -> m19_251  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_159 -> m19_254  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_159 -> m19_257  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_159 -> m19_260  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_251 -> m19_256  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m19_260 -> m19_262  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_183 -> m19_185  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_183 -> m19_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_172 -> m19_232  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_233 -> m19_239  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_233 -> m19_235  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_234 -> m19_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_100 -> m19_100  [color=darkseagreen4, key=1, label=dataFeed, style=dashed];
m19_171 -> m19_238  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_171 -> m19_240  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_242 -> m19_244  [color=darkseagreen4, key=1, label=th, style=dashed];
m19_239 -> m19_239  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m19_283 -> m19_306  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m19_283 -> m19_309  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m19_276 -> m19_276  [color=darkseagreen4, key=1, label=end, style=dashed];
m19_278 -> m19_280  [color=darkseagreen4, key=1, label=sh, style=dashed];
m19_215 -> m19_218  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.IBrokerageModel", style=dashed];
m19_216 -> m19_218  [color=darkseagreen4, key=1, label=feed, style=dashed];
m19_217 -> m19_219  [color=darkseagreen4, key=1, label=df, style=dashed];
m19_307 -> m19_309  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m19_431 -> m19_433  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_431 -> m19_455  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_431 -> m19_440  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_431 -> m19_441  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m19_433 -> m19_435  [color=darkseagreen4, key=1, label=security, style=dashed];
m19_433 -> m19_436  [color=darkseagreen4, key=1, label=security, style=dashed];
m19_437 -> m19_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_439 -> m19_445  [color=darkseagreen4, key=1, label=ret, style=dashed];
m19_444 -> m19_458  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_84 -> m19_86  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_86 -> m19_86  [color=darkseagreen4, key=1, label=value, style=dashed];
m19_87 -> m19_95  [color=darkseagreen4, key=1, label=charts, style=dashed];
m19_82 -> m19_84  [color=green, key=1, label=message, style=dashed];
m19_82 -> m19_85  [color=green, key=1, label=message, style=dashed];
m19_82 -> m19_86  [color=green, key=1, label=message, style=dashed];
m19_459 -> m19_461  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_170 -> m19_205  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m19_170 -> m19_210  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_170 -> m19_213  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m19_210 -> m19_481  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_26 -> m19_115  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m19_26 -> m19_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m19_485 -> m19_488  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_47 -> m19_55  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m19_273 -> m19_289  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m19_273 -> m19_292  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m19_30 -> m19_45  [color=green, key=1, label=job, style=dashed];
m19_30 -> m19_71  [color=green, key=1, label=job, style=dashed];
m19_30 -> m19_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_198  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_30 -> m19_102  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_27 -> m19_117  [color=green, key=1, label=threadTransactions, style=dashed];
m19_27 -> m19_118  [color=green, key=1, label=threadTransactions, style=dashed];
m19_36 -> m19_45  [color=green, key=1, label=job, style=dashed];
m19_36 -> m19_71  [color=green, key=1, label=job, style=dashed];
m19_36 -> m19_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_36 -> m19_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_36 -> m19_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_36 -> m19_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_36 -> m19_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_36 -> m19_198  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_36 -> m19_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_36 -> m19_102  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_97 -> m19_492  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_286 -> m19_198  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_44 -> m19_71  [color=green, key=1, label=algorithm, style=dashed];
m19_44 -> m19_58  [color=green, key=1, label=algorithm, style=dashed];
m19_44 -> m19_46  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m19_44 -> m19_48  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m19_44 -> m19_56  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m19_44 -> m19_57  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m19_44 -> m19_59  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m19_44 -> m19_198  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m19_44 -> m19_98  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m19_52 -> m19_54  [color=darkseagreen4, key=1, label=runtimeMessage, style=dashed];
m19_61 -> m19_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_62 -> m19_64  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m19_65 -> m19_69  [color=darkseagreen4, key=1, label=equity, style=dashed];
m19_65 -> m19_115  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m19_65 -> m19_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m19_65 -> m19_68  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m19_66 -> m19_117  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m19_66 -> m19_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m19_66 -> m19_69  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m19_64 -> m19_69  [color=darkseagreen4, key=1, label=equity, style=dashed];
m19_67 -> m19_70  [color=darkseagreen4, key=1, label=threadRealTime, style=dashed];
m19_323 -> m19_327  [color=darkseagreen4, key=1, label=bool, style=dashed];
m19_323 -> m19_328  [color=darkseagreen4, key=1, label=bool, style=dashed];
m19_92 -> m19_95  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m19_93 -> m19_95  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m19_117 -> m19_129  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m19_45 -> m19_55  [color=green, key=1, label=initializeComplete, style=dashed];
m19_71 -> m19_197  [color=green, key=1, label="lambda expression", style=dashed];
m19_110 -> m19_114  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m19_120 -> m19_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_120 -> m19_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_120 -> m19_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_120 -> m19_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_49 -> m19_49  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m19_111 -> m19_114  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m19_369 -> m19_515  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m19_369 -> m19_516  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m19_369 -> m19_518  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_520 -> m19_522  [color=darkseagreen4, key=1, label=security, style=dashed];
m19_379 -> m19_381  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m19_379 -> m19_387  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m19_376 -> m19_383  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m19_376 -> m19_386  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m19_375 -> m19_383  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m19_375 -> m19_386  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m19_421 -> m19_423  [color=darkseagreen4, key=1, label=future, style=dashed];
m19_407 -> m19_409  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m19_407 -> m19_415  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m19_403 -> m19_411  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m19_403 -> m19_414  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m19_402 -> m19_411  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m19_402 -> m19_414  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m19_343 -> m19_345  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_343 -> m19_346  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m19_343 -> m19_347  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_343 -> m19_348  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_343 -> m19_349  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m19_343 -> m19_350  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m19_343 -> m19_352  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_354 -> m19_356  [color=darkseagreen4, key=1, label=security, style=dashed];
m19_287 -> m19_198  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m19_496 -> m19_499  [color=darkseagreen4, key=1, label=message, style=dashed];
m19_545 -> m19_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_54  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_58  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_64  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_100  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_107  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_118  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_129  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_164  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_180  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_193  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_197  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_198  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_199  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_208  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_212  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_218  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_219  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_235  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_249  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_253  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_255  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_256  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_261  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_269  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_277  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_285  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_287  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_291  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_292  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_295  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_296  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_298  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_304  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_308  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_309  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_312  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_321  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_324  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_327  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_335  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_338  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_341  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_345  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_347  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_349  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_355  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_358  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_367  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_371  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_381  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_383  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_386  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_398  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_409  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_411  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_414  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_422  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_426  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_429  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_433  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_434  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_436  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_440  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_441  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_443  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_465  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_468  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_475  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_479  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_481  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_486  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_488  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_490  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_492  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_497  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_499  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_503  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_515  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_521  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_525  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_545 -> m19_529  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m19_546 -> m19_114  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m19_547 -> m19_239  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_548 -> m19_455  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m22_7 -> m22_10  [color=darkseagreen4, key=1, label=hash, style=dashed];
m22_7 -> m22_11  [color=darkseagreen4, key=1, label=hash, style=dashed];
}
