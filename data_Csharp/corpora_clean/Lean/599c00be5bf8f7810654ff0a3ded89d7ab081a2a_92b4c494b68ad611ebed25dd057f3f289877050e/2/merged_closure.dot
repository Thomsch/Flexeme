digraph  {
n532 [label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
n533 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
n534 [label=symbol, span=""];
n535 [label=split, span=""];
n536 [label=delisting, span=""];
n0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107"];
n1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return ''Algorithm took longer than 10 minutes on a single time loop.'';\r\n                }\r\n\r\n                return null;\r\n            }", span="109-117"];
n2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="_liveMode = liveMode", span="118-118"];
n3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="107-107"];
n4 [cluster="lambda expression", label="Entry lambda expression", span="109-117"];
n5 [cluster="lambda expression", label="CurrentTimeStepElapsed > _timeLoopMaximum", span="111-111"];
n6 [cluster="lambda expression", label="return ''Algorithm took longer than 10 minutes on a single time loop.'';", span="113-113"];
n7 [cluster="lambda expression", label="return null;", span="116-116"];
n8 [cluster="lambda expression", label="Exit lambda expression", span="109-117"];
n9 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", span="135-135"];
n10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_dataPointCount = 0", span="138-138"];
n11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm = algorithm", span="139-139"];
n12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="140-140"];
n13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="141-141"];
n20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithmId = job.AlgorithmId", span="151-151"];
n22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_previousTime = algorithm.StartDate.Date", span="153-153"];
n23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="158-158"];
n24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataQuoteBars = AddMethodInvoker<QuoteBars>(algorithm, methodInvokers)", span="159-159"];
n25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataOptionChains = AddMethodInvoker<OptionChains>(algorithm, methodInvokers)", span="160-160"];
n26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="161-161"];
n27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="164-164"];
n28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="165-165"];
n29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataDelistings = AddMethodInvoker<Delistings>(algorithm, methodInvokers)", span="166-166"];
n30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataSymbolChangedEvents = AddMethodInvoker<SymbolChangedEvents>(algorithm, methodInvokers)", span="167-167"];
n31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var hasOnDataSlice = algorithm.GetType().GetMethods()\r\n                .Where(x => x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice))\r\n                .FirstOrDefault(x => x.DeclaringType == algorithm.GetType()) != null", span="170-172"];
n318 [cluster="lambda expression", label="x.DeclaringType == algorithm.GetType()", span="172-172"];
n32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.SubscriptionManager.Subscriptions", span="175-175"];
n34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="181-181"];
n37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="189-189"];
n42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="201-201"];
n43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Stream(job, algorithm, feed, results, token)", span="202-202"];
n47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="token.IsCancellationRequested", span="215-215"];
n50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="leanManager.Update()", span="222-222"];
n55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, _previousTime.Date)", span="235-235"];
n56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="238-238"];
n58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, 0)", span="243-243"];
n59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="247-247"];
n60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="249-249"];
n64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SystemDebugMessage(logMessage)", span="256-256"];
n65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, time)", span="263-263"];
n67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="realtime.ScanPastEvents(time)", span="273-273"];
n68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.SetDateTime(time)", span="277-277"];
n71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", span="283-283"];
n73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", span="288-288"];
n77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="!algorithm.Securities.ContainsKey(security.Symbol)", span="299-299"];
n78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Securities.Add(security)", span="302-302"];
n87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.TradeBuilder.SetMarketPrice(security.Symbol, security.Price)", span="327-327"];
n88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="realtime.SetTime(timeSlice.Time)", span="331-331"];
n89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="334-334"];
n90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="ProcessDelistedSymbols(algorithm, delistings)", span="337-337"];
n91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Status == AlgorithmStatus.Stopped", span="340-340"];
n93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError != null", span="345-345"];
n95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="348-348"];
n98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var marginCallOrders = algorithm.Portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="357-357"];
n101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.OnMarginCall(marginCallOrders)", span="364-364"];
n103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var executedTickets = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="369-369"];
n105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="372-372"];
n107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="377-377"];
n113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.OnMarginCallWarning()", span="389-389"];
n115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="393-393"];
n121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="406-406"];
n124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="416-416"];
n126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="420-420"];
n131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): {0}: Applying Dividend for {1}'', algorithm.Time, dividend.Symbol.ToString())", span="430-430"];
n132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplyDividend(dividend)", span="431-431"];
n134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): {0}: Applying Split for {1}'', algorithm.Time, split.Symbol.ToString())", span="439-439"];
n135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplySplit(split)", span="440-440"];
n136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_liveMode || algorithm.Securities[split.Symbol].DataNormalizationMode == DataNormalizationMode.Raw", span="442-442"];
n137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var openOrders = transactions.GetOrderTickets(ticket => ticket.Status.IsOpen() && ticket.Symbol == split.Symbol)", span="445-445"];
n138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="446-446"];
n140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="451-451"];
n150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="update.Target.Resolution == Resolution.Tick ||\r\n                                    algorithm.UtcTime.RoundDown(algorithmTimeSpan) == dataPoint.EndTime.RoundUp(resolutionTimeSpan).ConvertToUtc(update.Target.ExchangeTimeZone)", span="476-477"];
n155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="491-491"];
n164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvoker(algorithm, dataPoint)", span="512-512"];
n166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="518-518"];
n171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(Dividends)](algorithm, timeSlice.Slice.Dividends)", span="530-530"];
n173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="534-534"];
n175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="538-538"];
n177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="543-543"];
n181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="HandleDelistedSymbols(algorithm, timeSlice.Slice.Delistings, delistings)", span="550-550"];
n186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="565-565"];
n188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(QuoteBars)](algorithm, timeSlice.Slice.QuoteBars)", span="566-566"];
n190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(OptionChains)](algorithm, timeSlice.Slice.OptionChains)", span="567-567"];
n192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers[typeof(Ticks)](algorithm, timeSlice.Slice.Ticks)", span="568-568"];
n194 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="572-572"];
n199 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.OnData(timeSlice.Slice)", span="583-583"];
n201 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="588-588"];
n205 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="596-596"];
n207 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents()", span="602-602"];
n210 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.OnEndOfAlgorithm()", span="612-612"];
n213 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="617-617"];
n216 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents(forceProcess: true)", span="623-623"];
n219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="algorithm.Liquidate()", span="629-629"];
n220 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Liquidated'')", span="630-630"];
n221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="631-631"];
n224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Stopped'')", span="638-638"];
n225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="639-639"];
n228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="646-646"];
n229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Deleted)", span="647-647"];
n230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Completed)", span="651-651"];
n231 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SampleRange(algorithm.GetChartUpdates())", span="654-654"];
n232 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="655-655"];
n233 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, backtestMode ? _previousTime.Date : _previousTime)", span="656-656"];
n235 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime, 0m)", span="661-661"];
n236 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime,\r\n                    Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="665-666"];
n57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="portfolioValue == 0m", span="241-241"];
n61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="portfolioValue <= 0", span="252-252"];
n234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="portfolioValue == 0m", span="659-659"];
n14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="142-142"];
n66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=backtestMode, span="271-271"];
n15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="143-143"];
n238 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers.ContainsKey(config.Type)", span="184-184"];
n41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="195-195"];
n161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="!methodInvokers.TryGetValue(update.DataType, out methodInvoker)", span="501-501"];
n16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var nextMarginCallTime = DateTime.MinValue", span="144-144"];
n239 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
n119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="nextMarginCallTime = time + marginCallFrequency", span="400-400"];
n17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var settlementScanFrequency = TimeSpan.FromMinutes(30)", span="145-145"];
n96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="353-353"];
n18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var nextSettlementScanTime = DateTime.MinValue", span="146-146"];
n122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="nextSettlementScanTime = time + settlementScanFrequency", span="408-408"];
n19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var delistings = new List<Delisting>()", span="148-148"];
n120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="time >= nextSettlementScanTime || (_liveMode && nextSettlementScanTime > DateTime.UtcNow)", span="404-404"];
n240 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.Running", span="152-152"];
n241 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="894-894"];
n185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataTradeBars && timeSlice.Slice.Bars.Count > 0", span="565-565"];
n187 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataQuoteBars && timeSlice.Slice.QuoteBars.Count > 0", span="566-566"];
n189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataOptionChains && timeSlice.Slice.OptionChains.Count > 0", span="567-567"];
n191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataTicks && timeSlice.Slice.Ticks.Count > 0", span="568-568"];
n170 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="528-528"];
n172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="532-532"];
n174 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="536-536"];
n70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=hasOnDataSymbolChangedEvents, span="281-281"];
n242 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n243 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
n244 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n245 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
n313 [cluster="lambda expression", label="Entry lambda expression", span="171-171"];
n317 [cluster="lambda expression", label="Entry lambda expression", span="172-172"];
n36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="genericMethod == null && !hasOnDataSlice", span="187-187"];
n33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="config.IsCustomData", span="178-178"];
n246 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
n40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="genericMethod != null", span="193-193"];
n247 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="190-190"];
n248 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="191-191"];
n249 [cluster="Unk.DelegateForCallMethod", label="Entry Unk.DelegateForCallMethod", span=""];
n250 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
n251 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
n44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.UtcNow", span="205-205"];
n208 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.MinValue", span="606-606"];
n252 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="686-686"];
n46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="210-210"];
n48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", span="217-217"];
n51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var time = timeSlice.Time", span="224-224"];
n52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_dataPointCount += timeSlice.DataPointCount", span="225-225"];
n69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Count != 0", span="279-279"];
n72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Keys", span="285-285"];
n75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="295-295"];
n76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges.AddedSecurities", span="297-297"];
n79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.CashBookUpdateData", span="308-308"];
n83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.SecuritiesUpdateData", span="318-318"];
n123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="412-412"];
n130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.Dividends.Values", span="428-428"];
n133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.Splits.Values", span="435-435"];
n144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.ConsolidatorUpdateData", span="461-461"];
n159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.CustomData", span="498-498"];
n182 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.QuoteBars.Count > 0", span="558-558"];
n183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.QuoteBars.Where(x => x.Key.ID.SecurityType == SecurityType.Forex)", span="560-560"];
n184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.Bars.Add(tradeBar.Value.Collapse())", span="562-562"];
n198 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="timeSlice.Slice.HasData", span="580-580"];
n45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status != AlgorithmStatus.Running", span="208-208"];
n49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="218-218"];
n254 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
n255 [cluster="QuantConnect.Lean.Engine.Server.ILeanManager.Update()", label="Entry QuantConnect.Lean.Engine.Server.ILeanManager.Update()", span="46-46"];
n54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_previousTime.Date != time.Date", span="233-233"];
n152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var localTime = time.ConvertFromUtc(update.Target.ExchangeTimeZone)", span="484-484"];
n206 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_previousTime = time", span="599-599"];
n256 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="985-985"];
n257 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
n258 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="155-155"];
n259 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="163-163"];
n62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="string logMessage = ''AlgorithmManager.Run(): Portfolio value is less than or equal to zero''", span="254-254"];
n63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(logMessage)", span="255-255"];
n261 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", span="59-59"];
n262 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="439-439"];
n263 [cluster="Unk.]", label="Entry Unk.]", span=""];
n321 [cluster="lambda expression", label="x.Status.IsOpen() && x.Symbol == symbol", span="288-288"];
n74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="ticket.Cancel(''Open order cancelled on symbol changed event'')", span="290-290"];
n264 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
n320 [cluster="lambda expression", label="Entry lambda expression", span="288-288"];
n265 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="258-258"];
n266 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
n267 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
n80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var cash = update.Target", span="310-310"];
n81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="update.Data", span="311-311"];
n82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="cash.Update(data)", span="313-313"];
n268 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83"];
n84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var security = update.Target", span="320-320"];
n85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="update.Data", span="321-321"];
n86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="security.SetMarketPrice(data)", span="323-323"];
n269 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612"];
n270 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="49-49"];
n271 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53"];
n272 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="75-75"];
n273 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="936-936"];
n92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="342-342"];
n94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="347-347"];
n97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="bool issueMarginCallWarning", span="356-356"];
n99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="marginCallOrders.Count != 0", span="358-358"];
n274 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="541-541"];
n112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=issueMarginCallWarning, span="385-385"];
n100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var executingMarginCall = false", span="360-360"];
n102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="executingMarginCall = true", span="366-366"];
n275 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="384-384"];
n109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="379-379"];
n104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=executedTickets, span="370-370"];
n276 [cluster="QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="43-43"];
n106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="375-375"];
n277 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
n278 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="378-378"];
n108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="378-378"];
n110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(string.Format(''AlgorithmManager.Run(): RuntimeError: {0}: '', locator) + err)", span="380-380"];
n111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="381-381"];
n279 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="391-391"];
n280 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="389-389"];
n116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="394-394"];
n117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err)", span="395-395"];
n118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="396-396"];
n281 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="823-823"];
n125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="418-418"];
n282 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="360-360"];
n127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="421-421"];
n128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="422-422"];
n129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="423-423"];
n283 [cluster="QuantConnect.Symbol.ToString()", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
n284 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
n285 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="595-595"];
n325 [cluster="lambda expression", label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="445-445"];
n286 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="615-615"];
n139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="449-449"];
n324 [cluster="lambda expression", label="Entry lambda expression", span="445-445"];
n287 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n288 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
n141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="452-452"];
n142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="453-453"];
n143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="454-454"];
n145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var resolutionTimeSpan = update.Target.Resolution.ToTimeSpan()", span="463-463"];
n154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="489-489"];
n146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var consolidators = update.Target.Consolidators", span="464-464"];
n148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="update.Data", span="467-467"];
n289 [cluster="QuantConnect.Resolution.ToTimeSpan()", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="698-698"];
n149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="var algorithmTimeSpan = resolutionTimeSpan == TimeSpan.FromTicks(0)\r\n                                    ? TimeSpan.FromTicks(0)\r\n                                    : TimeSpan.FromSeconds(1)", span="473-475"];
n147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=consolidators, span="465-465"];
n151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="consolidator.Update(dataPoint)", span="479-479"];
n153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="consolidator.Scan(localTime)", span="485-485"];
n290 [cluster="System.TimeSpan.FromTicks(long)", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
n291 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
n292 [cluster="System.DateTime.RoundDown(System.TimeSpan)", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
n293 [cluster="System.DateTime.RoundUp(System.TimeSpan)", label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="543-543"];
n294 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="592-592"];
n295 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
n296 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="580-580"];
n297 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
n156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="492-492"];
n157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="493-493"];
n158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="494-494"];
n160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="MethodInvoker methodInvoker", span="500-500"];
n162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="update.Data", span="508-508"];
n163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="update.DataType.IsInstanceOfType(dataPoint)", span="510-510"];
n298 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="516-516"];
n299 [cluster="System.Type.IsInstanceOfType(object)", label="Entry System.Type.IsInstanceOfType(object)", span="0-0"];
n300 [cluster="Unk.methodInvoker", label="Entry Unk.methodInvoker", span=""];
n167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="519-519"];
n168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="520-520"];
n169 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="521-521"];
n176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="541-541"];
n178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="544-544"];
n179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits/Delistings: '' + err)", span="545-545"];
n180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="546-546"];
n301 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="909-909"];
n327 [cluster="lambda expression", label="Entry lambda expression", span="560-560"];
n302 [cluster="Unk.Collapse", label="Entry Unk.Collapse", span=""];
n193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="570-570"];
n195 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="573-573"];
n196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="574-574"];
n197 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="575-575"];
n200 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="586-586"];
n303 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="354-354"];
n202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="589-589"];
n203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="590-590"];
n204 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="591-591"];
n304 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="253-253"];
n260 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", span="108-108"];
n253 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n209 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="609-609"];
n211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label=Exception, span="614-614"];
n305 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="404-404"];
n212 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="616-616"];
n214 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="618-618"];
n306 [cluster="System.Exception.Exception(string, System.Exception)", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
n215 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="return;", span="619-619"];
n217 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="626-626"];
n218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="628-628"];
n222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Stopped", span="635-635"];
n307 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="523-523"];
n308 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="120-120"];
n309 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219"];
n223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="637-637"];
n226 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Deleted", span="643-643"];
n227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="645-645"];
n310 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
n311 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="462-462"];
n312 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="187-187"];
n237 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", span="135-135"];
n314 [cluster="lambda expression", label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="171-171"];
n315 [cluster="lambda expression", label="Exit lambda expression", span="171-171"];
n316 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n319 [cluster="lambda expression", label="Exit lambda expression", span="172-172"];
n322 [cluster="lambda expression", label="Exit lambda expression", span="288-288"];
n323 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
n326 [cluster="lambda expression", label="Exit lambda expression", span="445-445"];
n328 [cluster="lambda expression", label="x.Key.ID.SecurityType == SecurityType.Forex", span="560-560"];
n329 [cluster="lambda expression", label="Exit lambda expression", span="560-560"];
n330 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="673-673"];
n331 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label=_lock, span="675-675"];
n332 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="state != AlgorithmStatus.Running", span="679-679"];
n333 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="_algorithm.Status = state", span="681-681"];
n334 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="673-673"];
n335 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="bool setStartTime = false", span="688-688"];
n378 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield break;", span="770-770"];
n388 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="789-789"];
n415 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="856-856"];
n336 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var timeZone = algorithm.TimeZone", span="689-689"];
n337 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var history = algorithm.HistoryProvider", span="690-690"];
n338 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.LiveMode", span="693-693"];
n339 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="ProcessVolatilityHistoryRequirements(algorithm)", span="695-695"];
n341 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="700-700"];
n344 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="705-708"];
n347 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="715-715"];
n351 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="720-720"];
n366 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var security = algorithm.Securities[symbol]", span="756-756"];
n374 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="764-764"];
n377 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="769-769"];
n383 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm warming up...'')", span="779-779"];
n387 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="787-787"];
n390 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!algorithm.LiveMode || historyRequests.Count == 0", span="796-796"];
n391 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="798-798"];
n393 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="801-801"];
n395 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=feed, span="806-806"];
n399 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.LiveMode && algorithm.IsWarmingUp", span="813-813"];
n403 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="824-824"];
n408 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="843-843"];
n409 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="844-844"];
n414 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="853-853"];
n380 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="775-775"];
n396 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="808-808"];
n362 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="history.GetHistory(historyRequests, timeZone)", span="747-747"];
n340 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime? lastHistoryTimeUtc = null", span="699-699"];
n417 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="860-860"];
n400 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc.HasValue", span="817-817"];
n342 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var start = DateTime.UtcNow.Ticks", span="703-703"];
n418 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="540-540"];
n346 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="712-712"];
n349 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="717-717"];
n355 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="731-731"];
n356 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="733-733"];
n357 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="734-734"];
n359 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="740-740"];
n392 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="799-799"];
n343 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="704-704"];
n360 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="742-742"];
n386 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="786-786"];
n413 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="852-852"];
n419 [cluster="System.DateTime.AddSeconds(double)", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
n384 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="781-781"];
n411 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="847-847"];
n345 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="710-710"];
n420 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n421 [cluster="Unk.DefaultIfEmpty", label="Entry Unk.DefaultIfEmpty", span=""];
n422 [cluster="Unk.Min", label="Entry Unk.Min", span=""];
n440 [cluster="lambda expression", label="Entry lambda expression", span="706-706"];
n407 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="841-841"];
n348 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="716-716"];
n423 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n443 [cluster="lambda expression", label="Entry lambda expression", span="715-715"];
n446 [cluster="lambda expression", label="Entry lambda expression", span="716-716"];
n352 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution < minResolution", span="722-722"];
n353 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution = minResolution", span="724-724"];
n354 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="725-725"];
n350 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Security security", span="719-719"];
n424 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
n425 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
n426 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n449 [cluster="lambda expression", label="Entry lambda expression", span="731-731"];
n452 [cluster="lambda expression", label="Entry lambda expression", span="733-733"];
n455 [cluster="lambda expression", label="Entry lambda expression", span="733-733"];
n358 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = minResolution", span="736-736"];
n458 [cluster="lambda expression", label="Entry lambda expression", span="734-734"];
n361 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="743-743"];
n427 [cluster="System.Math.Min(long, long)", label="Entry System.Math.Min(long, long)", span="0-0"];
n363 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="TimeSlice timeSlice", span="749-749"];
n428 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
n365 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="slice.Keys", span="754-754"];
n367 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var data = slice[symbol]", span="757-757"];
n364 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var paired = new List<DataFeedPacket>()", span="753-753"];
n373 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="paired.Add(new DataFeedPacket(security, security.Subscriptions.First(), list))", span="762-762"];
n368 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var list = new List<BaseData>()", span="758-758"];
n369 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var ticks = data as List<Tick>", span="759-759"];
n372 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.Add(data)", span="761-761"];
n371 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.AddRange(ticks)", span="760-760"];
n370 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="ticks != null", span="760-760"];
n430 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n429 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n431 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
n432 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
n375 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=Exception, span="766-766"];
n379 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice != null", span="773-773"];
n433 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
n382 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="778-778"];
n389 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = timeSlice.Time", span="790-790"];
n376 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Error(err)", span="768-768"];
n434 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
n381 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="777-777"];
n435 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="366-366"];
n385 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="785-785"];
n436 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="534-534"];
n394 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="802-802"];
n416 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="686-686"];
n398 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="811-811"];
n402 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="821-821"];
n397 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="810-810"];
n401 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var hasHistoricalData = false", span="820-820"];
n405 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=hasHistoricalData, span="830-830"];
n437 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
n438 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
n461 [cluster="lambda expression", label="Entry lambda expression", span="821-821"];
n404 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="hasHistoricalData = true", span="826-826"];
n406 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = null", span="836-836"];
n439 [cluster="Unk.Subtract", label="Entry Unk.Subtract", span=""];
n410 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="845-845"];
n412 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="851-851"];
n441 [cluster="lambda expression", label="x.Value.Configuration.Resolution.ToTimeSpan()", span="706-706"];
n442 [cluster="lambda expression", label="Exit lambda expression", span="706-706"];
n444 [cluster="lambda expression", label="!x.IsInternalFeed", span="715-715"];
n445 [cluster="lambda expression", label="Exit lambda expression", span="715-715"];
n447 [cluster="lambda expression", label="x.Resolution", span="716-716"];
n448 [cluster="lambda expression", label="Exit lambda expression", span="716-716"];
n450 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="731-731"];
n451 [cluster="lambda expression", label="Exit lambda expression", span="731-731"];
n453 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="733-733"];
n454 [cluster="lambda expression", label="Exit lambda expression", span="733-733"];
n456 [cluster="lambda expression", label="x.FillForwardResolution.Value", span="733-733"];
n457 [cluster="lambda expression", label="Exit lambda expression", span="733-733"];
n459 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="734-734"];
n460 [cluster="lambda expression", label="Exit lambda expression", span="734-734"];
n462 [cluster="lambda expression", label=x, span="821-821"];
n463 [cluster="lambda expression", label="Exit lambda expression", span="821-821"];
n464 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Log.Trace(''AlgorithmManager.ProcessVolatilityHistoryRequirements(): Updating volatility models with historical data...'')", span="862-862"];
n465 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="algorithm.Securities.Values", span="864-864"];
n467 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var historyReq = security.VolatilityModel.GetHistoryRequirements(security, algorithm.UtcTime)", span="868-868"];
n468 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="historyReq != null && algorithm.HistoryProvider != null", span="870-870"];
n469 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var history = algorithm.HistoryProvider.GetHistory(historyReq, algorithm.TimeZone)", span="872-872"];
n466 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="security.VolatilityModel != VolatilityModel.Null", span="866-866"];
n474 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="860-860"];
n472 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="slice.Bars.ContainsKey(security.Symbol)", span="877-877"];
n473 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="security.VolatilityModel.Update(security, slice.Bars[security.Symbol])", span="878-878"];
n475 [cluster="QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", label="Entry QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="46-46"];
n470 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="history != null", span="873-873"];
n471 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label=history, span="875-875"];
n476 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
n477 [cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38"];
n478 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="896-896"];
n480 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="899-899"];
n479 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="newSplitMethodInfo != null", span="897-897"];
n482 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return false;", span="902-902"];
n481 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return true;", span="900-900"];
n483 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="894-894"];
n484 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="newDelistings.Values", span="911-911"];
n486 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="!delistings.Any(x => x.Symbol == delisting.Symbol && x.Type == delisting.Type)", span="916-916"];
n487 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delistings.Add(delisting)", span="918-918"];
n490 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="925-925"];
n485 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delisting.Type == DelistingType.Warning", span="914-914"];
n493 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="909-909"];
n496 [cluster="lambda expression", label="x.Symbol == delisting.Symbol && x.Type == delisting.Type", span="916-916"];
n488 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.Value)", span="919-919"];
n489 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.Value)", span="924-924"];
n495 [cluster="lambda expression", label="Entry lambda expression", span="916-916"];
n491 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label=cancelledOrders, span="926-926"];
n494 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
n492 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="928-928"];
n497 [cluster="lambda expression", label="Exit lambda expression", span="916-916"];
n498 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var i = delistings.Count - 1", span="938-938"];
n500 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var security = algorithm.Securities[delistings[i].Symbol]", span="941-941"];
n502 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var delistingTime = delistings[i].Time", span="945-945"];
n508 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var underlying = algorithm.Securities[security.Symbol.Underlying]", span="956-956"];
n511 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option exercise on expiration'')", span="961-962"];
n512 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option assignment on expiration'')", span="966-967"];
n513 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="972-973"];
n514 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="algorithm.Transactions.ProcessRequest(request)", span="976-976"];
n515 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delistings.RemoveAt(i)", span="978-978"];
n499 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="i >= 0", span="938-938"];
n516 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="i--", span="938-938"];
n517 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="936-936"];
n501 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Holdings.Quantity == 0", span="942-942"];
n503 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var nextMarketOpen = security.Exchange.Hours.GetNextMarketOpen(delistingTime, false)", span="946-946"];
n504 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(nextMarketOpen, false)", span="947-947"];
n505 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.LocalTime < nextMarketClose", span="949-949"];
n507 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Type == SecurityType.Option", span="954-954"];
n509 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var option = (Option)security", span="957-957"];
n510 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Holdings.Quantity > 0", span="959-959"];
n518 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", span="205-205"];
n519 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
n506 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="SubmitOrderRequest request", span="952-952"];
n520 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92"];
n521 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="129-129"];
n522 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
n523 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="990-990"];
n525 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="algorithm.RunTimeError = err", span="994-994"];
n524 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label=Exception, span="992-992"];
n528 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="985-985"];
n529 [cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29"];
n530 [cluster="decimal.SmartRounding()", label="Entry decimal.SmartRounding()", span="206-206"];
n531 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="171-171"];
n526 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="995-995"];
n527 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Log.Error(err)", span="996-996"];
m1_161 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="172-172"];
m1_137 [cluster="System.DateTime.ToShortTimeString()", file="Engine.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m1_139 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="34-34"];
m1_192 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="''''", span="363-363"];
m1_152 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="576-576"];
m1_244 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var rh = default(IResultHandler)", span="578-578"];
m1_245 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.ResultEndpoint", span="580-580"];
m1_248 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rh = new ConsoleResultHandler(job)", span="585-585"];
m1_251 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rh = new BacktestingResultHandler((BacktestNodePacket)job)", span="591-591"];
m1_254 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rh = new LiveTradingResultHandler((LiveNodePacket)job)", span="597-597"];
m1_246 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="ResultHandlerEndpoint.Console", span="583-583"];
m1_249 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="ResultHandlerEndpoint.Backtesting", span="589-589"];
m1_252 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="ResultHandlerEndpoint.LiveTrading", span="595-595"];
m1_247 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Console Output.'')", span="584-584"];
m1_250 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Backtesting API Result Endpoint.'')", span="590-590"];
m1_253 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Live Trading API Result Endpoint.'')", span="596-596"];
m1_255 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return rh;", span="600-600"];
m1_256 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="576-576"];
m1_182 [cluster="string.Substring(int, int)", file="Engine.cs", label="Entry string.Substring(int, int)", span="0-0"];
m1_203 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new BacktestingDataFeed(algorithm, (BacktestNodePacket)job)", span="495-495"];
m1_164 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="523-523"];
m1_221 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Engine.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m1_222 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.RealTimeEndpoint", span="526-526"];
m1_225 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rth = new BacktestingRealTimeHandler(algorithm, job)", span="531-531"];
m1_228 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rth = new LiveTradingRealTimeHandler(algorithm, feed, results)", span="537-537"];
m1_223 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="RealTimeEndpoint.Backtesting", span="529-529"];
m1_226 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="RealTimeEndpoint.LiveTrading", span="535-535"];
m1_224 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected Backtesting RealTimeEvent Handler'')", span="530-530"];
m1_227 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected LiveTrading RealTimeEvent Handler'')", span="536-536"];
m1_229 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return rth;", span="540-540"];
m1_230 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="523-523"];
m1_142 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Engine.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m1_163 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="552-552"];
m1_233 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="ITransactionHandler th", span="554-554"];
m1_234 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.TransactionEndpoint", span="555-555"];
m1_236 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="th = new BrokerageTransactionHandler(algorithm, brokerage)", span="558-558"];
m1_238 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="th = new BacktestingTransactionHandler(algorithm, brokerage as BacktestingBrokerage)", span="564-564"];
m1_235 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="TransactionHandlerEndpoint.Brokerage", span="557-557"];
m1_237 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetTransactionHandler(): Selected Brokerage Transaction Models.'')", span="559-559"];
m1_239 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetTransactionHandler(): Selected Backtesting Transaction Models.'')", span="565-565"];
m1_240 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return th;", span="568-568"];
m1_241 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="552-552"];
m1_178 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Engine.cs", label="csv.Add(str.Substring(last))", span="342-342"];
m1_274 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="115-115"];
m1_153 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="Engine.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0"];
m1_181 [cluster="System.Collections.Generic.List<T>.List(int)", file="Engine.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m1_183 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="63-63"];
m1_180 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Engine.cs", label="Exit QuantConnect.Extensions.ToCsv(string, int)", span="328-328"];
m1_219 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="133-133"];
m1_140 [cluster="QuantConnect.Interfaces.IMessagingHandler.Initialize()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Initialize()", span="35-35"];
m1_258 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", span="172-172"];
m1_177 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Engine.cs", label="last = last + 1", span="341-341"];
m1_220 [cluster="System.Collections.Generic.List<T>.List()", file="Engine.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_165 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Engine.cs", label="Entry QuantConnect.Extensions.ToCsv(string, int)", span="328-328"];
m1_199 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="last != str.Length - 1", span="378-378"];
m1_193 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="textDataField = !textDataField", span="364-364"];
m1_194 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="','", span="366-366"];
m1_195 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="!textDataField", span="367-367"];
m1_197 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="last = i", span="370-370"];
m1_198 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="i++", span="359-359"];
m1_259 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", span="158-158"];
m1_162 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="487-487"];
m1_200 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="csv.Add(str.Substring(last + 1).Trim())", span="380-380"];
m1_201 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="return csv;", span="383-383"];
m1_206 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new DatabaseDataFeed(algorithm, (BacktestNodePacket)job)", span="500-500"];
m1_209 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new FileSystemDataFeed(algorithm, (BacktestNodePacket)job)", span="506-506"];
m1_213 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Engine.cs", label="var ext = str.Substring(Math.Max(0, str.Length - 4))", span="410-410"];
m1_202 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="Exit QuantConnect.Extensions.ToCsvData(string, int)", span="352-352"];
m1_205 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.Database", span="499-499"];
m1_208 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.FileSystem", span="505-505"];
m1_211 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.LiveTrading", span="511-511"];
m1_204 [cluster="string.Trim()", file="Engine.cs", label="Entry string.Trim()", span="0-0"];
m1_207 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Database Datafeed'')", span="501-501"];
m1_210 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected FileSystem Datafeed'')", span="507-507"];
m1_212 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Engine.cs", label="Entry QuantConnect.Extensions.GetExtension(string)", span="409-409"];
m1_214 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Engine.cs", label="var allowedExt = new List<string>() { ''.zip'', ''.csv'', ''.json'' }", span="411-411"];
m1_215 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Engine.cs", label="!allowedExt.Contains(ext)", span="412-412"];
m1_216 [cluster="QuantConnect.Extensions.GetExtension(string)", file="Engine.cs", label="ext = ''.custom''", span="414-414"];
m1_154 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", span="86-86"];
m1_169 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Engine.cs", label="i < str.Length", span="332-332"];
m1_149 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", span="41-41"];
m1_189 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="var i = 0", span="359-359"];
m1_151 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="609-609"];
m1_260 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="var sh = default(ISetupHandler)", span="611-611"];
m1_261 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label=setupMethod, span="613-613"];
m1_262 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.Console", span="616-616"];
m1_265 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.Backtesting", span="621-621"];
m1_268 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.Brokerage", span="625-625"];
m1_263 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="sh = new ConsoleSetupHandler()", span="617-617"];
m1_264 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Console Algorithm Setup Handler.'')", span="618-618"];
m1_266 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="sh = new BacktestingSetupHandler()", span="622-622"];
m1_267 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Backtesting Algorithm Setup Handler.'')", span="623-623"];
m1_269 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="sh = new BrokerageSetupHandler()", span="626-626"];
m1_270 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Brokerage Algorithm Setup Handler.'')", span="627-627"];
m1_271 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="return sh;", span="630-630"];
m1_272 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="609-609"];
m1_145 [cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="40-40"];
m1_158 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="318-318"];
m1_136 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Engine.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m1_217 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="50-50"];
m1_218 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.DatabaseDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.DatabaseDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="155-155"];
m1_173 [cluster="QuantConnect.Extensions.ToCsv(string, int)", color=green, community=0, file="Engine.cs", label="csv.Add(str.Substring(last, i - last))", prediction=0, span="337-337"];
m1_191 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="str[i]", span="361-361"];
m1_134 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Engine.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="89-89"];
m1_155 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="95-95"];
m1_138 [cluster="Unk.Error", file="Engine.cs", label="Entry Unk.Error", span=""];
m1_150 [cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="77-77"];
m1_160 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="323-323"];
m1_171 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Engine.cs", label="last != 0", span="336-336"];
m1_190 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="i < str.Length", span="359-359"];
m1_275 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="68-68"];
m1_148 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="59-59"];
m1_231 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="104-104"];
m1_166 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="193-193"];
m1_167 [cluster="string.Format(string, object, object)", file="Engine.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_172 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="123-123"];
m1_168 [cluster="QuantConnect.Extensions.ToCsv(string, int)", file="Engine.cs", label="int i = 0", span="332-332"];
m1_174 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m1_170 [cluster="System.TimeSpan.ToString(string)", file="Engine.cs", label="Entry System.TimeSpan.ToString(string)", span="0-0"];
m1_176 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_179 [cluster="double.ToString(string)", file="Engine.cs", label="Entry double.ToString(string)", span="0-0"];
m1_175 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_184 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="110-110"];
m1_141 [cluster="QuantConnect.Interfaces.IJobQueueHandler.Initialize()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.Initialize()", span="34-34"];
m1_186 [cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="Engine.cs", label="var csv = new List<string>(size)", span="354-354"];
m1_0 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.Main(string[])", span="172-172"];
m1_1 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var algorithmPath = ''''", span="175-175"];
m1_2 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string mode = ''RELEASE''", span="176-176"];
m1_3 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="AlgorithmNodePacket job = null", span="177-177"];
m1_8 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v'' + Constants.Version + '' Mode: '' + mode)", span="188-188"];
m1_4 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var algorithm = default(IAlgorithm)", span="178-178"];
m1_5 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var startTime = DateTime.Now", span="179-179"];
m1_6 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.LogHandler = Composer.Instance.GetExportedValueByTypeName<ILogHandler>(Config.Get(''log-handler'', ''CompositeLogHandler''))", span="180-180"];
m1_7 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread.CurrentThread.Name = ''Algorithm Analysis Thread''", span="187-187"];
m1_9 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Started '' + DateTime.Now.ToShortTimeString())", span="189-189"];
m1_10 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Memory '' + OS.ApplicationMemoryUsed + ''Mb-App  '' + +OS.TotalPhysicalMemoryUsed + ''Mb-Used  '' + OS.TotalPhysicalMemory + ''Mb-Total'')", span="190-190"];
m1_11 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api = Composer.Instance.GetExportedValueByTypeName<IApi>(Config.Get(''api-handler''))", span="196-196"];
m1_12 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify = Composer.Instance.GetExportedValueByTypeName<IMessagingHandler>(Config.Get(''messaging-handler''))", span="197-197"];
m1_13 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="JobQueue = Composer.Instance.GetExportedValueByTypeName<IJobQueueHandler>(Config.Get(''job-queue-handler''))", span="198-198"];
m1_14 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=CompositionException, span="200-200"];
m1_16 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.Initialize()", span="205-205"];
m1_15 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="201-201"];
m1_17 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.Initialize()", span="206-206"];
m1_18 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="JobQueue.Initialize()", span="207-207"];
m1_19 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var statusPingThread = new Thread(StateCheck.Ping.Run)", span="210-210"];
m1_20 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread.Start()", span="211-211"];
m1_129 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread != null && statusPingThread.IsAlive", span="471-471"];
m1_130 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread.Abort()", span="471-471"];
m1_21 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="AlgorithmManager.ResetManager()", span="218-218"];
m1_22 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var initializeComplete = false", span="221-221"];
m1_23 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadFeed = null", span="222-222"];
m1_24 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadTransactions = null", span="223-223"];
m1_115 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed != null && threadFeed.IsAlive", span="437-437"];
m1_116 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed.Abort()", span="437-437"];
m1_25 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadResults = null", span="224-224"];
m1_117 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions != null && threadTransactions.IsAlive", span="438-438"];
m1_118 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions.Abort()", span="438-438"];
m1_26 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadRealTime = null", span="225-225"];
m1_27 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job = JobQueue.NextJob(out algorithmPath)", span="230-230"];
m1_28 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job.Version != Constants.Version || (LiveMode && job.Redelivered)", span="234-234"];
m1_29 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Run(): Job Version: '' + job.Version + ''  Deployed Version: '' + Constants.Version)", span="236-236"];
m1_30 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="JobQueue.AcknowledgeJob(job)", span="240-240"];
m1_31 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, _collapseMessage)", span="241-241"];
m1_32 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.SetChannel(job.Channel)", span="242-242"];
m1_33 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.RuntimeError(job.AlgorithmId, _collapseMessage)", span="243-243"];
m1_35 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job == null", span="246-246"];
m1_36 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.SetChannel(job.Channel)", span="250-250"];
m1_37 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="SetupHandler = GetSetupHandler(job.SetupEndpoint)", span="253-253"];
m1_38 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler = GetResultHandler(job)", span="256-256"];
m1_41 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm = SetupHandler.CreateAlgorithmInstance(algorithmPath)", span="263-263"];
m1_42 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="initializeComplete = SetupHandler.Setup(algorithm, out _brokerage, job)", span="266-266"];
m1_48 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError)", span="276-276"];
m1_52 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="283-283"];
m1_55 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="293-293"];
m1_59 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed            = GetDataFeedHandler(algorithm, job)", span="299-299"];
m1_60 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="TransactionHandler  = GetTransactionHandler(algorithm, _brokerage, ResultHandler, job)", span="300-300"];
m1_61 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="RealTimeHandler     = GetRealTimeHandler(algorithm, _brokerage, DataFeed, ResultHandler, job)", span="301-301"];
m1_63 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Running)", span="307-307"];
m1_70 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Constants.Version))", span="319-319"];
m1_86 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err.StackTrace)", span="367-367"];
m1_103 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.DebugMessage(string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                                job.AlgorithmId, totalSeconds.ToString(''F2''), ((AlgorithmManager.DataPoints / (double)1000) / totalSeconds).ToString(''F0''), AlgorithmManager.DataPoints.ToString(''N0'')))", span="412-413"];
m1_104 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statistics, banner)", span="415-415"];
m1_34 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job = null", span="244-244"];
m1_39 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults = new Thread(ResultHandler.Run, 0) {Name = ''Result Thread''}", span="257-257"];
m1_40 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults.Start()", span="258-258"];
m1_119 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults != null && threadResults.IsAlive", span="439-439"];
m1_120 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults.Abort()", span="439-439"];
m1_43 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || SetupHandler.Errors.Count > 0", span="269-269"];
m1_45 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="273-273"];
m1_56 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetLiveMode(LiveMode)", span="294-294"];
m1_57 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetLocked()", span="295-295"];
m1_58 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SetAlgorithm(algorithm)", span="298-298"];
m1_75 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.RunTimeError != null", span="351-351"];
m1_76 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="throw algorithm.RunTimeError;", span="353-353"];
m1_88 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var orders = new Dictionary<int, Order>(algorithm.Transactions.Orders)", span="380-380"];
m1_98 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var profitLoss =\r\n                                        new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="399-400"];
m1_53 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=initializeComplete, span="287-287"];
m1_44 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="initializeComplete = false", span="271-271"];
m1_49 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="279-279"];
m1_46 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="errorMessage += String.Join('','', SetupHandler.Errors)", span="274-274"];
m1_47 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.RuntimeError(errorMessage)", span="275-275"];
m1_50 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="281-281"];
m1_51 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.RuntimeError(runtimeMessage, err.StackTrace)", span="282-282"];
m1_54 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="startTime = DateTime.Now", span="290-290"];
m1_110 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.Exit()", span="429-429"];
m1_102 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="411-411"];
m1_62 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="SetupHandler.SetupErrorHandler(ResultHandler, _brokerage)", span="304-304"];
m1_64 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed = new Thread(DataFeed.Run, 0) {Name = ''DataFeed Thread''}", span="310-310"];
m1_65 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions = new Thread(TransactionHandler.Run, 0) {Name = ''Transaction Thread''}", span="311-311"];
m1_67 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed.Start()", span="315-315"];
m1_66 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadRealTime = new Thread(RealTimeHandler.Run, 0) {Name = ''RealTime Thread''}", span="312-312"];
m1_68 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions.Start()", span="316-316"];
m1_69 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadRealTime.Start()", span="317-317"];
m1_72 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!complete", span="344-344"];
m1_73 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Failed to complete in time: '' + SetupHandler.MaximumRuntime.ToString(''F''))", span="346-346"];
m1_74 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="throw new Exception(''Failed to complete algorithm within '' + SetupHandler.MaximumRuntime.ToString(''F'') + '' seconds. Please make it run faster.'');", span="347-347"];
m1_77 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="356-356"];
m1_87 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var charts = new Dictionary<string, Chart>(ResultHandler.Charts)", span="379-379"];
m1_78 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Run(): Breaking out of parent try-catch: '' + err.Message + '' '' + err.StackTrace)", span="359-359"];
m1_79 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed != null", span="360-360"];
m1_80 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed.Exit()", span="360-360"];
m1_81 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler != null", span="361-361"];
m1_82 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var message = ''Runtime Error: '' + err.Message", span="363-363"];
m1_83 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="364-364"];
m1_84 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.LogMessage(message)", span="365-365"];
m1_85 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.RuntimeError(message, err.StackTrace)", span="366-366"];
m1_95 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="charts.ContainsKey(strategyEquityKey) &&\r\n                                    charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                    charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey)", span="393-395"];
m1_96 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="397-397"];
m1_97 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="398-398"];
m1_89 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var holdings = new Dictionary<string, Holding>()", span="381-381"];
m1_90 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var statistics = new Dictionary<string, string>()", span="382-382"];
m1_91 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var banner = new Dictionary<string, string>()", span="383-383"];
m1_92 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string strategyEquityKey = ''Strategy Equity''", span="388-388"];
m1_93 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string equityKey = ''Equity''", span="389-389"];
m1_94 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string dailyPerformanceKey = ''Daily Performance''", span="390-390"];
m1_100 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="405-405"];
m1_101 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Algorithm.Node.Engine(): Error generating statistics packet: '' + err.Message)", span="407-407"];
m1_105 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="417-417"];
m1_107 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="TransactionHandler.Exit()", span="423-423"];
m1_106 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Error sending analysis result: '' + err.Message + ''  ST >> '' + err.StackTrace)", span="419-419"];
m1_108 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed.Exit()", span="424-424"];
m1_109 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="RealTimeHandler.Exit()", span="425-425"];
m1_111 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var ts = Stopwatch.StartNew()", span="432-432"];
m1_112 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="(ResultHandler.IsActive || (TransactionHandler != null && TransactionHandler.IsActive) || (DataFeed != null && DataFeed.IsActive)) && ts.ElapsedMilliseconds < 30 * 1000", span="433-433"];
m1_113 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread.Sleep(100)", span="435-435"];
m1_114 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Waiting for threads to exit...'')", span="435-435"];
m1_121 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="_brokerage.Disconnect()", span="440-440"];
m1_122 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="SetupHandler.Dispose()", span="441-441"];
m1_123 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="442-442"];
m1_124 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="444-444"];
m1_126 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!IsLocal", span="462-462"];
m1_125 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Error running algorithm: '' + err.Message + '' >> '' + err.StackTrace)", span="446-446"];
m1_127 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="StateCheck.Ping.Exit()", span="465-465"];
m1_128 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Console.Read()", span="468-468"];
m1_131 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.LogHandler != null", span="473-473"];
m1_132 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.LogHandler.Dispose()", span="475-475"];
m1_133 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.Main(string[])", span="172-172"];
m1_242 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="61-61"];
m1_135 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="Engine.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="69-69"];
m1_156 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Engine.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m1_159 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="412-412"];
m1_146 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Engine.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m1_243 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m1_143 [cluster="System.Threading.Thread.Start()", file="Engine.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m1_257 [cluster="QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="132-132"];
m1_185 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="218-218"];
m1_187 [cluster="System.Threading.Thread.Sleep(int)", file="Engine.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_188 [cluster="System.Threading.Thread.Abort()", file="Engine.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m1_144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="530-530"];
m1_232 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="106-106"];
m1_273 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="62-62"];
m1_157 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="121-121"];
m1_147 [cluster="QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="46-46"];
m1_276 [file="Engine.cs", label=job, span=""];
m1_277 [file="Engine.cs", label=algorithm, span=""];
m2_35 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="335-335"];
m2_48 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", span="392-392"];
m2_49 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", span="392-392"];
m2_14 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="277-277"];
m2_15 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="277-277"];
m2_24 [cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", span="306-306"];
m2_25 [cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", span="306-306"];
m2_18 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", span="290-290"];
m2_19 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", span="290-290"];
m2_60 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", span="434-434"];
m2_61 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", span="434-434"];
m2_54 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="412-412"];
m2_55 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="412-412"];
m2_36 [cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="341-341"];
m2_37 [cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="341-341"];
m2_4 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Log(string)", span="249-249"];
m2_5 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Log(string)", span="249-249"];
m2_30 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="323-323"];
m2_31 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="323-323"];
m2_38 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="352-352"];
m2_39 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="352-352"];
m2_10 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="265-265"];
m2_11 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="265-265"];
m2_26 [cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", span="312-312"];
m2_27 [cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", span="312-312"];
m2_50 [cluster="QuantConnect.Interfaces.IAlgorithm.Quit(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Quit(string)", span="400-400"];
m2_51 [cluster="QuantConnect.Interfaces.IAlgorithm.Quit(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Quit(string)", span="400-400"];
m2_56 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="418-418"];
m2_57 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="418-418"];
m2_6 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255"];
m2_7 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255"];
m2_44 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="375-375"];
m2_45 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="375-375"];
m2_12 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="270-270"];
m2_13 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="270-270"];
m2_16 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="283-283"];
m2_17 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="283-283"];
m2_46 [cluster="QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", span="385-385"];
m2_47 [cluster="QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", span="385-385"];
m2_52 [cluster="QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", span="406-406"];
m2_53 [cluster="QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", span="406-406"];
m2_22 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", span="301-301"];
m2_23 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", span="301-301"];
m2_28 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="318-318"];
m2_29 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="318-318"];
m2_2 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="243-243"];
m2_3 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="243-243"];
m2_58 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="427-427"];
m2_59 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="427-427"];
m2_8 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="260-260"];
m2_9 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="260-260"];
m2_32 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="328-328"];
m2_33 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="328-328"];
m2_62 [cluster="QuantConnect.Interfaces.IAlgorithm.GetQuit()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetQuit()", span="440-440"];
m2_63 [cluster="QuantConnect.Interfaces.IAlgorithm.GetQuit()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetQuit()", span="440-440"];
m2_40 [cluster="QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", span="361-361"];
m2_41 [cluster="QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, bool)", span="361-361"];
m2_20 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", span="295-295"];
m2_21 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", span="295-295"];
m2_0 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="219-219"];
m2_1 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Initialize()", span="219-219"];
m2_42 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="IAlgorithm.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="367-367"];
m2_43 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="IAlgorithm.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="367-367"];
m3_33 [cluster="System.TimeSpan.FromMinutes(double)", file="Isolator.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m3_37 [cluster="System.Math.Round(double)", file="Isolator.cs", label="Entry System.Math.Round(double)", span="0-0"];
m3_34 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken)", file="Isolator.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken)", span="0-0"];
m3_41 [cluster="System.DateTime.AddMinutes(double)", file="Isolator.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m3_4 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="Isolator.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m3_44 [cluster="System.Exception.Exception(string)", file="Isolator.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m3_35 [cluster="System.GC.GetTotalMemory(bool)", file="Isolator.cs", label="Entry System.GC.GetTotalMemory(bool)", span="0-0"];
m3_42 [cluster="System.Threading.Thread.Sleep(int)", file="Isolator.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m3_39 [cluster="System.DateTime.ToString(string)", file="Isolator.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m3_36 [cluster="System.Convert.ToDouble(long)", file="Isolator.cs", label="Entry System.Convert.ToDouble(long)", span="0-0"];
m3_43 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="Isolator.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m3_40 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Isolator.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m3_5 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="83-83"];
m3_6 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", color=green, community=0, file="Isolator.cs", label="var message = ''''", prediction=1, span="85-85"];
m3_7 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="var end = DateTime.Now + timeSpan", span="86-86"];
m3_9 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="memoryCap *= 1024 * 1024", span="90-90"];
m3_11 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="var task = Task.Factory.StartNew(codeBlock, cancelToken)", span="95-95"];
m3_25 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", color=green, community=0, file="Isolator.cs", label="message = ''Execution Security Error: Operation timed out - '' + timeSpan.TotalMinutes + '' minutes max. Check for recursive loops.''", prediction=1, span="125-125"];
m3_24 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="task.IsCompleted == false && message == ''''", span="123-123"];
m3_27 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", color=green, community=0, file="Isolator.cs", label="message != ''''", prediction=1, span="129-129"];
m3_29 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", color=green, community=0, file="Isolator.cs", label="Log.Error(''Security.ExecuteWithTimeLimit(): '' + message)", prediction=1, span="132-132"];
m3_30 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", color=green, community=0, file="Isolator.cs", label="throw new Exception(message);", prediction=1, span="133-133"];
m3_8 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", color=green, community=0, file="Isolator.cs", label="var memoryLogger = DateTime.Now + TimeSpan.FromMinutes(1)", prediction=6, span="87-87"];
m3_12 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="!task.IsCompleted && DateTime.Now < end", span="97-97"];
m3_17 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="DateTime.Now > memoryLogger", span="110-110"];
m3_10 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="ResetCancelToken()", span="92-92"];
m3_14 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="memoryUsed > memoryCap", span="101-101"];
m3_15 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="GC.GetTotalMemory(true) > memoryCap", span="103-103"];
m3_16 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="message = ''Execution Security Error: Memory Usage Maxed Out - '' + Math.Round(Convert.ToDouble(memoryCap / (1024 * 1024))) + ''MB max.''", span="105-105"];
m3_18 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="memoryUsed > (memoryCap * 0.8)", span="112-112"];
m3_31 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="return task.IsCompleted;", span="135-135"];
m3_13 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="var memoryUsed = GC.GetTotalMemory(false)", span="99-99"];
m3_21 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="Log.Trace(DateTime.Now.ToString(''u'') + '' Isolator.ExecuteWithTimeLimit(): Used: '' + Math.Round(Convert.ToDouble(memoryUsed / (1024 * 1024))))", span="117-117"];
m3_23 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="Thread.Sleep(100)", span="120-120"];
m3_19 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="memoryUsed = GC.GetTotalMemory(true)", span="114-114"];
m3_20 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="Log.Error(''Execution Security Error: Memory usage over 80% capacity.'')", span="115-115"];
m3_22 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="memoryLogger = DateTime.Now.AddMinutes(1)", span="118-118"];
m3_26 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", color=green, community=0, file="Isolator.cs", label="Log.Trace(''Isolator.ExecuteWithTimeLimit(): '' + message)", prediction=7, span="126-126"];
m3_28 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", color=green, community=0, file="Isolator.cs", label="cancellation.Cancel()", prediction=8, span="131-131"];
m3_32 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Isolator.cs", label="Exit QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="83-83"];
m3_0 [cluster="QuantConnect.Isolator.ResetCancelToken()", file="Isolator.cs", label="Entry QuantConnect.Isolator.ResetCancelToken()", span="69-69"];
m3_1 [cluster="QuantConnect.Isolator.ResetCancelToken()", file="Isolator.cs", label="cancellation = new CancellationTokenSource()", span="71-71"];
m3_2 [cluster="QuantConnect.Isolator.ResetCancelToken()", file="Isolator.cs", label="cancelToken = cancellation.Token", span="72-72"];
m3_3 [cluster="QuantConnect.Isolator.ResetCancelToken()", file="Isolator.cs", label="Exit QuantConnect.Isolator.ResetCancelToken()", span="69-69"];
m4_0 [cluster="QuantConnect.Queues.JobQueue.Initialize()", file="JobQueue.cs", label="Entry QuantConnect.Queues.JobQueue.Initialize()", span="62-62"];
m4_1 [cluster="QuantConnect.Queues.JobQueue.Initialize()", file="JobQueue.cs", label="Exit QuantConnect.Queues.JobQueue.Initialize()", span="62-62"];
m4_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="JobQueue.cs", label="throw new ArgumentException(''Forex symbol length must be equal to 6: '' + symbol.Value);", span="77-77"];
m4_10 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="JobQueue.cs", label="return liveJob;", span="104-104"];
m4_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="JobQueue.cs", label="throw new ArgumentException(''Invalid symbol: '' + (symbol == null ? ''null'' : symbol.ToString()));", span="68-68"];
m4_25 [cluster="System.Type.MatchesTypeName(string)", file="JobQueue.cs", label="Entry System.Type.MatchesTypeName(string)", span="346-346"];
m4_51 [cluster="lambda expression", file="JobQueue.cs", label="Entry lambda expression", span="139-139"];
m4_23 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="JobQueue.cs", label="return symbol.Value;", span="88-88"];
m4_22 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="JobQueue.cs", label="return GetBrokerageRootSymbol(symbol.ID.Symbol);", span="85-85"];
m4_24 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="JobQueue.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="65-65"];
m4_52 [cluster="lambda expression", file="JobQueue.cs", label="kv.Value == rootSymbol", span="139-139"];
m4_53 [cluster="lambda expression", file="JobQueue.cs", label="Exit lambda expression", span="139-139"];
m4_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="JobQueue.cs", label="symbol.ID.SecurityType == SecurityType.Forex && symbol.Value.Length != 6", span="76-76"];
m4_20 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="JobQueue.cs", label="return symbol.Underlying.Value;", span="81-81"];
m4_12 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="JobQueue.cs", label="return backtestJob;", span="119-119"];
m4_13 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="JobQueue.cs", label="Exit QuantConnect.Queues.JobQueue.NextJob(out string)", span="71-71"];
m4_15 [cluster="System.IO.File.ReadAllBytes(string)", file="JobQueue.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m4_16 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="JobQueue.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="89-89"];
m4_19 [cluster="string.Format(string, object, object)", file="JobQueue.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_21 [cluster="QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", file="JobQueue.cs", label="Entry QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", span="87-87"];
m4_27 [cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="JobQueue.cs", label="Exit QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="126-126"];
m4_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper(System.Collections.Generic.Dictionary<string, string>)", file="JobQueue.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper(System.Collections.Generic.Dictionary<string, string>)", span="44-44"];
m4_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper(System.Collections.Generic.Dictionary<string, string>)", file="JobQueue.cs", label="_ibNameMap = ibNameMap", span="46-46"];
m4_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper(System.Collections.Generic.Dictionary<string, string>)", file="JobQueue.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper(System.Collections.Generic.Dictionary<string, string>)", span="44-44"];
m4_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper(string)", file="JobQueue.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper(string)", span="53-53"];
m4_11 [cluster="Unk.>", file="JobQueue.cs", label="Entry Unk.>", span=""];
m4_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper(string)", file="JobQueue.cs", label="File.Exists(ibNameMapFullName)", span="55-55"];
m4_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper(string)", file="JobQueue.cs", label="_ibNameMap = JsonConvert.DeserializeObject<Dictionary<string, string>>(File.ReadAllText(ibNameMapFullName))", span="57-57"];
m4_9 [cluster="System.IO.File.Exists(string)", file="JobQueue.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m4_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper(string)", file="JobQueue.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.InteractiveBrokersSymbolMapper(string)", span="53-53"];
m4_45 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="JobQueue.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m4_26 [cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="JobQueue.cs", label="Entry QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="126-126"];
m4_42 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanRootSymbol(string)", file="JobQueue.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanRootSymbol(string)", span="149-149"];
m4_54 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanRootSymbol(string)", file="JobQueue.cs", label="return _ibNameMap.ContainsKey(brokerageRootSymbol) ? _ibNameMap[brokerageRootSymbol] : brokerageRootSymbol;", span="151-151"];
m4_55 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanRootSymbol(string)", file="JobQueue.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanRootSymbol(string)", span="149-149"];
m4_50 [cluster="Unk.FirstOrDefault", file="JobQueue.cs", label="Entry Unk.FirstOrDefault", span=""];
m4_43 [cluster="QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", file="JobQueue.cs", label="Entry QuantConnect.Symbol.CreateFuture(string, string, System.DateTime, string)", span="143-143"];
m4_44 [cluster="QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", file="JobQueue.cs", label="Entry QuantConnect.Symbol.CreateOption(string, string, QuantConnect.OptionStyle, QuantConnect.OptionRight, decimal, System.DateTime, string, bool)", span="95-95"];
m4_46 [cluster="string.Format(string, object, object, object)", file="JobQueue.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m4_29 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label=liveJob, span=""];
m4_30 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", color=green, community=0, file="JobQueue.cs", label="string.IsNullOrWhiteSpace(brokerageSymbol)", prediction=9, span="103-103"];
m4_31 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label="throw new ArgumentException(''Invalid symbol: '' + brokerageSymbol);", span="104-104"];
m4_32 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label="securityType != SecurityType.Forex &&\r\n                securityType != SecurityType.Equity &&\r\n                securityType != SecurityType.Option &&\r\n                securityType != SecurityType.Future", span="106-109"];
m4_33 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label="throw new ArgumentException(''Invalid security type: '' + securityType);", span="110-110"];
m4_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label="securityType == SecurityType.Future", span="114-114"];
m4_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label="return Symbol.CreateFuture(GetLeanRootSymbol(brokerageSymbol), market, expirationDate);", span="116-116"];
m4_36 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label="securityType == SecurityType.Option", span="118-118"];
m4_37 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label="return Symbol.CreateOption(brokerageSymbol, market, OptionStyle.American, optionRight, strike, expirationDate);", span="120-120"];
m4_38 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label="return Symbol.Create(brokerageSymbol, securityType, market);", span="123-123"];
m4_40 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label="throw new ArgumentException(string.Format(''Invalid symbol: {0}, security type: {1}, market: {2}.'', brokerageSymbol, securityType, market));", span="127-127"];
m4_39 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label=Exception, span="125-125"];
m4_41 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="JobQueue.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="101-101"];
m4_28 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", file="JobQueue.cs", label="QuantConnect.Queues.JobQueue", span=""];
m4_47 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", file="JobQueue.cs", label="var brokerageSymbol = _ibNameMap.FirstOrDefault(kv => kv.Value == rootSymbol)", span="139-139"];
m4_48 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", file="JobQueue.cs", label="return brokerageSymbol.Key??rootSymbol;", span="141-141"];
m4_49 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", file="JobQueue.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper.GetBrokerageRootSymbol(string)", span="137-137"];
m4_57 [file="JobQueue.cs", label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper", span=""];
m4_58 [file="JobQueue.cs", label=string, span=""];
m6_68 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object, object)", file="Log.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object, object)", span="0-0"];
m6_27 [cluster="QuantConnect.Logging.ILogHandler.Debug(string)", file="Log.cs", label="Entry QuantConnect.Logging.ILogHandler.Debug(string)", span="35-35"];
m6_18 [cluster="QuantConnect.Logging.ILogHandler.Trace(string)", file="Log.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string)", span="41-41"];
m6_65 [cluster="System.Text.StringBuilder.ToString()", file="Log.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_67 [cluster="string.Concat(object, object, object)", file="Log.cs", label="Entry string.Concat(object, object, object)", span="0-0"];
m6_29 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="Entry QuantConnect.Logging.Log.VarDump(object, int)", span="144-144"];
m6_30 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="var result = new StringBuilder()", span="146-146"];
m6_31 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="recursion < 5", span="149-149"];
m6_32 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="var t = obj.GetType()", span="152-152"];
m6_35 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="var value = property.GetValue(obj, null)", span="162-162"];
m6_39 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="recursion > 0", span="170-170"];
m6_40 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="indent = new StringBuilder(trail).Insert(0, spaces, recursion - 1).ToString()", span="172-172"];
m6_47 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="result.Append(VarDump(value, recursion + 1))", span="191-191"];
m6_51 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="indent = new StringBuilder(trail).Insert(0, spaces, recursion).ToString()", span="202-202"];
m6_53 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="result.Append(VarDump(element, recursion + 2))", span="208-208"];
m6_55 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="result.Append(VarDump(value, recursion + 1))", span="212-212"];
m6_45 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="result.AppendFormat(''{0}{1} = {2}\n'', indent, property.Name, displayValue)", span="182-182"];
m6_52 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="result.AppendFormat(''{0}{1} = {2}\n'', indent, elementName, element.ToString())", span="205-205"];
m6_56 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="result.AppendFormat(''{0}{1} = {2}\n'', indent, property.Name, ''null'')", span="219-219"];
m6_57 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="return result.ToString();", span="230-230"];
m6_33 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="var properties = t.GetProperties()", span="155-155"];
m6_34 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label=properties, span="157-157"];
m6_50 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="var elementName = String.Format(''{0}[{1}]'', property.Name, elementCount)", span="201-201"];
m6_36 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="var indent = String.Empty", span="166-166"];
m6_41 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="value != null", span="175-175"];
m6_42 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="var displayValue = value.ToString()", span="178-178"];
m6_43 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="value is string", span="179-179"];
m6_46 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="!(value is ICollection)", span="186-186"];
m6_49 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="((ICollection)value)", span="199-199"];
m6_37 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="var spaces = ''|   ''", span="167-167"];
m6_38 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="var trail = ''|...''", span="168-168"];
m6_44 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="displayValue = String.Concat('''', displayValue, '''')", span="179-179"];
m6_48 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="var elementCount = 0", span="198-198"];
m6_54 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="elementCount++", span="209-209"];
m6_58 [cluster="QuantConnect.Logging.Log.VarDump(object, int)", file="Log.cs", label="Exit QuantConnect.Logging.Log.VarDump(object, int)", span="144-144"];
m6_62 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="Log.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m6_0 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Log.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m6_1 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Log.cs", label="error == _lastErrorText && !overrideMessageFloodProtection", span="90-90"];
m6_3 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Log.cs", label="_logHandler.Error(error)", span="91-91"];
m6_4 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Log.cs", label="_lastErrorText = error", span="92-92"];
m6_2 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Log.cs", label="return;", span="90-90"];
m6_5 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Log.cs", label=Exception, span="94-94"];
m6_6 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Log.cs", label="Console.WriteLine(''Log.Error(): Error writing error: '' + err.Message)", span="96-96"];
m6_7 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Log.cs", label="Exit QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m6_9 [cluster="System.Console.WriteLine(string)", file="Log.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m6_66 [cluster="object.ToString()", file="Log.cs", label="Entry object.ToString()", span="0-0"];
m6_64 [cluster="System.Text.StringBuilder.Insert(int, string, int)", file="Log.cs", label="Entry System.Text.StringBuilder.Insert(int, string, int)", span="0-0"];
m6_8 [cluster="QuantConnect.Logging.ILogHandler.Error(string)", file="Log.cs", label="Entry QuantConnect.Logging.ILogHandler.Error(string)", span="29-29"];
m6_19 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Log.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="124-124"];
m6_20 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Log.cs", label="!_debuggingEnabled || level < _level", span="128-128"];
m6_22 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Log.cs", label="_logHandler.Debug(text)", span="129-129"];
m6_23 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Log.cs", label="Thread.Sleep(delay)", span="130-130"];
m6_21 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Log.cs", label="return;", span="128-128"];
m6_24 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Log.cs", label=Exception, span="132-132"];
m6_25 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Log.cs", label="Console.WriteLine(''Log.Debug(): Error writing debug: '' + err.Message)", span="134-134"];
m6_26 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Log.cs", label="Exit QuantConnect.Logging.Log.Debug(string, int, int)", span="124-124"];
m6_28 [cluster="System.Threading.Thread.Sleep(int)", file="Log.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m6_69 [cluster="System.Text.StringBuilder.Append(string)", file="Log.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m6_59 [cluster="System.Text.StringBuilder.StringBuilder()", file="Log.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m6_70 [cluster="string.Format(string, object, object)", file="Log.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_63 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="Log.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m6_10 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Log.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m6_11 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Log.cs", label="traceText == _lastTraceText && !overrideMessageFloodProtection", span="108-108"];
m6_13 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Log.cs", label="_logHandler.Trace(traceText)", span="109-109"];
m6_14 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Log.cs", label="_lastTraceText = traceText", span="110-110"];
m6_12 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Log.cs", label="return;", span="108-108"];
m6_15 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Log.cs", label=Exception, span="112-112"];
m6_16 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Log.cs", label="Console.WriteLine(''Log.Trace(): Error writing trace: ''  +err.Message)", span="114-114"];
m6_17 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Log.cs", label="Exit QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m6_61 [cluster="System.Type.GetProperties()", file="Log.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m8_3 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", file="MarginCallModel.cs", label="Entry QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", span="35-35"];
m8_4 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs", label="var executedOrders = new List<Order>()", prediction=10, span="38-38"];
m8_5 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs", label="var ordersWithSecurities = generatedMarginCallOrders.ToDictionary(x => x, x => Portfolio[x.Symbol])", prediction=11, span="39-39"];
m8_10 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", file="MarginCallModel.cs", label="executedOrders.Add(order)", span="45-45"];
m8_12 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", file="MarginCallModel.cs", label="return executedOrders;", span="53-53"];
m8_6 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs", label="var orderedByLosers = ordersWithSecurities.OrderBy(x => x.Value.UnrealizedProfit).Select(x => x.Key)", prediction=12, span="40-40"];
m8_7 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs", label=orderedByLosers, prediction=13, span="41-41"];
m8_8 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", file="MarginCallModel.cs", label="Portfolio.Transactions.AddOrder(order)", span="43-43"];
m8_9 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", file="MarginCallModel.cs", label="Portfolio.Transactions.WaitForOrder(order.Id)", span="44-44"];
m8_11 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", file="MarginCallModel.cs", label="Portfolio.MarginRemaining >= 0", span="48-48"];
m8_13 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", file="MarginCallModel.cs", label="Exit QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", span="35-35"];
m8_0 [cluster="QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="MarginCallModel.cs", label="Entry QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", span="24-24"];
m8_1 [cluster="QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="MarginCallModel.cs", label="Portfolio = portfolio", span="26-26"];
m8_2 [cluster="QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="MarginCallModel.cs", label="Exit QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", span="24-24"];
m8_18 [cluster="Unk.AddOrder", file="MarginCallModel.cs", label="Entry Unk.AddOrder", span=""];
m8_14 [cluster="System.Collections.Generic.List<T>.List()", file="MarginCallModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_16 [cluster="Unk.OrderBy", file="MarginCallModel.cs", label="Entry Unk.OrderBy", span=""];
m8_17 [cluster="Unk.Select", file="MarginCallModel.cs", label="Entry Unk.Select", span=""];
m8_15 [cluster="Unk.ToDictionary", file="MarginCallModel.cs", label="Entry Unk.ToDictionary", span=""];
m8_19 [cluster="Unk.WaitForOrder", file="MarginCallModel.cs", label="Entry Unk.WaitForOrder", span=""];
m8_30 [cluster="lambda expression", file="MarginCallModel.cs", label="Entry lambda expression", span="40-40"];
m8_21 [cluster="lambda expression", file="MarginCallModel.cs", label="Entry lambda expression", span="39-39"];
m8_24 [cluster="lambda expression", file="MarginCallModel.cs", label="Entry lambda expression", span="39-39"];
m8_27 [cluster="lambda expression", file="MarginCallModel.cs", label="Entry lambda expression", span="40-40"];
m8_22 [cluster="lambda expression", color=green, community=0, file="MarginCallModel.cs", label=x, prediction=14, span="39-39"];
m8_23 [cluster="lambda expression", file="MarginCallModel.cs", label="Exit lambda expression", span="39-39"];
m8_25 [cluster="lambda expression", color=green, community=0, file="MarginCallModel.cs", label="Portfolio[x.Symbol]", prediction=15, span="39-39"];
m8_26 [cluster="lambda expression", file="MarginCallModel.cs", label="Exit lambda expression", span="39-39"];
m8_28 [cluster="lambda expression", color=green, community=0, file="MarginCallModel.cs", label="x.Value.UnrealizedProfit", prediction=16, span="40-40"];
m8_29 [cluster="lambda expression", file="MarginCallModel.cs", label="Exit lambda expression", span="40-40"];
m8_31 [cluster="lambda expression", color=green, community=0, file="MarginCallModel.cs", label="x.Key", prediction=17, span="40-40"];
m8_32 [cluster="lambda expression", file="MarginCallModel.cs", label="Exit lambda expression", span="40-40"];
m8_33 [file="MarginCallModel.cs", label="QuantConnect.Securities.MarginCallModel", span=""];
m9_0 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="QCAlgorithm.cs", label="Entry QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m9_1 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="QCAlgorithm.cs", label="AlgorithmRunner.RunLocalBacktest(''BasicTemplateAlgorithm'', new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Total Fees'', ''$12.12''},\r\n                {''Average Win'', ''3.39%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''1629.801%''},\r\n                {''Drawdown'', ''3.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''3.392%''},\r\n                {''Sharpe Ratio'', ''4.445''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''2.049''},\r\n                {''Annual Standard Deviation'', ''0.393''},\r\n                {''Annual Variance'', ''0.155''},\r\n                {''Information Ratio'', ''4.403''},\r\n                {''Tracking Error'', ''0.201''},\r\n                {''Treynor Ratio'', ''0.853''}\r\n            })", span="26-47"];
m9_2 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="QCAlgorithm.cs", label="Exit QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m9_4 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", span="29-29"];
m10_0 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m10_1 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", color=green, community=0, file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(''BasicTemplateAlgorithm'', new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Total Fees'', ''$12.12''},\r\n                {''Average Win'', ''3.39%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''1629.801%''},\r\n                {''Drawdown'', ''3.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''3.392%''},\r\n                {''Sharpe Ratio'', ''4.445''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''2.049''},\r\n                {''Annual Standard Deviation'', ''0.393''},\r\n                {''Annual Variance'', ''0.155''},\r\n                {''Information Ratio'', ''4.403''},\r\n                {''Tracking Error'', ''0.201''},\r\n                {''Treynor Ratio'', ''0.853''}\r\n            })", prediction=18, span="26-47"];
m10_2 [cluster="QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.BasicTemplateAlgorithm()", span="24-24"];
m10_4 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>)", span="29-29"];
m11_74 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="74-74"];
m11_48 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(string, out QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(string, out QuantConnect.Securities.Security)", span="212-212"];
m11_127 [cluster="QuantConnect.Securities.Security.GetLastData()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="393-393"];
m11_57 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="239-239"];
m11_58 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="return Securities.Select(x => new KeyValuePair<string, SecurityHolding>(x.Key, x.Value.Holdings)).GetEnumerator();", span="241-241"];
m11_59 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="239-239"];
m11_14 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="113-113"];
m11_15 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="113-113"];
m11_41 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m11_91 [cluster="System.Collections.Generic.List<T>.List()", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_12 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="106-106"];
m11_13 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="106-106"];
m11_73 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="181-181"];
m11_94 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="512-512"];
m11_95 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var security = Securities[dividend.Symbol]", span="514-514"];
m11_100 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.Quantity += total", span="527-527"];
m11_96 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var mode = security.SubscriptionDataConfig.DataNormalizationMode", span="517-517"];
m11_99 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="var total = security.Holdings.Quantity*dividend.Distribution", span="524-524"];
m11_97 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="mode != DataNormalizationMode.Raw || mode != DataNormalizationMode.SplitAdjusted", span="518-518"];
m11_98 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="return;", span="520-520"];
m11_101 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="512-512"];
m11_60 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="241-241"];
m11_54 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Entry lambda expression", span="231-231"];
m11_56 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="231-231"];
m11_55 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="new KeyValuePair<string, SecurityHolding>(x.Key, x.Value.Holdings)", span="231-231"];
m11_61 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="new KeyValuePair<string, SecurityHolding>(x.Key, x.Value.Holdings)", span="241-241"];
m11_62 [cluster="lambda expression", file="SecurityPortfolioManager.cs", label="Exit lambda expression", span="241-241"];
m11_39 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="i++", span="180-180"];
m11_136 [cluster="System.DateTime.AddMilliseconds(double)", file="SecurityPortfolioManager.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m11_129 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="589-589"];
m11_131 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Transactions.TransactionRecord.ContainsKey(clone)", span="592-592"];
m11_133 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Transactions.TransactionRecord.Add(clone, transactionProfitLoss)", span="596-596"];
m11_130 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="var clone = time", span="591-591"];
m11_132 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="clone = clone.AddMilliseconds(1)", span="594-594"];
m11_134 [cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="589-589"];
m11_4 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="CashBook = new CashBook()", span="67-67"];
m11_5 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash = CashBook[CashBook.AccountCurrency]", span="68-68"];
m11_42 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", span="216-216"];
m11_44 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="var success = Securities.TryGetValue(symbol, out security)", span="219-219"];
m11_43 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Security security", span="218-218"];
m11_45 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="holding = success ? security.Holdings : null", span="220-220"];
m11_46 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="return success;", span="221-221"];
m11_47 [cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", span="216-216"];
m11_2 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="Transactions = transactions", span="64-64"];
m11_3 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", label="MarginCallModel = new MarginCallModel(this)", span="65-65"];
m11_80 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", span="483-483"];
m11_81 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs", label="MarginRemaining > 0", prediction=19, span="486-486"];
m11_82 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs", label="return new List<Order>();", prediction=20, span="488-488"];
m11_83 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs", label="var marginCallOrders = new List<Order>()", prediction=21, span="492-492"];
m11_84 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs", label="Securities.Values", prediction=19, span="493-493"];
m11_88 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="SecurityPortfolioManager.cs", label="marginCallOrders.Add(marginCallOrder)", span="501-501"];
m11_89 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="SecurityPortfolioManager.cs", label="return marginCallOrders;", span="505-505"];
m11_85 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="SecurityPortfolioManager.cs", label="security.Price == 0", span="496-496"];
m11_87 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="SecurityPortfolioManager.cs", label="marginCallOrder != null && marginCallOrder.Quantity != 0", span="499-499"];
m11_86 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="SecurityPortfolioManager.cs", label="var marginCallOrder = security.MarginModel.GenerateMarginCallOrder(security, TotalPortfolioValue, TotalMarginUsed)", span="498-498"];
m11_90 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", span="483-483"];
m11_137 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m11_66 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="449-449"];
m11_68 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="CashBook.TryGetValue(symbol, out item)", span="452-452"];
m11_71 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="CashBook.Add(symbol, cash, conversionRate)", span="459-459"];
m11_67 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Cash item", span="451-451"];
m11_69 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="item.Quantity = cash", span="454-454"];
m11_70 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="item.ConversionRate = conversionRate", span="455-455"];
m11_72 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="449-449"];
m11_9 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="92-92"];
m11_8 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="92-92"];
m11_53 [cluster="Unk.GetEnumerator", file="SecurityPortfolioManager.cs", label="Entry Unk.GetEnumerator", span=""];
m11_18 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m11_19 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label=brokerage, span="138-138"];
m11_21 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="return new DefaultBrokerageModel(accountType);", span="141-141"];
m11_23 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="return new InteractiveBrokersBrokerageModel(accountType);", span="144-144"];
m11_25 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="return new TradierBrokerageModel(accountType);", span="147-147"];
m11_27 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="SecurityPortfolioManager.cs", label="return Securities.ContainsKey(symbol);", span="126-126"];
m11_29 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(string)", span="135-135"];
m11_31 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="return Securities.ContainsKey(pair.Key);", span="137-137"];
m11_32 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", span="135-135"];
m11_20 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="BrokerageName.Default", span="140-140"];
m11_22 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="BrokerageName.InteractiveBrokersBrokerage", span="143-143"];
m11_24 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="BrokerageName.TradierBrokerage", span="146-146"];
m11_26 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="124-124"];
m11_28 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="124-124"];
m11_30 [cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", span="135-135"];
m11_33 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", span="170-170"];
m11_34 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71"];
m11_36 [cluster="QuantConnect.Brokerages.TradierBrokerageModel.TradierBrokerageModel(QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.TradierBrokerageModel.TradierBrokerageModel(QuantConnect.AccountType)", span="39-39"];
m11_35 [cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", span="34-34"];
m11_38 [cluster="QuantConnect.Brokerages.FxcmBrokerageModel.FxcmBrokerageModel(QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.FxcmBrokerageModel.FxcmBrokerageModel(QuantConnect.AccountType)", span="55-55"];
m11_37 [cluster="QuantConnect.Brokerages.OandaBrokerageModel.OandaBrokerageModel(QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.OandaBrokerageModel.OandaBrokerageModel(QuantConnect.AccountType)", span="56-56"];
m11_40 [cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", span="170-170"];
m11_102 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="534-534"];
m11_103 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var security = Securities[split.Symbol]", span="536-536"];
m11_111 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.Quantity += extraCash", span="552-552"];
m11_104 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var mode = security.SubscriptionDataConfig.DataNormalizationMode", span="539-539"];
m11_107 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var quantity = security.Holdings.Quantity/split.SplitFactor", span="546-546"];
m11_108 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var avgPrice = security.Holdings.AveragePrice*split.SplitFactor", span="547-547"];
m11_112 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.Holdings.SetHoldings(avgPrice, (int) quantity)", span="554-554"];
m11_113 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var next = security.GetLastData()", span="557-557"];
m11_124 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="security.SetMarketPrice(split.Time, next)", span="577-577"];
m11_110 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var extraCash = leftOver*split.ReferencePrice", span="551-551"];
m11_114 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="next.Value *= split.SplitFactor", span="558-558"];
m11_117 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.Open *= split.SplitFactor", span="564-564"];
m11_118 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.High *= split.SplitFactor", span="565-565"];
m11_119 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar.Low *= split.SplitFactor", span="566-566"];
m11_122 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick.AskPrice *= split.SplitFactor", span="573-573"];
m11_123 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick.BidPrice *= split.SplitFactor", span="574-574"];
m11_105 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="mode == DataNormalizationMode.Adjusted || mode == DataNormalizationMode.SplitAdjusted", span="540-540"];
m11_109 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var leftOver = quantity - (int) quantity", span="550-550"];
m11_115 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var tradeBar = next as TradeBar", span="561-561"];
m11_120 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="var tick = next as Tick", span="570-570"];
m11_121 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tick != null", span="571-571"];
m11_106 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="return;", span="542-542"];
m11_116 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="tradeBar != null", span="562-562"];
m11_125 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="534-534"];
m11_16 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="121-121"];
m11_17 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="121-121"];
m11_75 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="471-471"];
m11_76 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="var security = Securities[fill.Symbol]", span="473-473"];
m11_77 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="security.PortfolioModel.ProcessFill(this, security, fill)", span="474-474"];
m11_78 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="471-471"];
m11_0 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="56-56"];
m11_1 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="56-56"];
m11_6 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
m11_7 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
m11_79 [cluster="QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="29-29"];
m11_128 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", span="403-403"];
m11_10 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="99-99"];
m11_11 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="99-99"];
m11_49 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="229-229"];
m11_50 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="return Securities.Select(x => new KeyValuePair<string, SecurityHolding>(x.Key, x.Value.Holdings)).GetEnumerator();", span="231-231"];
m11_51 [cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="229-229"];
m11_92 [cluster="QuantConnect.Securities.ISecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="73-73"];
m11_63 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="438-438"];
m11_64 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="_baseCurrencyCash.Quantity = cash", span="440-440"];
m11_65 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs", label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="438-438"];
m11_93 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SecurityPortfolioManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m11_126 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="SecurityPortfolioManager.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="365-365"];
m11_52 [cluster="Unk.Select", file="SecurityPortfolioManager.cs", label="Entry Unk.Select", span=""];
m11_138 [file="SecurityPortfolioManager.cs", label="QuantConnect.Securities.SecurityPortfolioManager", span=""];
m12_11 [cluster="QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.CurrentPriceOptionPriceModel()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.CurrentPriceOptionPriceModel()", span="26-26"];
m12_15 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="80-80"];
m12_16 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="ExerciseSettlement = SettlementType.PhysicalDelivery", span="97-97"];
m12_21 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="_symbolProperties = symbolProperties", span="102-102"];
m12_17 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="SetDataNormalizationMode(DataNormalizationMode.Raw)", span="98-98"];
m12_18 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="OptionExerciseModel = new DefaultExerciseModel()", span="99-99"];
m12_19 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="PriceModel = new CurrentPriceOptionPriceModel()", span="100-100"];
m12_20 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Holdings = new OptionHolding(this)", span="101-101"];
m12_22 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="SetFilter(-1, 1, TimeSpan.Zero, TimeSpan.FromDays(35))", span="103-103"];
m12_23 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Securities.Option.Option.Option(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="80-80"];
m12_56 [cluster="QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", span="33-33"];
m12_43 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="324-324"];
m12_54 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="SecurityPortfolioManagerTests.cs", label="ContractFilter = new FuncSecurityDerivativeFilter(universe =>\r\n            {\r\n                var optionUniverse = universe as OptionFilterUniverse;\r\n                var result = universeFunc(optionUniverse);\r\n                return result.ApplyOptionTypesFilter();\r\n            })", span="326-331"];
m12_55 [cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="324-324"];
m12_33 [cluster="QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", span="203-203"];
m12_34 [cluster="QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", file="SecurityPortfolioManagerTests.cs", label="return Math.Max(0.0m, GetPayOff(underlyingPrice));", span="205-205"];
m12_35 [cluster="QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Securities.Option.Option.GetIntrinsicValue(decimal)", span="203-203"];
m12_40 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int)", span="294-294"];
m12_41 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int)", file="SecurityPortfolioManagerTests.cs", label="SetFilter(universe => universe.Strikes(minStrike, maxStrike))", span="296-296"];
m12_42 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Securities.Option.Option.SetFilter(int, int)", span="294-294"];
m12_57 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="326-331"];
m12_45 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="universe.Strikes(minStrike, maxStrike)", span="296-296"];
m12_44 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="296-296"];
m12_46 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="296-296"];
m12_51 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="universe\r\n                                .Strikes(minStrike, maxStrike)\r\n                                .Expiration(minExpiry, maxExpiry)", span="315-317"];
m12_50 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Entry lambda expression", span="315-317"];
m12_52 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="315-317"];
m12_59 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="var result = universeFunc(optionUniverse)", span="329-329"];
m12_58 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="var optionUniverse = universe as OptionFilterUniverse", span="328-328"];
m12_60 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="return result.ApplyOptionTypesFilter();", span="330-330"];
m12_61 [cluster="lambda expression", file="SecurityPortfolioManagerTests.cs", label="Exit lambda expression", span="326-331"];
m12_10 [cluster="QuantConnect.Orders.OptionExercise.DefaultExerciseModel.DefaultExerciseModel()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Orders.OptionExercise.DefaultExerciseModel.DefaultExerciseModel()", span="29-29"];
m12_63 [cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", span="119-119"];
m12_30 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", span="195-195"];
m12_31 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="SecurityPortfolioManagerTests.cs", label="return GetIntrinsicValue(underlyingPrice) >= 0.01m;", span="197-197"];
m12_32 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", span="195-195"];
m12_53 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="271-271"];
m12_24 [cluster="QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", span="177-177"];
m12_25 [cluster="QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", file="SecurityPortfolioManagerTests.cs", label="return StrikePrice * ContractMultiplier;", span="179-179"];
m12_26 [cluster="QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount()", span="177-177"];
m12_68 [cluster="System.ArgumentException.ArgumentException(string)", file="SecurityPortfolioManagerTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m12_47 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="199-199"];
m12_27 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="187-187"];
m12_28 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="SecurityPortfolioManagerTests.cs", label="return quantity * ContractUnitOfTrade / ContractMultiplier;", span="189-189"];
m12_29 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="187-187"];
m12_13 [cluster="System.TimeSpan.FromDays(double)", file="SecurityPortfolioManagerTests.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m12_14 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="313-313"];
m12_48 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="SecurityPortfolioManagerTests.cs", label="SetFilter(universe => universe\r\n                                .Strikes(minStrike, maxStrike)\r\n                                .Expiration(minExpiry, maxExpiry))", span="315-317"];
m12_49 [cluster="QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Securities.Option.Option.SetFilter(int, int, System.TimeSpan, System.TimeSpan)", span="313-313"];
m12_9 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="337-337"];
m12_64 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SecurityPortfolioManagerTests.cs", label="mode != DataNormalizationMode.Raw", span="339-339"];
m12_66 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SecurityPortfolioManagerTests.cs", label="base.SetDataNormalizationMode(mode)", span="344-344"];
m12_65 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SecurityPortfolioManagerTests.cs", label="throw new ArgumentException(''DataNormalizationMode.Raw must be used with options'');", span="341-341"];
m12_67 [cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="337-337"];
m12_62 [cluster="System.Func<T, TResult>.Invoke(T)", file="SecurityPortfolioManagerTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m12_37 [cluster="System.Math.Max(decimal, decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m12_0 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="47-47"];
m12_1 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="ExerciseSettlement = SettlementType.PhysicalDelivery", span="64-64"];
m12_6 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="_symbolProperties = symbolProperties", span="69-69"];
m12_2 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="SetDataNormalizationMode(DataNormalizationMode.Raw)", span="65-65"];
m12_3 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="OptionExerciseModel = new DefaultExerciseModel()", span="66-66"];
m12_4 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="PriceModel = new CurrentPriceOptionPriceModel()", span="67-67"];
m12_5 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Holdings = new OptionHolding(this)", span="68-68"];
m12_7 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="SetFilter(-1, 1, TimeSpan.Zero, TimeSpan.FromDays(35))", span="70-70"];
m12_8 [cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="47-47"];
m12_36 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="212-212"];
m12_38 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", file="SecurityPortfolioManagerTests.cs", label="return Right == OptionRight.Call ? underlyingPrice - StrikePrice : StrikePrice - underlyingPrice;", span="214-214"];
m12_39 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", file="SecurityPortfolioManagerTests.cs", label="Exit QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="212-212"];
m12_12 [cluster="QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Option.OptionHolding.OptionHolding(QuantConnect.Securities.Security)", span="29-29"];
m12_69 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="SecurityPortfolioManagerTests.cs", label="Entry QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="664-664"];
m12_70 [file="SecurityPortfolioManagerTests.cs", label="QuantConnect.Securities.Option.Option", span=""];
m12_71 [file="SecurityPortfolioManagerTests.cs", label=int, span=""];
m12_72 [file="SecurityPortfolioManagerTests.cs", label=int, span=""];
m12_73 [file="SecurityPortfolioManagerTests.cs", label=int, span=""];
m12_74 [file="SecurityPortfolioManagerTests.cs", label=int, span=""];
m12_75 [file="SecurityPortfolioManagerTests.cs", label="System.TimeSpan", span=""];
m12_76 [file="SecurityPortfolioManagerTests.cs", label="System.TimeSpan", span=""];
m12_77 [file="SecurityPortfolioManagerTests.cs", label="System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>", span=""];
m13_9 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", file="Statistics.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", span="62-62"];
m13_10 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", file="Statistics.cs", label="ContractMultiplier = multiplier", span="64-64"];
m13_11 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", file="Statistics.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.SetContractMultiplier(decimal)", span="62-62"];
m13_0 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", file="Statistics.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", span="40-40"];
m13_1 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", file="Statistics.cs", label="ContractUnitOfTrade = (int)contractMultiplier", span="43-43"];
m13_2 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", file="Statistics.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(string, string, decimal, decimal, decimal)", span="40-40"];
m13_6 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", file="Statistics.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", span="58-58"];
m13_7 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", file="Statistics.cs", label="ContractUnitOfTrade = unitOfTrade", span="60-60"];
m13_8 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", file="Statistics.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.SetContractUnitOfTrade(int)", span="58-58"];
m13_3 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="Statistics.cs", label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="48-48"];
m13_4 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="Statistics.cs", label="ContractUnitOfTrade = (int)properties.ContractMultiplier", span="55-55"];
m13_5 [cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="Statistics.cs", label="Exit QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="48-48"];
m13_12 [file="Statistics.cs", label="QuantConnect.Securities.Option.OptionSymbolProperties", span=""];
m14_0 [cluster="QuantConnect.Logging.WhoCalledMe.GetMethodName(int)", file="WhoCalledMe.cs", label="Entry QuantConnect.Logging.WhoCalledMe.GetMethodName(int)", span="31-31"];
m14_1 [cluster="QuantConnect.Logging.WhoCalledMe.GetMethodName(int)", color=green, community=0, file="WhoCalledMe.cs", label="var methodBase = new StackFrame(frame + 1).GetMethod()", prediction=23, span="34-34"];
m14_2 [cluster="QuantConnect.Logging.WhoCalledMe.GetMethodName(int)", color=green, community=0, file="WhoCalledMe.cs", label="var declaringType = methodBase.DeclaringType", prediction=24, span="35-35"];
m14_3 [cluster="QuantConnect.Logging.WhoCalledMe.GetMethodName(int)", color=green, community=0, file="WhoCalledMe.cs", label="return declaringType != null ? declaringType.Name + ''.'' + methodBase.Name : methodBase.Name;", prediction=23, span="36-36"];
m14_4 [cluster="QuantConnect.Logging.WhoCalledMe.GetMethodName(int)", file="WhoCalledMe.cs", label="Exit QuantConnect.Logging.WhoCalledMe.GetMethodName(int)", span="31-31"];
m14_5 [cluster="System.Diagnostics.StackFrame.StackFrame(int)", file="WhoCalledMe.cs", label="Entry System.Diagnostics.StackFrame.StackFrame(int)", span="0-0"];
m14_6 [cluster="System.Diagnostics.StackFrame.GetMethod()", file="WhoCalledMe.cs", label="Entry System.Diagnostics.StackFrame.GetMethod()", span="0-0"];
n532 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n45  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n96  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n120  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n136  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n217  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n222  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n232  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n236  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n331  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n532 -> n339  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
n533 -> n318  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n534 -> n321  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n535 -> n325  [color=darkseagreen4, key=1, label=split, style=dashed];
n536 -> n496  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n9 -> n318  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n32  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n43  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n9 -> n47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n9 -> n50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Server.ILeanManager", style=dashed];
n9 -> n55  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n56  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n59  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n65  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
n9 -> n68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n71  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n9 -> n77  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n78  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n87  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n88  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
n9 -> n89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n9 -> n90  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n91  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n93  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n95  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n101  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n105  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n113  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n121  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n124  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n131  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n132  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n134  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n135  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n136  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n138  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n150  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n164  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n171  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n173  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n175  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n181  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n186  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n188  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n190  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n192  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n199  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n205  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n9 -> n207  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n210  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n216  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n219  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n220  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n221  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n224  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n225  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n228  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n9 -> n229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n230  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n231  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n232  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n233  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n9 -> n235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n9 -> n236  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n12 -> n57  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n59  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n61  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n234  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n12 -> n236  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n13 -> n66  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n13 -> n233  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n13 -> n235  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n13 -> n236  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n23 -> n185  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
n24 -> n187  [color=darkseagreen4, key=1, label=hasOnDataQuoteBars, style=dashed];
n25 -> n189  [color=darkseagreen4, key=1, label=hasOnDataOptionChains, style=dashed];
n26 -> n191  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
n27 -> n170  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
n28 -> n172  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
n29 -> n174  [color=darkseagreen4, key=1, label=hasOnDataDelistings, style=dashed];
n30 -> n70  [color=darkseagreen4, key=1, label=hasOnDataSymbolChangedEvents, style=dashed];
n31 -> n313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n31 -> n317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n31 -> n36  [color=darkseagreen4, key=1, label=hasOnDataSlice, style=dashed];
n32 -> n35  [color=darkseagreen4, key=1, label=config, style=dashed];
n32 -> n41  [color=darkseagreen4, key=1, label=config, style=dashed];
n34 -> n36  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n34 -> n40  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n34 -> n41  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n43 -> n46  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n48  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n69  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n71  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n72  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n75  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n76  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n79  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n83  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n88  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n95  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n123  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n124  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n130  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n133  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n144  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n159  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n170  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n171  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n172  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n173  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n174  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n175  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n181  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n182  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n183  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n184  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n185  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n186  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n187  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n188  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n189  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n190  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n191  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n192  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n198  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n43 -> n199  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n47 -> n47  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n60 -> n234  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n60 -> n236  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
n73 -> n320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n98 -> n101  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
n98 -> n112  [color=darkseagreen4, key=1, label=issueMarginCallWarning, style=dashed];
n137 -> n324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n14 -> n35  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n41  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n71  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n161  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n171  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n173  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n175  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n186  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n188  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n190  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n14 -> n192  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n161 -> n164  [color=darkseagreen4, key=1, label=methodInvoker, style=dashed];
n16 -> n96  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
n18 -> n120  [color=darkseagreen4, key=1, label=nextSettlementScanTime, style=dashed];
n19 -> n90  [color=darkseagreen4, key=1, label=delistings, style=dashed];
n19 -> n181  [color=darkseagreen4, key=1, label=delistings, style=dashed];
n241 -> n480  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
n252 -> n338  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n339  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n351  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n383  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n387  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n252 -> n390  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n391  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n393  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n395  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
n252 -> n399  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n403  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n408  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n409  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n252 -> n414  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n51 -> n54  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n65  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n67  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n68  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n96  [color=darkseagreen4, key=1, label=time, style=dashed];
n51 -> n120  [color=darkseagreen4, key=1, label=time, style=dashed];
n72 -> n321  [color=darkseagreen4, key=1, label=symbol, style=dashed];
n76 -> n78  [color=darkseagreen4, key=1, label=security, style=dashed];
n79 -> n81  [color=darkseagreen4, key=1, label=update, style=dashed];
n83 -> n85  [color=darkseagreen4, key=1, label=update, style=dashed];
n130 -> n132  [color=darkseagreen4, key=1, label=dividend, style=dashed];
n133 -> n135  [color=darkseagreen4, key=1, label=split, style=dashed];
n133 -> n136  [color=darkseagreen4, key=1, label=split, style=dashed];
n133 -> n325  [color=darkseagreen4, key=1, label=split, style=dashed];
n133 -> n138  [color=darkseagreen4, key=1, label=split, style=dashed];
n144 -> n148  [color=darkseagreen4, key=1, label=update, style=dashed];
n144 -> n150  [color=darkseagreen4, key=1, label=update, style=dashed];
n159 -> n161  [color=darkseagreen4, key=1, label=update, style=dashed];
n159 -> n162  [color=darkseagreen4, key=1, label=update, style=dashed];
n159 -> n163  [color=darkseagreen4, key=1, label=update, style=dashed];
n183 -> n327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n62 -> n64  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
n80 -> n82  [color=darkseagreen4, key=1, label=cash, style=dashed];
n84 -> n86  [color=darkseagreen4, key=1, label=security, style=dashed];
n84 -> n87  [color=darkseagreen4, key=1, label=security, style=dashed];
n273 -> n514  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n273 -> n515  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n145 -> n150  [color=darkseagreen4, key=1, label=resolutionTimeSpan, style=dashed];
n148 -> n150  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n148 -> n151  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n147 -> n151  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
n147 -> n153  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
n162 -> n164  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n301 -> n486  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n301 -> n487  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
n328 -> n328  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.QuoteBar>", style=dashed];
n330 -> n332  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
n335 -> n380  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n335 -> n396  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n336 -> n362  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
n337 -> n362  [color=darkseagreen4, key=1, label=history, style=dashed];
n341 -> n346  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n341 -> n349  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n341 -> n355  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n341 -> n357  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n341 -> n359  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n341 -> n362  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n341 -> n390  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n341 -> n392  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
n344 -> n440  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n347 -> n443  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n351 -> n351  [color=darkseagreen4, key=1, label=security, style=dashed];
n366 -> n373  [color=darkseagreen4, key=1, label=security, style=dashed];
n374 -> n388  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n395 -> n402  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n395 -> n407  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n395 -> n415  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
n362 -> n365  [color=darkseagreen4, key=1, label=slice, style=dashed];
n340 -> n400  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n340 -> n403  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n417 -> n465  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n417 -> n468  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n349 -> n351  [color=darkseagreen4, key=1, label=request, style=dashed];
n349 -> n352  [color=darkseagreen4, key=1, label=request, style=dashed];
n355 -> n449  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n356 -> n452  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n356 -> n455  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n357 -> n458  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n359 -> n361  [color=darkseagreen4, key=1, label=request, style=dashed];
n343 -> n384  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n343 -> n411  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n345 -> n407  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
n348 -> n446  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n348 -> n352  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
n367 -> n372  [color=darkseagreen4, key=1, label=data, style=dashed];
n364 -> n373  [color=darkseagreen4, key=1, label=paired, style=dashed];
n368 -> n371  [color=darkseagreen4, key=1, label=list, style=dashed];
n368 -> n372  [color=darkseagreen4, key=1, label=list, style=dashed];
n368 -> n373  [color=darkseagreen4, key=1, label=list, style=dashed];
n369 -> n371  [color=darkseagreen4, key=1, label=ticks, style=dashed];
n389 -> n400  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n389 -> n403  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
n381 -> n396  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
n385 -> n411  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
n402 -> n461  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n401 -> n405  [color=darkseagreen4, key=1, label=hasHistoricalData, style=dashed];
n441 -> n441  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
n465 -> n472  [color=darkseagreen4, key=1, label=security, style=dashed];
n465 -> n473  [color=darkseagreen4, key=1, label=security, style=dashed];
n469 -> n471  [color=darkseagreen4, key=1, label=history, style=dashed];
n471 -> n473  [color=darkseagreen4, key=1, label=slice, style=dashed];
n478 -> n480  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
n484 -> n486  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n484 -> n496  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n484 -> n487  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n484 -> n488  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n484 -> n489  [color=darkseagreen4, key=1, label=delisting, style=dashed];
n486 -> n495  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n498 -> n515  [color=darkseagreen4, key=1, label=i, style=dashed];
n498 -> n516  [color=darkseagreen4, key=1, label=i, style=dashed];
n500 -> n505  [color=darkseagreen4, key=1, label=security, style=dashed];
n500 -> n507  [color=darkseagreen4, key=1, label=security, style=dashed];
n500 -> n510  [color=darkseagreen4, key=1, label=security, style=dashed];
n516 -> n516  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_152 -> m1_245  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_164 -> m1_222  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_163 -> m1_234  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_238 -> m1_240  [color=darkseagreen4, key=1, label=th, style=dashed];
m1_165 -> m1_173  [color=green, key=1, label=string, style=dashed];
m1_165 -> m1_167  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_165 -> m1_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_165 -> m1_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_165 -> m1_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_193 -> m1_195  [color=darkseagreen4, key=1, label=textDataField, style=dashed];
m1_197 -> m1_200  [color=darkseagreen4, key=1, label=last, style=dashed];
m1_197 -> m1_199  [color=darkseagreen4, key=1, label=last, style=dashed];
m1_198 -> m1_198  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_162 -> m1_201  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m1_213 -> m1_215  [color=darkseagreen4, key=1, label=ext, style=dashed];
m1_213 -> m1_217  [color=darkseagreen4, key=1, label=ext, style=dashed];
m1_189 -> m1_191  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_189 -> m1_198  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_151 -> m1_261  [color=darkseagreen4, key=1, label="QuantConnect.SetupHandlerEndpoint", style=dashed];
m1_269 -> m1_271  [color=darkseagreen4, key=1, label=sh, style=dashed];
m1_166 -> m1_173  [color=green, key=1, label=last, style=dashed];
m1_166 -> m1_171  [color=darkseagreen4, key=1, label=last, style=dashed];
m1_166 -> m1_172  [color=darkseagreen4, key=1, label=last, style=dashed];
m1_166 -> m1_176  [color=darkseagreen4, key=1, label=last, style=dashed];
m1_166 -> m1_178  [color=darkseagreen4, key=1, label=last, style=dashed];
m1_167 -> m1_173  [color=green, key=1, label=csv, style=dashed];
m1_167 -> m1_178  [color=darkseagreen4, key=1, label=csv, style=dashed];
m1_167 -> m1_179  [color=darkseagreen4, key=1, label=csv, style=dashed];
m1_172 -> m1_172  [color=darkseagreen4, key=1, label=last, style=dashed];
m1_168 -> m1_173  [color=green, key=1, label=i, style=dashed];
m1_168 -> m1_170  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_168 -> m1_174  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_168 -> m1_175  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_174 -> m1_176  [color=darkseagreen4, key=1, label=last, style=dashed];
m1_174 -> m1_178  [color=darkseagreen4, key=1, label=last, style=dashed];
m1_175 -> m1_175  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_186 -> m1_200  [color=darkseagreen4, key=1, label=csv, style=dashed];
m1_186 -> m1_201  [color=darkseagreen4, key=1, label=csv, style=dashed];
m1_2 -> m1_8  [color=darkseagreen4, key=1, label=mode, style=dashed];
m1_19 -> m1_129  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m1_19 -> m1_130  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m1_23 -> m1_115  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m1_23 -> m1_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m1_24 -> m1_117  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m1_24 -> m1_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m1_27 -> m1_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_194  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_27 -> m1_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_41 -> m1_43  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_41 -> m1_55  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_41 -> m1_56  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_41 -> m1_57  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_41 -> m1_58  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_41 -> m1_194  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_41 -> m1_75  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_41 -> m1_76  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_41 -> m1_98  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_41 -> m1_104  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m1_42 -> m1_53  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_34 -> m1_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_34 -> m1_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_34 -> m1_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_34 -> m1_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_34 -> m1_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_34 -> m1_194  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_34 -> m1_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_34 -> m1_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_34 -> m1_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_39 -> m1_119  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m1_39 -> m1_120  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m1_88 -> m1_104  [color=darkseagreen4, key=1, label=orders, style=dashed];
m1_44 -> m1_53  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m1_50 -> m1_52  [color=darkseagreen4, key=1, label=runtimeMessage, style=dashed];
m1_64 -> m1_67  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m1_64 -> m1_115  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m1_64 -> m1_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m1_65 -> m1_68  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m1_65 -> m1_117  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m1_65 -> m1_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m1_66 -> m1_69  [color=darkseagreen4, key=1, label=threadRealTime, style=dashed];
m1_87 -> m1_95  [color=darkseagreen4, key=1, label=charts, style=dashed];
m1_82 -> m1_84  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_82 -> m1_85  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_82 -> m1_86  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_89 -> m1_104  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m1_90 -> m1_104  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m1_91 -> m1_104  [color=darkseagreen4, key=1, label=banner, style=dashed];
m1_92 -> m1_95  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m1_93 -> m1_95  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m1_185 -> m1_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_185 -> m1_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_185 -> m1_191  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_185 -> m1_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_187 -> m1_200  [color=darkseagreen4, key=1, label=last, style=dashed];
m1_187 -> m1_199  [color=darkseagreen4, key=1, label=last, style=dashed];
m1_276 -> m1_194  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_277 -> m1_194  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m3_6 -> m3_24  [color=green, key=1, label=message, style=dashed];
m3_6 -> m3_27  [color=green, key=1, label=message, style=dashed];
m3_6 -> m3_29  [color=green, key=1, label=message, style=dashed];
m3_6 -> m3_30  [color=green, key=1, label=message, style=dashed];
m3_7 -> m3_12  [color=darkseagreen4, key=1, label=end, style=dashed];
m3_9 -> m3_14  [color=darkseagreen4, key=1, label=long, style=dashed];
m3_9 -> m3_15  [color=darkseagreen4, key=1, label=long, style=dashed];
m3_9 -> m3_18  [color=darkseagreen4, key=1, label=long, style=dashed];
m3_11 -> m3_24  [color=darkseagreen4, key=1, label=task, style=dashed];
m3_11 -> m3_31  [color=darkseagreen4, key=1, label=task, style=dashed];
m3_25 -> m3_27  [color=green, key=1, label=message, style=dashed];
m3_25 -> m3_29  [color=green, key=1, label=message, style=dashed];
m3_25 -> m3_30  [color=green, key=1, label=message, style=dashed];
m3_8 -> m3_17  [color=green, key=1, label=memoryLogger, style=dashed];
m3_16 -> m3_27  [color=green, key=1, label=message, style=dashed];
m3_16 -> m3_29  [color=green, key=1, label=message, style=dashed];
m3_16 -> m3_30  [color=green, key=1, label=message, style=dashed];
m3_13 -> m3_18  [color=darkseagreen4, key=1, label=memoryUsed, style=dashed];
m3_13 -> m3_21  [color=darkseagreen4, key=1, label=memoryUsed, style=dashed];
m3_19 -> m3_21  [color=darkseagreen4, key=1, label=memoryUsed, style=dashed];
m4_52 -> m4_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_12 -> m4_14  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_12 -> m4_16  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_12 -> m4_18  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_12 -> m4_17  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_12 -> m4_19  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_12 -> m4_20  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_12 -> m4_21  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_12 -> m4_22  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_12 -> m4_23  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m4_3 -> m4_13  [color=darkseagreen4, key=1, label="out string", style=dashed];
m4_5 -> m4_23  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_5 -> m4_9  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_5 -> m4_10  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_6 -> m4_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_29 -> m4_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_29 -> m4_32  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_29 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_29 -> m4_34  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_29 -> m4_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_29 -> m4_36  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m4_29 -> m4_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_29 -> m4_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_29 -> m4_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_29 -> m4_23  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_28 -> m4_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_28 -> m4_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_28 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Queues.JobQueue", style=dashed];
m4_28 -> m4_5  [color=darkseagreen4, key=1, label="QuantConnect.Queues.JobQueue", style=dashed];
m4_28 -> m4_11  [color=darkseagreen4, key=1, label="QuantConnect.Queues.JobQueue", style=dashed];
m4_47 -> m4_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_57 -> m4_35  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper", style=dashed];
m4_57 -> m4_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper", style=dashed];
m4_57 -> m4_54  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersSymbolMapper", style=dashed];
m4_58 -> m4_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_29 -> m6_31  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_29 -> m6_39  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_29 -> m6_47  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_29 -> m6_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_29 -> m6_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_30 -> m6_47  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_30 -> m6_53  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_30 -> m6_55  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_30 -> m6_57  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_35 -> m6_41  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_35 -> m6_43  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_35 -> m6_46  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_35 -> m6_47  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_35 -> m6_49  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_35 -> m6_55  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_49 -> m6_53  [color=darkseagreen4, key=1, label=element, style=dashed];
m6_48 -> m6_54  [color=darkseagreen4, key=1, label=elementCount, style=dashed];
m6_54 -> m6_54  [color=darkseagreen4, key=1, label=elementCount, style=dashed];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_19 -> m6_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_19 -> m6_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_10 -> m6_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_4 -> m8_10  [color=green, key=1, label=executedOrders, style=dashed];
m8_4 -> m8_12  [color=green, key=1, label=executedOrders, style=dashed];
m8_5 -> m8_21  [color=green, key=1, label="lambda expression", style=dashed];
m8_5 -> m8_24  [color=green, key=1, label="lambda expression", style=dashed];
m8_6 -> m8_27  [color=green, key=1, label="lambda expression", style=dashed];
m8_6 -> m8_30  [color=green, key=1, label="lambda expression", style=dashed];
m8_7 -> m8_9  [color=green, key=1, label=order, style=dashed];
m8_7 -> m8_10  [color=green, key=1, label=order, style=dashed];
m8_33 -> m8_25  [color=green, key=1, label="QuantConnect.Securities.MarginCallModel", style=dashed];
m8_33 -> m8_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.MarginCallModel", style=dashed];
m8_33 -> m8_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.MarginCallModel", style=dashed];
m8_33 -> m8_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.MarginCallModel", style=dashed];
m11_58 -> m11_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_55 -> m11_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>", style=dashed];
m11_61 -> m11_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>", style=dashed];
m11_39 -> m11_39  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_129 -> m11_133  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m11_130 -> m11_133  [color=darkseagreen4, key=1, label=clone, style=dashed];
m11_132 -> m11_133  [color=darkseagreen4, key=1, label=clone, style=dashed];
m11_44 -> m11_46  [color=darkseagreen4, key=1, label=success, style=dashed];
m11_45 -> m11_47  [color=darkseagreen4, key=1, label="out QuantConnect.Securities.SecurityHolding", style=dashed];
m11_83 -> m11_88  [color=green, key=1, label=marginCallOrders, style=dashed];
m11_83 -> m11_89  [color=green, key=1, label=marginCallOrders, style=dashed];
m11_86 -> m11_88  [color=darkseagreen4, key=1, label=marginCallOrder, style=dashed];
m11_66 -> m11_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_66 -> m11_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_18 -> m11_21  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m11_18 -> m11_23  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m11_18 -> m11_25  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m11_18 -> m11_27  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m11_18 -> m11_29  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m11_18 -> m11_31  [color=darkseagreen4, key=1, label="QuantConnect.AccountType", style=dashed];
m11_18 -> m11_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageName", style=dashed];
m11_31 -> m11_31  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>", style=dashed];
m11_33 -> m11_37  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_34 -> m11_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[]", style=dashed];
m11_36 -> m11_38  [color=darkseagreen4, key=1, label=asset, style=dashed];
m11_35 -> m11_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_35 -> m11_38  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_35 -> m11_39  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_38 -> m11_38  [color=darkseagreen4, key=1, label=asset, style=dashed];
m11_102 -> m11_124  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Split", style=dashed];
m11_103 -> m11_112  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_103 -> m11_124  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_107 -> m11_112  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m11_108 -> m11_112  [color=darkseagreen4, key=1, label=avgPrice, style=dashed];
m11_113 -> m11_124  [color=darkseagreen4, key=1, label=next, style=dashed];
m11_75 -> m11_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_50 -> m11_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_138 -> m11_81  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_84  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_1  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_50  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_68  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_77  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_131  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m11_138 -> m11_133  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m12_40 -> m12_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_41 -> m12_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_14 -> m12_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_48 -> m12_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_9 -> m12_66  [color=darkseagreen4, key=1, label="QuantConnect.DataNormalizationMode", style=dashed];
m12_70 -> m12_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_70 -> m12_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_70 -> m12_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_70 -> m12_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_70 -> m12_25  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_70 -> m12_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_70 -> m12_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_70 -> m12_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_70 -> m12_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_70 -> m12_41  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_70 -> m12_48  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_70 -> m12_66  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m12_71 -> m12_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_72 -> m12_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_73 -> m12_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_74 -> m12_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_75 -> m12_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_76 -> m12_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m14_1 -> m14_3  [color=green, key=1, label=methodBase, style=dashed];
}
