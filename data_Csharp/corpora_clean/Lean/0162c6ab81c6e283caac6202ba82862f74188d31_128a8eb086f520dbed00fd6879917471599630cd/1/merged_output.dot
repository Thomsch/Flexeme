digraph  {
m1_60 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="270-270"];
m1_116 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="273-273"];
m1_117 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders[order.Id] = order", span="275-275"];
m1_118 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="!_brokerage.CancelOrder(order)", span="277-277"];
m1_115 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Order queued", span="272-272"];
m1_120 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleCancelledOrder(): Unable to cancel order with ID '' + order.Id + ''.'')", span="285-285"];
m1_119 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="280-280"];
m1_121 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="270-270"];
m1_75 [cluster="Unk.Where", file="BrokerageTransactionHandler.cs", label="Entry Unk.Where", span=""];
m1_100 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="390-390"];
m1_139 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="277-277"];
m1_54 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
m1_136 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="335-335"];
m1_74 [cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", span="0-0"];
m1_25 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="335-335"];
m1_142 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", color=green, community=0, file="BrokerageTransactionHandler.cs", label="19: Log.Trace(string.Format(''BrokerageTransactionHandler.HandleAccountChanged(): {0} Cash Delta: {1}'', account.CurrencySymbol, delta))", span="341-341"];
m1_140 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="var delta = _algorithm.Portfolio.CashBook[account.CurrencySymbol].Quantity - account.CashBalance", span="338-338"];
m1_141 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="delta != 0", span="339-339"];
m1_143 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.CashBook[account.CurrencySymbol].Quantity = account.CashBalance", span="345-345"];
m1_144 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleAccountChanged(QuantConnect.Securities.AccountEvent)", span="335-335"];
m1_80 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="188-188"];
m1_23 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="HandleAccountChanged(account)", span="82-82"];
m1_19 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="HandleSecurityHoldingUpdated(holding)", span="76-76"];
m1_22 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="80-83"];
m1_24 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="80-83"];
m1_15 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="HandleOrderEvent(fill)", span="71-71"];
m1_18 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="74-77"];
m1_20 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="74-77"];
m1_14 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="69-72"];
m1_16 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="69-72"];
m1_77 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Entry lambda expression", span="186-186"];
m1_81 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Key <= lowestOrderIdToKeep", span="188-188"];
m1_79 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="186-186"];
m1_78 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="x.Key", span="186-186"];
m1_82 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="188-188"];
m1_56 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m1_26 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="112-112"];
m1_51 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="169-169"];
m1_27 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="!_exitTriggered", span="114-114"];
m1_29 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="!_orderQueue.TryDequeue(out order)", span="119-119"];
m1_30 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="_algorithm.ProcessingOrder = false", span="121-121"];
m1_32 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="_algorithm.ProcessingOrder = true", span="126-126"];
m1_35 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="!_orders.TryAdd(order.Id, order)", span="134-134"];
m1_39 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="HandleNewOrder(order)", span="145-145"];
m1_41 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="HandleUpdatedOrder(order)", span="149-149"];
m1_43 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="HandleCancelledOrder(order)", span="153-153"];
m1_50 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="ProcessSynchronousEvents()", span="166-166"];
m1_52 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="IsActive = false", span="170-170"];
m1_36 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Unable to add order to permanent storage. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="136-136"];
m1_31 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Thread.Sleep(1)", span="122-122"];
m1_28 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Order order", span="118-118"];
m1_33 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="order.Direction == OrderDirection.Hold", span="129-129"];
m1_34 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Encountered OrderDirection.Hold in OrderID: '' + order.Id)", span="131-131"];
m1_37 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="order.Status", span="142-142"];
m1_49 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.Run(): Invalid order status found in order queue. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="162-162"];
m1_38 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.New", span="144-144"];
m1_40 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Update", span="148-148"];
m1_42 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Canceled", span="152-152"];
m1_44 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.None", span="157-157"];
m1_48 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Submitted", span="161-161"];
m1_45 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Invalid", span="158-158"];
m1_47 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.Filled", span="160-160"];
m1_46 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="OrderStatus.PartiallyFilled", span="159-159"];
m1_53 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="112-112"];
m1_83 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="198-198"];
m1_84 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="_exitTriggered = true", span="200-200"];
m1_85 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="198-198"];
m1_61 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="176-176"];
m1_63 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="!_algorithm.LiveMode", span="181-181"];
m1_66 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orders.Count < maxOrdersToKeep + 1", span="184-184"];
m1_68 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="int max = _orders.Max(x => x.Key)", span="186-186"];
m1_70 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orders.Where(x => x.Key <= lowestOrderIdToKeep)", span="188-188"];
m1_72 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="_orders.TryRemove(item.Key, out value)", span="191-191"];
m1_64 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="return;", span="181-181"];
m1_65 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="int maxOrdersToKeep = 10000", span="183-183"];
m1_67 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="return;", span="184-184"];
m1_69 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="int lowestOrderIdToKeep = max - maxOrdersToKeep", span="187-187"];
m1_71 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Order value", span="190-190"];
m1_73 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="176-176"];
m1_59 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="248-248"];
m1_107 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="251-251"];
m1_108 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders[order.Id] = order", span="253-253"];
m1_109 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="!_brokerage.UpdateOrder(order)", span="254-254"];
m1_106 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Order queued", span="250-250"];
m1_111 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleUpdatedOrder(): Unable to update order with ID '' + order.Id + ''.'')", span="262-262"];
m1_110 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="257-257"];
m1_112 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="248-248"];
m1_57 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m1_76 [cluster="Unk.TryRemove", file="BrokerageTransactionHandler.cs", label="Entry Unk.TryRemove", span=""];
m1_105 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="67-67"];
m1_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BrokerageTransactionHandler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_102 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255"];
m1_113 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_58 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="207-207"];
m1_89 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.Value))", span="215-215"];
m1_86 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_orders.TryAdd(order.Id, order)", span="209-209"];
m1_87 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="!_algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="212-212"];
m1_91 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="!_brokerage.CanProcessOrder(order)", span="220-220"];
m1_93 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Brokerage {1} is unable to process order for {2} - {3}.'', order.Id, _brokerage.Name, order.SecurityType, order.Symbol))", span="224-224"];
m1_95 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="_brokerage.PlaceOrder(order)", span="229-229"];
m1_88 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="214-214"];
m1_90 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="return;", span="216-216"];
m1_98 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleNewOrder(): Unable to add new order, order not processed.'')", span="240-240"];
m1_92 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="223-223"];
m1_94 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="return;", span="225-225"];
m1_96 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Submitted", span="231-231"];
m1_97 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="order.Status = OrderStatus.Invalid", span="235-235"];
m1_99 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="207-207"];
m1_137 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="471-471"];
m1_55 [cluster="System.Threading.Thread.Sleep(int)", file="BrokerageTransactionHandler.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_138 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213"];
m1_104 [cluster="string.Format(string, params object[])", file="BrokerageTransactionHandler.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m1_152 [cluster="string.Format(string, object, object, object)", file="BrokerageTransactionHandler.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m1_103 [cluster="QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="88-88"];
m1_101 [cluster="string.Format(string, object, object)", file="BrokerageTransactionHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_153 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="365-365"];
m1_122 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="81-81"];
m1_21 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", span="352-352"];
m1_149 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", color=green, community=0, file="BrokerageTransactionHandler.cs", label="0: Log.Trace(string.Format(''BrokerageTransactionHandler.HandleSecurityHoldingUpdated(): {0} DeltaQuantity: {1} DeltaAvgPrice: {2}'', holding.Symbol, deltaQuantity, deltaAvgPrice))", span="360-360"];
m1_146 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="BrokerageTransactionHandler.cs", label="var deltaQuantity = securityHolding.Quantity - holding.Quantity", span="356-356"];
m1_147 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="BrokerageTransactionHandler.cs", label="var deltaAvgPrice = securityHolding.AveragePrice - holding.AveragePrice", span="357-357"];
m1_148 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="BrokerageTransactionHandler.cs", label="deltaQuantity != 0 || deltaAvgPrice != 0", span="358-358"];
m1_150 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="BrokerageTransactionHandler.cs", label="securityHolding.SetHoldings(holding.AveragePrice, holding.Quantity)", span="363-363"];
m1_145 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="BrokerageTransactionHandler.cs", label="var securityHolding = _algorithm.Portfolio[holding.Symbol]", span="355-355"];
m1_151 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleSecurityHoldingUpdated(QuantConnect.Securities.SecurityEvent)", span="352-352"];
m1_62 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m1_17 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="289-289"];
m1_123 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="var order = _algorithm.Transactions.GetOrderById(fill.OrderId)", span="292-292"];
m1_129 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Portfolio.ProcessFill(fill)", span="310-310"];
m1_132 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.OnOrderEvent(fill)", span="321-321"];
m1_134 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="325-325"];
m1_124 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="order == null", span="293-293"];
m1_127 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="order.Status = fill.Status", span="300-300"];
m1_128 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="308-308"];
m1_130 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="fill.Status != OrderStatus.None", span="314-314"];
m1_131 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Engine.ResultHandler.OrderEvent(fill)", span="317-317"];
m1_133 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label=Exception, span="323-323"];
m1_125 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvnt(): Unable to locate Order with id '' + fill.OrderId)", span="295-295"];
m1_126 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="return;", span="296-296"];
m1_135 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="289-289"];
m1_114 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="74-74"];
m1_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="61-61"];
m1_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                HandleAccountChanged(account);\r\n            }", span="80-83"];
m1_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_brokerage.SecurityHoldingUpdated += (sender, holding) =>\r\n            {\r\n                HandleSecurityHoldingUpdated(holding);\r\n            }", span="74-77"];
m1_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="IsActive = true", span="85-85"];
m1_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_brokerage = brokerage", span="68-68"];
m1_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_brokerage.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                HandleOrderEvent(fill);\r\n            }", span="69-72"];
m1_8 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_algorithm = algorithm", span="87-87"];
m1_9 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_orders = algorithm.Transactions.Orders", span="90-90"];
m1_10 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_orderEvents = algorithm.Transactions.OrderEvents", span="91-91"];
m1_11 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="_orderQueue = algorithm.Transactions.OrderQueue", span="92-92"];
m1_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="brokerage == null", span="63-63"];
m1_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="throw new ArgumentNullException(''brokerage'');", span="65-65"];
m1_12 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="61-61"];
m1_154 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span=""];
m1_155 [file="BrokerageTransactionHandler.cs", label=lowestOrderIdToKeep, span=""];
m2_91 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Charting.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m2_107 [cluster="Unk.Where", file="Charting.cs", label="Entry Unk.Where", span=""];
m2_21 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="137-137"];
m2_22 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="Charting.cs", label="factory = new BacktestingBrokerageFactory()", span="139-139"];
m2_24 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="Charting.cs", label="return new BacktestingBrokerage(uninitializedAlgorithm, optionMarketSimulation);", span="141-141"];
m2_23 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="Charting.cs", label="var optionMarketSimulation = new BasicOptionAssignmentSimulation()", span="140-140"];
m2_25 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="137-137"];
m2_4 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="118-118"];
m2_5 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Charting.cs", label="string error", span="120-120"];
m2_7 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Charting.cs", label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromSeconds(60), names => names.SingleOrDefault())", span="124-124"];
m2_8 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Charting.cs", label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="125-125"];
m2_6 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Charting.cs", label="IAlgorithm algorithm", span="121-121"];
m2_9 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Charting.cs", label="!complete", span="126-126"];
m2_10 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Charting.cs", label="throw new Exception(error + '' Try re-building algorithm.'');", span="126-126"];
m2_11 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Charting.cs", label="return algorithm;", span="128-128"];
m2_12 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="118-118"];
m2_3 [cluster="System.Collections.Generic.List<T>.List()", file="Charting.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_65 [cluster="object.GetType()", file="Charting.cs", label="Entry object.GetType()", span="0-0"];
m2_88 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="Charting.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="521-521"];
m2_72 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="Charting.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="300-300"];
m2_115 [cluster="QuantConnect.Symbol.IsCanonical()", file="Charting.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="164-164"];
m2_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="Charting.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m2_124 [cluster="lambda expression", file="Charting.cs", label="Entry lambda expression", span="277-277"];
m2_18 [cluster="lambda expression", file="Charting.cs", label="names.SingleOrDefault()", span="124-124"];
m2_17 [cluster="lambda expression", file="Charting.cs", label="Entry lambda expression", span="124-124"];
m2_19 [cluster="lambda expression", file="Charting.cs", label="Exit lambda expression", span="124-124"];
m2_79 [cluster="lambda expression", file="Charting.cs", label="algorithm.SetParameters(job.Parameters)", span="184-184"];
m2_80 [cluster="lambda expression", file="Charting.cs", label="algorithm.SetLiveMode(false)", span="186-186"];
m2_81 [cluster="lambda expression", file="Charting.cs", label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="188-188"];
m2_82 [cluster="lambda expression", file="Charting.cs", label="algorithm.Initialize()", span="190-190"];
m2_78 [cluster="lambda expression", file="Charting.cs", label="Entry lambda expression", span="179-197"];
m2_83 [cluster="lambda expression", file="Charting.cs", label=Exception, span="192-192"];
m2_86 [cluster="lambda expression", file="Charting.cs", label="Exit lambda expression", span="179-197"];
m2_84 [cluster="lambda expression", file="Charting.cs", label="Log.Error(err)", span="194-194"];
m2_85 [cluster="lambda expression", file="Charting.cs", label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err)", span="195-195"];
m2_119 [cluster="lambda expression", file="Charting.cs", label="return controls.TickLimit;", span="267-267"];
m2_121 [cluster="lambda expression", file="Charting.cs", label="return controls.SecondLimit;", span="269-269"];
m2_122 [cluster="lambda expression", file="Charting.cs", label="return controls.MinuteLimit;", span="271-271"];
m2_112 [cluster="lambda expression", file="Charting.cs", label="Entry lambda expression", span="259-259"];
m2_116 [cluster="lambda expression", file="Charting.cs", label="Entry lambda expression", span="260-273"];
m2_113 [cluster="lambda expression", file="Charting.cs", label="x.Symbol.IsCanonical()", span="259-259"];
m2_114 [cluster="lambda expression", file="Charting.cs", label="Exit lambda expression", span="259-259"];
m2_117 [cluster="lambda expression", file="Charting.cs", label="x.Resolution", span="264-264"];
m2_118 [cluster="lambda expression", file="Charting.cs", label="Resolution.Tick", span="266-266"];
m2_120 [cluster="lambda expression", file="Charting.cs", label="Resolution.Second", span="268-268"];
m2_123 [cluster="lambda expression", file="Charting.cs", label="Exit lambda expression", span="260-273"];
m2_125 [cluster="lambda expression", file="Charting.cs", label="!x.Symbol.IsCanonical()", span="277-277"];
m2_126 [cluster="lambda expression", file="Charting.cs", label="Exit lambda expression", span="277-277"];
m2_15 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Charting.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="348-348"];
m2_70 [cluster="System.TimeSpan.FromMinutes(double)", file="Charting.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m2_73 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", span="256-256"];
m2_92 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="var derivativeSubscriptions = subscriptionManager.Subscriptions\r\n                                        .Where( x => x.Symbol.IsCanonical())\r\n                                        .Select( x => \r\n                                        {\r\n                                            // since number of subscriptions is dynamic and is not known in advance, \r\n                                            // we assume maximum use of available capacity by the enduser\r\n                                            switch (x.Resolution)\r\n                                            {\r\n                                                case Resolution.Tick:\r\n                                                    return controls.TickLimit;\r\n                                                case Resolution.Second:\r\n                                                    return controls.SecondLimit;\r\n                                                default:\r\n                                                    return controls.MinuteLimit;\r\n                                            }\r\n                                        })\r\n                                        .Sum()", span="258-274"];
m2_93 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="var otherSubscriptions = subscriptionManager.Subscriptions\r\n                                        .Where(x => !x.Symbol.IsCanonical())\r\n                                        .Count()", span="276-278"];
m2_96 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="var jobDays = (finish - start).TotalDays", span="283-283"];
m2_94 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="var subscriptionCount = otherSubscriptions + derivativeSubscriptions", span="280-280"];
m2_95 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="double maxRunTime = 0", span="282-282"];
m2_97 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="maxRunTime = 10 * subscriptionCount * jobDays", span="285-285"];
m2_102 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="Log.Trace(''BacktestingSetupHandler.GetMaxRunTime(): Job Days: '' + jobDays + '' Max Runtime: '' + Math.Round(maxRunTime / 60) + '' min'')", span="299-299"];
m2_98 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="(maxRunTime / 3600) > 12", span="288-288"];
m2_100 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="maxRunTime < 60", span="293-293"];
m2_105 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="return TimeSpan.FromSeconds(maxRunTime);", span="307-307"];
m2_99 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="maxRunTime = 3600 * 12", span="291-291"];
m2_101 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="maxRunTime = 60", span="296-296"];
m2_103 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="OS.IsWindows", span="302-302"];
m2_104 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="maxRunTime = 24 * 60 * 60", span="304-304"];
m2_106 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Packets.Controls)", span="256-256"];
m2_69 [cluster="QuantConnect.Isolator.Isolator()", file="Charting.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m2_16 [cluster="System.Exception.Exception(string)", file="Charting.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m2_87 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="Charting.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="314-314"];
m2_90 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="Charting.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="294-294"];
m2_71 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Charting.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145"];
m2_75 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="Charting.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="538-538"];
m2_64 [cluster="System.ArgumentException.ArgumentException(string)", file="Charting.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m2_110 [cluster="Unk.Count", file="Charting.cs", label="Entry Unk.Count", span=""];
m2_28 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="Charting.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="70-70"];
m2_0 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="107-107"];
m2_1 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="Charting.cs", label="Errors = new List<string>()", span="109-109"];
m2_2 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="107-107"];
m2_127 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", span="314-314"];
m2_128 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", span="314-314"];
m2_29 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="154-154"];
m2_30 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="var job = baseJob as BacktestNodePacket", span="156-156"];
m2_32 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="throw new ArgumentException(''Expected BacktestNodePacket but received '' + baseJob.GetType().Name);", span="159-159"];
m2_34 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="algorithm == null", span="164-164"];
m2_42 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromMinutes(5), () =>\r\n            {\r\n                try\r\n                {\r\n                    //Set our parameters\r\n                    algorithm.SetParameters(job.Parameters);\r\n                    //Algorithm is backtesting, not live:\r\n                    algorithm.SetLiveMode(false);\r\n                    //Set the source impl for the event scheduling\r\n                    algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n                    //Initialise the algorithm, get the required data:\r\n                    algorithm.Initialize();\r\n                }\r\n                catch (Exception err)\r\n                {\r\n                    Log.Error(err);\r\n                    Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err);\r\n                }\r\n            }, controls.RamAllocation)", span="179-197"];
m2_45 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="job.PeriodStart = algorithm.StartDate", span="203-203"];
m2_46 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=red, community=0, file="Charting.cs", label="1: job.PeriodFinish = algorithm.EndDate", span="204-204"];
m2_47 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="algorithm.PostInitialize()", span="206-206"];
m2_48 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="_maxRuntime = GetMaximumRuntime(job.PeriodStart, job.PeriodFinish, algorithm.SubscriptionManager, baseJob.Controls)", span="209-209"];
m2_51 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="_startingCaptial = algorithm.Portfolio.Cash", span="218-218"];
m2_56 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="algorithm.SetMaximumOrders(_maxOrders)", span="232-232"];
m2_31 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="job == null", span="157-157"];
m2_33 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="Log.Trace(string.Format(''BacktestingSetupHandler.Setup(): Setting up job: Plan: {0}, UID: {1}, PID: {2}, Version: {3}, Source: {4}'', job.UserPlan, job.UserId, job.ProjectId, job.Version, job.RequestSource))", span="162-162"];
m2_37 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="job.PeriodStart == default(DateTime)", span="171-171"];
m2_40 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="var controls = job.Controls", span="177-177"];
m2_49 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="job.Language == Language.Python", span="212-212"];
m2_52 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="job.UserPlan == UserPlan.Free", span="221-221"];
m2_57 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="_startingDate = job.PeriodStart", span="235-235"];
m2_58 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="Log.Trace(''SetUp Backtesting: User: '' + job.UserId + '' ProjectId: '' + job.ProjectId + '' AlgoId: '' + job.AlgorithmId)", span="238-238"];
m2_59 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="Log.Trace(''Dates: Start: '' + job.PeriodStart.ToShortDateString() + '' End: '' + job.PeriodFinish.ToShortDateString() + '' Cash: '' + _startingCaptial.ToString(''C''))", span="239-239"];
m2_35 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="Errors.Add(''Could not create instance of algorithm'')", span="166-166"];
m2_36 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="return false;", span="167-167"];
m2_38 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="Errors.Add(''Algorithm start date was never set'')", span="173-173"];
m2_39 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="return false;", span="174-174"];
m2_41 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="var isolator = new Isolator()", span="178-178"];
m2_43 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="!initializeComplete", span="200-200"];
m2_62 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="return initializeComplete;", span="245-245"];
m2_44 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="return false;", span="200-200"];
m2_50 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="_maxRuntime = _maxRuntime.Add(TimeSpan.FromSeconds(_maxRuntime.TotalSeconds * 9))", span="214-214"];
m2_53 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="_maxOrders = 10000", span="223-223"];
m2_54 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="_maxOrders = int.MaxValue", span="227-227"];
m2_55 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="_maxRuntime += _maxRuntime", span="228-228"];
m2_60 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="Errors.Count > 0", span="241-241"];
m2_61 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="initializeComplete = false", span="243-243"];
m2_63 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Charting.cs", label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="154-154"];
m2_26 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", file="Charting.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", span="69-69"];
m2_109 [cluster="Unk.Sum", file="Charting.cs", label="Entry Unk.Sum", span=""];
m2_66 [cluster="string.Format(string, params object[])", file="Charting.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m2_111 [cluster="System.Math.Round(double)", file="Charting.cs", label="Entry System.Math.Round(double)", span="0-0"];
m2_68 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Charting.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_76 [cluster="System.DateTime.ToShortDateString()", file="Charting.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m2_13 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Charting.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="82-82"];
m2_89 [cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="Charting.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65"];
m2_67 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Charting.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m2_74 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="Charting.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m2_27 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", file="Charting.cs", label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", span="34-34"];
m2_108 [cluster="Unk.Select", file="Charting.cs", label="Entry Unk.Select", span=""];
m2_14 [cluster="System.TimeSpan.FromSeconds(double)", file="Charting.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m2_77 [cluster="decimal.ToString(string)", file="Charting.cs", label="Entry decimal.ToString(string)", span="0-0"];
m2_129 [file="Charting.cs", label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", span=""];
m2_130 [file="Charting.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m2_131 [file="Charting.cs", label=job, span=""];
m2_132 [file="Charting.cs", label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span=""];
m2_133 [file="Charting.cs", label="QuantConnect.Packets.Controls", span=""];
m5_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.ZipEntryNameSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.ZipEntryNameSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="45-45"];
m5_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionFactory.TextSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionFactory.TextSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="61-61"];
m5_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", span="39-39"];
m5_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", span="39-39"];
m5_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="FileFormat.ZipEntryName", span="65-65"];
m5_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="55-55"];
m5_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="source.Format", span="57-57"];
m5_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="return new TextSubscriptionFactory(config, date, isLiveMode);", span="60-60"];
m5_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="return new CollectionSubscriptionFactory(config, date, isLiveMode);", span="63-63"];
m5_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="return new ZipEntryNameSubscriptionFactory(config, date, isLiveMode);", span="66-66"];
m5_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="throw new NotImplementedException(''SubscriptionFactory.ForSource('' + source + '') has not been implemented yet.'');", span="69-69"];
m5_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="FileFormat.Csv", span="59-59"];
m5_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="FileFormat.Collection", span="62-62"];
m5_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="55-55"];
m5_15 [cluster="System.NotImplementedException.NotImplementedException(string)", file="Engine.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m5_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionFactory.CollectionSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionFactory.CollectionSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="41-41"];
m8_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
m8_35 [cluster="System.Collections.Generic.List<T>.List()", file="LiveTradingResultHandler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_37 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58"];
m8_20 [cluster="Unk.ToArray", file="LiveTradingResultHandler.cs", label="Entry Unk.ToArray", span=""];
m8_43 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="Entry lambda expression", span="64-64"];
m8_32 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="TimeSlice.Create(\r\n                t.Time,\r\n                TimeZones.Utc,\r\n                new CashBook(),\r\n                new List<DataFeedPacket> {new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() {t})},\r\n                new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>()))", span="57-62"];
m8_27 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="new Tick(refTime.AddSeconds(i), Symbols.EURUSD, 1.3465m, 1.34652m)", span="54-54"];
m8_26 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="Entry lambda expression", span="54-54"];
m8_31 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="Entry lambda expression", span="57-62"];
m8_40 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="Entry lambda expression", span="64-64"];
m8_28 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="Exit lambda expression", span="54-54"];
m8_33 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="Exit lambda expression", span="57-62"];
m8_41 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="ts.Slice.Ticks.Values.SelectMany(x => x)", span="64-64"];
m8_42 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="Exit lambda expression", span="64-64"];
m8_44 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label=x, span="64-64"];
m8_45 [cluster="lambda expression", file="LiveTradingResultHandler.cs", label="Exit lambda expression", span="64-64"];
m8_34 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="49-49"];
m8_25 [cluster="Unk.IsTrue", file="LiveTradingResultHandler.cs", label="Entry Unk.IsTrue", span=""];
m8_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="113-113"];
m8_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="LiveTradingResultHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m8_15 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="73-73"];
m8_23 [cluster="Unk.AreEqual", file="LiveTradingResultHandler.cs", label="Entry Unk.AreEqual", span=""];
m8_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="LiveTradingResultHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m8_13 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", span="156-156"];
m8_38 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="LiveTradingResultHandler.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m8_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", span="32-32"];
m8_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="var subscriptionDataConfig = new SubscriptionDataConfig(\r\n                typeof(Tick), \r\n                Symbols.EURUSD, \r\n                Resolution.Tick, \r\n                TimeZones.Utc, \r\n                TimeZones.Utc, \r\n                true, \r\n                true, \r\n                false)", span="34-42"];
m8_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="var security = new Security(\r\n                SecurityExchangeHours.AlwaysOpen(TimeZones.Utc), \r\n                subscriptionDataConfig, \r\n                new Cash(CashBook.AccountCurrency, 0, 1m), \r\n                SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="44-48"];
m8_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="IEnumerable<TimeSlice> timeSlices = rawTicks.Select(t => TimeSlice.Create(\r\n                t.Time,\r\n                TimeZones.Utc,\r\n                new CashBook(),\r\n                new List<DataFeedPacket> {new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() {t})},\r\n                new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>())))", span="57-62"];
m8_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="DateTime refTime = DateTime.UtcNow", span="50-50"];
m8_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="Tick[] rawTicks = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new Tick(refTime.AddSeconds(i), Symbols.EURUSD, 1.3465m, 1.34652m))\r\n                .ToArray()", span="52-55"];
m8_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="Assert.AreEqual(rawTicks.Length, timeSliceTicks.Length)", span="66-66"];
m8_9 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="i < rawTicks.Length", span="67-67"];
m8_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="Assert.IsTrue(Compare(rawTicks[i], timeSliceTicks[i]))", span="69-69"];
m8_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="Tick[] timeSliceTicks = timeSlices.SelectMany(ts => ts.Slice.Ticks.Values.SelectMany(x => x)).ToArray()", span="64-64"];
m8_8 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="int i = 0", span="67-67"];
m8_11 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="i++", span="67-67"];
m8_12 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", span="32-32"];
m8_14 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="301-301"];
m8_18 [cluster="System.Linq.Enumerable.Range(int, int)", file="LiveTradingResultHandler.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m8_30 [cluster="System.DateTime.AddSeconds(double)", file="LiveTradingResultHandler.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m8_29 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="143-143"];
m8_17 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="74-74"];
m8_16 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m8_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", file="LiveTradingResultHandler.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", span="73-73"];
m8_46 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", file="LiveTradingResultHandler.cs", label="return expected.Time == actual.Time\r\n                   && expected.BidPrice == actual.BidPrice\r\n                   && expected.AskPrice == actual.AskPrice\r\n                   && expected.Quantity == actual.Quantity;", span="75-78"];
m8_47 [cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", file="LiveTradingResultHandler.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", span="73-73"];
m8_19 [cluster="Unk.Select", file="LiveTradingResultHandler.cs", label="Entry Unk.Select", span=""];
m8_48 [file="LiveTradingResultHandler.cs", label="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests", span=""];
m8_49 [file="LiveTradingResultHandler.cs", label=refTime, span=""];
m8_50 [file="LiveTradingResultHandler.cs", label=subscriptionDataConfig, span=""];
m8_51 [file="LiveTradingResultHandler.cs", label=security, span=""];
m9_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (int) quantity);", span="174-174"];
m9_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal)", span="172-172"];
m9_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", span="185-185"];
m9_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var error = PreOrderChecks(symbol, quantity, OrderType.Market)", span="201-201"];
m9_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return error;", span="204-204"];
m9_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="order.Price = Securities[symbol].Price", span="210-210"];
m9_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var orderId = Transactions.AddOrder(order)", span="213-213"];
m9_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="!Transactions.Orders.ContainsKey(orderId) ||\r\n                       (Transactions.Orders[orderId].Status != OrderStatus.Filled &&\r\n                        Transactions.Orders[orderId].Status != OrderStatus.Invalid &&\r\n                        Transactions.Orders[orderId].Status != OrderStatus.Canceled) || _processingOrder", span="221-224"];
m9_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return orderId;", span="230-230"];
m9_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", span="305-305"];
m9_46 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="57-57"];
m9_48 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m9_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="187-187"];
m9_49 [cluster="System.Threading.Thread.Sleep(int)", file="QCAlgorithm.Trading.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m9_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", span="198-198"];
m9_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="error < 0", span="202-202"];
m9_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="var order = new MarketOrder(symbol, quantity, Time, tag, Securities[symbol].Type)", span="207-207"];
m9_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="!asynchronous", span="217-217"];
m9_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Thread.Sleep(1)", span="226-226"];
m9_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(string, int, bool, string)", span="198-198"];
m9_47 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.Order)", span="188-188"];
m9_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", span="241-241"];
m9_167 [cluster="System.Math.Abs(decimal)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m9_102 [cluster="string.Format(string, object)", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, object)", span="0-0"];
m9_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", span="424-424"];
m9_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="426-426"];
m9_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, float, bool, string)", span="424-424"];
m9_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", span="452-452"];
m9_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="!Portfolio.ContainsKey(symbol)", span="455-455"];
m9_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Error(symbol.ToUpper() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="457-457"];
m9_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Portfolio.Keys", span="468-468"];
m9_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="holdingSymbol != symbol && Portfolio[holdingSymbol].AbsoluteQuantity > 0", span="470-470"];
m9_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Order(holdingSymbol, -Portfolio[holdingSymbol].Quantity)", span="473-473"];
m9_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var security = Securities[symbol]", span="478-478"];
m9_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var marginRemaining = Math.Abs(percentage)*security.MarginModel.GetMarginRemaining(Portfolio, security, direction)", span="484-484"];
m9_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var marketOrder = new MarketOrder(symbol, quantity, Time, type: security.Type) { Price = security.Price }", span="494-494"];
m9_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="MarketOrder(symbol, quantity, false, tag)", span="529-529"];
m9_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="percentage > 1", span="462-462"];
m9_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return;", span="458-458"];
m9_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label=liquidateExistingHoldings, span="466-466"];
m9_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var direction = percentage > 0 ? OrderDirection.Buy : OrderDirection.Sell", span="481-481"];
m9_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var marginRequiredForSingleShare = security.MarginModel.GetInitialMarginRequiredForOrder(security, marketOrder)", span="495-495"];
m9_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="security.Price == 0", span="498-498"];
m9_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="marginRequired = security.MarginModel.GetInitialMarginRequiredForOrder(security, marketOrder)", span="511-511"];
m9_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="percentage = 1", span="462-462"];
m9_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="percentage = -1", span="463-463"];
m9_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="int quantity = 1", span="493-493"];
m9_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var marginRequiredLowerThreshold = marginRemaining - marginRequiredForSingleShare", span="501-501"];
m9_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="marginRequired > marginRemaining || marginRequired < marginRequiredLowerThreshold", span="506-506"];
m9_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="quantity = (int) Math.Truncate(marginRemaining/marginPerShare)", span="509-509"];
m9_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="marketOrder.Quantity = quantity", span="510-510"];
m9_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="direction == OrderDirection.Sell", span="524-524"];
m9_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="quantity *= -1", span="526-526"];
m9_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="percentage < -1", span="463-463"];
m9_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var marginRequired = marginRequiredForSingleShare", span="505-505"];
m9_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return;", span="498-498"];
m9_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="++loops > 10", span="514-514"];
m9_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="var marginPerShare = marginRequired/quantity", span="508-508"];
m9_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="quantity == 0", span="518-518"];
m9_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="int loops = 0", span="504-504"];
m9_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="return;", span="520-520"];
m9_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, decimal, bool, string)", span="452-452"];
m9_58 [cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, QuantConnect.SecurityIdentifier, string)", span="318-318"];
m9_59 [cluster="System.NotImplementedException.NotImplementedException(string)", file="QCAlgorithm.Trading.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m9_62 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="_symbols.Add(symbol)", span="152-152"];
m9_63 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, symbol))", span="154-154"];
m9_60 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="182-182"];
m9_61 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", span="150-150"];
m9_64 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="return true;", span="155-155"];
m9_65 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="63-63"];
m9_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(string, int, decimal, decimal, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(string, int, decimal, decimal, string)", span="286-286"];
m9_11 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UserDefinedUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.TimeSpan, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>)", file="QCAlgorithm.Trading.cs", label="_interval = interval", span="88-88"];
m9_24 [cluster="Unk.Select", file="QCAlgorithm.Trading.cs", label="Entry Unk.Select", span=""];
m9_25 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="95-95"];
m9_26 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Symbol.Create(sym, Configuration.SecurityType, Configuration.Market)", span="95-95"];
m9_7 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="73-73"];
m9_27 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="95-95"];
m9_28 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="46-46"];
m9_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="_quit = true", span="352-352"];
m9_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", span="97-97"];
m9_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, float)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(string, float)", span="108-108"];
m9_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, float)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity);", span="110-110"];
m9_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, float)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(string, float)", span="108-108"];
m9_115 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_67 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m9_70 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", span="165-165"];
m9_71 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="_symbols.Remove(symbol)", span="167-167"];
m9_68 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", span="0-0"];
m9_69 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="215-215"];
m9_72 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, symbol))", span="169-169"];
m9_84 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", color=green, community=0, file="QCAlgorithm.Trading.cs", label="24: var first = true", span="196-196"];
m9_76 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m9_83 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Trading.cs", label="var localEndTime = endTimeUtc.ConvertFromUtc(exchangeHours.TimeZone)", span="194-194"];
m9_85 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Trading.cs", label="LinqExtensions.Range(localStartTime, localEndTime, dt => dt + Interval)", span="197-197"];
m9_77 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="181-181"];
m9_78 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="QCAlgorithm.Trading.cs", label="return _selector(utcTime);", span="183-183"];
m9_79 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="181-181"];
m9_81 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Trading.cs", label="var exchangeHours = marketHoursDatabase.GetExchangeHours(Configuration)", span="192-192"];
m9_87 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Trading.cs", label="yield return dateTime;", span="201-201"];
m9_90 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Trading.cs", label="yield return dateTime;", span="206-206"];
m9_92 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig, DateTimeZone)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig, DateTimeZone)", span="77-77"];
m9_93 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", span="234-234"];
m9_74 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="return false;", span="172-172"];
m9_82 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Trading.cs", label="var localStartTime = startTimeUtc.ConvertFromUtc(exchangeHours.TimeZone)", span="193-193"];
m9_86 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Trading.cs", label=first, span="199-199"];
m9_80 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", span="190-190"];
m9_89 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Trading.cs", label="exchangeHours.IsOpen(dateTime, dateTime + Interval, Configuration.ExtendedMarketHours)", span="204-204"];
m9_88 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Trading.cs", label="first = false", span="202-202"];
m9_91 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime, System.DateTime, QuantConnect.Securities.MarketHoursDatabase)", span="190-190"];
m9_96 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="dt + Interval", span="197-197"];
m9_95 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Entry lambda expression", span="197-197"];
m9_75 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", span="165-165"];
m9_97 [cluster="lambda expression", file="QCAlgorithm.Trading.cs", label="Exit lambda expression", span="197-197"];
m9_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(string, int)", span="75-75"];
m9_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, int)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity);", span="77-77"];
m9_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(string, int)", span="75-75"];
m9_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", span="185-185"];
m9_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(string, double)", span="86-86"];
m9_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity);", span="88-88"];
m9_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(string, float)", span="142-142"];
m9_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(string, int, decimal, string)", span="241-241"];
m9_101 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="215-215"];
m9_51 [cluster="string.ToLower()", file="QCAlgorithm.Trading.cs", label="Entry string.ToLower()", span="0-0"];
m9_54 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", span="352-352"];
m9_55 [cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="301-301"];
m9_52 [cluster="string.Format(string, object, object)", file="QCAlgorithm.Trading.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m9_53 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="363-363"];
m9_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", span="97-97"];
m9_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(string, decimal)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity);", span="99-99"];
m9_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity);", span="121-121"];
m9_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", span="119-119"];
m9_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(string, int)", span="119-119"];
m9_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity);", span="132-132"];
m9_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", span="130-130"];
m9_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(string, double)", span="130-130"];
m9_21 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="QCAlgorithm.Trading.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="474-474"];
m9_22 [cluster="System.Func<T, TResult>.Invoke(T)", file="QCAlgorithm.Trading.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m9_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType)", span="567-567"];
m9_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity);", span="569-569"];
m9_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType)", span="567-567"];
m9_98 [cluster="string.IsNullOrEmpty(string)", file="QCAlgorithm.Trading.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_100 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(string)", span="138-138"];
m9_99 [cluster="string.ToUpper()", file="QCAlgorithm.Trading.cs", label="Entry string.ToUpper()", span="0-0"];
m9_169 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m9_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", span="411-411"];
m9_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="413-413"];
m9_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", span="411-411"];
m9_73 [cluster="QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)", file="QCAlgorithm.Trading.cs", label="return true;", span="170-170"];
m9_57 [cluster="QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", span="385-385"];
m9_166 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="124-124"];
m9_6 [cluster="Unk.ToHashSet", file="QCAlgorithm.Trading.cs", label="Entry Unk.ToHashSet", span=""];
m9_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", span=""];
m9_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="Securities.Keys", span="371-371"];
m9_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="!Portfolio[symbol].HoldStock || (symbol != symbolToLiquidate && symbolToLiquidate != '''')", span="374-374"];
m9_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="Portfolio[symbol].IsLong", span="377-377"];
m9_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="quantity = -Portfolio[symbol].Quantity", span="379-379"];
m9_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="quantity = Math.Abs(Portfolio[symbol].Quantity)", span="383-383"];
m9_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="orderIdList.Add(Order(symbol, quantity))", span="386-386"];
m9_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="symbolToLiquidate = symbolToLiquidate.ToUpper()", span="369-369"];
m9_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="return orderIdList;", span="388-388"];
m9_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="var quantity = 0", span="376-376"];
m9_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>", span=""];
m9_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", span="366-366"];
m9_168 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="63-63"];
m9_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", span="543-543"];
m9_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, quantity, asynchronous, tag);", span="545-545"];
m9_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, int, QuantConnect.Orders.OrderType, bool, string)", span="543-543"];
m9_170 [cluster="System.Math.Truncate(decimal)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Truncate(decimal)", span="0-0"];
m9_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="395-395"];
m9_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="!_locked", span="397-397"];
m9_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="_maxOrders = max", span="399-399"];
m9_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="395-395"];
m9_117 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.Trading.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", span="555-555"];
m9_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="return Order(symbol, (int)quantity);", span="557-557"];
m9_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(string, decimal, QuantConnect.Orders.OrderType)", span="555-555"];
m9_116 [cluster="System.Math.Abs(int)", file="QCAlgorithm.Trading.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m9_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", span="438-438"];
m9_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="440-440"];
m9_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", file="QCAlgorithm.Trading.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, int, bool, string)", span="438-438"];
m9_180 [file="QCAlgorithm.Trading.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m13_36 [cluster="System.Math.Truncate(decimal)", file="VersionHelperTests.cs", label="Entry System.Math.Truncate(decimal)", span="0-0"];
m13_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="VersionHelperTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m13_35 [cluster="System.Math.Abs(decimal)", file="VersionHelperTests.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m13_19 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="VersionHelperTests.cs", label="Entry QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", span="45-45"];
m13_20 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="VersionHelperTests.cs", label="16: var quantity = Math.Truncate(Portfolio.Cash / Math.Abs(e.Value + 1))", span="47-47"];
m13_21 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="VersionHelperTests.cs", label="29: !Portfolio.Invested", span="48-48"];
m13_22 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="VersionHelperTests.cs", label="29: Order(''BTCUSD'', quantity)", span="50-50"];
m13_23 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="VersionHelperTests.cs", label="16: Portfolio[''BTCUSD''].Quantity == quantity", span="52-52"];
m13_25 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="VersionHelperTests.cs", label="29: Portfolio[''BTCUSD''].Quantity == quantity + 0.1m", span="56-56"];
m13_27 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="VersionHelperTests.cs", label="16: Portfolio[''BTCUSD''].Quantity == quantity + 0.11m", span="60-60"];
m13_29 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="VersionHelperTests.cs", label="29: Portfolio[''BTCUSD''].Quantity == quantity + 0.09m", span="64-64"];
m13_24 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="VersionHelperTests.cs", label="29: Order(''BTCUSD'', 0.1)", span="54-54"];
m13_26 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="VersionHelperTests.cs", label="29: Order(''BTCUSD'', 0.01)", span="58-58"];
m13_28 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", color=green, community=0, file="VersionHelperTests.cs", label="29: Order(''BTCUSD'', -0.02)", span="62-62"];
m13_30 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="VersionHelperTests.cs", label="Order(''BTCUSD'', 0.001)", span="67-67"];
m13_31 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="VersionHelperTests.cs", label="SetHoldings(''BTCUSD'', -2.0m)", span="69-69"];
m13_32 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="VersionHelperTests.cs", label="SetHoldings(''BTCUSD'', 2.0m)", span="70-70"];
m13_33 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="VersionHelperTests.cs", label="Quit()", span="71-71"];
m13_34 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", file="VersionHelperTests.cs", label="Exit QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.DataConsolidated(object, QuantConnect.Data.Market.QuoteBar)", span="45-45"];
m13_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="VersionHelperTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m13_16 [cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(int)", file="VersionHelperTests.cs", label="Entry QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(int)", span="38-38"];
m13_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="VersionHelperTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1293-1293"];
m13_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="VersionHelperTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="977-977"];
m13_17 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="VersionHelperTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m13_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="VersionHelperTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="145-145"];
m13_0 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="VersionHelperTests.cs", label="Entry QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", span="29-29"];
m13_1 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="VersionHelperTests.cs", label="21: SetStartDate(2015, 11, 12)", span="31-31"];
m13_2 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="VersionHelperTests.cs", label="44: SetEndDate(2016, 04, 01)", span="32-32"];
m13_3 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="VersionHelperTests.cs", label="21: SetCash(100000)", span="35-35"];
m13_4 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="VersionHelperTests.cs", label="44: SetTimeZone(NodaTime.DateTimeZone.Utc)", span="37-37"];
m13_5 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="VersionHelperTests.cs", label="21: var security = AddSecurity(SecurityType.Crypto, ''BTCUSD'', Resolution.Daily, Market.GDAX, false, 3.3m, true)", span="38-38"];
m13_6 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="VersionHelperTests.cs", label="44: var con = new QuoteBarConsolidator(1)", span="39-39"];
m13_9 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="VersionHelperTests.cs", label="44: SetBenchmark(security.Symbol)", span="42-42"];
m13_7 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="VersionHelperTests.cs", label="44: SubscriptionManager.AddConsolidator(''BTCUSD'', con)", span="40-40"];
m13_8 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", color=green, community=0, file="VersionHelperTests.cs", label="21: con.DataConsolidated += DataConsolidated", span="41-41"];
m13_10 [cluster="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", file="VersionHelperTests.cs", label="Exit QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm.Initialize()", span="29-29"];
m13_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="VersionHelperTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1096-1096"];
m13_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="VersionHelperTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1683-1683"];
m13_14 [cluster="Unk.SetTimeZone", file="VersionHelperTests.cs", label="Entry Unk.SetTimeZone", span=""];
m13_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="VersionHelperTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1071-1071"];
m13_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="VersionHelperTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1020-1020"];
m13_41 [file="VersionHelperTests.cs", label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", span=""];
m1_60 -> m1_116  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_60 -> m1_117  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_60 -> m1_118  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_60 -> m1_28  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_60 -> m1_115  [key=0, style=solid];
m1_60 -> m1_119  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_60 -> m1_120  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_116 -> m1_116  [color=darkseagreen4, key=1, label=queued, style=dashed];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_120  [key=0, style=solid];
m1_116 -> m1_113  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_121  [key=0, style=solid];
m1_118 -> m1_122  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_56  [key=2, style=dotted];
m1_119 -> m1_121  [key=0, style=solid];
m1_121 -> m1_60  [color=blue, key=0, style=bold];
m1_25 -> m1_142  [color=green, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m1_25 -> m1_140  [key=0, style=solid];
m1_25 -> m1_143  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m1_25 -> m1_6  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.AccountEvent account", style=bold];
m1_142 -> m1_143  [color=green, key=0, style=solid];
m1_142 -> m1_101  [color=green, key=2, style=dotted];
m1_142 -> m1_62  [color=green, key=2, style=dotted];
m1_140 -> m1_142  [color=green, key=1, label=delta, style=dashed];
m1_140 -> m1_141  [key=0, style=solid];
m1_141 -> m1_142  [color=green, key=0, style=solid];
m1_141 -> m1_143  [key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_144 -> m1_25  [color=blue, key=0, style=bold];
m1_80 -> m1_81  [key=0, style=solid];
m1_23 -> m1_25  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_24 -> m1_22  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_16 -> m1_14  [color=blue, key=0, style=bold];
m1_77 -> m1_78  [key=0, style=solid];
m1_81 -> m1_81  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m1_81 -> m1_82  [key=0, style=solid];
m1_79 -> m1_77  [color=blue, key=0, style=bold];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_78  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m1_82 -> m1_80  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_51 -> m1_62  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_27 -> m1_51  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_32  [key=0, style=solid];
m1_29 -> m1_54  [key=2, style=dotted];
m1_29 -> m1_33  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_29 -> m1_34  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_29 -> m1_35  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_29 -> m1_36  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_29 -> m1_37  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_29 -> m1_39  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_29 -> m1_41  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_29 -> m1_43  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_29 -> m1_49  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_35 -> m1_27  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_57  [key=2, style=dotted];
m1_39 -> m1_50  [key=0, style=solid];
m1_39 -> m1_58  [key=2, style=dotted];
m1_41 -> m1_50  [key=0, style=solid];
m1_41 -> m1_59  [key=2, style=dotted];
m1_43 -> m1_50  [key=0, style=solid];
m1_43 -> m1_60  [key=2, style=dotted];
m1_50 -> m1_27  [key=0, style=solid];
m1_50 -> m1_61  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_36 -> m1_27  [key=0, style=solid];
m1_36 -> m1_56  [key=2, style=dotted];
m1_31 -> m1_27  [key=0, style=solid];
m1_31 -> m1_55  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_37  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_56  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_40  [key=0, style=solid];
m1_37 -> m1_42  [key=0, style=solid];
m1_37 -> m1_44  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_56  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_53 -> m1_26  [color=blue, key=0, style=bold];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_85 -> m1_83  [color=blue, key=0, style=bold];
m1_61 -> m1_63  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_74  [key=2, style=dotted];
m1_68 -> m1_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_73  [key=0, style=solid];
m1_70 -> m1_75  [key=2, style=dotted];
m1_70 -> m1_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_70 -> m1_72  [color=darkseagreen4, key=1, label=item, style=dashed];
m1_72 -> m1_70  [key=0, style=solid];
m1_72 -> m1_76  [key=2, style=dotted];
m1_64 -> m1_73  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_65  [color=darkorchid, key=3, label="Local variable int maxOrdersToKeep", style=bold];
m1_65 -> m1_69  [color=darkseagreen4, key=1, label=maxOrdersToKeep, style=dashed];
m1_67 -> m1_73  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_81  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
m1_71 -> m1_72  [key=0, style=solid];
m1_73 -> m1_61  [color=blue, key=0, style=bold];
m1_59 -> m1_107  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_59 -> m1_108  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_59 -> m1_109  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_59 -> m1_28  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_59 -> m1_106  [key=0, style=solid];
m1_59 -> m1_110  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_59 -> m1_111  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_107 -> m1_107  [color=darkseagreen4, key=1, label=queued, style=dashed];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_111  [key=0, style=solid];
m1_107 -> m1_113  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_112  [key=0, style=solid];
m1_109 -> m1_114  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_56  [key=2, style=dotted];
m1_110 -> m1_112  [key=0, style=solid];
m1_112 -> m1_59  [color=blue, key=0, style=bold];
m1_58 -> m1_89  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_58 -> m1_86  [key=0, style=solid];
m1_58 -> m1_87  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_58 -> m1_91  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_58 -> m1_93  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_58 -> m1_95  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_58 -> m1_88  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_58 -> m1_92  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_58 -> m1_96  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_58 -> m1_97  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m1_58 -> m1_28  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m1_89 -> m1_101  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_102  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_98  [key=0, style=solid];
m1_86 -> m1_57  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_91  [key=0, style=solid];
m1_87 -> m1_100  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_95  [key=0, style=solid];
m1_91 -> m1_103  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_104  [key=2, style=dotted];
m1_93 -> m1_102  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_97  [key=0, style=solid];
m1_95 -> m1_105  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_90 -> m1_99  [key=0, style=solid];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_56  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_94 -> m1_99  [key=0, style=solid];
m1_96 -> m1_99  [key=0, style=solid];
m1_97 -> m1_99  [key=0, style=solid];
m1_99 -> m1_58  [color=blue, key=0, style=bold];
m1_21 -> m1_149  [color=green, key=1, label="QuantConnect.Securities.SecurityEvent", style=dashed];
m1_21 -> m1_145  [key=0, style=solid];
m1_21 -> m1_146  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityEvent", style=dashed];
m1_21 -> m1_147  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityEvent", style=dashed];
m1_21 -> m1_150  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityEvent", style=dashed];
m1_21 -> m1_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.SecurityEvent holding", style=bold];
m1_149 -> m1_150  [color=green, key=0, style=solid];
m1_149 -> m1_152  [color=green, key=2, style=dotted];
m1_149 -> m1_62  [color=green, key=2, style=dotted];
m1_146 -> m1_149  [color=green, key=1, label=deltaQuantity, style=dashed];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_148  [color=darkseagreen4, key=1, label=deltaQuantity, style=dashed];
m1_147 -> m1_149  [color=green, key=1, label=deltaAvgPrice, style=dashed];
m1_147 -> m1_148  [key=0, style=solid];
m1_148 -> m1_149  [color=green, key=0, style=solid];
m1_148 -> m1_150  [key=0, style=solid];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_153  [key=2, style=dotted];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_147  [color=darkseagreen4, key=1, label=securityHolding, style=dashed];
m1_145 -> m1_150  [color=darkseagreen4, key=1, label=securityHolding, style=dashed];
m1_151 -> m1_21  [color=blue, key=0, style=bold];
m1_17 -> m1_4  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.OrderEvent fill", style=bold];
m1_17 -> m1_123  [key=0, style=solid];
m1_17 -> m1_129  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_17 -> m1_132  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_17 -> m1_125  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_17 -> m1_127  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_17 -> m1_128  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_17 -> m1_130  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_17 -> m1_131  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_136  [key=2, style=dotted];
m1_123 -> m1_127  [color=darkseagreen4, key=1, label=order, style=dashed];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_137  [key=2, style=dotted];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_135  [key=0, style=solid];
m1_132 -> m1_139  [key=2, style=dotted];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_102  [key=2, style=dotted];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_127  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_130  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_135  [key=0, style=solid];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_138  [key=2, style=dotted];
m1_133 -> m1_134  [key=0, style=solid];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_56  [key=2, style=dotted];
m1_126 -> m1_135  [key=0, style=solid];
m1_135 -> m1_17  [color=blue, key=0, style=bold];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_0 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_0 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_0 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_6 -> m1_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m1_6 -> m1_7  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityEvent", style=dashed];
m1_7 -> m1_8  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_12  [key=0, style=solid];
m1_2 -> m1_13  [key=2, style=dotted];
m1_12 -> m1_0  [color=blue, key=0, style=bold];
m1_154 -> m1_140  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_143  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_72  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_93  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_95  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_107  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_108  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_109  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_116  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_117  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_129  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_132  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_134  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_154 -> m1_145  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", style=dashed];
m1_155 -> m1_81  [color=darkseagreen4, key=1, label=lowestOrderIdToKeep, style=dashed];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_24  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_26  [key=2, style=dotted];
m2_22 -> m2_25  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerageFactory", style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_28  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_27  [key=2, style=dotted];
m2_25 -> m2_21  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_4 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_5 -> m2_6  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_13  [key=2, style=dotted];
m2_7 -> m2_14  [key=2, style=dotted];
m2_7 -> m2_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_15  [key=2, style=dotted];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label=error, style=dashed];
m2_8 -> m2_11  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m2_6 -> m2_7  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [key=0, style=solid];
m2_10 -> m2_16  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_4  [color=blue, key=0, style=bold];
m2_124 -> m2_125  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_19 -> m2_17  [color=blue, key=0, style=bold];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_87  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_88  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_89  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_86  [key=0, style=solid];
m2_82 -> m2_90  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_86 -> m2_78  [color=blue, key=0, style=bold];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_91  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_68  [key=2, style=dotted];
m2_119 -> m2_123  [key=0, style=solid];
m2_121 -> m2_123  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_115  [key=2, style=dotted];
m2_114 -> m2_112  [color=blue, key=0, style=bold];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_120  [key=0, style=solid];
m2_117 -> m2_122  [key=0, style=solid];
m2_118 -> m2_119  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_123 -> m2_116  [color=blue, key=0, style=bold];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_115  [key=2, style=dotted];
m2_126 -> m2_124  [color=blue, key=0, style=bold];
m2_73 -> m2_92  [key=0, style=solid];
m2_73 -> m2_119  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m2_73 -> m2_121  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m2_73 -> m2_122  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m2_73 -> m2_93  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m2_73 -> m2_96  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_107  [key=2, style=dotted];
m2_92 -> m2_108  [key=2, style=dotted];
m2_92 -> m2_109  [key=2, style=dotted];
m2_92 -> m2_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_92 -> m2_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_92 -> m2_94  [color=darkseagreen4, key=1, label=derivativeSubscriptions, style=dashed];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_107  [key=2, style=dotted];
m2_93 -> m2_110  [key=2, style=dotted];
m2_93 -> m2_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_102  [color=darkseagreen4, key=1, label=jobDays, style=dashed];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_97  [color=darkseagreen4, key=1, label=subscriptionCount, style=dashed];
m2_95 -> m2_96  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_100  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m2_97 -> m2_102  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m2_97 -> m2_105  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_111  [key=2, style=dotted];
m2_102 -> m2_67  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_100  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_102  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_14  [key=2, style=dotted];
m2_99 -> m2_102  [key=0, style=solid];
m2_99 -> m2_105  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_105  [color=darkseagreen4, key=1, label=maxRunTime, style=dashed];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_105  [key=0, style=solid];
m2_104 -> m2_105  [key=0, style=solid];
m2_106 -> m2_73  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_127 -> m2_128  [key=0, style=solid];
m2_128 -> m2_127  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_32  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m2_29 -> m2_34  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_29 -> m2_42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_29 -> m2_79  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_29 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_29 -> m2_81  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_29 -> m2_82  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_29 -> m2_45  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_29 -> m2_46  [color=red, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_29 -> m2_47  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_29 -> m2_48  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_29 -> m2_51  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_29 -> m2_56  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_30 -> m2_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_30 -> m2_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_30 -> m2_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_30 -> m2_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_30 -> m2_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_30 -> m2_46  [color=red, key=1, label=job, style=dashed];
m2_30 -> m2_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_30 -> m2_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_30 -> m2_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_30 -> m2_57  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_30 -> m2_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_30 -> m2_59  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_32 -> m2_63  [key=0, style=solid];
m2_32 -> m2_64  [key=2, style=dotted];
m2_32 -> m2_65  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_70  [key=2, style=dotted];
m2_42 -> m2_71  [key=2, style=dotted];
m2_42 -> m2_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_42 -> m2_62  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m2_45 -> m2_46  [color=red, key=0, style=solid];
m2_46 -> m2_47  [color=red, key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_72  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_73  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_75  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_66  [key=2, style=dotted];
m2_33 -> m2_67  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [color=darkseagreen4, key=1, label=controls, style=dashed];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_51  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_54  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_67  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_76  [key=2, style=dotted];
m2_59 -> m2_77  [key=2, style=dotted];
m2_59 -> m2_67  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_68  [key=2, style=dotted];
m2_36 -> m2_63  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_68  [key=2, style=dotted];
m2_39 -> m2_63  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_69  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_44 -> m2_63  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_14  [key=2, style=dotted];
m2_50 -> m2_74  [key=2, style=dotted];
m2_53 -> m2_56  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_62  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_63 -> m2_29  [color=blue, key=0, style=bold];
m2_129 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_51  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_53  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_129 -> m2_60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", style=dashed];
m2_130 -> m2_79  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_130 -> m2_80  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_130 -> m2_81  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_130 -> m2_82  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m2_131 -> m2_79  [color=darkseagreen4, key=1, label=job, style=dashed];
m2_132 -> m2_81  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
m2_133 -> m2_119  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m2_133 -> m2_121  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m2_133 -> m2_122  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Controls", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_8 -> m5_9  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_2 -> m5_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_2 -> m5_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_2 -> m5_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_6  [key=0, style=solid];
m5_3 -> m5_8  [key=0, style=solid];
m5_3 -> m5_10  [key=0, style=solid];
m5_5 -> m5_11  [key=0, style=solid];
m5_5 -> m5_12  [key=2, style=dotted];
m5_5 -> m5_5  [color=darkorchid, key=3, label="Field variable string _collapseMessage", style=bold];
m5_7 -> m5_11  [key=0, style=solid];
m5_7 -> m5_13  [key=2, style=dotted];
m5_9 -> m5_11  [key=0, style=solid];
m5_9 -> m5_14  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_15  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_11 -> m5_2  [color=blue, key=0, style=bold];
m8_36 -> m8_2  [color=darkorchid, key=3, label="Property variable System.Collections.Concurrent.ConcurrentQueue<QuantConnect.Packets.Packet> Messages", style=bold];
m8_43 -> m8_44  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_34  [key=2, style=dotted];
m8_32 -> m8_35  [key=2, style=dotted];
m8_32 -> m8_36  [key=2, style=dotted];
m8_32 -> m8_37  [key=2, style=dotted];
m8_32 -> m8_38  [key=2, style=dotted];
m8_32 -> m8_39  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [key=2, style=dotted];
m8_27 -> m8_30  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_28 -> m8_26  [color=blue, key=0, style=bold];
m8_33 -> m8_31  [color=blue, key=0, style=bold];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_21  [key=2, style=dotted];
m8_41 -> m8_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_42 -> m8_40  [color=blue, key=0, style=bold];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_43  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_4  [color=darkorchid, key=3, label="Field variable System.DateTime _date", style=bold];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_13  [key=2, style=dotted];
m8_1 -> m8_5  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m8_1 -> m8_32  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m8_1 -> m8_1  [color=darkorchid, key=3, label="Field variable int _columnExpiration", style=bold];
m8_1 -> m8_4  [color=darkorchid, key=3, label="Field variable System.Collections.Generic.HashSet<string> _symbolFilter", style=bold];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_14  [key=2, style=dotted];
m8_2 -> m8_15  [key=2, style=dotted];
m8_2 -> m8_16  [key=2, style=dotted];
m8_2 -> m8_17  [key=2, style=dotted];
m8_2 -> m8_5  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_2 -> m8_32  [color=darkseagreen4, key=1, label=security, style=dashed];
m8_2 -> m8_1  [color=darkorchid, key=3, label="Field variable int _columnExchange", style=bold];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_19  [key=2, style=dotted];
m8_5 -> m8_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_27  [color=darkseagreen4, key=1, label=refTime, style=dashed];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_18  [key=2, style=dotted];
m8_4 -> m8_19  [key=2, style=dotted];
m8_4 -> m8_20  [key=2, style=dotted];
m8_4 -> m8_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_4 -> m8_7  [color=darkseagreen4, key=1, label=rawTicks, style=dashed];
m8_4 -> m8_9  [color=darkseagreen4, key=1, label=rawTicks, style=dashed];
m8_4 -> m8_10  [color=darkseagreen4, key=1, label=rawTicks, style=dashed];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_23  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_12  [key=0, style=solid];
m8_9 -> m8_9  [color=darkorchid, key=3, label="Field variable string _subscription", style=bold];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_24  [key=2, style=dotted];
m8_10 -> m8_25  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_21  [key=2, style=dotted];
m8_6 -> m8_22  [key=2, style=dotted];
m8_6 -> m8_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_6 -> m8_10  [color=darkseagreen4, key=1, label=timeSliceTicks, style=dashed];
m8_6 -> m8_6  [color=darkorchid, key=3, label="Field variable int _lastOrderId", style=bold];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_8 -> m8_11  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_11 -> m8_9  [key=0, style=solid];
m8_11 -> m8_11  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_12 -> m8_0  [color=blue, key=0, style=bold];
m8_24 -> m8_46  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_47 -> m8_24  [color=blue, key=0, style=bold];
m8_48 -> m8_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests", style=dashed];
m8_49 -> m8_27  [color=darkseagreen4, key=1, label=refTime, style=dashed];
m8_50 -> m8_32  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m8_51 -> m8_32  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_32  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m9_29 -> m9_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_29 -> m9_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_29 -> m9_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_29 -> m9_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_29 -> m9_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_29 -> m9_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_29 -> m9_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_29 -> m9_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_29 -> m9_48  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m9_29 -> m9_3  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_51  [key=2, style=dotted];
m9_30 -> m9_52  [key=2, style=dotted];
m9_30 -> m9_34  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m9_30 -> m9_36  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m9_30 -> m9_38  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m9_30 -> m9_41  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m9_30 -> m9_43  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m9_30 -> m9_45  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m9_30 -> m9_49  [color=darkseagreen4, key=1, label=ticker, style=dashed];
m9_30 -> m9_11  [color=blue, key=0, style=bold];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_35  [key=0, style=solid];
m9_32 -> m9_37  [key=0, style=solid];
m9_32 -> m9_40  [key=0, style=solid];
m9_32 -> m9_42  [key=0, style=solid];
m9_32 -> m9_44  [key=0, style=solid];
m9_32 -> m9_47  [key=0, style=solid];
m9_32 -> m9_3  [color=blue, key=0, style=bold];
m9_34 -> m9_49  [key=0, style=solid];
m9_34 -> m9_53  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_45  [key=2, style=dotted];
m9_34 -> m9_36  [color=darkseagreen4, key=1, label=error, style=dashed];
m9_36 -> m9_49  [key=0, style=solid];
m9_36 -> m9_54  [key=2, style=dotted];
m9_36 -> m9_44  [key=0, style=solid];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_54  [key=2, style=dotted];
m9_39 -> m9_49  [key=0, style=solid];
m9_39 -> m9_55  [key=2, style=dotted];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_47  [key=2, style=dotted];
m9_39 -> m9_41  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m9_39 -> m9_43  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m9_41 -> m9_49  [key=0, style=solid];
m9_41 -> m9_56  [key=2, style=dotted];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_43  [key=0, style=solid];
m9_41 -> m9_48  [key=2, style=dotted];
m9_43 -> m9_49  [key=0, style=solid];
m9_43 -> m9_57  [key=2, style=dotted];
m9_43 -> m9_44  [key=0, style=solid];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_53  [key=2, style=dotted];
m9_45 -> m9_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_45 -> m9_74  [key=0, style=solid];
m9_45 -> m9_89  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m9_46 -> m9_49  [key=0, style=solid];
m9_46 -> m9_58  [key=2, style=dotted];
m9_48 -> m9_50  [key=0, style=solid];
m9_48 -> m9_59  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_60  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_33 -> m9_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_33 -> m9_40  [color=darkseagreen4, key=1, label=bool, style=dashed];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_37  [key=0, style=solid];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_46  [key=2, style=dotted];
m9_37 -> m9_39  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_43  [key=0, style=solid];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_41  [key=0, style=solid];
m9_42 -> m9_49  [key=2, style=dotted];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_33  [color=blue, key=0, style=bold];
m9_47 -> m9_48  [key=0, style=solid];
m9_50 -> m9_29  [color=blue, key=0, style=bold];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_126 -> m9_127  [key=0, style=solid];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_125  [key=2, style=dotted];
m9_128 -> m9_126  [color=blue, key=0, style=bold];
m9_125 -> m9_132  [key=0, style=solid];
m9_125 -> m9_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_125 -> m9_141  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_125 -> m9_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_125 -> m9_145  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_125 -> m9_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_125 -> m9_164  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_125 -> m9_135  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_125 -> m9_137  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_125 -> m9_139  [color=darkseagreen4, key=1, label=bool, style=dashed];
m9_125 -> m9_144  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_132 -> m9_133  [key=0, style=solid];
m9_132 -> m9_135  [key=0, style=solid];
m9_132 -> m9_166  [key=2, style=dotted];
m9_133 -> m9_101  [key=2, style=dotted];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_99  [key=2, style=dotted];
m9_140 -> m9_141  [key=0, style=solid];
m9_140 -> m9_143  [key=0, style=solid];
m9_140 -> m9_142  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m9_141 -> m9_140  [key=0, style=solid];
m9_141 -> m9_142  [key=0, style=solid];
m9_142 -> m9_140  [key=0, style=solid];
m9_142 -> m9_3  [key=2, style=dotted];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_145  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_143 -> m9_147  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_143 -> m9_148  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_143 -> m9_149  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_143 -> m9_158  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_145 -> m9_146  [key=0, style=solid];
m9_145 -> m9_167  [key=2, style=dotted];
m9_145 -> m9_168  [key=2, style=dotted];
m9_145 -> m9_151  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m9_145 -> m9_154  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m9_145 -> m9_156  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m9_147 -> m9_148  [key=0, style=solid];
m9_147 -> m9_46  [key=2, style=dotted];
m9_147 -> m9_157  [color=darkseagreen4, key=1, label=marketOrder, style=dashed];
m9_147 -> m9_158  [color=darkseagreen4, key=1, label=marketOrder, style=dashed];
m9_164 -> m9_165  [key=0, style=solid];
m9_164 -> m9_33  [key=2, style=dotted];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_137  [key=0, style=solid];
m9_134 -> m9_165  [key=0, style=solid];
m9_139 -> m9_140  [key=0, style=solid];
m9_139 -> m9_143  [key=0, style=solid];
m9_144 -> m9_145  [key=0, style=solid];
m9_144 -> m9_162  [color=darkseagreen4, key=1, label=direction, style=dashed];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_169  [key=2, style=dotted];
m9_148 -> m9_151  [color=darkseagreen4, key=1, label=marginRequiredForSingleShare, style=dashed];
m9_148 -> m9_153  [color=darkseagreen4, key=1, label=marginRequiredForSingleShare, style=dashed];
m9_149 -> m9_150  [key=0, style=solid];
m9_149 -> m9_151  [key=0, style=solid];
m9_158 -> m9_159  [key=0, style=solid];
m9_158 -> m9_169  [key=2, style=dotted];
m9_136 -> m9_145  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_136 -> m9_144  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_136 -> m9_137  [key=0, style=solid];
m9_138 -> m9_145  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_138 -> m9_139  [key=0, style=solid];
m9_138 -> m9_144  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_164  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m9_146 -> m9_155  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m9_146 -> m9_160  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m9_146 -> m9_163  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m9_151 -> m9_152  [key=0, style=solid];
m9_151 -> m9_154  [color=darkseagreen4, key=1, label=marginRequiredLowerThreshold, style=dashed];
m9_154 -> m9_155  [key=0, style=solid];
m9_154 -> m9_160  [key=0, style=solid];
m9_156 -> m9_164  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_170  [key=2, style=dotted];
m9_156 -> m9_160  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m9_156 -> m9_163  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m9_157 -> m9_158  [key=0, style=solid];
m9_162 -> m9_164  [key=0, style=solid];
m9_162 -> m9_163  [key=0, style=solid];
m9_163 -> m9_164  [key=0, style=solid];
m9_163 -> m9_163  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m9_137 -> m9_139  [key=0, style=solid];
m9_137 -> m9_138  [key=0, style=solid];
m9_153 -> m9_154  [key=0, style=solid];
m9_153 -> m9_155  [color=darkseagreen4, key=1, label=marginRequired, style=dashed];
m9_150 -> m9_165  [key=0, style=solid];
m9_159 -> m9_154  [key=0, style=solid];
m9_159 -> m9_159  [color=darkseagreen4, key=1, label=loops, style=dashed];
m9_159 -> m9_160  [key=0, style=solid];
m9_155 -> m9_156  [key=0, style=solid];
m9_160 -> m9_162  [key=0, style=solid];
m9_160 -> m9_161  [key=0, style=solid];
m9_152 -> m9_153  [key=0, style=solid];
m9_152 -> m9_159  [color=darkseagreen4, key=1, label=loops, style=dashed];
m9_161 -> m9_165  [key=0, style=solid];
m9_165 -> m9_125  [color=blue, key=0, style=bold];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_45  [key=2, style=dotted];
m9_59 -> m9_61  [color=darkseagreen4, key=1, label=error, style=dashed];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_65  [key=2, style=dotted];
m9_62 -> m9_67  [key=2, style=dotted];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_47  [key=2, style=dotted];
m9_63 -> m9_68  [key=2, style=dotted];
m9_63 -> m9_69  [key=2, style=dotted];
m9_60 -> m9_62  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_61 -> m9_64  [key=0, style=solid];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_63  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m9_61 -> m9_65  [color=darkorchid, key=3, label="method methodReturn bool Add", style=bold];
m9_64 -> m9_58  [color=blue, key=0, style=bold];
m9_64 -> m9_66  [key=0, style=solid];
m9_65 -> m9_66  [key=0, style=solid];
m9_66 -> m9_61  [color=blue, key=0, style=bold];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_11 -> m9_29  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_11  [key=2, style=dotted];
m9_26 -> m9_24  [color=blue, key=0, style=bold];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [key=2, style=dotted];
m9_7 -> m9_27  [key=0, style=solid];
m9_7 -> m9_8  [key=0, style=solid];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_3  [key=2, style=dotted];
m9_27 -> m9_25  [color=blue, key=0, style=bold];
m9_28 -> m9_7  [color=blue, key=0, style=bold];
m9_94 -> m9_95  [key=0, style=solid];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UniverseSettings", style=dashed];
m9_10 -> m9_13  [color=darkseagreen4, key=1, label="System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m9_10 -> m9_16  [color=darkseagreen4, key=1, label="System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m9_10 -> m9_8  [color=blue, key=0, style=bold];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_16  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m9_13 -> m9_7  [key=2, style=dotted];
m9_14 -> m9_10  [color=blue, key=0, style=bold];
m9_14 -> m9_12  [color=blue, key=0, style=bold];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_45  [key=2, style=dotted];
m9_67 -> m9_69  [color=darkseagreen4, key=1, label=error, style=dashed];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_73  [key=2, style=dotted];
m9_70 -> m9_72  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m9_70 -> m9_64  [color=darkorchid, key=3, label="method methodReturn bool Remove", style=bold];
m9_70 -> m9_65  [color=darkorchid, key=3, label="method methodReturn bool Remove", style=bold];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_47  [key=2, style=dotted];
m9_71 -> m9_74  [key=0, style=solid];
m9_71 -> m9_76  [key=2, style=dotted];
m9_68 -> m9_70  [key=0, style=solid];
m9_68 -> m9_69  [key=0, style=solid];
m9_69 -> m9_72  [key=0, style=solid];
m9_69 -> m9_98  [key=0, style=solid];
m9_69 -> m9_100  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m9_72 -> m9_66  [color=blue, key=0, style=bold];
m9_72 -> m9_73  [key=0, style=solid];
m9_72 -> m9_68  [key=2, style=dotted];
m9_72 -> m9_69  [key=2, style=dotted];
m9_84 -> m9_85  [color=green, key=0, style=solid];
m9_84 -> m9_101  [color=green, key=2, style=dotted];
m9_84 -> m9_86  [color=darkseagreen4, key=1, label=first, style=dashed];
m9_84 -> m9_64  [color=darkorchid, key=3, label="Local variable bool first", style=bold];
m9_76 -> m9_84  [color=green, key=1, label=string, style=dashed];
m9_76 -> m9_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_99  [key=2, style=dotted];
m9_76 -> m9_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_76 -> m9_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_83 -> m9_84  [color=green, key=0, style=solid];
m9_83 -> m9_86  [key=0, style=solid];
m9_83 -> m9_21  [key=2, style=dotted];
m9_83 -> m9_85  [color=darkseagreen4, key=1, label=localEndTime, style=dashed];
m9_85 -> m9_97  [key=0, style=solid];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_91  [key=0, style=solid];
m9_85 -> m9_93  [key=2, style=dotted];
m9_85 -> m9_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_85 -> m9_87  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m9_85 -> m9_89  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m9_85 -> m9_90  [color=darkseagreen4, key=1, label=dateTime, style=dashed];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_81  [key=0, style=solid];
m9_77 -> m9_100  [key=2, style=dotted];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_22  [key=2, style=dotted];
m9_79 -> m9_101  [key=2, style=dotted];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_77  [color=blue, key=0, style=bold];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_86  [color=darkseagreen4, key=1, label=security, style=dashed];
m9_81 -> m9_89  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m9_81 -> m9_92  [key=2, style=dotted];
m9_81 -> m9_83  [color=darkseagreen4, key=1, label=exchangeHours, style=dashed];
m9_87 -> m9_101  [key=2, style=dotted];
m9_87 -> m9_88  [key=0, style=solid];
m9_90 -> m9_101  [key=2, style=dotted];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_85  [key=0, style=solid];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_96  [key=0, style=solid];
m9_93 -> m9_101  [key=2, style=dotted];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_102  [key=2, style=dotted];
m9_74 -> m9_76  [key=0, style=solid];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_98  [key=2, style=dotted];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_21  [key=2, style=dotted];
m9_82 -> m9_85  [color=darkseagreen4, key=1, label=localStartTime, style=dashed];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_89  [key=0, style=solid];
m9_80 -> m9_97  [key=0, style=solid];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_87  [color=crimson, key=0, style=bold];
m9_80 -> m9_90  [color=crimson, key=0, style=bold];
m9_80 -> m9_82  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m9_80 -> m9_83  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_92  [key=0, style=solid];
m9_89 -> m9_85  [key=0, style=solid];
m9_89 -> m9_94  [key=2, style=dotted];
m9_88 -> m9_97  [key=0, style=solid];
m9_88 -> m9_85  [key=0, style=solid];
m9_91 -> m9_97  [key=0, style=solid];
m9_91 -> m9_80  [color=blue, key=0, style=bold];
m9_96 -> m9_97  [key=0, style=solid];
m9_95 -> m9_97  [key=0, style=solid];
m9_95 -> m9_96  [key=0, style=solid];
m9_75 -> m9_97  [key=0, style=solid];
m9_75 -> m9_70  [color=blue, key=0, style=bold];
m9_97 -> m9_45  [color=blue, key=0, style=bold];
m9_97 -> m9_95  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UniverseSettings", style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_6  [key=2, style=dotted];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_31  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_0  [color=blue, key=0, style=bold];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=2, style=dotted];
m9_23 -> m9_21  [color=blue, key=0, style=bold];
m9_56 -> m9_50  [color=blue, key=0, style=bold];
m9_101 -> m9_69  [color=blue, key=0, style=bold];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_45  [key=2, style=dotted];
m9_51 -> m9_53  [color=darkseagreen4, key=1, label=error, style=dashed];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_57  [key=2, style=dotted];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_47  [key=2, style=dotted];
m9_52 -> m9_54  [key=0, style=solid];
m9_52 -> m9_53  [key=0, style=solid];
m9_53 -> m9_56  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_7  [color=blue, key=0, style=bold];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_11  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_21  [key=2, style=dotted];
m9_16 -> m9_22  [key=2, style=dotted];
m9_16 -> m9_19  [color=darkseagreen4, key=1, label=selectSymbolsResult, style=dashed];
m9_16 -> m9_3  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=0, style=solid];
m9_17 -> m9_23  [key=2, style=dotted];
m9_17 -> m9_15  [color=blue, key=0, style=bold];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_24  [key=2, style=dotted];
m9_19 -> m9_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_19 -> m9_7  [key=2, style=dotted];
m9_18 -> m9_20  [key=0, style=solid];
m9_18 -> m9_19  [key=0, style=solid];
m9_20 -> m9_15  [color=blue, key=0, style=bold];
m9_20 -> m9_18  [color=blue, key=0, style=bold];
m9_21 -> m9_22  [key=0, style=solid];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_7  [key=2, style=dotted];
m9_177 -> m9_178  [key=0, style=solid];
m9_178 -> m9_179  [key=0, style=solid];
m9_178 -> m9_3  [key=2, style=dotted];
m9_179 -> m9_177  [color=blue, key=0, style=bold];
m9_98 -> m9_99  [key=0, style=solid];
m9_98 -> m9_100  [color=darkseagreen4, key=1, label=handler, style=dashed];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_102  [key=2, style=dotted];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_101  [key=0, style=solid];
m9_122 -> m9_123  [key=0, style=solid];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_125  [key=2, style=dotted];
m9_124 -> m9_122  [color=blue, key=0, style=bold];
m9_73 -> m9_75  [key=0, style=solid];
m9_6 -> m9_4  [color=blue, key=0, style=bold];
m9_103 -> m9_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_62  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_71  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_72  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_78  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_81  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_85  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_96  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_89  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_98  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_103 -> m9_100  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UserDefinedUniverse", style=dashed];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_113  [key=0, style=solid];
m9_106 -> m9_109  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m9_106 -> m9_110  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m9_106 -> m9_111  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m9_106 -> m9_112  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m9_107 -> m9_106  [key=0, style=solid];
m9_107 -> m9_108  [key=0, style=solid];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_111  [key=0, style=solid];
m9_110 -> m9_112  [key=0, style=solid];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_116  [key=2, style=dotted];
m9_112 -> m9_106  [key=0, style=solid];
m9_112 -> m9_3  [key=2, style=dotted];
m9_112 -> m9_117  [key=2, style=dotted];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_105 -> m9_99  [key=2, style=dotted];
m9_105 -> m9_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_113 -> m9_114  [key=0, style=solid];
m9_108 -> m9_109  [key=0, style=solid];
m9_104 -> m9_112  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_113  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m9_104 -> m9_115  [key=2, style=dotted];
m9_104 -> m9_16  [color=darkseagreen4, key=1, label="System.Func<System.DateTime, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m9_114 -> m9_103  [color=blue, key=0, style=bold];
m9_171 -> m9_172  [key=0, style=solid];
m9_172 -> m9_173  [key=0, style=solid];
m9_172 -> m9_3  [key=2, style=dotted];
m9_173 -> m9_171  [color=blue, key=0, style=bold];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_120  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_119 -> m9_120  [key=0, style=solid];
m9_119 -> m9_121  [key=0, style=solid];
m9_120 -> m9_121  [key=0, style=solid];
m9_121 -> m9_118  [color=blue, key=0, style=bold];
m9_174 -> m9_175  [key=0, style=solid];
m9_175 -> m9_176  [key=0, style=solid];
m9_175 -> m9_3  [key=2, style=dotted];
m9_176 -> m9_174  [color=blue, key=0, style=bold];
m9_129 -> m9_130  [key=0, style=solid];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_125  [key=2, style=dotted];
m9_131 -> m9_129  [color=blue, key=0, style=bold];
m9_180 -> m9_84  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_54  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_70  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_71  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_78  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_90  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_94  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_107  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_112  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_119  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_120  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_123  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_133  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_140  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_145  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_147  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_164  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_172  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_175  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m9_180 -> m9_178  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m13_19 -> m13_20  [color=green, key=0, style=solid];
m13_20 -> m13_21  [color=green, key=0, style=solid];
m13_20 -> m13_35  [color=green, key=2, style=dotted];
m13_20 -> m13_36  [color=green, key=2, style=dotted];
m13_20 -> m13_22  [color=green, key=1, label=quantity, style=dashed];
m13_20 -> m13_23  [color=green, key=1, label=quantity, style=dashed];
m13_20 -> m13_25  [color=green, key=1, label=quantity, style=dashed];
m13_20 -> m13_27  [color=green, key=1, label=quantity, style=dashed];
m13_20 -> m13_29  [color=green, key=1, label=quantity, style=dashed];
m13_21 -> m13_22  [color=green, key=0, style=solid];
m13_21 -> m13_23  [color=green, key=0, style=solid];
m13_22 -> m13_34  [color=green, key=0, style=solid];
m13_22 -> m13_37  [color=green, key=2, style=dotted];
m13_23 -> m13_24  [color=green, key=0, style=solid];
m13_23 -> m13_25  [color=green, key=0, style=solid];
m13_25 -> m13_26  [color=green, key=0, style=solid];
m13_25 -> m13_27  [color=green, key=0, style=solid];
m13_27 -> m13_28  [color=green, key=0, style=solid];
m13_27 -> m13_29  [color=green, key=0, style=solid];
m13_29 -> m13_30  [color=green, key=0, style=solid];
m13_29 -> m13_34  [color=green, key=0, style=solid];
m13_24 -> m13_34  [color=green, key=0, style=solid];
m13_24 -> m13_38  [color=green, key=2, style=dotted];
m13_26 -> m13_34  [color=green, key=0, style=solid];
m13_26 -> m13_38  [color=green, key=2, style=dotted];
m13_28 -> m13_34  [color=green, key=0, style=solid];
m13_28 -> m13_38  [color=green, key=2, style=dotted];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_38  [key=2, style=dotted];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_39  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_39  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_40  [key=2, style=dotted];
m13_34 -> m13_19  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [color=green, key=0, style=solid];
m13_1 -> m13_2  [color=green, key=0, style=solid];
m13_1 -> m13_11  [color=green, key=2, style=dotted];
m13_2 -> m13_3  [color=green, key=0, style=solid];
m13_2 -> m13_12  [color=green, key=2, style=dotted];
m13_3 -> m13_4  [color=green, key=0, style=solid];
m13_3 -> m13_13  [color=green, key=2, style=dotted];
m13_4 -> m13_5  [color=green, key=0, style=solid];
m13_4 -> m13_14  [color=green, key=2, style=dotted];
m13_5 -> m13_6  [color=green, key=0, style=solid];
m13_5 -> m13_15  [color=green, key=2, style=dotted];
m13_5 -> m13_9  [color=green, key=1, label=security, style=dashed];
m13_6 -> m13_7  [color=green, key=0, style=solid];
m13_6 -> m13_16  [color=green, key=2, style=dotted];
m13_6 -> m13_8  [color=green, key=1, label=con, style=dashed];
m13_9 -> m13_10  [color=green, key=0, style=solid];
m13_9 -> m13_18  [color=green, key=2, style=dotted];
m13_7 -> m13_8  [color=green, key=0, style=solid];
m13_7 -> m13_17  [color=green, key=2, style=dotted];
m13_8 -> m13_9  [color=green, key=0, style=solid];
m13_10 -> m13_0  [color=blue, key=0, style=bold];
m13_41 -> m13_1  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_2  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_3  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_4  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_5  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_9  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_7  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_8  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_20  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_21  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_22  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_23  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_25  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_27  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_29  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_24  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_26  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_28  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
m13_41 -> m13_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.FractionalQuantityRegressionAlgorithm", style=dashed];
}
