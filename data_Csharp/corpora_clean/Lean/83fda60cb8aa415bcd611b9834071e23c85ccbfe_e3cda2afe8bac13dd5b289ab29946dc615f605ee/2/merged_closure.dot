digraph  {
n352 [label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", span=""];
n0 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="174-174"];
n1 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="_messages = new ConcurrentQueue<Packet>()", span="177-177"];
n2 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="_charts = new ConcurrentDictionary<string, Chart>()", span="178-178"];
n12 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0"];
n3 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="_chartLock = new Object()", span="179-179"];
n13 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
n4 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="_isActive = true", span="180-180"];
n14 [cluster="object.Object()", label="Entry object.Object()", span="0-0"];
n5 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="_notificationPeriod = TimeSpan.FromSeconds(2)", span="183-183"];
n6 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="_exitTriggered = false", span="184-184"];
n15 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
n7 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="_startTime = DateTime.Now", span="187-187"];
n8 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="Charts.AddOrUpdate(''Strategy Equity'', new Chart(''Strategy Equity''))", span="190-190"];
n9 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="Charts[''Strategy Equity''].Series.Add(''Equity'', new Series(''Equity'', SeriesType.Candle, 0, ''$''))", span="191-191"];
n16 [cluster="QuantConnect.Chart.Chart(string)", label="Entry QuantConnect.Chart.Chart(string)", span="64-64"];
n17 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="116-116"];
n10 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="Charts[''Strategy Equity''].Series.Add(''Daily Performance'', new Series(''Daily Performance'', SeriesType.Bar, 1, ''%''))", span="192-192"];
n18 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212"];
n19 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n11 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler()", span="174-174"];
n20 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="204-204"];
n21 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_api = api", span="206-206"];
n22 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_messagingHandler = messagingHandler", span="207-207"];
n23 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_transactionHandler = transactionHandler", span="208-208"];
n24 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_setupHandler = setupHandler", span="209-209"];
n25 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_job = (BacktestNodePacket)job", span="210-210"];
n26 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_job == null", span="211-211"];
n27 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="throw new Exception(''BacktestingResultHandler.Constructor(): Submitted Job type invalid.'');", span="211-211"];
n28 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_compileId = _job.CompileId", span="212-212"];
n29 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="_backtestId = _job.BacktestId", span="213-213"];
n30 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="204-204"];
n31 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n32 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="219-219"];
n33 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="var lastMessage = ''''", span="222-222"];
n34 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="_lastDaysProcessed = 5", span="223-223"];
n35 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="!(_exitTriggered && Messages.Count == 0)", span="231-231"];
n36 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="Messages.Count == 0", span="234-234"];
n42 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label=Exception, span="253-253"];
n45 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="Log.Trace(''BacktestingResultHandler.Run(): Ending Thread...'')", span="261-261"];
n37 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="Thread.Sleep(50)", span="236-236"];
n38 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="Packet packet", span="241-241"];
n39 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="Messages.TryDequeue(out packet)", span="242-242"];
n40 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="_messagingHandler.Send(packet)", span="244-244"];
n41 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="Update()", span="249-249"];
n49 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0"];
n48 [cluster="System.Threading.Thread.Sleep(int)", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
n50 [cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50"];
n51 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", span="268-268"];
n43 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="Log.Error(err)", span="256-256"];
n44 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="_algorithm.RunTimeError = err", span="258-258"];
n52 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
n46 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="_isActive = false", span="262-262"];
n53 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
n47 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Run()", span="219-219"];
n54 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="Algorithm == null || Algorithm.Transactions == null || _processingFinalPacket", span="273-273"];
n55 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="return;", span="275-275"];
n56 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="DateTime.Now <= _nextUpdate || !(_daysProcessed > (_lastDaysProcessed + 1))", span="278-278"];
n57 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="return;", span="278-278"];
n58 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="var deltaOrders = new Dictionary<int, Order>()", span="281-281"];
n59 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="deltaOrders = (from order in _transactionHandler.Orders\r\n                        where order.Value.Time.Date >= _lastUpdate && order.Value.Status == OrderStatus.Filled\r\n                        select order).ToDictionary(t => t.Key, t => t.Value)", span="285-287"];
n96 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n60 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label=Exception, span="289-289"];
n62 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="deltaOrders.Count > 50", span="295-295"];
n97 [cluster="Unk.ToDictionary", label="Entry Unk.ToDictionary", span=""];
n107 [cluster="lambda expression", label="Entry lambda expression", span="287-287"];
n110 [cluster="lambda expression", label="Entry lambda expression", span="287-287"];
n63 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="deltaOrders.Clear()", span="295-295"];
n90 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="var splitPackets = SplitPackets(deltaCharts, deltaOrders, runtimeStatistics, progress)", span="349-349"];
n61 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="Log.Error(err, ''Transactions'')", span="291-291"];
n64 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="_lastUpdate = Algorithm.Time.Date", span="300-300"];
n98 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
n65 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="_lastDaysProcessed = _daysProcessed", span="301-301"];
n66 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="_nextUpdate = DateTime.Now.AddSeconds(0.5)", span="302-302"];
n67 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label=Exception, span="304-304"];
n69 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="var deltaCharts = new Dictionary<string, Chart>()", span="309-309"];
n99 [cluster="System.DateTime.AddSeconds(double)", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
n68 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="Log.Error(err, ''Can't update variables'')", span="306-306"];
n70 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label=_chartLock, span="310-310"];
n72 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="deltaCharts.Add(chart.Name, chart.GetUpdates())", span="315-315"];
n71 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="Charts.Values", span="313-313"];
n73 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="var runtimeStatistics = new Dictionary<string, string>()", span="320-320"];
n100 [cluster="QuantConnect.Chart.GetUpdates()", label="Entry QuantConnect.Chart.GetUpdates()", span="91-91"];
n74 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label=_runtimeLock, span="321-321"];
n76 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="runtimeStatistics.Add(pair.Key, pair.Value)", span="325-325"];
n77 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="runtimeStatistics.Add(''Unrealized:'', ''$'' + _algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="328-328"];
n78 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="runtimeStatistics.Add(''Fees:'', ''-$'' + _algorithm.Portfolio.TotalFees.ToString(''N2''))", span="329-329"];
n79 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="runtimeStatistics.Add(''Net Profit:'', ''$'' + _algorithm.Portfolio.TotalProfit.ToString(''N2''))", span="330-330"];
n80 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="runtimeStatistics.Add(''Return:'', ((_algorithm.Portfolio.TotalPortfolioValue - _setupHandler.StartingPortfolioValue) / _setupHandler.StartingPortfolioValue).ToString(''P''))", span="331-331"];
n81 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="runtimeStatistics.Add(''Equity:'', ''$'' + _algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="332-332"];
n75 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label=_runtimeStatistics, span="323-323"];
n101 [cluster="decimal.ToString(string)", label="Entry decimal.ToString(string)", span="0-0"];
n82 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="var progress = Convert.ToDecimal(_daysProcessed / _jobDays)", span="335-335"];
n83 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="progress > 0.999m", span="336-336"];
n102 [cluster="System.Convert.ToDecimal(double)", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
n86 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="var complete = new BacktestResultPacket(_job, completeResult, progress)", span="340-340"];
n84 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="progress = 0.999m", span="336-336"];
n85 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="var completeResult = new BacktestResult(Charts, _transactionHandler.Orders, Algorithm.Transactions.TransactionRecord, new Dictionary<string, string>(), new Dictionary<string, AlgorithmPerformance>())", span="339-339"];
n103 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>)", label="Entry QuantConnect.Packets.BacktestResult.BacktestResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.Dictionary<string, QuantConnect.Statistics.AlgorithmPerformance>)", span="244-244"];
n87 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="DateTime.Now > _nextS3Update", span="342-342"];
n104 [cluster="QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", label="Entry QuantConnect.Packets.BacktestResultPacket.BacktestResultPacket(QuantConnect.Packets.BacktestNodePacket, QuantConnect.Packets.BacktestResult, decimal)", span="171-171"];
n89 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="StoreResult(complete, false)", span="345-345"];
n88 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="_nextS3Update = DateTime.Now.AddSeconds(30)", span="344-344"];
n105 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="395-395"];
n91 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label=splitPackets, span="351-351"];
n106 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", span="365-365"];
n92 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="_messagingHandler.Send(backtestingPacket)", span="353-353"];
n93 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label=Exception, span="356-356"];
n95 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", span="268-268"];
n94 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Update()", label="Log.Error(err)", span="358-358"];
n108 [cluster="lambda expression", label="t.Key", span="287-287"];
n109 [cluster="lambda expression", label="Exit lambda expression", span="287-287"];
n111 [cluster="lambda expression", label="t.Value", span="287-287"];
n112 [cluster="lambda expression", label="Exit lambda expression", span="287-287"];
n113 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", label="var splitPackets = new List<BacktestResultPacket>()", span="368-368"];
n114 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", label="deltaCharts.Values", span="369-369"];
n116 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { Charts = new Dictionary<string, Chart>()\r\n                {\r\n                    {chart.Name,chart}\r\n                }  }, progress))", span="374-377"];
n117 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { Orders = deltaOrders }, progress))", span="381-381"];
n118 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", label="splitPackets.Add(new BacktestResultPacket(_job, new BacktestResult { RuntimeStatistics = runtimeStatistics }, progress))", span="384-384"];
n121 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n119 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", label="return splitPackets;", span="386-386"];
n115 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", label="chart.Series.Values.Sum(x => x.Values.Count) == 0", span="372-372"];
n122 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0"];
n125 [cluster="lambda expression", label="Entry lambda expression", span="372-372"];
n123 [cluster="QuantConnect.Packets.BacktestResult.BacktestResult()", label="Entry QuantConnect.Packets.BacktestResult.BacktestResult()", span="237-237"];
n124 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n120 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, string>, decimal)", span="365-365"];
n126 [cluster="lambda expression", label="x.Values.Count", span="372-372"];
n127 [cluster="lambda expression", label="Exit lambda expression", span="372-372"];
n128 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var serialized = ''''", span="398-398"];
n131 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="packet.Type != PacketType.BacktestResult", span="406-406"];
n133 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var result = packet as BacktestResultPacket", span="409-409"];
n138 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="_api.Store(serialized, key, StoragePermissions.Authenticated, async)", span="425-425"];
n129 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="var key = ''''", span="399-399"];
n130 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label=_chartLock, span="403-403"];
n132 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="return;", span="406-406"];
n134 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="result != null", span="411-411"];
n136 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="serialized = JsonConvert.SerializeObject(result.Results)", span="417-417"];
n135 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="key = ''backtests/'' + _job.UserId + ''/'' + _job.ProjectId + ''/'' + _job.BacktestId + ''.json''", span="414-414"];
n137 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Log.Error(''BacktestingResultHandler.StoreResult(): Result Null.'')", span="421-421"];
n142 [cluster="Unk.SerializeObject", label="Entry Unk.SerializeObject", span=""];
n143 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
n139 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label=Exception, span="428-428"];
n141 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="395-395"];
n144 [cluster="QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", label="Entry QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", span="87-87"];
n140 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", label="Log.Error(err)", span="430-430"];
n145 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="443-443"];
n146 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="FinalStatistics = statisticsResults.Summary", span="447-447"];
n149 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="statisticsResults.RollingPerformances.Values", span="454-454"];
n151 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="var result = new BacktestResultPacket((BacktestNodePacket) job,\r\n                    new BacktestResult(charts, orders, profitLoss, statisticsResults.Summary, statisticsResults.RollingPerformances)\r\n                    {\r\n                        RuntimeStatistics = _runtimeStatistics\r\n                    }, 1m)\r\n                {\r\n                    ProcessingTime = (DateTime.Now - _startTime).TotalSeconds,\r\n                    DateFinished = DateTime.Now,\r\n                    Progress = 1\r\n                }", span="460-469"];
n147 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="var charts = new Dictionary<string, Chart>(Charts)", span="450-450"];
n148 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="_processingFinalPacket = true", span="451-451"];
n158 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
n150 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="ap.ClosedTrades.Clear()", span="456-456"];
n159 [cluster="System.Collections.Generic.List<T>.Clear()", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
n152 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="StoreResult(result)", span="472-472"];
n153 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="_messagingHandler.Send(result)", span="475-475"];
n154 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="Log.Trace(''BacktestingResultHandler.SendAnalysisResult(): Processed final packet'')", span="477-477"];
n155 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label=Exception, span="479-479"];
n157 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="443-443"];
n156 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", label="Log.Error(err)", span="481-481"];
n160 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="490-490"];
n161 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="_algorithm = algorithm", span="492-492"];
n162 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="var totalMinutes = (_job.PeriodFinish - _job.PeriodStart).TotalMinutes", span="495-495"];
n163 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="var resampleMinutes = (totalMinutes < (_minimumSamplePeriod * _samples)) ? _minimumSamplePeriod : (totalMinutes / _samples)", span="496-496"];
n164 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="_resamplePeriod = TimeSpan.FromMinutes(resampleMinutes)", span="497-497"];
n165 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="Log.Trace(''BacktestingResultHandler(): Sample Period Set: '' + resampleMinutes.ToString(''00.00''))", span="498-498"];
n181 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
n166 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="_jobDays = Time.TradeableDates(Algorithm.Securities.Values, _job.PeriodStart, _job.PeriodFinish)", span="501-501"];
n182 [cluster="double.ToString(string)", label="Entry double.ToString(string)", span="0-0"];
n167 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="_debugMessageMax = Convert.ToInt32(10 * _jobDays)", span="504-504"];
n183 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", label="Entry QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="360-360"];
n168 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="_debugMessageMax < _debugMessageMin", span="506-506"];
n184 [cluster="System.Convert.ToInt32(int)", label="Entry System.Convert.ToInt32(int)", span="0-0"];
n169 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="_debugMessageMax = _debugMessageMin", span="506-506"];
n170 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="_debugMessagePeriod = ''backtest''", span="508-508"];
n171 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="var types = new List<SecurityType>()", span="511-511"];
n172 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="_algorithm.Securities.Values", span="512-512"];
n173 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="!types.Contains(security.Type)", span="514-514"];
n174 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="types.Add(security.Type)", span="514-514"];
n175 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="SecurityType(types)", span="516-516"];
n185 [cluster="System.Collections.Generic.List<T>.Contains(T)", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
n186 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="553-553"];
n187 [cluster="QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", label="Entry QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", span="40-40"];
n188 [cluster="System.Console.SetOut(System.IO.TextWriter)", label="Entry System.Console.SetOut(System.IO.TextWriter)", span="0-0"];
n180 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="490-490"];
n189 [cluster="System.Console.SetError(System.IO.TextWriter)", label="Entry System.Console.SetError(System.IO.TextWriter)", span="0-0"];
n190 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="529-529"];
n191 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", label="Messages.Count > 500", span="531-531"];
n193 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _backtestId, _compileId, message))", span="532-532"];
n194 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="535-535"];
n195 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", label="_debugMessage = message", span="536-536"];
n192 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", label="return;", span="531-531"];
n197 [cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", span="66-66"];
n198 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
n199 [cluster="System.DateTime.ToString(string)", label="Entry System.DateTime.ToString(string)", span="0-0"];
n196 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.DebugMessage(string)", span="529-529"];
n200 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="543-543"];
n201 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", label="Messages.Enqueue(new LogPacket(_backtestId, message))", span="545-545"];
n202 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", label="_log.Add(_algorithm.Time.ToString(DateFormat.UI) + '' '' + message)", span="547-547"];
n204 [cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)", label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47"];
n203 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.LogMessage(string)", span="543-543"];
n205 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", label="var packet = new SecurityTypesPacket\r\n            {\r\n                Types = types\r\n            }", span="555-558"];
n206 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", label="Messages.Enqueue(packet)", span="559-559"];
n208 [cluster="QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", label="Entry QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", span="52-52"];
n207 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="553-553"];
n209 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="567-567"];
n210 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", label="message == _errorMessage", span="569-569"];
n214 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", label="Messages.Enqueue(new HandledErrorPacket(_backtestId, message, stacktrace))", span="571-571"];
n215 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", label="_errorMessage = message", span="572-572"];
n211 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", label="return;", span="569-569"];
n212 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", label="Messages.Count > 500", span="570-570"];
n213 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", label="return;", span="570-570"];
n217 [cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54"];
n216 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ErrorMessage(string, string)", span="567-567"];
n218 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="580-580"];
n219 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", label="PurgeQueue()", span="582-582"];
n220 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", label="Messages.Enqueue(new RuntimeErrorPacket(_backtestId, message, stacktrace))", span="583-583"];
n221 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", label="_errorMessage = message", span="584-584"];
n223 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="738-738"];
n224 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)", label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(string, string, string)", span="54-54"];
n222 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeError(string, string)", span="580-580"];
n225 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="597-597"];
n226 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label=_chartLock, span="599-599"];
n227 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="!Charts.ContainsKey(chartName)", span="602-602"];
n228 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Charts.AddOrUpdate(chartName, new Chart(chartName))", span="604-604"];
n229 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="!Charts[chartName].Series.ContainsKey(seriesName)", span="608-608"];
n230 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="610-610"];
n231 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="614-614"];
n233 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n234 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n232 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="597-597"];
n235 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="354-354"];
n236 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="623-623"];
n237 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value, ''$'')", span="626-626"];
n238 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", label="_daysProcessed = (time - _job.PeriodStart).TotalDays", span="629-629"];
n239 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleEquity(System.DateTime, decimal)", span="623-623"];
n240 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="637-637"];
n241 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", label="Sample(''Strategy Equity'', ''Daily Performance'', 1, SeriesType.Bar, time, value, ''%'')", span="640-640"];
n242 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SamplePerformance(System.DateTime, decimal)", span="637-637"];
n243 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="649-649"];
n244 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value, ''$'')", span="651-651"];
n245 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="649-649"];
n246 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="658-658"];
n247 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label=_chartLock, span="660-660"];
n248 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label=updates, span="662-662"];
n249 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="!Charts.ContainsKey(update.Name)", span="665-665"];
n255 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="658-658"];
n250 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Charts.AddOrUpdate(update.Name, new Chart(update.Name))", span="667-667"];
n251 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="update.Series.Values", span="671-671"];
n252 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="674-674"];
n253 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit)\r\n                            {\r\n                                Color = series.Color, ScatterMarkerSymbol = series.ScatterMarkerSymbol\r\n                            })", span="676-679"];
n254 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="683-683"];
n256 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n257 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="692-692"];
n258 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", label="var logURL = ProcessLogMessages(_job)", span="695-695"];
n259 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", label="logURL != ''''", span="696-696"];
n263 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", span="762-762"];
n260 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", label="DebugMessage(''Your log was successfully created and can be downloaded from: '' + logURL)", span="696-696"];
n261 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", label="_exitTriggered = true", span="699-699"];
n262 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.Exit()", span="692-692"];
n264 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="707-707"];
n265 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="707-707"];
n266 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="719-719"];
n267 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="719-719"];
n268 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="730-730"];
n269 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="730-730"];
n270 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", label="Messages.Clear()", span="740-740"];
n271 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.PurgeQueue()", span="738-738"];
n272 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="71-71"];
n273 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="749-749"];
n274 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", label=_runtimeLock, span="751-751"];
n275 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", label="_runtimeStatistics[key] = value", span="753-753"];
n276 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.RuntimeStatistic(string, string)", span="749-749"];
n277 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var remoteUrl = @''http://data.quantconnect.com/''", span="764-764"];
n281 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var allowance = _api.ReadLogAllowance(job.UserId, job.Channel)", span="773-773"];
n287 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var key = ''backtests/'' + job.UserId + ''/'' + job.ProjectId + ''/'' + job.AlgorithmId + ''-log.txt''", span="780-780"];
n298 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="job.UserPlan == UserPlan.Free", span="801-801"];
n306 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="_api.UpdateDailyLogUsed(job.UserId, job.AlgorithmId, remoteUrl, logLength, job.Channel, hitLimit)", span="820-820"];
n278 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var logLength = 0", span="765-765"];
n288 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="remoteUrl += key", span="781-781"];
n279 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="!_log.Any()", span="770-770"];
n290 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="(logLength + line.Length) < logRemaining", span="785-785"];
n292 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="logLength += line.Length", span="788-788"];
n280 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="return '''';", span="770-770"];
n312 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
n282 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var logBacktestMax = allowance[0]", span="774-774"];
n313 [cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", label="Entry QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="38-38"];
n283 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var logDailyMax = allowance[1]", span="775-775"];
n284 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var logRemaining = Math.Min(logBacktestMax, allowance[2])", span="776-776"];
n293 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var btMax = Math.Round((double)logBacktestMax / 1024, 0) + ''kb''", span="792-792"];
n294 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var dyMax = Math.Round((double)logDailyMax / 1024, 0) + ''kb''", span="793-793"];
n285 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var hitLimit = false", span="777-777"];
n314 [cluster="System.Math.Min(int, int)", label="Entry System.Math.Min(int, int)", span="0-0"];
n286 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var serialized = new StringBuilder()", span="778-778"];
n315 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
n291 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="serialized.Append(line + ''\r\n'')", span="787-787"];
n302 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="serialized.Append(capNotice)", span="810-810"];
n303 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="serialized.Append(requestMore)", span="811-811"];
n305 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="_api.Store(serialized.ToString(), key, StoragePermissions.Public)", span="818-818"];
n289 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label=_log, span="783-783"];
n309 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="Log.Trace(''BacktestingResultHandler.ProcessLogMessages(): Ready: '' + remoteUrl)", span="826-826"];
n310 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="return remoteUrl;", span="827-827"];
n316 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n317 [cluster="System.Math.Round(double, int)", label="Entry System.Math.Round(double, int)", span="0-0"];
n296 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var capNotice = ''You currently have a maximum of '' + btMax + '' of log data per backtest, and '' + dyMax + '' total max per day.''", span="797-797"];
n297 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="DebugMessage(''You currently have a maximum of '' + btMax + '' of log data per backtest remaining, and '' + dyMax + '' total max per day.'')", span="798-798"];
n295 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="var requestMore = ''''", span="796-796"];
n299 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="requestMore =''Please upgrade your account and contact us to request more allocation here: https://www.quantconnect.com/contact''", span="803-803"];
n300 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="requestMore = ''If you require more please briefly explain request for more allocation here: https://www.quantconnect.com/contact''", span="807-807"];
n301 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="DebugMessage(requestMore)", span="809-809"];
n304 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="hitLimit = true", span="812-812"];
n318 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n307 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label=Exception, span="822-822"];
n319 [cluster="QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", label="Entry QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="43-43"];
n308 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="Log.Error(err)", span="824-824"];
n311 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessLogMessages(QuantConnect.Packets.AlgorithmNodePacket)", span="762-762"];
n320 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="833-833"];
n321 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.SetChartSubscription(string)", span="833-833"];
n322 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="843-843"];
n323 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="var time = _algorithm.UtcTime", span="845-845"];
n324 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="time > _nextSample || forceProcess", span="847-847"];
n325 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="_nextSample = time.Add(ResamplePeriod)", span="850-850"];
n326 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="853-853"];
n329 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="SampleAssetPrices(security.Symbol, time, security.Price)", span="861-861"];
n330 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.DebugMessages.ForEach(x => DebugMessage(x))", span="866-866"];
n339 [cluster="System.DateTime.Add(System.TimeSpan)", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
n327 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="SampleRange(_algorithm.GetChartUpdates())", span="856-856"];
n340 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
n328 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.Securities.Values", span="859-859"];
n341 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="437-437"];
n331 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.DebugMessages.Clear()", span="867-867"];
n342 [cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0"];
n343 [cluster="lambda expression", label="Entry lambda expression", span="866-866"];
n332 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.ErrorMessages.ForEach(x => ErrorMessage(x))", span="870-870"];
n333 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.ErrorMessages.Clear()", span="871-871"];
n346 [cluster="lambda expression", label="Entry lambda expression", span="870-870"];
n334 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.LogMessages.ForEach(x => LogMessage(x))", span="874-874"];
n335 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.LogMessages.Clear()", span="875-875"];
n349 [cluster="lambda expression", label="Entry lambda expression", span="874-874"];
n336 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="_algorithm.RuntimeStatistics", span="878-878"];
n337 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="RuntimeStatistic(pair.Key, pair.Value)", span="880-880"];
n338 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", label="Exit QuantConnect.Lean.Engine.Results.BacktestingResultHandler.ProcessSynchronousEvents(bool)", span="843-843"];
n344 [cluster="lambda expression", label="DebugMessage(x)", span="866-866"];
n345 [cluster="lambda expression", label="Exit lambda expression", span="866-866"];
n347 [cluster="lambda expression", label="ErrorMessage(x)", span="870-870"];
n348 [cluster="lambda expression", label="Exit lambda expression", span="870-870"];
n350 [cluster="lambda expression", label="LogMessage(x)", span="874-874"];
n351 [cluster="lambda expression", label="Exit lambda expression", span="874-874"];
m1_4 [cluster="QuantConnect.Securities.PortfolioEvent.ToString()", file="LinqExtensions.cs", label="Entry QuantConnect.Securities.PortfolioEvent.ToString()", span="50-50"];
m1_5 [cluster="QuantConnect.Securities.PortfolioEvent.ToString()", file="LinqExtensions.cs", label="return string.Format(''Symbol: {0} Quantity: {1}'', Symbol, Quantity);", span="52-52"];
m1_6 [cluster="QuantConnect.Securities.PortfolioEvent.ToString()", file="LinqExtensions.cs", label="Exit QuantConnect.Securities.PortfolioEvent.ToString()", span="50-50"];
m1_0 [cluster="QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", file="LinqExtensions.cs", label="Entry QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", span="37-37"];
m1_1 [cluster="QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", file="LinqExtensions.cs", label="Symbol = symbol", span="39-39"];
m1_2 [cluster="QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", file="LinqExtensions.cs", label="Quantity = quantity", span="40-40"];
m1_3 [cluster="QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", file="LinqExtensions.cs", label="Exit QuantConnect.Securities.PortfolioEvent.PortfolioEvent(string, int)", span="37-37"];
m1_7 [cluster="string.Format(string, object, object)", file="LinqExtensions.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_8 [file="LinqExtensions.cs", label="QuantConnect.Securities.PortfolioEvent", span=""];
m3_25 [cluster="string.Format(string, params object[])", file="MemoizingEnumerableTests.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m3_0 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="Entry QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="33-33"];
m3_1 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="var symbol = value as Symbol", span="35-35"];
m3_3 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="return;", span="36-36"];
m3_18 [cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="MemoizingEnumerableTests.cs", label="hour++", span="84-84"];
m3_23 [cluster="System.Net.WebClient.WebClient()", file="MemoizingEnumerableTests.cs", label="Entry System.Net.WebClient.WebClient()", span="0-0"];
m3_26 [cluster="System.Net.WebClient.DownloadString(string)", file="MemoizingEnumerableTests.cs", label="Entry System.Net.WebClient.DownloadString(string)", span="0-0"];
m3_15 [cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="MemoizingEnumerableTests.cs", label="var mbtc = JsonConvert.DeserializeObject<List<CryptoiqBitcoin>>(data)", span="71-71"];
m3_19 [cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="MemoizingEnumerableTests.cs", label="counter = counter.AddDays(1)", span="87-87"];
m3_28 [cluster="Unk.OrderBy", file="MemoizingEnumerableTests.cs", label="Entry Unk.OrderBy", span=""];
m3_29 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="MemoizingEnumerableTests.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m3_17 [cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="MemoizingEnumerableTests.cs", label="yield return new Tick\r\n                            {\r\n                                Time = item.Time,\r\n                                Symbol = symbol,\r\n                                Value = item.Last/_scaleFactor,\r\n                                AskPrice = item.Ask/_scaleFactor,\r\n                                BidPrice = item.Bid/_scaleFactor,\r\n                                TickType = TickType.Quote\r\n                            };", span="74-82"];
m3_16 [cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="MemoizingEnumerableTests.cs", label="mbtc.OrderBy(x => x.Time)", span="72-72"];
m3_30 [cluster="System.DateTime.AddDays(double)", file="MemoizingEnumerableTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m3_4 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="writer.WriteStartObject()", span="38-38"];
m3_5 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="writer.WritePropertyName(''$type'')", span="39-39"];
m3_8 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="writer.WriteValue(symbol.Value)", span="42-42"];
m3_10 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="writer.WriteValue(symbol.ID.ToString())", span="44-44"];
m3_13 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="writer.WriteEndObject()", span="47-47"];
m3_6 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", color=green, community=0, file="MemoizingEnumerableTests.cs", label="writer.WriteValue(''QuantConnect.Symbol, QuantConnect.Common'')", prediction=0, span="40-40"];
m3_7 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="writer.WritePropertyName(''Value'')", span="41-41"];
m3_11 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="writer.WritePropertyName(''Permtick'')", span="45-45"];
m3_9 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="writer.WritePropertyName(''ID'')", span="43-43"];
m3_12 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="writer.WriteValue(symbol.Value)", span="46-46"];
m3_14 [cluster="QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", file="MemoizingEnumerableTests.cs", label="Exit QuantConnect.SymbolJsonConverter.WriteJson(JsonWriter, object, JsonSerializer)", span="33-33"];
m3_20 [cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="MemoizingEnumerableTests.cs", label="hour = 0", span="88-88"];
m3_21 [cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="MemoizingEnumerableTests.cs", label="Exit QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="51-51"];
m3_27 [cluster="Unk.>", file="MemoizingEnumerableTests.cs", label="Entry Unk.>", span=""];
m3_22 [cluster="System.ArgumentException.ArgumentException(string)", file="MemoizingEnumerableTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m3_31 [cluster="lambda expression", file="MemoizingEnumerableTests.cs", label="Entry lambda expression", span="72-72"];
m3_32 [cluster="lambda expression", file="MemoizingEnumerableTests.cs", label="x.Time", span="72-72"];
m3_33 [cluster="lambda expression", file="MemoizingEnumerableTests.cs", label="Exit lambda expression", span="72-72"];
m3_34 [file="MemoizingEnumerableTests.cs", label="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader", span=""];
m6_23 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="305-305"];
m6_24 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="305-305"];
m6_25 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="305-305"];
m6_2 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateShortOrder(int)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateShortOrder(int)", span="28-28"];
m6_3 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateShortOrder(int)", file="RegressionTests.cs", label="return new MarketOrder(Symbol, -Math.Abs(quantity), DateTime.Now);", span="30-30"];
m6_4 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="30-30"];
m6_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''99.900%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0.453''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''48.714''},\r\n                {''Beta'', ''50.259''},\r\n                {''Annual Standard Deviation'', ''118.922''},\r\n                {''Annual Variance'', ''14142.47''},\r\n                {''Information Ratio'', ''0.452''},\r\n                {''Tracking Error'', ''118.917''},\r\n                {''Treynor Ratio'', ''1.072''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="147-168"];
m6_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.906''},\r\n                {''Beta'', ''0.018''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.648''},\r\n                {''Tracking Error'', ''0.236''},\r\n                {''Treynor Ratio'', ''50.372''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="170-191"];
m6_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.151''},\r\n                {''Beta'', ''-0.073''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.506''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''-1.873''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="193-214"];
m6_5 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.752''},\r\n                {''Beta'', ''0.186''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''1.316''},\r\n                {''Tracking Error'', ''0.246''},\r\n                {''Treynor Ratio'', ''4.572''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="32-53"];
m6_20 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="314-314"];
m6_28 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="316-316"];
m6_29 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="317-317"];
m6_30 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="318-318"];
m6_31 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="314-314"];
m6_27 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m6_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="RegressionTests.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n\r\n                // FSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", prediction=1, span="285-305"];
m6_6 [cluster="System.Math.Abs(int)", file="RegressionTests.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m6_7 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateLongOrder(int)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateLongOrder(int)", span="33-33"];
m6_8 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateLongOrder(int)", file="RegressionTests.cs", label="return new MarketOrder(Symbol, Math.Abs(quantity), DateTime.Now);", span="35-35"];
m6_9 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateLongOrder(int)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Brokerages.MarketOrderTestParameters.CreateLongOrder(int)", span="33-33"];
m6_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="QuantConnect.Tests.Brokerages.MarketOrderTestParameters", span=""];
m6_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.764''},\r\n                {''Beta'', ''0.186''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''1.957''},\r\n                {''Tracking Error'', ''0.171''},\r\n                {''Treynor Ratio'', ''4.634''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="239-260"];
m6_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=1, file="RegressionTests.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.774''},\r\n                {''Beta'', ''0.182''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''1.319''},\r\n                {''Tracking Error'', ''0.247''},\r\n                {''Treynor Ratio'', ''4.798''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", prediction=2, span="262-283"];
m6_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="30-30"];
m6_19 [cluster="System.Collections.Generic.List<T>.List()", file="RegressionTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_26 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m6_21 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m6_22 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m6_0 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.MarketOrderTestParameters(QuantConnect.Symbol)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Brokerages.MarketOrderTestParameters.MarketOrderTestParameters(QuantConnect.Symbol)", span="23-23"];
m6_1 [cluster="QuantConnect.Tests.Brokerages.MarketOrderTestParameters.MarketOrderTestParameters(QuantConnect.Symbol)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Brokerages.MarketOrderTestParameters.MarketOrderTestParameters(QuantConnect.Symbol)", span="23-23"];
m6_32 [file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
n352 -> n8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n70  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n71  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n81  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n89  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n130  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n138  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n152  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n153  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n168  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n172  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n175  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n191  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n193  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n194  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n201  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n202  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n206  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n210  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n212  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n214  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n219  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n220  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n227  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n228  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n230  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n231  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n237  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n241  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n244  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n247  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n249  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n250  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n252  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n254  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n260  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n270  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n274  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n279  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n289  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n297  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n301  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n305  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n306  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n324  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n326  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n327  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n328  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n329  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n330  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n344  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n331  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n332  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n347  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n333  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n334  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n350  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n335  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n336  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n352 -> n337  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.BacktestingResultHandler", style=dashed];
n59 -> n107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n59 -> n110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n59 -> n63  [color=darkseagreen4, key=1, label=deltaOrders, style=dashed];
n69 -> n72  [color=darkseagreen4, key=1, label=deltaCharts, style=dashed];
n73 -> n76  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
n73 -> n77  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
n73 -> n78  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
n73 -> n79  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
n73 -> n80  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
n73 -> n81  [color=darkseagreen4, key=1, label=runtimeStatistics, style=dashed];
n76 -> n76  [color=darkseagreen4, key=1, label=pair, style=dashed];
n86 -> n89  [color=darkseagreen4, key=1, label=complete, style=dashed];
n105 -> n131  [color=darkseagreen4, key=1, label="QuantConnect.Packets.Packet", style=dashed];
n105 -> n138  [color=darkseagreen4, key=1, label=bool, style=dashed];
n106 -> n114  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, QuantConnect.Chart>", style=dashed];
n113 -> n119  [color=darkseagreen4, key=1, label=splitPackets, style=dashed];
n115 -> n125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n128 -> n138  [color=darkseagreen4, key=1, label=serialized, style=dashed];
n129 -> n138  [color=darkseagreen4, key=1, label=key, style=dashed];
n135 -> n138  [color=darkseagreen4, key=1, label=key, style=dashed];
n145 -> n149  [color=darkseagreen4, key=1, label="QuantConnect.Statistics.StatisticsResults", style=dashed];
n151 -> n153  [color=darkseagreen4, key=1, label=result, style=dashed];
n163 -> n165  [color=darkseagreen4, key=1, label=resampleMinutes, style=dashed];
n171 -> n173  [color=darkseagreen4, key=1, label=types, style=dashed];
n171 -> n174  [color=darkseagreen4, key=1, label=types, style=dashed];
n171 -> n175  [color=darkseagreen4, key=1, label=types, style=dashed];
n172 -> n174  [color=darkseagreen4, key=1, label=security, style=dashed];
n190 -> n193  [color=darkseagreen4, key=1, label=string, style=dashed];
n190 -> n194  [color=darkseagreen4, key=1, label=string, style=dashed];
n200 -> n202  [color=darkseagreen4, key=1, label=string, style=dashed];
n209 -> n214  [color=darkseagreen4, key=1, label=string, style=dashed];
n218 -> n220  [color=darkseagreen4, key=1, label=string, style=dashed];
n225 -> n227  [color=darkseagreen4, key=1, label=string, style=dashed];
n225 -> n228  [color=darkseagreen4, key=1, label=string, style=dashed];
n225 -> n229  [color=darkseagreen4, key=1, label=string, style=dashed];
n225 -> n230  [color=darkseagreen4, key=1, label=string, style=dashed];
n225 -> n231  [color=darkseagreen4, key=1, label=string, style=dashed];
n246 -> n248  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Chart>", style=dashed];
n248 -> n250  [color=darkseagreen4, key=1, label=update, style=dashed];
n248 -> n251  [color=darkseagreen4, key=1, label=update, style=dashed];
n248 -> n252  [color=darkseagreen4, key=1, label=update, style=dashed];
n248 -> n254  [color=darkseagreen4, key=1, label=update, style=dashed];
n251 -> n254  [color=darkseagreen4, key=1, label=series, style=dashed];
n258 -> n260  [color=darkseagreen4, key=1, label=logURL, style=dashed];
n263 -> n298  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n263 -> n306  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n287 -> n305  [color=darkseagreen4, key=1, label=key, style=dashed];
n278 -> n290  [color=darkseagreen4, key=1, label=logLength, style=dashed];
n278 -> n306  [color=darkseagreen4, key=1, label=logLength, style=dashed];
n288 -> n306  [color=darkseagreen4, key=1, label=remoteUrl, style=dashed];
n288 -> n309  [color=darkseagreen4, key=1, label=remoteUrl, style=dashed];
n288 -> n310  [color=darkseagreen4, key=1, label=remoteUrl, style=dashed];
n292 -> n306  [color=darkseagreen4, key=1, label=logLength, style=dashed];
n284 -> n290  [color=darkseagreen4, key=1, label=logRemaining, style=dashed];
n293 -> n297  [color=darkseagreen4, key=1, label=btMax, style=dashed];
n294 -> n297  [color=darkseagreen4, key=1, label=dyMax, style=dashed];
n285 -> n306  [color=darkseagreen4, key=1, label=hitLimit, style=dashed];
n286 -> n291  [color=darkseagreen4, key=1, label=serialized, style=dashed];
n286 -> n302  [color=darkseagreen4, key=1, label=serialized, style=dashed];
n286 -> n303  [color=darkseagreen4, key=1, label=serialized, style=dashed];
n286 -> n305  [color=darkseagreen4, key=1, label=serialized, style=dashed];
n289 -> n291  [color=darkseagreen4, key=1, label=line, style=dashed];
n296 -> n302  [color=darkseagreen4, key=1, label=capNotice, style=dashed];
n299 -> n303  [color=darkseagreen4, key=1, label=requestMore, style=dashed];
n300 -> n303  [color=darkseagreen4, key=1, label=requestMore, style=dashed];
n304 -> n306  [color=darkseagreen4, key=1, label=hitLimit, style=dashed];
n322 -> n324  [color=darkseagreen4, key=1, label=bool, style=dashed];
n323 -> n326  [color=darkseagreen4, key=1, label=time, style=dashed];
n323 -> n329  [color=darkseagreen4, key=1, label=time, style=dashed];
n330 -> n343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n332 -> n346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n334 -> n349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n337 -> n337  [color=darkseagreen4, key=1, label=pair, style=dashed];
m1_8 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.PortfolioEvent", style=dashed];
m3_0 -> m3_6  [color=green, key=1, label=JsonWriter, style=dashed];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m3_0 -> m3_7  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m3_0 -> m3_8  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m3_0 -> m3_9  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m3_0 -> m3_10  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m3_0 -> m3_11  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m3_0 -> m3_12  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m3_0 -> m3_13  [color=darkseagreen4, key=1, label=JsonWriter, style=dashed];
m3_1 -> m3_8  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1 -> m3_10  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_1 -> m3_12  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m3_18 -> m3_18  [color=darkseagreen4, key=1, label=hour, style=dashed];
m3_16 -> m3_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_4 -> m3_8  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_4 -> m3_10  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_4 -> m3_13  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_8 -> m3_10  [color=darkseagreen4, key=1, label=counter, style=dashed];
m3_8 -> m3_13  [color=darkseagreen4, key=1, label=counter, style=dashed];
m3_7 -> m3_11  [color=darkseagreen4, key=1, label=hour, style=dashed];
m3_7 -> m3_13  [color=darkseagreen4, key=1, label=hour, style=dashed];
m3_7 -> m3_18  [color=darkseagreen4, key=1, label=hour, style=dashed];
m3_9 -> m3_13  [color=darkseagreen4, key=1, label=url, style=dashed];
m3_12 -> m3_14  [color=darkseagreen4, key=1, label=cl, style=dashed];
m3_34 -> m3_13  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloader", style=dashed];
m6_10 -> m6_16  [color=green, key=1, label=customDataRegressionStatistics, style=dashed];
m6_11 -> m6_16  [color=green, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m6_12 -> m6_16  [color=green, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m6_5 -> m6_16  [color=green, key=1, label=basicTemplateStatistics, style=dashed];
m6_16 -> m6_23  [color=green, key=1, label="lambda expression", style=dashed];
m6_6 -> m6_16  [color=green, key=1, label=limitFillRegressionStatistics, style=dashed];
m6_7 -> m6_16  [color=green, key=1, label=updateOrderRegressionStatistics, style=dashed];
m6_8 -> m6_16  [color=green, key=1, label=regressionStatistics, style=dashed];
m6_9 -> m6_16  [color=green, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m6_13 -> m6_16  [color=green, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m6_13 -> m6_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.MarketOrderTestParameters", style=dashed];
m6_13 -> m6_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.MarketOrderTestParameters", style=dashed];
m6_14 -> m6_16  [color=green, key=1, label=parameterizedStatistics, style=dashed];
}
